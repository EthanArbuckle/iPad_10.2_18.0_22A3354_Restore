unint64_t sub_1003DBC9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0BF0;
  if (!qword_1011B0BF0)
  {
    v1 = sub_100044B54(&qword_1011B0BE8);
    sub_100049F28(&qword_1011B0BF8, &qword_1011B0BB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011B0C00, &qword_1011B0BE0, (uint64_t)&protocol conformance descriptor for PlaybackSelection<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0BF0);
  }
  return result;
}

uint64_t type metadata accessor for PlayableView.TextStack(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B0CC0, (uint64_t)&nominal type descriptor for PlayableView.TextStack);
}

uint64_t type metadata accessor for PlayableView.ArtworkView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B0D50, (uint64_t)&nominal type descriptor for PlayableView.ArtworkView);
}

unint64_t sub_1003DBD78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0C48;
  if (!qword_1011B0C48)
  {
    v1 = sub_100044B54(&qword_1011B0C30);
    sub_1003DBDFC();
    sub_100049F28(&qword_1011B0C60, &qword_1011B0C28, (uint64_t)&protocol conformance descriptor for PlaybackSelection<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0C48);
  }
  return result;
}

unint64_t sub_1003DBDFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0C50;
  if (!qword_1011B0C50)
  {
    v1 = sub_100044B54(&qword_1011A2C88);
    sub_100049F28(&qword_1011B0C58, &qword_1011A2C80, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0C50);
  }
  return result;
}

uint64_t *sub_1003DBE80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v68;
  unsigned int (*v69)(uint64_t *, uint64_t, uint64_t);
  uint64_t v70;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    v69 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    v70 = v6;
    v68 = v7;
    if (v69(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v10 = (int *)type metadata accessor for Playable(0);
    v11 = v10[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v10[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v10[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for ArtworkImage.ViewModel(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v20, v21, v26);
      v27 = *(int *)(v22 + 20);
      v28 = &v20[v27];
      v29 = &v21[v27];
      v30 = type metadata accessor for Artwork.CropStyle(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v33 = v10[8];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
    {
      v38 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v35, 1, v39))
      {
        v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v34, v35, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v39);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 10, v36);
    }
    v42 = v10[9];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    v45 = v10[10];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(void **)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v69((uint64_t *)v52, 1, v70))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v51, v52, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v51, 0, 1, v70);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    v59 = v10[11];
    v60 = *(void **)((char *)a2 + v59);
    *(uint64_t *)((char *)a1 + v59) = (uint64_t)v60;
    v61 = v10[12];
    v62 = (uint64_t *)((char *)a1 + v61);
    v63 = (char *)a2 + v61;
    v64 = *(uint64_t *)((char *)a2 + v61);
    v65 = v60;
    if (v64)
    {
      v66 = *((_QWORD *)v63 + 1);
      *v62 = v64;
      v62[1] = v66;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

double sub_1003DC2FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  char *v18;
  double result;

  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v5 = (int *)type metadata accessor for Playable(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[6] + 8));
  v6 = a1 + v5[7];
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = v6 + *(int *)(v7 + 20);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  v12 = a1 + v5[8];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 10, v13))
  {
    v14 = type metadata accessor for Playlist.Variant(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }
  v16 = (id *)(a1 + v5[10]);

  v17 = type metadata accessor for SegueContext(0);
  v18 = (char *)v16 + *(int *)(v17 + 20);
  if (!v4((uint64_t)v18, 1, v2))
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v2);
  if (*(id *)((char *)v16 + *(int *)(v17 + 28)))
    swift_release();

  if (*(_QWORD *)(a1 + v5[12]))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1003DC520(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v68 = v5;
  v66 = v6;
  if (v67(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Playable(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for ArtworkImage.ViewModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v18, v19, v24);
    v25 = *(int *)(v20 + 20);
    v26 = &v18[v25];
    v27 = &v19[v25];
    v28 = type metadata accessor for Artwork.CropStyle(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v31 = v8[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 10, v34))
  {
    v36 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = type metadata accessor for Playlist.Variant(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, v37))
    {
      v39 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v33, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v32, 0, 1, v37);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
  }
  v40 = v8[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = v8[10];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = *(void **)&a2[v43];
  *(_QWORD *)&a1[v43] = v46;
  v47 = (int *)type metadata accessor for SegueContext(0);
  v48 = v47[5];
  v49 = &v44[v48];
  v50 = &v45[v48];
  v51 = v46;
  if (v67(v50, 1, v68))
  {
    v52 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v49, v50, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v49, 0, 1, v68);
  }
  v44[v47[6]] = v45[v47[6]];
  v53 = v47[7];
  v54 = &v44[v53];
  v55 = &v45[v53];
  if (*(_QWORD *)v55)
  {
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
  }
  v57 = v8[11];
  v58 = *(void **)&a2[v57];
  *(_QWORD *)&a1[v57] = v58;
  v59 = v8[12];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)&a2[v59];
  v63 = v58;
  if (v62)
  {
    v64 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = v62;
    *((_QWORD *)v60 + 1) = v64;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1003DC970(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void **v69;
  char *v70;
  void *v71;
  void *v72;
  id v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  void *__dst;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v102 = a3;
  v103 = v8;
  v100 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Playable(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = v12[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = v12[7];
  v22 = (uint64_t)&a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v38 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v22, v23, v38);
      v39 = *(int *)(v24 + 20);
      v40 = (void *)(v22 + v39);
      v41 = &v23[v39];
      v42 = type metadata accessor for Artwork.CropStyle(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v40, 1, v42);
      v46 = v44(v41, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v40, v41, v42);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
      }
      v35 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v36 = v40;
      v37 = v41;
LABEL_14:
      memcpy(v36, v37, v35);
      goto LABEL_21;
    }
    sub_10005B748(v22, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v35 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v36 = (void *)v22;
    v37 = v23;
    goto LABEL_14;
  }
  if (v28)
    goto LABEL_13;
  v29 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
  v30 = *(int *)(v24 + 20);
  __dst = (void *)(v22 + v30);
  v31 = &v23[v30];
  v32 = type metadata accessor for Artwork.CropStyle(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_21:
  v47 = v12[8];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 10, v50);
  v54 = v52(v49, 10, v50);
  if (!v53)
  {
    if (!v54)
    {
      v59 = type metadata accessor for Playlist.Variant(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v48, 1, v59);
      v63 = v61(v49, 1, v59);
      if (v62)
      {
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v48, v49, v59);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v48, 0, 1, v59);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v48, v49, v59);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v60 + 8))(v48, v59);
      }
      v58 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v48, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v58 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v54)
    goto LABEL_27;
  v55 = type metadata accessor for Playlist.Variant(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v49, 1, v55))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v48, v49, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v48, 0, 1, v55);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 10, v50);
LABEL_34:
  v64 = v12[9];
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = *(_QWORD *)v66;
  v65[8] = v66[8];
  *(_QWORD *)v65 = v67;
  v68 = v12[10];
  v69 = (void **)&a1[v68];
  v70 = &a2[v68];
  v71 = *(void **)&a2[v68];
  v72 = *v69;
  *v69 = v71;
  v73 = v71;

  v74 = (int *)type metadata accessor for SegueContext(0);
  v75 = v74[5];
  v76 = (char *)v69 + v75;
  v77 = &v70[v75];
  v78 = v103((char *)v69 + v75, 1, v6);
  v79 = v103(v77, 1, v6);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v76, v77, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v76, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v76, v6);
LABEL_39:
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 24))(v76, v77, v6);
LABEL_40:
  *((_BYTE *)v69 + v74[6]) = v70[v74[6]];
  v81 = v74[7];
  v82 = (void **)((char *)v69 + v81);
  v83 = &v70[v81];
  v84 = *(uint64_t *)((char *)v69 + v81);
  v85 = *(_QWORD *)v83;
  if (v84)
  {
    if (v85)
    {
      v86 = *((_QWORD *)v83 + 1);
      *v82 = v85;
      v82[1] = v86;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v85)
  {
    v87 = *((_QWORD *)v83 + 1);
    *v82 = v85;
    v82[1] = v87;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v82 = *(_OWORD *)v83;
LABEL_47:
  v88 = v12[11];
  v89 = *(void **)&a1[v88];
  v90 = *(void **)&a2[v88];
  *(_QWORD *)&a1[v88] = v90;
  v91 = v90;

  v92 = v12[12];
  v93 = &a1[v92];
  v94 = &a2[v92];
  v95 = *(_QWORD *)&a1[v92];
  v96 = *(_QWORD *)&a2[v92];
  if (!v95)
  {
    if (v96)
    {
      v98 = *((_QWORD *)v94 + 1);
      *(_QWORD *)v93 = v96;
      *((_QWORD *)v93 + 1) = v98;
      swift_retain();
      goto LABEL_54;
    }
LABEL_53:
    *(_OWORD *)v93 = *(_OWORD *)v94;
    goto LABEL_54;
  }
  if (!v96)
  {
    swift_release();
    goto LABEL_53;
  }
  v97 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = v96;
  *((_QWORD *)v93 + 1) = v97;
  swift_retain();
  swift_release();
LABEL_54:
  a1[*(int *)(v102 + 20)] = a2[*(int *)(v102 + 20)];
  return a1;
}

char *sub_1003DD0D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  int *v62;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v57 = v7;
  if (v8(a2, 1, v6))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = (int *)type metadata accessor for Playable(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
  v62 = v10;
  v11 = v10[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v58 = a3;
    v60 = v8;
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    v18 = *(int *)(v14 + 20);
    v19 = &v12[v18];
    v20 = &v13[v18];
    v21 = type metadata accessor for Artwork.CropStyle(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    a3 = v58;
    v8 = v60;
  }
  v24 = v62[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 10, v27))
  {
    v29 = v6;
    v30 = a3;
    v31 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v59 = a3;
    v61 = v8;
    v32 = type metadata accessor for Playlist.Variant(0);
    v33 = *(_QWORD *)(v32 - 8);
    v29 = v6;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v26, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v25, v26, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v25, 0, 1, v32);
    }
    v8 = v61;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 10, v27);
    v30 = v59;
  }
  v35 = v62[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = v62[10];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *(_QWORD *)&a1[v38] = *(_QWORD *)&a2[v38];
  v41 = (int *)type metadata accessor for SegueContext(0);
  v42 = v41[5];
  v43 = &v39[v42];
  v44 = &v40[v42];
  if (v8(&v40[v42], 1, v29))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v43, v44, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v43, 0, 1, v29);
  }
  v39[v41[6]] = v40[v41[6]];
  v46 = v41[7];
  v47 = &v39[v46];
  v48 = &v40[v46];
  v49 = *(_QWORD *)v48;
  if (*(_QWORD *)v48)
  {
    v50 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = v49;
    *((_QWORD *)v47 + 1) = v50;
  }
  else
  {
    *(_OWORD *)v47 = *(_OWORD *)v48;
  }
  *(_QWORD *)&a1[v62[11]] = *(_QWORD *)&a2[v62[11]];
  v51 = v62[12];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = *(_QWORD *)v53;
  if (*(_QWORD *)v53)
  {
    v55 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = v54;
    *((_QWORD *)v52 + 1) = v55;
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
  }
  a1[*(int *)(v30 + 20)] = a2[*(int *)(v30 + 20)];
  return a1;
}

char *sub_1003DD50C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  void *__dst;
  uint64_t v101;
  uint64_t (*v102)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v101 = a3;
  v102 = v8;
  v99 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Playable(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = (uint64_t)&a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30((uint64_t)v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      v42 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v26, v27, v42);
      v43 = *(int *)(v28 + 20);
      v44 = (void *)(v26 + v43);
      v45 = &v27[v43];
      v46 = type metadata accessor for Artwork.CropStyle(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
      v49 = v48(v44, 1, v46);
      v50 = v48(v45, 1, v46);
      if (v49)
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 40))(v44, v45, v46);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
      }
      v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v40 = v44;
      v41 = v45;
LABEL_14:
      memcpy(v40, v41, v39);
      goto LABEL_21;
    }
    sub_10005B748(v26, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v40 = (void *)v26;
    v41 = v27;
    goto LABEL_14;
  }
  if (v32)
    goto LABEL_13;
  v33 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v26, v27, v33);
  v34 = *(int *)(v28 + 20);
  __dst = (void *)(v26 + v34);
  v35 = &v27[v34];
  v36 = type metadata accessor for Artwork.CropStyle(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 32))(__dst, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_21:
  v51 = v12[8];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 10, v54);
  v58 = v56(v53, 10, v54);
  if (!v57)
  {
    if (!v58)
    {
      v63 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v63 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v52, 1, v63);
      v67 = v65(v53, 1, v63);
      if (v66)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v52, v53, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v52, 0, 1, v63);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v52, v53, v63);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v63);
      }
      v62 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v52, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v62 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v58)
    goto LABEL_27;
  v59 = type metadata accessor for Playlist.Variant(0);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v53, 1, v59))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v52, v53, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v52, 0, 1, v59);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 10, v54);
LABEL_34:
  v68 = v12[9];
  v69 = &a1[v68];
  v70 = &a2[v68];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v69[8] = v70[8];
  v71 = v12[10];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(void **)&a1[v71];
  *(_QWORD *)&a1[v71] = *(_QWORD *)&a2[v71];

  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = v102(&v72[v76], 1, v6);
  v80 = v102(v78, 1, v6);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v77, v78, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v77, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v77, v6);
LABEL_39:
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v99 + 40))(v77, v78, v6);
LABEL_40:
  v72[v75[6]] = v73[v75[6]];
  v82 = v75[7];
  v83 = &v72[v82];
  v84 = &v73[v82];
  v85 = *(_QWORD *)&v72[v82];
  v86 = *(_QWORD *)v84;
  if (v85)
  {
    if (v86)
    {
      v87 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = v86;
      *((_QWORD *)v83 + 1) = v87;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v86)
  {
    v88 = *((_QWORD *)v84 + 1);
    *(_QWORD *)v83 = v86;
    *((_QWORD *)v83 + 1) = v88;
    goto LABEL_47;
  }
  *(_OWORD *)v83 = *(_OWORD *)v84;
LABEL_47:
  v89 = v12[11];
  v90 = *(void **)&a1[v89];
  *(_QWORD *)&a1[v89] = *(_QWORD *)&a2[v89];

  v91 = v12[12];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v94 = *(_QWORD *)&a1[v91];
  v95 = *(_QWORD *)&a2[v91];
  if (!v94)
  {
    if (v95)
    {
      v97 = *((_QWORD *)v93 + 1);
      *(_QWORD *)v92 = v95;
      *((_QWORD *)v92 + 1) = v97;
      goto LABEL_54;
    }
LABEL_53:
    *(_OWORD *)v92 = *(_OWORD *)v93;
    goto LABEL_54;
  }
  if (!v95)
  {
    swift_release();
    goto LABEL_53;
  }
  v96 = *((_QWORD *)v93 + 1);
  *(_QWORD *)v92 = v95;
  *((_QWORD *)v92 + 1) = v96;
  swift_release();
LABEL_54:
  a1[*(int *)(v101 + 20)] = a2[*(int *)(v101 + 20)];
  return a1;
}

uint64_t sub_1003DDC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DDC38);
}

uint64_t sub_1003DDC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Playable(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1003DDCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DDCD0);
}

uint64_t sub_1003DDCD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Playable(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1003DDD48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Playable(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EB8B20;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1003DDDB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  unsigned int (*v73)(uint64_t *, uint64_t, uint64_t);
  uint64_t v74;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    v73 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    v74 = v6;
    v72 = v7;
    if (v73(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v10 = (int *)type metadata accessor for Playable(0);
    v11 = v10[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v10[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v10[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for ArtworkImage.ViewModel(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v20, v21, v26);
      v27 = *(int *)(v22 + 20);
      v28 = &v20[v27];
      v29 = &v21[v27];
      v30 = type metadata accessor for Artwork.CropStyle(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v33 = v10[8];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
    {
      v38 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v35, 1, v39))
      {
        v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v34, v35, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v39);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 10, v36);
    }
    v42 = v10[9];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    v45 = v10[10];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(void **)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v73((uint64_t *)v52, 1, v74))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v51, v52, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v51, 0, 1, v74);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    v59 = v10[11];
    v60 = *(void **)((char *)a2 + v59);
    *(uint64_t *)((char *)a1 + v59) = (uint64_t)v60;
    v61 = v10[12];
    v62 = (uint64_t *)((char *)a1 + v61);
    v63 = (char *)a2 + v61;
    v64 = *(uint64_t *)((char *)a2 + v61);
    v65 = v60;
    if (v64)
    {
      v66 = *((_QWORD *)v63 + 1);
      *v62 = v64;
      v62[1] = v66;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
    }
    v67 = *(int *)(a3 + 20);
    v68 = (char *)a1 + v67;
    v69 = (char *)a2 + v67;
    v70 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  }
  return a1;
}

uint64_t sub_1003DE258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Playable(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[6] + 8));
  v8 = a1 + v7[7];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[8];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = (id *)(a1 + v7[10]);

  v19 = type metadata accessor for SegueContext(0);
  v20 = (char *)v18 + *(int *)(v19 + 20);
  if (!v6((uint64_t)v20, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  if (*(id *)((char *)v18 + *(int *)(v19 + 28)))
    swift_release();

  if (*(_QWORD *)(a1 + v7[12]))
    swift_release();
  v21 = a1 + *(int *)(a2 + 20);
  v22 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

char *sub_1003DE498(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v72 = v5;
  v70 = v6;
  if (v71(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Playable(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for ArtworkImage.ViewModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v18, v19, v24);
    v25 = *(int *)(v20 + 20);
    v26 = &v18[v25];
    v27 = &v19[v25];
    v28 = type metadata accessor for Artwork.CropStyle(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v31 = v8[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 10, v34))
  {
    v36 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = type metadata accessor for Playlist.Variant(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, v37))
    {
      v39 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v33, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v32, 0, 1, v37);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
  }
  v40 = v8[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = v8[10];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = *(void **)&a2[v43];
  *(_QWORD *)&a1[v43] = v46;
  v47 = (int *)type metadata accessor for SegueContext(0);
  v48 = v47[5];
  v49 = &v44[v48];
  v50 = &v45[v48];
  v51 = v46;
  if (v71(v50, 1, v72))
  {
    v52 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v49, v50, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v49, 0, 1, v72);
  }
  v44[v47[6]] = v45[v47[6]];
  v53 = v47[7];
  v54 = &v44[v53];
  v55 = &v45[v53];
  if (*(_QWORD *)v55)
  {
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
  }
  v57 = v8[11];
  v58 = *(void **)&a2[v57];
  *(_QWORD *)&a1[v57] = v58;
  v59 = v8[12];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)&a2[v59];
  v63 = v58;
  if (v62)
  {
    v64 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = v62;
    *((_QWORD *)v60 + 1) = v64;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
  }
  v65 = *(int *)(a3 + 20);
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
  return a1;
}

char *sub_1003DE90C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void **v69;
  char *v70;
  void *v71;
  void *v72;
  id v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v104;
  void *__dst;
  uint64_t v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v106 = a3;
  v107 = v8;
  v104 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Playable(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = v12[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = v12[7];
  v22 = (uint64_t)&a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v38 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v22, v23, v38);
      v39 = *(int *)(v24 + 20);
      v40 = (void *)(v22 + v39);
      v41 = &v23[v39];
      v42 = type metadata accessor for Artwork.CropStyle(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v40, 1, v42);
      v46 = v44(v41, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v40, v41, v42);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
      }
      v35 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v36 = v40;
      v37 = v41;
LABEL_14:
      memcpy(v36, v37, v35);
      goto LABEL_21;
    }
    sub_10005B748(v22, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v35 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v36 = (void *)v22;
    v37 = v23;
    goto LABEL_14;
  }
  if (v28)
    goto LABEL_13;
  v29 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
  v30 = *(int *)(v24 + 20);
  __dst = (void *)(v22 + v30);
  v31 = &v23[v30];
  v32 = type metadata accessor for Artwork.CropStyle(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_21:
  v47 = v12[8];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 10, v50);
  v54 = v52(v49, 10, v50);
  if (!v53)
  {
    if (!v54)
    {
      v59 = type metadata accessor for Playlist.Variant(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v48, 1, v59);
      v63 = v61(v49, 1, v59);
      if (v62)
      {
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v48, v49, v59);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v48, 0, 1, v59);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v48, v49, v59);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v60 + 8))(v48, v59);
      }
      v58 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v48, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v58 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v54)
    goto LABEL_27;
  v55 = type metadata accessor for Playlist.Variant(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v49, 1, v55))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v48, v49, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v48, 0, 1, v55);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 10, v50);
LABEL_34:
  v64 = v12[9];
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = *(_QWORD *)v66;
  v65[8] = v66[8];
  *(_QWORD *)v65 = v67;
  v68 = v12[10];
  v69 = (void **)&a1[v68];
  v70 = &a2[v68];
  v71 = *(void **)&a2[v68];
  v72 = *v69;
  *v69 = v71;
  v73 = v71;

  v74 = (int *)type metadata accessor for SegueContext(0);
  v75 = v74[5];
  v76 = (char *)v69 + v75;
  v77 = &v70[v75];
  v78 = v107((char *)v69 + v75, 1, v6);
  v79 = v107(v77, 1, v6);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v76, v77, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v76, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v76, v6);
LABEL_39:
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v104 + 24))(v76, v77, v6);
LABEL_40:
  *((_BYTE *)v69 + v74[6]) = v70[v74[6]];
  v81 = v74[7];
  v82 = (void **)((char *)v69 + v81);
  v83 = &v70[v81];
  v84 = *(uint64_t *)((char *)v69 + v81);
  v85 = *(_QWORD *)v83;
  if (v84)
  {
    if (v85)
    {
      v86 = *((_QWORD *)v83 + 1);
      *v82 = v85;
      v82[1] = v86;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v85)
  {
    v87 = *((_QWORD *)v83 + 1);
    *v82 = v85;
    v82[1] = v87;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v82 = *(_OWORD *)v83;
LABEL_47:
  v88 = v12[11];
  v89 = *(void **)&a1[v88];
  v90 = *(void **)&a2[v88];
  *(_QWORD *)&a1[v88] = v90;
  v91 = v90;

  v92 = v12[12];
  v93 = &a1[v92];
  v94 = &a2[v92];
  v95 = *(_QWORD *)&a1[v92];
  v96 = *(_QWORD *)&a2[v92];
  if (!v95)
  {
    if (v96)
    {
      v98 = *((_QWORD *)v94 + 1);
      *(_QWORD *)v93 = v96;
      *((_QWORD *)v93 + 1) = v98;
      swift_retain();
      goto LABEL_54;
    }
LABEL_53:
    *(_OWORD *)v93 = *(_OWORD *)v94;
    goto LABEL_54;
  }
  if (!v96)
  {
    swift_release();
    goto LABEL_53;
  }
  v97 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = v96;
  *((_QWORD *)v93 + 1) = v97;
  swift_retain();
  swift_release();
LABEL_54:
  v99 = *(int *)(v106 + 20);
  v100 = &a1[v99];
  v101 = &a2[v99];
  v102 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 24))(v100, v101, v102);
  return a1;
}

char *sub_1003DF090(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  int *v66;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v61 = v7;
  if (v8(a2, 1, v6))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = (int *)type metadata accessor for Playable(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
  v66 = v10;
  v11 = v10[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v62 = a3;
    v64 = v8;
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    v18 = *(int *)(v14 + 20);
    v19 = &v12[v18];
    v20 = &v13[v18];
    v21 = type metadata accessor for Artwork.CropStyle(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    a3 = v62;
    v8 = v64;
  }
  v24 = v66[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 10, v27))
  {
    v29 = v6;
    v30 = a3;
    v31 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v63 = a3;
    v65 = v8;
    v32 = type metadata accessor for Playlist.Variant(0);
    v33 = *(_QWORD *)(v32 - 8);
    v29 = v6;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v26, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v25, v26, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v25, 0, 1, v32);
    }
    v8 = v65;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 10, v27);
    v30 = v63;
  }
  v35 = v66[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = v66[10];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *(_QWORD *)&a1[v38] = *(_QWORD *)&a2[v38];
  v41 = (int *)type metadata accessor for SegueContext(0);
  v42 = v41[5];
  v43 = &v39[v42];
  v44 = &v40[v42];
  if (v8(&v40[v42], 1, v29))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v43, v44, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v43, 0, 1, v29);
  }
  v39[v41[6]] = v40[v41[6]];
  v46 = v41[7];
  v47 = &v39[v46];
  v48 = &v40[v46];
  v49 = *(_QWORD *)v48;
  if (*(_QWORD *)v48)
  {
    v50 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = v49;
    *((_QWORD *)v47 + 1) = v50;
  }
  else
  {
    *(_OWORD *)v47 = *(_OWORD *)v48;
  }
  *(_QWORD *)&a1[v66[11]] = *(_QWORD *)&a2[v66[11]];
  v51 = v66[12];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = *(_QWORD *)v53;
  if (*(_QWORD *)v53)
  {
    v55 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = v54;
    *((_QWORD *)v52 + 1) = v55;
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
  }
  v56 = *(int *)(v30 + 20);
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
  return a1;
}

char *sub_1003DF4F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v103;
  void *__dst;
  uint64_t v105;
  uint64_t (*v106)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v105 = a3;
  v106 = v8;
  v103 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Playable(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = (uint64_t)&a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30((uint64_t)v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      v42 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v26, v27, v42);
      v43 = *(int *)(v28 + 20);
      v44 = (void *)(v26 + v43);
      v45 = &v27[v43];
      v46 = type metadata accessor for Artwork.CropStyle(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
      v49 = v48(v44, 1, v46);
      v50 = v48(v45, 1, v46);
      if (v49)
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 40))(v44, v45, v46);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
      }
      v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v40 = v44;
      v41 = v45;
LABEL_14:
      memcpy(v40, v41, v39);
      goto LABEL_21;
    }
    sub_10005B748(v26, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v40 = (void *)v26;
    v41 = v27;
    goto LABEL_14;
  }
  if (v32)
    goto LABEL_13;
  v33 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v26, v27, v33);
  v34 = *(int *)(v28 + 20);
  __dst = (void *)(v26 + v34);
  v35 = &v27[v34];
  v36 = type metadata accessor for Artwork.CropStyle(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 32))(__dst, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_21:
  v51 = v12[8];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 10, v54);
  v58 = v56(v53, 10, v54);
  if (!v57)
  {
    if (!v58)
    {
      v63 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v63 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v52, 1, v63);
      v67 = v65(v53, 1, v63);
      if (v66)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v52, v53, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v52, 0, 1, v63);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v52, v53, v63);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v63);
      }
      v62 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v52, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v62 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v58)
    goto LABEL_27;
  v59 = type metadata accessor for Playlist.Variant(0);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v53, 1, v59))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v52, v53, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v52, 0, 1, v59);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 10, v54);
LABEL_34:
  v68 = v12[9];
  v69 = &a1[v68];
  v70 = &a2[v68];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v69[8] = v70[8];
  v71 = v12[10];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(void **)&a1[v71];
  *(_QWORD *)&a1[v71] = *(_QWORD *)&a2[v71];

  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = v106(&v72[v76], 1, v6);
  v80 = v106(v78, 1, v6);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v77, v78, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v77, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v103 + 8))(v77, v6);
LABEL_39:
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v103 + 40))(v77, v78, v6);
LABEL_40:
  v72[v75[6]] = v73[v75[6]];
  v82 = v75[7];
  v83 = &v72[v82];
  v84 = &v73[v82];
  v85 = *(_QWORD *)&v72[v82];
  v86 = *(_QWORD *)v84;
  if (v85)
  {
    if (v86)
    {
      v87 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = v86;
      *((_QWORD *)v83 + 1) = v87;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v86)
  {
    v88 = *((_QWORD *)v84 + 1);
    *(_QWORD *)v83 = v86;
    *((_QWORD *)v83 + 1) = v88;
    goto LABEL_47;
  }
  *(_OWORD *)v83 = *(_OWORD *)v84;
LABEL_47:
  v89 = v12[11];
  v90 = *(void **)&a1[v89];
  *(_QWORD *)&a1[v89] = *(_QWORD *)&a2[v89];

  v91 = v12[12];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v94 = *(_QWORD *)&a1[v91];
  v95 = *(_QWORD *)&a2[v91];
  if (!v94)
  {
    if (v95)
    {
      v97 = *((_QWORD *)v93 + 1);
      *(_QWORD *)v92 = v95;
      *((_QWORD *)v92 + 1) = v97;
      goto LABEL_54;
    }
LABEL_53:
    *(_OWORD *)v92 = *(_OWORD *)v93;
    goto LABEL_54;
  }
  if (!v95)
  {
    swift_release();
    goto LABEL_53;
  }
  v96 = *((_QWORD *)v93 + 1);
  *(_QWORD *)v92 = v95;
  *((_QWORD *)v92 + 1) = v96;
  swift_release();
LABEL_54:
  v98 = *(int *)(v105 + 20);
  v99 = &a1[v98];
  v100 = &a2[v98];
  v101 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 40))(v99, v100, v101);
  return a1;
}

uint64_t sub_1003DFC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DFC40);
}

uint64_t sub_1003DFC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Playable(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1003DFCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DFCC4);
}

uint64_t sub_1003DFCC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Playable(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(qword_1011C9550);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003DFD44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Playable(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000F6458(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_1003DFDC8()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  ValueMetadata *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v0 = sub_100044B54(&qword_1011B0B60);
  v3 = sub_100044B54(&qword_1011B0B58);
  v4 = &type metadata for ActionType;
  v5 = sub_100044B54(&qword_1011AC3B0);
  v6 = sub_1003DB838();
  v7 = sub_1000E3EE4();
  v8 = sub_100314AC0();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v3 = v0;
  v4 = (ValueMetadata *)OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
}

uint64_t sub_1003DFE7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9E814, 1);
}

uint64_t sub_1003DFE8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9E7EC, 1);
}

double sub_1003DFEAC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100055BBC(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

double sub_1003DFEE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100055BAC(a1, a2, a3 & 1);
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

unint64_t sub_1003DFF24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0DD0;
  if (!qword_1011B0DD0)
  {
    v1 = sub_100044B54(&qword_1011B0DC8);
    sub_100049F28(&qword_1011B0DD8, &qword_1011A05D0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011B0DE0, &qword_1011B0DC0, (uint64_t)&protocol conformance descriptor for PlaybackSelection<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0DD0);
  }
  return result;
}

uint64_t sub_1003DFFC0()
{
  return sub_100049F28(&qword_1011B0DE8, &qword_1011B0DF0, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1003DFFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;

  v0 = sub_100044B54((uint64_t *)&unk_1011C9250);
  v1 = sub_100044B54((uint64_t *)&unk_1011C4FE0);
  v5 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v6 = sub_1000E4264();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v5 = v1;
  v6 = OpaqueTypeConformance2;
  v3 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v5 = v0;
  v6 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
}

uint64_t sub_1003E0090()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124CEC8);
  sub_100048B14(v0, (uint64_t)qword_10124CEC8);
  return static Logger.music(_:)(0x6E65746E49707041, 0xEA00000000007374);
}

uint64_t sub_1003E00F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, __n128);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  char v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v72 = a7;
  v76 = a3;
  v81 = a1;
  v13 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v82 = *(_QWORD *)(v13 - 8);
  v83 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = a5;
  v16 = type metadata accessor for Optional(0, a5);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v80 = (char *)&v68 - v21;
  v22 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v22);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v77 = (char *)&v68 - v27;
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a6 + 8))(a4, a6, v26);
  v78 = a8;
  v79 = v15;
  v75 = a2;
  v73 = v19;
  if (v28)
  {
    v29 = v28;
    if (*(_QWORD *)(v28 + 16) && (v30 = sub_10079C3DC(v81), (v31 & 1) != 0))
    {
      v32 = v30;
      v33 = *(_QWORD *)(v29 + 56);
      v34 = type metadata accessor for VideoArtwork(0);
      v35 = *(_QWORD *)(v34 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v24, v33 + *(_QWORD *)(v35 + 72) * v32, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v24, 0, 1, v34);
    }
    else
    {
      v34 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v24, 1, 1, v34);
    }
    v36 = swift_bridgeObjectRelease(v29);
  }
  else
  {
    v34 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v24, 1, 1, v34);
  }
  v37 = v82;
  v38 = v83;
  v39 = (uint64_t)v24;
  v40 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v41 = v80;
  v40(v80, v76, v16, v36);
  v42 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v79, v81, v38);
  type metadata accessor for VideoArtwork(0);
  v81 = v16;
  v43 = v42;
  v44 = *(_QWORD *)(v34 - 8);
  v45 = v34;
  v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v46(v39, 1, v45) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v43, v38);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v41, v81);
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 32);
    v53 = (uint64_t)v77;
    v52(v77, v39, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v53, 0, 1, v45);
    v54 = v78;
    goto LABEL_24;
  }
  v69 = v46;
  v70 = v45;
  v76 = v39;
  v71 = v17;
  v47 = v73;
  v48 = v81;
  ((void (*)(char *, char *, uint64_t))v40)(v73, v41, v81);
  v49 = v74;
  v50 = *(_QWORD *)(v74 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v47, 1, v74) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v43, v83);
    v51 = *(void (**)(char *, uint64_t))(v71 + 8);
    v51(v41, v48);
    v51(v47, v48);
  }
  else
  {
    v55 = (*(uint64_t (**)(uint64_t))(v72 + 8))(v49);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v49);
    if (v55)
    {
      v53 = (uint64_t)v77;
      v54 = v78;
      v56 = v44;
      v45 = v70;
      if (*(_QWORD *)(v55 + 16))
      {
        v57 = sub_10079C3DC(v43);
        v58 = v69;
        if ((v59 & 1) != 0)
        {
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v56 + 16))(v53, *(_QWORD *)(v55 + 56) + *(_QWORD *)(v56 + 72) * v57, v45);
          v60 = 0;
        }
        else
        {
          v60 = 1;
        }
      }
      else
      {
        v60 = 1;
        v58 = v69;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v53, v60, 1, v45);
      v61 = swift_bridgeObjectRelease(v55);
      (*(void (**)(uint64_t, uint64_t, __n128))(v82 + 8))(v43, v83, v61);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v48);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v43, v83);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v48);
  }
  v53 = (uint64_t)v77;
  v54 = v78;
  v56 = v44;
  v58 = v69;
  v45 = v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v77, 1, 1, v70);
LABEL_21:
  sub_1003E062C(v76);
  if (v58(v53, 1, v45) == 1)
  {
    sub_1003E062C(v53);
    v62 = type metadata accessor for MotionViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v54, 1, 1, v62);
  }
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 32);
LABEL_24:
  v52(v54, v53, v45);
  v64 = type metadata accessor for MotionViewModel(0);
  v65 = &v54[*(int *)(v64 + 20)];
  v66 = type metadata accessor for Artwork.CropStyle(0);
  v67 = *(_QWORD *)(v66 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v65, v75, v66);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v65, 0, 1, v66);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v54, 0, 1, v64);
}

uint64_t sub_1003E062C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011BCC50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003E066C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  _QWORD v34[2];

  v7 = a3 & 1;
  v8 = sub_100007E8C(&qword_1011B0E90);
  __chkstk_darwin(v8);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v10[*(int *)(v11 + 44)];
  v13 = type metadata accessor for TabSelectionManager(0);
  v14 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v12 = EnvironmentObject.init()(v13, v14);
  *((_QWORD *)v12 + 1) = v15;
  v16 = &v10[*(int *)(v8 + 48)];
  *(_QWORD *)v16 = sub_1003E228C;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 0;
  *v10 = 2;
  sub_1006DB9DC(2);
  *((_QWORD *)v10 + 1) = v17;
  *((_QWORD *)v10 + 2) = v18;
  v19 = type metadata accessor for JSTabComponentController(0);
  v20 = sub_100048748(&qword_1011B0E30, type metadata accessor for JSTabComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v21 = StateObject.wrappedValue.getter(a1, a2, v7, v19, v20);
  v22 = type metadata accessor for JSComponentController(0);
  v23 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v24 = ObservedObject.init(wrappedValue:)(v21, v22, v23);
  v26 = v25;
  v34[0] = v24;
  v34[1] = v25;
  v27 = AccessibilityIdentifier.browseContentView.unsafeMutableAddressor();
  v28 = *v27;
  v29 = v27[1];
  v30 = sub_1000A05E8();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v28, v29, &type metadata for CatalogComponentView, v30);

  swift_bridgeObjectRelease(v29);
  KeyPath = swift_getKeyPath(&unk_100EB8EA8);
  sub_10004A160((uint64_t)v10, a4, &qword_1011B0E90);
  v32 = a4 + *(int *)(sub_100007E8C(&qword_1011B0E98) + 36);
  *(_QWORD *)v32 = KeyPath;
  *(_OWORD *)(v32 + 8) = xmmword_100EB8C90;
  return sub_10004FF60((uint64_t)v10, &qword_1011B0E90);
}

uint64_t sub_1003E0888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  _QWORD v40[4];

  v7 = a3 & 1;
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B0E90);
  __chkstk_darwin(v14);
  v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v16[*(int *)(v17 + 44)];
  v19 = type metadata accessor for TabSelectionManager(0);
  v20 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v18 = EnvironmentObject.init()(v19, v20);
  *((_QWORD *)v18 + 1) = v21;
  v22 = &v16[*(int *)(v14 + 48)];
  *(_QWORD *)v22 = sub_1003E228C;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  *v16 = 3;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x6F69646152, 0xE500000000000000);
  static Locale.current.getter(v23);
  *((_QWORD *)v16 + 1) = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, 0, v10, "Tab name for 'Radio'", 20, 2);
  *((_QWORD *)v16 + 2) = v24;
  v25 = type metadata accessor for JSTabComponentController(0);
  v26 = sub_100048748(&qword_1011B0E30, type metadata accessor for JSTabComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v27 = StateObject.wrappedValue.getter(a1, a2, v7, v25, v26);
  v28 = type metadata accessor for JSComponentController(0);
  v29 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v30 = ObservedObject.init(wrappedValue:)(v27, v28, v29);
  v32 = v31;
  v40[1] = v30;
  v40[2] = v31;
  v33 = AccessibilityIdentifier.radioContentView.unsafeMutableAddressor();
  v34 = *v33;
  v35 = v33[1];
  v36 = sub_1000A05E8();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v34, v35, &type metadata for CatalogComponentView, v36);

  swift_bridgeObjectRelease(v35);
  KeyPath = swift_getKeyPath(&unk_100EB8EA8);
  sub_10004A160((uint64_t)v16, a4, &qword_1011B0E90);
  v38 = a4 + *(int *)(sub_100007E8C(&qword_1011B0E98) + 36);
  *(_QWORD *)v38 = KeyPath;
  *(_OWORD *)(v38 + 8) = xmmword_100EB8C90;
  return sub_10004FF60((uint64_t)v16, &qword_1011B0E90);
}

uint64_t sub_1003E0B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  _QWORD v40[4];

  v7 = a3 & 1;
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B0E90);
  __chkstk_darwin(v14);
  v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v16[*(int *)(v17 + 44)];
  v19 = type metadata accessor for TabSelectionManager(0);
  v20 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v18 = EnvironmentObject.init()(v19, v20);
  *((_QWORD *)v18 + 1) = v21;
  v22 = &v16[*(int *)(v14 + 48)];
  *(_QWORD *)v22 = sub_1003E228C;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  *v16 = 5;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x736F65646956, 0xE600000000000000);
  static Locale.current.getter(v23);
  *((_QWORD *)v16 + 1) = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, 0, v10, "Tab name for 'Videos'", 21, 2);
  *((_QWORD *)v16 + 2) = v24;
  v25 = type metadata accessor for JSTabComponentController(0);
  v26 = sub_100048748(&qword_1011B0E30, type metadata accessor for JSTabComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v27 = StateObject.wrappedValue.getter(a1, a2, v7, v25, v26);
  v28 = type metadata accessor for JSComponentController(0);
  v29 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v30 = ObservedObject.init(wrappedValue:)(v27, v28, v29);
  v32 = v31;
  v40[1] = v30;
  v40[2] = v31;
  v33 = AccessibilityIdentifier.videosContentView.unsafeMutableAddressor();
  v34 = *v33;
  v35 = v33[1];
  v36 = sub_1000A05E8();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v34, v35, &type metadata for CatalogComponentView, v36);

  swift_bridgeObjectRelease(v35);
  KeyPath = swift_getKeyPath(&unk_100EB8EA8);
  sub_10004A160((uint64_t)v16, a4, &qword_1011B0E90);
  v38 = a4 + *(int *)(sub_100007E8C(&qword_1011B0E98) + 36);
  *(_QWORD *)v38 = KeyPath;
  *(_OWORD *)(v38 + 8) = xmmword_100EB8C90;
  return sub_10004FF60((uint64_t)v16, &qword_1011B0E90);
}

uint64_t sub_1003E0E18()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v12[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(1701670728, 0xE400000000000000);
  static Locale.current.getter(v6);
  v7 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Tab name for 'Home' (ex 'Listen Now')", 37, 2);
  v9 = v8;
  v10 = objc_allocWithZone((Class)type metadata accessor for JSTabComponentController(0));
  return JSTabComponentController.init(identifier:)(0, v7, v9);
}

uint64_t sub_1003E0F10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  _BYTE v24[16];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100007E8C(&qword_1011B0E10);
  __chkstk_darwin(v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_OWORD *)v1;
  v28 = *(_BYTE *)(v1 + 16);
  v26 = *(_OWORD *)(v1 + 24);
  v27 = v12;
  v25 = *(_OWORD *)(v1 + 40);
  v14 = &v11[*(int *)(v13 + 44)];
  sub_1003E3438((uint64_t)&v27);
  sub_1003E3468((uint64_t)&v26);
  sub_1000F4330(&v25);
  v15 = type metadata accessor for TabSelectionManager(0);
  v16 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v14 = EnvironmentObject.init()(v15, v16);
  v14[1] = v17;
  v18 = &v11[*(int *)(v9 + 48)];
  *(_QWORD *)v18 = sub_1003E228C;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 0;
  *v11 = 1;
  v19 = String.LocalizationValue.init(stringLiteral:)(1701670728, 0xE400000000000000);
  static Locale.current.getter(v19);
  *((_QWORD *)v11 + 1) = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, "Tab name for 'Home' (ex 'Listen Now')", 37, 2);
  *((_QWORD *)v11 + 2) = v20;
  sub_1003E1154(v1, (uint64_t)&v11[*(int *)(v9 + 40)]);
  sub_1003E3490((uint64_t)&v27);
  sub_1003E34C0((uint64_t)&v26);
  sub_1000F4038(&v25);
  KeyPath = swift_getKeyPath(&unk_100EB8EA8);
  sub_10004A160((uint64_t)v11, a1, &qword_1011B0E10);
  v22 = a1 + *(int *)(sub_100007E8C(&qword_1011B0E18) + 36);
  *(_QWORD *)v22 = KeyPath;
  *(_OWORD *)(v22 + 8) = xmmword_100EB8C90;
  return sub_10004FF60((uint64_t)v11, &qword_1011B0E10);
}

uint64_t sub_1003E1154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  ValueMetadata *v32;
  char *v33;
  ValueMetadata *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[16];
  uint64_t v49;
  ValueMetadata *v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;

  v47 = a2;
  v3 = sub_100007E8C(&qword_1011B0E20);
  v4 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v44 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B0E28);
  v8 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  v46 = v8;
  __chkstk_darwin(v7);
  v42 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)a1;
  v11 = *(void **)(a1 + 8);
  v12 = *(unsigned __int8 *)(a1 + 16);
  v13 = type metadata accessor for JSTabComponentController(0);
  v14 = sub_100048748(&qword_1011B0E30, type metadata accessor for JSTabComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v15 = StateObject.wrappedValue.getter(v10, v11, v12, v13, v14);
  v16 = type metadata accessor for JSComponentController(0);
  v17 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v50 = (ValueMetadata *)ObservedObject.init(wrappedValue:)(v15, v16, v17);
  v51 = v18;
  v19 = (void *)StateObject.wrappedValue.getter(v10, v11, v12, v13, v14);
  v20 = JSComponentController.viewModelKind.getter();

  v54 = v20;
  v21 = *(_OWORD *)(a1 + 24);
  v55 = *(_OWORD *)(a1 + 40);
  v56 = v21;
  v22 = swift_allocObject(&unk_1010C37B8, 72, 7);
  v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v22 + 32) = v23;
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v22 + 64) = *(_QWORD *)(a1 + 48);
  sub_1003E2E90(v10, v11, v12);
  sub_1003E3468((uint64_t)&v56);
  sub_1000F4330(&v55);
  v24 = (void *)sub_100007E8C(&qword_1011B0E38);
  v25 = sub_1000A05E8();
  v26 = sub_1003E3530();
  View.onChange<A>(of:initial:_:)(&v54, 0, sub_1003E3528, v22, &type metadata for CatalogComponentView, v24, v25, v26);
  swift_release();
  sub_100231E18(v54);

  v49 = a1;
  v27 = (void *)sub_100007E8C(&qword_1011B0E50);
  v50 = &type metadata for CatalogComponentView;
  v51 = v24;
  v52 = v25;
  v53 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v50, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v29 = sub_100044B54(&qword_1011B0E58);
  v30 = (void *)sub_100049F28(&qword_1011B0E60, &qword_1011B0E58, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  v50 = (ValueMetadata *)v29;
  v51 = v30;
  v31 = swift_getOpaqueTypeConformance2(&v50, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v33 = v42;
  v32 = (ValueMetadata *)v43;
  View.toolbar<A>(content:)(sub_1003E35D8, v48, v43, v27, OpaqueTypeConformance2, v31);
  v34 = v32;
  (*(void (**)(char *, ValueMetadata *))(v44 + 8))(v6, v32);
  v35 = AccessibilityIdentifier.listenNowContentView.unsafeMutableAddressor();
  v36 = *v35;
  v37 = v35[1];
  swift_bridgeObjectRetain();
  v50 = v34;
  v51 = v27;
  v52 = OpaqueTypeConformance2;
  v53 = v31;
  v38 = swift_getOpaqueTypeConformance2(&v50, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v39 = v45;
  View.accessibilityIdentifier(_:)(v36, v37, v45, v38);
  v40 = swift_bridgeObjectRelease(v37);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v46 + 8))(v33, v39, v40);
}

void sub_1003E14C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  v4 = *a3;
  v5 = a3[1];
  v6 = *((unsigned __int8 *)a3 + 16);
  v7 = type metadata accessor for JSTabComponentController(0);
  v8 = sub_100048748(&qword_1011B0E30, type metadata accessor for JSTabComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v9 = (void *)StateObject.wrappedValue.getter(v4, v5, v6, v7, v8);
  v10 = JSComponentController.viewModelKind.getter();

  sub_100231E18(v10);
  if ((~v10 & 0xF000000000000007) != 0)
  {
    v13 = *(_OWORD *)(a3 + 3);
    v12 = 1;
    v11 = sub_100007E8C(&qword_1011C4DD0);
    State.wrappedValue.setter(&v12, v11);
  }
}

uint64_t sub_1003E1590(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_1011B0E58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.navigationBarTrailing.getter(v9);
  v15 = a1;
  v10 = sub_100007E8C(&qword_1011B0E68);
  v11 = sub_1003E35E8();
  ToolbarItemGroup.init(placement:content:)(v4, sub_1003E35E0, v14, v10, v11);
  v12 = sub_100049F28(&qword_1011B0E60, &qword_1011B0E58, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003E16C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for ListenNowView.AccountButton(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011B0E68);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 40))
  {
    KeyPath = swift_getKeyPath(&unk_100EB8ED0);
    v11 = swift_getKeyPath(&unk_100EB8EF8);
    swift_retain();
    static Published.subscript.getter(v6, v12, KeyPath, v11);
    swift_release();
    swift_release();
    swift_release();
    v13 = (_QWORD *)((char *)v6 + *(int *)(v4 + 20));
    v14 = sub_100007E8C(&qword_1011B0E80);
    v15 = sub_100049F28(&qword_1011B0E88, &qword_1011B0E80, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *v13 = EnvironmentObject.init()(v14, v15);
    v13[1] = v16;
    v17 = sub_100048748(&qword_1011B0E78, type metadata accessor for ListenNowView.AccountButton, (uint64_t)&unk_100EB9000);
    View.placeholderStyle(_:)((uint64_t)sub_1003E18A4, 0, v4, v17);
    sub_10005B748((uint64_t)v6, type metadata accessor for ListenNowView.AccountButton);
    return sub_1003E36C8((uint64_t)v9, a2);
  }
  else
  {
    v19 = *(_QWORD *)(a1 + 48);
    v20 = type metadata accessor for UserProfileObserver(0);
    v21 = sub_100048748(&qword_1011A3260, type metadata accessor for UserProfileObserver, (uint64_t)&unk_100EAB178);
    result = EnvironmentObject.error()(0, v19, v20, v21);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003E18A4(uint64_t a1)
{
  _BYTE v2[24];
  void *v3;
  void *v4;

  v3 = &type metadata for ForegroundStyle;
  v4 = &protocol witness table for ForegroundStyle;
  return sub_10038CD48((uint64_t)v2, a1);
}

uint64_t sub_1003E18DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73[16];
  uint64_t v74;

  v2 = v1;
  v71 = a1;
  v3 = type metadata accessor for ControlSize(0);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  __chkstk_darwin(v3);
  v68 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ButtonBorderShape(0);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  __chkstk_darwin(v5);
  v57 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B0FE0);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011B0FE8);
  __chkstk_darwin(v61);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for BorderlessButtonStyle(0);
  v67 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v58 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ListenNowView.AccountButton(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011B0FF0);
  v64 = *(_QWORD *)(v17 - 8);
  v59 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011B0FF8);
  __chkstk_darwin(v60);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v16, type metadata accessor for ListenNowView.AccountButton);
  v22 = *(unsigned __int8 *)(v14 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_1010C3838, v23 + v15, v22 | 7);
  sub_10005B6C0((uint64_t)v16, v24 + v23, type metadata accessor for ListenNowView.AccountButton);
  v74 = v2;
  v25 = sub_100007E8C(&qword_1011B1000);
  v26 = sub_1003E4908();
  v27 = Button.init(action:label:)(sub_1003E48D4, v24, sub_1003E4900, v73, v25, v26);
  v28 = v58;
  BorderlessButtonStyle.init()(v27);
  v29 = sub_100049F28(&qword_1011B1018, &qword_1011B0FF0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v30 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v31 = View.buttonStyle<A>(_:)(v28, v17, v72, v29, v30);
  v32 = v57;
  static ButtonBorderShape.circle.getter(v31);
  KeyPath = swift_getKeyPath(&unk_100EB9050);
  v34 = (uint64_t *)&v11[*(int *)(v61 + 36)];
  v35 = sub_100007E8C(&qword_1011A0610);
  v37 = v65;
  v36 = v66;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))((char *)v34 + *(int *)(v35 + 28), v32, v66);
  *v34 = KeyPath;
  v39 = v62;
  v38 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v11, v9, v63);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v36);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v38);
  v41 = v68;
  v40 = v69;
  v42 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, enum case for ControlSize.regular(_:), v70);
  v43 = swift_getKeyPath(&unk_100EB9080);
  v44 = v60;
  v45 = (uint64_t *)&v21[*(int *)(v60 + 36)];
  v46 = sub_100007E8C(&qword_1011A0618);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v45 + *(int *)(v46 + 28), v41, v42);
  *v45 = v43;
  sub_10004A160((uint64_t)v11, (uint64_t)v21, &qword_1011B0FE8);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  sub_10004FF60((uint64_t)v11, &qword_1011B0FE8);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v28, v72);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v19, v59);
  v47 = LocalizedStringKey.init(stringLiteral:)(0x756F63634120794DLL, 0xEA0000000000746ELL);
  v48 = Text.init(_:tableName:bundle:comment:)(v47);
  v50 = v49;
  v52 = v51;
  v54 = v53 & 1;
  v55 = sub_1003E499C();
  View.accessibility(label:)(v48, v50, v54, v52, v44, v55);
  sub_100055BAC(v48, v50, v54);
  swift_bridgeObjectRelease(v52);
  return sub_10004FF60((uint64_t)v21, &qword_1011B0FF8);
}

void sub_1003E1DF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)(a1 + *(int *)(type metadata accessor for ListenNowView.AccountButton(0) + 20));
  if (*v1)
  {
    swift_retain();
    PresentedViewState.present(_:animated:)(v2, 0);
    swift_release();
  }
  else
  {
    v3 = v1[1];
    v4 = sub_100007E8C(&qword_1011B0E80);
    v5 = sub_100049F28(&qword_1011B0E88, &qword_1011B0E80, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    EnvironmentObject.error()(0, v3, v4, v5);
    __break(1u);
  }
}

uint64_t sub_1003E1E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  _OWORD v18[3];

  v4 = type metadata accessor for AvatarArtworkView(0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v18 - v8;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011A2290);
  v10 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v10 = swift_getKeyPath(&unk_100EB90B0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  v12 = sub_10005B6C0((uint64_t)v6, (uint64_t)v9, type metadata accessor for AvatarArtworkView);
  v13 = static Alignment.center.getter(v12);
  _FrameLayout.init(width:height:alignment:)(v18, 0x4046000000000000, 0, 0, 1, v13, v14);
  sub_10005B704((uint64_t)v9, a2, type metadata accessor for AvatarArtworkView);
  v15 = (_OWORD *)(a2 + *(int *)(sub_100007E8C(&qword_1011B1000) + 36));
  v16 = v18[1];
  *v15 = v18[0];
  v15[1] = v16;
  v15[2] = v18[2];
  return sub_10005B748((uint64_t)v9, type metadata accessor for AvatarArtworkView);
}

uint64_t sub_1003E1FE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1003E0F10(a1);
}

uint64_t sub_1003E2024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  sub_1006DB9DC(2);
  v1 = v0;
  v3 = v2;
  v4 = objc_allocWithZone((Class)type metadata accessor for JSTabComponentController(0));
  return JSTabComponentController.init(identifier:)(1, v1, v3);
}

uint64_t sub_1003E2070@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003E066C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1003E207C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v12[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0x6F69646152, 0xE500000000000000);
  static Locale.current.getter(v6);
  v7 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Tab name for 'Radio'", 20, 2);
  v9 = v8;
  v10 = objc_allocWithZone((Class)type metadata accessor for JSTabComponentController(0));
  return JSTabComponentController.init(identifier:)(2, v7, v9);
}

uint64_t sub_1003E2178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003E0888(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1003E2184()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v12[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0x736F65646956, 0xE600000000000000);
  static Locale.current.getter(v6);
  v7 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Tab name for 'Videos'", 21, 2);
  v9 = v8;
  v10 = objc_allocWithZone((Class)type metadata accessor for JSTabComponentController(0));
  return JSTabComponentController.init(identifier:)(3, v7, v9);
}

uint64_t sub_1003E2280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003E0B50(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1003E228C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _BYTE v5[24];

  v0 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), v5, 33, 0);
  v4 = _swiftEmptyArrayStorage;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
  Published.init(initialValue:)(&v4, v2);
  swift_endAccess(v5);
  return v1;
}

uint64_t sub_1003E231C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = *((unsigned __int8 *)v3 + 16);
  v7 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v8 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  return a2(v4, v5, v6, v7, v8);
}

uint64_t sub_1003E23A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t WitnessTable;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[16];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  __int128 v91;
  void *v92;

  v3 = v2;
  v75 = a2;
  v73 = *(_QWORD *)(a1 - 8);
  v74 = *(_QWORD *)(v73 + 64);
  __chkstk_darwin(a1);
  v72 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100044B54((uint64_t *)&unk_1011D11C0);
  v66 = v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = sub_100055B68();
  v90 = v7;
  *(_QWORD *)&v91 = &type metadata for String;
  v76 = v8;
  v77 = v7;
  *((_QWORD *)&v91 + 1) = v8;
  v92 = (void *)v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v90, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 0);
  v11 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, &type metadata for NavigationDestinationPushing);
  v90 = v7;
  *(_QWORD *)&v91 = &type metadata for String;
  *((_QWORD *)&v91 + 1) = v8;
  v92 = (void *)v9;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v13 = sub_1003E4B30();
  v88 = OpaqueTypeConformance2;
  v89 = v13;
  v65 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v14 = type metadata accessor for NavigationStack(0, v6, v11, WitnessTable);
  v67 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v61 = (char *)&v56 - v15;
  v16 = type metadata accessor for PushPendingNavigationItemModifier(255);
  v17 = type metadata accessor for ModifiedContent(0, v14, v16);
  v70 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v59 = (char *)&v56 - v18;
  v19 = sub_100044B54(&qword_1011D1220);
  v20 = type metadata accessor for ModifiedContent(0, v17, v19);
  v71 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v60 = (char *)&v56 - v21;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v14);
  v23 = sub_100048748(&qword_1011B1038, type metadata accessor for PushPendingNavigationItemModifier, (uint64_t)&unk_100EA92E0);
  v86 = v22;
  v87 = v23;
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v57 = v24;
  v25 = sub_100049F28((unint64_t *)&unk_1011B6D80, &qword_1011D1220, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v84 = v24;
  v85 = v25;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v90 = v20;
  *(_QWORD *)&v91 = &type metadata for Bool;
  *((_QWORD *)&v91 + 1) = v62;
  v92 = &protocol witness table for Bool;
  v68 = swift_getOpaqueTypeMetadata2(0, &v90, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v69 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v58 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v63 = (uint64_t)&v56 - v28;
  v29 = sub_1003E231C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.projectedValue.getter);
  KeyPath = swift_getKeyPath(&unk_100EB90E0);
  v31 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  ObservedObject.Wrapper.subscript.getter(&v90, KeyPath, v29, v31);
  swift_release();
  swift_release();
  v82 = v90;
  v83 = v91;
  v79 = v77;
  v80 = v76;
  v81 = v3;
  v32 = sub_100049F28(&qword_1011B1040, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = sub_100049F28(&qword_1011B1048, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = sub_100049F28(&qword_1011B1050, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v35 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  v36 = v61;
  NavigationStack.init<>(path:root:)(&v82, sub_1003E4B7C, v78, v66, v65, v32, v33, v34, WitnessTable, v35);
  v37 = v59;
  sub_100083F90(v14);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v14);
  v38 = sub_1003E231C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.wrappedValue.getter);
  v39 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v40 = v60;
  View.environmentObject<A>(_:)(v38, v17, v39, v57, v31);
  v41 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v37, v17, v41);
  LOBYTE(v90) = *(_BYTE *)(sub_1003E4B88(a1) + qword_10124D088);
  v42 = v73;
  v43 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v3, a1);
  v44 = *(unsigned __int8 *)(v42 + 80);
  v45 = v42;
  v46 = (v44 + 32) & ~v44;
  v47 = swift_allocObject(&unk_1010C3860, v46 + v74, v44 | 7);
  v48 = v76;
  *(_QWORD *)(v47 + 16) = v77;
  *(_QWORD *)(v47 + 24) = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v47 + v46, v43, a1);
  v49 = (uint64_t)v58;
  v50 = v62;
  View.onChange<A>(of:initial:_:)(&v90, 0, sub_1003E4C98, v47, v20, &type metadata for Bool, v62, &protocol witness table for Bool);
  v51 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v40, v20, v51);
  v90 = v20;
  *(_QWORD *)&v91 = &type metadata for Bool;
  *((_QWORD *)&v91 + 1) = v50;
  v92 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v52 = v63;
  v53 = v68;
  sub_10081EB14(v49, v68, v63);
  v54 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v54(v49, v53);
  sub_1000EA744(v52, v53, v75);
  return ((uint64_t (*)(uint64_t, uint64_t))v54)(v52, v53);
}

uint64_t sub_1003E2A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  double v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;

  v26 = a4;
  v7 = sub_100055B68();
  v29 = a2;
  v30 = &type metadata for String;
  v31 = a3;
  v32 = v7;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v29, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 0);
  v24 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, &type metadata for NavigationDestinationPushing);
  v25 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - v15;
  type metadata accessor for CatalogNavigationView(0, a2, a3, v17);
  sub_100084268(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a2, a3);
  v29 = a2;
  v30 = &type metadata for String;
  v31 = a3;
  v32 = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v19 = sub_10008436C(OpaqueTypeMetadata2, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t, double))(v24 + 8))(v10, OpaqueTypeMetadata2, v19);
  v20 = sub_1003E4B30();
  v27 = OpaqueTypeConformance2;
  v28 = v20;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_10081EB14((uint64_t)v13, v11, (uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v25 + 8);
  v21(v13, v11);
  sub_1000EA744((uint64_t)v16, v11, v26);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v11);
}

void sub_1003E2C88(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  if (*a2 == 1)
  {
    v5 = type metadata accessor for CatalogNavigationView(0, a4, a5, a4);
    v6 = sub_1003E4B88(v5);
    __chkstk_darwin(v6);
    sub_1000502A4();
    KeyPath = swift_getKeyPath(&unk_100EB9108);
    __chkstk_darwin(KeyPath);
    v8 = swift_getKeyPath(&unk_100EB9140);
    swift_retain();
    static Published.subscript.getter(&v15, v9, KeyPath, v8);
    swift_release();
    swift_release();
    swift_release();
    if (v15 != 6)
    {
      sub_10072DEC0(v15);
      if ((v10 & 1) != 0)
      {
        v11 = sub_1003E231C(v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.wrappedValue.getter);
        __chkstk_darwin(v11);
        sub_100007E8C((uint64_t *)&unk_1011D11C0);
        v12 = swift_getKeyPath(&unk_100EB9160);
        __chkstk_darwin(v12);
        v13 = swift_getKeyPath(&unk_100EB9198);
        v14 = _swiftEmptyArrayStorage;
        static Published.subscript.setter(&v14, v11, v12, v13);
        *(_BYTE *)(sub_1003E4B88(v5) + qword_10124D088) = 0;
      }
    }
  }
}

id sub_1003E2E90(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain(a2);
}

void sub_1003E2EA0(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release(a2);
}

ValueMetadata *type metadata accessor for VideosView()
{
  return &type metadata for VideosView;
}

ValueMetadata *type metadata accessor for RadioView()
{
  return &type metadata for RadioView;
}

void destroy for BrowseView(uint64_t a1)
{
  sub_1003E2EA0(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Music10VideosViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1003E2E90(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s5Music10VideosViewVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1003E2E90(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1003E2EA0(v6, v7, v8);
  return a1;
}

uint64_t _s5Music10VideosViewVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1003E2EA0(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for BrowseView()
{
  return &type metadata for BrowseView;
}

double destroy for ListenNowView(uint64_t a1)
{
  double result;

  sub_1003E2EA0(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ListenNowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1003E2E90(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ListenNowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1003E2E90(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1003E2EA0(v7, v8, v9);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ListenNowView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1003E2EA0(v5, v6, v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenNowView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListenNowView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListenNowView()
{
  return &type metadata for ListenNowView;
}

unint64_t sub_1003E3268(uint64_t a1)
{
  unint64_t result;

  result = sub_10015FDFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003E328C(uint64_t a1)
{
  unint64_t result;

  result = sub_10015FE64();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003E32B0(uint64_t a1)
{
  unint64_t result;

  result = sub_10015FEA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003E32D4(uint64_t a1)
{
  unint64_t result;

  result = sub_10015FF54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003E32F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E33A4(a1, a2, a3, (uint64_t (*)(void))sub_1003E3304);
}

unint64_t sub_1003E3304()
{
  unint64_t result;

  result = qword_1011B0DF8;
  if (!qword_1011B0DF8)
  {
    result = swift_getWitnessTable(&unk_100EB8D48, &type metadata for VideosView);
    atomic_store(result, (unint64_t *)&qword_1011B0DF8);
  }
  return result;
}

uint64_t sub_1003E3348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E33A4(a1, a2, a3, (uint64_t (*)(void))sub_1003E3354);
}

unint64_t sub_1003E3354()
{
  unint64_t result;

  result = qword_1011B0E00;
  if (!qword_1011B0E00)
  {
    result = swift_getWitnessTable(&unk_100EB8D2C, &type metadata for RadioView);
    atomic_store(result, (unint64_t *)&qword_1011B0E00);
  }
  return result;
}

uint64_t sub_1003E3398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E33A4(a1, a2, a3, (uint64_t (*)(void))sub_1003E33E4);
}

uint64_t sub_1003E33A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  _QWORD v5[2];

  v5[0] = a2;
  v5[1] = a4();
  return swift_getOpaqueTypeConformance2(v5, &unk_100F9EA20, 1);
}

unint64_t sub_1003E33E4()
{
  unint64_t result;

  result = qword_1011B0E08;
  if (!qword_1011B0E08)
  {
    result = swift_getWitnessTable(&unk_100EB8D10, &type metadata for BrowseView);
    atomic_store(result, (unint64_t *)&qword_1011B0E08);
  }
  return result;
}

uint64_t sub_1003E3428(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9E9D4, 1);
}

uint64_t sub_1003E3438(uint64_t a1)
{
  sub_1003E2E90(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1003E3468(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1003E3490(uint64_t a1)
{
  sub_1003E2EA0(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1003E34C0(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1003E34F0()
{
  uint64_t v0;

  sub_1003E2EA0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 72);
}

void sub_1003E3528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003E14C4(a1, a2, (uint64_t *)(v2 + 16));
}

unint64_t sub_1003E3530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0E40;
  if (!qword_1011B0E40)
  {
    v1 = sub_100044B54(&qword_1011B0E38);
    sub_1003E3594();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0E40);
  }
  return result;
}

unint64_t sub_1003E3594()
{
  unint64_t result;

  result = qword_1011B0E48;
  if (!qword_1011B0E48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for JSViewModelKind, &type metadata for JSViewModelKind);
    atomic_store(result, (unint64_t *)&qword_1011B0E48);
  }
  return result;
}

uint64_t sub_1003E35D8()
{
  uint64_t v0;

  return sub_1003E1590(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003E35E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003E16C0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003E35E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0E70;
  if (!qword_1011B0E70)
  {
    v1 = sub_100044B54(&qword_1011B0E68);
    sub_100048748(&qword_1011B0E78, type metadata accessor for ListenNowView.AccountButton, (uint64_t)&unk_100EB9000);
    sub_100048748(&qword_1011AD7D8, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0E70);
  }
  return result;
}

uint64_t type metadata accessor for ListenNowView.AccountButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B0EF8;
  if (!qword_1011B0EF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ListenNowView.AccountButton);
  return result;
}

uint64_t sub_1003E36C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B0E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1003E3710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UserProfile(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011A2290);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = *v13;
    v15 = v13[1];
    *v12 = v14;
    v12[1] = v15;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1003E3800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UserProfile(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

char *sub_1003E3868(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = v12;
  *((_QWORD *)v10 + 1) = v13;
  swift_retain();
  return a1;
}

char *sub_1003E3930(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_retain();
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  return a1;
}

char *sub_1003E3A58(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1003E3B14(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)v14;
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  return a1;
}

uint64_t sub_1003E3C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E3C40);
}

uint64_t sub_1003E3C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100007E8C(&qword_1011A2290);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1003E3CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E3CD8);
}

uint64_t sub_1003E3CD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011A2290);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

void sub_1003E3D54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1003E3DC4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100EB8F28;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_1003E3DC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A8088)
  {
    v2 = type metadata accessor for UserProfile(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A8088);
  }
}

uint64_t sub_1003E3E18(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EB8F58;
  v4[1] = &unk_100EB8F70;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100EB8F28;
    v4[4] = &unk_100EB8F88;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_1003E3EAC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, unint64_t, uint64_t);
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 24) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v10 = *(_QWORD *)a2;
    *v3 = *(_QWORD *)a2;
    v3 = (_QWORD *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v11 = a1 & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_QWORD *)(v11 + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    v12 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v6 + 24) & ~v6;
    v13 = ((a2 & 0xFFFFFFFFFFFFFFF8) + v6 + 24) & ~v6;
    v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
    v15 = (_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)((v7 + v13) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v15[1] = v16[1];
    v17 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
    v18 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    LOBYTE(v13) = *(_BYTE *)(v18 + 16);
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v19, v20);
    *(_QWORD *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v20;
    *(_BYTE *)(v17 + 16) = v13;
  }
  return v3;
}

uint64_t sub_1003E3FF0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  __n128 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 = swift_bridgeObjectRelease(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16));
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, __n128))(v5 + 8))(v6, v4);
  v7 = ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23;
  swift_release();
  return sub_1000A6174(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8));
}

unint64_t sub_1003E4068(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, unint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  v9 = (v7 + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  v10 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (_QWORD *)((v11 + v8) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  LOBYTE(v9) = *(_BYTE *)(v15 + 16);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v16, v17);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  *(_BYTE *)(v14 + 16) = v9;
  return a1;
}

unint64_t sub_1003E414C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRelease(v7);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 24 + v5) & ~v10;
  v12 = (v10 + 24 + v6) & ~v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 24))(v11, v12, v8);
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  swift_retain();
  swift_release();
  v14[1] = v15[1];
  v16 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  LOBYTE(v14) = *(_BYTE *)(v17 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v19;
  *(_BYTE *)(v16 + 16) = (_BYTE)v14;
  sub_1000A6174(v20, v21);
  return a1;
}

unint64_t sub_1003E4254(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  v7 = (v5 + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_OWORD *)v12;
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_OWORD *)v11 = v13;
  return a1;
}

unint64_t sub_1003E42FC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v8 = swift_bridgeObjectRelease(v7);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 24 + v5) & ~v10;
  v12 = (v10 + 24 + v6) & ~v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 40))(v11, v12, v8);
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  swift_release();
  v14[1] = v15[1];
  v16 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_BYTE *)(v17 + 16);
  v19 = *(_QWORD *)v16;
  v20 = *(_QWORD *)(v16 + 8);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = v18;
  sub_1000A6174(v19, v20);
  return a1;
}

uint64_t sub_1003E43E4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    v14 = a1 & 0xFFFFFFFFFFFFFFF8;
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))((v14 + v7 + 24) & ~v7);
    }
    else
    {
      v15 = *(_QWORD *)(v14 + 16);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  else
  {
    v8 = ((((*(_QWORD *)(v4 + 64) + ((v7 + 24) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1003E4484 + 4 * byte_100EB8CA0[v12]))();
  }
}

void sub_1003E4518(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64)
         + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 17;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X13 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_1003E4650()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1003E46C0);
}

void sub_1003E4658(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1003E4660);
  JUMPOUT(0x1003E46C0);
}

void sub_1003E4678()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1003E46C0);
}

void sub_1003E4680()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1003E46C0);
}

void sub_1003E4688(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if (a3 < 0)
      JUMPOUT(0x1003E4694);
    if (a2 < 0)
      JUMPOUT(0x1003E46B8);
    *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + 16) = (a2 - 1);
  }
  JUMPOUT(0x1003E46C0);
}

uint64_t type metadata accessor for CatalogNavigationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CatalogNavigationView);
}

uint64_t sub_1003E46E4()
{
  return sub_1003E474C(&qword_1011B0FB0, &qword_1011B0E18, &qword_1011B0FB8, &qword_1011B0E10);
}

uint64_t sub_1003E4718()
{
  return sub_1003E474C(&qword_1011B0FD0, &qword_1011B0E98, &qword_1011B0FD8, &qword_1011B0E90);
}

uint64_t sub_1003E474C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(a3, a4, (uint64_t)&unk_100EB8FB0);
    sub_100049F28(&qword_1011B0FC0, &qword_1011B0FC8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003E47E4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F9EA7C, 1);
}

uint64_t sub_1003E4818(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9EA54, 1);
}

uint64_t sub_1003E4828()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for ListenNowView.AccountButton(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for UserProfile(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  swift_release();
  return swift_deallocObject(v0, v2 + v3);
}

void sub_1003E48D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ListenNowView.AccountButton(0) - 8) + 80);
  sub_1003E1DF8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1003E4900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003E1E90(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003E4908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B1008;
  if (!qword_1011B1008)
  {
    v1 = sub_100044B54(&qword_1011B1000);
    sub_100048748(&qword_1011B1010, type metadata accessor for AvatarArtworkView, (uint64_t)&unk_100EB0CC4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B1008);
  }
  return result;
}

unint64_t sub_1003E499C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B1020;
  if (!qword_1011B1020)
  {
    v1 = sub_100044B54(&qword_1011B0FF8);
    sub_1003E4A20();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B1020);
  }
  return result;
}

unint64_t sub_1003E4A20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011B1028;
  if (!qword_1011B1028)
  {
    v1 = sub_100044B54(&qword_1011B0FE8);
    v2[0] = sub_100044B54(&qword_1011B0FF0);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_100049F28(&qword_1011B1018, &qword_1011B0FF0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B1028);
  }
  return result;
}

unint64_t sub_1003E4B30()
{
  unint64_t result;

  result = qword_1011B1030;
  if (!qword_1011B1030)
  {
    result = swift_getWitnessTable(&unk_100EA9290, &type metadata for NavigationDestinationPushing);
    atomic_store(result, (unint64_t *)&qword_1011B1030);
  }
  return result;
}

uint64_t sub_1003E4B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1003E2A8C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1003E4B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  result = *v2;
  if (!*v2)
  {
    v4 = v2[1];
    v5 = type metadata accessor for TabSelectionManager(0);
    v6 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    result = EnvironmentObject.error()(0, v4, v5, v6);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003E4BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for CatalogNavigationView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  v11 = swift_bridgeObjectRelease(*(_QWORD *)(v4 + v8 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(v10 + *(int *)(v6 + 40), v5, v11);
  swift_release();
  sub_1000A6174(*(_QWORD *)(v10 + *(int *)(v6 + 48)), *(_QWORD *)(v10 + *(int *)(v6 + 48) + 8));
  return swift_deallocObject(v4, v9);
}

void sub_1003E4C98(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CatalogNavigationView(0, v7, v8, a4) - 8) + 80);
  sub_1003E2C88(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_1003E4D08()
{
  return 16;
}

__n128 sub_1003E4D14(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1003E4D28()
{
  return 8;
}

_QWORD *sub_1003E4D34(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1003E4D44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B1058;
  if (!qword_1011B1058)
  {
    v1 = sub_100044B54(&qword_1011B1060);
    sub_1003E499C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B1058);
  }
  return result;
}

uint64_t sub_1003E4DC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100044B54((uint64_t *)&unk_1011D11C0);
  v4 = sub_100055B68();
  v15 = v1;
  v16 = &type metadata for String;
  v17 = v2;
  v18 = (void *)v4;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 0);
  v6 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, &type metadata for NavigationDestinationPushing);
  v15 = v1;
  v16 = &type metadata for String;
  v17 = v2;
  v18 = (void *)v4;
  swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  sub_1003E4B30();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  v8 = type metadata accessor for NavigationStack(255, v3, v6, WitnessTable);
  v9 = type metadata accessor for PushPendingNavigationItemModifier(255);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  v11 = sub_100044B54(&qword_1011D1220);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v8);
  sub_100048748(&qword_1011B1038, type metadata accessor for PushPendingNavigationItemModifier, (uint64_t)&unk_100EA92E0);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  sub_100049F28((unint64_t *)&unk_1011B6D80, &qword_1011D1220, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v15 = v12;
  v16 = &type metadata for Bool;
  v17 = v13;
  v18 = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_1003E4F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  objc_class *v55;
  id v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  __n128 v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  id v142[2];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v137 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100007E8C(&qword_1011B1790);
  v136 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v135 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011B1798);
  v140 = *(_QWORD *)(v5 - 8);
  v141 = v5;
  __chkstk_darwin(v5);
  v139 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B17A0);
  v133 = *(_QWORD *)(v7 - 8);
  v134 = v7;
  __chkstk_darwin(v7);
  v132 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B17A8);
  v130 = *(_QWORD *)(v9 - 8);
  v131 = v9;
  __chkstk_darwin(v9);
  v129 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100007E8C((uint64_t *)&unk_1011B11D8);
  __chkstk_darwin(v128);
  v127 = (uint64_t)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v126 = (char *)&v106 - v13;
  v14 = sub_100007E8C(&qword_10119F088);
  v124 = *(_QWORD *)(v14 - 8);
  v125 = v14;
  __chkstk_darwin(v14);
  v123 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011B17B0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_1011B17B8);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v110);
  v109 = (uint64_t)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v106 = (char *)&v106 - v22;
  v108 = sub_100007E8C(&qword_1011B17C0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011B17C8);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v29);
  v31 = (char *)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v106 - v33;
  v35 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__catalogSearchSuggestionsResponse;
  v36 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 1, 1, v36);
  sub_10004A160((uint64_t)v34, (uint64_t)v31, &qword_1011B1190);
  Published.init(initialValue:)(v31, v29);
  sub_10004FF60((uint64_t)v34, &qword_1011B1190);
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v35, v28, v25);
  v37 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__recentlySearchedEntries;
  v142[0] = _swiftEmptyArrayStorage;
  v38 = sub_100007E8C(&qword_1011B11A0);
  Published.init(initialValue:)(v142, v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v37, v24, v108);
  v39 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__selectedResultGroup;
  v40 = type metadata accessor for MusicSearchResultGroup(0);
  v41 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v106, 1, 1, v40);
  v42 = v109;
  sub_10004A160(v41, v109, &qword_1011B11B0);
  v43 = v111;
  Published.init(initialValue:)(v42, v110);
  sub_10004FF60(v41, &qword_1011B11B0);
  (*(void (**)(uint64_t, char *, uint64_t))(v112 + 32))(v39, v43, v113);
  v44 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems;
  v45 = sub_100007E8C(&qword_1011ACBD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
  v46 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__searchTerm;
  v142[0] = 0;
  v142[1] = (id)0xE000000000000000;
  v47 = v114;
  Published.init(initialValue:)(v142, &type metadata for String);
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v46, v47, v116);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_isViewVisible) = 0;
  v48 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__isSearching;
  LOBYTE(v142[0]) = 0;
  v49 = v117;
  Published.init(initialValue:)(v142, &type metadata for Bool);
  v50 = *(void (**)(uint64_t, char *, uint64_t))(v118 + 32);
  v51 = v119;
  v50(v48, v49, v119);
  v52 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__isLoading;
  LOBYTE(v142[0]) = 0;
  Published.init(initialValue:)(v142, &type metadata for Bool);
  v50(v52, v49, v51);
  v53 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__isFirstResponder;
  LOBYTE(v142[0]) = 0;
  Published.init(initialValue:)(v142, &type metadata for Bool);
  v50(v53, v49, v51);
  v54 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__searchLandingComponentController;
  v55 = (objc_class *)type metadata accessor for JSSearchLandingComponentController(0);
  v56 = objc_allocWithZone(v55);
  v142[0] = (id)JSSearchLandingComponentController.init()();
  v57 = v120;
  Published.init(initialValue:)(v142, v55);
  (*(void (**)(uint64_t, char *, uint64_t))(v121 + 32))(v54, v57, v122);
  v58 = OBJC_IVAR____TtCV5Music6Search9ViewModel_resultsComponentController;
  v59 = objc_allocWithZone((Class)type metadata accessor for JSSearchResultComponentController(0));
  *(_QWORD *)(v1 + v58) = JSSearchResultComponentController.init()();
  v60 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_displayedPage;
  v61 = _s4PageOMa(0);
  swift_storeEnumTagMultiPayload(v60, v61, 4);
  v62 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__jsResultsUpdateCount;
  v142[0] = 0;
  v63 = v123;
  Published.init(initialValue:)(v142, &type metadata for Int);
  (*(void (**)(uint64_t, char *, uint64_t))(v124 + 32))(v62, v63, v125);
  v64 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
  v65 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
  v66.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 1, 1, v65);
  v67 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel__librarySearchResponse;
  v68 = type metadata accessor for MusicLibrarySearchResponse(0, v66);
  v69 = (uint64_t)v126;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v126, 1, 1, v68);
  v70 = v127;
  sub_10004A160(v69, v127, (uint64_t *)&unk_1011B11D8);
  v71 = v129;
  Published.init(initialValue:)(v70, v128);
  sub_10004FF60(v69, (uint64_t *)&unk_1011B11D8);
  (*(void (**)(uint64_t, char *, uint64_t))(v130 + 32))(v67, v71, v131);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsAutoupdatingResponse) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_librarySearchAutoupdatingResponse) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsAutoupdatingSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchAutoupdatingResponse) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchAutoupdatingSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_librarySearchAutoupdatingSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory) = _swiftEmptyArrayStorage;
  v72 = OBJC_IVAR____TtCV5Music6Search9ViewModel_recentlySearchedViewModel;
  v73 = type metadata accessor for MusicRecentlySearchedViewModel(0);
  swift_allocObject(v73, *(unsigned int *)(v73 + 48), *(unsigned __int16 *)(v73 + 52));
  *(_QWORD *)(v1 + v72) = MusicRecentlySearchedViewModel.init()();
  v74 = OBJC_IVAR____TtCV5Music6Search9ViewModel_recentlySearchedEntriesObserver;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_recentlySearchedEntriesObserver) = 0;
  v75 = OBJC_IVAR____TtCV5Music6Search9ViewModel_sourceManager;
  if (qword_10119BF90 != -1)
    swift_once(&qword_10119BF90, sub_1003C2428);
  *(_QWORD *)(v1 + v75) = qword_10124CEA0;
  v76 = OBJC_IVAR____TtCV5Music6Search9ViewModel_availableSourcesChangeObserver;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_availableSourcesChangeObserver) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_jsSearchResultItemTranslationTask) = 0;
  swift_retain();
  sub_1003E6F34(0);
  swift_beginAccess(*(_QWORD *)(v1 + v75) + OBJC_IVAR____TtCV5Music6Search13SourceManager__availableSources, v142, 33, 0);
  swift_retain();
  v77 = sub_100007E8C(&qword_1011B04A8);
  v78 = v132;
  Published.projectedValue.getter(v77);
  swift_endAccess(v142);
  swift_release();
  v79 = swift_allocObject(&unk_1010C3900, 24, 7);
  swift_weakInit(v79 + 16, v1);
  v80 = sub_100049F28(&qword_1011B17D0, &qword_1011B17A0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v81 = v134;
  v82 = Publisher<>.sink(receiveValue:)(sub_1003F0394, v79, v134, v80);
  v83 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v133 + 8))(v78, v81, v83);
  *(_QWORD *)(v1 + v76) = v82;
  swift_release();
  v84 = swift_retain();
  v85 = v135;
  dispatch thunk of MusicRecentlySearchedViewModel.$recentlySearchedEntries.getter(v84);
  swift_release();
  v86 = sub_1000A9B84();
  v142[0] = (id)static OS_dispatch_queue.main.getter(v86, v87, v88, v89, v90, v91, v92, v93);
  v94 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v95 = (uint64_t)v137;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v137, 1, 1, v94);
  v96 = sub_100049F28(&qword_1011B17D8, &qword_1011B1790, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v97 = sub_100048748((unint64_t *)&qword_1011A89B0, (uint64_t (*)(uint64_t))sub_1000A9B84, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v99 = v138;
  v98 = v139;
  Publisher.receive<A>(on:options:)(v142, v95, v138, v86, v96, v97);
  sub_10004FF60(v95, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v136 + 8))(v85, v99);
  v100 = swift_allocObject(&unk_1010C3900, 24, 7);
  swift_weakInit(v100 + 16, v1);
  v101 = sub_100049F28(&qword_1011B17E0, &qword_1011B1798, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v102 = v141;
  v103 = Publisher<>.sink(receiveValue:)(sub_1003F039C, v100, v141, v101);
  v104 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v140 + 8))(v98, v102, v104);
  *(_QWORD *)(v1 + v74) = v103;
  swift_release();
  return v1;
}

double sub_1003E5BD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE v16[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v10 = Strong;
    if (*(_QWORD *)(v7 + 16))
    {
      v11 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
      type metadata accessor for MainActor(0);
      v12 = swift_retain();
      v13 = static MainActor.shared.getter(v12);
      v14 = (_QWORD *)swift_allocObject(&unk_1010C3950, 40, 7);
      v14[2] = v13;
      v14[3] = &protocol witness table for MainActor;
      v14[4] = v10;
      sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011B1820, (uint64_t)v14);
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1003E5CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003E5D64, v7, v8);
}

uint64_t sub_1003E5D64()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  swift_release();
  v1 = type metadata accessor for Search.ViewModel(0);
  sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  ObservableObject<>.objectWillChange.getter(v1);
  ObservableObjectPublisher.send()();
  v2 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_1003E5DD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    KeyPath = swift_getKeyPath(&unk_100EB9258);
    v8 = swift_getKeyPath(&unk_100EB9280);
    v9 = v2;
    swift_bridgeObjectRetain();
    swift_retain();
    static Published.subscript.setter(&v9, v6, KeyPath, v8);
    sub_1003E67FC();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_1003E5E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v15;

  v1 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (sub_1003E6E04())
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, 0x676F6C61746163, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    if ((v8 & 1) == 0)
      return _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  KeyPath = swift_getKeyPath(&unk_100EB93F0);
  v11 = swift_getKeyPath(&unk_100EB9418);
  static Published.subscript.getter(v7, v0, KeyPath, v11);
  swift_release();
  v12 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v2 + 48))(v7, 1, v1, v12))
  {
    sub_10004FF60((uint64_t)v7, &qword_1011B1190);
    return 0;
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v2 + 16))(v4, v7, v1);
    v13 = sub_10004FF60((uint64_t)v7, &qword_1011B1190);
    v9 = MusicCatalogSearchSuggestionsResponse.suggestions.getter(v13);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return (_QWORD *)v9;
}

uint64_t sub_1003E603C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  char v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for MusicLibrarySearchResponse(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011B11D8);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_1003E6E04();
  v38 = a1;
  if (v18)
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, 0x676F6C61746163, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    if ((v19 & 1) == 0)
    {
      KeyPath = swift_getKeyPath(&unk_100EB93A8);
      v21 = swift_getKeyPath(&unk_100EB93D0);
      static Published.subscript.getter(v10, v2, KeyPath, v21);
      swift_release();
      v22 = swift_release();
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v5 + 48))(v10, 1, v4, v22))
      {
        v23 = (uint64_t *)&unk_1011B11D8;
        v24 = (uint64_t)v10;
LABEL_8:
        sub_10004FF60(v24, v23);
        v28 = sub_100007E8C(&qword_1011ACBD8);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v38, 1, 1, v28);
      }
      (*(void (**)(char *, _QWORD *, uint64_t))(v5 + 16))(v7, v10, v4);
      v35 = sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011B11D8);
      v36 = v38;
      MusicLibrarySearchResponse.internalTopResults.getter(v35);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v32 = sub_100007E8C(&qword_1011ACBD8);
      v33 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
      v34 = v36;
      return v33(v34, 0, 1, v32);
    }
  }
  else
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  v25 = swift_getKeyPath(&unk_100EB93F0);
  v26 = swift_getKeyPath(&unk_100EB9418);
  static Published.subscript.getter(v17, v2, v25, v26);
  swift_release();
  v27 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v12 + 48))(v17, 1, v11, v27))
  {
    v23 = &qword_1011B1190;
    v24 = (uint64_t)v17;
    goto LABEL_8;
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v12 + 16))(v14, v17, v11);
  v30 = sub_10004FF60((uint64_t)v17, &qword_1011B1190);
  v31 = v38;
  MusicCatalogSearchSuggestionsResponse.internalTopResults.getter(v30);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v32 = sub_100007E8C(&qword_1011ACBD8);
  v33 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v34 = v31;
  return v33(v34, 0, 1, v32);
}

void sub_1003E6384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v2 = v1;
  v41 = a1;
  v3 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v3);
  v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = _s5EventOMa(0);
  __chkstk_darwin(v38);
  v39 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v36 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B1838);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v12);
  v37 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char **)((char *)&v36 - v15);
  __chkstk_darwin(v17);
  v19 = (char **)((char *)&v36 - v18);
  KeyPath = swift_getKeyPath(&unk_100EB93F0);
  v21 = swift_getKeyPath(&unk_100EB9418);
  static Published.subscript.getter(v19, v2, KeyPath, v21);
  swift_release();
  v22 = swift_release();
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  LODWORD(KeyPath) = ((uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v23)(v19, 1, v6, v22);
  sub_10004FF60((uint64_t)v19, &qword_1011B1190);
  if ((_DWORD)KeyPath != 1)
  {
    v24 = swift_getKeyPath(&unk_100EB93F0);
    v25 = swift_getKeyPath(&unk_100EB9418);
    static Published.subscript.getter(v16, v2, v24, v25);
    swift_release();
    swift_release();
    v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_10004A160((uint64_t)v16, (uint64_t)v11, &qword_1011B1190);
    sub_10004A160(v41, v26, &qword_1011B1190);
    if (v23((uint64_t)v11, 1, v6) == 1)
    {
      sub_10004FF60((uint64_t)v16, &qword_1011B1190);
      if (v23(v26, 1, v6) == 1)
      {
        sub_10004FF60((uint64_t)v11, &qword_1011B1190);
LABEL_10:
        sub_1003EA930();
        return;
      }
    }
    else
    {
      v27 = v37;
      sub_10004A160((uint64_t)v11, v37, &qword_1011B1190);
      if (v23(v26, 1, v6) != 1)
      {
        v28 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v36, v26, v6);
        v29 = sub_100048748(&qword_1011B1840, (uint64_t (*)(uint64_t))&type metadata accessor for MusicCatalogSearchSuggestionsResponse, (uint64_t)&protocol conformance descriptor for MusicCatalogSearchSuggestionsResponse);
        v30 = dispatch thunk of static Equatable.== infix(_:_:)(v27, v28, v6, v29);
        v31 = *(void (**)(char *, uint64_t))(v7 + 8);
        v31(v28, v6);
        sub_10004FF60((uint64_t)v16, &qword_1011B1190);
        v31((char *)v27, v6);
        sub_10004FF60((uint64_t)v11, &qword_1011B1190);
        if ((v30 & 1) != 0)
          goto LABEL_10;
LABEL_9:
        v32 = _s4PageOMa(0);
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
        v34 = (uint64_t)v39;
        v33(v39, 1, 1, v32);
        swift_storeEnumTagMultiPayload(v34, v38, 2);
        v35 = (uint64_t)v40;
        v33(v40, 1, 1, v32);
        sub_1003E9A5C(v34, v35);
        sub_10004FF60(v35, &qword_1011B17E8);
        sub_10005B748(v34, _s5EventOMa);
        goto LABEL_10;
      }
      sub_10004FF60((uint64_t)v16, &qword_1011B1190);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v27, v6);
    }
    sub_10004FF60((uint64_t)v11, &qword_1011B1838);
    goto LABEL_9;
  }
}

uint64_t sub_1003E67E8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E6DA8((uint64_t)&unk_100EB93F0, (uint64_t)&unk_100EB9418, a1);
}

void sub_1003E67FC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v2 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v6, v0, KeyPath, v2);
  swift_release();
  swift_release();
  v4 = v6;
  v3 = v7;
  swift_bridgeObjectRelease(v7);
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    sub_1003EA930();
}

uint64_t sub_1003E688C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB9258);
  v2 = swift_getKeyPath(&unk_100EB9280);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1003E68FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  unsigned int (*v23)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011B1800);
  __chkstk_darwin(v2);
  v51 = (uint64_t)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - v5;
  v7 = sub_100007E8C(&qword_1011ACBD8);
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicSearchResultGroup(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v50 - v18);
  KeyPath = swift_getKeyPath(&unk_100EB9330);
  v21 = swift_getKeyPath(&unk_100EB9358);
  v54 = v1;
  static Published.subscript.getter(v19, v1, KeyPath, v21);
  swift_release();
  v22 = swift_release();
  v23 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v11 + 48);
  if (v23(v19, 1, v10, v22))
  {
    sub_10004FF60((uint64_t)v19, &qword_1011B11B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v6, 1, 1, v53);
    v24 = v54;
    v25 = v54 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems;
    swift_beginAccess(v54 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems, &v55, 33, 0);
    v26 = (uint64_t)v6;
    v27 = v25;
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v11 + 16))(v13, v19, v10);
    v28 = sub_10004FF60((uint64_t)v19, &qword_1011B11B0);
    MusicSearchResultGroup.items.getter(v28);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v29 = swift_getKeyPath(&unk_100EB9378);
    v30 = sub_100049F28((unint64_t *)&unk_1011ACBE0, &qword_1011ACBD8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v31 = sub_1003F0B70();
    v32 = v53;
    v33 = Collection.removingDuplicates<A>(with:)(v29, v53, v30, v31);
    v34 = swift_release();
    v35 = v52;
    (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v9, v32, v34);
    v55 = v33;
    v36 = type metadata accessor for GenericMusicItem(0);
    v37 = sub_100007E8C((uint64_t *)&unk_1011AB338);
    v38 = sub_100048748((unint64_t *)&qword_10119DD00, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v39 = sub_100049F28(&qword_1011B1810, (uint64_t *)&unk_1011AB338, (uint64_t)&protocol conformance descriptor for [A]);
    MusicItemCollection.init<A>(_:)(&v55, v36, v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v6, 0, 1, v32);
    v40 = v51;
    sub_100065228((uint64_t)v6, v51, &qword_1011B1800);
    v24 = v54;
    v41 = v54 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems;
    swift_beginAccess(v54 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems, &v55, 33, 0);
    v26 = v40;
    v27 = v41;
  }
  sub_1000A5508(v26, v27, &qword_1011B1800);
  swift_endAccess(&v55);
  v42 = swift_getKeyPath(&unk_100EB9330);
  v43 = swift_getKeyPath(&unk_100EB9358);
  static Published.subscript.getter(v16, v24, v42, v43);
  swift_release();
  v44 = swift_release();
  LODWORD(v42) = v23(v16, 1, v10, v44);
  sub_10004FF60((uint64_t)v16, &qword_1011B11B0);
  if ((_DWORD)v42 != 1)
  {
    v45 = swift_getKeyPath(&unk_100EB92A0);
    v46 = swift_getKeyPath(&unk_100EB92C8);
    static Published.subscript.getter(&v55, v24, v45, v46);
    swift_release();
    swift_release();
    v47 = v55;
    v48 = v56;
    swift_bridgeObjectRelease(v56);
    v49 = HIBYTE(v48) & 0xF;
    if ((v48 & 0x2000000000000000) == 0)
      v49 = v47 & 0xFFFFFFFFFFFFLL;
    if (v49)
      sub_1003EA930();
  }
}

uint64_t sub_1003E6D94@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E6DA8((uint64_t)&unk_100EB9330, (uint64_t)&unk_100EB9358, a1);
}

uint64_t sub_1003E6DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(v7);
  return swift_release(KeyPath);
}

uint64_t sub_1003E6E04()
{
  id v0;
  char v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_1003C2C68();

  if (v1 == 2)
    goto LABEL_3;
  v2 = v1 & 1;
  KeyPath = swift_getKeyPath(&unk_100EB9558);
  v4 = swift_getKeyPath(&unk_100EB9580);
  swift_retain();
  static Published.subscript.getter(&v10, v5, KeyPath, v4);
  swift_release();
  swift_release();
  swift_release();
  v6 = v10;
  v7 = sub_100481F3C(v10);
  swift_bridgeObjectRelease(v6);
  LOBYTE(v6) = sub_1004146FC(v2, (uint64_t)v7);
  swift_release();
  if ((v6 & 1) == 0)
  {
LABEL_3:
    swift_retain();
    v8 = sub_1003C2728();
    swift_release();
    return v8 & 1;
  }
  return v2;
}

double sub_1003E6F34(char a1)
{
  unsigned __int8 v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = a1 & 1;
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1003C3338(v1);

  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_10124DB48);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v15 = v8;
    *(_DWORD *)v7 = 136446210;
    LOBYTE(v14) = v1;
    v9 = String.init<A>(describing:)(&v14, &_s6SourceON);
    v11 = v10;
    v14 = sub_100322200(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Did select source=%{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }

  v12 = type metadata accessor for Search.ViewModel(0);
  sub_100048748(&qword_1011B1828, type metadata accessor for Search.ViewModel, (uint64_t)&unk_100EB9220);
  ObservableObject<>.objectWillChange.getter(v12);
  ObservableObjectPublisher.send()();
  swift_release();
  return sub_1003EB2D0();
}

_QWORD *sub_1003E713C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v27;
  char v28[24];

  v1 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100007E8C(&qword_1011B1830);
  v6 = __chkstk_darwin(v5);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for MusicLibrarySearchResponse(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = sub_100007E8C((uint64_t *)&unk_1011B11D8);
  __chkstk_darwin(v13);
  v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = sub_1003E6E04();
  v27 = v4;
  if (v16)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676F6C61746163, 0xE700000000000000, 0x7972617262696CLL, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    if ((v17 & 1) == 0)
      goto LABEL_6;
  }
  KeyPath = swift_getKeyPath(&unk_100EB93A8);
  v19 = swift_getKeyPath(&unk_100EB93D0);
  static Published.subscript.getter(v15, v0, KeyPath, v19);
  swift_release();
  v20 = swift_release();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v15, 1, v9, v20))
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v23 = sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011B11D8);
    v22 = MusicLibrarySearchResponse.resultGroups.getter(v23);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (_QWORD *)v22;
  }
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011B11D8);
LABEL_6:
  if (!sub_1003E6E04()
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, 0x676F6C61746163, 0xE700000000000000, 0) & 1) != 0)
  {
    v21 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
    swift_beginAccess(v21, v28, 0, 0);
    sub_10004A160(v21, (uint64_t)v8, &qword_1011B1830);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1))
    {
      v24 = v27;
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v27, v8, v1);
      v25 = sub_10004FF60((uint64_t)v8, &qword_1011B1830);
      v22 = MusicCatalogInternalSearchResponse.resultGroups.getter(v25);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v24, v1);
      return (_QWORD *)v22;
    }
    sub_10004FF60((uint64_t)v8, &qword_1011B1830);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1003E7454(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s5EventOMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v15 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v39, v2, KeyPath, v15);
  swift_release();
  swift_release();
  v16 = v40;
  if (v39 == a1 && v40 == a2)
  {
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, a1, a2, 0);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0)
    {
      v18 = swift_getKeyPath(&unk_100EB92E8);
      v19 = swift_getKeyPath(&unk_100EB9310);
      static Published.subscript.getter(&v39, v2, v18, v19);
      swift_release();
      swift_release();
      if ((v39 & 1) == 0)
      {
        v20 = swift_getKeyPath(&unk_100EB92E8);
        v21 = swift_getKeyPath(&unk_100EB9310);
        static Published.subscript.getter(&v39, v2, v20, v21);
        swift_release();
        swift_release();
        v22 = v39;
        v23 = swift_getKeyPath(&unk_100EB92E8);
        v24 = swift_getKeyPath(&unk_100EB9310);
        LOBYTE(v39) = 1;
        swift_retain();
        static Published.subscript.setter(&v39, v2, v23, v24);
        sub_1003E7C88(v22);
      }
      v25 = swift_getKeyPath(&unk_100EB92A0);
      v26 = swift_getKeyPath(&unk_100EB92C8);
      static Published.subscript.getter(&v39, v2, v25, v26);
      swift_release();
      swift_release();
      v28 = v39;
      v27 = v40;
      swift_bridgeObjectRelease(v40);
      v29 = HIBYTE(v27) & 0xF;
      if ((v27 & 0x2000000000000000) == 0)
        v29 = v28 & 0xFFFFFFFFFFFFLL;
      if (v29)
      {
        *v13 = 22;
        *((_QWORD *)v13 + 1) = 0;
        *((_QWORD *)v13 + 2) = 0;
        swift_storeEnumTagMultiPayload(v13, v11, 4);
        v30 = _s4PageOMa(0);
        swift_storeEnumTagMultiPayload(v10, v30, 2);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 0, 1, v30);
        sub_1003E9A5C((uint64_t)v13, (uint64_t)v10);
        sub_10004FF60((uint64_t)v10, &qword_1011B17E8);
        sub_10005B748((uint64_t)v13, _s5EventOMa);
        sub_1003EB2D0();
      }
      else
      {
        v31 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 1, 1, v31);
        v32 = (_QWORD *)swift_allocObject(&unk_1010C3928, 40, 7);
        v32[2] = 0;
        v32[3] = 0;
        v32[4] = v2;
        swift_retain();
        sub_100166D14((uint64_t)v7, (uint64_t)&unk_1011B17F8, (uint64_t)v32);
        swift_release();
      }
      if ((a2 & 0x2000000000000000) != 0)
        v33 = HIBYTE(a2) & 0xF;
      else
        v33 = a1 & 0xFFFFFFFFFFFFLL;
      v34 = swift_getKeyPath(&unk_100EB92A0);
      v35 = swift_getKeyPath(&unk_100EB92C8);
      static Published.subscript.getter(&v39, v2, v34, v35);
      swift_release();
      swift_release();
      v37 = v39;
      v36 = v40;
      swift_bridgeObjectRelease(v40);
      v38 = HIBYTE(v36) & 0xF;
      if ((v36 & 0x2000000000000000) == 0)
        v38 = v37 & 0xFFFFFFFFFFFFLL;
      if ((v33 != 0) == (v38 == 0))
        sub_1003EA930();
    }
  }
}

uint64_t sub_1003E7888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1003E78A0, 0, 0);
}

uint64_t sub_1003E78A0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003E7908, v3, v4);
}

uint64_t sub_1003E7908()
{
  uint64_t v0;
  double v1;

  swift_release();
  v1 = sub_1003EF860();
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

uint64_t sub_1003E793C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v2 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1003E79AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1003E79C4, 0, 0);
}

uint64_t sub_1003E79C4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003E7A2C, v3, v4);
}

uint64_t sub_1003E7A2C()
{
  uint64_t v0;
  double v1;

  swift_release();
  v1 = sub_1003E8F0C(0, 0);
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

double sub_1003E7A68(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t KeyPath;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[3];

  v3 = a1 & 1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B1830);
  *(_QWORD *)&result = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_isViewVisible);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_isViewVisible) = a1;
  if (v11 != v3)
  {
    KeyPath = swift_getKeyPath(&unk_100EB92A0);
    v13 = swift_getKeyPath(&unk_100EB92C8);
    static Published.subscript.getter(v22, v1, KeyPath, v13);
    swift_release();
    swift_release();
    v15 = v22[0];
    v14 = v22[1];
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    v16 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0)
      v16 = v15 & 0xFFFFFFFFFFFFLL;
    if (v16)
    {
      v17 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
      swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, v22, 0, 0);
      sub_10004A160(v17, (uint64_t)v10, &qword_1011B1830);
      v18 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
      LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v10, 1, v18);
      sub_10004FF60((uint64_t)v10, &qword_1011B1830);
      if ((_DWORD)v17 == 1)
      {
        v19 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
        v20 = (_QWORD *)swift_allocObject(&unk_1010C3B58, 40, 7);
        v20[2] = 0;
        v20[3] = 0;
        v20[4] = v1;
        swift_retain();
        sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011B1988, (uint64_t)v20);
        *(_QWORD *)&result = swift_release().n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_1003E7C60()
{
  return sub_1003E805C((uint64_t)&unk_100EB94C8, (uint64_t)&unk_100EB94F0);
}

uint64_t sub_1003E7C74()
{
  return sub_1003E805C((uint64_t)&unk_100EB9480, (uint64_t)&unk_100EB94A8);
}

void sub_1003E7C88(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;

  v35 = a1;
  v2 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = _s5EventOMa(0);
  __chkstk_darwin(v34);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v34 - v14);
  KeyPath = swift_getKeyPath(&unk_100EB9330);
  v17 = swift_getKeyPath(&unk_100EB9358);
  static Published.subscript.getter(v15, v1, KeyPath, v17);
  swift_release();
  swift_release();
  v18 = type metadata accessor for MusicSearchResultGroup(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18);
  sub_10004FF60((uint64_t)v15, &qword_1011B11B0);
  if (v20 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v12, 1, 1, v18);
    v21 = swift_getKeyPath(&unk_100EB9330);
    v22 = swift_getKeyPath(&unk_100EB9358);
    sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_1011B11B0);
    swift_retain();
    static Published.subscript.setter(v9, v1, v21, v22);
    sub_1003E68FC();
    sub_10004FF60((uint64_t)v12, &qword_1011B11B0);
  }
  v23 = swift_getKeyPath(&unk_100EB92E8);
  v24 = swift_getKeyPath(&unk_100EB9310);
  static Published.subscript.getter(&v36, v1, v23, v24);
  swift_release();
  swift_release();
  if (v36 == 1)
  {
    v25 = swift_getKeyPath(&unk_100EB92E8);
    v26 = swift_getKeyPath(&unk_100EB9310);
    static Published.subscript.getter(&v36, v1, v25, v26);
    swift_release();
    swift_release();
    if (v36 != (v35 & 1))
    {
      v27 = swift_getKeyPath(&unk_100EB92A0);
      v28 = swift_getKeyPath(&unk_100EB92C8);
      static Published.subscript.getter(&v36, v1, v27, v28);
      swift_release();
      swift_release();
      v29 = v36;
      v30 = v37;
      swift_bridgeObjectRelease(v37);
      v31 = HIBYTE(v30) & 0xF;
      if ((v30 & 0x2000000000000000) == 0)
        v31 = v29 & 0xFFFFFFFFFFFFLL;
      if (!v31)
      {
        *v6 = 1;
        v32 = _s4PageOMa(0);
        swift_storeEnumTagMultiPayload(v6, v32, 0);
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
        v33(v6, 0, 1, v32);
        swift_storeEnumTagMultiPayload(v6, v34, 2);
        v33(v4, 1, 1, v32);
        sub_1003E9A5C((uint64_t)v6, (uint64_t)v4);
        sub_10004FF60((uint64_t)v4, &qword_1011B17E8);
        sub_10005B748((uint64_t)v6, _s5EventOMa);
      }
    }
  }
}

uint64_t sub_1003E8048()
{
  return sub_1003E805C((uint64_t)&unk_100EB92E8, (uint64_t)&unk_100EB9310);
}

uint64_t sub_1003E805C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_1003E80C4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB9510);
  v2 = swift_getKeyPath(&unk_100EB9538);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

BOOL sub_1003E8134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v1 = sub_100007E8C((uint64_t *)&unk_1011B11D8);
  __chkstk_darwin(v1);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_100007E8C(&qword_1011B1830);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!sub_1003E6E04())
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    goto LABEL_5;
  }
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, 0x676F6C61746163, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v7 & 1) != 0)
  {
LABEL_5:
    v15 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
    swift_beginAccess(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, v19, 0, 0);
    sub_10004A160(v15, (uint64_t)v6, &qword_1011B1830);
    v16 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
    v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v6, 1, v16);
    v14 = (uint64_t)v6;
    v13 = &qword_1011B1830;
    goto LABEL_6;
  }
  KeyPath = swift_getKeyPath(&unk_100EB93A8);
  v9 = swift_getKeyPath(&unk_100EB93D0);
  static Published.subscript.getter(v3, v0, KeyPath, v9);
  swift_release();
  v10 = swift_release();
  v11 = type metadata accessor for MusicLibrarySearchResponse(0, v10);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v3, 1, v11);
  v13 = (uint64_t *)&unk_1011B11D8;
  v14 = (uint64_t)v3;
LABEL_6:
  sub_10004FF60(v14, v13);
  return v12 != 1;
}

BOOL sub_1003E8308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v1 = sub_100007E8C(&qword_1011B1800);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - v5;
  v7 = sub_100007E8C(&qword_1011ACBD8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - v15;
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v18 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v40, v0, KeyPath, v18);
  swift_release();
  swift_release();
  v20 = v40;
  v19 = v41;
  swift_bridgeObjectRelease(v41);
  v21 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v21 = v20 & 0xFFFFFFFFFFFFLL;
  if (!v21)
    return 0;
  v22 = swift_getKeyPath(&unk_100EB92E8);
  v23 = swift_getKeyPath(&unk_100EB9310);
  static Published.subscript.getter(&v40, v0, v22, v23);
  swift_release();
  swift_release();
  if (v40 == 1)
  {
    v24 = sub_1003E5E80();
    if (v24)
    {
      v26 = v24;
      sub_1003E603C((uint64_t)v6, v25);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
        v33 = v26[2];
        v34 = swift_bridgeObjectRelease(v26);
        (*(void (**)(char *, char *, uint64_t, __n128))(v8 + 16))(v13, v16, v7, v34);
        if (v33)
        {
          v29 = 1;
        }
        else
        {
          v35 = sub_100049F28((unint64_t *)&unk_1011ACBE0, &qword_1011ACBD8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
          dispatch thunk of Collection.startIndex.getter(v7);
          dispatch thunk of Collection.endIndex.getter(&v39, v7, v35);
          v29 = v40 != v39;
        }
        v36 = *(void (**)(char *, uint64_t))(v8 + 8);
        v36(v13, v7);
        v36(v16, v7);
        return v29;
      }
      swift_bridgeObjectRelease(v26);
      sub_10004FF60((uint64_t)v6, &qword_1011B1800);
    }
  }
  v27 = swift_getKeyPath(&unk_100EB92E8);
  v28 = swift_getKeyPath(&unk_100EB9310);
  static Published.subscript.getter(&v40, v0, v27, v28);
  swift_release();
  swift_release();
  if ((v40 & 1) != 0)
    return 0;
  v31 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems;
  swift_beginAccess(v31, &v40, 0, 0);
  sub_10004A160(v31, (uint64_t)v3, &qword_1011B1800);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
  {
    sub_10004FF60((uint64_t)v3, &qword_1011B1800);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v3, v7);
    v32 = sub_100049F28((unint64_t *)&unk_1011ACBE0, &qword_1011ACBD8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v7);
    dispatch thunk of Collection.endIndex.getter(&v38, v7, v32);
    v29 = v39 != v38;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v29;
}

uint64_t sub_1003E86F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t KeyPath;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  BOOL v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v3 = _s4PageOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v37 - v7);
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v10 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v38, v1, KeyPath, v10);
  swift_release();
  swift_release();
  v12 = v38;
  v11 = v39;
  swift_bridgeObjectRelease(v39);
  if ((v11 & 0x2000000000000000) != 0)
    v13 = HIBYTE(v11) & 0xF;
  else
    v13 = v12 & 0xFFFFFFFFFFFFLL;
  v14 = swift_getKeyPath(&unk_100EB94C8);
  v15 = swift_getKeyPath(&unk_100EB94F0);
  static Published.subscript.getter(&v38, v1, v14, v15);
  swift_release();
  swift_release();
  v16 = v38;
  v17 = swift_getKeyPath(&unk_100EB92E8);
  v18 = swift_getKeyPath(&unk_100EB9310);
  static Published.subscript.getter(&v38, v1, v17, v18);
  swift_release();
  swift_release();
  v19 = v38;
  v20 = sub_1003E8308();
  v21 = sub_1003E8134();
  if ((v16 & 1) != 0)
  {
    if (!v13)
    {
      *(_BYTE *)v8 = 0;
      v26 = v8;
      v27 = v3;
      v28 = 0;
      goto LABEL_19;
    }
    if (v20)
    {
      if (v19)
      {
        v22 = v8;
        v23 = v3;
        v24 = 2;
LABEL_17:
        swift_storeEnumTagMultiPayload(v22, v23, v24);
        v29 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_displayedPage;
        swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_displayedPage, &v38, 33, 0);
        v30 = (uint64_t)v8;
        v31 = v29;
LABEL_20:
        sub_1003F1E84(v30, v31);
        swift_endAccess(&v38);
        goto LABEL_21;
      }
      v32 = swift_getKeyPath(&unk_100EB9330);
      v33 = swift_getKeyPath(&unk_100EB9358);
      static Published.subscript.getter(v8, v1, v32, v33);
      swift_release();
      swift_release();
      v26 = v8;
      v27 = v3;
      v28 = 1;
LABEL_19:
      swift_storeEnumTagMultiPayload(v26, v27, v28);
      sub_1003F1C28((uint64_t)v8, (uint64_t)v5);
      v34 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_displayedPage;
      swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_displayedPage, &v38, 33, 0);
      v30 = (uint64_t)v5;
      v31 = v34;
      goto LABEL_20;
    }
    if (v21)
    {
      v22 = v8;
      v23 = v3;
      v24 = 3;
      goto LABEL_17;
    }
  }
  else
  {
    if (v13)
      v25 = 1;
    else
      v25 = v19;
    if ((v25 & 1) == 0)
    {
      v22 = v8;
      v23 = v3;
      v24 = 4;
      goto LABEL_17;
    }
  }
LABEL_21:
  v35 = v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_displayedPage;
  swift_beginAccess(v35, &v38, 0, 0);
  return sub_10005B704(v35, a1, _s4PageOMa);
}

uint64_t sub_1003E89D4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB9438);
  v2 = swift_getKeyPath(&unk_100EB9460);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1003E8A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v43 = a1;
  v2 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v2);
  v42 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = _s5EventOMa(0);
  v4 = __chkstk_darwin(v40);
  v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicLibrarySearchResponse(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v38 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B1848);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011B11D8);
  __chkstk_darwin(v12);
  v39 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char **)((char *)&v38 - v15);
  __chkstk_darwin(v17);
  v19 = (char **)((char *)&v38 - v18);
  KeyPath = swift_getKeyPath(&unk_100EB93A8);
  v21 = swift_getKeyPath(&unk_100EB93D0);
  static Published.subscript.getter(v19, v1, KeyPath, v21);
  swift_release();
  v22 = swift_release();
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  LODWORD(KeyPath) = ((uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v23)(v19, 1, v6, v22);
  result = sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011B11D8);
  if ((_DWORD)KeyPath != 1)
  {
    v25 = swift_getKeyPath(&unk_100EB93A8);
    v26 = swift_getKeyPath(&unk_100EB93D0);
    static Published.subscript.getter(v16, v1, v25, v26);
    swift_release();
    swift_release();
    v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_10004A160((uint64_t)v16, (uint64_t)v11, (uint64_t *)&unk_1011B11D8);
    sub_10004A160(v43, v27, (uint64_t *)&unk_1011B11D8);
    if (v23((uint64_t)v11, 1, v6) == 1)
    {
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B11D8);
      if (v23(v27, 1, v6) == 1)
        return sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011B11D8);
    }
    else
    {
      v28 = v39;
      sub_10004A160((uint64_t)v11, v39, (uint64_t *)&unk_1011B11D8);
      if (v23(v27, 1, v6) != 1)
      {
        v29 = v38;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v38, v27, v6);
        v30 = sub_100048748(&qword_1011B1850, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrarySearchResponse, (uint64_t)&protocol conformance descriptor for MusicLibrarySearchResponse);
        v31 = v28;
        v32 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v29, v6, v30);
        v33 = *(void (**)(char *, uint64_t))(v7 + 8);
        v33(v29, v6);
        sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B11D8);
        v33((char *)v31, v6);
        result = sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011B11D8);
        if ((v32 & 1) != 0)
          return result;
        goto LABEL_9;
      }
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B11D8);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v28, v6);
    }
    sub_10004FF60((uint64_t)v11, &qword_1011B1848);
LABEL_9:
    v34 = _s4PageOMa(0);
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
    v36 = (uint64_t)v41;
    v35(v41, 1, 1, v34);
    swift_storeEnumTagMultiPayload(v36, v40, 2);
    v37 = (uint64_t)v42;
    v35(v42, 1, 1, v34);
    sub_1003E9A5C(v36, v37);
    sub_10004FF60(v37, &qword_1011B17E8);
    return sub_10005B748(v36, _s5EventOMa);
  }
  return result;
}

uint64_t sub_1003E8EA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB93A8);
  v4 = swift_getKeyPath(&unk_100EB93D0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  return swift_release(KeyPath);
}

double sub_1003E8F0C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;

  v3 = v2;
  v6 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v12 = a2;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_100EB92A0);
    v14 = swift_getKeyPath(&unk_100EB92C8);
    static Published.subscript.getter(&v29, v3, KeyPath, v14);
    swift_release();
    swift_release();
    a1 = v29;
    v12 = v30;
  }
  v15 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v15 = a1 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    v16 = swift_getKeyPath(&unk_100EB92A0);
    v17 = swift_getKeyPath(&unk_100EB92C8);
    swift_bridgeObjectRetain();
    static Published.subscript.getter(&v29, v3, v16, v17);
    swift_release();
    swift_release();
    v18 = v29;
    v19 = v30;
    v20 = swift_getKeyPath(&unk_100EB92A0);
    v21 = swift_getKeyPath(&unk_100EB92C8);
    v29 = a1;
    v30 = v12;
    swift_retain();
    static Published.subscript.setter(&v29, v3, v20, v21);
    sub_1003E7454(v18, v19);
    swift_bridgeObjectRelease(v19);
    if (sub_1003E6E04())
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, 0x676F6C61746163, 0xE700000000000000, 0);
      swift_bridgeObjectRelease(0xE700000000000000);
      if ((v22 & 1) == 0)
      {
        v23 = type metadata accessor for MusicSearchResultGroup(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
        sub_1003EF404((uint64_t)v8);
        sub_10004FF60((uint64_t)v8, &qword_1011B11B0);
        return result;
      }
    }
    else
    {
      swift_bridgeObjectRelease(0xE700000000000000);
    }
    v25 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 1, 1, v25);
    type metadata accessor for MainActor(0);
    v26 = swift_retain();
    v27 = static MainActor.shared.getter(v26);
    v28 = (_QWORD *)swift_allocObject(&unk_1010C3B30, 40, 7);
    v28[2] = v27;
    v28[3] = &protocol witness table for MainActor;
    v28[4] = v3;
    sub_100166D14((uint64_t)v11, (uint64_t)&unk_1011B1978, (uint64_t)v28);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003E9200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[6] = v7;
  v4[7] = v8;
  return swift_task_switch(sub_1003E926C, v7, v8);
}

uint64_t sub_1003E926C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 32);
  KeyPath = swift_getKeyPath(&unk_100EB9480);
  v3 = swift_getKeyPath(&unk_100EB94A8);
  *(_BYTE *)(v0 + 80) = 1;
  swift_retain();
  static Published.subscript.setter(v0 + 80, v1, KeyPath, v3);
  v4 = swift_getKeyPath(&unk_100EB92A0);
  v5 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, v4, v5);
  swift_release();
  swift_release();
  v7 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 64) = v6;
  v8 = (_QWORD *)swift_task_alloc(dword_1011B1174);
  *(_QWORD *)(v0 + 72) = v8;
  *v8 = v0;
  v8[1] = sub_1003E9368;
  return sub_1003EC89C(v7, v6);
}

uint64_t sub_1003E9368()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_1003E93BC, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1003E93BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 40));
  KeyPath = swift_getKeyPath(&unk_100EB9480);
  v3 = swift_getKeyPath(&unk_100EB94A8);
  *(_BYTE *)(v0 + 81) = 0;
  swift_retain(v1);
  static Published.subscript.setter(v0 + 81, v1, KeyPath, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1003E9438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double result;
  uint8_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v38 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v13 = type metadata accessor for Logger(0);
  sub_100048B14(v13, (uint64_t)qword_10124DB48);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14 = v37(v12, a1, v7);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v36 = v1;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v35 = v6;
    v20 = v19;
    v40 = v19;
    v34 = a1;
    *(_DWORD *)v18 = 136446210;
    v33 = v18 + 4;
    v21 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v7, v21);
    v39 = sub_100322200(v22, v23, &v40);
    a1 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    v24 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v12, v7, v24);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Persisting MusicKit item=%{public}s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v25 = v20;
    v6 = v35;
    swift_slowDealloc(v25, -1, -1);
    v26 = v18;
    v2 = v36;
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
  v28 = v38;
  v37(v38, a1, v7);
  v29 = *(unsigned __int8 *)(v8 + 80);
  v30 = (v29 + 40) & ~v29;
  v31 = (char *)swift_allocObject(&unk_1010C3B08, v30 + v9, v29 | 7);
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  *((_QWORD *)v31 + 4) = v2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v31[v30], v28, v7);
  swift_retain();
  sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011B1968, (uint64_t)v31);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1003E9754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = a5;
  return swift_task_switch(sub_1003E976C, 0, 0);
}

uint64_t sub_1003E976C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v0[6] = *(_QWORD *)(v0[4] + OBJC_IVAR____TtCV5Music6Search9ViewModel_recentlySearchedViewModel);
  v1 = *((unsigned int *)&async function pointer to dispatch thunk of MusicRecentlySearchedViewModel.add(_:) + 1);
  v4 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of MusicRecentlySearchedViewModel.add(_:)
                                      + async function pointer to dispatch thunk of MusicRecentlySearchedViewModel.add(_:));
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc(v1);
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1003E97F0;
  return v4(v0[5]);
}

uint64_t sub_1003E97F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v5;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1003E9864, 0, 0);
  v5 = swift_release();
  return (*(uint64_t (**)(__n128))(v3 + 8))(v5);
}

uint64_t sub_1003E9864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release();
  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v1 = *(_QWORD *)(v0 + 64);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124DB48);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 64);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 16, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 24) = sub_100322200(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to persist MusicKit item with error=%{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 64));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E9A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v62 = a1;
  v4 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v4);
  v59 = (uint64_t *)((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = _s4PageOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v58 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v56 = (uint64_t)&v56 - v10;
  v61 = _s5EventOMa(0);
  __chkstk_darwin(v61);
  v57 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v60 = (uint64_t)&v56 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  v17 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v56 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v56 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v56 - v27;
  sub_10004A160(a2, (uint64_t)v25, &qword_1011B17E8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v30 = v2;
  if (v29(v25, 1, v6) == 1)
  {
    sub_1003E86F0((uint64_t)v28);
    sub_10004FF60((uint64_t)v25, &qword_1011B17E8);
  }
  else
  {
    sub_1003F1C28((uint64_t)v25, (uint64_t)v28);
  }
  v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v31(v28, 0, 1, v6);
  v32 = v62;
  sub_10005B704(v62, (uint64_t)v16, _s5EventOMa);
  v33 = v61;
  if (swift_getEnumCaseMultiPayload(v16, v61) == 2)
  {
    sub_100065228((uint64_t)v16, (uint64_t)v22, &qword_1011B17E8);
    if (v29(v22, 1, v6) == 1)
    {
      sub_10004FF60((uint64_t)v22, &qword_1011B17E8);
    }
    else
    {
      sub_10004FF60((uint64_t)v28, &qword_1011B17E8);
      v34 = (uint64_t)v22;
      v35 = v56;
      sub_1003F1C28(v34, v56);
      sub_1003F1C28(v35, (uint64_t)v28);
      v31(v28, 0, 1, v6);
    }
  }
  else
  {
    sub_10005B748((uint64_t)v16, _s5EventOMa);
  }
  sub_10004A160((uint64_t)v28, (uint64_t)v19, &qword_1011B17E8);
  if (v29(v19, 1, v6) != 1)
  {
    v47 = v58;
    sub_1003F1C28((uint64_t)v19, v58);
    v48 = sub_1003E6E04();
    v49 = v59;
    sub_100634DA4(v48, v59);
    KeyPath = swift_getKeyPath(&unk_100EB92A0);
    v51 = swift_getKeyPath(&unk_100EB92C8);
    static Published.subscript.getter(&v63, v30, KeyPath, v51);
    swift_release();
    swift_release();
    v52 = v64;
    sub_100637060(v32, v49, v63, v64);
    swift_bridgeObjectRelease(v52);
    sub_10005B748((uint64_t)v49, type metadata accessor for MetricsPageProperties);
    v53 = _s4PageOMa;
    v54 = v47;
LABEL_16:
    sub_10005B748(v54, v53);
    return sub_10004FF60((uint64_t)v28, &qword_1011B17E8);
  }
  sub_10004FF60((uint64_t)v19, &qword_1011B17E8);
  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v36 = type metadata accessor for Logger(0);
  sub_100048B14(v36, (uint64_t)qword_10124DB48);
  v37 = v60;
  v38 = sub_10005B704(v32, v60, _s5EventOMa);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v39, v40))
  {

    v53 = _s5EventOMa;
    v54 = v37;
    goto LABEL_16;
  }
  v41 = (uint8_t *)swift_slowAlloc(12, -1);
  v42 = swift_slowAlloc(32, -1);
  v63 = v42;
  *(_DWORD *)v41 = 136446210;
  v43 = v57;
  sub_10005B704(v37, v57, _s5EventOMa);
  v44 = String.init<A>(describing:)(v43, v33);
  v46 = v45;
  v65 = sub_100322200(v44, v45, &v63);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
  swift_bridgeObjectRelease(v46);
  sub_10005B748(v37, _s5EventOMa);
  _os_log_impl((void *)&_mh_execute_header, v39, v40, "Invalid page. Event was not enqueued. Event=%{public}s", v41, 0xCu);
  swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v42, -1, -1);
  swift_slowDealloc(v41, -1, -1);

  return sub_10004FF60((uint64_t)v28, &qword_1011B17E8);
}

uint64_t sub_1003E9FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5[14] = a4;
  v5[15] = a5;
  v6 = sub_100007E8C(&qword_1011ACBD8);
  v5[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[17] = v7;
  v5[18] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GenericMusicItem(0);
  v5[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[20] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[21] = swift_task_alloc(v10);
  v5[22] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011B1950);
  v5[23] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[24] = swift_task_alloc(v12);
  v5[25] = swift_task_alloc(v12);
  return swift_task_switch(sub_1003EA0F4, 0, 0);
}

uint64_t sub_1003EA0F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  Class isa;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  __n128 v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  _QWORD *v58;
  void **v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;

  v2 = v0[24];
  v1 = v0[25];
  v3 = v0[23];
  v4 = v0[16];
  v5 = v0[17];
  v6 = v0[14];
  v7 = type metadata accessor for JSONEncoder(0);
  v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v0[26] = JSONEncoder.init()(v8);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v66(v2, v6, v4);
  v9 = sub_100049F28((unint64_t *)&unk_1011ACBE0, &qword_1011ACBD8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v4);
  *(_QWORD *)(v2 + *(int *)(v3 + 36)) = v0[10];
  sub_100065228(v2, v1, &qword_1011B1950);
  v10 = (_QWORD *)(v1 + *(int *)(v3 + 36));
  v11 = *v10;
  v65 = v0 + 11;
  dispatch thunk of Collection.endIndex.getter(v0 + 11, v4, v9);
  if (v11 == v0[11])
  {
    v12 = _swiftEmptyArrayStorage;
  }
  else
  {
    v58 = v0 + 6;
    v59 = (void **)(v0 + 12);
    v62 = v0[17];
    v63 = v0 + 2;
    v12 = _swiftEmptyArrayStorage;
    v57 = v0 + 13;
    v61 = v10;
    v69 = v0[20];
    v64 = v0;
    v60 = v9;
    while (1)
    {
      v13 = v0[25];
      v14 = v0[22];
      v67 = v0[21];
      v68 = v12;
      v16 = v0[18];
      v15 = v0[19];
      v17 = v9;
      v18 = v0[16];
      v19 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v63, v10, v18, v17);
      (*(void (**)(uint64_t))(v69 + 16))(v14);
      v19(v63, 0);
      v66(v16, v13, v18);
      dispatch thunk of Collection.formIndex(after:)(v10, v18, v17);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v16, v18);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v67, v14, v15);
      v21 = static Task<>.isCancelled.getter(v20);
      v22 = v0[21];
      v23 = v0[19];
      if ((v21 & 1) != 0)
        break;
      v24 = sub_100041ADC((uint64_t)_swiftEmptyArrayStorage);
      v25 = sub_100048748(&qword_1011B1958, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v12 = v68;
      v26 = dispatch thunk of JSONEncoder.encode<A>(_:)(v22, v23, v25);
      v28 = v27;
      v29 = (void *)objc_opt_self(NSJSONSerialization);
      isa = Data._bridgeToObjectiveC()().super.isa;
      *v59 = 0;
      v31 = objc_msgSend(v29, "JSONObjectWithData:options:error:", isa, 0, v59);

      v32 = *v59;
      if (v31)
      {
        v33 = v32;
        _bridgeAnyObjectToAny(_:)(v58, v31);
        sub_1000652DC(v26, v28);
        swift_unknownObjectRelease(v31);
        v34 = sub_100007E8C((uint64_t *)&unk_1011A3090);
        v35 = v61;
        if ((swift_dynamicCast(v57, v58, (char *)&type metadata for Any + 8, v34, 6) & 1) != 0)
        {
          swift_bridgeObjectRelease(v24);
          v24 = *v57;
        }
      }
      else
      {
        v36 = v32;
        v37 = _convertNSErrorToError(_:)(v32);

        swift_willThrow(v38);
        sub_1000652DC(v26, v28);
        swift_errorRelease(v37);
        v35 = v61;
      }
      v39 = v24;
      v40 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
        v12 = sub_100432ADC(0, v68[2] + 1, 1, v68);
      v42 = v12[2];
      v41 = v12[3];
      if (v42 >= v41 >> 1)
        v12 = sub_100432ADC((_QWORD *)(v41 > 1), v42 + 1, 1, v12);
      v0 = v64;
      v43 = v64[21];
      v44 = v64[19];
      v45 = v64[16];
      v12[2] = v42 + 1;
      v12[v42 + 4] = v39;
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v43, v44);
      v10 = v40;
      v46 = *v40;
      v9 = v60;
      dispatch thunk of Collection.endIndex.getter(v65, v45, v60);
      if (v46 == v64[11])
        goto LABEL_16;
    }
    (*(void (**)(_QWORD, _QWORD))(v69 + 8))(v0[21], v0[19]);
    v12 = v68;
    v0 = v64;
  }
LABEL_16:
  v0[27] = v12;
  v47 = sub_10004FF60(v0[25], &qword_1011B1950);
  if ((static Task<>.isCancelled.getter(v47) & 1) != 0)
  {
    swift_release();
    swift_bridgeObjectRelease(v12);
    v48 = v0[24];
    v50 = v0[21];
    v49 = v0[22];
    v51 = v0[18];
    swift_task_dealloc(v0[25]);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return ((uint64_t (*)(void))v0[1])();
  }
  else
  {
    v53 = type metadata accessor for MainActor(0);
    v0[28] = static MainActor.shared.getter(v54);
    v55 = dispatch thunk of Actor.unownedExecutor.getter(v53, &protocol witness table for MainActor);
    return swift_task_switch(sub_1003EA658, v55, v56);
  }
}

uint64_t sub_1003EA658()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);
  swift_release();
  sub_1003EA77C(v1);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1003EA6DC, 0, 0);
}

uint64_t sub_1003EA6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 208));
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003EA77C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *rawValue;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::OpaquePointer v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  void (*v19)(Swift::OpaquePointer *, _QWORD);
  _QWORD *v20;
  Swift::OpaquePointer searchResultSections;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  rawValue = _swiftEmptyArrayStorage;
  if (v3)
  {
    searchResultSections._rawValue = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    type metadata accessor for JSSearchResultItem(0);
    v6 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v6++;
      v8 = swift_bridgeObjectRetain();
      sub_100327F68(v8);
      v10 = JSSearchResultItem.__allocating_init(modelObject:mediaAPIDictionary:)(0, v9);
      swift_bridgeObjectRelease(v7);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = *((_QWORD *)searchResultSections._rawValue + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized ContiguousArray._endMutation()(v13);
      --v3;
    }
    while (v3);
    rawValue = searchResultSections._rawValue;
  }
  v14 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v15._rawValue = (void *)swift_allocObject(v14, 40, 7);
  *((_OWORD *)v15._rawValue + 1) = xmmword_100EA7A90;
  type metadata accessor for JSSearchResultSection();
  v16 = JSSearchResultSection.__allocating_init(searchResultItems:)((uint64_t)rawValue);
  *((_QWORD *)v15._rawValue + 4) = v16;
  searchResultSections._rawValue = v15._rawValue;
  specialized Array._endMutation()(v16);
  JSSearchResultComponentController.updateSearchResults(searchResultSections:)(v15);
  swift_bridgeObjectRelease(v15._rawValue);
  KeyPath = swift_getKeyPath(&unk_100EB9438);
  v18 = swift_getKeyPath(&unk_100EB9460);
  v19 = (void (*)(Swift::OpaquePointer *, _QWORD))static Published.subscript.modify(&searchResultSections, v2, KeyPath, v18);
  if (__OFADD__(*v20, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v20;
    v19(&searchResultSections, 0);
    swift_release();
    swift_release();
  }
}

void sub_1003EA930()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  __n128 v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  __n128 v87;
  __n128 v88;
  void (*v89)(char *, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v110 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v109 = (char *)&v99 - v10;
  v11 = type metadata accessor for MusicRecentlySearchedViewModel.Entry(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v15);
  v111 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v112 = *(_QWORD *)(v17 - 8);
  v113 = v17;
  __chkstk_darwin(v17);
  v101 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v19);
  v105 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011B1800);
  __chkstk_darwin(v21);
  v108 = (uint64_t)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011ACBD8);
  v106 = *(_QWORD *)(v23 - 8);
  v107 = v23;
  __chkstk_darwin(v23);
  v102 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v103 = v27;
  v104 = (char *)&v99 - v26;
  __chkstk_darwin(v28);
  v100 = (char *)&v99 - v29;
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v31 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v114, v1, KeyPath, v31);
  swift_release();
  swift_release();
  v33 = (unint64_t)v114;
  v32 = v115;
  swift_bridgeObjectRelease(v115);
  v34 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0)
    v34 = v33 & 0xFFFFFFFFFFFFLL;
  if (v34)
  {
    if (sub_1003E6E04())
    {
      swift_bridgeObjectRelease(0xE700000000000000);
      return;
    }
    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676F6C61746163, 0xE700000000000000, 0x7972617262696CLL, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    if ((v49 & 1) == 0)
    {
      v50 = swift_getKeyPath(&unk_100EB92E8);
      v51 = swift_getKeyPath(&unk_100EB9310);
      static Published.subscript.getter(&v114, v1, v50, v51);
      swift_release();
      swift_release();
      v53 = v106;
      v52 = v107;
      v54 = v113;
      v55 = v111;
      if ((v114 & 1) == 0)
      {
        v56 = (uint64_t)&v1[OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems];
        swift_beginAccess(&v1[OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems], &v114, 0, 0);
        v57 = v108;
        sub_10004A160(v56, v108, &qword_1011B1800);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v57, 1, v52) != 1)
        {
          v89 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
          v90 = v100;
          v89(v100, v57, v52);
          v91 = type metadata accessor for TaskPriority(0);
          v92 = (uint64_t)v105;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v105, 1, 1, v91);
          v93 = v104;
          (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v104, v90, v52);
          v94 = *(unsigned __int8 *)(v53 + 80);
          v95 = (v94 + 32) & ~v94;
          v96 = (v103 + v95 + 7) & 0xFFFFFFFFFFFFFFF8;
          v97 = swift_allocObject(&unk_1010C3AB8, v96 + 8, v94 | 7);
          *(_QWORD *)(v97 + 16) = 0;
          *(_QWORD *)(v97 + 24) = 0;
          v89((char *)(v97 + v95), (uint64_t)v93, v52);
          *(_QWORD *)(v97 + v96) = v1;
          swift_retain();
          *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music6Search9ViewModel_jsSearchResultItemTranslationTask] = sub_100980A1C(v92, (uint64_t)&unk_1011B1940, v97);
          v98 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v90, v52, v98);
          return;
        }
        sub_10004FF60(v57, &qword_1011B1800);
      }
      v58 = swift_getKeyPath(&unk_100EB93F0);
      v59 = swift_getKeyPath(&unk_100EB9418);
      static Published.subscript.getter(v55, v1, v58, v59);
      swift_release();
      v60 = swift_release();
      v61 = v112;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v112 + 48))(v55, 1, v54, v60) == 1)
      {
        sub_10004FF60((uint64_t)v55, &qword_1011B1190);
      }
      else
      {
        v77 = v101;
        v78 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v61 + 32))(v101, v55, v54);
        v79 = v104;
        MusicCatalogSearchSuggestionsResponse.internalTopResults.getter(v78);
        v80 = type metadata accessor for TaskPriority(0);
        v81 = (uint64_t)v105;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v105, 1, 1, v80);
        v82 = v102;
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v102, v79, v52);
        v83 = *(unsigned __int8 *)(v53 + 80);
        v84 = (v83 + 32) & ~v83;
        v85 = (v103 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
        v86 = swift_allocObject(&unk_1010C3A90, v85 + 8, v83 | 7);
        *(_QWORD *)(v86 + 16) = 0;
        *(_QWORD *)(v86 + 24) = 0;
        (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v86 + v84, v82, v52);
        *(_QWORD *)(v86 + v85) = v1;
        swift_retain();
        *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music6Search9ViewModel_jsSearchResultItemTranslationTask] = sub_100980A1C(v81, (uint64_t)&unk_1011B1938, v86);
        v87 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v79, v52, v87);
        (*(void (**)(char *, uint64_t, __n128))(v112 + 8))(v77, v113, v88);
      }
    }
  }
  else
  {
    v113 = v12;
    v108 = v11;
    v35 = swift_getKeyPath(&unk_100EB9258);
    v36 = swift_getKeyPath(&unk_100EB9280);
    v101 = v1;
    static Published.subscript.getter(&v114, v1, v35, v36);
    swift_release();
    swift_release();
    v37 = *((_QWORD *)v114 + 2);
    if (v37)
    {
      v38 = &v114[(*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80)];
      v39 = *(_QWORD *)(v113 + 72);
      v111 = *(char **)(v113 + 16);
      v112 = v39;
      v100 = v114;
      swift_bridgeObjectRetain();
      v40 = (char *)_swiftEmptyArrayStorage;
      v42 = v109;
      v41 = v110;
      v43 = v108;
      do
      {
        v44 = ((uint64_t (*)(char *, char *, uint64_t))v111)(v14, v38, v43);
        MusicRecentlySearchedViewModel.Entry.item.getter(v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        (*(void (**)(char *, uint64_t))(v113 + 8))(v14, v43);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A20D0);
        }
        else
        {
          v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v45(v42, v4, v5);
          v45(v41, v42, v5);
          if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
            v40 = (char *)sub_1004329BC(0, *((_QWORD *)v40 + 2) + 1, 1, (unint64_t)v40);
          v47 = *((_QWORD *)v40 + 2);
          v46 = *((_QWORD *)v40 + 3);
          if (v47 >= v46 >> 1)
            v40 = (char *)sub_1004329BC(v46 > 1, v47 + 1, 1, (unint64_t)v40);
          *((_QWORD *)v40 + 2) = v47 + 1;
          v48 = (unint64_t)&v40[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
                                     + *(_QWORD *)(v6 + 72) * v47];
          v41 = v110;
          v45((char *)v48, v110, v5);
          v43 = v108;
          v42 = v109;
        }
        v38 += v112;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease_n(v100, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v114);
      v40 = (char *)_swiftEmptyArrayStorage;
    }
    v114 = v40;
    v62 = sub_100007E8C((uint64_t *)&unk_1011AB338);
    v63 = sub_100048748((unint64_t *)&qword_10119DD00, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v64 = sub_100049F28(&qword_1011B1810, (uint64_t *)&unk_1011AB338, (uint64_t)&protocol conformance descriptor for [A]);
    v65 = v104;
    MusicItemCollection.init<A>(_:)(&v114, v5, v62, v63, v64);
    v66 = type metadata accessor for TaskPriority(0);
    v67 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v105, 1, 1, v66);
    v69 = v106;
    v68 = v107;
    v70 = v102;
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v102, v65, v107);
    v71 = *(unsigned __int8 *)(v69 + 80);
    v72 = (v71 + 32) & ~v71;
    v73 = (v103 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = swift_allocObject(&unk_1010C3AE0, v73 + 8, v71 | 7);
    *(_QWORD *)(v74 + 16) = 0;
    *(_QWORD *)(v74 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v74 + v72, v70, v68);
    v75 = v101;
    *(_QWORD *)(v74 + v73) = v101;
    swift_retain();
    *(_QWORD *)&v75[OBJC_IVAR____TtCV5Music6Search9ViewModel_jsSearchResultItemTranslationTask] = sub_100980A1C(v67, (uint64_t)&unk_1011B1948, v74);
    v76 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v65, v68, v76);
  }
}

double sub_1003EB2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EB92E8);
  v5 = swift_getKeyPath(&unk_100EB9310);
  static Published.subscript.getter(&v17, v0, KeyPath, v5);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (v17 == 1)
  {
    v7 = swift_getKeyPath(&unk_100EB92A0);
    v8 = swift_getKeyPath(&unk_100EB92C8);
    static Published.subscript.getter(&v17, v0, v7, v8);
    swift_release();
    swift_release();
    v10 = v17;
    v9 = v18;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
    v11 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v11 = v10 & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      if (sub_1003E6E04())
      {
        v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, 0x676F6C61746163, 0xE700000000000000, 0);
        swift_bridgeObjectRelease(0xE700000000000000);
        if ((v12 & 1) == 0)
        {
          v13 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
          v14 = (_QWORD *)swift_allocObject(&unk_1010C3A40, 40, 7);
          v14[2] = 0;
          v14[3] = 0;
          v14[4] = v0;
          swift_retain();
          v15 = &unk_1011B1918;
LABEL_10:
          sub_100166D14((uint64_t)v3, (uint64_t)v15, (uint64_t)v14);
          *(_QWORD *)&result = swift_release().n128_u64[0];
          return result;
        }
      }
      else
      {
        swift_bridgeObjectRelease(0xE700000000000000);
      }
      v16 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 1, 1, v16);
      v14 = (_QWORD *)swift_allocObject(&unk_1010C3A68, 40, 7);
      v14[2] = 0;
      v14[3] = 0;
      v14[4] = v0;
      swift_retain();
      v15 = &unk_1011B1928;
      goto LABEL_10;
    }
  }
  return result;
}

uint64_t sub_1003EB4F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011B1164);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_1003EB650();
}

uint64_t sub_1003EB53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch(sub_1003EB554, 0, 0);
}

uint64_t sub_1003EB554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[4];
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v3 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(v0 + 2, v1, KeyPath, v3);
  swift_release();
  swift_release();
  v5 = v0[2];
  v4 = v0[3];
  v0[5] = v4;
  v6 = (_QWORD *)swift_task_alloc(dword_1011B1184);
  v0[6] = v6;
  *v6 = v0;
  v6[1] = sub_1003EB600;
  return sub_1003EE294(v5, v4);
}

uint64_t sub_1003EB600()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 40);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1003EB650()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v1[9] = v0;
  v2 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v1[10] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[11] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[12] = swift_task_alloc(v4);
  v1[13] = swift_task_alloc(v4);
  v1[14] = swift_task_alloc(v4);
  v1[15] = swift_task_alloc(v4);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1190) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v5);
  v1[17] = swift_task_alloc(v5);
  v1[18] = swift_task_alloc(v5);
  v1[19] = swift_task_alloc(v5);
  v1[20] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v1[21] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[22] = v8;
  v1[23] = v9;
  return swift_task_switch(sub_1003EB764, v8, v9);
}

uint64_t sub_1003EB764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  __n128 v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  void (*v52)(uint64_t, uint64_t, __n128);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 88) + 56);
  v4 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD))v3)(v1, 1, 1, *(_QWORD *)(v0 + 80));
  swift_beginAccess(v2 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory, v0 + 16, 0, 0);
  swift_retain();
  v5 = swift_bridgeObjectRetain();
  sub_1003F10B8(v5, v2, v1);
  v7 = v6;
  v8 = swift_release();
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 88) + 16))(*(_QWORD *)(v0 + 152), v7+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 88) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 88) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 88) + 72) * (v9 - 1), *(_QWORD *)(v0 + 80), v8);
    v4 = 0;
  }
  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v3(v10, v4, 1, v11, v8);
  v13 = swift_bridgeObjectRelease(v7);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v14)(v10, 1, v11, v13) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 152), &qword_1011B1190);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 144);
    v17 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    v21(v17, *(_QWORD *)(v0 + 152), v19);
    sub_10004A160(v15, v16, &qword_1011B1190);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v17, v19);
    v22 = v14(v16, 1, v19);
    v23 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 112);
    if (v22 == 1)
    {
      v21(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
      sub_10004FF60(v23, &qword_1011B1190);
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 80);
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), v25);
      v21(v24, v23, v25);
    }
    v26 = *(_QWORD **)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 80);
    KeyPath = swift_getKeyPath(&unk_100EB93F0);
    v30 = swift_getKeyPath(&unk_100EB9418);
    static Published.subscript.getter(v26, v28, KeyPath, v30);
    swift_release();
    v31 = swift_release();
    v32 = ((uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v14)(v26, 1, v27, v31);
    v33 = *(_QWORD *)(v0 + 136);
    v34 = *(_QWORD *)(v0 + 80);
    if (v32 == 1)
    {
      v35 = *(_QWORD *)(v0 + 120);
      v36 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 8);
      v36(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80));
      v36(v35, v34);
      sub_10004FF60(v33, &qword_1011B1190);
    }
    else
    {
      v37 = *(_QWORD *)(v0 + 112);
      v38 = *(_QWORD *)(v0 + 96);
      v21(v38, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 80));
      v39 = sub_100048748(&qword_1011B1840, (uint64_t (*)(uint64_t))&type metadata accessor for MusicCatalogSearchSuggestionsResponse, (uint64_t)&protocol conformance descriptor for MusicCatalogSearchSuggestionsResponse);
      v40 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v38, v34, v39);
      v41 = *(_QWORD *)(v0 + 112);
      v42 = *(_QWORD *)(v0 + 120);
      v43 = *(_QWORD *)(v0 + 88);
      v44 = *(_QWORD *)(v0 + 96);
      v45 = *(_QWORD *)(v0 + 80);
      if ((v40 & 1) != 0)
      {
        v46 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        v46(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
        v46(v41, v45);
        v46(v42, v45);
      }
      else
      {
        v71 = *(_QWORD *)(v0 + 120);
        v47 = *(_QWORD *)(v0 + 72);
        v48 = swift_getKeyPath(&unk_100EB92A0);
        v49 = swift_getKeyPath(&unk_100EB92C8);
        static Published.subscript.getter((_QWORD *)(v0 + 56), v47, v48, v49);
        swift_release();
        swift_release();
        v50 = *(_QWORD *)(v0 + 64);
        sub_1003EEEA4(v41, *(_QWORD *)(v0 + 56), v50);
        v51 = swift_bridgeObjectRelease(v50);
        v52 = *(void (**)(uint64_t, uint64_t, __n128))(v43 + 8);
        v52(v44, v45, v51);
        ((void (*)(uint64_t, uint64_t))v52)(v41, v45);
        ((void (*)(uint64_t, uint64_t))v52)(v71, v45);
      }
    }
  }
  v53 = *(_QWORD *)(v0 + 128);
  v54 = *(_QWORD *)(v0 + 80);
  sub_10004A160(*(_QWORD *)(v0 + 160), v53, &qword_1011B1190);
  if (v14(v53, 1, v54) == 1)
  {
    v55 = *(_QWORD *)(v0 + 72);
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011B1190);
    v56 = swift_getKeyPath(&unk_100EB92A0);
    v57 = swift_getKeyPath(&unk_100EB92C8);
    static Published.subscript.getter((_QWORD *)(v0 + 40), v55, v56, v57);
    swift_release();
    swift_release();
    v59 = *(_QWORD *)(v0 + 40);
    v58 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 192) = v58;
    v60 = (_QWORD *)swift_task_alloc(dword_1011B116C);
    *(_QWORD *)(v0 + 200) = v60;
    *v60 = v0;
    v60[1] = sub_1003EBC80;
    return sub_1003EC1E0(v59, v58);
  }
  else
  {
    v62 = *(_QWORD *)(v0 + 128);
    swift_release();
    sub_10004FF60(v62, &qword_1011B1190);
    v64 = *(_QWORD *)(v0 + 152);
    v63 = *(_QWORD *)(v0 + 160);
    v66 = *(_QWORD *)(v0 + 136);
    v65 = *(_QWORD *)(v0 + 144);
    v68 = *(_QWORD *)(v0 + 120);
    v67 = *(_QWORD *)(v0 + 128);
    v70 = *(_QWORD *)(v0 + 104);
    v69 = *(_QWORD *)(v0 + 112);
    v72 = *(_QWORD *)(v0 + 96);
    sub_10004FF60(v63, &qword_1011B1190);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003EBC80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 192);
  swift_task_dealloc(*(_QWORD *)(*v0 + 200));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_1003EBCD4, *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 184));
}

uint64_t sub_1003EBCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 96);
  sub_10004FF60(v2, &qword_1011B1190);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1003EBD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  void *object;
  Swift::Bool v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v36 = v8;
  v37 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v13 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v38, a2, KeyPath, v13);
  swift_release();
  swift_release();
  v14 = v38;
  v15 = v39;
  v18 = MusicCatalogSearchSuggestionsResponse.requestedTerm.getter(v16);
  v19 = v17;
  if (v14 == v18 && v15 == v17)
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v18, v17, 0);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v15);
    if ((v20 & 1) == 0)
      goto LABEL_6;
  }
  sub_10004FF60(a3, &qword_1011B1190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, a1, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
LABEL_6:
  v21 = swift_getKeyPath(&unk_100EB92A0);
  v22 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v38, a2, v21, v22);
  swift_release();
  swift_release();
  v23 = v39;
  v25._countAndFlagsBits = MusicCatalogSearchSuggestionsResponse.requestedTerm.getter(v24);
  object = v25._object;
  v27 = String.hasPrefix(_:)(v25);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v23);
  if (!v27)
  {
    v28 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 1, 1, v28);
    v29 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v37, a1, v6);
    type metadata accessor for MainActor(0);
    v30 = swift_retain();
    v31 = static MainActor.shared.getter(v30);
    v32 = *(unsigned __int8 *)(v7 + 80);
    v33 = (v32 + 40) & ~v32;
    v34 = (char *)swift_allocObject(&unk_1010C3A18, v33 + v36, v32 | 7);
    *((_QWORD *)v34 + 2) = v31;
    *((_QWORD *)v34 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v34 + 4) = a2;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v34[v33], v29, v6);
    sub_100166D14((uint64_t)v11, (uint64_t)&unk_1011B1908, (uint64_t)v34);
    swift_release();
  }
  return v27;
}

uint64_t sub_1003EC06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[8] = a4;
  v5[9] = a5;
  v6 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v5[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[11] = v7;
  v5[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003EC100, v10, v11);
}

uint64_t sub_1003EC100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory);
  swift_beginAccess(v3, v0 + 16, 0, 0);
  v4 = *v3;
  swift_bridgeObjectRetain();
  v5 = sub_1008AB780(v2, v4);
  LOBYTE(v2) = v6;
  swift_bridgeObjectRelease(v4);
  if ((v2 & 1) == 0)
  {
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 80);
    swift_beginAccess(v3, v0 + 40, 33, 0);
    sub_10072892C(v5, v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_endAccess(v0 + 40);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003EC1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v4 = sub_100007E8C(&qword_1011B18F0);
  v3[17] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[18] = v5;
  v3[19] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicCatalogSearchSuggestionsRequest(0);
  v3[20] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[21] = v7;
  v3[22] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1190) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[23] = swift_task_alloc(v8);
  v3[24] = swift_task_alloc(v8);
  v3[25] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v3[26] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003EC2E4, v11, v12);
}

uint64_t sub_1003EC2E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  _QWORD *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_release();
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
  {
    v10 = *(_QWORD **)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 128);
    v14 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
    KeyPath = swift_getKeyPath(&unk_100EB93F0);
    v16 = swift_getKeyPath(&unk_100EB9418);
    static Published.subscript.getter(v10, v13, KeyPath, v16);
    swift_release();
    swift_release();
    v17 = swift_getKeyPath(&unk_100EB93F0);
    v18 = swift_getKeyPath(&unk_100EB9418);
    sub_10004A160(v11, v12, &qword_1011B1190);
    swift_retain();
    static Published.subscript.setter(v12, v13, v17, v18);
    sub_1003E6384((uint64_t)v10);
    sub_10004FF60(v11, &qword_1011B1190);
    sub_10004FF60((uint64_t)v10, &qword_1011B1190);
    goto LABEL_30;
  }
  v4 = (_OWORD *)(v0 + 16);
  v5 = sub_1003F1620();
  if (!v5)
  {
    *(_QWORD *)(v0 + 48) = 0;
    *v4 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    goto LABEL_14;
  }
  v6 = v5;
  if (!*(_QWORD *)(v5 + 16) || (v7 = sub_10079C2C4(0xD000000000000015, 0x8000000100E386B0), (v8 & 1) == 0))
  {
    *(_QWORD *)(v0 + 48) = 0;
    *v4 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease(v6);
    goto LABEL_14;
  }
  sub_100051FEC(*(_QWORD *)(v6 + 56) + 40 * v7, v0 + 16);
  swift_bridgeObjectRelease(v6);
  if (!*(_QWORD *)(v0 + 40))
  {
LABEL_14:
    sub_10004FF60(v0 + 16, &qword_1011EAEC0);
    v9 = 5;
    goto LABEL_15;
  }
  if (swift_dynamicCast(v0 + 104, v0 + 16, &type metadata for AnyHashable, &type metadata for Int, 6))
    v9 = *(_QWORD *)(v0 + 104);
  else
    v9 = 5;
LABEL_15:
  v19 = (_OWORD *)(v0 + 56);
  v20 = sub_1003F1620();
  if (!v20)
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v19 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_25:
    sub_10004FF60(v0 + 56, &qword_1011EAEC0);
    v24 = 9;
    goto LABEL_26;
  }
  v21 = v20;
  if (*(_QWORD *)(v20 + 16) && (v22 = sub_10079C2C4(0xD00000000000001ALL, 0x8000000100E38690), (v23 & 1) != 0))
  {
    sub_100051FEC(*(_QWORD *)(v21 + 56) + 40 * v22, v0 + 56);
  }
  else
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v19 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease(v21);
  if (!*(_QWORD *)(v0 + 80))
    goto LABEL_25;
  if (swift_dynamicCast(v0 + 96, v0 + 56, &type metadata for AnyHashable, &type metadata for Int, 6))
    v24 = *(_QWORD *)(v0 + 96);
  else
    v24 = 9;
LABEL_26:
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 120);
  v27 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  v29 = sub_1003F12D8();
  MusicCatalogSearchSuggestionsRequest.init(term:includingTopResultsOfTypes:)(v28, v26, v29);
  MusicCatalogSearchSuggestionsRequest.suggestionsLimit.setter(v9, 0);
  MusicCatalogSearchSuggestionsRequest.topResultsLimit.setter(v24, 0);
  v30 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v25, &protocol witness table for MusicCatalogSearchSuggestionsRequest);
  v31 = OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsAutoupdatingResponse;
  *(_QWORD *)(v27 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsAutoupdatingResponse) = v30;
  swift_release();
  v32 = *(_QWORD *)(v27 + v31);
  v33 = *(_QWORD *)(v0 + 168);
  v34 = *(_QWORD *)(v0 + 160);
  if (v32)
  {
    v35 = *(_QWORD *)(v0 + 152);
    v49 = *(_QWORD *)(v0 + 144);
    v50 = *(_QWORD *)(v0 + 176);
    v37 = *(_QWORD *)(v0 + 128);
    v36 = *(_QWORD *)(v0 + 136);
    v38 = *(_QWORD *)(v0 + 112);
    v39 = *(_QWORD *)(v0 + 120);
    v40 = swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v40);
    swift_release();
    v41 = (_QWORD *)swift_allocObject(&unk_1010C39F0, 40, 7);
    v41[2] = v37;
    v41[3] = v38;
    v41[4] = v39;
    v42 = sub_100049F28(&qword_1011B18F8, &qword_1011B18F0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    swift_retain();
    swift_bridgeObjectRetain();
    v32 = Publisher<>.sink(receiveValue:)(sub_1003F1894, v41, v36, v42);
    v43 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v49 + 8))(v35, v36, v43);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v50, v34);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t))(v33 + 8))(*(_QWORD *)(v0 + 176), v34);
  }
  *(_QWORD *)(*(_QWORD *)(v0 + 128)
            + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsAutoupdatingSubscription) = v32;
  swift_release();
LABEL_30:
  v44 = *(_QWORD *)(v0 + 192);
  v46 = *(_QWORD *)(v0 + 176);
  v45 = *(_QWORD *)(v0 + 184);
  v47 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003EC760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v7 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v9, &qword_1011B1190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_10004FF60((uint64_t)v9, &qword_1011B1190);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  sub_1003EF174((uint64_t)v13);
  sub_1003EEEA4((uint64_t)v13, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1003EC89C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  v4 = sub_100007E8C(&qword_1011A08F0);
  v3[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011B1888);
  v3[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[23] = v6;
  v3[24] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B1890);
  v3[25] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[26] = v8;
  v3[27] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicCatalogInternalSearchRequest(0, v9);
  v3[28] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[29] = v11;
  v3[30] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicCatalogInternalSearchRequest.LyricsOption(0);
  v3[31] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[32] = v13;
  v3[33] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B17E8);
  v3[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s5EventOMa(0);
  v3[35] = v15;
  v3[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B1830);
  v3[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  v3[38] = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003ECA44, v19, v20);
}

uint64_t sub_1003ECA44()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  swift_release();
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
  {
    v10 = *(_QWORD *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 296);
    v12 = *(_QWORD *)(v0 + 272);
    v13 = *(_QWORD *)(v0 + 280);
    v14 = *(_QWORD *)(v0 + 160);
    v15 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
    v16 = v14 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
    swift_beginAccess(v14 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, v0 + 96, 33, 0);
    sub_1000A5508(v11, v16, &qword_1011B1830);
    swift_endAccess(v0 + 96);
    v17 = _s4PageOMa(0);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v18(v10, 1, 1, v17);
    swift_storeEnumTagMultiPayload(v10, v13, 2);
    v18(v12, 1, 1, v17);
    sub_1003E9A5C(v10, v12);
    sub_10004FF60(v12, &qword_1011B17E8);
    sub_10005B748(v10, _s5EventOMa);
    goto LABEL_29;
  }
  v4 = (_OWORD *)(v0 + 16);
  v5 = sub_1003F1620();
  if (!v5)
  {
    *(_QWORD *)(v0 + 48) = 0;
    *v4 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    goto LABEL_14;
  }
  v6 = v5;
  if (!*(_QWORD *)(v5 + 16) || (v7 = sub_10079C2C4(0xD000000000000012, 0x8000000100E38670), (v8 & 1) == 0))
  {
    *(_QWORD *)(v0 + 48) = 0;
    *v4 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease(v6);
    goto LABEL_14;
  }
  sub_100051FEC(*(_QWORD *)(v6 + 56) + 40 * v7, v0 + 16);
  swift_bridgeObjectRelease(v6);
  if (!*(_QWORD *)(v0 + 40))
  {
LABEL_14:
    sub_10004FF60(v0 + 16, &qword_1011EAEC0);
    v9 = 1;
    goto LABEL_15;
  }
  if (swift_dynamicCast(v0 + 136, v0 + 16, &type metadata for AnyHashable, &type metadata for Int, 6))
    v9 = *(_QWORD *)(v0 + 136);
  else
    v9 = 1;
LABEL_15:
  v19 = (_OWORD *)(v0 + 56);
  v20 = sub_1003F1620();
  v75 = v9;
  if (v20)
  {
    v21 = v20;
    if (*(_QWORD *)(v20 + 16) && (v22 = sub_10079C2C4(0x4C73746C75736572, 0xEC00000074696D69), (v23 & 1) != 0))
    {
      sub_100051FEC(*(_QWORD *)(v21 + 56) + 40 * v22, v0 + 56);
    }
    else
    {
      *(_QWORD *)(v0 + 88) = 0;
      *v19 = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
    }
    swift_bridgeObjectRelease(v21);
    if (*(_QWORD *)(v0 + 80))
    {
      v24 = swift_dynamicCast(v0 + 128, v0 + 56, &type metadata for AnyHashable, &type metadata for Int, 6);
      v25 = *(_QWORD *)(v0 + 128);
      if (!v24)
        v25 = 25;
      goto LABEL_26;
    }
  }
  else
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v19 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  sub_10004FF60(v0 + 56, &qword_1011EAEC0);
  v25 = 25;
LABEL_26:
  v70 = v25;
  v27 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 240);
  v73 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 224);
  v30 = *(_QWORD *)(v0 + 232);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 144);
  v72 = swift_allocBox(v29);
  v35 = v34;
  swift_bridgeObjectRetain();
  v36 = sub_1003F12D8();
  MusicCatalogInternalSearchRequest.init(term:types:)(v33, v31, v36);
  MusicCatalogInternalSearchRequest.sparseCount.setter(v75, 0);
  MusicCatalogInternalSearchRequest.limit.setter(v70, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v26, enum case for MusicCatalogInternalSearchRequest.LyricsOption.includeWithoutHighlights(_:), v73);
  MusicCatalogInternalSearchRequest.lyricsOption.setter(v26);
  MusicCatalogInternalSearchRequest.includeImmersiveContent.setter(1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v28, v35, v29);
  v37 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v29, &protocol witness table for MusicCatalogInternalSearchRequest);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  v38 = OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchAutoupdatingResponse;
  *(_QWORD *)(v32 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchAutoupdatingResponse) = v37;
  swift_release();
  v39 = *(_QWORD *)(v32 + v38);
  if (v39)
  {
    v40 = *(_QWORD *)(v0 + 216);
    v41 = *(_QWORD *)(v0 + 192);
    v74 = *(_QWORD *)(v0 + 200);
    v76 = *(_QWORD *)(v0 + 208);
    v42 = *(_QWORD *)(v0 + 176);
    v43 = *(_QWORD *)(v0 + 160);
    v44 = *(_QWORD *)(v0 + 168);
    v45 = *(_QWORD *)(v0 + 152);
    v69 = *(_QWORD *)(v0 + 184);
    v71 = *(_QWORD *)(v0 + 144);
    v46 = swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v46);
    swift_release();
    v47 = sub_1000A9B84();
    *(_QWORD *)(v0 + 120) = static OS_dispatch_queue.main.getter(v47, v48, v49, v50, v51, v52, v53, v54);
    v55 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v44, 1, 1, v55);
    v56 = sub_100049F28(&qword_1011B1898, &qword_1011B1888, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v57 = sub_100048748((unint64_t *)&qword_1011A89B0, (uint64_t (*)(uint64_t))sub_1000A9B84, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    Publisher.receive<A>(on:options:)(v0 + 120, v44, v42, v47, v56, v57);
    sub_10004FF60(v44, &qword_1011A08F0);

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v41, v42);
    v58 = (_QWORD *)swift_allocObject(&unk_1010C39A0, 48, 7);
    v58[2] = v43;
    v58[3] = v71;
    v58[4] = v45;
    v58[5] = v72;
    v59 = sub_100049F28(&qword_1011B18A0, &qword_1011B1890, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v39 = Publisher<>.sink(receiveValue:)(sub_1003F17D4, v58, v74, v59);
    v60 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v76 + 8))(v40, v74, v60);
  }
  *(_QWORD *)(*(_QWORD *)(v0 + 160) + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchAutoupdatingSubscription) = v39;
  swift_release();
  swift_release();
LABEL_29:
  v61 = *(_QWORD *)(v0 + 288);
  v63 = *(_QWORD *)(v0 + 264);
  v62 = *(_QWORD *)(v0 + 272);
  v64 = *(_QWORD *)(v0 + 240);
  v65 = *(_QWORD *)(v0 + 216);
  v66 = *(_QWORD *)(v0 + 192);
  v67 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003ED02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v75 = a3;
  v76 = a4;
  v74 = a2;
  v77 = a1;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v73 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v8);
  v72 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - v11;
  v13 = sub_100007E8C(&qword_1011B1830);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - v20;
  v22 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v67 - v28;
  type metadata accessor for MusicCatalogInternalSearchRequest(0, v27);
  v30 = swift_projectBox(a5);
  sub_10004A160(v77, (uint64_t)v21, &qword_1011B1830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    return sub_10004FF60((uint64_t)v21, &qword_1011B1830);
  v69 = v18;
  v70 = v12;
  v71 = v15;
  v77 = v30;
  v68 = v24;
  v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v32(v29, v21, v22);
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v34 = swift_getKeyPath(&unk_100EB92C8);
  v35 = v74;
  static Published.subscript.getter(&v78, v74, KeyPath, v34);
  swift_release();
  swift_release();
  v36 = v79;
  if (v78 == v75 && v79 == v76)
  {
    swift_bridgeObjectRelease(v76);
    v37 = v77;
    v38 = (uint64_t)v71;
LABEL_7:
    *(_QWORD *)(v35 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsAutoupdatingSubscription) = 0;
    v40 = swift_release();
    v41 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t, __n128))(v23 + 16))(v69, v29, v22, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v41, 0, 1, v22);
    sub_100065228(v41, v38, &qword_1011B1830);
    v42 = v35 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
    swift_beginAccess(v35 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, &v78, 33, 0);
    sub_1000A5508(v38, v42, &qword_1011B1830);
    v43 = swift_endAccess(&v78);
    v44 = MusicCatalogInternalSearchResponse.resultGroups.getter(v43);
    v45 = *(_QWORD *)(v44 + 16);
    swift_bridgeObjectRelease(v44);
    v46 = type metadata accessor for MusicSearchResultGroup(0);
    v47 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v70, 1, 1, v46);
    if (v45)
    {
      sub_1003EF404(v47);
    }
    else
    {
      v48 = swift_getKeyPath(&unk_100EB9330);
      v49 = swift_getKeyPath(&unk_100EB9358);
      v50 = v72;
      sub_10004A160(v47, v72, &qword_1011B11B0);
      swift_retain();
      v51 = v50;
      v37 = v77;
      static Published.subscript.setter(v51, v35, v48, v49);
      sub_1003E68FC();
    }
    sub_10004FF60(v47, &qword_1011B11B0);
    goto LABEL_11;
  }
  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v79, v75, v76, 0);
  swift_bridgeObjectRelease(v36);
  v37 = v77;
  v38 = (uint64_t)v71;
  if ((v39 & 1) != 0)
    goto LABEL_7;
LABEL_11:
  v52 = swift_beginAccess(v37, &v78, 32, 0);
  v53 = MusicCatalogInternalSearchRequest.sparseCount.getter(v52);
  if ((v54 & 1) != 0)
  {
    swift_endAccess(&v78);
  }
  else
  {
    v55 = v53;
    v56 = swift_endAccess(&v78);
    v57 = MusicCatalogInternalSearchResponse.resultGroups.getter(v56);
    v58 = *(_QWORD *)(v57 + 16);
    v59 = swift_bridgeObjectRelease(v57);
    if (v55 < v58)
    {
      v60 = type metadata accessor for TaskPriority(0);
      v61 = (uint64_t)v73;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v73, 1, 1, v60);
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v29, v22);
      type metadata accessor for MainActor(0);
      v62 = swift_retain();
      v63 = static MainActor.shared.getter(v62);
      v64 = *(unsigned __int8 *)(v23 + 80);
      v65 = (v64 + 40) & ~v64;
      v66 = (char *)swift_allocObject(&unk_1010C39C8, v65 + v68, v64 | 7);
      *((_QWORD *)v66 + 2) = v63;
      *((_QWORD *)v66 + 3) = &protocol witness table for MainActor;
      *((_QWORD *)v66 + 4) = v35;
      v32(&v66[v65], v25, v22);
      sub_100166D14(v61, (uint64_t)&unk_1011B18B0, (uint64_t)v66);
      v59 = swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v23 + 8))(v29, v22, v59);
}

uint64_t sub_1003ED550()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[4] = type metadata accessor for MainActor(0);
  v0[5] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1011B117C);
  v0[6] = v2;
  *v2 = v0;
  v2[1] = sub_1003ED5B4;
  return sub_1003ED834();
}

uint64_t sub_1003ED5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1003ED63C;
  else
    v6 = sub_1001B4208;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1003ED63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release();
  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124DB48);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 56);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 16, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 24) = sub_100322200(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch additional catalog search results with error=%{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003ED834()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v1[8] = v0;
  v2 = sub_100007E8C(&qword_1011B11B0);
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MusicSearchResultGroup(0);
  v1[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[11] = v4;
  v1[12] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011B1830) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v5);
  v1[14] = swift_task_alloc(v5);
  v1[15] = swift_task_alloc(v5);
  v1[16] = swift_task_alloc(v5);
  v6 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
  v1[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[18] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[19] = swift_task_alloc(v8);
  v1[20] = swift_task_alloc(v8);
  v1[21] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v1[22] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v1[23] = v11;
  v1[24] = v12;
  return swift_task_switch(sub_1003ED97C, v11, v12);
}

uint64_t sub_1003ED97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
  *(_QWORD *)(v0 + 200) = OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
  v6 = v4 + v5;
  swift_beginAccess(v4 + v5, v0 + 16, 0, 0);
  sub_10004A160(v6, v3, &qword_1011B1830);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 208) = v7;
  if (v7(v3, 1, v1) == 1)
  {
    v8 = *(_QWORD *)(v0 + 128);
    swift_release();
    sub_10004FF60(v8, &qword_1011B1830);
  }
  else
  {
    v9 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
    if ((MusicCatalogInternalSearchResponse.hasAdditionalItems.getter(v9) & 1) != 0)
    {
      v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogInternalSearchResponse.responseWithAdditionalItems()[1]);
      *(_QWORD *)(v0 + 216) = v10;
      *v10 = v0;
      v10[1] = sub_1003EDB20;
      return MusicCatalogInternalSearchResponse.responseWithAdditionalItems()(*(_QWORD *)(v0 + 160));
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136));
    swift_release();
  }
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003EDB20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003EDF8C;
  else
    v4 = sub_1003EDB80;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 184), *(_QWORD *)(v2 + 192));
}

uint64_t sub_1003EDB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD **)(v0 + 72);
  v68 = *(_QWORD *)(v0 + 88);
  v70 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = swift_release();
  v10 = v8 + v1;
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  v67(v5, v2, v4, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  sub_100065228(v5, v6, &qword_1011B1830);
  swift_beginAccess(v10, v0 + 40, 33, 0);
  sub_1000A5508(v6, v10, &qword_1011B1830);
  swift_endAccess(v0 + 40);
  KeyPath = swift_getKeyPath(&unk_100EB9330);
  v12 = swift_getKeyPath(&unk_100EB9358);
  static Published.subscript.getter(v7, v8, KeyPath, v12);
  swift_release();
  v13 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v68 + 48))(v7, 1, v70, v13) == 1)
  {
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 8);
    v17(*(_QWORD *)(v0 + 160), v15);
    v17(v14, v15);
    sub_10004FF60(v16, &qword_1011B11B0);
    goto LABEL_17;
  }
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v19 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_10004A160(v21, v20, &qword_1011B1830);
  if (v18(v20, 1, v19))
  {
    v22 = *(_QWORD *)(v0 + 144);
    sub_10004FF60(*(_QWORD *)(v0 + 104), &qword_1011B1830);
    v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
LABEL_16:
    v46 = *(_QWORD *)(v0 + 168);
    v47 = *(_QWORD *)(v0 + 136);
    v49 = *(_QWORD *)(v0 + 88);
    v48 = *(_QWORD *)(v0 + 96);
    v50 = *(_QWORD *)(v0 + 80);
    ((void (*)(_QWORD, uint64_t, __n128))v24)(*(_QWORD *)(v0 + 160), v47, v23);
    v24(v46, v47);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    goto LABEL_17;
  }
  v26 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v67)(v25, v28, v27);
  v29 = sub_10004FF60(v28, &qword_1011B1830);
  v30 = MusicCatalogInternalSearchResponse.resultGroups.getter(v29);
  v24 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v31 = ((uint64_t (*)(uint64_t, uint64_t))v24)(v25, v27);
  v32 = *(_QWORD *)(v30 + 16);
  if (!v32)
  {
    v45 = v30;
LABEL_15:
    v23 = swift_bridgeObjectRelease(v45);
    goto LABEL_16;
  }
  v33 = 0;
  v34 = *(_QWORD *)(v0 + 88);
  v71 = v30;
  v35 = v30 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  v36 = *(_QWORD *)(v34 + 72);
  while (1)
  {
    v37 = MusicSearchResultGroup.id.getter(v31);
    v39 = v38;
    v40 = MusicSearchResultGroup.id.getter(v37);
    if (v37 == v40 && v39 == v41)
    {
      swift_bridgeObjectRelease(v71);
      swift_bridgeObjectRelease(v39);
      goto LABEL_20;
    }
    v43 = v41;
    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v40, v41, 0);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v43);
    if ((v44 & 1) != 0)
      break;
    ++v33;
    v35 += v36;
    if (v32 == v33)
    {
      v45 = v71;
      goto LABEL_15;
    }
  }
  v39 = v71;
LABEL_20:
  v60 = *(_QWORD *)(v0 + 160);
  v61 = *(_QWORD *)(v0 + 168);
  v62 = *(_QWORD *)(v0 + 136);
  v63 = *(_QWORD *)(v0 + 88);
  v69 = *(_QWORD *)(v0 + 80);
  v72 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease(v39);
  v65 = swift_task_alloc(32);
  *(_QWORD *)(v65 + 16) = v64;
  *(_QWORD *)(v65 + 24) = v33;
  v66 = static Animation.default.getter(v65);
  withAnimation<A>(_:_:)(v66, sub_1003F10A0, v65, (char *)&type metadata for () + 8);
  swift_release();
  swift_task_dealloc(v65);
  v24(v60, v62);
  v24(v61, v62);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v72, v69);
LABEL_17:
  v51 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 152);
  v54 = *(_QWORD *)(v0 + 120);
  v53 = *(_QWORD *)(v0 + 128);
  v56 = *(_QWORD *)(v0 + 104);
  v55 = *(_QWORD *)(v0 + 112);
  v57 = *(_QWORD *)(v0 + 96);
  v58 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003EDF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003EE054(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v4 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100007E8C(&qword_1011B1830);
  __chkstk_darwin(v8);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v11);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = a1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, v22, 0, 0);
  sub_10004A160(v14, (uint64_t)v10, &qword_1011B1830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_10004FF60((uint64_t)v10, &qword_1011B1830);
    v15 = type metadata accessor for MusicSearchResultGroup(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 1, 1, v15);
LABEL_6:
    sub_1003EF404((uint64_t)v13);
    return sub_10004FF60((uint64_t)v13, &qword_1011B11B0);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v16 = sub_10004FF60((uint64_t)v10, &qword_1011B1830);
  v17 = MusicCatalogInternalSearchResponse.resultGroups.getter(v16);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v17 + 16) > a2)
  {
    v19 = type metadata accessor for MusicSearchResultGroup(0);
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v13, v17+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * a2, v19);
    swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v19);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003EE294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_100007E8C(&qword_1011B1858);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicLibrarySearchRequest(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v3[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B11D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v8);
  v3[12] = swift_task_alloc(v8);
  v3[13] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v3[14] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003EE398, v11, v12);
}

uint64_t sub_1003EE398()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  _QWORD *v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_release();
  v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v4 = v1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);
    v8 = *(_QWORD *)(v0 + 16);
    v9 = sub_100007E8C(&qword_1011B1860);
    v10 = swift_allocObject(v9, 160, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EAFD20;
    *(_QWORD *)(v10 + 32) = type metadata accessor for Artist(0);
    *(_QWORD *)(v10 + 40) = &protocol witness table for Artist;
    *(_QWORD *)(v10 + 48) = type metadata accessor for Album(0);
    *(_QWORD *)(v10 + 56) = &protocol witness table for Album;
    *(_QWORD *)(v10 + 64) = type metadata accessor for Song(0);
    *(_QWORD *)(v10 + 72) = &protocol witness table for Song;
    *(_QWORD *)(v10 + 80) = type metadata accessor for Playlist(0);
    *(_QWORD *)(v10 + 88) = &protocol witness table for Playlist;
    *(_QWORD *)(v10 + 96) = type metadata accessor for MusicVideo(0);
    *(_QWORD *)(v10 + 104) = &protocol witness table for MusicVideo;
    v11 = type metadata accessor for Composer(0);
    v12 = sub_100048748(&qword_1011B1868, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
    *(_QWORD *)(v10 + 112) = v11;
    *(_QWORD *)(v10 + 120) = v12;
    v13 = type metadata accessor for TVEpisode(0);
    v14 = sub_100048748(&qword_1011B1870, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    *(_QWORD *)(v10 + 128) = v13;
    *(_QWORD *)(v10 + 136) = v14;
    v15 = type metadata accessor for MusicMovie(0);
    v16 = sub_100048748(&qword_1011B1878, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
    *(_QWORD *)(v10 + 144) = v15;
    *(_QWORD *)(v10 + 152) = v16;
    swift_bridgeObjectRetain();
    MusicLibrarySearchRequest.init(term:types:)(v8, v6, v10);
    MusicLibrarySearchRequest.includeTopResults.setter(1);
    MusicLibrarySearchRequest.topResultsLimit.setter(20, 0);
    v17 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v5, &protocol witness table for MusicLibrarySearchRequest);
    v18 = OBJC_IVAR____TtCV5Music6Search9ViewModel_librarySearchAutoupdatingResponse;
    *(_QWORD *)(v7 + OBJC_IVAR____TtCV5Music6Search9ViewModel_librarySearchAutoupdatingResponse) = v17;
    swift_release();
    v19 = *(_QWORD *)(v7 + v18);
    v20 = *(_QWORD *)(v0 + 72);
    v21 = *(_QWORD *)(v0 + 64);
    if (v19)
    {
      v22 = *(_QWORD *)(v0 + 56);
      v45 = *(_QWORD *)(v0 + 48);
      v46 = *(_QWORD *)(v0 + 80);
      v24 = *(_QWORD *)(v0 + 32);
      v23 = *(_QWORD *)(v0 + 40);
      v25 = *(_QWORD *)(v0 + 16);
      v26 = *(_QWORD *)(v0 + 24);
      v27 = swift_retain();
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v27);
      swift_release();
      v28 = (_QWORD *)swift_allocObject(&unk_1010C3978, 40, 7);
      v28[2] = v24;
      v28[3] = v25;
      v28[4] = v26;
      v29 = sub_100049F28(&qword_1011B1880, &qword_1011B1858, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      swift_retain();
      swift_bridgeObjectRetain();
      v19 = Publisher<>.sink(receiveValue:)(sub_1003F1094, v28, v23, v29);
      v30 = swift_release();
      (*(void (**)(uint64_t, uint64_t, __n128))(v45 + 8))(v22, v23, v30);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v46, v21);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t))(v20 + 8))(*(_QWORD *)(v0 + 80), v21);
    }
    *(_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtCV5Music6Search9ViewModel_librarySearchAutoupdatingSubscription) = v19;
    swift_release();
  }
  else
  {
    v31 = *(_QWORD **)(v0 + 96);
    v32 = *(_QWORD *)(v0 + 104);
    v33 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 32);
    v35 = type metadata accessor for MusicLibrarySearchResponse(0, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v32, 1, 1, v35);
    KeyPath = swift_getKeyPath(&unk_100EB93A8);
    v37 = swift_getKeyPath(&unk_100EB93D0);
    static Published.subscript.getter(v31, v34, KeyPath, v37);
    swift_release();
    swift_release();
    v38 = swift_getKeyPath(&unk_100EB93A8);
    v39 = swift_getKeyPath(&unk_100EB93D0);
    sub_10004A160(v32, v33, (uint64_t *)&unk_1011B11D8);
    swift_retain();
    static Published.subscript.setter(v33, v34, v38, v39);
    sub_1003E8A44((uint64_t)v31);
    sub_10004FF60(v32, (uint64_t *)&unk_1011B11D8);
    sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011B11D8);
  }
  v40 = *(_QWORD *)(v0 + 96);
  v42 = *(_QWORD *)(v0 + 80);
  v41 = *(_QWORD *)(v0 + 88);
  v43 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_1003EE788(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  _QWORD *result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  __n128 v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v73;
  char v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;

  v89 = a3;
  v90 = a4;
  v91 = a1;
  v92 = a2;
  v4 = type metadata accessor for MusicSearchResultGroup(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v85 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v7);
  v84 = (uint64_t *)((char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v86 = (uint64_t)&v81 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v81 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v81 - v15;
  v17 = sub_100007E8C((uint64_t *)&unk_1011B11D8);
  __chkstk_darwin(v17);
  v87 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))((char *)&v81
                                                                        - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v88 = (uint64_t *)((char *)&v81 - v20);
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - v22;
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v81 - v26;
  v28 = type metadata accessor for MusicLibrarySearchResponse(0, v25);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v91, (uint64_t)v27, (uint64_t *)&unk_1011B11D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011B11D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
    KeyPath = swift_getKeyPath(&unk_100EB9330);
    v33 = swift_getKeyPath(&unk_100EB9358);
    sub_10004A160((uint64_t)v16, (uint64_t)v13, &qword_1011B11B0);
    v34 = v92;
    swift_retain();
    static Published.subscript.setter(v13, v34, KeyPath, v33);
    sub_1003E68FC();
    return (_QWORD *)sub_10004FF60((uint64_t)v16, &qword_1011B11B0);
  }
  v82 = v16;
  v83 = v4;
  v91 = v5;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
  v36 = swift_getKeyPath(&unk_100EB92A0);
  v37 = swift_getKeyPath(&unk_100EB92C8);
  v38 = v92;
  static Published.subscript.getter(&v93, v92, v36, v37);
  swift_release();
  swift_release();
  v39 = v94;
  v40 = (_QWORD *)v28;
  if (v93 == v89 && v94 == v90)
  {
    v41 = swift_bridgeObjectRelease(v90);
  }
  else
  {
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v93, v94, v89, v90, 0);
    v41 = swift_bridgeObjectRelease(v39);
    if ((v42 & 1) == 0)
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v41);
  }
  (*(void (**)(char *, char *, uint64_t, __n128))(v29 + 16))(v23, v31, v28, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
  v43 = swift_getKeyPath(&unk_100EB93A8);
  v44 = swift_getKeyPath(&unk_100EB93D0);
  v45 = v88;
  static Published.subscript.getter(v88, v38, v43, v44);
  swift_release();
  swift_release();
  v46 = swift_getKeyPath(&unk_100EB93A8);
  v47 = swift_getKeyPath(&unk_100EB93D0);
  v48 = v87;
  sub_10004A160((uint64_t)v23, (uint64_t)v87, (uint64_t *)&unk_1011B11D8);
  swift_retain();
  static Published.subscript.setter(v48, v38, v46, v47);
  v49 = v31;
  sub_1003E8A44((uint64_t)v45);
  sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011B11D8);
  sub_10004FF60((uint64_t)v45, (uint64_t *)&unk_1011B11D8);
  v50 = swift_getKeyPath(&unk_100EB92E8);
  v51 = swift_getKeyPath(&unk_100EB9310);
  static Published.subscript.getter(&v93, v38, v50, v51);
  swift_release();
  v52 = swift_release();
  if ((v93 & 1) != 0)
    return (_QWORD *)(*(uint64_t (**)(char *, _QWORD *, __n128))(v29 + 8))(v49, v40, v52);
  v89 = v49;
  v90 = v29;
  v53 = v91;
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v91 + 56);
  v55 = v86;
  v56 = v83;
  v54(v86, 1, 1, v83, v52);
  v57 = swift_getKeyPath(&unk_100EB9330);
  v58 = swift_getKeyPath(&unk_100EB9358);
  v59 = v84;
  static Published.subscript.getter(v84, v38, v57, v58);
  swift_release();
  v60 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v53 + 48))(v59, 1, v56, v60) == 1)
  {
    sub_10004FF60((uint64_t)v59, &qword_1011B11B0);
  }
  else
  {
    v88 = v40;
    (*(void (**)(char *, _QWORD *, uint64_t))(v53 + 32))(v85, v59, v56);
    v61 = sub_1003E713C();
    v62 = v61;
    v63 = v61[2];
    if (v63)
    {
      v87 = v54;
      v64 = 0;
      v65 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      v66 = *(_QWORD *)(v53 + 72);
      while (1)
      {
        v67 = MusicSearchResultGroup.title.getter();
        v69 = v68;
        v70 = MusicSearchResultGroup.title.getter();
        if (v67 == v70 && v69 == v71)
        {
          swift_bridgeObjectRelease(v69);
          swift_bridgeObjectRelease(v62);
          goto LABEL_25;
        }
        v73 = v71;
        v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v69, v70, v71, 0);
        swift_bridgeObjectRelease(v73);
        swift_bridgeObjectRelease(v69);
        if ((v74 & 1) != 0)
          break;
        ++v64;
        v65 += v66;
        if (v63 == v64)
        {
          v75 = swift_bridgeObjectRelease(v62);
          v53 = v91;
          v56 = v83;
          v55 = v86;
          goto LABEL_22;
        }
      }
      v69 = v62;
LABEL_25:
      v40 = v88;
      swift_bridgeObjectRelease(v69);
      result = sub_1003E713C();
      v76 = v91;
      v77 = (uint64_t)v82;
      if (v64 >= result[2])
      {
        __break(1u);
        return result;
      }
      v78 = result;
      v79 = v83;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v82, (char *)result + v65, v83);
      swift_bridgeObjectRelease(v78);
      v55 = v86;
      sub_10004FF60(v86, &qword_1011B11B0);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v85, v79);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v87)(v77, 0, 1, v79);
      sub_100065228(v77, v55, &qword_1011B11B0);
    }
    else
    {
      v75 = swift_bridgeObjectRelease(v61);
LABEL_22:
      (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v85, v56, v75);
      v40 = v88;
    }
  }
  sub_1003EF404(v55);
  sub_10004FF60(v55, &qword_1011B11B0);
  return (_QWORD *)(*(uint64_t (**)(char *, _QWORD *, __n128))(v90 + 8))(v89, v40, v80);
}

void sub_1003EEEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v31 - v11);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  v16 = sub_100007E8C(&qword_1011B1830);
  __chkstk_darwin(v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = v3 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
  swift_beginAccess(v3 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, &v32, 33, 0);
  sub_1000A5508((uint64_t)v18, v20, &qword_1011B1830);
  swift_endAccess(&v32);
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v22 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(&v32, v3, KeyPath, v22);
  swift_release();
  swift_release();
  v23 = v33;
  if (v32 == a2 && v33 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, a2, a3, 0);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) == 0)
      return;
  }
  v25 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v15, a1, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v15, 0, 1, v25);
  v27 = swift_getKeyPath(&unk_100EB93F0);
  v28 = swift_getKeyPath(&unk_100EB9418);
  static Published.subscript.getter(v12, v3, v27, v28);
  swift_release();
  swift_release();
  v29 = swift_getKeyPath(&unk_100EB93F0);
  v30 = swift_getKeyPath(&unk_100EB9418);
  sub_10004A160((uint64_t)v15, (uint64_t)v9, &qword_1011B1190);
  swift_retain();
  static Published.subscript.setter(v9, v3, v29, v30);
  sub_1003E6384((uint64_t)v12);
  sub_10004FF60((uint64_t)v15, &qword_1011B1190);
  sub_10004FF60((uint64_t)v12, &qword_1011B1190);
}

uint64_t sub_1003EF174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t *v7;
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  char v34[24];

  v3 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (unint64_t *)(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory);
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory, v34, 0, 0);
  v9 = *v7;
  v10 = *(_QWORD *)(*v7 + 16);
  if (!v10)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, a1, v3, v8);
    swift_beginAccess(v7, v33, 33, 0);
    v23 = *v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
    *v7 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v23 = sub_100432C08(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
      *v7 = v23;
    }
    v26 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    if (v26 >= v25 >> 1)
    {
      v23 = sub_100432C08(v25 > 1, v26 + 1, 1, v23);
      *v7 = v23;
    }
    *(_QWORD *)(v23 + 16) = v26 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v26, v6, v3);
    return swift_endAccess(v33);
  }
  v30 = v6;
  v31 = v3;
  v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v32 = v4;
  v12 = *(_QWORD *)(v4 + 72);
  v13 = swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    v15 = MusicCatalogSearchSuggestionsResponse.requestedTerm.getter(v13);
    v17 = v16;
    v18 = MusicCatalogSearchSuggestionsResponse.requestedTerm.getter(v15);
    if (v15 == v18 && v17 == v19)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v17);
      goto LABEL_17;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
      break;
    ++v14;
    v11 += v12;
    if (v10 == v14)
    {
      v8 = swift_bridgeObjectRelease(v9);
      v3 = v31;
      v4 = v32;
      v6 = v30;
      goto LABEL_10;
    }
  }
  v17 = v9;
LABEL_17:
  swift_bridgeObjectRelease(v17);
  swift_beginAccess(v7, v33, 33, 0);
  v27 = *v7;
  result = swift_isUniquelyReferenced_nonNull_native(*v7);
  *v7 = v27;
  if ((result & 1) == 0)
  {
    result = sub_10072E0F0(v27);
    v27 = result;
    *v7 = result;
  }
  if (v14 < *(_QWORD *)(v27 + 16))
  {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 24))(v27 + v11, a1, v31);
    return swift_endAccess(v33);
  }
  __break(1u);
  return result;
}

void sub_1003EF404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;

  v3 = sub_100007E8C(&qword_1011B17E8);
  __chkstk_darwin(v3);
  v45 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = _s5EventOMa(0);
  __chkstk_darwin(v43);
  v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v6);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char **)((char *)&v42 - v9);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - v18;
  v20 = type metadata accessor for MusicSearchResultGroup(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v19, &qword_1011B11B0);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v24(v19, 1, v20) == 1)
  {
    sub_10004FF60((uint64_t)v19, &qword_1011B11B0);
    v25 = sub_1003E713C();
    v26 = v25[2];
    swift_bridgeObjectRelease(v25);
    if (v26)
    {
      KeyPath = swift_getKeyPath(&unk_100EB9330);
      v28 = swift_getKeyPath(&unk_100EB9358);
      static Published.subscript.getter(v10, v1, KeyPath, v28);
      swift_release();
      v29 = swift_release();
      LODWORD(KeyPath) = ((uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v24)(v10, 1, v20, v29);
      sub_10004FF60((uint64_t)v10, &qword_1011B11B0);
      if ((_DWORD)KeyPath == 1)
      {
        v30 = sub_1003E713C();
        v31 = v30;
        if (v30[2])
        {
          v32 = (uint64_t)v42;
          (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v42, (unint64_t)v30+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
          v33 = 0;
        }
        else
        {
          v33 = 1;
          v32 = (uint64_t)v42;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v32, v33, 1, v20);
        swift_bridgeObjectRelease(v31);
        v40 = swift_getKeyPath(&unk_100EB9330);
        v41 = swift_getKeyPath(&unk_100EB9358);
        sub_10004A160(v32, (uint64_t)v16, &qword_1011B11B0);
        swift_retain();
        static Published.subscript.setter(v16, v1, v40, v41);
        sub_1003E68FC();
        sub_10004FF60(v32, &qword_1011B11B0);
      }
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v23, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    v34 = swift_getKeyPath(&unk_100EB9330);
    v35 = swift_getKeyPath(&unk_100EB9358);
    sub_10004A160((uint64_t)v16, (uint64_t)v13, &qword_1011B11B0);
    swift_retain();
    static Published.subscript.setter(v13, v1, v34, v35);
    sub_1003E68FC();
    sub_10004FF60((uint64_t)v16, &qword_1011B11B0);
    v36 = _s4PageOMa(0);
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
    v38 = (uint64_t)v44;
    v37(v44, 1, 1, v36);
    swift_storeEnumTagMultiPayload(v38, v43, 2);
    v39 = (uint64_t)v45;
    v37(v45, 1, 1, v36);
    sub_1003E9A5C(v38, v39);
    sub_10004FF60(v39, &qword_1011B17E8);
    sub_10005B748(v38, _s5EventOMa);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
}

double sub_1003EF860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  double result;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  _BYTE v50[24];

  v1 = sub_100007E8C(&qword_1011B1190);
  __chkstk_darwin(v1);
  v49 = (uint64_t)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v48 = (char **)((char *)&v47 - v4);
  __chkstk_darwin(v5);
  v47 = (char *)&v47 - v6;
  v7 = sub_100007E8C((uint64_t *)&unk_1011B11D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char **)((char *)&v47 - v11);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - v14;
  v16 = sub_100007E8C(&qword_1011B1830);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v47 - v23;
  v25 = type metadata accessor for MusicSearchResultGroup(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  KeyPath = swift_getKeyPath(&unk_100EB9330);
  v27 = swift_getKeyPath(&unk_100EB9358);
  sub_10004A160((uint64_t)v24, (uint64_t)v21, &qword_1011B11B0);
  swift_retain();
  static Published.subscript.setter(v21, v0, KeyPath, v27);
  sub_1003E68FC();
  sub_10004FF60((uint64_t)v24, &qword_1011B11B0);
  v28 = type metadata accessor for MusicCatalogInternalSearchResponse(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 1, 1, v28);
  v29 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse;
  swift_beginAccess(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, v50, 33, 0);
  sub_1000A5508((uint64_t)v18, v29, &qword_1011B1830);
  swift_endAccess(v50);
  v31 = type metadata accessor for MusicLibrarySearchResponse(0, v30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 1, 1, v31);
  v32 = swift_getKeyPath(&unk_100EB93A8);
  v33 = swift_getKeyPath(&unk_100EB93D0);
  static Published.subscript.getter(v12, v0, v32, v33);
  swift_release();
  swift_release();
  v34 = swift_getKeyPath(&unk_100EB93A8);
  v35 = swift_getKeyPath(&unk_100EB93D0);
  sub_10004A160((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_1011B11D8);
  swift_retain();
  static Published.subscript.setter(v9, v0, v34, v35);
  sub_1003E8A44((uint64_t)v12);
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011B11D8);
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011B11D8);
  v36 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v37 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v47, 1, 1, v36);
  v38 = swift_getKeyPath(&unk_100EB93F0);
  v39 = swift_getKeyPath(&unk_100EB9418);
  v40 = v48;
  static Published.subscript.getter(v48, v0, v38, v39);
  swift_release();
  swift_release();
  v41 = swift_getKeyPath(&unk_100EB93F0);
  v42 = swift_getKeyPath(&unk_100EB9418);
  v43 = v49;
  sub_10004A160(v37, v49, &qword_1011B1190);
  swift_retain();
  static Published.subscript.setter(v43, v0, v41, v42);
  sub_1003E6384((uint64_t)v40);
  sub_10004FF60(v37, &qword_1011B1190);
  sub_10004FF60((uint64_t)v40, &qword_1011B1190);
  v44 = (uint64_t *)(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory);
  swift_beginAccess(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory, v50, 1, 0);
  v45 = *v44;
  *v44 = (uint64_t)_swiftEmptyArrayStorage;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v45).n128_u64[0];
  return result;
}

uint64_t sub_1003EFCF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__catalogSearchSuggestionsResponse;
  v2 = sub_100007E8C(&qword_1011B17C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__recentlySearchedEntries;
  v4 = sub_100007E8C(&qword_1011B17C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__selectedResultGroup;
  v6 = sub_100007E8C(&qword_1011B17B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_10004FF60(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_selectedResultGroupUniqueItems, &qword_1011B1800);
  v7 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__searchTerm;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__isSearching;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__isLoading, v10);
  v11(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__isFirstResponder, v10);
  v12 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__searchLandingComponentController;
  v13 = sub_100007E8C(&qword_1011B17B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);

  sub_10005B748(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_displayedPage, _s4PageOMa);
  v14 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__jsResultsUpdateCount;
  v15 = sub_100007E8C(&qword_10119F088);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  sub_10004FF60(v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchResponse, &qword_1011B1830);
  v16 = v0 + OBJC_IVAR____TtCV5Music6Search9ViewModel__librarySearchResponse;
  v17 = sub_100007E8C(&qword_1011B17A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCV5Music6Search9ViewModel_catalogSearchSuggestionsResponsesHistory));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1003EFFBC()
{
  uint64_t v0;

  sub_1003EFCF4();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003EFFE0()
{
  return type metadata accessor for Search.ViewModel(0);
}

uint64_t type metadata accessor for Search.ViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B1150;
  if (!qword_1011B1150)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Search.ViewModel);
  return result;
}

void sub_1003F0024(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  char *v40;
  char *v41;
  void *v42;
  char *v43;
  void *v44;
  void *v45;

  sub_1003F02CC(319, &qword_1011B1188, &qword_1011B1190, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v24[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003F02CC(319, &qword_1011B1198, &qword_1011B11A0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v24[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1003F02CC(319, &qword_1011B11A8, &qword_1011B11B0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v7 <= 0x3F)
      {
        v24[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1003F02CC(319, &qword_1011B11B8, &qword_1011ACBD8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v24[3] = *(_QWORD *)(v8 - 8) + 64;
          sub_1000EA598(319, (unint64_t *)&qword_1011A0A58, (uint64_t)&type metadata for String);
          if (v11 <= 0x3F)
          {
            v24[4] = *(_QWORD *)(v10 - 8) + 64;
            v24[5] = &unk_100EB91E0;
            sub_1000EA598(319, (unint64_t *)&qword_1011C4B00, (uint64_t)&type metadata for Bool);
            if (v13 <= 0x3F)
            {
              v25 = *(_QWORD *)(v12 - 8) + 64;
              v26 = v25;
              v27 = v25;
              sub_1000E3A44(319, &qword_1011B11C0, type metadata accessor for JSSearchLandingComponentController, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
              if (v15 <= 0x3F)
              {
                v28 = *(_QWORD *)(v14 - 8) + 64;
                v29 = (char *)&value witness table for Builtin.UnknownObject + 64;
                v16 = _s4PageOMa(319);
                if (v17 <= 0x3F)
                {
                  v30 = *(_QWORD *)(v16 - 8) + 64;
                  sub_1000EA598(319, qword_1011A7478, (uint64_t)&type metadata for Int);
                  if (v19 <= 0x3F)
                  {
                    v31 = *(_QWORD *)(v18 - 8) + 64;
                    sub_1000E3A44(319, &qword_1011B11C8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicCatalogInternalSearchResponse, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
                    if (v21 <= 0x3F)
                    {
                      v32 = *(_QWORD *)(v20 - 8) + 64;
                      sub_1003F02CC(319, &qword_1011B11D0, (uint64_t *)&unk_1011B11D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
                      if (v23 <= 0x3F)
                      {
                        v33 = *(_QWORD *)(v22 - 8) + 64;
                        v34 = &unk_100EB91F8;
                        v35 = &unk_100EB91F8;
                        v36 = &unk_100EB91F8;
                        v37 = &unk_100EB91F8;
                        v38 = &unk_100EB91F8;
                        v39 = &unk_100EB91F8;
                        v40 = (char *)&value witness table for Builtin.BridgeObject + 64;
                        v41 = (char *)&value witness table for Builtin.NativeObject + 64;
                        v42 = &unk_100EB91F8;
                        v43 = (char *)&value witness table for Builtin.NativeObject + 64;
                        v44 = &unk_100EB91F8;
                        v45 = &unk_100EB91F8;
                        swift_updateClassMetadata2(a1, 256, 27, v24, a1 + 80);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1003F02CC(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = sub_100044B54(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

ValueMetadata *type metadata accessor for Search()
{
  return &type metadata for Search;
}

uint64_t sub_1003F0334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Search.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1003F0370()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1003F0394(uint64_t *a1)
{
  uint64_t v1;

  return sub_1003E5BD8(a1, v1);
}

double sub_1003F039C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1003E5DD8(a1, v1);
}

uint64_t sub_1003F03A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v5 = swift_getKeyPath(&unk_100EB92C8);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

double sub_1003F0420(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  unint64_t v13;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB92A0);
  v6 = swift_getKeyPath(&unk_100EB92C8);
  swift_bridgeObjectRetain();
  static Published.subscript.getter(&v12, v4, KeyPath, v6);
  swift_release();
  swift_release();
  v7 = v12;
  v8 = v13;
  v9 = swift_getKeyPath(&unk_100EB92A0);
  v10 = swift_getKeyPath(&unk_100EB92C8);
  v12 = v3;
  v13 = v2;
  swift_retain();
  static Published.subscript.setter(&v12, v4, v9, v10);
  sub_1003E7454(v7, v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_1003F0504@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB9558);
  v5 = swift_getKeyPath(&unk_100EB9580);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1003F0580(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB9558);
  v5 = swift_getKeyPath(&unk_100EB9580);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1003F05F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB9258);
  v5 = swift_getKeyPath(&unk_100EB9280);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

void sub_1003F0678(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB9258);
  v5 = swift_getKeyPath(&unk_100EB9280);
  v6 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  static Published.subscript.setter(&v6, v3, KeyPath, v5);
  sub_1003E67FC();
}

uint64_t sub_1003F0700@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003F0714(a1, (uint64_t)&unk_100EB9330, (uint64_t)&unk_100EB9358, a2);
}

uint64_t sub_1003F0714@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(a4, v6, KeyPath, v8);
  swift_release(v8);
  return swift_release(KeyPath);
}

uint64_t sub_1003F0778(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100007E8C(&qword_1011B11B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10004A160(a1, (uint64_t)&v14 - v8, &qword_1011B11B0);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB9330);
  v12 = swift_getKeyPath(&unk_100EB9358);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011B11B0);
  swift_retain();
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  sub_1003E68FC();
  return sub_10004FF60((uint64_t)v9, &qword_1011B11B0);
}

uint64_t sub_1003F0874@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EB94C8, (uint64_t)&unk_100EB94F0, a2);
}

uint64_t sub_1003F0888(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EB94C8, (uint64_t)&unk_100EB94F0);
}

uint64_t sub_1003F089C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EB9480, (uint64_t)&unk_100EB94A8, a2);
}

uint64_t sub_1003F08B0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EB9480, (uint64_t)&unk_100EB94A8);
}

uint64_t sub_1003F08C4(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1003F0930@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EB92E8, (uint64_t)&unk_100EB9310, a2);
}

uint64_t sub_1003F0944@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(v8);
  result = swift_release(KeyPath);
  *a4 = v10;
  return result;
}

uint64_t sub_1003F09BC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EB92E8, (uint64_t)&unk_100EB9310, a2);
}

void sub_1003F09E0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB92E8);
  v5 = swift_getKeyPath(&unk_100EB9310);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release();
  swift_release();
  LODWORD(KeyPath) = v9;
  v6 = swift_getKeyPath(&unk_100EB92E8);
  v7 = swift_getKeyPath(&unk_100EB9310);
  v8 = v2;
  swift_retain();
  static Published.subscript.setter(&v8, v3, v6, v7);
  sub_1003E7C88(KeyPath);
}

uint64_t sub_1003F0AAC()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003F0AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011B17F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  v3[2] = v2;
  return swift_task_switch(sub_1003E78A0, 0, 0);
}

uint64_t sub_1003F0B20@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003F0714(a1, (uint64_t)&unk_100EB9330, (uint64_t)&unk_100EB9358, a2);
}

uint64_t sub_1003F0B48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GenericMusicItem.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1003F0B70()
{
  unint64_t result;

  result = qword_1011B1808;
  if (!qword_1011B1808)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_1011B1808);
  }
  return result;
}

uint64_t sub_1003F0BB4()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003F0BC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011B181C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_1003E5CF8(a1, v4, v5, v6);
}

uint64_t sub_1003F0C34@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB9510);
  v5 = swift_getKeyPath(&unk_100EB9538);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_1003F0CB0(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB9510);
  v5 = swift_getKeyPath(&unk_100EB9538);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_1003F0D24@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB9438);
  v5 = swift_getKeyPath(&unk_100EB9460);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_1003F0DA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB9438);
  v5 = swift_getKeyPath(&unk_100EB9460);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1003F0E10@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB93A8);
  v5 = swift_getKeyPath(&unk_100EB93D0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(v5);
  return swift_release(KeyPath);
}

uint64_t sub_1003F0E7C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD *))
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v14 = sub_100007E8C(a5);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v29 - v18);
  __chkstk_darwin(v20);
  v22 = (char *)&v29 - v21;
  sub_10004A160(a1, (uint64_t)&v29 - v21, a5);
  v23 = *a2;
  KeyPath = swift_getKeyPath(a6);
  v25 = swift_getKeyPath(a7);
  static Published.subscript.getter(v19, v23, KeyPath, v25);
  swift_release();
  swift_release();
  v26 = swift_getKeyPath(a6);
  v27 = swift_getKeyPath(a7);
  sub_10004A160((uint64_t)v22, (uint64_t)v16, a5);
  swift_retain();
  static Published.subscript.setter(v16, v23, v26, v27);
  a8(v19);
  sub_10004FF60((uint64_t)v22, a5);
  return sub_10004FF60((uint64_t)v19, a5);
}

uint64_t sub_1003F0FF4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F0E7C(a1, a2, a3, a4, (uint64_t *)&unk_1011B11D8, (uint64_t)&unk_100EB93A8, (uint64_t)&unk_100EB93D0, (void (*)(_QWORD *))sub_1003E8A44);
}

uint64_t sub_1003F1028@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003F0714(a1, (uint64_t)&unk_100EB93F0, (uint64_t)&unk_100EB9418, a2);
}

uint64_t sub_1003F104C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F0E7C(a1, a2, a3, a4, &qword_1011B1190, (uint64_t)&unk_100EB93F0, (uint64_t)&unk_100EB9418, (void (*)(_QWORD *))sub_1003E6384);
}

uint64_t sub_1003F1080()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

_QWORD *sub_1003F1094(uint64_t a1)
{
  uint64_t v1;

  return sub_1003EE788(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1003F10A0()
{
  uint64_t v0;

  return sub_1003EE054(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1003F10B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;

  v29 = a2;
  v25 = type metadata accessor for MusicCatalogSearchSuggestionsResponse(0);
  v6 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v22 - v10;
  v30 = _swiftEmptyArrayStorage;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v12 = 0;
    v23 = a3;
    v24 = a1;
    v13 = v25;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v15 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v11, a1 + v14 + v15 * v12, v13, v9);
      v16 = sub_1003EBD90((uint64_t)v11, v29, a3);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v13);
        swift_bridgeObjectRelease(a1);
        swift_release();
        return;
      }
      if (v16)
      {
        v26 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v26(v28, v11, v13);
        v17 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
        {
          sub_10035C9C4(0, v17[2] + 1, 1);
          v17 = v30;
        }
        v19 = v17[2];
        v18 = v17[3];
        if (v19 >= v18 >> 1)
        {
          sub_10035C9C4(v18 > 1, v19 + 1, 1);
          v17 = v30;
        }
        v17[2] = v19 + 1;
        v20 = (unint64_t)v17 + v14 + v19 * v15;
        v21 = v25;
        v26((char *)v20, v28, v25);
        v30 = v17;
        v13 = v21;
        a3 = v23;
        a1 = v24;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v13);
      }
      if (v27 == ++v12)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
  }
}

_QWORD *sub_1003F12D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v31[15];
  _QWORD v32[15];

  v0 = sub_100007E8C(&qword_1011B18B8);
  v1 = (_QWORD *)swift_allocObject(v0, 224, 7);
  *((_OWORD *)v1 + 1) = xmmword_100EB91C0;
  v1[4] = type metadata accessor for Artist(0);
  v1[5] = &protocol witness table for Artist;
  v1[6] = type metadata accessor for Album(0);
  v1[7] = &protocol witness table for Album;
  v1[8] = type metadata accessor for Curator(0);
  v1[9] = &protocol witness table for Curator;
  v2 = type metadata accessor for Genre(0);
  v3 = sub_100048748(&qword_1011B18C0, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
  v1[10] = v2;
  v1[11] = v3;
  v4 = type metadata accessor for MusicMovie(0);
  v5 = sub_100048748(&qword_1011B18C8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v1[12] = v4;
  v1[13] = v5;
  v1[14] = type metadata accessor for Playlist(0);
  v1[15] = &protocol witness table for Playlist;
  v1[16] = type metadata accessor for RadioShow(0);
  v1[17] = &protocol witness table for RadioShow;
  v1[18] = type metadata accessor for RecordLabel(0);
  v1[19] = &protocol witness table for RecordLabel;
  v1[20] = type metadata accessor for Song(0);
  v1[21] = &protocol witness table for Song;
  v6 = type metadata accessor for TVShow(0);
  v7 = sub_100048748(&qword_1011B18D0, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v1[22] = v6;
  v1[23] = v7;
  v8 = type metadata accessor for TVEpisode(0);
  v9 = sub_100048748(&qword_1011B18D8, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v1[24] = v8;
  v1[25] = v9;
  v10 = type metadata accessor for EditorialItem(0);
  v11 = sub_100048748(&qword_1011B18E0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  v1[26] = v10;
  v1[27] = v11;
  static ApplicationCapabilities.shared.getter((uint64_t)v31);
  v12 = v31[3];
  swift_bridgeObjectRetain();
  sub_100065184(v31);
  v13 = sub_10075BDAC(1u, v12);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) != 0)
  {
    v1 = sub_1004329D0((_QWORD *)1, 14, 1, v1);
    v15 = v1[2];
    v14 = v1[3];
    v16 = v15 + 1;
    if (v15 >= v14 >> 1)
      v1 = sub_1004329D0((_QWORD *)(v14 > 1), v15 + 1, 1, v1);
    v17 = type metadata accessor for MusicVideo(0);
    v1[2] = v16;
    v18 = &v1[2 * v15];
    v18[4] = v17;
    v18[5] = &protocol witness table for MusicVideo;
    v19 = v1[3];
    v20 = v15 + 2;
    if (v20 > (uint64_t)(v19 >> 1))
      v1 = sub_1004329D0((_QWORD *)(v19 > 1), v20, 1, v1);
    v21 = type metadata accessor for UploadedVideo(0);
    v22 = sub_100048748(&qword_1011B18E8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
    v1[2] = v20;
    v23 = &v1[2 * v16];
    v23[4] = v21;
    v23[5] = v22;
  }
  static ApplicationCapabilities.shared.getter((uint64_t)v32);
  v24 = v32[3];
  swift_bridgeObjectRetain();
  sub_100065184(v32);
  v25 = sub_10075BDAC(4u, v24);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
    v27 = v1[2];
    v26 = v1[3];
    if (v27 >= v26 >> 1)
      v1 = sub_1004329D0((_QWORD *)(v26 > 1), v27 + 1, 1, v1);
    v28 = type metadata accessor for Station(0);
    v1[2] = v27 + 1;
    v29 = &v1[2 * v27];
    v29[4] = v28;
    v29[5] = &protocol witness table for Station;
  }
  return v1;
}

uint64_t sub_1003F1620()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  BagProvider.shared.unsafeMutableAddressor();
  swift_retain();
  v0 = (void *)BagProvider.bag.getter();
  swift_release();
  if (!v0)
    return 0;
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicCommon);
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "dictionaryForBagKey:", v3, swift_bridgeObjectRelease(v2).n128_f64[0]);

  if (!v4)
    return 0;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v6 = sub_100050E78(v5);
  swift_bridgeObjectRelease(v5);
  if (!v6)
    return 0;
  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_10079C2C4(0x686372616573, 0xE600000000000000), (v8 & 1) == 0))
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    swift_bridgeObjectRelease(v6);
    goto LABEL_10;
  }
  sub_100051FEC(*(_QWORD *)(v6 + 56) + 40 * v7, (uint64_t)&v12);
  swift_bridgeObjectRelease(v6);
  if (!*((_QWORD *)&v13 + 1))
  {
LABEL_10:
    sub_10004FF60((uint64_t)&v12, &qword_1011EAEC0);
    return 0;
  }
  v9 = sub_100007E8C(qword_1011AFDE8);
  if ((swift_dynamicCast(&v11, &v12, &type metadata for AnyHashable, v9, 6) & 1) != 0)
    return v11;
  return 0;
}

uint64_t sub_1003F17A0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003F17D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003ED02C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1003F17E0()
{
  return sub_1003F1C78((uint64_t (*)(_QWORD))&type metadata accessor for MusicCatalogInternalSearchResponse);
}

uint64_t sub_1003F17EC()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for MusicCatalogInternalSearchResponse(0);
  v1 = (_QWORD *)swift_task_alloc(dword_1011B18AC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10005AEE4;
  return sub_1003ED550();
}

uint64_t sub_1003F1880()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003F1894(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003EC760(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003F18A0()
{
  return sub_1003F1C78((uint64_t (*)(_QWORD))&type metadata accessor for MusicCatalogSearchSuggestionsResponse);
}

uint64_t sub_1003F18AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MusicCatalogSearchSuggestionsResponse(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011B1904);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_1003EC06C(a1, v5, v6, v7, v8);
}

uint64_t sub_1003F1940()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003F1954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011B1914);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  v3[4] = v2;
  return swift_task_switch(sub_1003EB554, 0, 0);
}

uint64_t sub_1003F19B4()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003F19C8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1011B1924);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  v2 = (_QWORD *)swift_task_alloc(dword_1011B1164);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return sub_1003EB650();
}

uint64_t sub_1003F1A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011ACBD8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011B1934);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_1003E9FF4(a1, v6, v7, v8, v9);
}

uint64_t sub_1003F1AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011ACBD8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011B1934);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1003E9FF4(a1, v6, v7, v8, v9);
}

uint64_t sub_1003F1B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011ACBD8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v5 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  swift_release();
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1003F1C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s4PageOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F1C6C()
{
  return sub_1003F1C78((uint64_t (*)(_QWORD))&type metadata accessor for GenericMusicItem);
}

uint64_t sub_1003F1C78(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 40) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1003F1CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GenericMusicItem(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1011B1964);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10006AEE4;
  v5[4] = v3;
  v5[5] = v4;
  return swift_task_switch(sub_1003E976C, 0, 0);
}

uint64_t sub_1003F1D74()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003F1D88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011B1974);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_1003E9200(a1, v4, v5, v6);
}

uint64_t sub_1003F1DF4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EB9480, (uint64_t)&unk_100EB94A8, a2);
}

uint64_t sub_1003F1E18(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EB9480, (uint64_t)&unk_100EB94A8);
}

uint64_t sub_1003F1E3C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EB94C8, (uint64_t)&unk_100EB94F0, a2);
}

uint64_t sub_1003F1E60(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EB94C8, (uint64_t)&unk_100EB94F0);
}

uint64_t sub_1003F1E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s4PageOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F1ED0()
{
  return sub_1003F1EE4((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003F1EE4(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_1003F1F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011B1984);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  v3[2] = v2;
  return swift_task_switch(sub_1003E79C4, 0, 0);
}

id sub_1003F1F88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music23MaterialSearchTextField____lazy_storage___blurEffectView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music23MaterialSearchTextField____lazy_storage___blurEffectView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music23MaterialSearchTextField____lazy_storage___blurEffectView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1003F1FF8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;
  CGRect v14;

  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "layoutSubviews");
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Music23MaterialSearchTextField_blurEffectStyle + 8) == 1)
  {
    v1 = sub_1003F1F88();
    objc_msgSend(v1, "setAlpha:", 0.0);
  }
  else
  {
    objc_msgSend(v0, "setBackgroundColor:", 0);
    v2 = sub_1003F1F88();
    objc_msgSend(v2, "setUserInteractionEnabled:", 0);

    v3 = sub_1003F1F88();
    v4 = objc_msgSend(v3, "superview");

    v5 = sub_1003F1F88();
    v6 = v5;
    if (v4)
    {
      objc_msgSend(v5, "setAlpha:", 1.0);
    }
    else
    {
      objc_msgSend(v0, "addSubview:", v5);

      v6 = sub_1003F1F88();
      objc_msgSend(v0, "sendSubviewToBack:", v6);
    }

    v7 = sub_1003F1F88();
    objc_msgSend(v7, "setClipsToBounds:", 1);

    v8 = sub_1003F1F88();
    objc_msgSend(v0, "bounds");
    objc_msgSend(v8, "setFrame:");

    v9 = sub_1003F1F88();
    v1 = objc_msgSend(v9, "layer");

    objc_msgSend(v0, "_roundedRectBackgroundCornerRadius");
    v11 = v10;
    objc_msgSend(v0, "frame");
    v12 = CGRectGetHeight(v14) * 0.5;
    if (v12 >= v11)
      v12 = v11;
    objc_msgSend(v1, "setCornerRadius:", v12);
  }

}

uint64_t type metadata accessor for MaterialSearchTextField()
{
  return objc_opt_self(_TtC5Music23MaterialSearchTextField);
}

id sub_1003F233C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[8];

  v1 = OBJC_IVAR___MusicLyricsBackgroundView____lazy_storage___gradientView;
  v2 = *(void **)(v0 + OBJC_IVAR___MusicLyricsBackgroundView____lazy_storage___gradientView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___MusicLyricsBackgroundView____lazy_storage___gradientView);
  }
  else
  {
    v4 = v0;
    v5 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EA7DB0;
    *(_QWORD *)(v6 + 32) = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.0);
    v7 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 1.0);
    *(_QWORD *)(v6 + 40) = v7;
    v13[0] = v6;
    specialized Array._endMutation()(v7);
    Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)((uint64_t)kCAGradientLayerAxial, v6, 0, 0, (uint64_t)v13, 0.5, 0.5, 0.5, 1.0);
    v8 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
    v9 = Gradient.View.init(configuration:)((uint64_t)v13);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

char *sub_1003F246C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  uint64_t v42;
  id v43;
  objc_super v44;

  v9 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B1A30);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B1A38);
  v42 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR___MusicLyricsBackgroundView_metalView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___MusicLyricsBackgroundView____lazy_storage___gradientView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___MusicLyricsBackgroundView_renderer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___MusicLyricsBackgroundView_playerPathSubscription] = 0;
  v4[OBJC_IVAR___MusicLyricsBackgroundView_isPaused] = 1;
  v19 = (objc_class *)type metadata accessor for LyricsBackgroundView();
  v44.receiver = v4;
  v44.super_class = v19;
  v20 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  sub_1003F28F0();
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  (*(void (**)(void))(*(_QWORD *)qword_10124C788 + 384))();
  v21 = sub_1000A9B84();
  v43 = (id)static OS_dispatch_queue.main.getter(v21, v22, v23, v24, v25, v26, v27, v28);
  v29 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
  v30 = sub_100049F28(&qword_1011B1A40, &qword_1011B1A30, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v31 = sub_1001EBD80((unint64_t *)&qword_1011A89B0, 255, (uint64_t (*)(uint64_t))sub_1000A9B84, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v43, v11, v12, v21, v30, v31);
  sub_10004FF60((uint64_t)v11, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v32 = swift_allocObject(&unk_1010C3BB0, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v20);
  v33 = sub_100049F28(&qword_1011B1A48, &qword_1011B1A38, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v34 = Publisher<>.sink(receiveValue:)(sub_1003F2FDC, v32, v16, v33);
  v35 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v18, v16, v35);
  *(_QWORD *)&v20[OBJC_IVAR___MusicLyricsBackgroundView_playerPathSubscription] = v34;
  swift_release();
  v36 = sub_1003F233C();
  objc_msgSend(v20, "bounds");
  objc_msgSend(v36, "setFrame:");

  v37 = sub_1003F233C();
  objc_msgSend(v37, "setAutoresizingMask:", 18);

  v38 = sub_1003F233C();
  objc_msgSend(v38, "setAlpha:", 0.4);

  v39 = v20;
  v40 = sub_1003F233C();
  objc_msgSend(v39, "addSubview:", v40);

  return v39;
}

void sub_1003F2838(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend(v2, "route");
    sub_1003F2CF4(v6);

  }
}

void sub_1003F28F0()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011B1A18);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011B1A20);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MetalContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v43 - v14;
  v16 = OBJC_IVAR___MusicLyricsBackgroundView_metalView;
  if (!*(_QWORD *)&v1[OBJC_IVAR___MusicLyricsBackgroundView_metalView])
  {
    static MetalContext.shared.getter(v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10004FF60((uint64_t)v7, &qword_1011B1A20);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v7, v8);
      v17 = objc_msgSend(v1, "bounds");
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v26 = MetalContext.device.getter(v17);
      v27 = objc_msgSend(objc_allocWithZone((Class)MTKView), "initWithFrame:device:", v26, v19, v21, v23, v25);
      objc_msgSend(v27, "setAutoresizingMask:", 18, swift_unknownObjectRelease(v26).n128_f64[0]);
      v28 = objc_msgSend(v27, "layer");
      objc_msgSend(v28, "setAllowsDisplayCompositing:", 0);

      objc_msgSend(v27, "setEnableSetNeedsDisplay:", v1[OBJC_IVAR___MusicLyricsBackgroundView_isPaused]);
      if ((*DeviceCapabilities.supportsHighFrameRateLyricsBackground.unsafeMutableAddressor() & 1) != 0)
      {
        v29 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        v30 = objc_msgSend(v29, "maximumFramesPerSecond");

      }
      else
      {
        v30 = (id)static Backdrop.PerformanceConcessions.getter();
      }
      if ((MetalContext.supportsBGRA10.getter(objc_msgSend(v27, "setPreferredFramesPerSecond:", v30)) & 1) != 0
        && *DeviceCapabilities.hasExtendedColorDisplay.unsafeMutableAddressor() == 1)
      {
        objc_msgSend(v27, "setColorPixelFormat:", 552);
      }
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v8);
      v31 = type metadata accessor for Backdrop.ViewConfiguration(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v4, 1, 1, v31);
      v32 = objc_allocWithZone((Class)type metadata accessor for Backdrop.CompositeRenderer(0));
      v33 = (void *)Backdrop.CompositeRenderer.init(context:configuration:)(v11, v4);
      v35 = sub_1001EBD80(&qword_1011B1A28, v34, (uint64_t (*)(uint64_t))type metadata accessor for LyricsBackgroundView, (uint64_t)&unk_100EB95D8);
      v37 = swift_unknownObjectRetain(v1, v36);
      dispatch thunk of Backdrop.CompositeRenderer.observer.setter(v37, v35);
      v38 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
      dispatch thunk of Backdrop.CompositeRenderer.setPlaceholderColor(_:animated:)();

      dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.setter(objc_msgSend(v27, "colorPixelFormat"));
      objc_msgSend(v27, "setDelegate:", v33);
      v39 = *(void **)&v1[v16];
      *(_QWORD *)&v1[v16] = v27;
      v40 = v27;

      v41 = *(void **)&v1[OBJC_IVAR___MusicLyricsBackgroundView_renderer];
      *(_QWORD *)&v1[OBJC_IVAR___MusicLyricsBackgroundView_renderer] = v33;
      v42 = v33;

      objc_msgSend(v1, "addSubview:", v40);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    }
  }
}

id sub_1003F2CF4(id result)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  if (result && (result = objc_msgSend(result, "isLowLatencyRoute"), (_DWORD)result))
  {
    v2 = *(void **)(v1 + OBJC_IVAR___MusicLyricsBackgroundView_renderer);
    if (!v2)
      return result;
    v3 = v2;
    v4 = dispatch thunk of Backdrop.CompositeRenderer.spectrumAnalysis.getter();

    v5 = 7;
  }
  else
  {
    v6 = *(void **)(v1 + OBJC_IVAR___MusicLyricsBackgroundView_renderer);
    if (!v6)
      return result;
    v7 = v6;
    v4 = dispatch thunk of Backdrop.CompositeRenderer.spectrumAnalysis.getter();

    v5 = 10;
  }
  dispatch thunk of SpectrumAnalysis.delayCount.setter(v5);
  return (id)swift_release(v4);
}

void sub_1003F2D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for MetalContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR___MusicLyricsBackgroundView_metalView);
  if (v5)
  {
    v6 = v5;
    v7 = Backdrop.CompositeRenderer.context.getter();
    v8 = MetalContext.device.getter(v7);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v9 = dispatch thunk of Backdrop.CompositeRenderer.preferredFramesPerSecond(for:)(v8);
    objc_msgSend(v6, "setPreferredFramesPerSecond:", v9, swift_unknownObjectRelease(v8).n128_f64[0]);

  }
}

id sub_1003F2E70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LyricsBackgroundView()
{
  return objc_opt_self(MusicLyricsBackgroundView);
}

void sub_1003F2F1C()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR___MusicLyricsBackgroundView_metalView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicLyricsBackgroundView____lazy_storage___gradientView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicLyricsBackgroundView_renderer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicLyricsBackgroundView_playerPathSubscription] = 0;
  v0[OBJC_IVAR___MusicLyricsBackgroundView_isPaused] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LyricsBackgroundView.swift", 32, 2, 51, 0);
  __break(1u);
}

uint64_t sub_1003F2FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1003F2FDC(void **a1)
{
  uint64_t v1;

  sub_1003F2838(a1, v1);
}

uint64_t sub_1003F2FE4(uint64_t a1, void (*a2)(__n128), uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void *v21;
  void *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PlaybackIntentDescriptor(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v32 - v18;
  a2(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_1003F3248((uint64_t)v11);
  sub_100149448((uint64_t)v11, (uint64_t)v19);
  v21 = (void *)PlaybackIntentDescriptor.intent.getter();
  objc_msgSend(v21, "setShuffleMode:", a4 == 1);

  v22 = (void *)PlaybackIntentDescriptor.intent.getter();
  objc_msgSend(v22, "setRepeatMode:", 0);

  v19[*(int *)(v12 + 32)] = a4 == 2;
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
  sub_1001493F0((uint64_t)v19, (uint64_t)v15);
  type metadata accessor for MainActor(0);
  v25 = static MainActor.shared.getter(v24);
  v26 = *(unsigned __int8 *)(v13 + 80);
  v27 = (v26 + 32) & ~v26;
  v28 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_1010C3BE8, v29 + 16, v26 | 7);
  *(_QWORD *)(v30 + 16) = v25;
  *(_QWORD *)(v30 + 24) = &protocol witness table for MainActor;
  sub_100149448((uint64_t)v15, v30 + v27);
  *(_QWORD *)(v30 + v28) = 0;
  v31 = (_QWORD *)(v30 + v29);
  *v31 = 0;
  v31[1] = 0;
  sub_100166D14((uint64_t)v8, (uint64_t)&unk_1011A3D90, v30);
  swift_release();
  return sub_100108888((uint64_t)v19);
}

uint64_t sub_1003F3248(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A9A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003F3288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v9[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);

  if (*(_QWORD *)(v0 + v8))
    swift_release();
  return swift_deallocObject(v0, v8 + 16);
}

void sub_1003F3370(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char v9;
  void (*v10)(uint64_t, __n128);
  uint64_t v11;
  int v12;
  uint64_t v13;
  __n128 v14;
  id v15;
  char v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  unint64_t v29;
  _QWORD v30[2];
  _QWORD v31[5];
  unint64_t v32;
  _QWORD v33[5];
  unint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)(v2 + OBJC_IVAR____TtC5Music25PlaylistSortingController_currentTrackListSort);
  static Actions.SortPlaylist.TrackListSort.__derived_struct_equals(_:_:)(a1);
  if ((v9 & 1) == 0)
  {
    v10 = *(void (**)(uint64_t, __n128))(v2
                                                 + OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange);
    if (v10)
    {
      v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange + 8);
      if (v8[1])
        v12 = 256;
      else
        v12 = 0;
      v13 = v12 | *v8;
      v14 = swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange + 8));
      v10(v13, v14);
      sub_10004BA30((uint64_t)v10, v11);
    }
    v15 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v16 = *v8;
    v17 = v8[1];
    v33[3] = &type metadata for Actions.SortPlaylist.TrackListSort;
    v33[4] = sub_1003F4370();
    v34 = sub_1003F43B4();
    LOBYTE(v33[0]) = v16;
    BYTE1(v33[0]) = v17;
    v18 = v2 + OBJC_IVAR____TtC5Music25PlaylistSortingController_playlist;
    v31[4] = 0x2D74726F53;
    v32 = 0xE500000000000000;
    v19 = Playlist.catalogID.getter(v34);
    v21 = v20;
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
    if (!v21)
    {
      v19 = Playlist.id.getter(v22);
      v21 = v23;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v31[2] = v19;
    v31[3] = v21;
    v31[0] = 46;
    v31[1] = 0xE100000000000000;
    v30[0] = 45;
    v30[1] = 0xE100000000000000;
    v24 = sub_100055B68();
    v25 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v31, v30, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v24, v24, v24);
    v27 = v26;
    swift_bridgeObjectRelease(v21);
    v28._countAndFlagsBits = v25;
    v28._object = v27;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v27);
    v29 = v32;
    NSUserDefaults.encodeValue(_:forKey:)(v33);
    swift_bridgeObjectRelease(v29);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v33);
  }
}

char *sub_1003F35C4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  Swift::String v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  double v38;
  id v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  void *v48;
  void *v49;
  char v50;
  char *v51;
  id v53;
  uint64_t (*v54)(char *, char *, uint64_t);
  id v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v2 = v1;
  v4 = *(_QWORD *)v1;
  v5 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v53 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v53 - v16;
  v18 = &v2[OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  *(_WORD *)&v2[OBJC_IVAR____TtC5Music25PlaylistSortingController_currentTrackListSort] = 256;
  sub_1003F4328(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10004FF60(a1, &qword_1011A30F0);
    sub_10004FF60((uint64_t)v7, &qword_1011A30F0);
LABEL_11:
    sub_10004BA30(*(_QWORD *)&v2[OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange], *(_QWORD *)&v2[OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange + 8]);
    swift_deallocPartialClassInstance(v2, v4, *(unsigned int *)(*(_QWORD *)v2 + 48), *(unsigned __int16 *)(*(_QWORD *)v2 + 52));
    return 0;
  }
  v56 = a1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
  type metadata accessor for MusicLibrary(0);
  v19 = static MusicLibrary.shared.getter();
  v20 = MusicLibrary.state<A>(for:)(v17, v8, &protocol witness table for Playlist);
  swift_release(v19);
  LOBYTE(v19) = dispatch thunk of MusicLibrary.ItemState.isAdded.getter(v21);
  v22 = swift_release(v20);
  if ((v19 & 1) == 0)
  {
    sub_10004FF60(v56, &qword_1011A30F0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    goto LABEL_11;
  }
  v23 = *(void (**)(char *, char *, uint64_t, __n128))(v9 + 16);
  v23(&v2[OBJC_IVAR____TtC5Music25PlaylistSortingController_playlist], v17, v8, v22);
  v53 = (id)objc_opt_self(NSUserDefaults);
  v55 = objc_msgSend(v53, "standardUserDefaults");
  v62 = 0x2D74726F53;
  v63 = 0xE500000000000000;
  v24 = Playlist.catalogID.getter(v55);
  v26 = v25;
  v54 = (uint64_t (*)(char *, char *, uint64_t))v23;
  v27 = ((uint64_t (*)(char *, char *, uint64_t))v23)(v15, v17, v8);
  if (!v26)
  {
    v24 = Playlist.id.getter(v27);
    v26 = v28;
  }
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v15, v8);
  v60 = v24;
  v61 = v26;
  v58 = 46;
  v59 = 0xE100000000000000;
  v57[0] = 45;
  v57[1] = 0xE100000000000000;
  v30 = sub_100055B68();
  v31 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v58, v57, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v30, v30, v30);
  v33 = v32;
  swift_bridgeObjectRelease(v26);
  v34._countAndFlagsBits = v31;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v33);
  v35 = v63;
  v36 = sub_1003F4370();
  sub_1003F43B4();
  v37 = v55;
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&type metadata for Actions.SortPlaylist.TrackListSort, v36, v57);

  *(_QWORD *)&v38 = swift_bridgeObjectRelease(v35).n128_u64[0];
  if ((v57[0] & 0xFF00) == 0x200)
  {
    v39 = objc_msgSend(v53, "standardUserDefaults", v38);
    v40 = &v2[OBJC_IVAR____TtC5Music25PlaylistSortingController_playlist];
    v41 = Playlist.catalogID.getter(v39);
    v43 = v42;
    v44 = v54(v12, v40, v8);
    if (!v43)
    {
      v41 = Playlist.id.getter(v44);
      v43 = v45;
    }
    v46 = v29;
    v29(v12, v8);
    v62 = v41;
    v63 = v43;
    v60 = 46;
    v61 = 0xE100000000000000;
    v58 = 45;
    v59 = 0xE100000000000000;
    v47 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v60, &v58, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v30, v30, v30);
    v49 = v48;
    swift_bridgeObjectRelease(v43);
    NSUserDefaults.sortType(for:keyDomain:)(0xC2u, v47, v49);

    swift_bridgeObjectRelease(v49);
    v50 = 0;
    LOBYTE(v29) = 1;
  }
  else
  {
    v46 = v29;
    v50 = v57[0];
    LODWORD(v29) = HIBYTE(LOWORD(v57[0])) & 1;
  }
  sub_10004FF60(v56, &qword_1011A30F0);
  v46(v17, v8);
  v51 = &v2[OBJC_IVAR____TtC5Music25PlaylistSortingController_currentTrackListSort];
  *v51 = v50;
  v51[1] = (char)v29;
  return v2;
}

__n128 sub_1003F3B34@<Q0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  Swift::String v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  __n128 result;
  _BYTE v26[16];
  _OWORD v27[5];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = String.LocalizationValue.init(stringLiteral:)(0x79422074726F53, 0xE700000000000000);
  static Locale.current.getter(v11);
  v12 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

  *(_QWORD *)&v27[0] = _typeName(_:qualified:)(v4, 0);
  *((_QWORD *)&v27[0] + 1) = v17;
  v18._countAndFlagsBits = 0x756E654D2DLL;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  v19 = v27[0];
  v20 = swift_allocObject(&unk_1010C3C10, 24, 7);
  swift_weakInit(v20 + 16, v2);
  v21 = *((_BYTE *)v2 + OBJC_IVAR____TtC5Music25PlaylistSortingController_currentTrackListSort);
  v22 = *((_BYTE *)v2 + OBJC_IVAR____TtC5Music25PlaylistSortingController_currentTrackListSort + 1);
  v23 = swift_allocObject(&unk_1010C3C38, 32, 7);
  *(_BYTE *)(v23 + 16) = v21;
  *(_BYTE *)(v23 + 17) = v22;
  *(_QWORD *)(v23 + 24) = v20;
  sub_1000E3EE4();
  ActionMenu.init(_:image:style:id:debugDescription:builder:)(v12, v14, v16, 1, 0x7473696C79616C70, (void *)0xEE00794274726F53, v19, *((void **)&v19 + 1), (uint64_t)v27, (uint64_t)sub_1003F4440, v23);
  v24 = v27[3];
  *(_OWORD *)(a1 + 32) = v27[2];
  *(_OWORD *)(a1 + 48) = v24;
  *(_OWORD *)(a1 + 64) = v27[4];
  result = (__n128)v27[1];
  *(_OWORD *)a1 = v27[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1003F3D88(__int16 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _UNKNOWN **v14;
  _UNKNOWN **v15;
  _OWORD *v16;
  char *v17;
  _QWORD *v18;
  _UNKNOWN **v19;
  char v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  _BYTE *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  _BYTE *v53;
  uint64_t v54;
  char v55[24];

  v4 = type metadata accessor for Playlist(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Actions.SortPlaylist.Context(0);
  __chkstk_darwin(v54);
  v53 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B1B20);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static Actions.SortPlaylist.TrackListSort.Option.allCases.getter();
  v15 = v14;
  v16 = &unk_100EA7000;
  v52 = (char *)v14[2];
  if (v52)
  {
    v47 = v9;
    v51 = a2 + 16;
    swift_beginAccess(a2 + 16, v55, 0, 0);
    v17 = 0;
    v18 = _swiftEmptyArrayStorage;
    v50 = a1 & 0x1FF;
    v49 = (uint64_t)&type metadata for () + 8;
    v48 = xmmword_100EA7AA0;
    do
    {
      v19 = v15;
      v20 = v17[(_QWORD)v15 + 32];
      Strong = swift_weakLoadStrong(v51);
      if (Strong)
      {
        v22 = Strong;
        v23 = a2;
        v24 = v45;
        v25 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v6, Strong + OBJC_IVAR____TtC5Music25PlaylistSortingController_playlist, v46);
        swift_release(v22);
        v26 = (uint64_t)v47;
        Playlist.variant.getter(v27);
        v28 = *(void (**)(char *, uint64_t))(v24 + 8);
        a2 = v23;
        v28(v6, v25);
      }
      else
      {
        v29 = type metadata accessor for Playlist.Variant(0);
        v26 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v47, 1, 1, v29);
      }
      swift_retain(a2);
      v30 = v53;
      Actions.SortPlaylist.Context.init(sortOption:currentSort:playlistVariant:didSelectSort:)(v20, v50, v26, (uint64_t)sub_1003F4460, a2, v53);
      static Actions.SortPlaylist.action(context:)(v30, (uint64_t)v13);
      sub_1003F446C((uint64_t)v30);
      v31 = sub_1000E3EE4();
      v32 = static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v13, (uint64_t)&type metadata for ActionType, v54, v49, v31, (uint64_t)&protocol witness table for Actions.SortPlaylist.Context);
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011B1B20);
      v33 = sub_100007E8C((uint64_t *)&unk_1011A2140);
      v34 = swift_allocObject(v33, 40, 7);
      *(_OWORD *)(v34 + 16) = v48;
      *(_QWORD *)(v34 + 32) = v32;
      v35 = static ActionMenu.ElementBuilder.buildBlock(_:)(v34, (uint64_t)&type metadata for ActionType, v31);
      swift_bridgeObjectRelease(v34);
      if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        v18 = sub_100432C1C(0, v18[2] + 1, 1, v18);
      v15 = v19;
      v37 = v18[2];
      v36 = v18[3];
      if (v37 >= v36 >> 1)
        v18 = sub_100432C1C((_QWORD *)(v36 > 1), v37 + 1, 1, v18);
      ++v17;
      v18[2] = v37 + 1;
      v18[v37 + 4] = v35;
    }
    while (v52 != v17);
    swift_bridgeObjectRelease(v19);
    v16 = (_OWORD *)&unk_100EA7000;
  }
  else
  {
    swift_bridgeObjectRelease(v14);
    v18 = _swiftEmptyArrayStorage;
  }
  v38 = sub_1000E3EE4();
  v39 = static ActionMenu.ElementBuilder.buildArray(_:)((uint64_t)v18, (uint64_t)&type metadata for ActionType, v38);
  swift_bridgeObjectRelease(v18);
  v40 = sub_100007E8C((uint64_t *)&unk_1011A2140);
  v41 = swift_allocObject(v40, 40, 7);
  *(_OWORD *)(v41 + 16) = v16[170];
  *(_QWORD *)(v41 + 32) = v39;
  v42 = static ActionMenu.ElementBuilder.buildBlock(_:)(v41, (uint64_t)&type metadata for ActionType, v38);
  swift_bridgeObjectRelease(v41);
  return v42;
}

double sub_1003F4178(__int16 a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = (_BYTE *)(Strong + OBJC_IVAR____TtC5Music25PlaylistSortingController_currentTrackListSort);
    v8 = *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music25PlaylistSortingController_currentTrackListSort);
    *v7 = a1;
    v7[1] = HIBYTE(a1) & 1;
    sub_1003F3370(v8);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003F4200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Music25PlaylistSortingController_playlist;
  v2 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music25PlaylistSortingController_trackListSortDidChange + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003F4264()
{
  return type metadata accessor for PlaylistSortingController(0);
}

uint64_t type metadata accessor for PlaylistSortingController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B1A78;
  if (!qword_1011B1A78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistSortingController);
  return result;
}

uint64_t sub_1003F42A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EB9620;
    v4[2] = &unk_100EB9638;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003F4328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A30F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003F4370()
{
  unint64_t result;

  result = qword_1011B1B10;
  if (!qword_1011B1B10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort, &type metadata for Actions.SortPlaylist.TrackListSort);
    atomic_store(result, (unint64_t *)&qword_1011B1B10);
  }
  return result;
}

unint64_t sub_1003F43B4()
{
  unint64_t result;

  result = qword_1011B1B18;
  if (!qword_1011B1B18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort, &type metadata for Actions.SortPlaylist.TrackListSort);
    atomic_store(result, (unint64_t *)&qword_1011B1B18);
  }
  return result;
}

uint64_t sub_1003F43F8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F441C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F4440()
{
  uint64_t v0;
  __int16 v1;

  if (*(_BYTE *)(v0 + 17))
    v1 = 256;
  else
    v1 = 0;
  return sub_1003F3D88(v1 | *(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_1003F4460(__int16 a1)
{
  uint64_t v1;

  return sub_1003F4178(a1 & 0x1FF, v1);
}

uint64_t sub_1003F446C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003F44A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  int *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  char *v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  char **v43;
  void *v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50[24];
  __objc2_prot *v51;

  v4 = v3;
  v48 = a2;
  v7 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v7);
  v49 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v47 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()(v15);
  v16 = (_QWORD *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_playlistCreationViewController);
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_contextCompletionHandlers) = _swiftEmptyArrayStorage;
  sub_10005B704(a1, v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_initialContext, type metadata accessor for PlaylistCreation.Context);
  v17 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
  *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_navigationController) = v17;
  v18 = (int *)type metadata accessor for PlaylistCreation.Context(0);
  v19 = (uint64_t *)(a1 + v18[7]);
  v20 = *v19;
  if (*v19)
  {
    v46 = a3;
    v21 = v19[1];
    v22 = sub_100007E8C(&qword_1011B2088);
    v23 = swift_allocObject(v22, 48, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100EA7AA0;
    v24 = swift_allocObject(&unk_1010C3D48, 32, 7);
    *(_QWORD *)(v24 + 16) = v20;
    *(_QWORD *)(v24 + 24) = v21;
    *(_QWORD *)(v23 + 32) = sub_10013C910;
    *(_QWORD *)(v23 + 40) = v24;
    v25 = (uint64_t *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_contextCompletionHandlers);
    swift_beginAccess(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_contextCompletionHandlers, v50, 1, 0);
    *v25 = v23;
    a3 = v46;
    swift_retain();
    swift_bridgeObjectRelease();
  }
  sub_10004A160(a1 + v18[6], (uint64_t)v11, &qword_1011B1F10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v26 = type metadata accessor for Track(0);
    v27 = (uint64_t)v47;
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v26, &protocol witness table for Track);
    sub_10004FF60((uint64_t)v11, &qword_1011B1F10);
  }
  else
  {
    v27 = (uint64_t)v47;
    (*(void (**)(void))(v13 + 32))();
  }
  v28 = v49;
  sub_10004A160(a1, v49, (uint64_t *)&unk_1011B5660);
  v29 = (uint64_t *)(a1 + v18[5]);
  v30 = *v29;
  v31 = v29[1];
  v32 = swift_allocObject(&unk_1010C3CF8, 24, 7);
  swift_weakInit(v32 + 16, v4);
  v33 = (_QWORD *)swift_allocObject(&unk_1010C3D20, 40, 7);
  v34 = v48;
  v33[2] = v32;
  v33[3] = v34;
  v33[4] = a3;
  v35 = objc_allocWithZone((Class)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0));
  swift_bridgeObjectRetain();
  swift_retain();
  v36 = sub_1001608F8(v27, v28, v30, v31, (uint64_t)sub_1003F8400, (uint64_t)v33);
  v37 = *(void **)(v4 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_navigationController);
  v38 = v36;
  objc_msgSend(v37, "pushViewController:animated:", v38, 0);
  objc_msgSend(v37, "setModalPresentationStyle:", 2);
  v51 = &OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate;
  v39 = swift_dynamicCastObjCProtocolConditional(v38, 1, &v51);
  if (v39)
  {
    v40 = v39;
    v41 = objc_msgSend(v37, "presentationController");
    if (v41)
    {
      v42 = v41;
      objc_msgSend(v41, "setDelegate:", v40);

      swift_release();
    }
    else
    {
      swift_release();

    }
  }
  else
  {

    swift_release();
  }
  sub_10005B748(a1, type metadata accessor for PlaylistCreation.Context);
  v43 = (char **)(v4 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_playlistCreationViewController);
  v44 = *(void **)(v4 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_playlistCreationViewController);
  *v43 = v38;
  v43[1] = (char *)&off_1010B3920;

  return v4;
}

uint64_t sub_1003F48F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD **v51;
  _QWORD *v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[24];
  char v68[24];

  v66 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  __chkstk_darwin(v2);
  v59 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v58 = (char *)&v57 - v5;
  v6 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v6);
  v60 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_10119F218);
  __chkstk_darwin(v62);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Playlist.Folder(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v63);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v1;
  v19 = v1 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_initialContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_initialContext, v68, 0, 0);
  sub_10005B704(v19, (uint64_t)v18, type metadata accessor for PlaylistCreation.Context);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v20(v18, 1, v13))
  {
    sub_10005B748((uint64_t)v18, type metadata accessor for PlaylistCreation.Context);
    v21 = 0;
    v22 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v18, v13);
    v23 = sub_10005B748((uint64_t)v18, type metadata accessor for PlaylistCreation.Context);
    v21 = Playlist.Folder.id.getter(v23);
    v22 = v24;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_10004A160(v66, (uint64_t)v12, (uint64_t *)&unk_1011B5660);
  v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v12, 1, v13);
  if ((_DWORD)v25 == 1)
  {
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011B5660);
    if (!v22)
      goto LABEL_16;
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  v26 = Playlist.Folder.id.getter(v25);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  if (v22)
  {
    if (!v28)
      goto LABEL_14;
    if (v21 == v26 && v22 == v28)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v26, v28, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v30 & 1) == 0)
        return result;
    }
  }
  else if (v28)
  {
    goto LABEL_14;
  }
LABEL_16:
  v31 = v63;
  v32 = *(int *)(v63 + 24);
  v33 = v66 + v32;
  v34 = (uint64_t)&v9[*(int *)(v62 + 48)];
  sub_10004A160(v19 + v32, (uint64_t)v9, &qword_1011B1F10);
  sub_10004A160(v33, v34, &qword_1011B1F10);
  v36 = v64;
  v35 = v65;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  LODWORD(v33) = v37(v34, 1, v65);
  v38 = v37((uint64_t)v9, 1, v35);
  if ((_DWORD)v33 == 1)
  {
    if (v38 != 1)
      sub_10004FF60((uint64_t)v9, &qword_1011B1F10);
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
    if (v38 == 1)
    {
      v40 = v60;
      v39(v60, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
      swift_beginAccess(v19, v67, 33, 0);
      v41 = v19 + *(int *)(v31 + 24);
      v42 = (uint64_t)v40;
    }
    else
    {
      v43 = v58;
      v39(v58, (uint64_t)v9, v35);
      v44 = v59;
      v39(v59, v34, v35);
      v45 = type metadata accessor for Track(0);
      static MusicItemCollection.+= infix(_:_:)(v43, v44, v45, &protocol witness table for Track);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v44, v35);
      v46 = v60;
      v39(v60, (uint64_t)v43, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v46, 0, 1, v35);
      swift_beginAccess(v19, v67, 33, 0);
      v41 = v19 + *(int *)(v31 + 24);
      v42 = (uint64_t)v46;
    }
    sub_1000A5508(v42, v41, &qword_1011B1F10);
    swift_endAccess(v67);
  }
  v47 = (uint64_t *)(v66 + *(int *)(v31 + 28));
  v48 = *v47;
  if (*v47)
  {
    v49 = v47[1];
    v50 = swift_allocObject(&unk_1010C3D98, 32, 7);
    *(_QWORD *)(v50 + 16) = v48;
    *(_QWORD *)(v50 + 24) = v49;
    v51 = (_QWORD **)(v61 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_contextCompletionHandlers);
    swift_beginAccess(v61 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_contextCompletionHandlers, v67, 33, 0);
    v52 = *v51;
    sub_100048AAC(v48, v49);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v52);
    *v51 = v52;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v52 = sub_100432C30(0, v52[2] + 1, 1, v52);
      *v51 = v52;
    }
    v55 = v52[2];
    v54 = v52[3];
    if (v55 >= v54 >> 1)
    {
      v52 = sub_100432C30((_QWORD *)(v54 > 1), v55 + 1, 1, v52);
      *v51 = v52;
    }
    v52[2] = v55 + 1;
    v56 = &v52[2 * v55];
    v56[4] = sub_10013C910;
    v56[5] = v50;
    swift_endAccess(v67);
    sub_10004BA30(v48, v49);
  }
  return 1;
}

uint64_t sub_1003F4F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10005B748(v0 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_initialContext, type metadata accessor for PlaylistCreation.Context);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_contextCompletionHandlers));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003F4F9C()
{
  return type metadata accessor for PlaylistCreation.Flow(0);
}

uint64_t type metadata accessor for PlaylistCreation.Flow(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B1B68, (uint64_t)&nominal type descriptor for PlaylistCreation.Flow);
}

uint64_t sub_1003F4FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003F5FE8(a1, a2, a3, type metadata accessor for PlaylistCreation.Context);
}

uint64_t type metadata accessor for PlaylistCreation.Context(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B1F70, (uint64_t)&nominal type descriptor for PlaylistCreation.Context);
}

Swift::Int sub_1003F4FD8()
{
  return sub_1003F81C8();
}

uint64_t sub_1003F4FE4(uint64_t a1)
{
  return sub_1003F8250(a1);
}

Swift::Int sub_1003F4FF0(uint64_t a1)
{
  return sub_1003F82C4(a1);
}

uint64_t sub_1003F4FFC(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_uuid, *a2 + OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_uuid);
}

uint64_t sub_1003F5018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  char *v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  char **v52;
  void *v53;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char v61[24];
  __objc2_prot *v62;

  v4 = v3;
  v56 = a2;
  v7 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C7C90);
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v57 = *(_QWORD *)(v13 - 8);
  v58 = v13;
  __chkstk_darwin(v13);
  v59 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - v16;
  __chkstk_darwin(v18);
  v60 = (char *)&v55 - v19;
  UUID.init()(v20);
  v21 = (_QWORD *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_playlistCreationViewController);
  *v21 = 0;
  v21[1] = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_contextCompletionHandlers) = _swiftEmptyArrayStorage;
  sub_10005B704(a1, v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_initialContext, type metadata accessor for PlaylistCreation.LegacyContext);
  *(_QWORD *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_navigationController) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NavigationController()), "init");
  v22 = type metadata accessor for PlaylistCreation.LegacyContext(0);
  v23 = (uint64_t *)(a1 + *(int *)(v22 + 32));
  v24 = *v23;
  if (*v23)
  {
    v55 = v9;
    v25 = a3;
    v26 = a1;
    v27 = v23[1];
    v28 = sub_100007E8C(&qword_1011B2088);
    v29 = swift_allocObject(v28, 48, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100EA7AA0;
    v30 = swift_allocObject(&unk_1010C3CD0, 32, 7);
    *(_QWORD *)(v30 + 16) = v24;
    *(_QWORD *)(v30 + 24) = v27;
    *(_QWORD *)(v29 + 32) = sub_10004D5F4;
    *(_QWORD *)(v29 + 40) = v30;
    v31 = (uint64_t *)(v3 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_contextCompletionHandlers);
    swift_beginAccess(v4 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_contextCompletionHandlers, v61, 1, 0);
    *v31 = v29;
    a1 = v26;
    a3 = v25;
    v9 = v55;
    swift_retain();
    swift_bridgeObjectRelease();
  }
  sub_10004A160(a1 + *(int *)(v22 + 28), (uint64_t)v12, &qword_1011C7C90);
  v32 = type metadata accessor for SourcedSongs(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v12, 1, v32) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_1011C7C90);
LABEL_8:
    v37 = v56;
    v38 = type metadata accessor for Track(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v38, &protocol witness table for Track);
    v36 = v57;
    v33 = v58;
    v34 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    goto LABEL_9;
  }
  if (swift_getEnumCaseMultiPayload(v12, v32) != 1)
  {
    sub_10005B748((uint64_t)v12, type metadata accessor for SourcedSongs);
    goto LABEL_8;
  }
  v33 = v58;
  v34 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
  v35 = v12;
  v36 = v57;
  v34(v17, v35, v58);
  v37 = v56;
LABEL_9:
  v39 = v60;
  v34(v60, v17, v33);
  v40 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v59, v39, v33);
  v41 = type metadata accessor for Playlist.Folder(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v9, 1, 1, v41);
  v42 = swift_allocObject(&unk_1010C3C80, 24, 7);
  swift_weakInit(v42 + 16, v4);
  v43 = (_QWORD *)swift_allocObject(&unk_1010C3CA8, 40, 7);
  v43[2] = v42;
  v43[3] = v37;
  v43[4] = a3;
  v44 = objc_allocWithZone((Class)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0));
  swift_retain();
  v45 = sub_1001608F8(v40, (uint64_t)v9, 0, 0, (uint64_t)sub_1003F83D8, (uint64_t)v43);
  v46 = *(void **)(v4 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_navigationController);
  v47 = v45;
  objc_msgSend(v46, "pushViewController:animated:", v47, 0);
  objc_msgSend(v46, "setModalPresentationStyle:", 2);
  v62 = &OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate;
  v48 = swift_dynamicCastObjCProtocolConditional(v47, 1, &v62);
  if (v48
    && (v49 = v48, (v50 = objc_msgSend(v46, "presentationController")) != 0))
  {
    v51 = v50;
    objc_msgSend(v50, "setDelegate:", v49);

    swift_release();
  }
  else
  {

    swift_release();
  }
  sub_10005B748(a1, type metadata accessor for PlaylistCreation.LegacyContext);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v60, v33);
  v52 = (char **)(v4 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_playlistCreationViewController);
  v53 = *(void **)(v4 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_playlistCreationViewController);
  *v52 = v47;
  v52[1] = (char *)&off_1010B3920;

  return v4;
}

uint64_t sub_1003F5514(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  _BYTE v18[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  result = swift_weakLoadStrong(v8);
  if (result)
  {
    v10 = result;
    v11 = (_QWORD *)(result + *a5);
    swift_beginAccess(v11, &v17, 1, 0);
    v12 = *v11;
    v13 = *(_QWORD *)(*v11 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain(*v11);
      v14 = (_QWORD *)(v12 + 40);
      do
      {
        v16 = (void (*)(uint64_t))*(v14 - 1);
        v15 = *v14;
        swift_retain(*v14);
        v16(a1);
        swift_release(v15);
        v14 += 2;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease(v12);
      v12 = *v11;
    }
    *v11 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v12);
    a3(v10, a1);
    return swift_release(v10);
  }
  return result;
}

uint64_t sub_1003F5620(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  unsigned int v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(id *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  id *v36;
  int EnumCaseMultiPayload;
  id *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void (*v43)(char *, void **, uint64_t);
  void **v44;
  uint64_t v45;
  uint64_t v46;
  id *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD **v55;
  _QWORD *v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  NSString v70;
  id v71;
  Class isa;
  double v73;
  uint64_t v74;
  Class v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id *v83;
  _QWORD *v84;
  _BYTE v85[24];
  char v86[24];

  v82 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v3 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v79 - v7;
  v9 = sub_100007E8C(&qword_1011C7C90);
  __chkstk_darwin(v9);
  v83 = (id *)((char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100007E8C(&qword_1011B2090);
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  v14 = v1 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_initialContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_initialContext, v86, 0, 0);
  v15 = *(void **)v14;
  v84 = a1;
  v16 = *a1;
  v17 = v15;
  LOBYTE(v16) = static NSObject.== infix(_:_:)(v17, v16);

  if ((v16 & 1) == 0)
    return 0;
  v81 = v1;
  v18 = *(void **)(v14 + 8);
  if (v18)
  {
    v19 = objc_msgSend(v18, "identifiers");
    v20 = (void *)v84[1];
    if (!v20 || (v21 = objc_msgSend(v20, "identifiers")) == 0)
      v21 = objc_msgSend((id)objc_opt_self(MPIdentifierSet), "emptyIdentifierSet");
    v22 = objc_msgSend(v19, "intersectsSet:", v21);

    if (!v22)
      return 0;
  }
  v23 = *(void **)(v14 + 16);
  if (v23)
  {
    v24 = objc_msgSend(v23, "identifiers");
    v25 = (void *)v84[2];
    if (!v25 || (v26 = objc_msgSend(v25, "identifiers")) == 0)
      v26 = objc_msgSend((id)objc_opt_self(MPIdentifierSet), "emptyIdentifierSet");
    v27 = objc_msgSend(v24, "intersectsSet:", v26);

    if (!v27)
      return 0;
  }
  v80 = type metadata accessor for PlaylistCreation.LegacyContext(0);
  v28 = *(int *)(v80 + 28);
  v29 = v14 + v28;
  v30 = (void **)((char *)v13 + *(int *)(v11 + 48));
  sub_10004A160((uint64_t)v84 + v28, (uint64_t)v13, &qword_1011C7C90);
  sub_10004A160(v29, (uint64_t)v30, &qword_1011C7C90);
  v31 = type metadata accessor for SourcedSongs(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(id *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v13, 1, v31) == 1)
  {
    v34 = v33(v30, 1, v31);
    v35 = v81;
    if (v34 == 1)
    {
      v36 = v83;
      (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v83, 1, 1, v31);
LABEL_29:
      swift_beginAccess(v14, v85, 33, 0);
      v48 = v80;
      v49 = v14 + *(int *)(v80 + 28);
      v50 = (uint64_t)v36;
      goto LABEL_30;
    }
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v36 = v83;
      (*(void (**)(id *, id *, uint64_t))(v3 + 32))(v83, v30, v82);
      goto LABEL_21;
    }
    v36 = v83;
    *v83 = *v30;
LABEL_27:
    v39 = v36;
    v40 = v31;
    v41 = 0;
    goto LABEL_28;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v31);
  v35 = v81;
  if (EnumCaseMultiPayload != 1)
  {
    v42 = *v13;
    if (v33(v30, 1, v31) == 1)
    {
      v36 = v83;
      *v83 = v42;
      goto LABEL_27;
    }
    if (swift_getEnumCaseMultiPayload(v30, v31) != 1)
    {
      v66 = *v30;
      if (v42)
      {
        v67 = objc_allocWithZone((Class)MPMutableSectionedCollection);
        v68 = v42;
        v69 = objc_msgSend(v67, "init");
        v70 = String._bridgeToObjectiveC()();
        objc_msgSend(v69, "appendSection:", v70);

        if (v66)
        {
          v71 = v66;
          isa = (Class)objc_msgSend(v71, "allItems");
          if (!isa)
          {
            v74 = sub_10004A07C(0, (unint64_t *)&unk_10119E540, MPModelSong_ptr);
            static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v74);
            isa = Array._bridgeToObjectiveC()().super.isa;
            *(_QWORD *)&v73 = swift_bridgeObjectRelease().n128_u64[0];
          }
          objc_msgSend(v69, "appendItems:", isa, v73);

        }
        v75 = (Class)objc_msgSend(v68, "allItems");
        if (!v75)
        {
          v77 = sub_10004A07C(0, (unint64_t *)&unk_10119E540, MPModelSong_ptr);
          static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v77);
          v75 = Array._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&v76 = swift_bridgeObjectRelease().n128_u64[0];
        }
        objc_msgSend(v69, "appendItems:", v75, v76);

        v78 = (uint64_t)v83;
        *v83 = v69;
        swift_storeEnumTagMultiPayload(v78, v31, 0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v78, 0, 1, v31);
        swift_beginAccess(v14, v85, 33, 0);
        v48 = v80;
        sub_1000A5508(v78, v14 + *(int *)(v80 + 28), &qword_1011C7C90);
        swift_endAccess(v85);
        v35 = v81;
      }
      else
      {

        v48 = v80;
      }
      goto LABEL_31;
    }

    sub_10005B748((uint64_t)v30, type metadata accessor for SourcedSongs);
LABEL_41:
    if (qword_10119BA00 != -1)
      swift_once(&qword_10119BA00, sub_100165EE4);
    v61 = type metadata accessor for Logger(0);
    v62 = sub_100048B14(v61, (uint64_t)qword_10124C900);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.error.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Unexpected sourced song combination.", v65, 2u);
      swift_slowDealloc(v65, -1, -1);
    }

    v48 = v80;
    goto LABEL_31;
  }
  if (v33(v30, 1, v31) == 1)
  {
    v36 = v83;
    (*(void (**)(id *, void **, uint64_t))(v3 + 32))(v83, v13, v82);
LABEL_21:
    v39 = v36;
    v40 = v31;
    v41 = 1;
LABEL_28:
    swift_storeEnumTagMultiPayload(v39, v40, v41);
    (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v31);
    goto LABEL_29;
  }
  if (swift_getEnumCaseMultiPayload(v30, v31) != 1)
  {

    (*(void (**)(void **, uint64_t))(v3 + 8))(v13, v82);
    goto LABEL_41;
  }
  v43 = *(void (**)(char *, void **, uint64_t))(v3 + 32);
  v44 = v13;
  v45 = v82;
  v43(v8, v44, v82);
  v43(v5, v30, v45);
  v46 = type metadata accessor for Track(0);
  static MusicItemCollection.+= infix(_:_:)(v5, v8, v46, &protocol witness table for Track);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v45);
  v47 = v83;
  v43((char *)v83, (void **)v5, v45);
  swift_storeEnumTagMultiPayload(v47, v31, 1);
  (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v47, 0, 1, v31);
  swift_beginAccess(v14, v85, 33, 0);
  v48 = v80;
  v49 = v14 + *(int *)(v80 + 28);
  v50 = (uint64_t)v47;
LABEL_30:
  sub_1000A5508(v50, v49, &qword_1011C7C90);
  swift_endAccess(v85);
LABEL_31:
  v51 = (_QWORD *)((char *)v84 + *(int *)(v48 + 32));
  v52 = *v51;
  if (*v51)
  {
    v53 = v51[1];
    v54 = swift_allocObject(&unk_1010C3D70, 32, 7);
    *(_QWORD *)(v54 + 16) = v52;
    *(_QWORD *)(v54 + 24) = v53;
    v55 = (_QWORD **)(v35 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_contextCompletionHandlers);
    swift_beginAccess(v35 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_contextCompletionHandlers, v85, 33, 0);
    v56 = *v55;
    sub_100048AAC(v52, v53);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v56);
    *v55 = v56;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v56 = sub_100432C30(0, v56[2] + 1, 1, v56);
      *v55 = v56;
    }
    v59 = v56[2];
    v58 = v56[3];
    if (v59 >= v58 >> 1)
    {
      v56 = sub_100432C30((_QWORD *)(v58 > 1), v59 + 1, 1, v56);
      *v55 = v56;
    }
    v56[2] = v59 + 1;
    v60 = &v56[2 * v59];
    v60[4] = sub_10013C910;
    v60[5] = v54;
    swift_endAccess(v85);
    sub_10004BA30(v52, v53);
  }
  return 1;
}

uint64_t sub_1003F5F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10005B748(v0 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_initialContext, type metadata accessor for PlaylistCreation.LegacyContext);

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_contextCompletionHandlers));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003F5FC0()
{
  return type metadata accessor for PlaylistCreation.LegacyFlow(0);
}

uint64_t type metadata accessor for PlaylistCreation.LegacyFlow(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B1CA8, (uint64_t)&nominal type descriptor for PlaylistCreation.LegacyFlow);
}

uint64_t sub_1003F5FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003F5FE8(a1, a2, a3, type metadata accessor for PlaylistCreation.LegacyContext);
}

uint64_t sub_1003F5FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[5];

  result = type metadata accessor for UUID(319);
  if (v7 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    result = a4(319);
    if (v8 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(result - 8) + 64;
      v9[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v9[3] = &unk_100EB9658;
      v9[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      result = swift_updateClassMetadata2(a1, 256, 5, v9, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PlaylistCreation.LegacyContext(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B1E08, (uint64_t)&nominal type descriptor for PlaylistCreation.LegacyContext);
}

char *sub_1003F60AC(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, uint64_t);
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  void **__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v10 = *(int *)(a3 + 28);
    __dst = (void **)&a1[v10];
    v11 = (void **)((char *)a2 + v10);
    v12 = type metadata accessor for SourcedSongs(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    v16 = v8;
    v17 = v9;
    if (v14(v11, 1, v12))
    {
      v18 = sub_100007E8C(&qword_1011C7C90);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
      {
        v19 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(__dst, v11, v19);
        v20 = 1;
      }
      else
      {
        v21 = *v11;
        *__dst = *v11;
        v22 = v21;
        v20 = 0;
      }
      swift_storeEnumTagMultiPayload(__dst, v12, v20);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v23 = *(int *)(a3 + 32);
    v24 = &v7[v23];
    v25 = (char **)((char *)a2 + v23);
    if (*v25)
    {
      v26 = v25[1];
      *(_QWORD *)v24 = *v25;
      *((_QWORD *)v24 + 1) = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
  }
  return v7;
}

uint64_t type metadata accessor for SourcedSongs(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B1EC8, (uint64_t)&nominal type descriptor for SourcedSongs);
}

double sub_1003F6254(id *a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  double result;
  uint64_t v7;

  v4 = (id *)((char *)a1 + *(int *)(a2 + 28));
  v5 = type metadata accessor for SourcedSongs(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
    {
      v7 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
    else
    {

    }
  }
  if (*(id *)((char *)a1 + *(int *)(a2 + 32)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_1003F6328(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void **v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(void **, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = *(void **)(a2 + 16);
  a1[2] = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (void **)((char *)a1 + v8);
  v10 = (void **)(a2 + v8);
  v11 = type metadata accessor for SourcedSongs(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v12 + 48);
  v14 = v5;
  v15 = v6;
  v16 = v7;
  if (v13(v10, 1, v11))
  {
    v17 = sub_100007E8C(&qword_1011C7C90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v9, v10, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v10;
      *v9 = *v10;
      v21 = v20;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v19);
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v22 = *(int *)(a3 + 32);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  if (*v24)
  {
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  return a1;
}

uint64_t sub_1003F6490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void **v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void **, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v37;
  id v38;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 16);
  v13 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v13;
  v14 = v13;

  v15 = *(int *)(a3 + 28);
  v16 = (void **)(a1 + v15);
  v17 = (void **)(a2 + v15);
  v18 = type metadata accessor for SourcedSongs(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v17, v23);
        v24 = 1;
      }
      else
      {
        v27 = *v17;
        *v16 = *v17;
        v28 = v27;
        v24 = 0;
      }
      swift_storeEnumTagMultiPayload(v16, v18, v24);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
LABEL_7:
    v25 = sub_100007E8C(&qword_1011C7C90);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  if (v22)
  {
    sub_10005B748((uint64_t)v16, type metadata accessor for SourcedSongs);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005B748((uint64_t)v16, type metadata accessor for SourcedSongs);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v16, v17, v26);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      v37 = *v17;
      *v16 = *v17;
      v38 = v37;
      swift_storeEnumTagMultiPayload(v16, v18, 0);
    }
  }
LABEL_13:
  v29 = *(int *)(a3 + 32);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v32 = *(_QWORD *)(a1 + v29);
  v33 = *v31;
  if (!v32)
  {
    if (v33)
    {
      v35 = v31[1];
      *v30 = v33;
      v30[1] = v35;
      swift_retain();
      return a1;
    }
LABEL_19:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    return a1;
  }
  if (!v33)
  {
    swift_release();
    goto LABEL_19;
  }
  v34 = v31[1];
  *v30 = v33;
  v30[1] = v34;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1003F66EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for SourcedSongs(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011C7C90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 32);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  return a1;
}

void **sub_1003F6830(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *a1;
  *a1 = *a2;

  v7 = a1[1];
  a1[1] = a2[1];

  v8 = a1[2];
  a1[2] = a2[2];

  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for SourcedSongs(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)v10, type metadata accessor for SourcedSongs);
      if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
      {
        v19 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v10, v11, v19);
        swift_storeEnumTagMultiPayload(v10, v12, 1);
        goto LABEL_14;
      }
      v18 = *(_QWORD *)(v13 + 64);
LABEL_8:
      memcpy(v10, v11, v18);
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v10, type metadata accessor for SourcedSongs);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011C7C90) - 8) + 64);
    goto LABEL_8;
  }
  if (v16)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(v13 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_14:
  v20 = *(int *)(a3 + 32);
  v21 = (void **)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  v23 = *(uint64_t *)((char *)a1 + v20);
  v24 = *v22;
  if (!v23)
  {
    if (v24)
    {
      v26 = v22[1];
      *v21 = v24;
      v21[1] = v26;
      return a1;
    }
LABEL_20:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    return a1;
  }
  if (!v24)
  {
    swift_release();
    goto LABEL_20;
  }
  v25 = v22[1];
  *v21 = v24;
  v21[1] = v25;
  swift_release();
  return a1;
}

uint64_t sub_1003F6A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F6A68);
}

uint64_t sub_1003F6A68(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C7C90);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1003F6AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F6AF4);
}

char *sub_1003F6AF4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C7C90);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_1003F6B6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\b";
  v4[2] = "\b";
  sub_10015C698(319, (unint64_t *)&unk_1011B1E18, type metadata accessor for SourcedSongs);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100EB9658;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

char *sub_1003F6C08(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_1003F6CC8(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **sub_1003F6D1C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **sub_1003F6DB0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SourcedSongs);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_1003F6E5C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1003F6EEC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SourcedSongs);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1003F6F94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  sub_1000D9828(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
  }
}

uint64_t *sub_1003F7004(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Playlist.Folder(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011B5660);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (char *)a1 + v12;
    v17 = (char *)a2 + v12;
    swift_bridgeObjectRetain();
    v18 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C(&qword_1011B1F10);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = a3[7];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    if (*v23)
    {
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
    }
  }
  return a1;
}

double sub_1003F71B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = type metadata accessor for Playlist.Folder(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  v6 = a1 + a2[6];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  if (*(_QWORD *)(a1 + a2[7]))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1003F7294(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = type metadata accessor for Playlist.Folder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  swift_bridgeObjectRetain();
  v16 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100007E8C(&qword_1011B1F10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  if (*(_QWORD *)v21)
  {
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  return a1;
}

char *sub_1003F7414(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for Playlist.Folder(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    v24 = sub_100007E8C(&qword_1011B1F10);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_13:
  v25 = a3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *(_QWORD *)&a1[v25];
  v29 = *(_QWORD *)v27;
  if (!v28)
  {
    if (v29)
    {
      v31 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v31;
      swift_retain();
      return a1;
    }
LABEL_19:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    return a1;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_19;
  }
  v30 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v30;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1003F766C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Playlist.Folder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C(&qword_1011B1F10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  if (*(_QWORD *)v17)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = v18;
    *((_QWORD *)v16 + 1) = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  return a1;
}

char *sub_1003F77DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for Playlist.Folder(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_12:
    v26 = sub_100007E8C(&qword_1011B1F10);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
LABEL_13:
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = *(_QWORD *)&a1[v27];
  v31 = *(_QWORD *)v29;
  if (!v30)
  {
    if (v31)
    {
      v33 = *((_QWORD *)v29 + 1);
      *(_QWORD *)v28 = v31;
      *((_QWORD *)v28 + 1) = v33;
      return a1;
    }
LABEL_19:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_19;
  }
  v32 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v32;
  swift_release();
  return a1;
}

uint64_t sub_1003F7A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F7A24);
}

uint64_t sub_1003F7A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C(&qword_1011B1F10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v11);
  }
}

uint64_t sub_1003F7AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F7AF0);
}

uint64_t sub_1003F7AF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100007E8C((uint64_t *)&unk_1011B5660);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return result;
    }
    v10 = sub_100007E8C(&qword_1011B1F10);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003F7BA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_10015C698(319, qword_1011B1F80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100EB9658;
    sub_1003F7C3C(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_100EB9658;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

void sub_1003F7C3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B66C0)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011A96F0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011B66C0);
  }
}

ValueMetadata *type metadata accessor for PlaylistCreation()
{
  return &type metadata for PlaylistCreation;
}

uint64_t *sub_1003F7CA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = *a2;
      swift_errorRetain(v14);
      *a1 = v14;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A3430) + 48);
      v11 = *(void **)((char *)a2 + v10);
      *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
      v12 = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_1003F7D9C(_QWORD *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 1)
  {
    swift_errorRelease(*a1);
  }
  else if (!EnumCaseMultiPayload)
  {
    v4 = type metadata accessor for Playlist(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  }
}

_QWORD *sub_1003F7E14(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = *a2;
    swift_errorRetain(v11);
    *a1 = v11;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Playlist(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A3430) + 48);
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = v9;
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

uint64_t *sub_1003F7EE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for PlaylistCreation.FlowResult);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *a2;
      swift_errorRetain(v11);
      *a1 = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A3430) + 48);
      v9 = *(void **)((char *)a2 + v8);
      *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
      v10 = v9;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t type metadata accessor for PlaylistCreation.FlowResult(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B2038, (uint64_t)&nominal type descriptor for PlaylistCreation.FlowResult);
}

char *sub_1003F7FE0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_100007E8C((uint64_t *)&unk_1011A3430);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1003F8080(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for PlaylistCreation.FlowResult);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_100007E8C((uint64_t *)&unk_1011A3430);
      *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1003F8138(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, "\b");
    v5[0] = v4;
    v5[1] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

Swift::Int sub_1003F81BC()
{
  return sub_1003F81C8();
}

Swift::Int sub_1003F81C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_100048748(&qword_1011B2080, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_1003F8244(uint64_t a1)
{
  return sub_1003F8250(a1);
}

uint64_t sub_1003F8250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_100048748(&qword_1011B2080, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_1003F82B8(uint64_t a1)
{
  return sub_1003F82C4(a1);
}

Swift::Int sub_1003F82C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_100048748(&qword_1011B2080, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_1003F833C(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_uuid, *a2 + OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_uuid);
}

uint64_t sub_1003F8358()
{
  return sub_100048748(&qword_1011B2070, type metadata accessor for PlaylistCreation.LegacyFlow, (uint64_t)&unk_100EB96FC);
}

uint64_t sub_1003F8384()
{
  return sub_100048748(&qword_1011B2078, type metadata accessor for PlaylistCreation.Flow, (uint64_t)&unk_100EB9764);
}

uint64_t sub_1003F83B0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F83D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1003F5514(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), &OBJC_IVAR____TtCV5Music16PlaylistCreation10LegacyFlow_contextCompletionHandlers);
}

uint64_t sub_1003F8400(uint64_t a1)
{
  uint64_t v1;

  return sub_1003F5514(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), &OBJC_IVAR____TtCV5Music16PlaylistCreation4Flow_contextCompletionHandlers);
}

uint64_t sub_1003F8424()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *_s7ElementVMa()
{
  return &_s7ElementVN;
}

uint64_t sub_1003F8468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Entry(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Track(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s7ElementV4ItemOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F9B38(v1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    Playlist.Entry.catalogID.getter(v13);
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v15)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    v17.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    Track.catalogID.getter(v17);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v19)
      goto LABEL_3;
  }
  return 1;
}

uint64_t sub_1003F85E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Entry(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Track(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s7ElementV4ItemOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F9B38(v1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    v14 = Playlist.Entry.catalogID.getter(v13);
    if (v15)
      v16 = v14;
    else
      v16 = 0x497972617262696CLL;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v17.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v18 = Track.catalogID.getter(v17);
    if (v19)
      v16 = v18;
    else
      v16 = 0x497972617262696CLL;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v16;
}

uint64_t sub_1003F878C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v16;
  int v18;
  uint64_t v19;

  v1 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s7ElementV4ItemOMa(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1003F8468() & 1) != 0)
    return 0x497972617262696CLL;
  sub_1003F9B38(v0, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload(v11, v9) == 1)
  {
    v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Playlist.Entry.internalItem.getter(v13);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
    if (v14 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return 0x6569766F6DLL;
    }
    else
    {
      v16 = v14;
      if (v14 == enum case for Playlist.Entry.InternalItem.musicVideo(_:)
        || v14 == enum case for Playlist.Entry.InternalItem.song(_:))
      {
        v12 = 1735290739;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      else if (v14 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return 0x646F736970457674;
      }
      else
      {
        v12 = 0xD000000000000013;
        if (v14 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        }
        else
        {
          v18 = enum case for Playlist.Entry.InternalItem.uploadedVideo(_:);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
          if (v16 != v18)
            return 0;
        }
      }
    }
  }
  else
  {
    v12 = 1735290739;
    sub_1003F9AC0((uint64_t)v11);
  }
  return v12;
}

uint64_t sub_1003F8A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = type metadata accessor for UploadedVideo(0);
  v58 = *(_QWORD *)(v1 - 8);
  v59 = v1;
  __chkstk_darwin(v1);
  v57 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for UploadedAudio(0);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v61 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVEpisode(0);
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  __chkstk_darwin(v4);
  v63 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Song(0);
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  __chkstk_darwin(v6);
  v66 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  __chkstk_darwin(v8);
  v69 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicMovie(0);
  v73 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  __chkstk_darwin(v10);
  v72 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v75 = *(_QWORD *)(v12 - 8);
  v76 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist.Entry(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Track(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = _s7ElementV4ItemOMa(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1003F8468() & 1) == 0)
  {
    sub_1003F9B38(v0, (uint64_t)v25);
    if (swift_getEnumCaseMultiPayload(v25, v23) != 1)
    {
      v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v25, v19);
      v26 = Track.title.getter(v41);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      return v26;
    }
    v27 = v16;
    v28 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 32);
    v29 = v18;
    v30 = v15;
    v31 = v28(v18, v25, v15);
    v32 = v14;
    Playlist.Entry.internalItem.getter(v31);
    v34 = v75;
    v33 = v76;
    v35 = (*(uint64_t (**)(char *, uint64_t))(v75 + 88))(v14, v76);
    if (v35 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v14, v33);
      v37 = v72;
      v36 = v73;
      v38 = v74;
      v39.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v73 + 32))(v72, v32, v74);
      v40 = MusicMovie.title.getter(v39);
    }
    else
    {
      if (v35 != enum case for Playlist.Entry.InternalItem.musicVideo(_:))
      {
        if (v35 == enum case for Playlist.Entry.InternalItem.song(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v14, v33);
          v44 = v67;
          v43 = v68;
          v45 = v30;
          v46 = v66;
          v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v67 + 32))(v66, v32, v68);
          v48 = Song.title.getter(v47);
        }
        else if (v35 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v14, v33);
          v44 = v64;
          v43 = v65;
          v45 = v30;
          v46 = v63;
          v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v64 + 32))(v63, v32, v65);
          v48 = TVEpisode.title.getter(v49);
        }
        else
        {
          if (v35 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
          {
            (*(void (**)(char *, uint64_t))(v34 + 96))(v14, v33);
            v51 = v60;
            v50 = v61;
            v52 = v62;
            v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v60 + 32))(v61, v32, v62);
            v26 = UploadedAudio.title.getter(v53);
            (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
            goto LABEL_10;
          }
          if (v35 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
            (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v33);
            return 0;
          }
          (*(void (**)(char *, uint64_t))(v34 + 96))(v14, v33);
          v44 = v58;
          v43 = v59;
          v45 = v30;
          v46 = v57;
          v54.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v58 + 32))(v57, v32, v59);
          v48 = UploadedVideo.title.getter(v54);
        }
        v26 = v48;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v45);
        return v26;
      }
      (*(void (**)(char *, uint64_t))(v34 + 96))(v14, v33);
      v37 = v69;
      v36 = v70;
      v38 = v71;
      v42.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v70 + 32))(v69, v32, v71);
      v40 = MusicVideo.title.getter(v42);
    }
    v26 = v40;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_10:
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
    return v26;
  }
  return 0x497972617262696CLL;
}

uint64_t sub_1003F9038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;

  v57 = type metadata accessor for UploadedVideo(0);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v56 = (char *)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for UploadedAudio(0);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v59 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Song(0);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  __chkstk_darwin(v3);
  v61 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicVideo(0);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  __chkstk_darwin(v5);
  v64 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicMovie(0);
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  __chkstk_darwin(v7);
  v67 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  __chkstk_darwin(v9);
  v72 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist.Entry(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = _s7ElementV4ItemOMa(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v0;
  v23 = sub_1003F8468();
  v24 = 0;
  if ((v23 & 1) == 0)
  {
    v25 = v72;
    sub_1003F9B38(v22, (uint64_t)v21);
    if (swift_getEnumCaseMultiPayload(v21, v19) == 1)
    {
      v26 = v12;
      v27 = v11;
      v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v21, v11);
      v29 = v25;
      Playlist.Entry.internalItem.getter(v28);
      v31 = v70;
      v30 = v71;
      v32 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v29, v71);
      if (v32 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
      {
        (*(void (**)(char *, uint64_t))(v31 + 96))(v29, v30);
        v34 = v67;
        v33 = v68;
        v35 = v29;
        v36 = v69;
        v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v68 + 32))(v67, v35, v69);
        v38 = MusicMovie.artistName.getter(v37);
LABEL_10:
        v45 = v38;
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v36);
LABEL_11:
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        return v45;
      }
      if (v32 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v31 + 96))(v29, v30);
        v34 = v64;
        v33 = v65;
        v41 = v29;
        v36 = v66;
        v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v65 + 32))(v64, v41, v66);
        v38 = MusicVideo.artistName.getter(v42);
        goto LABEL_10;
      }
      if (v32 == enum case for Playlist.Entry.InternalItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v31 + 96))(v29, v30);
        v34 = v61;
        v33 = v62;
        v43 = v29;
        v36 = v63;
        v44 = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 32))(v61, v43, v63);
        v38 = Song.artistName.getter(v44);
        goto LABEL_10;
      }
      if (v32 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
LABEL_14:
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v11);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
        return 0;
      }
      if (v32 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v31 + 96))(v29, v30);
        v48 = v58;
        v47 = v59;
        v49 = v29;
        v50 = v60;
        v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v58 + 32))(v59, v49, v60);
        v52 = UploadedAudio.artistName.getter(v51);
      }
      else
      {
        if (v32 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
          goto LABEL_14;
        (*(void (**)(char *, uint64_t))(v31 + 96))(v29, v30);
        v48 = v55;
        v47 = v56;
        v53 = v29;
        v50 = v57;
        v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 32))(v56, v53, v57);
        v52 = UploadedVideo.artistName.getter(v54);
      }
      v45 = v52;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v50);
      goto LABEL_11;
    }
    v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v21, v15);
    v40 = Track.artistName.getter(v39);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return v40;
  }
  return v24;
}

uint64_t sub_1003F9544(uint64_t a1)
{
  unint64_t v2;
  char v3;
  _QWORD v5[2];
  _BYTE v6[40];
  __int128 v7;
  __int128 v8;

  v5[0] = 25705;
  v5[1] = 0xE200000000000000;
  AnyHashable.init<A>(_:)(v5, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_10079C294((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  sub_10004FF2C((uint64_t)v6);
  if (*((_QWORD *)&v8 + 1))
  {
    if ((swift_dynamicCast(v5, &v7, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v5[0];
  }
  else
  {
    sub_10004FF60((uint64_t)&v7, &qword_10119DCC0);
  }
  return 0;
}

uint64_t sub_1003F9618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 128))();
}

uint64_t sub_1003F9620(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = type metadata accessor for Playlist.Entry(0);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Track(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s7ElementV4ItemOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - v14;
  v16 = sub_100007E8C(&qword_1011B2140);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v18[*(int *)(v19 + 48)];
  sub_1003F9B38(a1, (uint64_t)v18);
  sub_1003F9B38(v29, v20);
  if (swift_getEnumCaseMultiPayload(v18, v10) == 1)
  {
    sub_1003F9B38((uint64_t)v18, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload(v20, v10) == 1)
    {
      v21 = v27;
      v6 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v5, v20, v28);
      v22 = static Playlist.Entry.== infix(_:_:)(v12, v5);
      v23 = *(void (**)(char *, uint64_t))(v21 + 8);
      v23(v5, v6);
      v24 = v12;
LABEL_9:
      v23(v24, v6);
      sub_1003F9AC0((uint64_t)v18);
      return v22 & 1;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  }
  else
  {
    sub_1003F9B38((uint64_t)v18, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload(v20, v10) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v20, v6);
      v22 = static Track.== infix(_:_:)(v15, v9);
      v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v9, v6);
      v24 = v15;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  sub_10004FF60((uint64_t)v18, &qword_1011B2140);
  v22 = 0;
  return v22 & 1;
}

uint64_t sub_1003F989C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  __int128 v21;
  _QWORD *v22;

  v4 = sub_100041ADC((uint64_t)_swiftEmptyArrayStorage);
  v22 = &type metadata for String;
  *(_QWORD *)&v21 = sub_1003F85E8();
  *((_QWORD *)&v21 + 1) = v5;
  sub_100048ABC(&v21, v20);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  sub_1005EE168(v20, 25705, 0xE200000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v22 = &type metadata for Int;
  *(_QWORD *)&v21 = a2;
  sub_100048ABC(&v21, v20);
  v7 = swift_isUniquelyReferenced_nonNull_native(v4);
  sub_1005EE168(v20, 0x6973736572706D69, 0xEF7865646E496E6FLL, v7);
  swift_bridgeObjectRelease();
  v8 = sub_1003F878C();
  v22 = &type metadata for String;
  *(_QWORD *)&v21 = v8;
  *((_QWORD *)&v21 + 1) = v9;
  sub_100048ABC(&v21, v20);
  v10 = swift_isUniquelyReferenced_nonNull_native(v4);
  sub_1005EE168(v20, 1684957547, 0xE400000000000000, v10);
  swift_bridgeObjectRelease();
  v11 = sub_1003F8A8C();
  if (v12)
  {
    v22 = &type metadata for String;
    *(_QWORD *)&v21 = v11;
    *((_QWORD *)&v21 + 1) = v12;
    sub_100048ABC(&v21, v20);
    v13 = swift_isUniquelyReferenced_nonNull_native(v4);
    sub_1005EE168(v20, 1701667182, 0xE400000000000000, v13);
    swift_bridgeObjectRelease();
  }
  v14 = sub_1003F9038();
  if (v15)
  {
    v22 = &type metadata for String;
    *(_QWORD *)&v21 = v14;
    *((_QWORD *)&v21 + 1) = v15;
    sub_100048ABC(&v21, v20);
    v16 = swift_isUniquelyReferenced_nonNull_native(v4);
    sub_1005EE168(v20, 0x614E747369747261, 0xEA0000000000656DLL, v16);
    swift_bridgeObjectRelease();
  }
  sub_100327F68(v4);
  v18 = v17;
  swift_bridgeObjectRelease();
  sub_1003F9AC0(a1);
  return v18;
}

uint64_t sub_1003F9AC0(uint64_t a1)
{
  uint64_t v2;

  v2 = _s7ElementV4ItemOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s7ElementV4ItemOMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B2108;
  if (!qword_1011B2108)
    return swift_getSingletonMetadata(a1, &_s7ElementV4ItemOMn);
  return result;
}

uint64_t sub_1003F9B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s7ElementV4ItemOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1003F9B7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1003F9C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
    v3 = type metadata accessor for Playlist.Entry(0);
  else
    v3 = type metadata accessor for Track(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t sub_1003F9C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist.Entry(0);
    v7 = 1;
  }
  else
  {
    v6 = type metadata accessor for Track(0);
    v7 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_1003F9D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1003F9AC0(a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist.Entry(0);
      v7 = 1;
    }
    else
    {
      v6 = type metadata accessor for Track(0);
      v7 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_1003F9DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist.Entry(0);
    v7 = 1;
  }
  else
  {
    v6 = type metadata accessor for Track(0);
    v7 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_1003F9E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1003F9AC0(a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist.Entry(0);
      v7 = 1;
    }
    else
    {
      v6 = type metadata accessor for Track(0);
      v7 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_1003F9EE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Track(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist.Entry(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1003F9F68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t updated;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  uint64_t v21;
  _QWORD *v22;

  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v12);
  v22 = _swiftEmptyArrayStorage;
  v13 = sub_100048748((unint64_t *)&qword_1011A6388, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100007E8C(&qword_1011A6390);
  v15 = sub_100049F28((unint64_t *)&qword_1011A6398, &qword_1011A6390, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v14, v15, v6, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(_QWORD *)a1 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002DLL, 0x8000000100E38C10, v11, v8, v5, 0);
  *(_BYTE *)(a1 + 8) = 0;
  updated = _s13UpdateContextVMa(0);
  v17 = a1 + *(int *)(updated + 24);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A99A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = *(int *)(updated + 28);
  result = sub_1000468F4((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(a1 + v19) = result;
  return result;
}

id sub_1003FA190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int EnumCaseMultiPayload;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  id v27;
  id v28;
  Class isa;
  id v30;
  id v31;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v34 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A9980);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A9968);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  v14 = _s23QueueSnapshotIdentifierOMa(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003FEC88(v1, (uint64_t)v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v14);
  v18 = 0;
  if ((EnumCaseMultiPayload - 2) >= 3)
  {
    v19 = (uint64_t)v13;
    v20 = v34;
    if (EnumCaseMultiPayload)
    {
      v23 = *(void **)&v16[*(int *)(sub_100007E8C((uint64_t *)&unk_1011A9970) + 48)];
      v24 = v2;
      v25 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
      v26 = v4;
      v25(v4, v16, v20);
      v27 = objc_msgSend(v23, "tracklist");
      v28 = objc_msgSend(v27, "displayItems");

      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v30 = objc_msgSend(v28, "itemAtIndexPath:", isa);

      v31 = objc_msgSend(v30, "metadataObject");
      if (v31)
      {
        v18 = objc_msgSend(v31, "innermostModelObject");

        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v20);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v20);

        return 0;
      }
    }
    else
    {
      v21 = v19;
      sub_100065228((uint64_t)v16, v19, &qword_1011A9968);
      sub_1003FF12C(v21, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
      {
        v22 = *v10;
      }
      else
      {
        sub_100065228((uint64_t)v10, (uint64_t)v7, &qword_1011A9980);
        v22 = SnapshotIdentifier.Lazy.object.getter(v5);
        sub_10004FF60((uint64_t)v7, &qword_1011A9980);
      }
      v18 = objc_msgSend(v22, "innermostModelObject");

      sub_10004FF60(v21, &qword_1011A9968);
    }
  }
  return v18;
}

id sub_1003FA4C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = _s23QueueSnapshotIdentifierOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003FEC88(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload(v4, v2) == 1)
  {
    v9 = *(void **)&v4[*(int *)(sub_100007E8C((uint64_t *)&unk_1011A9970) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = objc_msgSend(v9, "tracklist");
    v11 = objc_msgSend(v10, "displayItems");

    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v11, "itemAtIndexPath:", isa);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_1003FD878((uint64_t)v4);
    return 0;
  }
  return v13;
}

id sub_1003FA648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  id v14;
  uint64_t v16;

  v1 = v0;
  v2 = _s23QueueSnapshotIdentifierOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003FEC88(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload(v4, v2) == 1)
  {
    v9 = *(void **)&v4[*(int *)(sub_100007E8C((uint64_t *)&unk_1011A9970) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = objc_msgSend(v9, "tracklist");
    v11 = objc_msgSend(v10, "displayItems");

    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v11, "itemAtIndexPath:", isa);

    v14 = objc_msgSend(v9, "attributionMetadataFor:", v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_1003FD878((uint64_t)v4);
    return 0;
  }
  return v14;
}

uint64_t sub_1003FA7EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int EnumCaseMultiPayload;
  _BOOL8 v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  Class isa;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40[2];
  _OWORD v41[7];
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  __int128 v44;
  __int128 v45;

  v0 = sub_100007E8C(&qword_1011A9980);
  __chkstk_darwin(v0);
  v2 = (char *)v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011A9968);
  __chkstk_darwin(v3);
  v5 = (id *)((char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)v40 - v7;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s23QueueSnapshotIdentifierOMa(0);
  __chkstk_darwin(v13);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003FEC88(v40[1], (uint64_t)v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  if ((EnumCaseMultiPayload - 2) < 3)
    return 0;
  if (EnumCaseMultiPayload)
  {
    v20 = *(void **)&v15[*(int *)(sub_100007E8C((uint64_t *)&unk_1011A9970) + 48)];
    v21 = v10;
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v23 = v12;
    v22(v12, v15, v9);
    v24 = objc_msgSend(v20, "tracklist");
    v25 = objc_msgSend(v24, "changeItemCommand");

    if (v25)
    {
      v26 = objc_msgSend(v20, "tracklist");
      v27 = objc_msgSend(v26, "displayItems");

      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v29 = objc_msgSend(v27, "itemAtIndexPath:", isa);

      v30 = objc_msgSend(v25, "changeToItem:", v29);
      swift_unknownObjectRelease(v25);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v9);
      if (v30)
      {

        return 1;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v9);

    }
    return 0;
  }
  v18 = (uint64_t)v8;
  sub_100065228((uint64_t)v15, (uint64_t)v8, &qword_1011A9968);
  sub_1003FF12C((uint64_t)v8, (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload(v5, v3) == 1)
  {
    v19 = *v5;
  }
  else
  {
    sub_100065228((uint64_t)v5, (uint64_t)v2, &qword_1011A9980);
    v19 = SnapshotIdentifier.Lazy.object.getter(v0);
    sub_10004FF60((uint64_t)v2, &qword_1011A9980);
  }
  v31 = objc_msgSend(v19, "innermostModelObject");

  static ApplicationCapabilities.shared.getter((uint64_t)v41);
  v32 = swift_allocObject(&unk_1010C3F68, 144, 7);
  v33 = v41[5];
  *(_OWORD *)(v32 + 88) = v41[4];
  *(_OWORD *)(v32 + 104) = v33;
  *(_OWORD *)(v32 + 120) = v41[6];
  v34 = v41[1];
  *(_OWORD *)(v32 + 24) = v41[0];
  *(_OWORD *)(v32 + 40) = v34;
  v35 = v41[3];
  *(_OWORD *)(v32 + 56) = v41[2];
  *(_QWORD *)(v32 + 16) = v31;
  *(_QWORD *)(v32 + 136) = v42;
  *(_OWORD *)(v32 + 72) = v35;
  v36 = ActionCondition.init(_:_:redactLog:file:line:)((uint64_t)sub_1003FF1D0, v32, 0xD000000000000040, 0x8000000100E38C80, 0, (uint64_t (*)())0xD000000000000055, (uint64_t (*)())0x8000000100E38CD0, (uint64_t (*)())0x75, (uint64_t (**)())&v43);
  v37 = v43(v36);
  v17 = v38 == 1;
  sub_10013B670(v37, v38);
  swift_release();
  v45 = v44;
  sub_1001C7464((uint64_t)&v45);
  sub_10004FF60(v18, &qword_1011A9968);
  return v17;
}

char *sub_1003FACC8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  double left;
  double bottom;
  double right;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  Class isa;
  char *v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  double v45;
  char v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t ObjectType;
  uint64_t v59;
  uint64_t v60;
  objc_super v61;

  ObjectType = swift_getObjectType();
  v9 = &v4[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController17PlayingHeaderView_didUpdateAttributes];
  v10 = (objc_class *)_s25NowPlayingQueueFooterViewCMa();
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v11 = objc_allocWithZone(v10);
  v12 = v4;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = UIView.forAutolayout.getter();

  *(_QWORD *)&v12[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController17PlayingHeaderView_footer] = v14;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v18 = v14;
  objc_msgSend(v18, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

  v61.receiver = v12;
  v61.super_class = (Class)_s17PlayingHeaderViewCMa();
  v19 = (char *)objc_msgSendSuper2(&v61, "initWithFrame:", a1, a2, a3, a4);
  v20 = OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController17PlayingHeaderView_footer;
  v21 = *(_QWORD *)&v19[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController17PlayingHeaderView_footer];
  v22 = v19;
  objc_msgSend(v22, "addSubview:", v21);
  v23 = (void *)objc_opt_self(NSLayoutConstraint);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v25 = swift_allocObject(v24, 56, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100EA7AD0;
  v26 = objc_msgSend(*(id *)&v19[v20], "bottomAnchor");
  v27 = objc_msgSend(v22, "layoutMarginsGuide");
  v28 = objc_msgSend(v27, "bottomAnchor");

  v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v25 + 32) = v29;
  v30 = objc_msgSend(*(id *)&v19[v20], "leadingAnchor");
  v31 = objc_msgSend(v22, "layoutMarginsGuide");
  v32 = objc_msgSend(v31, "leadingAnchor");

  v33 = objc_msgSend(v30, "constraintEqualToAnchor:", v32);
  *(_QWORD *)(v25 + 40) = v33;
  v34 = objc_msgSend(*(id *)&v19[v20], "trailingAnchor");
  v35 = objc_msgSend(v22, "layoutMarginsGuide");
  v36 = objc_msgSend(v35, "trailingAnchor");

  v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
  *(_QWORD *)(v25 + 48) = v37;
  v60 = v25;
  specialized Array._endMutation()(v38);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v40 = (char *)*(id *)&v19[v20];
  v41 = objc_msgSend(v22, "traitCollection");
  v42 = sub_10013B23C();
  if ((UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v42) & 1) != 0)
  {
    v43 = sub_10013B424();
    v44 = sub_10013B468();
    UITraitCollection.subscript.getter(&v60, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v43, v44);
    LOBYTE(v43) = sub_1005D2C1C(v60);

    if ((v43 & 1) == 0)
    {
      v46 = 1;
      goto LABEL_12;
    }
  }
  else
  {

  }
  v47 = objc_msgSend(v22, "traitCollection", ObjectType);
  v48 = sub_10013B424();
  v49 = sub_10013B468();
  UITraitCollection.subscript.getter(&v60, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v48, v49);

  v50 = 0xE700000000000000;
  if ((_BYTE)v60)
  {
    if (v60 == 1)
    {
      v51 = 0x72616C75676572;
    }
    else
    {
      v51 = 0x4572616C75676572;
      v50 = 0xEF6465646E657478;
    }
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v50, 0x746361706D6F63, 0xE700000000000000, 0);
  }
  else
  {
    v46 = 1;
  }
  *(_QWORD *)&v45 = swift_bridgeObjectRelease(v50).n128_u64[0];
LABEL_12:
  objc_msgSend(*(id *)&v40[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator], "setHidden:", v46 & 1, v45, ObjectType);

  v52 = sub_100007E8C(&qword_1011A1750);
  v53 = swift_allocObject(v52, 64, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v53 + 32) = &type metadata for HasAnimatedBackgroundTrait;
  *(_QWORD *)(v53 + 40) = v42;
  v54 = sub_10013B424();
  *(_QWORD *)(v53 + 48) = &type metadata for NowPlayingLayoutTypeTrait;
  *(_QWORD *)(v53 + 56) = v54;
  v55 = v22;
  v56 = UIView.registerForTraitChanges<A>(_:handler:)(v53, sub_1003FE6F0, 0, v59);
  swift_unknownObjectRelease(v56);
  swift_bridgeObjectRelease(v53);

  return v55;
}

id sub_1003FB2A4(uint64_t a1)
{
  return sub_10004D23C(a1, _s17PlayingHeaderViewCMa);
}

uint64_t _s17PlayingHeaderViewCMa()
{
  return objc_opt_self(_TtCC5Music29NowPlayingQueueViewController17PlayingHeaderView);
}

id sub_1003FB30C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  objc_class *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD aBlock[6];
  objc_super v34;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock];
  if (v10)
  {
    v11 = *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock
                       + 8];
    v30 = v7;
    v31 = v6;
    sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    v32 = v0;
    swift_retain();
    v29 = static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
    v20 = swift_allocObject(&unk_1010C3F18, 32, 7);
    *(_QWORD *)(v20 + 16) = v10;
    *(_QWORD *)(v20 + 24) = v11;
    aBlock[4] = sub_10004D5F4;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010C3F30;
    v21 = _Block_copy(aBlock);
    swift_retain();
    v22 = swift_release();
    static DispatchQoS.unspecified.getter(v22);
    aBlock[0] = _swiftEmptyArrayStorage;
    v23 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v24 = sub_100007E8C((uint64_t *)&unk_1011A2120);
    v25 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v1, v23);
    v26 = (void *)v29;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v21);
    v0 = v32;
    _Block_release(v21);

    sub_10004BA30(v10, v11);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  }
  v27 = (objc_class *)_s14CollectionViewCMa();
  v34.receiver = v0;
  v34.super_class = v27;
  return objc_msgSendSuper2(&v34, "dealloc");
}

double sub_1003FB5D8(char a1)
{
  char *v1;
  char *v2;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(__n128);
  __n128 v15;
  _QWORD v16[3];

  v2 = v1;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = sub_10013B424();
  v6 = sub_10013B468();
  UITraitCollection.subscript.getter(v16, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v5, v6);

  if (!LOBYTE(v16[0]))
  {
    v7 = 0x746361706D6F63;
LABEL_5:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, 0xE700000000000000, 0x4572616C75676572, 0xEF6465646E657478, 0);
    *(_QWORD *)&result = swift_bridgeObjectRelease(0xE700000000000000).n128_u64[0];
    if ((v8 & 1) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
  if (LOBYTE(v16[0]) == 1)
  {
    v7 = 0x72616C75676572;
    goto LABEL_5;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(0xEF6465646E657478).n128_u64[0];
LABEL_8:
  objc_msgSend(v2, "setClipsToBounds:", (v2[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement] & 1) == 0, result);
LABEL_9:
  if ((v2[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement] & 1) == 0
    && (a1 & 1) != 0)
  {
    v10 = &v2[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementCompletionHandlers];
    swift_beginAccess(&v2[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementCompletionHandlers], v16, 1, 0);
    v11 = *(_QWORD *)v10;
    *(_QWORD *)v10 = _swiftEmptyArrayStorage;
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = v11 + 40;
      do
      {
        v14 = *(void (**)(__n128))(v13 - 8);
        v15 = swift_retain();
        v14(v15);
        swift_release();
        v13 += 16;
        --v12;
      }
      while (v12);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  return result;
}

id sub_1003FB780()
{
  char *v0;
  char *v1;
  Class isa;
  id v3;
  char v4;
  char *v5;
  void (*v6)(__n128);
  uint64_t v7;
  __n128 v8;
  objc_super v10;

  v1 = v0;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10.receiver = v1;
  v10.super_class = (Class)_s14CollectionViewCMa();
  v3 = objc_msgSendSuper2(&v10, "beginInteractiveMovementForItemAtIndexPath:", isa);

  v4 = v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement];
  v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement] = 1;
  sub_1003FB5D8(v4);
  v5 = &v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidBeginBlock];
  v6 = *(void (**)(__n128))&v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidBeginBlock];
  if (v6)
  {
    v7 = *((_QWORD *)v5 + 1);
    v8 = swift_retain();
    v6(v8);
    sub_10004BA30((uint64_t)v6, v7);
  }
  return v3;
}

uint64_t sub_1003FB8D0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];
  objc_super v29;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)_s14CollectionViewCMa();
  v29.receiver = v0;
  v29.super_class = v8;
  objc_msgSendSuper2(&v29, "endInteractiveMovement");
  v9 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v9, v10, v11, v12, v13, v14, v15, v16);
  v18 = swift_allocObject(&unk_1010C3EC8, 24, 7);
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = sub_1003FF0E8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010C3EE0;
  v19 = _Block_copy(aBlock);
  v20 = v0;
  v21 = swift_release();
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v24 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v1, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1003FBAFC(uint64_t a1)
{
  char v2;
  void (*v3)(__n128);
  uint64_t v4;
  __n128 v5;

  v2 = *(_BYTE *)(a1 + OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement);
  *(_BYTE *)(a1 + OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement) = 0;
  sub_1003FB5D8(v2);
  v3 = *(void (**)(__n128))(a1
                                     + OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock);
  if (v3)
  {
    v4 = *(_QWORD *)(a1
                   + OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock
                   + 8);
    v5 = swift_retain();
    v3(v5);
    sub_10004BA30((uint64_t)v3, v4);
  }
}

id sub_1003FBB98()
{
  _BYTE *v0;
  char v1;
  id result;
  void (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  objc_super v6;

  v1 = v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement];
  v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement] = 0;
  sub_1003FB5D8(v1);
  v6.receiver = v0;
  v6.super_class = (Class)_s14CollectionViewCMa();
  result = objc_msgSendSuper2(&v6, "cancelInteractiveMovement");
  v3 = *(void (**)(__n128))&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock];
  if (v3)
  {
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock
                      + 8];
    v5 = swift_retain();
    v3(v5);
    return (id)sub_10004BA30((uint64_t)v3, v4);
  }
  return result;
}

id sub_1003FBD08(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidBeginBlock];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_maxReorderingContentOffset] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_interactiveMovementCompletionHandlers] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)_s14CollectionViewCMa();
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

uint64_t _s14CollectionViewCMa()
{
  return objc_opt_self(_TtCC5Music29NowPlayingQueueViewController14CollectionView);
}

uint64_t _s10DataSourceCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B21E0, (uint64_t)&_s10DataSourceCMn);
}

uint64_t sub_1003FBDF8(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100EB9930;
  v2[1] = &unk_100EB9930;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_10124CF40);
}

void sub_1003FBE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v1);
  v2 = sub_100007E8C(&qword_1011A9968);
  __chkstk_darwin(v2);
  v3 = _s23QueueSnapshotIdentifierOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003FEC88(v0, (uint64_t)v5);
  v6 = (char *)&loc_1003FBF30 + *((int *)qword_1003FC0D8 + swift_getEnumCaseMultiPayload(v5, v3));
  __asm { BR              X10 }
}

uint64_t sub_1003FBF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100065228(v3, v1, &qword_1011A9968);
  SnapshotIdentifier.hash(into:)(v0, v2, v4, v5);
  Hasher._combine(_:)(1uLL);
  return sub_10004FF60(v1, &qword_1011A9968);
}

Swift::Int sub_1003FC0EC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1003FBE40();
  return Hasher._finalize()();
}

Swift::Int sub_1003FC12C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1003FBE40();
  return Hasher._finalize()();
}

uint64_t sub_1003FC168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, __n128);
  uint64_t v5;
  __n128 v6;
  char v7;

  v3 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v2 + qword_1011B21D0);
  if (!v3)
    return 0;
  v5 = *(_QWORD *)(v2 + qword_1011B21D0 + 8);
  v6 = swift_retain();
  v7 = v3(v2, a2, v6);
  sub_10004BA30((uint64_t)v3, v5);
  return v7 & 1;
}

uint64_t sub_1003FC1D8(char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(char *, char *);
  uint64_t v12;
  id v13;
  char *v14;
  char v15;
  uint64_t v17;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = *(uint64_t (**)(char *, char *))&a1[qword_1011B21D0];
  if (v11)
  {
    v12 = *(_QWORD *)&a1[qword_1011B21D0 + 8];
    v13 = a3;
    v14 = a1;
    sub_100048AAC((uint64_t)v11, v12);
    v15 = v11(v14, v10);
    sub_10004BA30((uint64_t)v11, v12);

  }
  else
  {
    v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v15 & 1;
}

void sub_1003FC2D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, BOOL);
  uint64_t v10;
  char v11;
  id v12;

  v7 = _s14CollectionViewCMa();
  v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t, BOOL))(v3 + qword_1011B21D8);
    if (v9)
    {
      v10 = *(_QWORD *)(v3 + qword_1011B21D8 + 8);
      v11 = *(_BYTE *)(v8 + OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement);
      v12 = a1;
      sub_100048AAC((uint64_t)v9, v10);
      v9(v3, a2, a3, (v11 & 1) == 0);
      sub_10004BA30((uint64_t)v9, v10);

    }
  }
}

uint64_t sub_1003FC3B0(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, char *, BOOL);
  uint64_t v19;
  char v20;
  id v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v16 = _s14CollectionViewCMa();
  v17 = swift_dynamicCastClass(a3, v16);
  if (v17)
  {
    v18 = *(void (**)(char *, char *, char *, BOOL))&a1[qword_1011B21D8];
    if (v18)
    {
      v19 = *(_QWORD *)&a1[qword_1011B21D8 + 8];
      v20 = *(_BYTE *)(v17
                     + OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController14CollectionView_hasInteractiveMovement);
      v21 = a3;
      v22 = a1;
      sub_100048AAC((uint64_t)v18, v19);
      v18(v22, v15, v12, (v20 & 1) == 0);
      sub_10004BA30((uint64_t)v18, v19);

    }
  }
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v12, v9);
  return ((uint64_t (*)(char *, uint64_t))v23)(v15, v9);
}

uint64_t sub_1003FC50C()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + qword_1011B21D0), *(_QWORD *)(v0 + qword_1011B21D0 + 8));
  return sub_10004BA30(*(_QWORD *)(v0 + qword_1011B21D8), *(_QWORD *)(v0 + qword_1011B21D8 + 8));
}

id sub_1003FC540()
{
  return sub_10004D23C(0, (uint64_t (*)(void))_s10DataSourceCMa);
}

uint64_t sub_1003FC550(uint64_t a1)
{
  sub_10004BA30(*(_QWORD *)(a1 + qword_1011B21D0), *(_QWORD *)(a1 + qword_1011B21D0 + 8));
  return sub_10004BA30(*(_QWORD *)(a1 + qword_1011B21D8), *(_QWORD *)(a1 + qword_1011B21D8 + 8));
}

uint64_t sub_1003FC590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  char *v7;
  char *v8;

  v6 = (char *)objc_allocWithZone((Class)_s10DataSourceCMa(0));
  v7 = &v6[qword_1011B21D0];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v6[qword_1011B21D8];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(a1, a2, a3);
}

uint64_t sub_1003FC600()
{
  return _s10DataSourceCMa(0);
}

char *sub_1003FC608(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  double v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  Class isa;
  objc_super v48;
  __n128 v49[4];

  v5 = v4;
  v10 = OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController22AutoPlayBackgroundView_backgroundView;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7DB0;
  v13 = (void *)objc_opt_self(UIColor);
  v14 = v5;
  v15 = objc_msgSend(v13, "blackColor");
  v16 = objc_msgSend(v15, "colorWithAlphaComponent:", 0.1);

  *(_QWORD *)(v12 + 32) = v16;
  v17 = objc_msgSend(v13, "blackColor");
  v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v12 + 40) = v18;
  v49[0].n128_u64[0] = v12;
  specialized Array._endMutation()(v19);
  static Gradient.vertical(colors:locations:interpolations:)(v12, 0, 0, v49);
  swift_bridgeObjectRelease(v12);
  v20 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
  *(_QWORD *)&v5[v10] = Gradient.View.init(configuration:)((uint64_t)v49);

  v48.receiver = v14;
  v48.super_class = (Class)_s22AutoPlayBackgroundViewCMa();
  v21 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  v22 = OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController22AutoPlayBackgroundView_backgroundView;
  v23 = *(void **)&v21[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController22AutoPlayBackgroundView_backgroundView];
  v24 = v21;
  v25 = v23;
  v26 = UIView.forAutolayout.getter();

  objc_msgSend(v24, "addSubview:", v26);
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EAE9C0;
  v29 = objc_msgSend(*(id *)&v21[v22], "leadingAnchor");
  v30 = objc_msgSend(v24, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v28 + 32) = v31;
  v32 = objc_msgSend(*(id *)&v21[v22], "trailingAnchor");
  v33 = objc_msgSend(v24, "trailingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v28 + 40) = v34;
  v35 = objc_msgSend(*(id *)&v21[v22], "topAnchor");
  v36 = objc_msgSend(v24, "topAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v28 + 48) = v37;
  v38 = objc_msgSend(*(id *)&v21[v22], "heightAnchor");
  v39 = objc_msgSend(v38, "constraintEqualToConstant:", 150.0);

  LODWORD(v40) = 1144750080;
  v41 = objc_msgSend(v39, "withPriority:", v40);

  *(_QWORD *)(v28 + 56) = v41;
  v42 = objc_msgSend(*(id *)&v21[v22], "bottomAnchor");
  v43 = objc_msgSend(v24, "bottomAnchor");
  v44 = objc_msgSend(v42, "constraintLessThanOrEqualToAnchor:", v43);

  *(_QWORD *)(v28 + 64) = v44;
  specialized Array._endMutation()(v45);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

  return v24;
}

id sub_1003FCAB4(uint64_t a1)
{
  return sub_10004D23C(a1, _s22AutoPlayBackgroundViewCMa);
}

uint64_t _s22AutoPlayBackgroundViewCMa()
{
  return objc_opt_self(_TtCC5Music29NowPlayingQueueViewController22AutoPlayBackgroundView);
}

unint64_t sub_1003FCAF0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1003FEFE4(*a1);
  *a2 = result;
  return result;
}

void sub_1003FCB18(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AB6A0;
}

char *sub_1003FCB28(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  char *v10;
  id v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  Class isa;
  id v35;
  id v36;
  unint64_t v37;
  double v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v47;
  uint64_t ObjectType;
  objc_super v49;

  ObjectType = swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___topPaddingConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___bottomPaddingConstraint] = 0;
  v9 = objc_allocWithZone((Class)UIView);
  v10 = v4;
  v11 = objc_msgSend(v9, "init");
  v12 = UIView.forAutolayout.getter();

  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_10119C338 != -1)
    swift_once(&qword_10119C338, sub_1005D30C0);
  objc_msgSend(v12, "setBackgroundColor:", qword_10124D418);
  *(_QWORD *)&v10[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator] = v12;
  v47 = v12;

  v49.receiver = v10;
  v49.super_class = (Class)_s25NowPlayingQueueFooterViewCMa();
  v13 = (char *)objc_msgSendSuper2(&v49, "initWithFrame:", a1, a2, a3, a4);
  v14 = OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator;
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator];
  v16 = v13;
  objc_msgSend(v16, "addSubview:", v15);
  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EAE9C0;
  *(_QWORD *)(v19 + 32) = sub_1003FD06C();
  *(_QWORD *)(v19 + 40) = sub_1003FD130();
  v20 = objc_msgSend(*(id *)&v13[v14], "leadingAnchor");
  v21 = objc_msgSend(v16, "layoutMarginsGuide");
  v22 = objc_msgSend(v21, "leadingAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
  *(_QWORD *)(v19 + 48) = v23;
  v24 = objc_msgSend(*(id *)&v13[v14], "trailingAnchor");
  v25 = objc_msgSend(v16, "layoutMarginsGuide");
  v26 = objc_msgSend(v25, "trailingAnchor");

  v27 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
  *(_QWORD *)(v19 + 56) = v27;
  v28 = objc_msgSend(*(id *)&v13[v14], "heightAnchor");
  v29 = objc_msgSend(v16, "traitCollection");
  objc_msgSend(v29, "displayScale");
  v31 = v30;

  v32 = objc_msgSend(v28, "constraintEqualToConstant:", 1.0 / v31);
  *(_QWORD *)(v19 + 64) = v32;
  specialized Array._endMutation()(v33);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v35 = objc_msgSend(*(id *)&v13[v14], "layer");
  v36 = objc_msgSend(v16, "traitCollection");
  v37 = sub_10013B23C();
  LOBYTE(v19) = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v37);

  v39 = 0;
  if ((v19 & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v41 = v40;
    v39 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v38 = swift_bridgeObjectRelease(v41).n128_u64[0];
  }
  objc_msgSend(v35, "setCompositingFilter:", v39, v38);

  swift_unknownObjectRelease(v39);
  v42 = sub_100007E8C(&qword_1011A1750);
  v43 = swift_allocObject(v42, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v43 + 32) = &type metadata for HasAnimatedBackgroundTrait;
  *(_QWORD *)(v43 + 40) = v37;
  v44 = v16;
  v45 = UIView.registerForTraitChanges<A>(_:handler:)(v43, sub_1003FE6F4, 0, ObjectType);

  swift_unknownObjectRelease(v45);
  swift_bridgeObjectRelease(v43);

  return v44;
}

id sub_1003FD06C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___topPaddingConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___topPaddingConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___topPaddingConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator], "topAnchor");
    v5 = objc_msgSend(v0, "topAnchor");
    v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1003FD130()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___bottomPaddingConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___bottomPaddingConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView____lazy_storage___bottomPaddingConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator], "bottomAnchor");
    v5 = objc_msgSend(v0, "bottomAnchor");
    v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

    LODWORD(v7) = 1144750080;
    v8 = objc_msgSend(v6, "withPriority:", v7);

    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1003FD220(uint64_t a1)
{
  return sub_10004D23C(a1, _s25NowPlayingQueueFooterViewCMa);
}

uint64_t _s25NowPlayingQueueFooterViewCMa()
{
  return objc_opt_self(_TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView);
}

char *sub_1003FD294(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v13[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9970) + 48);
      v16 = *(char **)((char *)a2 + v15);
      *(_QWORD *)&a1[v15] = v16;
      v17 = v16;
      v18 = a1;
      v19 = a3;
      v20 = 1;
LABEL_14:
      swift_storeEnumTagMultiPayload(v18, v19, v20);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = sub_100007E8C(&qword_1011A9968);
      if (swift_getEnumCaseMultiPayload(a2, v9) == 1)
      {
        v10 = *a2;
        *(_QWORD *)a1 = *a2;
        v11 = v10;
        v12 = 1;
      }
      else
      {
        v21 = sub_100007E8C(&qword_1011A9980);
        if (swift_getEnumCaseMultiPayload(a2, v21) == 1)
        {
          v22 = type metadata accessor for IndexPath(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
          v23 = *(int *)(sub_100007E8C(&qword_1011A9988) + 48);
          v24 = *(char **)((char *)a2 + v23);
          *(_QWORD *)&a1[v23] = v24;
          v25 = v24;
          v26 = a1;
          v27 = v21;
          v28 = 1;
        }
        else
        {
          v29 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v29;
          v30 = v29;
          v26 = a1;
          v27 = v21;
          v28 = 0;
        }
        swift_storeEnumTagMultiPayload(v26, v27, v28);
        v12 = 0;
      }
      swift_storeEnumTagMultiPayload(a1, v9, v12);
      v18 = a1;
      v19 = a3;
      v20 = 0;
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_1003FD454(id *a1, uint64_t a2)
{
  id *v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for IndexPath(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v2, v8);
    v7 = (uint64_t *)&unk_1011A9970;
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    v4 = sub_100007E8C(&qword_1011A9968);
    if (swift_getEnumCaseMultiPayload(v2, v4) == 1)
    {
LABEL_8:

      return;
    }
    v5 = sub_100007E8C(&qword_1011A9980);
    if (swift_getEnumCaseMultiPayload(v2, v5) != 1)
    {
      ++v2;
      goto LABEL_8;
    }
    v6 = type metadata accessor for IndexPath(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
    v7 = &qword_1011A9988;
LABEL_7:
    v2 = (id *)((char *)v2 + *(int *)(sub_100007E8C(v7) + 48));
    goto LABEL_8;
  }
}

void **sub_1003FD530(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = type metadata accessor for IndexPath(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v12 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9970) + 48);
    v13 = *(void **)((char *)a2 + v12);
    *(void **)((char *)a1 + v12) = v13;
    v14 = v13;
    v15 = a1;
    v16 = a3;
    v17 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v15, v16, v17);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_100007E8C(&qword_1011A9968);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = *a2;
      *a1 = *a2;
      v9 = v8;
      v10 = 1;
    }
    else
    {
      v18 = sub_100007E8C(&qword_1011A9980);
      if (swift_getEnumCaseMultiPayload(a2, v18) == 1)
      {
        v19 = type metadata accessor for IndexPath(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = *(int *)(sub_100007E8C(&qword_1011A9988) + 48);
        v21 = *(void **)((char *)a2 + v20);
        *(void **)((char *)a1 + v20) = v21;
        v22 = v21;
        v23 = a1;
        v24 = v18;
        v25 = 1;
      }
      else
      {
        v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        v27 = v26;
        v23 = a1;
        v24 = v18;
        v25 = 0;
      }
      swift_storeEnumTagMultiPayload(v23, v24, v25);
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v10);
    v15 = a1;
    v16 = a3;
    v17 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void **sub_1003FD6C8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  if (a1 != a2)
  {
    sub_1003FD878((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for IndexPath(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A9970) + 48);
      v13 = *(void **)((char *)a2 + v12);
      *(void **)((char *)a1 + v12) = v13;
      v14 = v13;
      v15 = a1;
      v16 = a3;
      v17 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_100007E8C(&qword_1011A9968);
      if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
      {
        v8 = *a2;
        *a1 = *a2;
        v9 = v8;
        v10 = 1;
      }
      else
      {
        v18 = sub_100007E8C(&qword_1011A9980);
        if (swift_getEnumCaseMultiPayload(a2, v18) == 1)
        {
          v19 = type metadata accessor for IndexPath(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
          v20 = *(int *)(sub_100007E8C(&qword_1011A9988) + 48);
          v21 = *(void **)((char *)a2 + v20);
          *(void **)((char *)a1 + v20) = v21;
          v22 = v21;
          v23 = a1;
          v24 = v18;
          v25 = 1;
        }
        else
        {
          *a1 = *a2;
          v26 = a2[1];
          a1[1] = v26;
          v27 = v26;
          v23 = a1;
          v24 = v18;
          v25 = 0;
        }
        swift_storeEnumTagMultiPayload(v23, v24, v25);
        v10 = 0;
      }
      swift_storeEnumTagMultiPayload(a1, v7, v10);
      v15 = a1;
      v16 = a3;
      v17 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1003FD878(uint64_t a1)
{
  uint64_t v2;

  v2 = _s23QueueSnapshotIdentifierOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s23QueueSnapshotIdentifierOMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B2310, (uint64_t)&_s23QueueSnapshotIdentifierOMn);
}

char *sub_1003FD8C8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A9970);
    *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
    v10 = a1;
    v11 = a3;
    v12 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v10, v11, v12);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_100007E8C(&qword_1011A9968);
    if (swift_getEnumCaseMultiPayload(a2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v13 = sub_100007E8C(&qword_1011A9980);
      if (swift_getEnumCaseMultiPayload(a2, v13) == 1)
      {
        v14 = type metadata accessor for IndexPath(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v15 = sub_100007E8C(&qword_1011A9988);
        *(_QWORD *)&a1[*(int *)(v15 + 48)] = *(_QWORD *)&a2[*(int *)(v15 + 48)];
        swift_storeEnumTagMultiPayload(a1, v13, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload(a1, v7, 0);
    }
    v10 = a1;
    v11 = a3;
    v12 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1003FDA54(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_1003FD878((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = sub_100007E8C((uint64_t *)&unk_1011A9970);
      *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
      v10 = a1;
      v11 = a3;
      v12 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_100007E8C(&qword_1011A9968);
      if (swift_getEnumCaseMultiPayload(a2, v7))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v13 = sub_100007E8C(&qword_1011A9980);
        if (swift_getEnumCaseMultiPayload(a2, v13) == 1)
        {
          v14 = type metadata accessor for IndexPath(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
          v15 = sub_100007E8C(&qword_1011A9988);
          *(_QWORD *)&a1[*(int *)(v15 + 48)] = *(_QWORD *)&a2[*(int *)(v15 + 48)];
          swift_storeEnumTagMultiPayload(a1, v13, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload(a1, v7, 0);
      }
      v10 = a1;
      v11 = a3;
      v12 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1003FDBF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[4];

  sub_1003FDC98(319);
  if (v3 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for IndexPath(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, *(_QWORD *)(v4 - 8) + 64, (char *)&value witness table for Builtin.UnknownObject + 64);
      v7[1] = v6;
      v7[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v7[3] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 4, v7);
    }
  }
}

void sub_1003FDC98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1011B2320)
  {
    v2 = sub_10004A07C(255, (unint64_t *)&unk_10119E4E0, MPModelPlaylistEntry_ptr);
    v5 = type metadata accessor for SnapshotIdentifier(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1011B2320);
  }
}

uint64_t getEnumTagSinglePayload for TabIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11SectionTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1003FDDD8 + 4 * byte_100EB98E5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1003FDE0C + 4 * byte_100EB98E0[v4]))();
}

uint64_t sub_1003FDE0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FDE14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003FDE1CLL);
  return result;
}

uint64_t sub_1003FDE28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003FDE30);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1003FDE34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FDE3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11SectionTypeOMa()
{
  return &_s11SectionTypeON;
}

char *sub_1003FDE58(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    a1[8] = *((_BYTE *)a2 + 8);
    v8 = *(int *)(a3 + 24);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = v5;
    v12 = sub_100007E8C((uint64_t *)&unk_1011A99A0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = sub_100007E8C(&qword_1011A9A40);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    *(_QWORD *)&a1[*(int *)(a3 + 28)] = *(char **)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_1003FDF68(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A99A0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(id *)((char *)a1 + *(int *)(a2 + 28))).n128_u64[0];
  return result;
}

uint64_t sub_1003FDFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = v6;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A99A0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
  {
    v13 = sub_100007E8C(&qword_1011A9A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v8, v9, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003FE0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A99A0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100007E8C(&qword_1011A9A40);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = *(_QWORD *)(a2 + v18);
  v20 = *(_QWORD *)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_1003FE224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A99A0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011A9A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1003FE308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A99A0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C(&qword_1011A9A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 28);
  v17 = *(_QWORD *)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_1003FE448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003FE454);
}

uint64_t sub_1003FE454(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A9A40);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1003FE4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003FE4E0);
}

char *sub_1003FE4E0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A9A40);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t _s13UpdateContextVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B23A8, (uint64_t)&_s13UpdateContextVMn);
}

void sub_1003FE56C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_100EB99D8;
  sub_1003FE5F8(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1003FE5F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B23B8)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011A99A0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011B23B8);
  }
}

uint64_t sub_1003FE650()
{
  return sub_100049F28(&qword_1011B23F0, &qword_1011B23F8, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1003FE680()
{
  unint64_t result;

  result = qword_1011B2400;
  if (!qword_1011B2400)
  {
    result = swift_getWitnessTable(&unk_100EB9AA0, &_s11SectionTypeON);
    atomic_store(result, (unint64_t *)&qword_1011B2400);
  }
  return result;
}

uint64_t sub_1003FE6C4()
{
  return sub_100048748(&qword_1011B2408, _s23QueueSnapshotIdentifierOMa, (uint64_t)&unk_100EB9AC8);
}

void sub_1003FE6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[6];

  v4 = type metadata accessor for IndexPath(0);
  v21[4] = *(_QWORD *)(v4 - 8);
  v21[5] = v4;
  __chkstk_darwin(v4);
  v21[3] = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v21[2] = (char *)v21 - v7;
  v8 = sub_100007E8C(&qword_1011A9968);
  __chkstk_darwin(v8);
  v21[1] = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v11 = _s23QueueSnapshotIdentifierOMa(0);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v15 = sub_100007E8C(&qword_1011B2410);
  __chkstk_darwin(v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v17[*(int *)(v18 + 48)];
  sub_1003FEC88(a1, (uint64_t)v17);
  sub_1003FEC88(a2, v19);
  v20 = (char *)&loc_1003FE8D0 + dword_1003FEC74[swift_getEnumCaseMultiPayload(v17, v11)];
  __asm { BR              X10 }
}

uint64_t sub_1003FE8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1003FEC88(v0, v1);
  if (swift_getEnumCaseMultiPayload(v4, v3))
  {
    sub_10004FF60(v1, &qword_1011A9968);
    sub_10004FF60(v0, &qword_1011B2410);
    v6 = 0;
  }
  else
  {
    sub_100065228(v1, v2, &qword_1011A9968);
    v7 = *(_QWORD *)(v5 - 120);
    sub_100065228(v4, v7, &qword_1011A9968);
    v8 = sub_10004A07C(0, (unint64_t *)&unk_10119E4E0, MPModelPlaylistEntry_ptr);
    v6 = static SnapshotIdentifier.== infix(_:_:)(v2, v7, v8);
    sub_10004FF60(v7, &qword_1011A9968);
    sub_10004FF60(v2, &qword_1011A9968);
    sub_1003FD878(v0);
  }
  return v6 & 1;
}

uint64_t sub_1003FEC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s23QueueSnapshotIdentifierOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1003FECCC(char *a1)
{
  char *v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double v7;
  char v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (char *)*(id *)&a1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController17PlayingHeaderView_footer];
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = sub_10013B23C();
  if ((UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4) & 1) != 0)
  {
    v5 = sub_10013B424();
    v6 = sub_10013B468();
    UITraitCollection.subscript.getter(&v14, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v5, v6);
    LOBYTE(v5) = sub_1005D2C1C(v14);

    if ((v5 & 1) == 0)
    {
      v8 = 1;
      goto LABEL_12;
    }
  }
  else
  {

  }
  v9 = objc_msgSend(a1, "traitCollection");
  v10 = sub_10013B424();
  v11 = sub_10013B468();
  UITraitCollection.subscript.getter((uint64_t *)((char *)&v14 + 1), &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v10, v11);

  v12 = 0xE700000000000000;
  if (BYTE1(v14))
  {
    if (BYTE1(v14) == 1)
    {
      v13 = 0x72616C75676572;
    }
    else
    {
      v12 = 0xEF6465646E657478;
      v13 = 0x4572616C75676572;
    }
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v12, 0x746361706D6F63, 0xE700000000000000, 0);
  }
  else
  {
    v8 = 1;
  }
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v12).n128_u64[0];
LABEL_12:
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator], "setHidden:", v8 & 1, v7);

}

void sub_1003FEE74()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  __n128 v12[4];

  v1 = v0;
  v2 = OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController22AutoPlayBackgroundView_backgroundView;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7DB0;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "blackColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.1);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v5, "blackColor");
  v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v4 + 40) = v9;
  v12[0].n128_u64[0] = v4;
  specialized Array._endMutation()(v10);
  static Gradient.vertical(colors:locations:interpolations:)(v4, 0, 0, v12);
  swift_bridgeObjectRelease(v4);
  v11 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
  *(_QWORD *)&v1[v2] = Gradient.View.init(configuration:)((uint64_t)v12);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingQueueViewController+Extras.swift", 48, 2, 259, 0);
  __break(1u);
}

unint64_t sub_1003FEFE4(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

double sub_1003FEFF4(char *a1)
{
  id v2;
  id v3;
  unint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  double result;

  v2 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtCC5Music29NowPlayingQueueViewController25NowPlayingQueueFooterView_separator], "layer");
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = sub_10013B23C();
  v5 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4);

  if ((v5 & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v6 = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v2, "setCompositingFilter:", v9, v6);

  *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
  return result;
}

uint64_t sub_1003FF0C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003FF0E8()
{
  uint64_t v0;

  sub_1003FBAFC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003FF0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003FF100(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003FF108()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003FF12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A9968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003FF174()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1003FF1D0()
{
  uint64_t v0;

  return sub_10072FF20(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t _s13UpdateContextV6UpdateVwxx(uint64_t result)
{
  if (*(_QWORD *)(result + 8))
    return swift_release(*(_QWORD *)(result + 16));
  return result;
}

uint64_t _s13UpdateContextV6UpdateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  return a1;
}

uint64_t _s13UpdateContextV6UpdateVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v8;
      swift_retain(v8);
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

uint64_t _s13UpdateContextV6UpdateVwta(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v8;
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_release(v7);
  return a1;
}

uint64_t _s13UpdateContextV6UpdateVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13UpdateContextV6UpdateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s13UpdateContextV6UpdateVMa()
{
  return &_s13UpdateContextV6UpdateVN;
}

uint64_t _s13UpdateContextV10UpdateTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003FF464 + 4 * byte_100EB98EF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003FF498 + 4 * byte_100EB98EA[v4]))();
}

uint64_t sub_1003FF498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FF4A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003FF4A8);
  return result;
}

uint64_t sub_1003FF4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003FF4BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003FF4C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FF4C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13UpdateContextV10UpdateTypeOMa()
{
  return &_s13UpdateContextV10UpdateTypeON;
}

unint64_t sub_1003FF4E8()
{
  unint64_t result;

  result = qword_1011B2418;
  if (!qword_1011B2418)
  {
    result = swift_getWitnessTable(&unk_100EB9B84, &_s13UpdateContextV10UpdateTypeON);
    atomic_store(result, (unint64_t *)&qword_1011B2418);
  }
  return result;
}

_QWORD *sub_1003FF534(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v13 = type metadata accessor for URL(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[8];
    v16 = a3[9];
    v17 = (_QWORD *)((char *)v4 + v15);
    v18 = (_QWORD *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)((char *)v4 + v16);
    v21 = (_QWORD *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[10];
    v24 = a3[11];
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (_QWORD *)((char *)v4 + v24);
    v29 = (_QWORD *)((char *)a2 + v24);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[12];
    v32 = a3[13];
    v33 = (_QWORD *)((char *)v4 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (_QWORD *)((char *)v4 + v32);
    v37 = (_QWORD *)((char *)a2 + v32);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = a3[15];
    *(_QWORD *)((char *)v4 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
    *((_BYTE *)v4 + v39) = *((_BYTE *)a2 + v39);
    v40 = a3[16];
    __dst = (char *)v4 + v40;
    v41 = (char *)a2 + v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 10, v42))
    {
      v44 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v46 = type metadata accessor for Playlist.Variant(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v41, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v41, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 10, v42);
    }
    v49 = a3[18];
    *(_QWORD *)((char *)v4 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
    v50 = *(void **)((char *)a2 + v49);
    *(_QWORD *)((char *)v4 + v49) = v50;
    *(_QWORD *)((char *)v4 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
    v51 = v50;
    swift_bridgeObjectRetain();
  }
  return v4;
}

double sub_1003FF7E0(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  v4 = (char *)a1 + a2[7];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[14]));
  v6 = (char *)a1 + a2[16];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 10, v7))
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[19])).n128_u64[0];
  return result;
}

_QWORD *sub_1003FF934(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = type metadata accessor for URL(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = a3[8];
  v15 = a3[9];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)((char *)a1 + v15);
  v20 = (_QWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[10];
  v23 = a3[11];
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_QWORD *)((char *)a1 + v23);
  v28 = (_QWORD *)((char *)a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[12];
  v31 = a3[13];
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = (_QWORD *)((char *)a1 + v31);
  v36 = (_QWORD *)((char *)a2 + v31);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
  v39 = a3[16];
  __dst = (char *)a1 + v39;
  v40 = (char *)a2 + v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 10, v41))
  {
    v43 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = type metadata accessor for Playlist.Variant(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, v40, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 10, v41);
  }
  v47 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  v48 = *(void **)((char *)a2 + v47);
  *(_QWORD *)((char *)a1 + v47) = v48;
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  v49 = v48;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1003FFBB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v16 = v14[1];
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = a3[9];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v18[1];
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = a3[10];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v22[1];
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = a3[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v28 = v26[1];
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v28);
  v29 = a3[12];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  *v30 = *v31;
  v32 = v30[1];
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v32);
  v33 = a3[13];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  *v34 = *v35;
  v36 = v34[1];
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v36);
  v37 = a3[14];
  v38 = *(_QWORD *)((char *)a1 + v37);
  *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v38);
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v39 = a3[16];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 10, v42);
  v46 = v44(v41, 10, v42);
  if (!v45)
  {
    if (!v46)
    {
      v51 = type metadata accessor for Playlist.Variant(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
      v54 = v53(v40, 1, v51);
      v55 = v53(v41, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v40, v41, v51);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v40, 0, 1, v51);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v55)
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 24))(v40, v41, v51);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v51);
      }
      v50 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_8;
    }
    sub_1003FFFA8((uint64_t)v40);
LABEL_7:
    v50 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_8:
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_14;
  }
  if (v46)
    goto LABEL_7;
  v47 = type metadata accessor for Playlist.Variant(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v41, 1, v47))
  {
    v49 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v40, v41, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v40, 0, 1, v47);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 10, v42);
LABEL_14:
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  v56 = a3[18];
  v57 = *(void **)((char *)a1 + v56);
  v58 = *(void **)((char *)a2 + v56);
  *(_QWORD *)((char *)a1 + v56) = v58;
  v59 = v58;

  v60 = a3[19];
  v61 = *(_QWORD *)((char *)a2 + v60);
  v62 = *(_QWORD *)((char *)a1 + v60);
  *(_QWORD *)((char *)a1 + v60) = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v62);
  return a1;
}

uint64_t sub_1003FFFA8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1003FFFE8(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v15 = a3[16];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 10, v18))
  {
    v20 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for Playlist.Variant(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v17, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 10, v18);
  }
  v24 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  return a1;
}

_QWORD *sub_1004001C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  v27 = v23[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease(v27);
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  v33 = v29[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease(v33);
  v34 = a3[11];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  v39 = v35[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease(v39);
  v40 = a3[12];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  v45 = v41[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease(v45);
  v46 = a3[13];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  v51 = v47[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease(v51);
  v52 = a3[14];
  v53 = *(_QWORD *)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = *(_QWORD *)((char *)a2 + v52);
  swift_bridgeObjectRelease(v53);
  v54 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 10, v57);
  v61 = v59(v56, 10, v57);
  if (!v60)
  {
    if (!v61)
    {
      v66 = type metadata accessor for Playlist.Variant(0);
      v67 = *(_QWORD *)(v66 - 8);
      v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
      v69 = v68(v55, 1, v66);
      v70 = v68(v56, 1, v66);
      if (v69)
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v55, v56, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v55, 0, 1, v66);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v70)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v55, v56, v66);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v66);
      }
      v65 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_8;
    }
    sub_1003FFFA8((uint64_t)v55);
LABEL_7:
    v65 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_8:
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_14;
  }
  if (v61)
    goto LABEL_7;
  v62 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v56, 1, v62))
  {
    v64 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v55, v56, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v55, 0, 1, v62);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 10, v57);
LABEL_14:
  v71 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  v72 = *(void **)((char *)a1 + v71);
  *(_QWORD *)((char *)a1 + v71) = *(_QWORD *)((char *)a2 + v71);

  v73 = a3[19];
  v74 = *(_QWORD *)((char *)a1 + v73);
  *(_QWORD *)((char *)a1 + v73) = *(_QWORD *)((char *)a2 + v73);
  swift_bridgeObjectRelease(v74);
  return a1;
}

uint64_t sub_10040050C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100400518);
}

uint64_t sub_100400518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 64);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1004005B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004005C4);
}

uint64_t sub_1004005C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 64);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for WidgetMusicItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B2478;
  if (!qword_1011B2478)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WidgetMusicItem);
  return result;
}

uint64_t sub_10040069C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[16];

  v5[0] = &unk_100EB9BE0;
  v5[1] = &unk_100EB9BF8;
  v5[2] = &unk_100EB9BE0;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5[3] = *(_QWORD *)(result - 8) + 64;
    v5[4] = &unk_100EB9BF8;
    v5[5] = &unk_100EB9BE0;
    v5[6] = &unk_100EB9BF8;
    v5[7] = &unk_100EB9BE0;
    v5[8] = &unk_100EB9BE0;
    v5[9] = &unk_100EB9BE0;
    v5[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[11] = &unk_100EB9C10;
    result = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v4 <= 0x3F)
    {
      v5[12] = *(_QWORD *)(result - 8) + 64;
      v5[13] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[14] = &unk_100EB9C28;
      v5[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 16, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10040077C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v3 = v2;
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v18 - v11;
  type metadata accessor for InternalMusicPlayer(0);
  v13 = static InternalMusicPlayer.localDevice.getter();
  v14 = InternalMusicPlayer.state<A>(for:)(v3, a1, a2);
  v15 = swift_release(v13);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v15);
  swift_release(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v6);
  LOBYTE(v13) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v12, v10);
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v10, v6);
  v16(v12, v6);
  return v13 & 1;
}

uint64_t sub_1004008A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  int *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;

  v34 = (int *)type metadata accessor for WidgetMusicItem(0);
  v35 = v34[18];
  *(_QWORD *)((char *)a9 + v35) = 0;
  *(_QWORD *)((char *)a9 + v34[19]) = _swiftEmptyArrayStorage;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  v36 = (char *)a9 + v34[7];
  v37 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v36, a7, v37);
  sub_10005B704(a11, (uint64_t)a9 + v34[16], type metadata accessor for ArtworkImage.Placeholder);
  *(double *)((char *)a9 + v34[17]) = a10;
  v39 = (_QWORD *)((char *)a9 + v34[8]);
  *v39 = a12;
  v39[1] = a13;
  v40 = (_QWORD *)((char *)a9 + v34[9]);
  *v40 = a14;
  v40[1] = a15;
  v41 = (_QWORD *)((char *)a9 + v34[10]);
  *v41 = a16;
  v41[1] = a17;
  v42 = (_QWORD *)((char *)a9 + v34[11]);
  *v42 = a18;
  v42[1] = a19;
  v43 = (_QWORD *)((char *)a9 + v34[12]);
  *v43 = a20;
  v43[1] = a21;
  v44 = (_QWORD *)((char *)a9 + v34[13]);
  *v44 = a22;
  v44[1] = a23;
  *(_QWORD *)((char *)a9 + v34[14]) = a25;
  *((_BYTE *)a9 + v34[15]) = a26;
  sub_100400AC8(a24);
  *(_QWORD *)((char *)a9 + v35) = a8;
  sub_10005B748(a11, type metadata accessor for ArtworkImage.Placeholder);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(a7, v37);
}

void sub_100400AC8(uint64_t a1)
{
  uint64_t v1;
  int64_t v3;
  uint64_t i;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_10035C468(0, v3, 0);
    for (i = 0; i != v3; ++i)
    {
      v5 = *(void **)(a1 + 8 * i + 32);
      v6 = _swiftEmptyArrayStorage[2];
      v7 = _swiftEmptyArrayStorage[3];
      v8 = v5;
      if (v6 >= v7 >> 1)
        sub_10035C468(v7 > 1, v6 + 1, 1);
      _swiftEmptyArrayStorage[2] = v6 + 1;
      _swiftEmptyArrayStorage[v6 + 4] = v5;
    }
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
  }
  v9 = *(int *)(type metadata accessor for WidgetMusicItem(0) + 76);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + v9));
  *(_QWORD *)(v1 + v9) = _swiftEmptyArrayStorage;
}

unint64_t sub_100400BD0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  void *object;
  Swift::String v25;
  Swift::String v26;
  double v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  Swift::String v32;
  void *v33;
  Swift::String v34;
  void *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  void *v40;
  Swift::String v41;
  void *v42;
  uint64_t *v43;
  void *v44;
  uint64_t v45;
  Swift::String v46;
  void *v47;
  Swift::String v48;
  void *v49;
  uint64_t *v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  void *v55;
  uint64_t *v56;
  void *v57;
  Swift::String v58;
  void *v59;
  Swift::String v60;
  void *v61;
  uint64_t *v62;
  void *v63;
  Swift::String v64;
  void *v65;
  Swift::String v66;
  void *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  Swift::String v74;
  Swift::String v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String v79;
  void *v80;
  Swift::String v81;
  void *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void *v86;
  Swift::String v87;
  Swift::String v89;
  BOOL v90;
  Swift::String v91;
  unint64_t v92;
  unint64_t v93;

  v1 = v0;
  v92 = 0xD000000000000010;
  v93 = 0x8000000100E38D30;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)&v89, "supertitle: \"");
  HIWORD(v89._object) = -4864;
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  v4 = Optional<A>.description.getter(v2, v3);
  v6 = v5;
  swift_bridgeObjectRelease(v3);
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 2108450;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v89._object);
  strcpy((char *)&v89, "title: \"");
  BYTE1(v89._object) = 0;
  WORD1(v89._object) = 0;
  HIDWORD(v89._object) = -402653184;
  v9 = v1[2];
  v10 = (void *)v1[3];
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12._countAndFlagsBits = 2108450;
  v12._object = (void *)0xE300000000000000;
  String.append(_:)(v12);
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v89._object);
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)&v89, "subtitle: \"");
  HIDWORD(v89._object) = -352321536;
  v13 = v1[4];
  v14 = v1[5];
  swift_bridgeObjectRetain();
  v15 = Optional<A>.description.getter(v13, v14);
  v17 = v16;
  swift_bridgeObjectRelease(v14);
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19._countAndFlagsBits = 2108450;
  v19._object = (void *)0xE300000000000000;
  String.append(_:)(v19);
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v89._object);
  v20 = (int *)type metadata accessor for WidgetMusicItem(0);
  v21 = type metadata accessor for URL(0);
  v22 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v21, v22);
  object = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(object);
  v25._countAndFlagsBits = 2108450;
  v25._object = (void *)0xE300000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x22203A6C7275;
  v26._object = (void *)0xE600000000000000;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(0xE600000000000000);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(18);
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(0xE000000000000000).n128_u64[0];
  strcpy((char *)&v91, "artworkImage: ");
  HIBYTE(v91._object) = -18;
  v28 = *(void **)((char *)v1 + v20[18]);
  if (v28)
  {
    objc_msgSend(v28, "size", v27);
  }
  else
  {
    v29 = 0;
    v30 = 0;
  }
  v89._countAndFlagsBits = v29;
  v89._object = v30;
  v90 = v28 == 0;
  v31 = sub_100007E8C(&qword_1011B2580);
  v32._countAndFlagsBits = String.init<A>(describing:)(&v89, v31);
  v33 = v32._object;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v33);
  v34._countAndFlagsBits = 8236;
  v34._object = (void *)0xE200000000000000;
  String.append(_:)(v34);
  v35 = v91._object;
  String.append(_:)(v91);
  swift_bridgeObjectRelease(v35);
  strcpy((char *)&v89, "itemID: \"");
  WORD1(v89._object) = 0;
  HIDWORD(v89._object) = -385875968;
  v36 = (_QWORD *)((char *)v1 + v20[8]);
  v37 = *v36;
  v38 = v36[1];
  swift_bridgeObjectRetain();
  v39._countAndFlagsBits = MusicItemID.description.getter(v37, v38);
  v40 = v39._object;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v40);
  v41._countAndFlagsBits = 2108450;
  v41._object = (void *)0xE300000000000000;
  String.append(_:)(v41);
  v42 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v42);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v89._object);
  strcpy((char *)&v89, "catalogID: \"");
  BYTE5(v89._object) = 0;
  HIWORD(v89._object) = -5120;
  v43 = (_QWORD *)((char *)v1 + v20[9]);
  v44 = (void *)v43[1];
  v91._countAndFlagsBits = *v43;
  v91._object = v44;
  swift_bridgeObjectRetain();
  v45 = sub_100007E8C(&qword_1011A64C8);
  v46._countAndFlagsBits = String.init<A>(describing:)(&v91, v45);
  v47 = v46._object;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(v47);
  v48._countAndFlagsBits = 2108450;
  v48._object = (void *)0xE300000000000000;
  String.append(_:)(v48);
  v49 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v49);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v89._object);
  strcpy((char *)&v89, "siriRepID: \"");
  BYTE5(v89._object) = 0;
  HIWORD(v89._object) = -5120;
  v50 = (_QWORD *)((char *)v1 + v20[10]);
  v51 = *v50;
  v52 = (void *)v50[1];
  swift_bridgeObjectRetain();
  v53._countAndFlagsBits = v51;
  v53._object = v52;
  String.append(_:)(v53);
  swift_bridgeObjectRelease(v52);
  v54._countAndFlagsBits = 2108450;
  v54._object = (void *)0xE300000000000000;
  String.append(_:)(v54);
  v55 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v55);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v89._object);
  v89._countAndFlagsBits = 0xD000000000000012;
  v89._object = (void *)0x8000000100E38D50;
  v56 = (_QWORD *)((char *)v1 + v20[11]);
  v57 = (void *)v56[1];
  v91._countAndFlagsBits = *v56;
  v91._object = v57;
  swift_bridgeObjectRetain();
  v58._countAndFlagsBits = String.init<A>(describing:)(&v91, v45);
  v59 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60._countAndFlagsBits = 2108450;
  v60._object = (void *)0xE300000000000000;
  String.append(_:)(v60);
  v61 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v61);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v89._object);
  v89._countAndFlagsBits = 0xD000000000000015;
  v89._object = (void *)0x8000000100E38D70;
  v62 = (_QWORD *)((char *)v1 + v20[12]);
  v63 = (void *)v62[1];
  v91._countAndFlagsBits = *v62;
  v91._object = v63;
  swift_bridgeObjectRetain();
  v64._countAndFlagsBits = String.init<A>(describing:)(&v91, v45);
  v65 = v64._object;
  String.append(_:)(v64);
  swift_bridgeObjectRelease(v65);
  v66._countAndFlagsBits = 2108450;
  v66._object = (void *)0xE300000000000000;
  String.append(_:)(v66);
  v67 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v67);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v89._object);
  v89._countAndFlagsBits = 0xD000000000000015;
  v89._object = (void *)0x8000000100E38D90;
  v68 = (_QWORD *)((char *)v1 + v20[13]);
  v69 = *v68;
  v70 = v68[1];
  swift_bridgeObjectRetain();
  v71 = Optional<A>.description.getter(v69, v70);
  v73 = v72;
  swift_bridgeObjectRelease(v70);
  v74._countAndFlagsBits = v71;
  v74._object = v73;
  String.append(_:)(v74);
  swift_bridgeObjectRelease(v73);
  v75._countAndFlagsBits = 2108450;
  v75._object = (void *)0xE300000000000000;
  String.append(_:)(v75);
  v76 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v76);
  strcpy((char *)&v89, "badges: \"");
  WORD1(v89._object) = 0;
  HIDWORD(v89._object) = -385875968;
  v77 = *(_QWORD *)((char *)v1 + v20[14]);
  v78 = swift_bridgeObjectRetain();
  v79._countAndFlagsBits = Array.description.getter(v78, &type metadata for TextBadge);
  v80 = v79._object;
  String.append(_:)(v79);
  swift_bridgeObjectRelease(v77);
  swift_bridgeObjectRelease(v80);
  v81._countAndFlagsBits = 2108450;
  v81._object = (void *)0xE300000000000000;
  String.append(_:)(v81);
  v82 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v82);
  strcpy((char *)&v89, "isPlayable: ");
  BYTE5(v89._object) = 0;
  HIWORD(v89._object) = -5120;
  if (*((_BYTE *)v1 + v20[15]))
    v83 = 1702195828;
  else
    v83 = 0x65736C6166;
  if (*((_BYTE *)v1 + v20[15]))
    v84 = 0xE400000000000000;
  else
    v84 = 0xE500000000000000;
  v85 = v84;
  String.append(_:)(*(Swift::String *)&v83);
  swift_bridgeObjectRelease(v84);
  v86 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v86);
  v87._countAndFlagsBits = 41;
  v87._object = (void *)0xE100000000000000;
  String.append(_:)(v87);
  return v92;
}

uint64_t sub_1004013C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetMusicItem(0);
  sub_10004FACC(v10, qword_10124CF50);
  v11 = (_QWORD *)sub_100048B14(v10, (uint64_t)qword_10124CF50);
  URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v13 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 10, v14);
    v15 = MusicItemID.init(stringLiteral:)(0, 0xE000000000000000);
    return sub_1004008A0(0x5F5F5F5F5F5F5F5FLL, 0xEC0000005F5F5F5FLL, 0xD000000000000018, 0x8000000100E38E50, 0xD000000000000010, 0x8000000100E38E70, (uint64_t)v9, (uint64_t)v13, v11, 1.0, (uint64_t)v2, v15, v16, 0, 0, 0, 0xE000000000000000, 0, 0,
             0,
             0,
             0,
             0,
             (uint64_t)_swiftEmptyArrayStorage,
             (uint64_t)_swiftEmptyArrayStorage,
             0);
  }
  return result;
}

uint64_t sub_100401600(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100401638 + 4 * byte_100EB9BB0[a1]))(0x7469747265707573, 0xEA0000000000656CLL);
}

uint64_t sub_100401638()
{
  return 0x656C746974;
}

uint64_t sub_10040164C()
{
  return 0x656C746974627573;
}

uint64_t sub_100401664()
{
  return 7107189;
}

uint64_t sub_100401674()
{
  return 0x44496D657469;
}

uint64_t sub_100401688()
{
  return 0x49676F6C61746163;
}

uint64_t sub_1004016B8()
{
  return 0x656E6961746E6F63;
}

unint64_t sub_1004016DC()
{
  return 0xD000000000000012;
}

unint64_t sub_100401738()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100401794(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char v44;
  __int128 v45;

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011B2540);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_1004026B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WidgetMusicItem.CodingKeys, &type metadata for WidgetMusicItem.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v45) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v45, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    LOBYTE(v45) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v45, v5);
    v16 = v3[4];
    v17 = v3[5];
    LOBYTE(v45) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v45, v5);
    v18 = (int *)type metadata accessor for WidgetMusicItem(0);
    v19 = (char *)v3 + v18[7];
    LOBYTE(v45) = 3;
    v20 = type metadata accessor for URL(0);
    v21 = sub_100048748(&qword_1011B2548, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, &v45, v5, v20, v21);
    v22 = (uint64_t *)((char *)v3 + v18[8]);
    v24 = *v22;
    v23 = v22[1];
    *(_QWORD *)&v45 = v24;
    *((_QWORD *)&v45 + 1) = v23;
    v44 = 4;
    v25 = sub_1004027A0();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v45 = *(_OWORD *)((char *)v3 + v18[9]);
    v44 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v26 = (uint64_t *)((char *)v3 + v18[10]);
    v27 = *v26;
    v28 = v26[1];
    LOBYTE(v45) = 6;
    KeyedEncodingContainer.encode(_:forKey:)(v27, v28, &v45, v5);
    v45 = *(_OWORD *)((char *)v3 + v18[11]);
    v44 = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v45 = *(_OWORD *)((char *)v3 + v18[12]);
    v44 = 8;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v45, &v44, v5, &type metadata for MusicItemID, v25);
    v29 = (uint64_t *)((char *)v3 + v18[13]);
    v30 = *v29;
    v31 = v29[1];
    LOBYTE(v45) = 9;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v30, v31, &v45, v5);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[14]);
    v44 = 10;
    v32 = sub_100007E8C(&qword_1011B2508);
    v33 = sub_1000E4570(&qword_1011B2558, &qword_1011B2508, (void (*)(void))sub_1004027E4, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, v32, v33);
    v34 = *((unsigned __int8 *)v3 + v18[15]);
    LOBYTE(v45) = 11;
    KeyedEncodingContainer.encode(_:forKey:)(v34, &v45, v5);
    v35 = (char *)v3 + v18[16];
    LOBYTE(v45) = 12;
    v36 = type metadata accessor for ArtworkImage.Placeholder(0);
    v37 = sub_100048748(&qword_1011B2568, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v35, &v45, v5, v36, v37);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[17]);
    v44 = 13;
    v38 = sub_100228EE8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, &type metadata for CGFloat, v38);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[18]);
    v44 = 14;
    v39 = sub_1003CE154();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, &type metadata for CodableImage, v39);
    *(_QWORD *)&v45 = *(uint64_t *)((char *)v3 + v18[19]);
    v44 = 15;
    v40 = sub_100007E8C(&qword_1011B2528);
    v41 = sub_1000E4570(&qword_1011B2570, &qword_1011B2528, (void (*)(void))sub_100402828, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &v44, v5, v40, v41);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100401C9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t *v68;
  __int128 v69;
  char v70;

  v59 = a2;
  v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011B24E8);
  v10 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WidgetMusicItem(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = v16[18];
  v67 = v16;
  *(uint64_t *)((char *)v15 + v66) = 0;
  v17 = v16[19];
  v64 = a1;
  v65 = v17;
  v68 = v15;
  *(uint64_t *)((char *)v15 + v17) = (uint64_t)_swiftEmptyArrayStorage;
  v18 = a1[3];
  v19 = a1[4];
  sub_100007E68(a1, v18);
  v20 = sub_1004026B0();
  v60 = v12;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WidgetMusicItem.CodingKeys, &type metadata for WidgetMusicItem.CodingKeys, v20, v18, v19);
  if (v2)
  {
    v21 = v65;
    v26 = v68;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v64);

    swift_bridgeObjectRelease(*(uint64_t *)((char *)v26 + v21));
  }
  else
  {
    v22 = v9;
    v56 = v4;
    v57 = v6;
    v58 = v10;
    LOBYTE(v69) = 0;
    v23 = v61;
    v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v69, v61);
    v25 = v67;
    v27 = (char *)v68;
    *v68 = v24;
    *((_QWORD *)v27 + 1) = v28;
    LOBYTE(v69) = 1;
    *((_QWORD *)v27 + 2) = KeyedDecodingContainer.decode(_:forKey:)(&v69, v23);
    *((_QWORD *)v27 + 3) = v29;
    LOBYTE(v69) = 2;
    *((_QWORD *)v27 + 4) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v69, v23);
    *((_QWORD *)v27 + 5) = v30;
    LOBYTE(v69) = 3;
    v31 = sub_100048748(&qword_1011B24F8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v32 = v22;
    v33 = v22;
    v34 = v63;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v33, v63, &v69, v23, v63, v31);
    (*(void (**)(char *, _QWORD *, uint64_t))(v62 + 32))(&v27[v25[7]], v32, v34);
    v70 = 4;
    v35 = sub_1004026F4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v69, &type metadata for MusicItemID, &v70, v23, &type metadata for MusicItemID, v35);
    v36 = *((_QWORD *)&v69 + 1);
    v37 = &v27[v25[8]];
    *(_QWORD *)v37 = v69;
    *((_QWORD *)v37 + 1) = v36;
    v70 = 5;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v69, &type metadata for MusicItemID, &v70, v23, &type metadata for MusicItemID, v35);
    *(_OWORD *)&v27[v25[9]] = v69;
    LOBYTE(v69) = 6;
    v38 = KeyedDecodingContainer.decode(_:forKey:)(&v69, v23);
    v39 = (uint64_t *)&v27[v25[10]];
    *v39 = v38;
    v39[1] = v40;
    v70 = 7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v69, &type metadata for MusicItemID, &v70, v23, &type metadata for MusicItemID, v35);
    *(_OWORD *)&v27[v25[11]] = v69;
    v70 = 8;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v69, &type metadata for MusicItemID, &v70, v23, &type metadata for MusicItemID, v35);
    *(_OWORD *)&v27[v25[12]] = v69;
    LOBYTE(v69) = 9;
    v41 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v69, v23);
    v42 = (uint64_t *)((char *)v68 + v67[13]);
    *v42 = v41;
    v42[1] = v43;
    v44 = sub_100007E8C(&qword_1011B2508);
    v70 = 10;
    v45 = sub_1000E4570(&qword_1011B2510, &qword_1011B2508, (void (*)(void))sub_100402738, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v69, v44, &v70, v61, v44, v45);
    *(uint64_t *)((char *)v68 + v67[14]) = v69;
    LOBYTE(v69) = 11;
    v46 = KeyedDecodingContainer.decode(_:forKey:)(&v69, v61);
    *((_BYTE *)v68 + v67[15]) = v46 & 1;
    LOBYTE(v69) = 12;
    v47 = sub_100048748(&qword_1011B2520, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v57, v56, &v69, v61, v56, v47);
    sub_10005B6C0((uint64_t)v57, (uint64_t)v68 + v67[16], type metadata accessor for ArtworkImage.Placeholder);
    v70 = 13;
    v48 = sub_100228EA4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v69, &type metadata for CGFloat, &v70, v61, &type metadata for CGFloat, v48);
    *(uint64_t *)((char *)v68 + v67[17]) = v69;
    v70 = 14;
    v49 = sub_1003CE110();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v69, &type metadata for CodableImage, &v70, v61, &type metadata for CodableImage, v49);
    *(uint64_t *)((char *)v68 + v66) = v69;
    v50 = sub_100007E8C(&qword_1011B2528);
    v70 = 15;
    v51 = sub_1000E4570(&qword_1011B2530, &qword_1011B2528, (void (*)(void))sub_10040277C, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v69, v50, &v70, v61, v50, v51);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v61);
    v52 = (uint64_t)v68;
    v53 = v69;
    v54 = v65;
    swift_bridgeObjectRelease(*(uint64_t *)((char *)v68 + v65));
    *(_QWORD *)(v52 + v54) = v53;
    sub_10005B704(v52, v59, type metadata accessor for WidgetMusicItem);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v64);
    sub_10005B748(v52, type metadata accessor for WidgetMusicItem);
  }
}

uint64_t sub_1004025F8()
{
  unsigned __int8 *v0;

  return sub_100401600(*v0);
}

uint64_t sub_100402600@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100402FE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_100402624(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_100402630(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004026B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100402658(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004026B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100402680(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100401C9C(a1, a2);
}

uint64_t sub_100402694(_QWORD *a1)
{
  return sub_100401794(a1);
}

unint64_t sub_1004026B0()
{
  unint64_t result;

  result = qword_1011B24F0;
  if (!qword_1011B24F0)
  {
    result = swift_getWitnessTable(&unk_100EB9DA4, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B24F0);
  }
  return result;
}

unint64_t sub_1004026F4()
{
  unint64_t result;

  result = qword_1011B2500;
  if (!qword_1011B2500)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_1011B2500);
  }
  return result;
}

unint64_t sub_100402738()
{
  unint64_t result;

  result = qword_1011B2518;
  if (!qword_1011B2518)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TextBadge, &type metadata for TextBadge);
    atomic_store(result, (unint64_t *)&qword_1011B2518);
  }
  return result;
}

uint64_t sub_10040277C()
{
  return sub_1000E4570(&qword_1011B2538, &qword_1011AE0E8, (void (*)(void))sub_1003CE110, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_1004027A0()
{
  unint64_t result;

  result = qword_1011B2550;
  if (!qword_1011B2550)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_1011B2550);
  }
  return result;
}

unint64_t sub_1004027E4()
{
  unint64_t result;

  result = qword_1011B2560;
  if (!qword_1011B2560)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TextBadge, &type metadata for TextBadge);
    atomic_store(result, (unint64_t *)&qword_1011B2560);
  }
  return result;
}

uint64_t sub_100402828()
{
  return sub_1000E4570(&qword_1011B2578, &qword_1011AE0E8, (void (*)(void))sub_1003CE154, (uint64_t)&protocol conformance descriptor for <A> A?);
}

uint64_t sub_10040284C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v53;
  char *v55;
  char *v56;

  v4 = (int *)type metadata accessor for WidgetMusicItem(0);
  __chkstk_darwin(v4);
  v55 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v56 = (char *)&v55 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v55 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v55 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v55 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v55 - v21;
  v24 = *(int *)(v23 + 32);
  v25 = *(_QWORD *)(a1 + v24);
  v26 = *(_QWORD *)(a1 + v24 + 8);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  if (v25 == *v27 && v26 == v28)
  {
    sub_10005B704(a1, (uint64_t)&v55 - v21, type metadata accessor for WidgetMusicItem);
    sub_10005B704(a2, (uint64_t)v19, type metadata accessor for WidgetMusicItem);
    goto LABEL_15;
  }
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, *v27, v28, 0);
  sub_10005B704(a1, (uint64_t)v22, type metadata accessor for WidgetMusicItem);
  sub_10005B704(a2, (uint64_t)v19, type metadata accessor for WidgetMusicItem);
  if ((v30 & 1) != 0)
  {
LABEL_15:
    sub_10005B748((uint64_t)v19, type metadata accessor for WidgetMusicItem);
    sub_10005B748((uint64_t)v22, type metadata accessor for WidgetMusicItem);
    sub_10005B704(a1, (uint64_t)v13, type metadata accessor for WidgetMusicItem);
    sub_10005B704(a2, (uint64_t)v10, type metadata accessor for WidgetMusicItem);
    goto LABEL_16;
  }
  v31 = v4[9];
  v32 = &v22[v31];
  v33 = *(_QWORD *)&v22[v31 + 8];
  v34 = &v19[v31];
  v35 = *((_QWORD *)v34 + 1);
  if (!v33)
  {
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v19, type metadata accessor for WidgetMusicItem);
    if (!v35)
    {
LABEL_46:
      sub_10005B6C0((uint64_t)v22, (uint64_t)v16, type metadata accessor for WidgetMusicItem);
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
LABEL_43:
    sub_10005B6C0((uint64_t)v22, (uint64_t)v16, type metadata accessor for WidgetMusicItem);
    goto LABEL_44;
  }
  if (!v35)
  {
    sub_10005B748((uint64_t)v19, type metadata accessor for WidgetMusicItem);
    goto LABEL_43;
  }
  if (*(_QWORD *)v32 == *(_QWORD *)v34 && v33 == v35)
  {
    sub_10005B748((uint64_t)v19, type metadata accessor for WidgetMusicItem);
    goto LABEL_46;
  }
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v32, v33, *(_QWORD *)v34, *((_QWORD *)v34 + 1), 0);
  sub_10005B748((uint64_t)v19, type metadata accessor for WidgetMusicItem);
  sub_10005B6C0((uint64_t)v22, (uint64_t)v16, type metadata accessor for WidgetMusicItem);
  if ((v37 & 1) == 0)
  {
LABEL_44:
    sub_10005B748((uint64_t)v16, type metadata accessor for WidgetMusicItem);
    sub_10005B704(a1, (uint64_t)v13, type metadata accessor for WidgetMusicItem);
    sub_10005B704(a2, (uint64_t)v10, type metadata accessor for WidgetMusicItem);
LABEL_48:
    sub_10005B748((uint64_t)v10, type metadata accessor for WidgetMusicItem);
    sub_10005B748((uint64_t)v13, type metadata accessor for WidgetMusicItem);
    goto LABEL_49;
  }
LABEL_47:
  v53 = *(_QWORD *)&v16[v4[9] + 8];
  swift_bridgeObjectRetain();
  sub_10005B748((uint64_t)v16, type metadata accessor for WidgetMusicItem);
  swift_bridgeObjectRelease();
  sub_10005B704(a1, (uint64_t)v13, type metadata accessor for WidgetMusicItem);
  sub_10005B704(a2, (uint64_t)v10, type metadata accessor for WidgetMusicItem);
  if (!v53)
    goto LABEL_48;
LABEL_16:
  v38 = v4[11];
  v39 = &v13[v38];
  v40 = *(_QWORD *)&v13[v38 + 8];
  v41 = &v10[v38];
  v42 = *((_QWORD *)v41 + 1);
  if (!v40)
  {
    v44 = (uint64_t)v55;
    v43 = (uint64_t)v56;
    if (!v42)
    {
LABEL_33:
      sub_10005B704((uint64_t)v13, v43, type metadata accessor for WidgetMusicItem);
      sub_10005B704((uint64_t)v10, v44, type metadata accessor for WidgetMusicItem);
LABEL_34:
      sub_10005B748(v44, type metadata accessor for WidgetMusicItem);
      sub_10005B748(v43, type metadata accessor for WidgetMusicItem);
      sub_10005B748((uint64_t)v10, type metadata accessor for WidgetMusicItem);
      sub_10005B748((uint64_t)v13, type metadata accessor for WidgetMusicItem);
      LOBYTE(v51) = 1;
      return v51 & 1;
    }
LABEL_25:
    sub_10005B704((uint64_t)v13, v43, type metadata accessor for WidgetMusicItem);
    sub_10005B704((uint64_t)v10, v44, type metadata accessor for WidgetMusicItem);
    goto LABEL_26;
  }
  v44 = (uint64_t)v55;
  v43 = (uint64_t)v56;
  if (!v42)
    goto LABEL_25;
  if (*(_QWORD *)v39 == *(_QWORD *)v41 && v40 == v42)
    goto LABEL_33;
  v46 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v39, v40, *(_QWORD *)v41, v42, 0);
  sub_10005B704((uint64_t)v13, v43, type metadata accessor for WidgetMusicItem);
  sub_10005B704((uint64_t)v10, v44, type metadata accessor for WidgetMusicItem);
  if ((v46 & 1) != 0)
    goto LABEL_34;
LABEL_26:
  v47 = v4[12];
  v48 = (_QWORD *)(v43 + v47);
  v49 = *(_QWORD *)(v43 + v47 + 8);
  v50 = (_QWORD *)(v44 + v47);
  v51 = v50[1];
  if (v49)
  {
    if (v51)
    {
      if (*v48 == *v50 && v49 == v51)
        LOBYTE(v51) = 1;
      else
        LOBYTE(v51) = _stringCompareWithSmolCheck(_:_:expecting:)(*v48, v49, *v50, v50[1], 0);
    }
    swift_bridgeObjectRetain();
    sub_10005B748(v44, type metadata accessor for WidgetMusicItem);
    sub_10005B748(v43, type metadata accessor for WidgetMusicItem);
    sub_10005B748((uint64_t)v10, type metadata accessor for WidgetMusicItem);
    sub_10005B748((uint64_t)v13, type metadata accessor for WidgetMusicItem);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10005B748(v44, type metadata accessor for WidgetMusicItem);
    sub_10005B748(v43, type metadata accessor for WidgetMusicItem);
    sub_10005B748((uint64_t)v10, type metadata accessor for WidgetMusicItem);
    sub_10005B748((uint64_t)v13, type metadata accessor for WidgetMusicItem);
    if (v51)
    {
      swift_bridgeObjectRelease();
LABEL_49:
      LOBYTE(v51) = 0;
      return v51 & 1;
    }
    LOBYTE(v51) = 1;
  }
  return v51 & 1;
}

uint64_t getEnumTagSinglePayload for WidgetMusicItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetMusicItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_100402E90 + 4 * byte_100EB9BC5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_100402EC4 + 4 * byte_100EB9BC0[v4]))();
}

uint64_t sub_100402EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100402ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100402ED4);
  return result;
}

uint64_t sub_100402EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100402EE8);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_100402EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100402EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetMusicItem.CodingKeys()
{
  return &type metadata for WidgetMusicItem.CodingKeys;
}

unint64_t sub_100402F14()
{
  unint64_t result;

  result = qword_1011B2588;
  if (!qword_1011B2588)
  {
    result = swift_getWitnessTable(&unk_100EB9D7C, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B2588);
  }
  return result;
}

unint64_t sub_100402F5C()
{
  unint64_t result;

  result = qword_1011B2590;
  if (!qword_1011B2590)
  {
    result = swift_getWitnessTable(&unk_100EB9CEC, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B2590);
  }
  return result;
}

unint64_t sub_100402FA4()
{
  unint64_t result;

  result = qword_1011B2598;
  if (!qword_1011B2598)
  {
    result = swift_getWitnessTable(&unk_100EB9D14, &type metadata for WidgetMusicItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B2598);
  }
  return result;
}

uint64_t sub_100402FE8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;

  if (a1 == 0x7469747265707573 && a2 == 0xEA0000000000656CLL)
  {
    v5 = 0xEA0000000000656CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7469747265707573, 0xEA0000000000656CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v9 = 0xE300000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x44496D657469 && a2 == 0xE600000000000000)
  {
    v10 = 0xE600000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x44496D657469, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x49676F6C61746163 && a2 == 0xE900000000000044)
  {
    v11 = 0xE900000000000044;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49676F6C61746163, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x4970655269726973 && a2 == 0xE900000000000044)
  {
    v12 = 0xE900000000000044;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4970655269726973, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x656E6961746E6F63 && a2 == 0xEF44496D65744972)
  {
    v13 = 0xEF44496D65744972;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xEF44496D65744972, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0xD000000000000012)
  {
    v14 = 0x8000000100E38DB0;
    if (a2 == 0x8000000100E38DB0)
      goto LABEL_55;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100E38DB0, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_55:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if (a1 == 0xD000000000000012)
  {
    v15 = 0x8000000100E38DD0;
    if (a2 == 0x8000000100E38DD0)
      goto LABEL_60;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100E38DD0, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
LABEL_60:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if (a1 == 0x736567646162 && a2 == 0xE600000000000000)
  {
    v16 = 0xE600000000000000;
LABEL_66:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736567646162, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_66;
  }
  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    v17 = 0xEA0000000000656CLL;
LABEL_72:
    swift_bridgeObjectRelease(v17);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x626179616C507369, 0xEA0000000000656CLL, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
    goto LABEL_72;
  }
  if (a1 == 0xD000000000000012)
  {
    v18 = 0x8000000100E38DF0;
    if (a2 == 0x8000000100E38DF0)
      goto LABEL_77;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100E38DF0, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_77:
    swift_bridgeObjectRelease(v18);
    return 12;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100E38E10)
  {
    v19 = 0x8000000100E38E10;
LABEL_83:
    swift_bridgeObjectRelease(v19);
    return 13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000100E38E10, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_83;
  }
  if (a1 == 0x49656C6261646F63 && a2 == 0xEC0000006567616DLL)
  {
    v20 = 0xEC0000006567616DLL;
LABEL_89:
    swift_bridgeObjectRelease(v20);
    return 14;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49656C6261646F63, 0xEC0000006567616DLL, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_89;
  }
  if (a1 == 0xD000000000000019 && a2 == 0x8000000100E38E30)
  {
    swift_bridgeObjectRelease(0x8000000100E38E30);
    return 15;
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x8000000100E38E30, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v21 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_10040364C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29[3];
  uint64_t v30;

  v1 = v0;
  if (qword_10119C728 != -1)
    swift_once(&qword_10119C728, sub_1006DD7C0);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D830);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136446210;
    v29[0] = v7;
    v8 = StaticString.description.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
    v10 = v9;
    v28 = sub_100322200(v8, v9, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
    swift_release_n(v1, 2, v11);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[ScenePhaseSupport:%{public}s] Deallocated — Removing notifications", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2, v12);
  }
  v13 = OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_notificationObservers;
  v14 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_notificationObservers);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = (void *)objc_opt_self(NSNotificationCenter);
    v17 = v14 + 32;
    swift_bridgeObjectRetain_n(v14, 2);
    do
    {
      sub_10004FA40(v17, (uint64_t)v29);
      v18 = objc_msgSend(v16, "defaultCenter");
      v19 = v30;
      v20 = sub_100007E68(v29, v30);
      v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v19);
      objc_msgSend(v18, "removeObserver:", v21);

      swift_unknownObjectRelease(v21);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v29);
      v17 += 32;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease_n(v14, 2);
  }
  v22 = v1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase;
  v23 = type metadata accessor for ScenePhase(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  swift_unknownObjectWeakDestroy(v1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_windowScene, v24);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + v13));
  v25 = v1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel___observationRegistrar;
  v26 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  return v1;
}

uint64_t sub_100403918()
{
  uint64_t v0;

  v0 = sub_10040364C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100403938()
{
  return type metadata accessor for HostedScenePhaseModel(0);
}

uint64_t type metadata accessor for HostedScenePhaseModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B25E8;
  if (!qword_1011B25E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HostedScenePhaseModel);
  return result;
}

uint64_t sub_10040397C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  v5[0] = &unk_100EB9E28;
  result = type metadata accessor for ScenePhase(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = &unk_100EB9E40;
    v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = type metadata accessor for ObservationRegistrar(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 5, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_100403A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t KeyPath;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for ScenePhase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C728 != -1)
    swift_once(&qword_10119C728, sub_1006DD7C0);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_10124D830);
  v7 = swift_retain_n(v0, 4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v29 = v25;
    *(_DWORD *)v10 = 136446466;
    v11 = StaticString.description.getter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
    v13 = v12;
    v27 = sub_100322200(v11, v12, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
    swift_release_n(v0, 2, v14);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v10 + 12) = 2082;
    KeyPath = swift_getKeyPath(&unk_100EB9E78);
    v27 = v0;
    v16 = sub_100404F78();
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, KeyPath, v16);
    swift_release();
    v17 = v0 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase;
    v18 = swift_beginAccess(v1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase, &v27, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v17, v2, v18);
    v19 = String.init<A>(describing:)(v5, v2);
    v21 = v20;
    v26 = sub_100322200(v19, v20, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_release_n(v1, 2, v22);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[ScenePhaseSupport:%{public}s] scenePhase changed: %{public}s", (uint8_t *)v10, 0x16u);
    v23 = v25;
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(v0, 4, v24);
  }
}

uint64_t sub_100403CC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_100EB9E78);
  v8[0] = v1;
  v4 = sub_100404F78();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v4);
  swift_release();
  v5 = v1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase, v8, 0, 0);
  v6 = type metadata accessor for ScenePhase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v5, v6);
}

uint64_t sub_100403D74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB9E78);
  v9[0] = v3;
  v5 = sub_100404F78();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release();
  v6 = v3 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase, v9, 0, 0);
  v7 = type metadata accessor for ScenePhase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v6, v7);
}

uint64_t sub_100403E20(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  __n128 v12;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  v4 = type metadata accessor for ScenePhase(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB9E78);
  v15 = v9;
  v16 = v8;
  v17 = v9;
  v11 = sub_100404F78();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v17, KeyPath, sub_100404FC0, v14, (char *)&type metadata for () + 8, v11);
  v12 = swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v8, v4, v12);
}

uint64_t sub_100403F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  _BYTE v13[24];

  v4 = type metadata accessor for ScenePhase(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  v9 = a1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase;
  v10 = swift_beginAccess(a1 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel__scenePhase, v13, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v9, v8, v4, v10);
  swift_endAccess(v13);
  sub_100403A28();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

double sub_100403FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  NSNotificationName *v42;
  char *v43;
  NSNotificationName *v44;
  char *v45;
  NSNotificationName *v46;
  char *v47;
  uint64_t v48;
  NSNotificationName *v49;
  char *v50;
  uint64_t v51;
  NSString *v52;
  NSString *v53;
  NSString *v54;
  NSString *v55;
  NSString *v56;
  NSString *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  double result;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80[3];
  uint64_t v81;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_windowScene);
  if (Strong)
  {
    v3 = (void *)Strong;
    if (qword_10119C728 != -1)
      swift_once(&qword_10119C728, sub_1006DD7C0);
    v4 = type metadata accessor for Logger(0);
    sub_100048B14(v4, (uint64_t)qword_10124D830);
    swift_retain_n(v1, 2);
    v5 = v3;
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    v77 = v1;
    v78 = v5;
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(22, -1);
      v76 = swift_slowAlloc(64, -1);
      v80[0] = v76;
      *(_DWORD *)v8 = 136446466;
      v9 = StaticString.description.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
      v11 = v10;
      v79 = sub_100322200(v9, v10, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);
      swift_release_n(v1, 2, v12);
      swift_bridgeObjectRelease(v11);
      *(_WORD *)(v8 + 12) = 2082;
      v13 = v5;
      v14 = objc_msgSend(v13, "description");
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v79 = sub_100322200(v15, v17, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);

      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[ScenePhaseSupport:%{public}s] Setting up notification observers for scene %{public}s)", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy(v76, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2, v28);
    }
    v29 = sub_100007E8C(&qword_1011B2708);
    v30 = sub_100007E8C(&qword_1011B2710);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(_QWORD *)(v31 + 72);
    v33 = *(unsigned __int8 *)(v31 + 80);
    v34 = (v33 + 32) & ~v33;
    v35 = swift_allocObject(v29, v34 + 6 * v32, v33 | 7);
    *(_OWORD *)(v35 + 16) = xmmword_100EB02A0;
    v36 = v35 + v34 + *(int *)(v30 + 48);
    *(_QWORD *)(v35 + v34) = UISceneDidActivateNotification;
    v37 = enum case for ScenePhase.active(_:);
    v38 = type metadata accessor for ScenePhase(0);
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104);
    v39(v36, v37, v38);
    v40 = v35 + v34 + v32 + *(int *)(v30 + 48);
    *(_QWORD *)(v35 + v34 + v32) = UISceneWillConnectNotification;
    v41 = enum case for ScenePhase.inactive(_:);
    v39(v40, enum case for ScenePhase.inactive(_:), v38);
    v42 = (NSNotificationName *)(v35 + v34 + 2 * v32);
    v43 = (char *)v42 + *(int *)(v30 + 48);
    *v42 = UISceneWillDeactivateNotification;
    v39((uint64_t)v43, v41, v38);
    v44 = (NSNotificationName *)(v35 + v34 + 3 * v32);
    v45 = (char *)v44 + *(int *)(v30 + 48);
    *v44 = UISceneWillEnterForegroundNotification;
    v39((uint64_t)v45, v41, v38);
    v46 = (NSNotificationName *)(v35 + v34 + 4 * v32);
    v47 = (char *)v46 + *(int *)(v30 + 48);
    *v46 = UISceneDidDisconnectNotification;
    v48 = enum case for ScenePhase.background(_:);
    v39((uint64_t)v47, enum case for ScenePhase.background(_:), v38);
    v49 = (NSNotificationName *)(v35 + v34 + 5 * v32);
    v50 = (char *)v49 + *(int *)(v30 + 48);
    *v49 = UISceneDidEnterBackgroundNotification;
    v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v39)(v50, v48, v38);
    __chkstk_darwin(v51);
    v52 = UISceneDidActivateNotification;
    v53 = UISceneWillConnectNotification;
    v54 = UISceneWillDeactivateNotification;
    v55 = UISceneWillEnterForegroundNotification;
    v56 = UISceneDidDisconnectNotification;
    v57 = UISceneDidEnterBackgroundNotification;
    v58 = sub_100404D44(v35, (void (*)(_OWORD *__return_ptr, _QWORD, char *))sub_100404D3C);
    swift_setDeallocating(v35);
    swift_arrayDestroy(v35 + v34, *(_QWORD *)(v35 + 16), v30);
    swift_deallocClassInstance(v35, 32, 7);
    v59 = *(_QWORD *)(v77
                    + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_notificationObservers);
    *(_QWORD *)(v77
              + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_notificationObservers) = v58;
    v60 = *(_QWORD *)(v59 + 16);
    if (v60)
    {
      v61 = (void *)objc_opt_self(NSNotificationCenter);
      v62 = v59 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_10004FA40(v62, (uint64_t)v80);
        v63 = objc_msgSend(v61, "defaultCenter");
        v64 = v81;
        v65 = sub_100007E68(v80, v81);
        v66 = _bridgeAnythingToObjectiveC<A>(_:)(v65, v64);
        objc_msgSend(v63, "removeObserver:", v66);

        swift_unknownObjectRelease(v66);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
        v62 += 32;
        --v60;
      }
      while (v60);

LABEL_20:
      *(_QWORD *)&result = swift_bridgeObjectRelease_n(v59, 2).n128_u64[0];
      return result;
    }

  }
  else
  {
    if (qword_10119C728 != -1)
      swift_once(&qword_10119C728, sub_1006DD7C0);
    v18 = type metadata accessor for Logger(0);
    sub_100048B14(v18, (uint64_t)qword_10124D830);
    v19 = swift_retain_n(v0, 2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      *(_DWORD *)v22 = 136446210;
      v80[0] = v23;
      v24 = StaticString.description.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
      v26 = v25;
      v79 = sub_100322200(v24, v25, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);
      swift_release_n(v1, 2, v27);
      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[ScenePhaseSupport:%{public}s] Removing notification observers", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2, v67);
    }
    v59 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_notificationObservers);
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC5MusicP33_9EC7F29AAFE3C0F592FE132F62B9CAB121HostedScenePhaseModel_notificationObservers) = _swiftEmptyArrayStorage;
    v68 = *(_QWORD *)(v59 + 16);
    if (v68)
    {
      v69 = (void *)objc_opt_self(NSNotificationCenter);
      v70 = v59 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_10004FA40(v70, (uint64_t)v80);
        v71 = objc_msgSend(v69, "defaultCenter");
        v72 = v81;
        v73 = sub_100007E68(v80, v81);
        v74 = _bridgeAnythingToObjectiveC<A>(_:)(v73, v72);
        objc_msgSend(v71, "removeObserver:", v74);

        swift_unknownObjectRelease(v74);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v80);
        v70 += 32;
        --v68;
      }
      while (v68);
      goto LABEL_20;
    }
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v59).n128_u64[0];
  return result;
}

uint64_t sub_100404764@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[6];

  v22 = a3;
  v23 = a5;
  v8 = type metadata accessor for ScenePhase(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v12 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v13 = swift_allocObject(&unk_1010C4288, 24, 7);
  swift_weakInit(v13 + 16, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(&unk_1010C42B0, v15 + v10, v14 | 7);
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_100404F00;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100404C98;
  aBlock[3] = &unk_1010C42C8;
  v17 = _Block_copy(aBlock);
  v18 = a1;
  v19 = objc_msgSend(v11, "addObserverForName:object:queue:usingBlock:", v18, v22, v12, v17, swift_release().n128_f64[0]);
  _Block_release(v17);

  result = swift_getObjectType();
  v21 = v23;
  v23[3] = result;
  *v21 = v19;
  return result;
}

double sub_100404950(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t KeyPath;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];

  v7 = type metadata accessor for ScenePhase(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    if (qword_10119C728 != -1)
      swift_once(&qword_10119C728, sub_1006DD7C0);
    v14 = type metadata accessor for Logger(0);
    sub_100048B14(v14, (uint64_t)qword_10124D830);
    v15 = a3;
    swift_retain_n(v13, 2);
    v16 = v15;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v36 = swift_slowAlloc(64, -1);
      v41 = v36;
      *(_DWORD *)v19 = 136446466;
      v37 = a4;
      v20 = StaticString.description.getter(*(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(unsigned __int8 *)(v13 + 32));
      v38 = v7;
      v22 = v21;
      v39 = sub_100322200(v20, v21, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      swift_release_n(v13, 2, v23);
      swift_bridgeObjectRelease(v22);
      *(_WORD *)(v19 + 12) = 2082;
      v39 = (uint64_t)a3;
      v24 = v16;
      v25 = sub_100007E8C(qword_1011B2720);
      v26 = String.init<A>(describing:)(&v39, v25);
      v28 = v27;
      v39 = sub_100322200(v26, v27, &v41);
      a4 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);

      v29 = v28;
      v7 = v38;
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[ScenePhaseSupport:%{public}s] Received notification %{public}s)", (uint8_t *)v19, 0x16u);
      v30 = v36;
      swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

      swift_release_n(v13, 2, v31);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
    KeyPath = swift_getKeyPath(&unk_100EB9E78);
    __chkstk_darwin(KeyPath);
    *(&v35 - 2) = v13;
    *(&v35 - 1) = (uint64_t)v10;
    v41 = v13;
    v33 = sub_100404F78();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v41, KeyPath, sub_100404F60, &v35 - 4, (char *)&type metadata for () + 8, v33);
    v34 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v34);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100404C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100404D3C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_100404764(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

_QWORD *sub_100404D44(uint64_t a1, void (*a2)(_OWORD *__return_ptr, _QWORD, char *))
{
  int64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v13[2];
  _QWORD *v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v14 = _swiftEmptyArrayStorage;
    sub_10035C860(0, v2, 0);
    v3 = _swiftEmptyArrayStorage;
    v6 = sub_100007E8C(&qword_1011B2710);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (char *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
    v9 = *(_QWORD *)(v7 + 72);
    do
    {
      a2(v13, *(_QWORD *)v8, &v8[*(int *)(v6 + 48)]);
      v14 = v3;
      v11 = v3[2];
      v10 = v3[3];
      if (v11 >= v10 >> 1)
      {
        sub_10035C860(v10 > 1, v11 + 1, 1);
        v3 = v14;
      }
      v8 += v9;
      v3[2] = v11 + 1;
      sub_100048ABC(v13, &v3[4 * v11 + 4]);
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_100404E60()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100404E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ScenePhase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_100404F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScenePhase(0) - 8) + 80);
  return sub_100404950(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_100404F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100404F50(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100404F60()
{
  uint64_t v0;

  return sub_100403F14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100404F78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B2718;
  if (!qword_1011B2718)
  {
    v1 = type metadata accessor for HostedScenePhaseModel(255);
    result = swift_getWitnessTable(&unk_100EB9E58, v1);
    atomic_store(result, (unint64_t *)&qword_1011B2718);
  }
  return result;
}

uint64_t sub_100404FC0()
{
  return sub_100404F60();
}

uint64_t sub_100404FD4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100408B10(a1, a2, a3, type metadata accessor for MenuOption);
}

uint64_t *sub_100404FE0(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  void *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  char *__dst;

  v5 = a3[2];
  v6 = a3[3];
  v7 = a3[4];
  v8 = type metadata accessor for MenuOption(0, v5, v6, v7);
  v9 = *(_DWORD *)(*(_QWORD *)(v8 - 8) + 80);
  if ((v9 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v9 + 16) & ~(unint64_t)v9));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = *(int *)(v8 + 44);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for MenuOption.Destination(0, v5, v6, v7);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    v16 = *(void **)v13;
    *v12 = *(_QWORD *)v13;
    if (EnumCaseMultiPayload == 1)
    {
      v17 = (int *)type metadata accessor for SegueContext(0);
      v18 = v17[5];
      __dst = (char *)v12 + v18;
      v19 = &v13[v18];
      v20 = type metadata accessor for GenericMusicItem(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      v23 = v16;
      if (v22(v19, 1, v20))
      {
        v24 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      *((_BYTE *)v12 + v17[6]) = v13[v17[6]];
      v32 = v17[7];
      v33 = (_QWORD *)((char *)v12 + v32);
      v34 = &v13[v32];
      if (*(_QWORD *)v34)
      {
        v35 = *((_QWORD *)v34 + 1);
        *v33 = *(_QWORD *)v34;
        v33[1] = v35;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v33 = *(_OWORD *)v34;
      }
      v29 = v12;
      v30 = v14;
      v31 = 1;
    }
    else
    {
      v26 = *((_QWORD *)v13 + 1);
      v27 = *((_QWORD *)v13 + 2);
      v12[1] = v26;
      v12[2] = v27;
      v28 = v16;
      swift_bridgeObjectRetain();
      v29 = v12;
      v30 = v14;
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(v29, v30, v31);
  }
  return a1;
}

uint64_t type metadata accessor for MenuOption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MenuOption);
}

uint64_t type metadata accessor for MenuOption.Destination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MenuOption.Destination);
}

double sub_1004051E4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v3 = a1;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = v3 + *(int *)(type metadata accessor for MenuOption(0, v4, v5, v6) + 44);
  v8 = type metadata accessor for MenuOption.Destination(0, v4, v5, v6);
  LODWORD(v3) = swift_getEnumCaseMultiPayload(v7, v8);

  if ((_DWORD)v3 == 1)
  {
    v9 = type metadata accessor for SegueContext(0);
    v10 = v7 + *(int *)(v9 + 20);
    v11 = type metadata accessor for GenericMusicItem(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    if (*(_QWORD *)(v7 + *(int *)(v9 + 28)))
      *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v7 + 16)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100405300(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  void *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a3[2];
  v7 = a3[3];
  v8 = a3[4];
  v9 = *(int *)(type metadata accessor for MenuOption(0, v6, v7, v8) + 44);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for MenuOption.Destination(0, v6, v7, v8);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  v14 = *(void **)v11;
  *v10 = *(_QWORD *)v11;
  if (EnumCaseMultiPayload == 1)
  {
    v15 = (int *)type metadata accessor for SegueContext(0);
    v16 = v15[5];
    __dst = (char *)v10 + v16;
    v17 = &v11[v16];
    v18 = type metadata accessor for GenericMusicItem(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v14;
    if (v20(v17, 1, v18))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    *((_BYTE *)v10 + v15[6]) = v11[v15[6]];
    v27 = v15[7];
    v28 = (_QWORD *)((char *)v10 + v27);
    v29 = &v11[v27];
    if (*(_QWORD *)v29)
    {
      v30 = *((_QWORD *)v29 + 1);
      *v28 = *(_QWORD *)v29;
      v28[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v26 = 1;
  }
  else
  {
    v23 = *((_QWORD *)v11 + 1);
    v24 = *((_QWORD *)v11 + 2);
    v10[1] = v23;
    v10[2] = v24;
    v25 = v14;
    swift_bridgeObjectRetain();
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v26);
  return a1;
}

_QWORD *sub_1004054B8(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  void *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *__dst;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a3[2];
  v8 = a3[3];
  v9 = a3[4];
  v10 = type metadata accessor for MenuOption(0, v7, v8, v9);
  if (a1 != a2)
  {
    v11 = *(int *)(v10 + 44);
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for MenuOption.Destination(0, v7, v8, v9);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    v16 = *(void **)v13;
    *v12 = *(_QWORD *)v13;
    if (EnumCaseMultiPayload == 1)
    {
      v17 = (int *)type metadata accessor for SegueContext(0);
      v18 = v17[5];
      __dst = (char *)v12 + v18;
      v19 = &v13[v18];
      v20 = type metadata accessor for GenericMusicItem(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      v23 = v16;
      if (v22(v19, 1, v20))
      {
        v24 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      *((_BYTE *)v12 + v17[6]) = v13[v17[6]];
      v27 = v17[7];
      v28 = (_QWORD *)((char *)v12 + v27);
      v29 = &v13[v27];
      if (*(_QWORD *)v29)
      {
        v30 = *((_QWORD *)v29 + 1);
        *v28 = *(_QWORD *)v29;
        v28[1] = v30;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
      }
      v26 = 1;
    }
    else
    {
      v12[1] = *((_QWORD *)v13 + 1);
      v12[2] = *((_QWORD *)v13 + 2);
      v25 = v16;
      swift_bridgeObjectRetain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v26);
  }
  return a1;
}

_OWORD *sub_1004056A8(_OWORD *a1, _OWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v5 = a3[2];
  v6 = a3[3];
  v7 = a3[4];
  v8 = *(int *)(type metadata accessor for MenuOption(0, v5, v6, v7) + 44);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for MenuOption.Destination(0, v5, v6, v7);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    *v9 = *v10;
    v12 = (int *)type metadata accessor for SegueContext(0);
    v13 = v12[5];
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = type metadata accessor for GenericMusicItem(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    *((_BYTE *)v9 + v12[6]) = *((_BYTE *)v10 + v12[6]);
    v19 = v12[7];
    v20 = (_QWORD *)((char *)v9 + v19);
    v21 = (_QWORD *)((char *)v10 + v19);
    v22 = *v21;
    if (*v21)
    {
      v23 = v21[1];
      *v20 = v22;
      v20[1] = v23;
    }
    else
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10040583C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[2];
  v9 = a3[3];
  v10 = a3[4];
  v11 = type metadata accessor for MenuOption(0, v8, v9, v10);
  if (a1 != a2)
  {
    v12 = *(int *)(v11 + 44);
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for MenuOption.Destination(0, v8, v9, v10);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v13, v15);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      *v13 = *v14;
      v17 = (int *)type metadata accessor for SegueContext(0);
      v18 = v17[5];
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = type metadata accessor for GenericMusicItem(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      *((_BYTE *)v13 + v17[6]) = *((_BYTE *)v14 + v17[6]);
      v24 = v17[7];
      v25 = (_QWORD *)((char *)v13 + v24);
      v26 = (_QWORD *)((char *)v14 + v24);
      v27 = *v26;
      if (*v26)
      {
        v28 = v26[1];
        *v25 = v27;
        v25[1] = v28;
      }
      else
      {
        *(_OWORD *)v25 = *(_OWORD *)v26;
      }
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(v16 + 64));
    }
  }
  return a1;
}

uint64_t sub_1004059F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100405A00);
}

uint64_t sub_100405A00(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_100409400(a1, a2, a3, type metadata accessor for MenuOption);
}

uint64_t sub_100405A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100405A18);
}

uint64_t sub_100405A18(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_100409464(a1, a2, a3, a4, type metadata accessor for MenuOption);
}

uint64_t type metadata accessor for MenuOptionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MenuOptionView);
}

uint64_t sub_100405A30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EB9ED8;
  result = type metadata accessor for SegueContext(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v4);
    return 0;
  }
  return result;
}

char *sub_100405AA0(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v18[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v9 = (int *)type metadata accessor for SegueContext(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for GenericMusicItem(0);
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      v16 = v8;
      if (v15(v12, 1, v13))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      a1[v9[6]] = *((_BYTE *)a2 + v9[6]);
      v25 = v9[7];
      v26 = &a1[v25];
      v27 = (char **)((char *)a2 + v25);
      if (*v27)
      {
        v28 = v27[1];
        *(_QWORD *)v26 = *v27;
        *((_QWORD *)v26 + 1) = v28;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v26 = *(_OWORD *)v27;
      }
      v22 = a1;
      v23 = a3;
      v24 = 1;
    }
    else
    {
      v19 = a2[1];
      v20 = a2[2];
      *((_QWORD *)a1 + 1) = v19;
      *((_QWORD *)a1 + 2) = v20;
      v21 = v8;
      swift_bridgeObjectRetain();
      v22 = a1;
      v23 = a3;
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
  }
  return a1;
}

double sub_100405C30(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);

  if (EnumCaseMultiPayload == 1)
  {
    v4 = type metadata accessor for SegueContext(0);
    v5 = a1 + *(int *)(v4 + 20);
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    if (*(_QWORD *)(a1 + *(int *)(v4 + 28)))
      *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100405D00(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v8 = (int *)type metadata accessor for SegueContext(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (const void *)(a2 + v9);
    v12 = type metadata accessor for GenericMusicItem(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    v15 = v7;
    if (v14(v11, 1, v12))
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)a1 + v8[6]) = *(_BYTE *)(a2 + v8[6]);
    v21 = v8[7];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    if (*v23)
    {
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
    }
    v20 = 1;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(_QWORD *)(a2 + 16);
    a1[1] = v17;
    a1[2] = v18;
    v19 = v7;
    swift_bridgeObjectRetain();
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v20);
  return a1;
}

_QWORD *sub_100405E5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  if (a1 != a2)
  {
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = (void *)*a2;
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (int *)type metadata accessor for SegueContext(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for GenericMusicItem(0);
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v15 = v7;
      if (v14(v11, 1, v12))
      {
        v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
      v19 = v8[7];
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      if (*v21)
      {
        v22 = v21[1];
        *v20 = *v21;
        v20[1] = v22;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v20 = *(_OWORD *)v21;
      }
      v18 = 1;
    }
    else
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      v17 = v7;
      swift_bridgeObjectRetain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v18);
  }
  return a1;
}

_QWORD *sub_100405FDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for SegueContext(0);
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for GenericMusicItem(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    v13 = v6[7];
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = *v15;
    if (*v15)
    {
      v17 = v15[1];
      *v14 = v16;
      v14[1] = v17;
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100406124(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 - 8);
    (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for SegueContext(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for GenericMusicItem(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
      v14 = v7[7];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      v17 = *v16;
      if (*v16)
      {
        v18 = v16[1];
        *v15 = v17;
        v15[1] = v18;
      }
      else
      {
        *(_OWORD *)v15 = *(_OWORD *)v16;
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100406284(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EB9F10;
  result = type metadata accessor for MenuOption.Destination(319, a1[2], a1[3], a1[4]);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 5);
    return 0;
  }
  return result;
}

uint64_t *sub_100406300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  void *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *__dst;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v20 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 44);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    v11 = *(void **)v8;
    *v7 = *(_QWORD *)v8;
    if (EnumCaseMultiPayload == 1)
    {
      v12 = (int *)type metadata accessor for SegueContext(0);
      v13 = v12[5];
      __dst = (char *)v7 + v13;
      v14 = &v8[v13];
      v15 = type metadata accessor for GenericMusicItem(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v18 = v11;
      if (v17(v14, 1, v15))
      {
        v19 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      *((_BYTE *)v7 + v12[6]) = v8[v12[6]];
      v27 = v12[7];
      v28 = (_QWORD *)((char *)v7 + v27);
      v29 = &v8[v27];
      if (*(_QWORD *)v29)
      {
        v30 = *((_QWORD *)v29 + 1);
        *v28 = *(_QWORD *)v29;
        v28[1] = v30;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
      }
      v24 = v7;
      v25 = v9;
      v26 = 1;
    }
    else
    {
      v21 = *((_QWORD *)v8 + 1);
      v22 = *((_QWORD *)v8 + 2);
      v7[1] = v21;
      v7[2] = v22;
      v23 = v11;
      swift_bridgeObjectRetain();
      v24 = v7;
      v25 = v9;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
  }
  return v3;
}

double sub_1004064CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 44);
  v5 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32));
  LODWORD(a2) = swift_getEnumCaseMultiPayload(v4, v5);

  if ((_DWORD)a2 == 1)
  {
    v6 = type metadata accessor for SegueContext(0);
    v7 = v4 + *(int *)(v6 + 20);
    v8 = type metadata accessor for GenericMusicItem(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    if (*(_QWORD *)(v4 + *(int *)(v6 + 28)))
      *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + 16)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1004065C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  void *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 44);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  v10 = *(void **)v7;
  *v6 = *(_QWORD *)v7;
  if (EnumCaseMultiPayload == 1)
  {
    v11 = (int *)type metadata accessor for SegueContext(0);
    v12 = v11[5];
    __dst = (char *)v6 + v12;
    v13 = &v7[v12];
    v14 = type metadata accessor for GenericMusicItem(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v17 = v10;
    if (v16(v13, 1, v14))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    *((_BYTE *)v6 + v11[6]) = v7[v11[6]];
    v23 = v11[7];
    v24 = (_QWORD *)((char *)v6 + v23);
    v25 = &v7[v23];
    if (*(_QWORD *)v25)
    {
      v26 = *((_QWORD *)v25 + 1);
      *v24 = *(_QWORD *)v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    v22 = 1;
  }
  else
  {
    v19 = *((_QWORD *)v7 + 1);
    v20 = *((_QWORD *)v7 + 2);
    v6[1] = v19;
    v6[2] = v20;
    v21 = v10;
    swift_bridgeObjectRetain();
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v22);
  return a1;
}

_QWORD *sub_100406760(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  void *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *__dst;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 44);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    v12 = *(void **)v9;
    *v8 = *(_QWORD *)v9;
    if (EnumCaseMultiPayload == 1)
    {
      v13 = (int *)type metadata accessor for SegueContext(0);
      v14 = v13[5];
      __dst = (char *)v8 + v14;
      v15 = &v9[v14];
      v16 = type metadata accessor for GenericMusicItem(0);
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      v19 = v12;
      if (v18(v15, 1, v16))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      *((_BYTE *)v8 + v13[6]) = v9[v13[6]];
      v23 = v13[7];
      v24 = (_QWORD *)((char *)v8 + v23);
      v25 = &v9[v23];
      if (*(_QWORD *)v25)
      {
        v26 = *((_QWORD *)v25 + 1);
        *v24 = *(_QWORD *)v25;
        v24[1] = v26;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v24 = *(_OWORD *)v25;
      }
      v22 = 1;
    }
    else
    {
      v8[1] = *((_QWORD *)v9 + 1);
      v8[2] = *((_QWORD *)v9 + 2);
      v21 = v12;
      swift_bridgeObjectRetain();
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v22);
  }
  return a1;
}

_OWORD *sub_100406930(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v4 = *(int *)(a3 + 44);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    *v5 = *v6;
    v8 = (int *)type metadata accessor for SegueContext(0);
    v9 = v8[5];
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    v12 = type metadata accessor for GenericMusicItem(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)v5 + v8[6]) = *((_BYTE *)v6 + v8[6]);
    v15 = v8[7];
    v16 = (_QWORD *)((char *)v5 + v15);
    v17 = (_QWORD *)((char *)v6 + v15);
    v18 = *v17;
    if (*v17)
    {
      v19 = v17[1];
      *v16 = v18;
      v16[1] = v19;
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100406AA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 44);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      *v9 = *v10;
      v13 = (int *)type metadata accessor for SegueContext(0);
      v14 = v13[5];
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = type metadata accessor for GenericMusicItem(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *((_BYTE *)v9 + v13[6]) = *((_BYTE *)v10 + v13[6]);
      v20 = v13[7];
      v21 = (_QWORD *)((char *)v9 + v20);
      v22 = (_QWORD *)((char *)v10 + v20);
      v23 = *v22;
      if (*v22)
      {
        v24 = v22[1];
        *v21 = v23;
        v21[1] = v24;
      }
      else
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
  }
  return a1;
}

uint64_t sub_100406C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100406C48);
}

uint64_t sub_100406C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v9);
  }
}

uint64_t sub_100406CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100406CE4);
}

uint64_t sub_100406CE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = type metadata accessor for MenuOption.Destination(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), *(_QWORD *)(a4 + 32));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100406D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100409780(a1, a2, a3, (uint64_t)&unk_100F9FBAC);
}

uint64_t sub_100406D6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  double v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t OpaqueTypeConformance2;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD v147[4];
  _OWORD v148[7];

  v143 = a2;
  v142 = type metadata accessor for AccessibilityTraits(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for AccessibilityChildBehavior(0);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v137 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011B28A8);
  __chkstk_darwin(v5);
  v7 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100007E8C(&qword_1011B28B0);
  __chkstk_darwin(v111);
  v9 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011B28B8);
  __chkstk_darwin(v116);
  v112 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011B28C0);
  __chkstk_darwin(v122);
  v118 = (uint64_t)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B28C8);
  v109 = v12;
  __chkstk_darwin(v12);
  v125 = (uint64_t)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B28D0);
  v133 = *(_QWORD *)(v14 - 8);
  v113 = v14;
  __chkstk_darwin(v14);
  v124 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B28D8);
  v134 = *(_QWORD *)(v16 - 8);
  v17 = v16;
  v117 = v16;
  __chkstk_darwin(v16);
  v126 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011B28E0);
  v136 = *(_QWORD *)(v19 - 8);
  v132 = v19;
  __chkstk_darwin(v19);
  v131 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  v106 = a1[2];
  v108 = v21;
  v107 = v22;
  v23 = type metadata accessor for MenuOptionLinkModifier(255, v106, v21, v22);
  v24 = type metadata accessor for ModifiedContent(0, v19, v23);
  v135 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v130 = (char *)&v106 - v25;
  v110 = sub_100407C90();
  *(_QWORD *)&v148[0] = v12;
  *((_QWORD *)&v148[0] + 1) = v110;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v148, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  *(_QWORD *)&v148[0] = v14;
  *((_QWORD *)&v148[0] + 1) = OpaqueTypeConformance2;
  v115 = swift_getOpaqueTypeConformance2(v148, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  *(_QWORD *)&v148[0] = v17;
  *((_QWORD *)&v148[0] + 1) = v115;
  v26 = swift_getOpaqueTypeConformance2(v148, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v119 = v26;
  WitnessTable = swift_getWitnessTable(&unk_100EB9FE8, v23);
  v147[2] = v26;
  v147[3] = WitnessTable;
  v120 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  *(_QWORD *)&v148[0] = v24;
  *((_QWORD *)&v148[0] + 1) = v120;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, v148, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v128 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v121 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v30 = (char *)&v106 - v29;
  v31 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v32 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v31);
  v127 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v34 = (char *)&v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v123 = (char *)&v106 - v36;
  __chkstk_darwin(v37);
  v129 = (uint64_t)&v106 - v38;
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v39);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v40 = sub_100007E8C(&qword_1011B2910);
  v41 = sub_100407868(v144, (uint64_t)&v7[*(int *)(v40 + 44)]);
  LOBYTE(v14) = static Edge.Set.leading.getter(v41);
  v42 = EdgeInsets.init(_all:)(16.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  sub_10004A160((uint64_t)v7, (uint64_t)v9, &qword_1011B28A8);
  v49 = &v9[*(int *)(v111 + 36)];
  *v49 = v14;
  *((double *)v49 + 1) = v42;
  *((_QWORD *)v49 + 2) = v44;
  *((_QWORD *)v49 + 3) = v46;
  *((_QWORD *)v49 + 4) = v48;
  v49[40] = 0;
  sub_10004FF60((uint64_t)v7, &qword_1011B28A8);
  LOBYTE(v7) = static Edge.Set.trailing.getter(v50);
  v51 = EdgeInsets.init(_all:)(16.0);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = v112;
  sub_10004A160((uint64_t)v9, v112, &qword_1011B28B0);
  v59 = v58 + *(int *)(v116 + 36);
  *(_BYTE *)v59 = (_BYTE)v7;
  *(double *)(v59 + 8) = v51;
  *(_QWORD *)(v59 + 16) = v53;
  *(_QWORD *)(v59 + 24) = v55;
  *(_QWORD *)(v59 + 32) = v57;
  *(_BYTE *)(v59 + 40) = 0;
  v60 = sub_10004FF60((uint64_t)v9, &qword_1011B28B0);
  v61 = static Alignment.center.getter(v60);
  v105 = 1;
  v104 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v148, 0, 1, 0, 1, 0, 1, 0x404A000000000000, 0, 0, v104, 0, v105, v61, v62);
  v63 = v118;
  sub_10004A160(v58, v118, &qword_1011B28B8);
  v64 = (_OWORD *)(v63 + *(int *)(v122 + 36));
  v65 = v148[5];
  v64[4] = v148[4];
  v64[5] = v65;
  v64[6] = v148[6];
  v66 = v148[1];
  *v64 = v148[0];
  v64[1] = v66;
  v67 = v148[3];
  v64[2] = v148[2];
  v64[3] = v67;
  v68 = sub_10004FF60(v58, &qword_1011B28B8);
  static Color.white.getter(v68);
  v69 = Color.opacity(_:)(0.1);
  swift_release();
  LOBYTE(v58) = static Edge.Set.all.getter(v70);
  v71 = v125;
  sub_10004A160(v63, v125, &qword_1011B28C0);
  v72 = v109;
  v73 = v71 + *(int *)(v109 + 36);
  *(_QWORD *)v73 = v69;
  *(_BYTE *)(v73 + 8) = v58;
  sub_10004FF60(v63, &qword_1011B28C0);
  v74 = v124;
  View.corner(_:)(0x4030000000000000, -1, 0, v72, v110);
  sub_10004FF60(v71, &qword_1011B28C8);
  v75 = Border.artwork.unsafeMutableAddressor();
  v76 = *((double *)v75 + 1);
  LOBYTE(v71) = *((_BYTE *)v75 + 16);
  swift_retain();
  v77 = v126;
  v78 = v113;
  View.border(_:corner:)(v79, v71, 0x4030000000000000, -1, 0, v113, OpaqueTypeConformance2, v76);
  v80 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v133 + 8))(v74, v78, v80);
  v81 = v131;
  v82 = v117;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(0x4030000000000000, -1, 0, 0, 0, 1, 1, v117, 0.0, v115);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v77, v82);
  v83 = v106;
  v84 = v108;
  v85 = v107;
  v86 = type metadata accessor for MenuOption(0, v106, v108, v107);
  v87 = v130;
  v88 = v132;
  sub_100407B4C((uint64_t)v144 + *(int *)(v86 + 44), v132, v83, v119, v84, v85);
  v89 = (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v81, v88);
  v90 = v137;
  static AccessibilityChildBehavior.combine.getter(v89);
  v91 = v120;
  View.accessibilityElement(children:)(v90, v24, v120);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v90, v139);
  v92 = (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v87, v24);
  v93 = v140;
  static AccessibilityTraits.isButton.getter(v92);
  v147[0] = v24;
  v147[1] = v91;
  v94 = swift_getOpaqueTypeConformance2(v147, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v95 = v121;
  View.accessibilityAddTraits(_:)(v93, v121, v94);
  v96 = *(void (**)(char *, uint64_t))(v141 + 8);
  v97 = v142;
  v96(v93, v142);
  v98 = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v30, v95);
  static AccessibilityTraits.isStaticText.getter(v98);
  v99 = (uint64_t)v123;
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v93, v32);
  v96(v93, v97);
  v100 = *(void (**)(char *, uint64_t))(v127 + 8);
  v100(v34, v32);
  v101 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v145 = v94;
  v146 = v101;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v32);
  v102 = v129;
  sub_10081EB14(v99, v32, v129);
  v100((char *)v99, v32);
  sub_1000EA744(v102, v32, v143);
  return ((uint64_t (*)(uint64_t, uint64_t))v100)(v102, v32);
}

uint64_t sub_100407868@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];

  v4 = sub_100007E8C(&qword_1011B2918);
  __chkstk_darwin(v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - v8;
  v10 = sub_100007E8C(&qword_1011B2920);
  __chkstk_darwin(v10);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v37 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v37 - v17;
  v20 = *a1;
  v19 = a1[1];
  v21 = sub_1004872C4((uint64_t)&off_1010ABFE8);
  swift_bridgeObjectRetain();
  v22 = Text.init(optional:options:)(v20, v19, v21);
  if (v25)
  {
    v26 = v22;
    v27 = v23;
    v28 = v25;
    v29 = v24 & 1;
    LOBYTE(v37[0]) = v24 & 1;
    Text.with(style:)(2, v22, v23, v24 & 1, v25, (uint64_t)v15);
    sub_100055BAC(v26, v27, v29);
    swift_bridgeObjectRelease(v28);
    v30 = sub_100007E8C(&qword_10119EBA0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 0, 1, v30);
  }
  else
  {
    v31 = sub_100007E8C(&qword_10119EBA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 1, 1, v31);
  }
  sub_100408A58((uint64_t)v15, (uint64_t)v18);
  v37[0] = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  v37[1] = 0x3FE0000000000000;
  v32 = sub_100007E8C(&qword_1011B2928);
  v33 = sub_100408AA0();
  View.accessibilityHidden(_:)(1, v32, v33);
  swift_release();
  sub_10004A160((uint64_t)v18, (uint64_t)v12, &qword_1011B2920);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011B2918);
  sub_10004A160((uint64_t)v12, a2, &qword_1011B2920);
  v34 = sub_100007E8C(qword_1011B2938);
  v35 = a2 + *(int *)(v34 + 48);
  *(_QWORD *)v35 = 0;
  *(_BYTE *)(v35 + 8) = 1;
  sub_10004A160((uint64_t)v6, a2 + *(int *)(v34 + 64), &qword_1011B2918);
  sub_10004FF60((uint64_t)v9, &qword_1011B2918);
  sub_10004FF60((uint64_t)v18, &qword_1011B2920);
  sub_10004FF60((uint64_t)v6, &qword_1011B2918);
  return sub_10004FF60((uint64_t)v12, &qword_1011B2920);
}

uint64_t sub_100407B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;

  v12 = type metadata accessor for MenuOption.Destination(0, a3, a5, a6);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v22 - v14;
  v16 = type metadata accessor for MenuOptionLinkModifier(0, a3, a5, a6);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v22 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, a1, v12, v18);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v15, v12);
  View.modifier<A>(_:)(v20, a2, v16, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
}

uint64_t type metadata accessor for MenuOptionLinkModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MenuOptionLinkModifier);
}

unint64_t sub_100407C90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B28E8;
  if (!qword_1011B28E8)
  {
    v1 = sub_100044B54(&qword_1011B28C8);
    sub_10005610C(&qword_1011B28F0, &qword_1011B28C0, (void (*)(void))sub_100407D34);
    sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B28E8);
  }
  return result;
}

uint64_t sub_100407D34()
{
  return sub_10005610C(&qword_1011B28F8, &qword_1011B28B8, (void (*)(void))sub_100407D58);
}

unint64_t sub_100407D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B2900;
  if (!qword_1011B2900)
  {
    v1 = sub_100044B54(&qword_1011B28B0);
    sub_100049F28(&qword_1011B2908, &qword_1011B28A8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B2900);
  }
  return result;
}

uint64_t sub_100407DDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t AssociatedConformanceWitness;
  void *v109;

  v88 = a1;
  v91 = a3;
  WitnessTable = swift_getWitnessTable(&unk_100EB9FE8, a2);
  v5 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v6 = type metadata accessor for SegueLink(255);
  v95 = type metadata accessor for ModifiedContent(0, v5, v6);
  v80 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v83 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  v10 = type metadata accessor for SegueContext(0);
  __chkstk_darwin(v10);
  v81 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PlainButtonStyle(0);
  v79 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v78 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2[4];
  v15 = a2[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v14, v15, &unk_100FB0834, &unk_100FB0844);
  v17 = type metadata accessor for ModifiedContent(255, AssociatedTypeWitness, &type metadata for _PaddingLayout);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v14, v15, AssociatedTypeWitness, &unk_100FB0834, &unk_100FB083C);
  v109 = &protocol witness table for _PaddingLayout;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v104 = v17;
  v105 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v104, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 0);
  v20 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v5);
  v104 = v17;
  v105 = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v104, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 1);
  v85 = v5;
  v104 = v5;
  v105 = OpaqueTypeMetadata2;
  v76 = OpaqueTypeMetadata2;
  v94 = v20;
  v106 = v20;
  v107 = OpaqueTypeConformance2;
  v74 = OpaqueTypeConformance2;
  v22 = type metadata accessor for NavigationLink(0, &v104);
  v75 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v73 - v23;
  v25 = swift_getWitnessTable(&protocol conformance descriptor for NavigationLink<A, B>, v22);
  v26 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v104 = v22;
  v105 = v12;
  v90 = v12;
  v92 = v26;
  v93 = v25;
  v106 = v25;
  v107 = v26;
  v27 = swift_getOpaqueTypeMetadata2(0, &v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v73 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v29 = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v77 = (uint64_t)&v73 - v31;
  v32 = a2[3];
  v33 = type metadata accessor for MenuOption.Destination(0, v15, v32, v14);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v73 - v35;
  v89 = type metadata accessor for _ConditionalContent(0, v27, v95);
  v87 = *(_QWORD *)(v89 - 8);
  v37 = __chkstk_darwin(v89);
  v86 = (char *)&v73 - v38;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v34 + 16))(v36, v84, v33, v37);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v33);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v40 = v81;
    sub_1004097B8((uint64_t)v36, v81);
    v41 = (uint64_t)v83;
    v42 = v94;
    sub_100609414(v40, v85, v94);
    v43 = sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    v102 = v42;
    v103 = v43;
    v44 = v95;
    v45 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v95);
    v46 = v82;
    sub_10081EB14(v41, v44, v82);
    v47 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v47(v41, v44);
    sub_1000EA744(v46, v44, v41);
    v48 = v90;
    v104 = v22;
    v105 = v90;
    v106 = v93;
    v107 = v92;
    v49 = swift_getOpaqueTypeConformance2(&v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v50 = (uint64_t)v86;
    sub_1008171F4(v41, v27, v44, v49, v45);
    v47(v41, v44);
    v47(v46, v44);
    sub_1000AA41C(v40);
  }
  else
  {
    v83 = *(char **)v36;
    v84 = *((_QWORD *)v36 + 2);
    __chkstk_darwin(EnumCaseMultiPayload);
    *(&v73 - 6) = v15;
    *(&v73 - 5) = v32;
    *(&v73 - 4) = v14;
    *(&v73 - 3) = v51;
    *(&v73 - 2) = v52;
    *(&v73 - 1) = v53;
    __chkstk_darwin(v54);
    *(&v73 - 4) = v15;
    *(&v73 - 3) = v32;
    v55 = v88;
    *(&v73 - 2) = v14;
    *(&v73 - 1) = v55;
    v56 = v94;
    v58 = sub_1004089A0((uint64_t)sub_1004097FC, v57, (uint64_t)sub_10040980C, (uint64_t)(&v73 - 6), v85, v76, v94, v74);
    v59 = v78;
    PlainButtonStyle.init()(v58);
    v48 = v90;
    v61 = v92;
    v60 = v93;
    View.buttonStyle<A>(_:)(v59, v22, v90, v93, v92);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v59, v48);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v24, v22);
    v104 = v22;
    v105 = v48;
    v106 = v60;
    v107 = v61;
    v62 = swift_getOpaqueTypeConformance2(&v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v63 = v77;
    sub_10081EB14((uint64_t)v29, v27, v77);
    v64 = *(void (**)(char *, uint64_t))(v73 + 8);
    v64(v29, v27);
    sub_1000EA744(v63, v27, (uint64_t)v29);
    v65 = sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    v96 = v56;
    v97 = v65;
    v44 = v95;
    v66 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v95);
    v50 = (uint64_t)v86;
    sub_100817130((uint64_t)v29, v27, v44, v62, v66);

    v67 = swift_bridgeObjectRelease(v84);
    ((void (*)(char *, uint64_t, __n128))v64)(v29, v27, v67);
    v64((char *)v63, v27);
  }
  v104 = v22;
  v105 = v48;
  v106 = v93;
  v107 = v92;
  v68 = swift_getOpaqueTypeConformance2(&v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v69 = sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
  v100 = v94;
  v101 = v69;
  v70 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v44);
  v98 = v68;
  v99 = v70;
  v71 = v89;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v89);
  sub_1000EA744(v50, v71, v91);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v50, v71);
}

uint64_t sub_1004085E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  void (*v35)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t WitnessTable;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;

  v42 = a3;
  v43 = a2;
  v45 = a6;
  v38 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a5, a4, &unk_100FB0834, &unk_100FB0844);
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v11 = (char *)&v37 - v10;
  v12 = type metadata accessor for ModifiedContent(0, AssociatedTypeWitness, &type metadata for _PaddingLayout);
  v44 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v37 = (char *)&v37 - v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, a4, AssociatedTypeWitness, &unk_100FB0834, &unk_100FB083C);
  v48 = AssociatedConformanceWitness;
  v49 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v46 = v12;
  v47 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v46, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 0);
  v41 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v37 - v20;
  v46 = a1;
  (*(void (**)(uint64_t, uint64_t, __n128))(a5 + 24))(v38, a5, v19);
  View.padding(_:)(AssociatedTypeWitness, AssociatedConformanceWitness, 44.0);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, AssociatedTypeWitness);
  v22 = v43;
  if (!v42)
    v22 = 0;
  v23 = 0xE000000000000000;
  if (v42)
    v23 = v42;
  v46 = v22;
  v47 = v23;
  v24 = sub_100055B68();
  swift_bridgeObjectRetain();
  v25 = Text.init<A>(_:)(&v46, &type metadata for String, v24);
  v27 = v26;
  v29 = v28;
  v31 = v30 & 1;
  v32 = WitnessTable;
  v33 = v37;
  View.navigationTitle(_:)();
  sub_100055BAC(v25, v27, v31);
  v34 = swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v33, v12, v34);
  v46 = v12;
  v47 = v32;
  swift_getOpaqueTypeConformance2(&v46, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 1);
  sub_10081EB14((uint64_t)v17, OpaqueTypeMetadata2, (uint64_t)v21);
  v35 = *(void (**)(char *, uint64_t))(v41 + 8);
  v35(v17, OpaqueTypeMetadata2);
  sub_1000EA744((uint64_t)v21, OpaqueTypeMetadata2, v45);
  return ((uint64_t (*)(char *, uint64_t))v35)(v21, OpaqueTypeMetadata2);
}

uint64_t sub_1004088C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = type metadata accessor for MenuOptionLinkModifier(255, a2, a3, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EB9FE8, v7);
  v9 = type metadata accessor for _ViewModifier_Content(0, v7, WitnessTable);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v14 - v11;
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v9);
  sub_10081EB14(a1, v9, (uint64_t)v12);
  sub_1000EA744((uint64_t)v12, v9, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1004089A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v14)(void);
  uint64_t v15;
  char *v16;
  uint64_t v18;

  v14 = (void (*)(void))__chkstk_darwin(a1);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14();
  return NavigationLink.init(destination:label:)(v16, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100408A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B2920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100408AA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B2930;
  if (!qword_1011B2930)
  {
    v1 = sub_100044B54(&qword_1011B2928);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B2930);
  }
  return result;
}

uint64_t sub_100408B04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_100408B10(a1, a2, a3, type metadata accessor for MenuOption.Destination);
}

uint64_t sub_100408B10(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = a4(319, a1[2], a1[3], a1[4]);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v7, a1 + 5);
    return 0;
  }
  return result;
}

char *sub_100408B84(char *a1, char **a2, uint64_t *a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;

  v5 = type metadata accessor for MenuOption.Destination(0, a3[2], a3[3], a3[4]);
  v6 = *(_DWORD *)(*(_QWORD *)(v5 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v19[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    v7 = v5;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v5);
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v10 = (int *)type metadata accessor for SegueContext(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for GenericMusicItem(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v17 = v9;
      if (v16(v13, 1, v14))
      {
        v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      a1[v10[6]] = *((_BYTE *)a2 + v10[6]);
      v26 = v10[7];
      v27 = &a1[v26];
      v28 = (char **)((char *)a2 + v26);
      if (*v28)
      {
        v29 = v28[1];
        *(_QWORD *)v27 = *v28;
        *((_QWORD *)v27 + 1) = v29;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v27 = *(_OWORD *)v28;
      }
      v23 = a1;
      v24 = v7;
      v25 = 1;
    }
    else
    {
      v20 = a2[1];
      v21 = a2[2];
      *((_QWORD *)a1 + 1) = v20;
      *((_QWORD *)a1 + 2) = v21;
      v22 = v9;
      swift_bridgeObjectRetain();
      v23 = a1;
      v24 = v7;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
  }
  return a1;
}

double sub_100408D28(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v3 = type metadata accessor for MenuOption.Destination(0, a2[2], a2[3], a2[4]);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v3);

  if (EnumCaseMultiPayload == 1)
  {
    v5 = type metadata accessor for SegueContext(0);
    v6 = a1 + *(int *)(v5 + 20);
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    if (*(_QWORD *)(a1 + *(int *)(v5 + 28)))
      *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100408E14(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  int EnumCaseMultiPayload;
  void *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = type metadata accessor for MenuOption.Destination(0, a3[2], a3[3], a3[4]);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v5);
  v7 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v8 = (int *)type metadata accessor for SegueContext(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (const void *)(a2 + v9);
    v12 = type metadata accessor for GenericMusicItem(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    v15 = v7;
    if (v14(v11, 1, v12))
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)a1 + v8[6]) = *(_BYTE *)(a2 + v8[6]);
    v21 = v8[7];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    if (*v23)
    {
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
    }
    v20 = 1;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(_QWORD *)(a2 + 16);
    a1[1] = v17;
    a1[2] = v18;
    v19 = v7;
    swift_bridgeObjectRetain();
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v5, v20);
  return a1;
}

_QWORD *sub_100408F84(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v5;
  int EnumCaseMultiPayload;
  void *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  if (a1 != a2)
  {
    v5 = type metadata accessor for MenuOption.Destination(0, a3[2], a3[3], a3[4]);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v5);
    v7 = (void *)*a2;
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (int *)type metadata accessor for SegueContext(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for GenericMusicItem(0);
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v15 = v7;
      if (v14(v11, 1, v12))
      {
        v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
      v19 = v8[7];
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      if (*v21)
      {
        v22 = v21[1];
        *v20 = *v21;
        v20[1] = v22;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v20 = *(_OWORD *)v21;
      }
      v18 = 1;
    }
    else
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      v17 = v7;
      swift_bridgeObjectRetain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v5, v18);
  }
  return a1;
}

_QWORD *sub_100409118(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = type metadata accessor for MenuOption.Destination(0, a3[2], a3[3], a3[4]);
  if (swift_getEnumCaseMultiPayload(a2, v5) == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for SegueContext(0);
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for GenericMusicItem(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    v13 = v6[7];
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = *v15;
    if (*v15)
    {
      v17 = v15[1];
      *v14 = v16;
      v14[1] = v17;
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
    }
    swift_storeEnumTagMultiPayload(a1, v5, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100409274(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = type metadata accessor for MenuOption.Destination(0, a3[2], a3[3], a3[4]);
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
    if (swift_getEnumCaseMultiPayload(a2, v5) == 1)
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for SegueContext(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for GenericMusicItem(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
      v14 = v7[7];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      v17 = *v16;
      if (*v16)
      {
        v18 = v16[1];
        *v15 = v17;
        v15[1] = v18;
      }
      else
      {
        *(_OWORD *)v15 = *(_OWORD *)v16;
      }
      swift_storeEnumTagMultiPayload(a1, v5, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_1004093E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004093F4);
}

uint64_t sub_1004093F4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_100409400(a1, a2, a3, type metadata accessor for MenuOption.Destination);
}

uint64_t sub_100409400(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v6;

  v6 = a4(0, a3[2], a3[3], a3[4]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_10040944C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100409458);
}

uint64_t sub_100409458(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_100409464(a1, a2, a3, a4, type metadata accessor for MenuOption.Destination);
}

uint64_t sub_100409464(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v7;

  v7 = a5(0, a4[2], a4[3], a4[4]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t destroy for PushNotificationObserver.Connection(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s9MusicCore24PushNotificationObserverC10ConnectionVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for PushNotificationObserver.Connection(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for PushNotificationObserver.Connection(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t type metadata accessor for MenuOption.SubmenuContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MenuOption.SubmenuContext);
}

uint64_t sub_1004095C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = sub_100044B54(&qword_1011B28E0);
  v5 = type metadata accessor for MenuOptionLinkModifier(255, v1, v2, v3);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v7 = sub_100044B54(&qword_1011B28D8);
  v8 = sub_100044B54(&qword_1011B28D0);
  v16 = sub_100044B54(&qword_1011B28C8);
  v17 = sub_100407C90();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v16 = v8;
  v17 = OpaqueTypeConformance2;
  v10 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v16 = v7;
  v17 = v10;
  swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  swift_getWitnessTable(&unk_100EB9FE8, v5);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  v16 = v6;
  v17 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v16, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v13 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v14 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v13);
  v16 = v6;
  v17 = WitnessTable;
  swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
}

uint64_t sub_100409774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100409780(a1, a2, a3, (uint64_t)&unk_100F9FC18);
}

uint64_t sub_100409780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 16);
  v7 = v4;
  return swift_getOpaqueTypeConformance2(&v6, a4, 1);
}

uint64_t sub_1004097B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SegueContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004097FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004085E0(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10040980C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1004088C8(v1[5], v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100409818(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v10;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  void *v26;

  v1 = *a1;
  v2 = a1[2];
  v3 = type metadata accessor for MenuOptionLinkModifier(255, *a1, a1[1], v2);
  WitnessTable = swift_getWitnessTable(&unk_100EB9FE8, v3);
  v5 = type metadata accessor for _ViewModifier_Content(255, v3, WitnessTable);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2, v1, &unk_100FB0834, &unk_100FB0844);
  v7 = type metadata accessor for ModifiedContent(255, AssociatedTypeWitness, &type metadata for _PaddingLayout);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100FB0834, &unk_100FB083C);
  v26 = &protocol witness table for _PaddingLayout;
  v8 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  v21 = v7;
  v22 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v21, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 0);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v5);
  v21 = v7;
  v22 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v21, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 1);
  v21 = v5;
  v22 = OpaqueTypeMetadata2;
  v23 = v10;
  v24 = OpaqueTypeConformance2;
  v12 = type metadata accessor for NavigationLink(255, &v21);
  v13 = type metadata accessor for PlainButtonStyle(255);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for NavigationLink<A, B>, v12);
  v15 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v21 = v12;
  v22 = v13;
  v23 = v14;
  v24 = v15;
  v16 = swift_getOpaqueTypeMetadata2(255, &v21, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v17 = type metadata accessor for SegueLink(255);
  v18 = type metadata accessor for ModifiedContent(255, v5, v17);
  v19 = type metadata accessor for _ConditionalContent(255, v16, v18);
  v21 = v12;
  v22 = v13;
  v23 = v14;
  v24 = v15;
  swift_getOpaqueTypeConformance2(&v21, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
}

double sub_100409A84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(uint64_t, __n128);
  uint64_t v16;
  __n128 v17;
  _BYTE v18[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    v6 = Strong + 24;
    v7 = (void *)swift_unknownObjectWeakLoadStrong(Strong + 24);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "contentScrollViewForEdge:", 1);

      if (v9)
      {
        objc_msgSend(v9, "setKeyboardDismissMode:", 1);

      }
    }
    if ((objc_msgSend(*(id *)(v5 + 16), "hidesNavigationBarDuringPresentation") & 1) == 0)
    {
      v10 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
      v11 = objc_msgSend(v10, "userInterfaceIdiom");

      if (v11 != (id)6)
      {
        v12 = (void *)swift_unknownObjectWeakLoadStrong(v6);
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v12, "navigationItem");

          objc_msgSend(v14, "setLargeTitleDisplayMode:", 2);
        }
      }
    }
    v15 = *(void (**)(uint64_t, __n128))(v5 + 56);
    if (v15)
    {
      v16 = *(_QWORD *)(v5 + 64);
      v17 = swift_retain(v16);
      v15(v5, v17);
      sub_10004BA30((uint64_t)v15, v16);
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_100409BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v8 = *(void (**)(uint64_t, uint64_t))(Strong + 72);
    v7 = *(_QWORD *)(Strong + 80);
    sub_100048AAC((uint64_t)v8, v7);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
    if (v8)
    {
      v9 = a1 + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text;
      v10 = *(_QWORD *)(a1
                      + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
      v11 = *(_QWORD *)(v9 + 8);
      swift_bridgeObjectRetain();
      v8(v10, v11);
      sub_10004BA30((uint64_t)v8, v7);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
    }
  }
  return result;
}

double sub_100409C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  _QWORD *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void (*v11)(_QWORD, _QWORD, __n128);
  uint64_t v12;
  __n128 v13;
  void (*v14)(_QWORD *, __n128);
  uint64_t v15;
  __n128 v16;
  _BYTE v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = (_QWORD *)Strong;
    if ((objc_msgSend(*(id *)(Strong + 16), "hidesNavigationBarDuringPresentation") & 1) == 0)
    {
      v6 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
      v7 = objc_msgSend(v6, "userInterfaceIdiom");

      if (v7 != (id)6)
      {
        v8 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 3);
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, "navigationItem");

          objc_msgSend(v10, "setLargeTitleDisplayMode:", 0);
        }
      }
    }
    v11 = (void (*)(_QWORD, _QWORD, __n128))v5[9];
    if (v11)
    {
      v12 = v5[10];
      v13 = swift_retain(v12);
      v11(0, 0, v13);
      sub_10004BA30((uint64_t)v11, v12);
    }
    v14 = (void (*)(_QWORD *, __n128))v5[11];
    if (v14)
    {
      v15 = v5[12];
      v16 = swift_retain(v15);
      v14(v5, v16);
      sub_10004BA30((uint64_t)v14, v15);
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

id sub_100409DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  _BYTE v19[16];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(v1 + 112);
  if (v8)
  {
    v9 = *(id *)(v1 + 112);
  }
  else
  {
    v10 = *(_QWORD *)(v1 + 16);
    v11 = swift_allocObject(&unk_1010C4580, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16, v10);
    sub_10040A7D8();
    swift_retain(v11);
    v12 = String.LocalizationValue.init(stringLiteral:)(0xE26E4920646E6946, 0xAA0000000000A680);
    static Locale.current.getter(v12);
    v13 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v15 = UIKeyCommand.init(title:input:modifierFlags:handler:)(v13, v14, 102, 0xE100000000000000, 1572864, (uint64_t)sub_10040A7D0, v11);
    swift_release(v11);
    v16 = *(void **)(v1 + 112);
    *(_QWORD *)(v1 + 112) = v15;
    v9 = v15;

    v8 = 0;
  }
  v17 = v8;
  return v9;
}

void sub_100409F58()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 24);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "navigationItem");

    v4 = (_BYTE *)(v0 + 48);
    if ((*(_BYTE *)(v0 + 48) & 1) != 0)
    {
      if (v3)
      {
        objc_msgSend(v3, "setSearchController:", *(_QWORD *)(v0 + 16));
LABEL_8:
        objc_msgSend(v3, "setPreferredSearchBarPlacement:", 2);
        objc_msgSend(v3, "setHidesSearchBarWhenScrolling:", *(unsigned __int8 *)(v0 + 120));
        Strong = v3;
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else
  {
    v3 = 0;
    v4 = (_BYTE *)(v0 + 48);
    if ((*(_BYTE *)(v0 + 48) & 1) != 0)
      goto LABEL_10;
  }
  objc_msgSend(*(id *)(v0 + 16), "setActive:", 0);
  if (v3)
  {
    objc_msgSend(v3, "setSearchController:", 0);
    goto LABEL_8;
  }
LABEL_9:
  Strong = 0;
LABEL_10:
  v11 = Strong;
  v5 = swift_unknownObjectWeakLoadStrong(v0 + 24);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = sub_100409DD8();
    objc_msgSend(v6, "removeKeyCommand:", v7);

  }
  if (*v4 == 1)
  {
    v8 = swift_unknownObjectWeakLoadStrong(v0 + 24);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = sub_100409DD8();
      objc_msgSend(v9, "addKeyCommand:", v10);

    }
  }

}

void sub_10040A0E0(char *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  char *v4;
  void (*v5)(char *);
  uint64_t v7;
  id v8;
  char *v9;

  v4 = &a1[*a4];
  v5 = *(void (**)(char *))v4;
  if (*(_QWORD *)v4)
  {
    v7 = *((_QWORD *)v4 + 1);
    v8 = a3;
    v9 = a1;
    sub_100048AAC((uint64_t)v5, v7);
    v5(v9);
    sub_10004BA30((uint64_t)v5, v7);

  }
}

id sub_10040A224(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  id result;
  void (*v6)(uint64_t, __n128);
  uint64_t v7;
  __n128 v8;

  v3 = (_QWORD *)(v1
                + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
  v4 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text
                 + 8);
  *v3 = 0;
  v3[1] = 0;
  result = objc_msgSend(a1, "setText:", 0, swift_bridgeObjectRelease(v4).n128_f64[0]);
  v6 = *(void (**)(uint64_t, __n128))(v1
                                              + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didCancel);
  if (v6)
  {
    v7 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didCancel
                   + 8);
    v8 = swift_retain();
    v6(v1, v8);
    return (id)sub_10004BA30((uint64_t)v6, v7);
  }
  return result;
}

id sub_10040A39C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibrarySearchController.BarDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10040A44C()
{
  uint64_t v0;
  uint64_t v1;

  swift_unknownObjectWeakDestroy(v0 + 24, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  sub_10004BA30(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_10004BA30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_10004BA30(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));

  return v0;
}

uint64_t sub_10040A4A0()
{
  uint64_t v0;

  sub_10040A44C();
  return swift_deallocClassInstance(v0, 121, 7);
}

uint64_t type metadata accessor for LibrarySearchController()
{
  return objc_opt_self(_TtC5Music23LibrarySearchController);
}

uint64_t type metadata accessor for LibrarySearchController.BarDelegate()
{
  return objc_opt_self(_TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate);
}

uint64_t sub_10040A500(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double (**v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double (**v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double (**v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  NSString v30;

  *(_QWORD *)(v4 + 16) = objc_msgSend(objc_allocWithZone((Class)UISearchController), "initWithSearchResultsController:", 0);
  swift_unknownObjectWeakInit(v4 + 24, 0);
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_BYTE *)(v4 + 48) = 1;
  v9 = (objc_class *)type metadata accessor for LibrarySearchController.BarDelegate();
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_QWORD *)(v4 + 104) = objc_msgSend(objc_allocWithZone(v9), "init");
  *(_QWORD *)(v4 + 112) = 0;
  v10 = *(_QWORD *)(v4 + 40);
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(v4 + 120) = a3;
  swift_unknownObjectWeakAssign(v4 + 24, a4);
  v11 = *(_QWORD *)(v4 + 104);
  v12 = swift_allocObject(&unk_1010C4558, 24, 7);
  swift_weakInit(v12 + 16, v4);
  v13 = (double (**)(uint64_t))(v11
                                        + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didBeginEditing);
  v14 = *(_QWORD *)(v11
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didBeginEditing);
  v15 = *(_QWORD *)(v11
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didBeginEditing
                  + 8);
  *v13 = sub_10040A794;
  v13[1] = (double (*)(uint64_t))v12;
  sub_10004BA30(v14, v15);
  v16 = *(_QWORD *)(v4 + 104);
  v17 = swift_allocObject(&unk_1010C4558, 24, 7);
  swift_weakInit(v17 + 16, v4);
  v18 = (double (**)(uint64_t))(v16
                                        + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_textDidChange);
  v19 = *(_QWORD *)(v16
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_textDidChange);
  v20 = *(_QWORD *)(v16
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_textDidChange
                  + 8);
  *v18 = sub_10040A79C;
  v18[1] = (double (*)(uint64_t))v17;
  sub_10004BA30(v19, v20);
  v21 = *(_QWORD *)(v4 + 104);
  v22 = swift_allocObject(&unk_1010C4558, 24, 7);
  swift_weakInit(v22 + 16, v4);
  v23 = (double (**)(uint64_t))(v21
                                        + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didCancel);
  v24 = *(_QWORD *)(v21
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didCancel);
  v25 = *(_QWORD *)(v21
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_didCancel
                  + 8);
  *v23 = sub_10040A7A4;
  v23[1] = (double (*)(uint64_t))v22;
  sub_10004BA30(v24, v25);
  v26 = *(void **)(v4 + 16);
  objc_msgSend(v26, "setObscuresBackgroundDuringPresentation:", 0);
  v27 = objc_msgSend(v26, "searchBar");
  objc_msgSend(v27, "setDelegate:", *(_QWORD *)(v4 + 104));

  v28 = objc_msgSend(*(id *)(v4 + 16), "searchBar");
  objc_msgSend(v28, "setReturnKeyType:", 9);

  if (a2)
  {
    v29 = objc_msgSend(*(id *)(v4 + 16), "searchBar");
    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setPlaceholder:", v30, swift_bridgeObjectRelease(a2).n128_f64[0]);

  }
  sub_100409F58();
  return v4;
}

uint64_t sub_10040A770()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10040A794(uint64_t a1)
{
  uint64_t v1;

  return sub_100409A84(a1, v1);
}

double sub_10040A79C(uint64_t a1)
{
  uint64_t v1;

  return sub_100409BEC(a1, v1);
}

double sub_10040A7A4(uint64_t a1)
{
  uint64_t v1;

  return sub_100409C94(a1, v1);
}

uint64_t sub_10040A7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10040A7D0(uint64_t a1)
{
  uint64_t v1;

  sub_1005B9728(a1, v1);
}

unint64_t sub_10040A7D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D0C80;
  if (!qword_1011D0C80)
  {
    v1 = objc_opt_self(UIKeyCommand);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D0C80);
  }
  return result;
}

void sub_10040A814(void *a1)
{
  char *v1;
  uint64_t v3;
  _QWORD *inited;
  __int128 v5;
  id v6;
  id v7;
  void *v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  void **aBlock;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  objc_super v47;
  _BYTE v48[48];

  v3 = sub_100007E8C(&qword_1011B2D80);
  inited = (_QWORD *)swift_initStackObject(v3, v48);
  *((_OWORD *)inited + 1) = xmmword_100EA7AA0;
  v5 = *(_OWORD *)&v1[OBJC_IVAR____TtC5Music32LyricsSharingAnimationController_sourceViewController];
  *((_OWORD *)inited + 2) = v5;
  v6 = (id)v5;
  v7 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v7)
  {
    v8 = v7;
    ObjectType = swift_getObjectType();
    v10 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PresentationDonating);
    if (v10)
      v11 = v10;
    else
      v11 = 0;
    if (v10)
      v12 = v8;
    else
      v12 = 0;
    if (v12)
    {
      v13 = v8;
      inited = sub_100432F84((_QWORD *)1, 2, 1, inited);
      inited[2] = 2;
      inited[6] = v12;
      inited[7] = v11;
    }

  }
  v14 = sub_100237448((uint64_t)inited, 0);
  swift_bridgeObjectRelease(inited);
  v47.receiver = v1;
  v47.super_class = (Class)type metadata accessor for LyricsSharingAnimationController();
  v15 = objc_msgSendSuper2(&v47, "interruptibleAnimatorForTransition:", a1);
  swift_unknownObjectRelease(v15);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v31 = v14;
    else
      v31 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v31);
    if (!v16)
      goto LABEL_23;
  }
  else
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16)
      goto LABEL_23;
  }
  if (v16 < 1)
    __break(1u);
  v17 = 0;
  do
  {
    if ((v14 & 0xC000000000000001) != 0)
    {
      v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v14);
    }
    else
    {
      v18 = *(_QWORD *)(v14 + 8 * v17 + 32);
      swift_retain();
    }
    ++v17;
    v19 = objc_msgSend(a1, "containerView");
    v20 = *(void **)(v18 + 32);
    objc_msgSend(v20, "bounds");
    objc_msgSend(v19, "convertRect:fromCoordinateSpace:", v20);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;

    v29 = *(void **)(v18 + 32);
    objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
    objc_msgSend(v29, "setFrame:", v22, v24, v26, v28);
    v30 = objc_msgSend(a1, "containerView");
    objc_msgSend(v30, "addSubview:", v29);
    swift_release();

  }
  while (v16 != v17);
LABEL_23:
  swift_bridgeObjectRelease(v14);
  v32 = swift_allocObject(&unk_1010C45A8, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v1);
  v45 = sub_10040B1F8;
  v46 = v32;
  aBlock = _NSConcreteStackBlock;
  v42 = 1107296256;
  v43 = sub_1001DBD98;
  v44 = &unk_1010C45C0;
  v33 = _Block_copy(&aBlock);
  objc_msgSend(v1, "setNoninteractiveAnimations:", v33, swift_release().n128_f64[0]);
  _Block_release(v33);
  v34 = swift_allocObject(&unk_1010C45F8, 24, 7);
  *(_QWORD *)(v34 + 16) = v14;
  v45 = sub_10040B23C;
  v46 = v34;
  aBlock = _NSConcreteStackBlock;
  v42 = 1107296256;
  v43 = sub_10012F6FC;
  v44 = &unk_1010C4610;
  v35 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  objc_msgSend(v1, "setNoninteractiveCompletion:", v35, swift_release().n128_f64[0]);
  _Block_release(v35);
  v36 = *(void **)&v1[OBJC_IVAR____TtC5Music32LyricsSharingAnimationController_stampAnimator];
  v37 = swift_allocObject(&unk_1010C4648, 32, 7);
  *(_QWORD *)(v37 + 16) = v14;
  *(_QWORD *)(v37 + 24) = a1;
  v45 = sub_10040B270;
  v46 = v37;
  aBlock = _NSConcreteStackBlock;
  v42 = 1107296256;
  v43 = sub_1001DBD98;
  v44 = &unk_1010C4660;
  v38 = _Block_copy(&aBlock);
  v39 = v36;
  swift_unknownObjectRetain(a1, v40);
  objc_msgSend(v39, "addAnimations:", v38, swift_release().n128_f64[0]);
  _Block_release(v38);

  v1[OBJC_IVAR____TtC5Music32LyricsSharingAnimationController_didPrepareAnimations] = 1;
}

void sub_10040AC90(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC5Music32LyricsSharingAnimationController_stampAnimator);

    objc_msgSend(v4, "startAnimationAfterDelay:", 0.1);
  }
}

void sub_10040AD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void (*v7)(_QWORD *);
  uint64_t v8;
  __n128 v9;
  void (*v10)(uint64_t, _QWORD *, __n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (v3)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(a2);
    return;
  }
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_20;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a2);
        v6 = (_QWORD *)v5[5];
        if (v6)
          goto LABEL_11;
      }
      else
      {
        v5 = *(_QWORD **)(a2 + 8 * v4 + 32);
        swift_retain();
        v6 = (_QWORD *)v5[5];
        if (v6)
        {
LABEL_11:
          v7 = (void (*)(_QWORD *))v6[7];
          if (v7)
          {
            v8 = v6[8];
            swift_retain();
            sub_100048AAC((uint64_t)v7, v8);
            v7(v5);
            sub_10004BA30((uint64_t)v7, v8);
          }
          else
          {
            v9 = swift_retain();
          }
          (*(void (**)(_QWORD *, uint64_t, __n128))(*v5 + 264))(v6, 1, v9);
          v10 = (void (*)(uint64_t, _QWORD *, __n128))v6[13];
          if (v10)
          {
            v11 = v6[14];
            v12 = swift_retain();
            v10(1, v5, v12);
            sub_10004BA30((uint64_t)v10, v11);
          }
          swift_release();
        }
      }
      ++v4;
      swift_release();
      if (v3 == v4)
        goto LABEL_20;
    }
  }
  __break(1u);
}

void sub_10040AE7C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double (*v8)(uint64_t);
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void (*v17)(uint64_t, __n128);
  uint64_t v18;
  __n128 v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  uint64_t v32;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v32 = a1;
    else
      v32 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v32);
    if (v4)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_19;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v7 = *(_QWORD **)(v6 + 40);
        if (!v7)
          goto LABEL_5;
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_retain();
        v7 = *(_QWORD **)(v6 + 40);
        if (!v7)
          goto LABEL_5;
      }
      v8 = (double (*)(uint64_t))v7[5];
      if (v8)
      {
        v9 = v7[6];
        swift_retain();
        sub_100048AAC((uint64_t)v8, v9);
        v10 = v8(v6);
        v12 = v11;
        v14 = v13;
        v16 = v15;
        sub_10004BA30((uint64_t)v8, v9);
        v17 = (void (*)(uint64_t, __n128))v7[11];
        if (v17)
        {
          v18 = v7[12];
          v19 = swift_retain();
          v17(v6, v19);
          sub_10004BA30((uint64_t)v17, v18);
        }
        (*(void (**)(_QWORD *))(*(_QWORD *)v6 + 256))(v7);
        v20 = (void *)v7[4];
        v21 = *(id *)(v6 + 32);
        v22 = v20;
        v23 = objc_msgSend(a2, "containerView");
        objc_msgSend(v22, "convertRect:toCoordinateSpace:", v23, v10, v12, v14, v16);
        v25 = v24;
        v27 = v26;
        v29 = v28;
        v31 = v30;

        UIView.untransformedFrame.setter(v25, v27, v29, v31);
        swift_release();
        swift_release();

        goto LABEL_6;
      }
LABEL_5:
      swift_release();
LABEL_6:
      if (v4 == ++v5)
        goto LABEL_19;
    }
  }
  __break(1u);
}

id sub_10040B14C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsSharingAnimationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LyricsSharingAnimationController()
{
  return objc_opt_self(_TtC5Music32LyricsSharingAnimationController);
}

uint64_t sub_10040B1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10040B1F8()
{
  uint64_t v0;

  sub_10040AC90(v0);
}

uint64_t sub_10040B200(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10040B210(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10040B218()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10040B23C(uint64_t a1)
{
  uint64_t v1;

  sub_10040AD0C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10040B244()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10040B270()
{
  uint64_t v0;

  sub_10040AE7C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_10040B28C()
{
  unint64_t result;

  result = qword_1011B2DA0;
  if (!qword_1011B2DA0)
  {
    result = swift_getWitnessTable(&unk_100EBA118, &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011B2DA0);
  }
  return result;
}

unint64_t sub_10040B2D4()
{
  unint64_t result;

  result = qword_1011B2DA8;
  if (!qword_1011B2DA8)
  {
    result = swift_getWitnessTable(&unk_100EBA140, &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011B2DA8);
  }
  return result;
}

unint64_t sub_10040B31C()
{
  unint64_t result;

  result = qword_1011B2DB0;
  if (!qword_1011B2DB0)
  {
    result = swift_getWitnessTable(&unk_100EBA1D0, &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011B2DB0);
  }
  return result;
}

unint64_t sub_10040B364()
{
  unint64_t result;

  result = qword_1011B2DB8;
  if (!qword_1011B2DB8)
  {
    result = swift_getWitnessTable(&unk_100EBA1F8, &type metadata for TogglePlaybackAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011B2DB8);
  }
  return result;
}

uint64_t sub_10040B3A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9FF10, 1);
}

uint64_t sub_10040B3B8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10040B2D4();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10040B3F8()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124CF68);
  sub_100048B14(v0, (uint64_t)qword_10124CF68);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E391B0);
}

uint64_t sub_10040B458(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return swift_task_switch(sub_10040B470, 0, 0);
}

uint64_t sub_10040B470()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10040B4DC, v3, v4);
}

uint64_t sub_10040B4DC()
{
  swift_release();
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  return swift_task_switch(sub_10040B540, 0, 0);
}

uint64_t sub_10040B540(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 96) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10040B5A0, v3, v4);
}

uint64_t sub_10040B5A0()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_release();
  v1 = (void *)qword_10124C798;
  *(_QWORD *)(v0 + 104) = qword_10124C798;
  v2 = v1;
  return swift_task_switch(sub_10040B5EC, 0, 0);
}

uint64_t sub_10040B5EC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = &type metadata for Player.PlaybackCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.PlaybackCommand;
  *(_BYTE *)(v0 + 16) = 3;
  v1 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_10040B668;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0, 0, 0);
}

uint64_t sub_10040B668(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 112));
  if (v1)
  {
    v5 = *(void **)(v4 + 104);
    swift_errorRelease(v1);

    v6 = sub_10040B8D0;
  }
  else
  {

    *(_QWORD *)(v4 + 120) = a1;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v4 + 16));
    v6 = sub_10040B6FC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10040B6FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 120);
  if (qword_10119BFC0 != -1)
    swift_once(&qword_10119BFC0, sub_10040BB84);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011B2D88);
  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 56) = v1;
    v8 = v3;
    v9 = sub_100007E8C(&qword_1011A3600);
    v10 = String.init<A>(describing:)(v0 + 56, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 64) = sub_100322200(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease(v12);

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Toggled playback with status: %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  static IntentResult.result<>()(v13);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040B8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  if (qword_10119BFC0 != -1)
    swift_once(&qword_10119BFC0, sub_10040BB84);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)qword_1011B2D88);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v13 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 56) = 0;
    v7 = sub_100007E8C(&qword_1011A3600);
    v8 = String.init<A>(describing:)(v0 + 56, v7);
    v10 = v9;
    *(_QWORD *)(v0 + 64) = sub_100322200(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Toggled playback with status: %{public}s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }

  static IntentResult.result<>()(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040BA78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119BFB8 != -1)
    swift_once(&qword_10119BFB8, sub_10040B3F8);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124CF68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10040BAEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011B2DCC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  v3[9] = a1;
  return swift_task_switch(sub_10040B470, 0, 0);
}

uint64_t sub_10040BB4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10040B2D4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for TogglePlaybackAppIntent()
{
  return &type metadata for TogglePlaybackAppIntent;
}

uint64_t sub_10040BB84()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011B2D88);
  sub_100048B14(v0, (uint64_t)qword_1011B2D88);
  return static Logger.music(_:)(0xD000000000000017, 0x8000000100EBA200);
}

id sub_10040BBE4(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  uint64_t (*v3)(void (*)(uint64_t, uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(void (*)(uint64_t, uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1010C4950, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v7 = (void *)v3(sub_10040FAA8, v5, v6);
  swift_release(v2);
  swift_release(v5);
  return v7;
}

void sub_10040BC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id sub_10040BCB8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GroupActivitiesManager.SuggestionProvider()), "init");
  static GroupActivitiesManager.suggestionProvider = (uint64_t)result;
  return result;
}

uint64_t *GroupActivitiesManager.suggestionProvider.unsafeMutableAddressor()
{
  if (qword_10119BFC8 != -1)
    swift_once(&qword_10119BFC8, sub_10040BCB8);
  return &static GroupActivitiesManager.suggestionProvider;
}

id static GroupActivitiesManager.suggestionProvider.getter()
{
  if (qword_10119BFC8 != -1)
    swift_once(&qword_10119BFC8, sub_10040BCB8);
  return (id)static GroupActivitiesManager.suggestionProvider;
}

uint64_t sub_10040BD64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1[19] = v0;
  v2 = type metadata accessor for Playlist(0);
  v1[20] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[21] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[22] = swift_task_alloc(v4);
  v1[23] = swift_task_alloc(v4);
  v5 = type metadata accessor for Album(0);
  v1[24] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[25] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[26] = swift_task_alloc(v7);
  v1[27] = swift_task_alloc(v7);
  return swift_task_switch(sub_10040BE0C, 0, 0);
}

uint64_t sub_10040BE0C()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (void **)(v0 + 16);
  sub_10040C8D8(*(_QWORD *)(v0 + 152), v0 + 16);
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    v2 = *(_QWORD *)(v0 + 216);
    v3 = *(_QWORD *)(v0 + 192);

    sub_100064C48((__int128 *)(v0 + 16), v0 + 72);
    sub_100064C78(v0 + 72, v0 + 112);
    v4 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
    if (swift_dynamicCast(v2, v0 + 112, v4, v3, 0))
    {
      v5 = *(_QWORD *)(v0 + 208);
      v6 = *(_QWORD *)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 200);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 32))(v5, *(_QWORD *)(v0 + 216), v6);
      v8 = sub_10056DE20();
    }
    else
    {
      if (!swift_dynamicCast(*(_QWORD *)(v0 + 184), v0 + 112, v4, *(_QWORD *)(v0 + 160), 0))
      {
        _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
        v10 = 0;
        goto LABEL_9;
      }
      v5 = *(_QWORD *)(v0 + 176);
      v6 = *(_QWORD *)(v0 + 160);
      v7 = *(_QWORD *)(v0 + 168);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 32))(v5, *(_QWORD *)(v0 + 184), v6);
      v8 = sub_10056D6C4();
    }
    v10 = v8;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
LABEL_9:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 112));
    goto LABEL_10;
  }
  v9 = *v1;
  v10 = sub_100063CE0(*v1);

LABEL_10:
  v11 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_10040BF90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v2[22] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[23] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[24] = swift_task_alloc(v6);
  v2[25] = swift_task_alloc(v6);
  v7 = type metadata accessor for Album(0);
  v2[26] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[27] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[28] = swift_task_alloc(v9);
  v2[29] = swift_task_alloc(v9);
  return swift_task_switch(sub_10040C05C, 0, 0);
}

uint64_t sub_10040C05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_10040C8D8(*(_QWORD *)(v0 + 160), v0 + 16);
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    v1 = *(_QWORD *)(v0 + 232);
    v2 = *(_QWORD *)(v0 + 208);

    sub_100064C48((__int128 *)(v0 + 16), v0 + 72);
    sub_100064C78(v0 + 72, v0 + 112);
    v3 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
    if (swift_dynamicCast(v1, v0 + 112, v3, v2, 0))
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 208));
      v4 = (_QWORD *)swift_task_alloc(dword_1011D47BC);
      *(_QWORD *)(v0 + 240) = v4;
      *v4 = v0;
      v4[1] = sub_10040C318;
      return Album.shareURL.getter(*(_QWORD *)(v0 + 152));
    }
    if (swift_dynamicCast(*(_QWORD *)(v0 + 200), v0 + 112, v3, *(_QWORD *)(v0 + 176), 0))
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
      v14 = (_QWORD *)swift_task_alloc(dword_1011D4854);
      *(_QWORD *)(v0 + 248) = v14;
      *v14 = v0;
      v14[1] = sub_10040C3F4;
      return Playlist.shareURL.getter(*(_QWORD *)(v0 + 152));
    }
    v16 = *(_QWORD *)(v0 + 152);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 112));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 168);
    v7 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 256) = v7;
    v8 = v7;
    GenericMusicItem.init(_:)();
    v9 = type metadata accessor for GenericMusicItem(0);
    *(_QWORD *)(v0 + 264) = v9;
    v10 = *(_QWORD *)(v9 - 8);
    *(_QWORD *)(v0 + 272) = v10;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      v15 = (_QWORD *)swift_task_alloc(dword_1011D49E4);
      *(_QWORD *)(v0 + 280) = v15;
      *v15 = v0;
      v15[1] = sub_10040C4D0;
      return GenericMusicItem.shareURL.getter(*(_QWORD *)(v0 + 152));
    }
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 152);

    sub_10004FF60(v11, (uint64_t *)&unk_1011A20D0);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  v18 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 200);
  v21 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040C318()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 240));
  return swift_task_switch(sub_10040C36C, 0, 0);
}

uint64_t sub_10040C36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040C3F4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 248));
  return swift_task_switch(sub_10040C448, 0, 0);
}

uint64_t sub_10040C448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040C4D0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 280));
  return swift_task_switch(sub_10040C524, 0, 0);
}

uint64_t sub_10040C524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v4 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t GroupActivitiesManager.SuggestionProvider.Item.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void *object;
  __n128 v20;
  uint64_t v21;
  void *v22;
  double v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  __n128 v29;
  Swift::String v30;
  void *v31;
  __n128 v32;
  Swift::String v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD v38[5];
  unint64_t v39;
  unint64_t v40;
  __int128 v41[2];
  id v42;
  char v43;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v35 - v7;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v35 - v14;
  sub_10040C8D8(v1, (uint64_t)v41);
  if (v43 == 1)
  {

    sub_100064C48(v41, (uint64_t)&v39);
    sub_100064C78((uint64_t)&v39, (uint64_t)v38);
    v16 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
    if (swift_dynamicCast(v15, v38, v16, v9, 0))
    {
      v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v13, v15, v9);
      v36 = 0x202D206D75626C41;
      v37 = 0xE800000000000000;
      v18._countAndFlagsBits = Album.title.getter(v17);
      object = v18._object;
      String.append(_:)(v18);
      v20 = swift_bridgeObjectRelease(object);
      v21 = v36;
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v9, v20);
    }
    else if (swift_dynamicCast(v8, v38, v16, v2, 0))
    {
      v29.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
      v36 = 0x7473696C79616C50;
      v37 = 0xEB00000000202D20;
      v30._countAndFlagsBits = Playlist.name.getter(v29);
      v31 = v30._object;
      String.append(_:)(v30);
      v32 = swift_bridgeObjectRelease(v31);
      v21 = v36;
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v32);
    }
    else
    {
      v36 = 0;
      v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      v33._object = (void *)0x8000000100E39210;
      v33._countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v33);
      _print_unlocked<A, B>(_:_:)(&v39, &v36, v16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v21 = v36;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v39);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v38);
  }
  else
  {
    v22 = *(void **)&v41[0];
    v39 = 0;
    v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v40).n128_u64[0];
    v39 = 0xD000000000000013;
    v40 = 0x8000000100E391F0;
    v24 = objc_msgSend(v22, "humanDescription", v23);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28._countAndFlagsBits = v25;
    v28._object = v27;
    String.append(_:)(v28);

    swift_bridgeObjectRelease(v27);
    return v39;
  }
  return v21;
}

uint64_t sub_10040C8D8(uint64_t a1, uint64_t a2)
{
  _s18SuggestionProviderC4ItemOwcp(a2, a1);
  return a2;
}

double GroupActivitiesManager.SuggestionProvider.registerItem(_:intent:)(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39[3];

  v3 = v2;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.groupActivities.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10040C8D8(a1, (uint64_t)v39);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v36 = v2;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v33 = a1;
    v20 = v19;
    v38 = v19;
    v34 = v8;
    v35 = a2;
    *(_DWORD *)v18 = 136446210;
    v21 = GroupActivitiesManager.SuggestionProvider.Item.debugDescription.getter();
    v23 = v22;
    v37 = sub_100322200(v21, v22, &v38);
    v8 = v34;
    a2 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_bridgeObjectRelease(v23);
    sub_10040CBA0((uint64_t)v39);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Suggestion] will suggest item=%{public}s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v24 = v20;
    a1 = v33;
    swift_slowDealloc(v24, -1, -1);
    v25 = v18;
    v3 = v36;
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    sub_10040CBA0((uint64_t)v39);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
  sub_10040C8D8(a1, (uint64_t)v39);
  v27 = (_QWORD *)swift_allocObject(&unk_1010C4770, 104, 7);
  v27[2] = 0;
  v27[3] = 0;
  sub_10040CFC0(v39, (uint64_t)(v27 + 4));
  v27[11] = a2;
  v27[12] = v3;
  v28 = a2;
  v29 = v3;
  v30 = sub_100166D14((uint64_t)v8, (uint64_t)&unk_1011B2DE8, (uint64_t)v27);
  *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  return result;
}

uint64_t sub_10040CBA0(uint64_t a1)
{
  _s18SuggestionProviderC4ItemOwxx(a1);
  return a1;
}

uint64_t sub_10040CBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v6[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v6[21] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[22] = v9;
  v6[23] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(dword_1011B2F44);
  v6[24] = v10;
  *v10 = v6;
  v10[1] = sub_10040CC68;
  return sub_10040BD64();
}

uint64_t sub_10040CC68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10040CCC4, 0, 0);
}

uint64_t sub_10040CCC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(void **)(v0 + 200);
  if (v1)
  {
    v3 = *(void **)(v0 + 152);
    v2 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(void **)(v0 + 144);
    v6 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
    sub_10040C8D8(v4, v0 + 72);
    type metadata accessor for MainActor(0);
    v7 = v5;
    v8 = v3;
    v9 = v1;
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_1010C4A90, 112, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v5;
    v12[5] = v8;
    sub_10040CFC0((__int128 *)(v0 + 72), (uint64_t)(v12 + 6));
    v12[13] = v9;
    sub_100166D14(v2, (uint64_t)&unk_1011B2F50, (uint64_t)v12);

    swift_release();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 176);
    v14 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v0 + 168);
    v17 = Logger.groupActivities.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    v18 = sub_10040C8D8(v13, v0 + 16);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    v21 = os_log_type_enabled(v19, v20);
    v23 = *(_QWORD *)(v0 + 176);
    v22 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 168);
    if (v21)
    {
      v33 = *(_QWORD *)(v0 + 184);
      v32 = *(_QWORD *)(v0 + 176);
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v34 = v26;
      *(_DWORD *)v25 = 136446210;
      v27 = GroupActivitiesManager.SuggestionProvider.Item.debugDescription.getter();
      v29 = v28;
      *(_QWORD *)(v0 + 128) = sub_100322200(v27, v28, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136);
      swift_bridgeObjectRelease(v29);
      sub_10040CBA0(v0 + 16);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[Suggestion] Couldn't build metadata for item=%{public}s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v24);
    }
    else
    {
      sub_10040CBA0(v0 + 16);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
  }
  v30 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040CF6C()
{
  uint64_t v0;
  id *v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v1 = (id *)(v0 + 32);
  if (*(_BYTE *)(v0 + 80) == 1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v1);
    v1 = (id *)(v0 + 72);
  }

  return swift_deallocObject(v0, 104);
}

uint64_t sub_10040CFC0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_10040CFE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v8 = v1[11];
  v7 = v1[12];
  v9 = (_QWORD *)swift_task_alloc(dword_1011B2DE4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_10040CBCC(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_10040D060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[21] = v9;
  v7[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011B2F58);
  v7[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v7[24] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_10040D11C, v13, v14);
}

uint64_t sub_10040D11C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  swift_release();
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_retain();
  v4 = GroupActivitiesManager.itemProvider(with:metadata:)(v1, v2);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(void **)(v0 + 152);
  sub_10004FF60(*(_QWORD *)(v0 + 184), &qword_1011B2F58);
  swift_release();
  sub_10040C8D8(v5, v0 + 16);
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v6;
  v7 = v4;
  v8 = v6;
  sub_10040D414(v0 + 16);

  sub_10040F3D8(v0 + 16);
  v9 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040D414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[24];
  _BYTE v7[72];
  _QWORD v8[6];
  char v9;

  sub_10040C8D8(a1, (uint64_t)v8);
  if (v9 == 1)
  {

    sub_10040F3A4(a1, (uint64_t)v7);
    v3 = v1 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_containerItemSuggestion;
    swift_beginAccess(v1 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_containerItemSuggestion, v6, 33, 0);
    sub_10040F1C0((uint64_t)v7, v3);
    swift_endAccess(v6);
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v8);
  }
  else
  {
    sub_10040CBA0((uint64_t)v8);
    sub_10040F3A4(a1, (uint64_t)v7);
    v5 = v1 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_playingItemSuggestion;
    swift_beginAccess(v1 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_playingItemSuggestion, v6, 33, 0);
    sub_10040F1C0((uint64_t)v7, v5);
    return swift_endAccess(v6);
  }
}

Swift::Void __swiftcall GroupActivitiesManager.SuggestionProvider.removePlayingItemSuggestion()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _BYTE v13[24];
  _OWORD v14[4];
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = Logger.groupActivities.unsafeMutableAddressor();
  v7 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Suggestion] Removing playing item suggestion", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  v11 = v1 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_playingItemSuggestion;
  swift_beginAccess(v11, v13, 33, 0);
  sub_10040F1C0((uint64_t)v14, v11);
  swift_endAccess(v13);
}

Swift::Void __swiftcall GroupActivitiesManager.SuggestionProvider.removeSuggestedItem(from:)(UIViewController from)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  Class v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  __n128 v22;
  _QWORD v23[2];
  uint8_t *v24;
  uint64_t v25;
  _OWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  char v30;
  _BYTE v31[32];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_containerItemSuggestion;
  swift_beginAccess(v1 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_containerItemSuggestion, v31, 0, 0);
  if (*(_QWORD *)(v7 + 56))
  {
    sub_10040C8D8(v7, (uint64_t)v26);
    sub_10040C8D8((uint64_t)v26, (uint64_t)&v28);
    if ((v30 & 1) != 0)
    {
      v8 = (Class)v29[4];
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v28);
      sub_10040CBA0((uint64_t)v26);

      if (v8 == from.super.super.isa)
      {
        if (*(_QWORD *)(v7 + 56))
        {
          sub_10040C8D8(v7, (uint64_t)v26);
          v9 = GroupActivitiesManager.SuggestionProvider.Item.debugDescription.getter();
          v11 = v10;
          sub_10040CBA0((uint64_t)v26);
        }
        else
        {
          v9 = 0;
          v11 = 0;
        }
        v12 = Logger.groupActivities.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
        v13 = swift_bridgeObjectRetain();
        v14 = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc(12, -1);
          v25 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v26[0] = v25;
          v24 = v16;
          *(_DWORD *)v16 = 136446210;
          v23[1] = v16 + 4;
          swift_bridgeObjectRetain();
          v17 = Optional<A>.description.getter(v9, v11);
          v19 = v18;
          swift_bridgeObjectRelease();
          v28 = sub_100322200(v17, v19, (uint64_t *)v26);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
          swift_bridgeObjectRelease_n(v11, 2);
          swift_bridgeObjectRelease();
          v20 = v24;
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "[Suggestion] Removing music suggested item=%{public}s)", v24, 0xCu);
          v21 = v25;
          swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v21, -1, -1);
          swift_slowDealloc(v20, -1, -1);

        }
        else
        {

          v22 = swift_bridgeObjectRelease_n(v11, 2);
        }
        (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v22);
        v27 = 0;
        memset(v26, 0, sizeof(v26));
        swift_beginAccess(v7, &v28, 33, 0);
        sub_10040F1C0((uint64_t)v26, v7);
        swift_endAccess(&v28);
      }
    }
    else
    {
      sub_10040CBA0((uint64_t)&v28);
      sub_10040CBA0((uint64_t)v26);
    }
  }
}

id GroupActivitiesManager.SuggestionProvider.activityItemsConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  Class isa;
  id v24;
  id v25;
  void *v26;
  uint64_t ObjCClassFromMetadata;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  Class v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  void *v43;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  _OWORD v59[3];
  __int128 v60;
  uint64_t v61;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_playingItemSuggestion;
  swift_beginAccess(v0 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_playingItemSuggestion, &v53, 0, 0);
  sub_10040F208(v5, (uint64_t)&v48);
  if (*((_QWORD *)&v51 + 1))
  {
    v56 = v50;
    v57 = v51;
    v58 = v52;
    v54 = v48;
    v55 = v49;
  }
  else
  {
    v15 = v0 + OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_containerItemSuggestion;
    swift_beginAccess(v15, &v47, 0, 0);
    sub_10040F208(v15, (uint64_t)&v54);
    sub_10004FF60((uint64_t)&v48, &qword_1011B2DF8);
    if (!*((_QWORD *)&v57 + 1))
    {
      sub_10004FF60((uint64_t)&v54, &qword_1011B2DF8);
      v16 = sub_10040F250();
      if (!v16)
        return 0;
      v17 = v16;
      v18 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v19 = swift_allocObject(v18, 40, 7);
      *(_OWORD *)(v19 + 16) = xmmword_100EA7A90;
      *(_QWORD *)(v19 + 32) = v17;
      *(_QWORD *)&v59[0] = v19;
      specialized Array._endMutation()(v19);
      v20 = *(_QWORD *)&v59[0];
      v21 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
      sub_10004A07C(0, (unint64_t *)&unk_10119E4B0, NSItemProvider_ptr);
      v22 = v17;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v24 = objc_msgSend(v21, "initWithItemProviders:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

      return v24;
    }
  }
  v59[2] = v56;
  v60 = v57;
  v61 = v58;
  v59[0] = v54;
  v59[1] = v55;
  v6 = Logger.groupActivities.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  v7 = sub_10040F3A4((uint64_t)v59, (uint64_t)&v54);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_DWORD *)v10 = 136315138;
    v45[1] = v10 + 4;
    v46 = v11;
    sub_10040F3A4((uint64_t)&v54, (uint64_t)&v48);
    v12 = String.init<A>(describing:)(&v48, &_s18SuggestionProviderC10SuggestionVN);
    v14 = v13;
    *(_QWORD *)&v48 = sub_100322200(v12, v13, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, (char *)&v48 + 8);
    swift_bridgeObjectRelease(v14);
    sub_10040F3D8((uint64_t)&v54);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Suggestion] System is picking up suggestion=%s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    sub_10040F3D8((uint64_t)&v54);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v25 = sub_10040F250();
  if (!v25)
  {
    v26 = (void *)*((_QWORD *)&v60 + 1);
    sub_10004A07C(0, &qword_1011B2E08, NSURL_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    sub_10040F3A4((uint64_t)v59, (uint64_t)&v54);
    v28 = swift_allocObject(&unk_1010C4798, 88, 7);
    v29 = v57;
    *(_OWORD *)(v28 + 48) = v56;
    *(_OWORD *)(v28 + 64) = v29;
    *(_QWORD *)(v28 + 80) = v58;
    v30 = v55;
    *(_OWORD *)(v28 + 16) = v54;
    *(_OWORD *)(v28 + 32) = v30;
    *(_QWORD *)&v50 = sub_10040F408;
    *((_QWORD *)&v50 + 1) = v28;
    *(_QWORD *)&v48 = _NSConcreteStackBlock;
    *((_QWORD *)&v48 + 1) = 1107296256;
    *(_QWORD *)&v49 = sub_10040BBE4;
    *((_QWORD *)&v49 + 1) = &unk_1010C47B0;
    v31 = _Block_copy(&v48);
    v32 = v26;
    objc_msgSend(v32, "registerObjectOfClass:visibility:loadHandler:", ObjCClassFromMetadata, 0, v31, swift_release().n128_f64[0]);
    _Block_release(v31);

    v25 = *((id *)&v60 + 1);
  }
  v33 = v25;
  v34 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v35 = swift_allocObject(v34, 40, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v35 + 32) = v33;
  *(_QWORD *)&v54 = v35;
  specialized Array._endMutation()(v35);
  v36 = v54;
  v37 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_10004A07C(0, (unint64_t *)&unk_10119E4B0, NSItemProvider_ptr);
  v38 = v33;
  v39 = Array._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v37, "initWithItemProviders:", v39, swift_bridgeObjectRelease(v36).n128_f64[0]);

  sub_10040F3A4((uint64_t)v59, (uint64_t)&v54);
  v40 = swift_allocObject(&unk_1010C47E8, 88, 7);
  v41 = v57;
  *(_OWORD *)(v40 + 48) = v56;
  *(_OWORD *)(v40 + 64) = v41;
  *(_QWORD *)(v40 + 80) = v58;
  v42 = v55;
  *(_OWORD *)(v40 + 16) = v54;
  *(_OWORD *)(v40 + 32) = v42;
  *(_QWORD *)&v50 = sub_10040F478;
  *((_QWORD *)&v50 + 1) = v40;
  *(_QWORD *)&v48 = _NSConcreteStackBlock;
  *((_QWORD *)&v48 + 1) = 1107296256;
  *(_QWORD *)&v49 = sub_10040E248;
  *((_QWORD *)&v49 + 1) = &unk_1010C4800;
  v43 = _Block_copy(&v48);
  objc_msgSend(v24, "setMetadataProvider:", v43, swift_release().n128_f64[0]);
  _Block_release(v43);

  sub_10040F3D8((uint64_t)v59);
  return v24;
}

uint64_t sub_10040DEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v14;
  _OWORD v15[4];
  uint64_t v16;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_10040F3A4(a3, (uint64_t)v15);
  v10 = swift_allocObject(&unk_1010C4978, 120, 7);
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  v11 = v15[3];
  *(_OWORD *)(v10 + 80) = v15[2];
  *(_OWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 112) = v16;
  v12 = v15[1];
  *(_OWORD *)(v10 + 48) = v15[0];
  *(_OWORD *)(v10 + 64) = v12;
  swift_retain();
  sub_100166D14((uint64_t)v8, (uint64_t)&unk_1011B2F08, v10);
  swift_release();
  return 0;
}

uint64_t sub_10040DFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_100007E8C(&qword_10119E460);
  v7 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[4] = v7;
  v8 = (_QWORD *)swift_task_alloc(dword_1011B2F1C);
  v5[5] = v8;
  *v8 = v5;
  v8[1] = sub_10040E040;
  return sub_10040BF90(v7);
}

uint64_t sub_10040E040()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_10040E094, 0, 0);
}

uint64_t sub_10040E094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10004FF60(v1, &qword_10119E460);
    v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  v7 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD))(v0 + 16))(v5, 0);
  swift_unknownObjectRelease(v5);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10040E148@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  double result;
  id v17;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
    v14 = *(void **)(a2 + 64);
    if (v14)
    {
LABEL_7:
      v17 = v14;
      *(_QWORD *)(a3 + 24) = sub_10004A07C(0, &qword_10119E440, LPLinkMetadata_ptr);
      *(_QWORD *)a3 = v17;
      v15 = v17;
      return result;
    }
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) != 0)
    {
      v14 = *(void **)(a2 + 64);
      if (v14)
        goto LABEL_7;
    }
  }
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

id sub_10040E248(uint64_t a1, void *a2)
{
  void (*v3)(_QWORD *__return_ptr);
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[3];
  uint64_t v14;

  v3 = *(void (**)(_QWORD *__return_ptr))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(v13);
  swift_release();

  v5 = v14;
  if (!v14)
    return 0;
  v6 = sub_100007E68(v13, v14);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  v11 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
  return v11;
}

double sub_10040E334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  double result;
  uint64_t v17;

  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  type metadata accessor for MainActor(0);
  v12 = a5;
  sub_100048AAC(a1, a2);
  v14 = static MainActor.shared.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_1010C49F0, 56, 7);
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v12;
  v15[5] = a1;
  v15[6] = a2;
  sub_100166D14((uint64_t)v10, (uint64_t)&unk_1011B2F30, (uint64_t)v15);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10040E434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = sub_100007E8C(&qword_10119E460);
  v6[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v6[6] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[7] = v9;
  v6[8] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v6[9] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[10] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[11] = swift_task_alloc(v12);
  v6[12] = swift_task_alloc(v12);
  v6[13] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v6[14] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  return swift_task_switch(sub_10040E534, v15, v16);
}

uint64_t sub_10040E534()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSURL *v45;
  void (*v46)(void);
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = swift_release();
  if (((*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x110))(v2) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    v6 = Logger.groupActivities.unsafeMutableAddressor();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v6, v4);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Suggestion] Session is placeholder, requesting real session", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    v16 = qword_10124C788;
    v17 = swift_allocObject(&unk_1010C4A18, 32, 7);
    *(_QWORD *)(v17 + 16) = v14;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = *(void (**)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(*(_QWORD *)v16 + 720);
    sub_100048AAC(v14, v15);
    v18(sub_10040FCA0, v17);
    swift_release();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 48);
    v20 = *(_QWORD *)(v0 + 56);
    v21 = *(_QWORD *)(v0 + 40);
    (*(void (**)(void))((swift_isaMask & **(_QWORD **)(v0 + 16)) + 0x260))();
    v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19);
    v23 = *(_QWORD *)(v0 + 72);
    v24 = *(_QWORD *)(v0 + 80);
    if (v22 == 1)
    {
      v25 = *(_QWORD *)(v0 + 96);
      sub_10004FF60(*(_QWORD *)(v0 + 40), &qword_10119E460);
      v26 = Logger.groupActivities.unsafeMutableAddressor();
      v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v25, v26, v23);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.error.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "[Suggestion] Session had no joinURL", v30, 2u);
        swift_slowDealloc(v30, -1, -1);
      }
      v31 = *(_QWORD *)(v0 + 96);
      v32 = *(_QWORD *)(v0 + 72);
      v33 = *(_QWORD *)(v0 + 80);
      v34 = *(_QWORD *)(v0 + 24);

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      if (v34)
        (*(void (**)(_QWORD, _QWORD))(v0 + 24))(0, 0);
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 88);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
      v36 = Logger.groupActivities.unsafeMutableAddressor();
      v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v35, v36, v23);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.default.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "[Suggestion] Returning joinURL for session", v40, 2u);
        swift_slowDealloc(v40, -1, -1);
      }
      v42 = *(_QWORD *)(v0 + 80);
      v41 = *(_QWORD *)(v0 + 88);
      v43 = *(_QWORD *)(v0 + 72);
      v44 = *(_QWORD *)(v0 + 24);

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
      if (v44)
      {
        v46 = *(void (**)(void))(v0 + 24);
        URL._bridgeToObjectiveC()(v45);
        v48 = v47;
        v46();

      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    }
  }
  v49 = *(_QWORD *)(v0 + 96);
  v50 = *(_QWORD *)(v0 + 88);
  v51 = *(_QWORD *)(v0 + 64);
  v52 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10040E8F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  void (*v37)(uint64_t (*)(), _QWORD *);
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD v43[2];
  void (*v44)(_QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v43 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)v43 - v16;
  if (a3)
  {
    swift_errorRetain(a3);
    v18 = Logger.groupActivities.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v18, v8);
    swift_errorRetain(a3);
    v19 = swift_errorRetain(a3);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(8, -1);
      v44 = a4;
      v43[0] = v23;
      v43[1] = a5;
      *(_DWORD *)v22 = 138543362;
      swift_errorRetain(a3);
      v24 = _swift_stdlib_bridgeErrorToNSError(a3);
      v45 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
      v25 = v43[0];
      *(_QWORD *)v43[0] = v24;
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[Suggestion] There was an error requesting the session %{public}@", v22, 0xCu);
      v26 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v25, 1, v26);
      v27 = v25;
      a4 = v44;
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    if (a4)
      a4(0, 0);
    swift_errorRelease(a3);
  }
  else
  {
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v28 = (*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 528))();
    if (v28)
    {
      v29 = (_QWORD *)v28;
      v30 = Logger.groupActivities.unsafeMutableAddressor();
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v30, v8);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.error.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "[Suggestion] Got new session, waiting for connection.", v34, 2u);
        swift_slowDealloc(v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v35 = swift_allocObject(&unk_1010C4A40, 24, 7);
      swift_unknownObjectWeakInit(v35 + 16, v29);
      v36 = (_QWORD *)swift_allocObject(&unk_1010C4A68, 40, 7);
      v36[2] = v35;
      v36[3] = a4;
      v36[4] = a5;
      v37 = *(void (**)(uint64_t (*)(), _QWORD *))((swift_isaMask & *v29) + 0x358);
      swift_retain();
      sub_100048AAC((uint64_t)a4, a5);
      v37(sub_10040FD00, v36);

      swift_release();
      swift_release();
    }
    else
    {
      v38 = Logger.groupActivities.unsafeMutableAddressor();
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v38, v8);
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.error.getter(v40);
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "[Suggestion] There was no session after requesting it", v42, 2u);
        swift_slowDealloc(v42, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      if (a4)
        a4(0, 0);
    }
  }
}

uint64_t sub_10040ED70(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *Strong;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  NSURL *v26;
  void *v27;
  void *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  _BYTE v36[24];

  v35 = a3;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v36[-v10 - 8];
  v12 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v12);
  v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v36, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v20 = Strong;
    (*(void (**)(_QWORD *))((swift_isaMask & *Strong) + 0x260))(Strong);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
      v21 = Logger.groupActivities.unsafeMutableAddressor();
      v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.error.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Suggestion] Returning joinURL for session after requesting", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (a2)
      {
        URL._bridgeToObjectiveC()(v26);
        v28 = v27;
        a2(v27);

      }
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_10004FF60((uint64_t)v14, &qword_10119E460);
  v30 = Logger.groupActivities.unsafeMutableAddressor();
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v30, v5);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.error.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "[Suggestion] Session had no joinURL after requesting it", v34, 2u);
    swift_slowDealloc(v34, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  if (a2)
    return ((uint64_t (*)(_QWORD, _QWORD))a2)(0, 0);
  return result;
}

id GroupActivitiesManager.SuggestionProvider.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  char *v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = &v0[OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_playingItemSuggestion];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_QWORD *)v2 + 8) = 0;
  v3 = &v0[OBJC_IVAR____TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider_containerItemSuggestion];
  *((_QWORD *)v3 + 8) = 0;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t sub_10040F1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B2DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10040F208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B2DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10040F250()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v8[6];

  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v0 = (*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 528))();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v3 = String._bridgeToObjectiveC()();
  v4 = swift_allocObject(&unk_1010C49A0, 24, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v8[4] = sub_10040FBB0;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10056D5E0;
  v8[3] = &unk_1010C49B8;
  v5 = _Block_copy(v8);
  v6 = v1;
  objc_msgSend(v2, "registerItemForTypeIdentifier:loadHandler:", v3, v5, swift_release().n128_f64[0]);
  _Block_release(v5);

  return v2;
}

uint64_t sub_10040F3A4(uint64_t a1, uint64_t a2)
{
  _s18SuggestionProviderC10SuggestionVwcp(a2, a1);
  return a2;
}

uint64_t sub_10040F3D8(uint64_t a1)
{
  _s18SuggestionProviderC10SuggestionVwxx(a1);
  return a1;
}

uint64_t sub_10040F408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10040DEC4(a1, a2, v2 + 16);
}

uint64_t sub_10040F410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10040F420(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10040F42C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + 16);
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v1);
    v1 = (id *)(v0 + 56);
  }

  return swift_deallocObject(v0, 88);
}

double sub_10040F478@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10040E148(a1, v2 + 16, a2);
}

uint64_t type metadata accessor for GroupActivitiesManager.SuggestionProvider()
{
  return objc_opt_self(_TtCE5MusicC9MusicCore22GroupActivitiesManager18SuggestionProvider);
}

void _s18SuggestionProviderC4ItemOwxx(uint64_t a1)
{
  id *v1;
  unsigned int v2;

  v1 = (id *)a1;
  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 >= 2)
    v2 = *(_DWORD *)a1 + 2;
  if (v2 == 1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
    v1 += 5;
  }

}

uint64_t _s18SuggestionProviderC4ItemOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  void *v6;
  char v7;
  id v8;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = 1;
  }
  else
  {
    v7 = 0;
    v6 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  v8 = v6;
  *(_BYTE *)(a1 + 48) = v7;
  return a1;
}

uint64_t _s18SuggestionProviderC4ItemOwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  id *v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  char v9;
  id v10;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    v5 = (id *)a1;
    if (v4 == 1)
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
      v5 = (id *)(a1 + 40);
    }

    v6 = *(unsigned __int8 *)(a2 + 48);
    if (v6 >= 2)
      v6 = *(_DWORD *)a2 + 2;
    if (v6 == 1)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      v8 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v8;
      v9 = 1;
    }
    else
    {
      v9 = 0;
      v8 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 48) = v9;
    v10 = v8;
  }
  return a1;
}

__n128 _s14InProgressViewV5ModelVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s18SuggestionProviderC4ItemOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  id *v5;
  unsigned int v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    v5 = (id *)a1;
    if (v4 == 1)
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
      v5 = (id *)(a1 + 40);
    }

    v6 = *(unsigned __int8 *)(a2 + 48);
    if (v6 >= 2)
      v6 = *(_DWORD *)a2 + 2;
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v6) = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t _s18SuggestionProviderC4ItemOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t _s18SuggestionProviderC4ItemOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_10040F780(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_10040F79C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroupActivitiesManager.SuggestionProvider.Item()
{
  return &type metadata for GroupActivitiesManager.SuggestionProvider.Item;
}

void _s18SuggestionProviderC10SuggestionVwxx(uint64_t a1)
{
  id *v2;

  v2 = (id *)a1;
  if (*(_BYTE *)(a1 + 48) == 1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
    v2 = (id *)(a1 + 40);
  }

}

uint64_t _s18SuggestionProviderC10SuggestionVwcp(uint64_t a1, uint64_t a2)
{
  char v4;
  __int128 v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v4 = *(_BYTE *)(a2 + 48);
  if ((v4 & 1) != 0)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v6;
  }
  else
  {
    v6 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  v7 = v6;
  *(_BYTE *)(a1 + 48) = v4;
  v8 = *(void **)(a2 + 56);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  v10 = v8;
  v11 = v9;
  return a1;
}

uint64_t _s18SuggestionProviderC10SuggestionVwca(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  if (a1 != a2)
  {
    sub_10040CBA0(a1);
    v4 = *(_BYTE *)(a2 + 48);
    if ((v4 & 1) != 0)
    {
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      v6 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v6;
    }
    else
    {
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 48) = v4;
    v7 = v6;
  }
  v8 = *(void **)(a2 + 56);
  v9 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  v10 = v8;

  v11 = *(void **)(a1 + 64);
  v12 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v12;
  v13 = v12;

  return a1;
}

__n128 _s18SuggestionProviderC10SuggestionVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s18SuggestionProviderC10SuggestionVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;

  if (a1 != a2)
  {
    sub_10040CBA0(a1);
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

uint64_t _s18SuggestionProviderC10SuggestionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s18SuggestionProviderC10SuggestionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s18SuggestionProviderC10SuggestionVMa()
{
  return &_s18SuggestionProviderC10SuggestionVN;
}

uint64_t sub_10040FA84()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10040FAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10040BC60(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10040FAB0()
{
  uint64_t v0;
  id *v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v1 = (id *)(v0 + 48);
  if (*(_BYTE *)(v0 + 96) == 1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v1);
    v1 = (id *)(v0 + 88);
  }

  return swift_deallocObject(v0, 120);
}

uint64_t sub_10040FB0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011B2F04);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10040DFC4(a1, v4, v5, v6, v7);
}

uint64_t sub_10040FB8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10040FBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10040E334(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_10040FBB8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10040FBF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011B2F2C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_10040E434(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10040FC74()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10040FCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10040E8F0(a1, a2, a3, *(void (**)(_QWORD, _QWORD))(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_10040FCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10040FCCC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10040FD00()
{
  uint64_t v0;

  return sub_10040ED70(*(_QWORD *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10040FD0C()
{
  uint64_t v0;
  id *v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v1 = (id *)(v0 + 48);
  if (*(_BYTE *)(v0 + 96) == 1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v1);
    v1 = (id *)(v0 + 88);
  }

  return swift_deallocObject(v0, 112);
}

uint64_t sub_10040FD68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (uint64_t)(v1 + 6);
  v9 = v1[13];
  v10 = (_QWORD *)swift_task_alloc(dword_1011B2F4C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_10040D060(a1, v4, v5, v6, v7, v8, v9);
}

id sub_10040FE08()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  qword_10124CF88 = (uint64_t)result;
  return result;
}

id sub_10040FE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  id result;
  id v10;
  void (*v11)(_BYTE *, _QWORD);
  void *v12;
  id v13;
  void (*v14)(_BYTE *, _QWORD);
  id v15;
  void (*v16)(_BYTE *, _QWORD);
  id v17;
  uint64_t (*v18)(_BYTE *, _QWORD);
  uint64_t v19;
  void (*v20)(_BYTE *, _QWORD);
  id v21;
  uint64_t (*v22)(_BYTE *, _QWORD);
  _BYTE v23[32];

  v3 = type metadata accessor for UIButton.Configuration.Size(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for UIContentUnavailableConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v1, v7);
  v8 = (void *)objc_opt_self(UIFont);
  result = objc_msgSend(v8, "_preferredFontForTextStyle:weight:", UIFontTextStyleTitle2, UIFontWeightSemibold);
  if (result)
  {
    v10 = result;
    v11 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.textProperties.modify(v23);
    UIContentUnavailableConfiguration.TextProperties.font.setter(v10);
    v11(v23, 0);
    v12 = (void *)objc_opt_self(UIColor);
    v13 = objc_msgSend(v12, "labelColor");
    v14 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.textProperties.modify(v23);
    UIContentUnavailableConfiguration.TextProperties.color.setter(v13);
    v14(v23, 0);
    v15 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleBody);
    v16 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.secondaryTextProperties.modify(v23);
    UIContentUnavailableConfiguration.TextProperties.font.setter(v15);
    v16(v23, 0);
    v17 = objc_msgSend(v12, "secondaryLabelColor");
    v18 = (uint64_t (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.secondaryTextProperties.modify(v23);
    UIContentUnavailableConfiguration.TextProperties.color.setter(v17);
    v19 = v18(v23, 0);
    UIContentUnavailableConfiguration.textToSecondaryTextPadding.setter(v19, 8.0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.Size.medium(_:), v3);
    v20 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v23);
    UIButton.Configuration.buttonSize.setter(v6);
    v20(v23, 0);
    v21 = objc_msgSend(v12, "tintColor");
    v22 = (uint64_t (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v23);
    UIButton.Configuration.baseForegroundColor.setter(v21);
    return (id)v22(v23, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004100B8(uint64_t a1)
{
  return sub_10041063C(a1, qword_10124CF90, (uint64_t (*)(void))sub_1004100CC);
}

uint64_t sub_1004100CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static UIContentUnavailableConfiguration.empty()(v10);
  sub_10040FE38(a1);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v13);

  UIContentUnavailableConfiguration.image.setter(v14);
  v15 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100E39370);
  static Locale.current.getter(v15);
  v16 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  UIContentUnavailableConfiguration.text.setter(v16);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000022, 0x8000000100E393A0);
  static Locale.current.getter(v17);
  v18 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  return UIContentUnavailableConfiguration.secondaryText.setter(v18);
}

uint64_t sub_1004102B8(uint64_t a1)
{
  return sub_10041063C(a1, qword_10124CFA8, (uint64_t (*)(void))sub_1004102CC);
}

uint64_t sub_1004102CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, _QWORD);
  _BYTE v26[40];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  static UIContentUnavailableConfiguration.empty()(v10);
  sub_10040FE38(a1);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v13);

  UIContentUnavailableConfiguration.image.setter(v14);
  v15 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E393D0);
  static Locale.current.getter(v15);
  v16 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  UIContentUnavailableConfiguration.text.setter(v16);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000004DLL, 0x8000000100E393F0);
  static Locale.current.getter(v17);
  v18 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  UIContentUnavailableConfiguration.secondaryText.setter(v18);
  v19 = String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
  static Locale.current.getter(v19);
  v20 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v21 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v26);
  UIButton.Configuration.title.setter(v20);
  v21(v26, 0);
  sub_1004105AC();
  v22 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004105E8, 0);
  v23 = (uint64_t (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.buttonProperties.modify(v26);
  UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter(v22);
  return v23(v26, 0);
}

unint64_t sub_1004105AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3440;
  if (!qword_1011A3440)
  {
    v1 = objc_opt_self(UIAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1011A3440);
  }
  return result;
}

double sub_1004105E8()
{
  void (*v0)(_QWORD, _QWORD, __n128);
  __n128 v1;
  double result;

  v0 = *(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)*CloudLibrary.StatusObserver.shared.unsafeMutableAddressor()
                                                     + 216);
  v1 = swift_retain();
  v0(0, 0, v1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100410628(uint64_t a1)
{
  return sub_10041063C(a1, qword_10124CFC0, (uint64_t (*)(void))sub_10041068C);
}

uint64_t sub_10041063C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;

  v5 = type metadata accessor for UIContentUnavailableConfiguration(0);
  sub_10004FACC(v5, a2);
  sub_100048B14(v5, (uint64_t)a2);
  return a3();
}

uint64_t sub_10041068C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static UIContentUnavailableConfiguration.empty()(v10);
  sub_10040FE38(a1);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v13);

  UIContentUnavailableConfiguration.image.setter(v14);
  v15 = String.LocalizationValue.init(stringLiteral:)(0x20676E69636E7953, 0xEF7972617262694CLL);
  static Locale.current.getter(v15);
  v16 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  UIContentUnavailableConfiguration.text.setter(v16);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003BLL, 0x8000000100E39470);
  static Locale.current.getter(v17);
  v18 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Syncing Library Empty Message", 29, 2);
  return UIContentUnavailableConfiguration.secondaryText.setter(v18);
}

uint64_t sub_10041088C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];

  v33 = a3;
  v34 = a4;
  v32 = a1;
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v31 - v19;
  static UIContentUnavailableConfiguration.empty()(v18);
  sub_10040FE38(a5);
  v21 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  v22 = v21(v20, v13);
  if ((a2 & 1) == 0)
    __asm { BR              X10 }
  static UIContentUnavailableConfiguration.search()(v22);
  sub_10040FE38((uint64_t)v20);
  v21(v16, v13);
  v21((char *)a5, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a5, v20, v13);
  sub_100463360(v32);
  UIContentUnavailableConfiguration.secondaryText.setter(v23);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x66664F206E727554, 0xEF7265746C694620);
  static Locale.current.getter(v24);
  v25 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, "Button title to turn off favorite filter", 40, 2);
  v26 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.button.modify(v35);
  UIButton.Configuration.title.setter(v25);
  v26(v35, 0);
  sub_1004105AC();
  v27 = swift_allocObject(&unk_1010C4AC8, 32, 7);
  *(_QWORD *)(v27 + 16) = v33;
  *(_QWORD *)(v27 + 24) = v34;
  swift_retain();
  v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10004D5F4, v27);
  v29 = (uint64_t (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.buttonProperties.modify(v35);
  UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter(v28);
  return v29(v35, 0);
}

uint64_t sub_100410D10@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(_QWORD *, _QWORD);
  uint64_t v76;
  uint64_t (*v77)(_QWORD *, _QWORD);
  uint64_t v78;
  NSString v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  int v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  const char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[6];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v107 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v106 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v105);
  v101 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v100 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v100 - v15;
  v104 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v104);
  v102 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v103 = (char *)&v100 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v100 - v21;
  v23 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIContentUnavailableConfiguration.empty()(v25);
  sub_10040FE38(a3);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  sub_100064C78(a2, (uint64_t)v117);
  v28 = sub_100007E8C(&qword_1011B2F60);
  if (swift_dynamicCast(v108, v117, v28, &_s6MoviesVN, 0))
  {
    v29 = v109;
    v31 = v112;
    v30 = v113;
    v32 = v115;
    swift_bridgeObjectRelease(v116);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v30);
    v33 = v31;
LABEL_5:
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v29);
    swift_release();
LABEL_6:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v117);
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v37);

    result = UIContentUnavailableConfiguration.image.setter(v38);
    goto LABEL_7;
  }
  if (swift_dynamicCast(v108, v117, v28, &_s7TVShowsVN, 0))
  {
    v29 = v109;
    v34 = v111;
    v35 = v112;
    v36 = v114;
    swift_bridgeObjectRelease(v115);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v35);
    v33 = v34;
    goto LABEL_5;
  }
  if (swift_dynamicCast(v22, v117, v28, v104, 0))
  {
    sub_10005B748((uint64_t)v22, _s10TVEpisodesVMa);
    goto LABEL_6;
  }
  if (swift_dynamicCast(v16, v117, v28, v105, 0))
  {
    v64 = String._bridgeToObjectiveC()();
    v65 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v64);

    UIContentUnavailableConfiguration.image.setter(v65);
    sub_10005B748((uint64_t)v16, _s11MusicVideosVMa);
  }
  else
  {
    if (swift_dynamicCast(v108, v117, v28, &_s7ArtistsVN, 0))
    {
      v78 = v109;
      swift_bridgeObjectRelease(v110);
      swift_bridgeObjectRelease(v78);
      swift_release();
    }
    v79 = String._bridgeToObjectiveC()();
    v89 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v79);

    UIContentUnavailableConfiguration.image.setter(v89);
  }
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v117);
LABEL_7:
  if (a1 >= 2u)
  {
    if (a1 != 2)
      return result;
    sub_100064C78(a2, (uint64_t)v117);
    if (swift_dynamicCast(v108, v117, v28, &_s6MoviesVN, 0))
    {
      v48 = v109;
      v49 = v112;
      v50 = v113;
      v51 = v115;
      swift_bridgeObjectRelease(v116);
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease(v50);
      swift_bridgeObjectRelease(v49);
      swift_bridgeObjectRelease(v48);
      swift_release();
      v52 = v106;
      v53 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002FLL, 0x8000000100E39620);
      v54 = v107;
      goto LABEL_14;
    }
    if (swift_dynamicCast(v108, v117, v28, &_s7TVShowsVN, 0))
    {
      v60 = v109;
      v61 = v111;
      v62 = v112;
      v63 = v114;
      swift_bridgeObjectRelease(v115);
      swift_bridgeObjectRelease(v63);
      swift_bridgeObjectRelease(v62);
      swift_bridgeObjectRelease(v61);
      swift_bridgeObjectRelease(v60);
      swift_release();
    }
    else
    {
      v70 = (uint64_t)v102;
      if (!swift_dynamicCast(v102, v117, v28, v104, 0))
      {
        v85 = (uint64_t)v101;
        v86 = swift_dynamicCast(v101, v117, v28, v105, 0);
        v52 = v106;
        v54 = v107;
        if (v86)
        {
          v87 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000035, 0x8000000100E395A0);
          static Locale.current.getter(v87);
          v88 = String.init(localized:table:bundle:locale:comment:)(v52, 0, 0, 0, v54, "Empty Library Title", 19, 2);
          UIContentUnavailableConfiguration.secondaryText.setter(v88);
          sub_10005B748(v85, _s11MusicVideosVMa);
          goto LABEL_15;
        }
        if (swift_dynamicCast(v108, v117, v28, &_s7ArtistsVN, 0))
        {
          v95 = v109;
          swift_bridgeObjectRelease(v110);
          swift_bridgeObjectRelease(v95);
          swift_release();
          v96 = 0xD000000000000030;
          v97 = "Artists added from Apple Music will appear here.";
        }
        else
        {
          v96 = 0xD00000000000002ELL;
          v97 = "Music added from Apple Music will appear here.";
        }
        v53 = String.LocalizationValue.init(stringLiteral:)(v96, (unint64_t)(v97 - 32) | 0x8000000000000000);
LABEL_14:
        static Locale.current.getter(v53);
        v55 = String.init(localized:table:bundle:locale:comment:)(v52, 0, 0, 0, v54, "Empty Library Title", 19, 2);
        UIContentUnavailableConfiguration.secondaryText.setter(v55);
LABEL_15:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v117);
LABEL_30:
        v73 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E39520);
        static Locale.current.getter(v73);
        v74 = String.init(localized:table:bundle:locale:comment:)(v52, 0, 0, 0, v54, "Empty Library Button Title", 26, 2);
        v75 = (void (*)(_QWORD *, _QWORD))UIContentUnavailableConfiguration.button.modify(v108);
        UIButton.Configuration.title.setter(v74);
        v75(v108, 0);
        sub_1004105AC();
        v76 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004118F0, 0);
        v77 = (uint64_t (*)(_QWORD *, _QWORD))UIContentUnavailableConfiguration.buttonProperties.modify(v108);
        UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter(v76);
        return v77(v108, 0);
      }
      sub_10005B748(v70, _s10TVEpisodesVMa);
    }
    v52 = v106;
    v54 = v107;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v117);
    v71 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x8000000100E395E0);
    static Locale.current.getter(v71);
    v72 = String.init(localized:table:bundle:locale:comment:)(v52, 0, 0, 0, v54, "Empty Library Title", 19, 2);
    UIContentUnavailableConfiguration.secondaryText.setter(v72);
    goto LABEL_30;
  }
  sub_100064C78(a2, (uint64_t)v117);
  if (swift_dynamicCast(v108, v117, v28, &_s6MoviesVN, 0))
  {
    v40 = v109;
    v41 = v112;
    v42 = v113;
    v43 = v115;
    swift_bridgeObjectRelease(v116);
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v40);
    swift_release();
    v44 = v106;
    v45 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x8000000100E39710);
    v46 = v107;
    static Locale.current.getter(v45);
    v47 = String.init(localized:table:bundle:locale:comment:)(v44, 0, 0, 0, v46, "Empty Library Title", 19, 2);
LABEL_10:
    UIContentUnavailableConfiguration.secondaryText.setter(v47);
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v117);
  }
  if (swift_dynamicCast(v13, v117, v28, v105, 0))
  {
    v56 = v106;
    v57 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x8000000100E396E0);
    v58 = v107;
    static Locale.current.getter(v57);
    v59 = String.init(localized:table:bundle:locale:comment:)(v56, 0, 0, 0, v58, "Empty Library Title", 19, 2);
    UIContentUnavailableConfiguration.secondaryText.setter(v59);
    sub_10005B748((uint64_t)v13, _s11MusicVideosVMa);
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v117);
  }
  if (swift_dynamicCast(v108, v117, v28, &_s7TVShowsVN, 0))
  {
    v66 = v109;
    v67 = v111;
    v68 = v112;
    v69 = v114;
    swift_bridgeObjectRelease(v115);
    swift_bridgeObjectRelease(v69);
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v66);
    swift_release();
  }
  else
  {
    v80 = (uint64_t)v103;
    if (!swift_dynamicCast(v103, v117, v28, v104, 0))
    {
      v90 = swift_dynamicCast(v108, v117, v28, &_s7ArtistsVN, 0);
      v91 = v106;
      if (v90)
      {
        v92 = v109;
        swift_bridgeObjectRelease(v110);
        swift_bridgeObjectRelease(v92);
        swift_release();
        v93 = 0x8000000100E39680;
        v94 = 0xD000000000000028;
      }
      else
      {
        v94 = 0xD000000000000027;
        v93 = 0x8000000100E39650;
      }
      v98 = String.LocalizationValue.init(stringLiteral:)(v94, v93);
      v99 = v107;
      static Locale.current.getter(v98);
      v47 = String.init(localized:table:bundle:locale:comment:)(v91, 0, 0, 0, v99, "Empty Library Title", 19, 2);
      goto LABEL_10;
    }
    sub_10005B748(v80, _s10TVEpisodesVMa);
  }
  v82 = v106;
  v81 = v107;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v117);
  v83 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, 0x8000000100E396B0);
  static Locale.current.getter(v83);
  v84 = String.init(localized:table:bundle:locale:comment:)(v82, 0, 0, 0, v81, "Empty Library Title", 19, 2);
  return UIContentUnavailableConfiguration.secondaryText.setter(v84);
}

void sub_1004118F0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v1 = v0;
    LSApplicationWorkspace.openMusic(tabIdentifier:)((MusicCore::TabIdentifier_optional)2);

  }
}

uint64_t sub_10041195C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_100411980(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = *(int *)(a3 + 20);
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for VideoArtwork(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C(&qword_1011BCC50);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = *(int *)(a3 + 24);
    v45 = (uint64_t *)((char *)a1 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_100411CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v13 = a1 + *(int *)(a2 + 20);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8)).n128_u64[0];
  return result;
}

char *sub_100411E50(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = *(int *)(a3 + 20);
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = *(int *)(a3 + 24);
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100412184(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  v62 = *(int *)(a3 + 20);
  v63 = (void *)(a1 + v62);
  v64 = &a2[v62];
  v65 = type metadata accessor for VideoArtwork(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(void *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v66 + 8))(v63, v65);
    goto LABEL_32;
  }
  if (v69)
  {
LABEL_32:
    v70 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_33:
  v71 = *(int *)(a3 + 24);
  v72 = (_QWORD *)(a1 + v71);
  v73 = &a2[v71];
  *v72 = *(_QWORD *)v73;
  v74 = v72[1];
  v72[1] = *((_QWORD *)v73 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v74);
  return a1;
}

char *sub_100412718(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = *(int *)(a3 + 20);
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_100412A40(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_BYTE *)(v55 + 16) = v56[16];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  v57 = *(int *)(a3 + 20);
  v58 = (void *)(a1 + v57);
  v59 = &a2[v57];
  v60 = type metadata accessor for VideoArtwork(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_32;
  }
  if (v64)
  {
LABEL_32:
    v65 = sub_100007E8C(&qword_1011BCC50);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_33:
  v66 = *(int *)(a3 + 24);
  v67 = (_QWORD *)(a1 + v66);
  v68 = &a2[v66];
  v70 = *(_QWORD *)v68;
  v69 = *((_QWORD *)v68 + 1);
  v71 = v67[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease(v71);
  return a1;
}

uint64_t sub_100412FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100412FD0);
}

uint64_t sub_100412FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100007E8C(&qword_1011BCC50);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_10041308C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100413098);
}

uint64_t sub_100413098(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100007E8C(&qword_1011BCC50);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t _s7ArtworkVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B2FC0;
  if (!qword_1011B2FC0)
    return swift_getSingletonMetadata(a1, &_s7ArtworkVMn);
  return result;
}

void sub_100413180(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10041320C(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100EBA2A0;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_10041320C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011BCBF0)
  {
    v2 = type metadata accessor for VideoArtwork(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011BCBF0);
  }
}

uint64_t sub_100413260(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9FFD8, 1);
}

uint64_t sub_100413270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  __int128 *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t OpaqueTypeConformance2;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  _BYTE v126[26];

  v2 = v1;
  v122 = a1;
  v106 = type metadata accessor for AccessibilityTraits(0);
  v121 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v120 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AccessibilityChildBehavior(0);
  v118 = *(_QWORD *)(v4 - 8);
  v119 = v4;
  __chkstk_darwin(v4);
  v117 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011B3000);
  __chkstk_darwin(v10);
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v13);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v16);
  v97 = (uint64_t)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v95 - v19;
  v21 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v21);
  v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v24);
  v26 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for ArtworkMotionView(0);
  __chkstk_darwin(v100);
  v99 = (uint64_t)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011B3008);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v101 = (char *)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C(&qword_1011B3010);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v105 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_1011B3018);
  v111 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v110 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011B3020);
  __chkstk_darwin(v108);
  v114 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011B3028);
  __chkstk_darwin(v116);
  v115 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011B3030);
  __chkstk_darwin(v33);
  v112 = (char *)&v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = _s7ArtworkVMa(0);
  v35 = v2 + *(int *)(v103 + 20);
  v98 = v26;
  sub_10004A160(v35, (uint64_t)v26, &qword_1011BCC50);
  sub_10004A160(v2, (uint64_t)v20, (uint64_t *)&unk_1011A3E10);
  v36 = type metadata accessor for ArtworkImage.ViewModel(0);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48);
  if (v37(v20, 1, v36) == 1)
  {
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A3E10);
    v38 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v23, 1, 1, v38);
  }
  else
  {
    v39 = type metadata accessor for Artwork(0);
    v96 = v6;
    v95 = v9;
    v40 = v39;
    v41 = v15;
    v42 = v2;
    v43 = *(_QWORD *)(v39 - 8);
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v23, v20, v39);
    sub_10005B748((uint64_t)v20, type metadata accessor for ArtworkImage.ViewModel);
    v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56);
    v2 = v42;
    v15 = v41;
    v45 = v40;
    v9 = v95;
    v6 = v96;
    v44(v23, 0, 1, v45);
  }
  v46 = v97;
  sub_10004A160(v2, v97, (uint64_t *)&unk_1011A3E10);
  if (v37((char *)v46, 1, v36) == 1)
  {
    sub_10004FF60(v46, (uint64_t *)&unk_1011A3E10);
    v47 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v15, 1, 1, v47);
  }
  else
  {
    sub_10004A160(v46 + *(int *)(v36 + 20), (uint64_t)v15, (uint64_t *)&unk_1011A14A0);
    sub_10005B748(v46, type metadata accessor for ArtworkImage.ViewModel);
  }
  v48 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v49 = (__int128 *)(v2 + v48[7]);
  v50 = *(__int128 *)((char *)v49 + 26);
  v51 = v49[1];
  v125 = *v49;
  *(_OWORD *)v126 = v51;
  *(_OWORD *)&v126[10] = v50;
  sub_100413B9C(v2 + v48[5], (uint64_t)v12);
  v52 = type metadata accessor for ArtworkImage.Placeholder(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v12, 0, 1, v52);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ArtworkImage.ReusePolicy.notReusableForDistinctItems(_:), v6);
  v53 = v99;
  ArtworkMotionView.init(videoArtwork:artwork:cropStyle:size:placeholder:reusePolicy:)((uint64_t)v98, (uint64_t)v23, (uint64_t)v15, &v125, (uint64_t)v12, (uint64_t)v9, v99);
  v54 = v2;
  v55 = v2 + v48[8];
  v56 = *(_QWORD *)v55;
  v57 = *(_QWORD *)(v55 + 8);
  v58 = *(_BYTE *)(v55 + 16);
  v59 = sub_100048748(&qword_1011B3038, type metadata accessor for ArtworkMotionView, (uint64_t)&protocol conformance descriptor for ArtworkMotionView);
  v60 = v101;
  v61 = v100;
  View.corner(_:)(v56, v57, v58, v100, v59);
  sub_10005B748(v53, type metadata accessor for ArtworkMotionView);
  v62 = Border.artwork.unsafeMutableAddressor();
  v63 = *v62;
  v64 = *((double *)v62 + 1);
  v65 = *(_QWORD *)v55;
  v66 = *(_QWORD *)(v55 + 8);
  v67 = *(_BYTE *)(v55 + 16);
  v68 = *((_BYTE *)v62 + 16);
  swift_retain();
  v123 = v61;
  v124 = v59;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v70 = v105;
  v71 = v66;
  v72 = v104;
  View.border(_:corner:)(v63, v68, v65, v71, v67, v104, OpaqueTypeConformance2, v64);
  v73 = swift_release();
  v74 = (*(uint64_t (**)(char *, uint64_t, __n128))(v102 + 8))(v60, v72, v73);
  v75 = v117;
  static AccessibilityChildBehavior.ignore.getter(v74);
  v123 = v72;
  v124 = OpaqueTypeConformance2;
  v76 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v77 = v110;
  v78 = v109;
  View.accessibilityElement(children:)(v75, v109, v76);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v75, v119);
  v79 = (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v70, v78);
  v80 = v120;
  static AccessibilityTraits.isImage.getter(v79);
  v123 = v78;
  v124 = v76;
  v81 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v82 = v113;
  v83 = (uint64_t)v114;
  View.accessibilityAddTraits(_:)(v80, v113, v81);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v80, v106);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v77, v82);
  v84 = AccessibilityIdentifier.containerDetailHeaderArtwork.unsafeMutableAddressor();
  v85 = *v84;
  v86 = v84[1];
  v87 = sub_100413BE0();
  swift_bridgeObjectRetain();
  v88 = (uint64_t)v115;
  View.accessibilityIdentifier(_:)(v85, v86, v108, v87);
  swift_bridgeObjectRelease(v86);
  sub_10004FF60(v83, &qword_1011B3020);
  v89 = (uint64_t *)(v54 + *(int *)(v103 + 24));
  v90 = *v89;
  v91 = v89[1];
  v92 = sub_100413CF8();
  v93 = (uint64_t)v112;
  View.accessibilityLabel(_:)(v90, v91, v116, v92);
  sub_10004FF60(v88, &qword_1011B3028);
  return sub_100413D14(v93, v122);
}

uint64_t sub_100413B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100413BE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = qword_1011B3040;
  if (!qword_1011B3040)
  {
    v1 = sub_100044B54(&qword_1011B3020);
    v2 = sub_100044B54(&qword_1011B3010);
    v3 = sub_100044B54(&qword_1011B3008);
    v6 = type metadata accessor for ArtworkMotionView(255);
    v7 = sub_100048748(&qword_1011B3038, type metadata accessor for ArtworkMotionView, (uint64_t)&protocol conformance descriptor for ArtworkMotionView);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3040);
  }
  return result;
}

uint64_t sub_100413CF8()
{
  return sub_100413D88(&qword_1011B3048, &qword_1011B3028, (void (*)(void))sub_100413BE0);
}

uint64_t sub_100413D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B3030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100413D5C()
{
  return sub_100413D88(&qword_1011B3050, &qword_1011B3030, (void (*)(void))sub_100413CF8);
}

uint64_t sub_100413D88(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100413E0C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100413E70(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100413F34(uint64_t a1, uint64_t a2)
{
  return sub_100414014(a1, a2, (uint64_t)&qword_10119D470, UIViewController_ptr);
}

uint64_t sub_100413F48(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;
  int v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      v5 = *v3++;
      v4 = v5;
      switch(v5)
      {
        case 3:
          if (a1 != 3)
            goto LABEL_4;
          return 1;
        case 4:
          if (a1 == 4)
            return 1;
          goto LABEL_4;
        case 5:
          if (a1 == 5)
            return 1;
          goto LABEL_4;
        case 6:
          if (a1 == 6)
            return 1;
          goto LABEL_4;
        case 7:
          if (a1 == 7)
            return 1;
          goto LABEL_4;
        case 8:
          if (a1 == 8)
            return 1;
          goto LABEL_4;
        case 9:
          if (a1 != 9)
            goto LABEL_4;
          return 1;
        default:
          if (a1 - 10 <= 0xFFFFFFF8 && v4 == a1)
            return 1;
LABEL_4:
          if (!--v2)
            return 0;
          break;
      }
    }
  }
  return 0;
}

uint64_t sub_100414000(uint64_t a1, uint64_t a2)
{
  return sub_100414014(a1, a2, (uint64_t)&qword_10119E4D0, NSNumber_ptr);
}

uint64_t sub_100414014(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v9 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v10 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v11 = v10;
      a4 = (_QWORD *)sub_10004A07C(0, (unint64_t *)a3, a4);
      a3 = static NSObject.== infix(_:_:)(v11, a1);

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v8 == 1)
        goto LABEL_18;
      if (v9)
        break;
      v9 = 5;
      while (1)
      {
        v17 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v9);
        v18 = static NSObject.== infix(_:_:)(a3, a1);

        if ((v18 & 1) != 0)
          goto LABEL_6;
        ++v9;
        if (v17 == v8)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(a3, a2);
      v14 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v15 = v13;
      v16 = static NSObject.== infix(_:_:)(v13, a1);
      swift_unknownObjectRelease(v15);
      if ((v16 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v14 == v8)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v19 = a2;
    else
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_100414198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t i;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a2);
  for (i = 0; ; i += 104)
  {
    v8 = a2 + i;
    if (*(_QWORD *)(a2 + i + 48) == v5
      && *(double *)(v8 + 32) == *(double *)a1
      && *(double *)(v8 + 40) == *(double *)(a1 + 8)
      && *(double *)(v8 + 72) == *(double *)(a1 + 40)
      && *(double *)(v8 + 80) == *(double *)(a1 + 48))
    {
      v10 = *(uint64_t (**)(uint64_t))(v8 + 88);
      v9 = *(_QWORD *)(v8 + 96);
      v11 = *(_QWORD *)(v8 + 112);
      v12 = *(_QWORD *)(v8 + 128);
      v22 = *(_QWORD *)(v8 + 64);
      swift_bridgeObjectRetain(v22);
      swift_retain(v9);
      v21 = v11;
      swift_retain(v11);
      v13 = swift_retain(v12);
      v14 = v10(v13);
      v16 = v15;
      v18 = (*(uint64_t (**)(void))(a1 + 56))();
      v19 = v17;
      if (v14 == v18 && v16 == v17)
      {
        swift_bridgeObjectRelease(a2);
        swift_release(v12);
        swift_release(v21);
        swift_release(v9);
        swift_bridgeObjectRelease(v22);
        swift_bridgeObjectRelease_n(v16, 2);
        return 1;
      }
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_release(v12);
      swift_release(v21);
      swift_release(v9);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v19);
      if ((v7 & 1) != 0)
        break;
    }
    if (!--v2)
    {
      swift_bridgeObjectRelease(a2);
      return 0;
    }
  }
  swift_bridgeObjectRelease(a2);
  return 1;
}

uint64_t sub_100414360(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_100414588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      type metadata accessor for BottomPlayerManager.Queue(0);
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_1004146FC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if ((a1 & 1) != 0)
    v4 = 0x7972617262696CLL;
  else
    v4 = 0x676F6C61746163;
  swift_bridgeObjectRetain(a2);
  v5 = 0;
  while (1)
  {
    if (*(_BYTE *)(a2 + v5 + 32))
      v6 = 0x7972617262696CLL;
    else
      v6 = 0x676F6C61746163;
    if (v6 == v4)
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      return 1;
    }
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, 0xE700000000000000, v4, 0xE700000000000000, 0);
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    if ((v7 & 1) != 0)
      break;
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease(a2);
      return 0;
    }
  }
  swift_bridgeObjectRelease(a2);
  return 1;
}

uint64_t sub_1004147EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((unint64_t)a2 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    v5 = type metadata accessor for MusicLibrary(0);
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if ((a2 & 0xC000000000000001) == 0)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a2);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_13;
LABEL_9:
      v14 = a1;
      v15 = v8;
      v10 = sub_100415A4C();
      v11 = dispatch thunk of static Equatable.== infix(_:_:)(&v15, &v14, v5, v10);
      swift_release();
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      ++v6;
      if (v9 == v4)
        goto LABEL_11;
    }
    v8 = *(_QWORD *)(a2 + 8 * v6);
    swift_retain();
    v9 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_9;
LABEL_13:
    __break(1u);
LABEL_14:
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_11:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_10041491C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
LABEL_20:
    swift_bridgeObjectRelease_n(v7, 2);
    return 1;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v7);
  result = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 8 * v14));
    v7 = v17;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v16 == v18 && v7 == v19)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_20;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v7, v18, v19, 0);
    swift_bridgeObjectRelease(v7);
    result = swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
      goto LABEL_7;
    ++v14;
    if (v15 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100414A70(uint64_t a1, uint64_t a2)
{
  return sub_100414014(a1, a2, (uint64_t)&qword_1011D0C80, UIKeyCommand_ptr);
}

uint64_t sub_100414A84(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_100414D90(uint64_t a1, uint64_t a2)
{
  return sub_100414014(a1, a2, (uint64_t)&qword_1011A20A0, UIView_ptr);
}

uint64_t sub_100414DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v13 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain(a2);
  v5 = 0;
  while (1)
  {
    v6 = *(_QWORD *)(a2 + 8 * v5 + 32);
    if (v6 < 0)
      break;
    if ((a1 & 0x8000000000000000) == 0)
      __asm { BR              X9 }
LABEL_3:
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease(a2);
      return 0;
    }
  }
  if ((a1 & 0x8000000000000000) == 0)
    goto LABEL_3;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *(_QWORD *)(v13 + 16);
  v10 = *(_QWORD *)(v13 + 24);
  v11 = v7 == v9 && v8 == v10;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v9, v10, 0) & 1) == 0)
    goto LABEL_3;
  swift_bridgeObjectRelease(a2);
  return 1;
}

uint64_t sub_1004150F8(uint64_t a1, uint64_t a2)
{
  return sub_100414014(a1, a2, (uint64_t)&qword_1011A3AF8, MPCPlayerPath_ptr);
}

_UNKNOWN **static SocialNetwork.allCases.getter()
{
  return &off_1010A9E70;
}

unint64_t SocialNetwork.rawValue.getter(char a1)
{
  unint64_t result;

  result = 0xD00000000000001FLL;
  if (!a1)
    return 0xD000000000000020;
  return result;
}

unint64_t sub_100415174(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[80];
  uint64_t v11;
  uint64_t v12;

  if (!a1)
    return sub_100041ADC((uint64_t)_swiftEmptyArrayStorage);
  v11 = v1;
  v12 = v2;
  if (a1 == 1)
  {
    v3 = sub_100007E8C((uint64_t *)&unk_1011AD3E0);
    inited = swift_initStackObject(v3, &v9);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = 0xD000000000000020;
    *(_QWORD *)(inited + 40) = 0x8000000100E39950;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    v5 = 0x3534313332323036;
    v6 = 0xEF30303938313939;
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011AD3E0);
    inited = swift_initStackObject(v8, v10);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = 0xD000000000000021;
    *(_QWORD *)(inited + 40) = 0x8000000100E398F0;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    v5 = 0xD000000000000024;
    v6 = 0x8000000100E39920;
  }
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v6;
  return sub_100041ADC(inited);
}

uint64_t sub_100415274@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v4 = sub_100007E8C(&qword_10119E460);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v20 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v20 - v11;
  if (!a1)
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease(v21);
    URL.init(string:)(0xD00000000000003CLL, 0x8000000100E397D0);
    v16 = type metadata accessor for URL(0);
    v17 = *(_QWORD *)(v16 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16);
    if ((_DWORD)result != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v10, v16);
    goto LABEL_11;
  }
  if (a1 == 1)
  {
    URL.init(string:)(0xD000000000000018, 0x8000000100E39810);
    v13 = type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    if ((_DWORD)result != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v12, v13);
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  URL.init(string:)(0xD000000000000020, 0x8000000100E397A0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v18);
  if ((_DWORD)result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v7, v18);
}

uint64_t sub_100415480(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v12[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    if (a1 == 1)
      v8 = 0x6B6F6F6265636146;
    else
      v8 = 0x7461686370616E53;
    v9 = 0xE800000000000000;
  }
  else
  {
    v8 = 0x6172676174736E49;
    v9 = 0xE90000000000006DLL;
  }
  v10 = String.LocalizationValue.init(stringLiteral:)(v8, v9);
  static Locale.current.getter(v10);
  return String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
}

uint64_t sub_1004155A8(char a1)
{
  return sub_1004155E0(a1, 0xD000000000000027, 0x8000000100E39830);
}

uint64_t sub_1004155C4(char a1)
{
  return sub_1004155E0(a1, 0xD00000000000002CLL, 0x8000000100E398C0);
}

uint64_t sub_1004155E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  const char *v19;
  char v20;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v6 = *BagProvider.shared.unsafeMutableAddressor();
  swift_retain(v6);
  v7 = (void *)BagProvider.bag.getter();
  swift_release(v6);
  if (!v7)
    goto LABEL_13;
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v11 = objc_msgSend(v7, "dictionaryForBagKey:", v10);

  if (!v11)
    goto LABEL_13;
  v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v13 = sub_100050E78(v12);
  swift_bridgeObjectRelease(v12);
  if (!v13)
    goto LABEL_13;
  if (!*(_QWORD *)(v13 + 16) || (v14 = sub_10079C2C4(a2, a3), (v15 & 1) == 0))
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    swift_bridgeObjectRelease(v13);
    goto LABEL_12;
  }
  sub_100051FEC(*(_QWORD *)(v13 + 56) + 40 * v14, (uint64_t)&v25);
  swift_bridgeObjectRelease(v13);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_12:
    sub_100415A0C((uint64_t)&v25);
    goto LABEL_13;
  }
  v16 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  if ((swift_dynamicCast(&v24, &v25, &type metadata for AnyHashable, v16, 6) & 1) == 0)
  {
LABEL_13:
    v20 = 1;
    return v20 & 1;
  }
  v17 = 0xD000000000000013;
  v18 = v24;
  if (a1)
  {
    if (a1 == 1)
    {
      v17 = 0xD000000000000015;
      v19 = "com.facebook.Facebook";
    }
    else
    {
      v17 = 0xD000000000000017;
      v19 = "com.toyopagroup.picaboo";
    }
  }
  else
  {
    v19 = "com.burbn.instagram";
  }
  v22 = (unint64_t)(v19 - 32) | 0x8000000000000000;
  v23 = sub_100413E70(v17, v22, v24);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v22);
  v20 = v23 ^ 1;
  return v20 & 1;
}

uint64_t sub_1004157D8(char *a1, unsigned __int8 *a2)
{
  return sub_1005D1B3C(*a1, *a2);
}

Swift::Int sub_1004157E4()
{
  char *v0;

  return sub_1005908EC(*v0);
}

uint64_t sub_1004157EC(uint64_t a1)
{
  char *v1;

  return sub_100044A78(a1, *v1);
}

Swift::Int sub_1004157F4(uint64_t a1)
{
  char *v1;

  return sub_100590E40(a1, *v1);
}

unint64_t sub_1004157FC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s5Music13SocialNetworkO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100415828@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = SocialNetwork.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100415850(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AC010;
}

unint64_t _s5Music13SocialNetworkO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9EE8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_1004158AC()
{
  unint64_t result;

  result = qword_1011B3058;
  if (!qword_1011B3058)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SocialNetwork, &type metadata for SocialNetwork);
    atomic_store(result, (unint64_t *)&qword_1011B3058);
  }
  return result;
}

unint64_t sub_1004158F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3060;
  if (!qword_1011B3060)
  {
    v1 = sub_100044B54(&qword_1011B3068);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011B3060);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SocialNetwork(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10041598C + 4 * byte_100EBA354[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004159C0 + 4 * byte_100EBA34F[v4]))();
}

uint64_t sub_1004159C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004159C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004159D0);
  return result;
}

uint64_t sub_1004159DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004159E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004159E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004159F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SocialNetwork()
{
  return &type metadata for SocialNetwork;
}

uint64_t sub_100415A0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011EAEC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100415A4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3820;
  if (!qword_1011A3820)
  {
    v1 = type metadata accessor for MusicLibrary(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrary, v1);
    atomic_store(result, (unint64_t *)&qword_1011A3820);
  }
  return result;
}

uint64_t sub_100415A94@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_100007E8C(&qword_10119F148);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119F150);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, &qword_10119F148);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_10119F148);
    v13 = sub_100007E8C(&qword_10119F158);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    sub_100065228((uint64_t)v8, (uint64_t)v12, &qword_10119F150);
    sub_10004A160((uint64_t)v12, a3, &qword_10119F150);
    v15 = sub_100007E8C(&qword_10119F158);
    v16 = a3 + *(int *)(v15 + 36);
    v17 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = sub_100007E8C(&qword_10119F160);
    swift_storeEnumTagMultiPayload(v16, v18, 0);
    *(_BYTE *)(a3 + *(int *)(v15 + 40)) = 2;
    a2(a3);
    sub_10004FF60((uint64_t)v12, &qword_10119F150);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 0, 1, v15);
  }
}

uint64_t sub_100415C78@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  return sub_100415CB0(a1, a2, &qword_10119F7B0, (uint64_t *)&unk_1011A3840, &qword_10119F7C0, a3);
}

uint64_t sub_100415C94@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  return sub_100415CB0(a1, a2, &qword_1011A05C0, &qword_1011A03B0, &qword_1011A0620, a3);
}

uint64_t sub_100415CB0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t *a3@<X3>, uint64_t *a4@<X4>, uint64_t *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v12 = sub_100007E8C(a3);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(a4);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v14, a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10004FF60((uint64_t)v14, a3);
    v19 = sub_100007E8C(a5);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a6, 1, 1, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(a6, v18, v15);
    v21 = sub_100007E8C(a5);
    v22 = a6 + *(int *)(v21 + 36);
    v23 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v24 = sub_100007E8C(&qword_10119F7C8);
    swift_storeEnumTagMultiPayload(v22, v24, 0);
    *(_BYTE *)(a6 + *(int *)(v21 + 40)) = 2;
    a2(a6);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a6, 0, 1, v21);
  }
}

uint64_t sub_100415E8C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_100007E8C(&qword_1011B3280);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HorizontalCellSource(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, &qword_1011B3280);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011B3280);
    v13 = sub_100007E8C(&qword_1011B0C40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    sub_10005B6C0((uint64_t)v8, (uint64_t)v12, type metadata accessor for HorizontalCellSource);
    sub_10005B704((uint64_t)v12, a3, type metadata accessor for HorizontalCellSource);
    v15 = sub_100007E8C(&qword_1011B0C40);
    v16 = a3 + *(int *)(v15 + 36);
    v17 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = sub_100007E8C(&qword_10119F7C8);
    swift_storeEnumTagMultiPayload(v16, v18, 0);
    *(_BYTE *)(a3 + *(int *)(v15 + 40)) = 2;
    a2(a3);
    sub_10005B748((uint64_t)v12, type metadata accessor for HorizontalCellSource);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 0, 1, v15);
  }
}

uint64_t sub_10041606C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  return sub_100415CB0(a1, a2, &qword_1011B33E8, &qword_1011A3C78, &qword_1011AC048, a3);
}

uint64_t sub_100416088@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  return sub_100415CB0(a1, a2, &qword_1011B33F0, &qword_10119D2D0, &qword_1011A7880, a3);
}

uint64_t sub_1004160A4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  void (*v21)(char *, uint64_t, uint64_t);
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  void *v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  double v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  __n128 v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t result;
  uint64_t (**v88)@<X0>(uint64_t@<X3>, uint64_t@<X8>);
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  unint64_t *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  void (*v109)(char *, uint64_t, uint64_t);
  __int128 v110;
  id v111;
  void *v112;
  char *v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t (**v121)@<X0>(uint64_t@<X3>, uint64_t@<X8>);
  uint64_t v122;
  uint64_t v123;
  _BYTE v124[32];
  uint64_t v125;
  _QWORD v126[5];
  _QWORD v127[5];
  _QWORD v128[5];
  _QWORD v129[5];
  _OWORD v130[5];
  __int128 v131;
  __int128 v132;
  __int128 v133;
  _BYTE v134[32];

  v3 = v2;
  v4 = a1;
  v121 = a2;
  v123 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v123 + 64);
  __chkstk_darwin(a1);
  v120 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  *(_QWORD *)&v115 = (char *)&v106 - v7;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v8);
  v118 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GenericMusicItem(0);
  v116 = *(_QWORD *)(v10 - 8);
  v117 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v4 + 16);
  v14 = type metadata accessor for Optional(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v106 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v106 - v17, v3, v14, v16);
  v19 = *(_QWORD *)(v13 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v13);
  v119 = v13;
  v122 = v3;
  if (v20 == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
    v22 = 0uLL;
    v23 = 0uLL;
    v24 = 0uLL;
    v25 = 0uLL;
    v26 = 0uLL;
    v27 = v120;
LABEL_12:
    v131 = v22;
    v132 = v23;
    v133 = v24;
    *(_OWORD *)v134 = v25;
    *(_OWORD *)&v134[16] = v26;
    v21(v27, v122, v4);
    v81 = v123;
    v82 = *(unsigned __int8 *)(v123 + 80);
    v83 = (v82 + 32) & ~v82;
    v84 = (v5 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
    v85 = swift_allocObject(&unk_1010C5338, v84 + 80, v82 | 7);
    v86 = *(_QWORD *)(v4 + 24);
    *(_QWORD *)(v85 + 16) = v119;
    *(_QWORD *)(v85 + 24) = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v85 + v83, v27, v4);
    result = sub_100065228((uint64_t)&v131, v85 + v84, (uint64_t *)&unk_1011A3DC0);
    v88 = v121;
    *v121 = sub_1004279B4;
    v88[1] = (uint64_t (*)@<X0>(uint64_t@<X3>, uint64_t@<X8>))v85;
    return result;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 + 24) + 56))(v13);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v13);
  v28 = (void *)sub_10041695C(v4);
  v29 = v3 + *(int *)(v4 + 84);
  v30 = *(id *)v29;
  v31 = *(_BYTE *)(v29 + 8);
  sub_1000A4100(*(id *)v29, v31);
  v111 = sub_100824044(v30, v31);
  sub_1000A4224(v30, v31);
  *(_QWORD *)&v110 = *(_QWORD *)(v3 + *(int *)(v4 + 68));
  v32 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v118, 1, 1, v32);
  v33 = (uint64_t *)(v3 + *(int *)(v4 + 88));
  v34 = *v33;
  if (*v33)
  {
    v112 = v28;
    v113 = v12;
    v114 = v5;
    v129[3] = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v129[4] = &protocol witness table for <A> PresentedViewState<A>;
    v129[0] = v34;
    v35 = (uint64_t *)(v3 + *(int *)(v4 + 92));
    v36 = *v35;
    if (*v35)
    {
      v37 = (int *)v4;
      v128[3] = type metadata accessor for NoticePresenter(0);
      v128[4] = &protocol witness table for NoticePresenter;
      v128[0] = v36;
      *(_QWORD *)v134 = 0;
      v132 = 0u;
      v133 = 0u;
      v131 = 0u;
      *(_OWORD *)&v134[8] = xmmword_100EA93A0;
      v38 = (uint64_t *)(v3 + *(int *)(v4 + 96));
      v39 = *v38;
      v40 = v38[1];
      v41 = *((unsigned __int8 *)v38 + 16);
      swift_retain();
      swift_retain();
      v42 = sub_100007E8C(&qword_1011A03A8);
      v43 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v44 = StateObject.wrappedValue.getter(v39, v40, v41, v42, v43);
      v127[3] = v42;
      v127[4] = &protocol witness table for <A> PresentedViewState<A>;
      v127[0] = v44;
      v45 = (uint64_t *)(v3 + v37[25]);
      v46 = *v45;
      if (*v45)
      {
        v47 = type metadata accessor for NavigationPusher();
        v126[3] = v47;
        v126[4] = &off_1010D58B0;
        v126[0] = v46;
        v125 = 0;
        memset(v124, 0, sizeof(v124));
        v48 = (_QWORD *)(v3 + v37[26]);
        if (*v48)
        {
          v49 = (_QWORD *)(v3 + v37[27]);
          if (*v49)
          {
            __chkstk_darwin(v47);
            sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100EBA838);
            __chkstk_darwin(KeyPath);
            v51 = swift_getKeyPath(&unk_100EBA870);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(v130, v52, KeyPath, v51);
            swift_release();
            swift_release();
            swift_release();
            v53 = v130[0];
            v54 = v122;
            v55 = v122 + v37[28];
            v56 = *(_QWORD *)v55;
            v57 = *(_QWORD *)(v55 + 8);
            LOBYTE(v51) = *(_BYTE *)(v55 + 16);
            sub_1000A410C(*(_QWORD *)v55, v57, v51);
            sub_100824224(v56, v57, v51);
            v59 = v58;
            sub_1000A4230(v56, v57, v51);
            sub_10066D160(v53);
            v61 = v60;
            v63 = v62;
            swift_release();
            swift_bridgeObjectRelease(v59);
            v64 = v54 + v37[29];
            v65 = *(_QWORD *)v64;
            v66 = *(_QWORD *)(v64 + 8);
            v67 = *(_BYTE *)(v64 + 16);
            sub_1000A411C(*(_QWORD *)v64, v66, v67);
            sub_100824400(v65, v66, v67, (uint64_t *)v130);
            v68 = sub_1000A4240(v65, v66, v67);
            v70 = *((_QWORD *)&v130[0] + 1);
            v69 = *(_QWORD *)&v130[0];
            v71 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
            v72 = v115;
            ((void (*)(_QWORD, uint64_t, int *, double))v71)(v115, v54, v37, v68);
            v109 = v71;
            if (v70 >> 60 != 15)
            {
LABEL_11:
              (*(void (**)(uint64_t, int *, __n128))(v123 + 8))(v72, v37, v73);
              v104 = v61;
              v105 = v63;
              v76 = v63;
              v78 = v111;
              v77 = v112;
              v4 = (uint64_t)v37;
              v79 = v118;
              v80 = v113;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v112, v111, v110, v118, (uint64_t)v129, (unint64_t)v128, (unint64_t)&v131, (unint64_t)v127, (uint64_t *)v130, (uint64_t)v126, (unint64_t)v124, v104, v105, v69, v70);
              v115 = v130[0];
              v110 = v130[1];
              v107 = v130[3];
              v108 = v130[2];
              v106 = v130[4];
              sub_1000822B4(v69, v70);

              swift_bridgeObjectRelease(v76);
              sub_10004FF60((uint64_t)v124, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v131, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v79, (uint64_t *)&unk_1011A20C0);
              (*(void (**)(char *, uint64_t))(v116 + 8))(v80, v117);
              sub_10004FF60((uint64_t)v126, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v127);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v128);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v129);
              v26 = v106;
              v25 = v107;
              v24 = v108;
              v23 = v110;
              v22 = v115;
              v27 = v120;
              v5 = v114;
              v21 = v109;
              goto LABEL_12;
            }
            v74 = (_QWORD *)(v72 + v37[26]);
            if (*v74)
            {
              swift_retain();
              v69 = sub_10066D7A8();
              v70 = v75;
              v73 = swift_release();
              goto LABEL_11;
            }
          }
          else
          {
            v100 = v49[1];
            v101 = type metadata accessor for TabSelectionManager(0);
            v102 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v100, v101, v102);
            __break(1u);
          }
          v89 = v74[1];
          goto LABEL_19;
        }
LABEL_16:
        v89 = v48[1];
        swift_retain();
LABEL_19:
        v90 = (uint64_t *)&unk_10119CBE0;
        v91 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v92 = &qword_1011C5B90;
        v93 = &unk_100EC0A50;
        goto LABEL_20;
      }
    }
    else
    {
      v94 = v35[1];
      v95 = type metadata accessor for NoticePresenter(0);
      v96 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v94, v95, v96);
      __break(1u);
    }
    v97 = v45[1];
    v98 = type metadata accessor for NavigationPusher();
    v99 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v97, v98, v99);
    __break(1u);
    goto LABEL_16;
  }
  v89 = v33[1];
  v90 = (uint64_t *)&unk_1011B4E40;
  v91 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v92 = (unint64_t *)&unk_10119CC10;
  v93 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_20:
  v103 = sub_100049F28(v92, v90, (uint64_t)v93);
  result = EnvironmentObject.error()(0, v89, v91, v103);
  __break(1u);
  return result;
}

uint64_t sub_10041695C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v2 = v1;
  v22[0] = a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v22 - v6;
  v8 = type metadata accessor for GenericMusicItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v22 - v13;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)v22 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v2, v4, v16);
  v19 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  else
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v22[0] + 24) + 56))(v3);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v3);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v14, v8);
    sub_1000E3E80();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v18, v8);
    v20 = MPCPlaybackIntent.init(for:)(v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  }
  return v20;
}

uint64_t sub_100416B34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  __n128 v40;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[16];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[7];

  v44 = a2;
  v49 = a5;
  v9 = sub_100007E8C(&qword_1011A2C60);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011A2C68);
  __chkstk_darwin(v46);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B31D8);
  v15 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  v48 = v15;
  __chkstk_darwin(v14);
  v45 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = GeometryProxy.size.getter(v17);
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v20 = sub_100007E8C(&qword_1011B31E0);
  v21 = sub_100416E7C(a1, a2, a3, a4, (uint64_t)&v11[*(int *)(v20 + 44)], v18);
  v22 = static Alignment.center.getter(v21);
  sub_10014A698(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v13, 0.0, 1, INFINITY, 0, v22, v23);
  sub_10004FF60((uint64_t)v11, &qword_1011A2C60);
  v51 = a3;
  v52 = a4;
  v53 = a1;
  v24 = (_QWORD *)sub_100007E8C(&qword_1011AC3B0);
  v43 = v24;
  v25 = sub_100427AE8(&qword_1011B31E8, &qword_1011A2C68, &qword_1011B31F0, &qword_1011A2C60);
  v26 = sub_1000E3EE4();
  v27 = (_QWORD *)sub_100314AC0();
  v28 = v46;
  v29 = v45;
  View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, v44, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100427A50, (uint64_t)v50, (uint64_t)UIScreen.Dimensions.size.getter, 0, v45, v46, (uint64_t)&type metadata for ActionType, v24, v25, v26, v27);
  sub_10004FF60((uint64_t)v13, &qword_1011A2C68);
  v31 = a1 + *(int *)(type metadata accessor for HorizontalCell(0, a3, a4, v30) + 96);
  v32 = *(_QWORD *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  v34 = *(unsigned __int8 *)(v31 + 16);
  v35 = sub_100007E8C(&qword_1011A03A8);
  v36 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v37 = StateObject.wrappedValue.getter(v32, v33, v34, v35, v36);
  v54[0] = v28;
  v54[1] = &type metadata for ActionType;
  v54[2] = v43;
  v54[3] = v25;
  v54[4] = v26;
  v54[5] = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v54, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v39 = v47;
  View.shareSheetPresenting(_:)(v37, v47, OpaqueTypeConformance2);
  v40 = swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v48 + 8))(v29, v39, v40);
}

uint64_t sub_100416E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[3];

  v72 = a2;
  v78 = a5;
  v10 = sub_100007E8C(&qword_1011A2C70);
  __chkstk_darwin(v10);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A2C78);
  __chkstk_darwin(v13);
  v73 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_1011B31F8);
  __chkstk_darwin(v74);
  v71 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B3200);
  v77 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v76 = (char *)&v70 - v20;
  v21 = sub_100007E8C(&qword_1011B3208);
  __chkstk_darwin(v21);
  v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011B3210);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011B3218);
  __chkstk_darwin(v28);
  v75 = (uint64_t)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v79 = a4;
  v80 = (uint64_t)&v70 - v31;
  v33 = type metadata accessor for HorizontalCell(0, a3, a4, v32);
  v34 = 1;
  if (!*(_BYTE *)(a1 + *(int *)(v33 + 56)))
  {
    *(_QWORD *)v23 = static VerticalAlignment.center.getter(v33);
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = 0;
    v35 = sub_100007E8C(&qword_1011B3248);
    v36 = sub_1004173F4(a1, a3, v79, &v23[*(int *)(v35 + 44)]);
    v37 = static Alignment.center.getter(v36);
    _FrameLayout.init(width:height:alignment:)(v81, 0x4041000000000000, 0, 0, 1, v37, v38);
    sub_10004A160((uint64_t)v23, (uint64_t)v27, &qword_1011B3208);
    v39 = &v27[*(int *)(v24 + 36)];
    v40 = v81[1];
    *(_OWORD *)v39 = v81[0];
    *((_OWORD *)v39 + 1) = v40;
    *((_OWORD *)v39 + 2) = v81[2];
    sub_10004FF60((uint64_t)v23, &qword_1011B3208);
    sub_100065228((uint64_t)v27, v80, &qword_1011B3210);
    v34 = 0;
  }
  v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v80, v34, 1, v24);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v41);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v42 = sub_100007E8C(&qword_1011B3220);
  v43 = sub_100417A88(a1, v72, a3, v79, (uint64_t)&v12[*(int *)(v42 + 44)], a6);
  v44 = static Alignment.center.getter(v43);
  v45 = v73;
  sub_10014A6FC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v73, 0.0, 1, INFINITY, 0, v44, v46);
  v47 = sub_10004FF60((uint64_t)v12, &qword_1011A2C70);
  v48 = static Edge.Set.horizontal.getter(v47);
  v49 = EdgeInsets.init(_all:)(10.0);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v71;
  sub_10004A160(v45, v71, &qword_1011A2C78);
  v57 = v74;
  v58 = v56 + *(int *)(v74 + 36);
  *(_BYTE *)v58 = v48;
  *(double *)(v58 + 8) = v49;
  *(_QWORD *)(v58 + 16) = v51;
  *(_QWORD *)(v58 + 24) = v53;
  *(_QWORD *)(v58 + 32) = v55;
  *(_BYTE *)(v58 + 40) = 0;
  sub_10004FF60(v45, &qword_1011A2C78);
  if (qword_10119C8E0 != -1)
    swift_once(&qword_10119C8E0, sub_10085FA20);
  v59 = qword_10124DA58;
  v60 = sub_100427A5C();
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v59, -1, 0, 0, 0, 1, 1, v57, 0.0, v60);
  sub_10004FF60(v56, &qword_1011B31F8);
  v62 = v76;
  v61 = v77;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v18, v16);
  v63 = v80;
  v64 = v75;
  sub_10004A160(v80, v75, &qword_1011B3218);
  v65 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v65(v18, v62, v16);
  v66 = v78;
  sub_10004A160(v64, v78, &qword_1011B3218);
  v67 = sub_100007E8C(&qword_1011B3240);
  v65((char *)(v66 + *(int *)(v67 + 48)), v18, v16);
  v68 = *(void (**)(char *, uint64_t))(v61 + 8);
  v68(v62, v16);
  sub_10004FF60(v63, &qword_1011B3218);
  v68(v18, v16);
  return sub_10004FF60(v64, &qword_1011B3218);
}

BOOL static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1004173F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  double v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  double v77;
  char v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;

  v60 = a3;
  v62 = a1;
  v72 = a4;
  v5 = type metadata accessor for MusicFavoriteStatus(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v59 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011AFA60);
  __chkstk_darwin(v63);
  v65 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Optional(0, a2);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v59 - v11;
  v13 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v13);
  v61 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v59 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - v19;
  v21 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v21);
  v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011B3250);
  __chkstk_darwin(v24);
  v71 = (uint64_t)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v69 = (char *)&v59 - v27;
  __chkstk_darwin(v28);
  v70 = (uint64_t)&v59 - v29;
  v68 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
  v30 = static Font.Weight.semibold.getter(v68);
  v31 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v23, 1, 1, v31);
  v67 = static Font.system(size:weight:design:)(*(_QWORD *)&v30, 0, v23, 7.0);
  sub_10004FF60((uint64_t)v23, &qword_1011C4F30);
  KeyPath = swift_getKeyPath(&unk_100EBA890);
  v64 = static HierarchicalShapeStyle.secondary.getter(KeyPath);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v62, v9);
  v32 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, 1, 1, v5);
  }
  else
  {
    (*(void (**)(uint64_t))(v60 + 64))(a2);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, a2);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v17, enum case for MusicFavoriteStatus.favorited(_:), v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  v33 = v65;
  v34 = v65 + *(int *)(v63 + 48);
  sub_10004A160((uint64_t)v20, v65, &qword_1011A19A0);
  sub_10004A160((uint64_t)v17, v34, &qword_1011A19A0);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v35(v33, 1, v5) != 1)
  {
    v38 = v61;
    sub_10004A160(v33, v61, &qword_1011A19A0);
    if (v35(v34, 1, v5) != 1)
    {
      v39 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v59, v34, v5);
      v40 = sub_100048748(&qword_1011A4008, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
      v41 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v39, v5, v40);
      v42 = *(void (**)(char *, uint64_t))(v6 + 8);
      v42(v39, v5);
      sub_10004FF60((uint64_t)v17, &qword_1011A19A0);
      sub_10004FF60((uint64_t)v20, &qword_1011A19A0);
      v42((char *)v38, v5);
      sub_10004FF60(v33, &qword_1011A19A0);
      v37 = 1.0;
      if ((v41 & 1) != 0)
        goto LABEL_12;
LABEL_11:
      v37 = 0.0;
      goto LABEL_12;
    }
    sub_10004FF60((uint64_t)v17, &qword_1011A19A0);
    sub_10004FF60((uint64_t)v20, &qword_1011A19A0);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v38, v5);
LABEL_9:
    sub_10004FF60(v33, &qword_1011AFA60);
    goto LABEL_11;
  }
  sub_10004FF60((uint64_t)v17, &qword_1011A19A0);
  sub_10004FF60((uint64_t)v20, &qword_1011A19A0);
  if (v35(v34, 1, v5) != 1)
    goto LABEL_9;
  sub_10004FF60(v33, &qword_1011A19A0);
  v37 = 1.0;
LABEL_12:
  v43 = static Edge.Set.trailing.getter(v36);
  v44 = EdgeInsets.init(_all:)(5.0);
  v73 = v68;
  v74 = KeyPath;
  v75 = v67;
  v76 = v64;
  v77 = v37;
  v78 = v43;
  v79 = v44;
  v80 = v45;
  v81 = v46;
  v82 = v47;
  v83 = 0;
  v48 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
  v49 = *v48;
  v50 = v48[1];
  swift_bridgeObjectRetain();
  v51 = sub_100007E8C(&qword_1011B3258);
  v52 = sub_10005610C(&qword_1011B3260, &qword_1011B3258, (void (*)(void))sub_100427B70);
  v53 = (uint64_t)v69;
  View.accessibilityLabel(_:)(v49, v50, v51, v52);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v50);
  v54 = v70;
  sub_100065228(v53, v70, &qword_1011B3250);
  v55 = v71;
  sub_10004A160(v54, v71, &qword_1011B3250);
  v56 = v72;
  *v72 = 0;
  *((_BYTE *)v56 + 8) = 1;
  v57 = sub_100007E8C(&qword_1011B3278);
  sub_10004A160(v55, (uint64_t)v56 + *(int *)(v57 + 48), &qword_1011B3250);
  sub_10004FF60(v54, &qword_1011B3250);
  return sub_10004FF60(v55, &qword_1011B3250);
}

uint64_t sub_100417A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t OpaqueTypeConformance2;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  ValueMetadata *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t KeyPath;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  ValueMetadata *v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  _OWORD v177[5];
  _OWORD v178[5];

  v161 = a2;
  v166 = a5;
  v145 = type metadata accessor for ControlSize(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for ButtonBorderShape(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = (char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100007E8C(&qword_1011A0598);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v133 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100007E8C(&qword_1011A05A0);
  __chkstk_darwin(v131);
  v142 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for BorderlessButtonStyle(0);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v139 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for ButtonMenuStyle(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v127 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100007E8C(&qword_1011A05A8);
  v126 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v125 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_100007E8C(&qword_1011A05B0);
  v132 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v167 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A05B8);
  __chkstk_darwin(v18);
  v165 = (uint64_t)&v124 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v163 = (char *)&v124 - v21;
  __chkstk_darwin(v22);
  v164 = (uint64_t)&v124 - v23;
  v160 = type metadata accessor for AccessibilityTraits(0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v158 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for AccessibilityChildBehavior(0);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v124 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v151 = (uint64_t)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011B3280);
  __chkstk_darwin(v27);
  v29 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011B0C38);
  __chkstk_darwin(v30);
  v32 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011A2C80);
  __chkstk_darwin(v33);
  v35 = (char *)&v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011A2C88);
  __chkstk_darwin(v36);
  v38 = (char *)&v124 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100007E8C(&qword_1011B3288);
  __chkstk_darwin(v146);
  v40 = (char *)&v124 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_1011B3290);
  v150 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v42 = (char *)&v124 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100007E8C(&qword_1011B3298);
  __chkstk_darwin(v149);
  v162 = (uint64_t)&v124 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v124 - v45;
  __chkstk_darwin(v47);
  v147 = (char *)&v124 - v48;
  __chkstk_darwin(v49);
  v152 = (char *)&v124 - v50;
  __chkstk_darwin(v51);
  v169 = (uint64_t)&v124 - v52;
  *(_QWORD *)v35 = static VerticalAlignment.center.getter(v53);
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = 0;
  v54 = sub_100007E8C(&qword_1011B32A0);
  v55 = sub_100418968(a1, a3, a4, (uint64_t)&v35[*(int *)(v54 + 44)], a6);
  v56 = static Alignment.center.getter(v55);
  sub_10014A760(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v38, 0.0, 1, INFINITY, 0, v56, v57);
  sub_10004FF60((uint64_t)v35, &qword_1011A2C80);
  v58 = a4;
  v60 = type metadata accessor for HorizontalCell(0, a3, a4, v59);
  sub_10005B704(a1 + *(int *)(v60 + 72), (uint64_t)v29, type metadata accessor for HorizontalCellSource);
  v61 = type metadata accessor for HorizontalCellSource(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v29, 0, 1, v61);
  v170 = a3;
  v171 = v58;
  v172 = a1;
  sub_100415E8C((uint64_t)v29, (void (*)(uint64_t))sub_100427B94, (uint64_t)v32);
  sub_10004FF60((uint64_t)v29, &qword_1011B3280);
  v62 = v151;
  sub_100824838(v151);
  sub_1003D65C4((uint64_t)v32, v62, 0, 0, (uint64_t)v40);
  (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v62, v154);
  sub_10004FF60((uint64_t)v32, &qword_1011B0C38);
  v63 = sub_10004FF60((uint64_t)v38, &qword_1011A2C88);
  v64 = v155;
  static AccessibilityChildBehavior.combine.getter(v63);
  v65 = sub_100427BA0();
  v66 = v146;
  View.accessibilityElement(children:)(v64, v146, v65);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v64, v157);
  v67 = sub_10004FF60((uint64_t)v40, &qword_1011B3288);
  v68 = v158;
  static AccessibilityTraits.isButton.getter(v67);
  *(_QWORD *)&v178[0] = v66;
  *((_QWORD *)&v178[0] + 1) = v65;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v178, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v70 = v148;
  View.accessibility(addTraits:)(v68, v148, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v68, v160);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v42, v70);
  v71 = sub_10041BE6C(v60);
  v72 = (uint64_t)v147;
  ModifiedContent<>.accessibilityInputLabels(_:)(v71, v149);
  swift_bridgeObjectRelease(v71);
  sub_10004FF60((uint64_t)v46, &qword_1011B3298);
  v73 = LocalizedStringKey.init(stringLiteral:)(0x7020737472617453, 0xEF6B63616279616CLL);
  v74 = Text.init(_:tableName:bundle:comment:)(v73);
  v76 = v75;
  v78 = v77;
  LOBYTE(v46) = v79 & 1;
  v80 = (uint64_t)v152;
  ModifiedContent<>.accessibility(hint:)();
  sub_100055BAC(v74, v76, (char)v46);
  swift_bridgeObjectRelease(v78);
  sub_10004FF60(v72, &qword_1011B3298);
  sub_100065228(v80, v169, &qword_1011B3298);
  sub_100065228(v161, (uint64_t)v177, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v177[0] + 1))
  {
    v178[2] = v177[2];
    v178[3] = v177[3];
    v178[4] = v177[4];
    v178[0] = v177[0];
    v178[1] = v177[1];
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v82 = sub_100007E8C(&qword_1011A05F8);
    v83 = sub_1000E41D0();
    v84 = v125;
    v85 = ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100558D1C, 0, (uint64_t)UIScreen.Dimensions.size.getter, 0, v81, v125, v82, v83);
    v86 = v127;
    ButtonMenuStyle.init()(v85);
    v87 = sub_1000E3EE4();
    v173 = &type metadata for ActionType;
    v174 = v82;
    v175 = v87;
    v176 = v83;
    v88 = swift_getOpaqueTypeConformance2(&v173, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v89 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v90 = (ValueMetadata *)v128;
    v91 = v130;
    View.menuStyle<A>(_:)(v86, v128, v130, v88, v89);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v86, v91);
    v92 = (*(uint64_t (**)(char *, ValueMetadata *))(v126 + 8))(v84, v90);
    v93 = v139;
    BorderlessButtonStyle.init()(v92);
    v173 = v90;
    v174 = v91;
    v175 = v88;
    v176 = v89;
    v94 = swift_getOpaqueTypeConformance2(&v173, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v95 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v96 = v133;
    v97 = v141;
    v98 = View.buttonStyle<A>(_:)(v93, v168, v141, v94, v95);
    v99 = v136;
    static ButtonBorderShape.circle.getter(v98);
    KeyPath = swift_getKeyPath(&unk_100EBA8C0);
    v101 = (uint64_t)v142;
    v102 = (uint64_t *)&v142[*(int *)(v131 + 36)];
    v103 = sub_100007E8C(&qword_1011A0610);
    v104 = v137;
    v105 = v138;
    (*(void (**)(char *, char *, uint64_t))(v137 + 16))((char *)v102 + *(int *)(v103 + 28), v99, v138);
    *v102 = KeyPath;
    v106 = v134;
    v107 = v135;
    (*(void (**)(uint64_t, char *, uint64_t))(v134 + 16))(v101, v96, v135);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v99, v105);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v107);
    v108 = v144;
    v109 = v143;
    v110 = v145;
    (*(void (**)(char *, _QWORD, uint64_t))(v144 + 104))(v143, enum case for ControlSize.regular(_:), v145);
    v111 = swift_getKeyPath(&unk_100EBA8F0);
    v112 = sub_100007E8C(&qword_1011A05E8);
    v113 = (uint64_t)v163;
    v114 = (uint64_t *)&v163[*(int *)(v112 + 36)];
    v115 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))((char *)v114 + *(int *)(v115 + 28), v109, v110);
    *v114 = v111;
    sub_10004A160(v101, v113, &qword_1011A05A0);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v110);
    sub_10004FF60(v101, &qword_1011A05A0);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v93, v97);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v167, v168);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v113, 0, 1, v112);
  }
  else
  {
    v116 = sub_100007E8C(&qword_1011A05E8);
    v113 = (uint64_t)v163;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v163, 1, 1, v116);
  }
  v117 = v164;
  sub_100065228(v113, v164, &qword_1011A05B8);
  v118 = v169;
  v119 = v162;
  sub_10004A160(v169, v162, &qword_1011B3298);
  v120 = v165;
  sub_10004A160(v117, v165, &qword_1011A05B8);
  v121 = v166;
  sub_10004A160(v119, v166, &qword_1011B3298);
  v122 = sub_100007E8C(&qword_1011B32B0);
  sub_10004A160(v120, v121 + *(int *)(v122 + 48), &qword_1011A05B8);
  sub_10004FF60(v117, &qword_1011A05B8);
  sub_10004FF60(v118, &qword_1011B3298);
  sub_10004FF60(v120, &qword_1011A05B8);
  return sub_10004FF60(v119, &qword_1011B3298);
}

uint64_t sub_100418968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  void (*v139)(_QWORD, _QWORD);
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  unint64_t v147;
  int v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t OpaqueTypeConformance2;
  char *v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  double v166;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  uint64_t v170;
  char *v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _OWORD *v188;
  __int128 v189;
  double v190;
  char v191;
  double v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  unint64_t v202;
  uint64_t v203;
  char *v204;
  void (*v205)(_QWORD, _QWORD);
  uint64_t v206;
  char *v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  int v243;
  uint64_t *v244;
  unint64_t v245;
  uint64_t KeyPath;
  uint64_t v247;
  void (*v248)(_QWORD, _QWORD, _QWORD);
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t (*v262)(_QWORD, _QWORD, _QWORD);
  int v263;
  uint64_t v264;
  unsigned int *v265;
  unint64_t v266;
  void (*v267)(_QWORD, _QWORD, _QWORD);
  uint64_t v268;
  char *v269;
  uint64_t v270;
  char v271;
  void (*v272)(_QWORD, _QWORD);
  char v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void (*v282)(_QWORD, _QWORD);
  uint64_t v283;
  __n128 v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  void (*v291)(_QWORD, _QWORD);
  uint64_t v292;
  unint64_t v293;
  char *v294;
  uint64_t v295;
  double v296;
  double v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  _OWORD *v303;
  __int128 v304;
  double v305;
  char v306;
  double v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  int v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  unint64_t v325;
  unint64_t v326;
  Swift::Int v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  int *v336;
  uint64_t v337;
  uint64_t v338;
  void (*v339)(_QWORD);
  char *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t *v343;
  uint64_t v344;
  unint64_t v345;
  char *v346;
  double v347;
  char v348;
  double v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t (*v360)(_QWORD, _QWORD);
  uint64_t v361;
  unint64_t v362;
  uint64_t v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  _OWORD *v371;
  __int128 v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  unint64_t v386;
  unint64_t v387;
  Swift::Int v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  uint64_t v399;
  char *v400;
  void (*v401)(_QWORD, _QWORD);
  char *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  __n128 v407;
  double v408;
  double v409;
  double v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  void (*v419)(__n128);
  __n128 v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  _OWORD *v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  double v431;
  char v432;
  uint64_t v433;
  double v434;
  double v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  unint64_t v446;
  double v447;
  char v448;
  char v449;
  double v450;
  id v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char v460;
  char v461;
  uint64_t v462;
  char *v463;
  uint64_t v464;
  char *v465;
  void (*v466)(_QWORD, _QWORD);
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  char v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  char v479;
  char v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  __n128 v484;
  uint64_t v485;
  int v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  double v499;
  double v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  void *v518;
  uint64_t v519;
  char *v520;
  uint64_t v521;
  char *v522;
  uint64_t v523;
  char *v524;
  char *v525;
  __n128 v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  char v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  int *v551;
  uint64_t v552;
  int v554;
  int v555;
  int v556;
  int v557;
  uint64_t v558;
  char *v559;
  char *v560;
  uint64_t v561;
  char *v562;
  uint64_t v563;
  char *v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  char *v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  char *v573;
  uint64_t v574;
  uint64_t v575;
  char *v576;
  char *v577;
  uint64_t v578;
  char *v579;
  uint64_t v580;
  uint64_t v581;
  char *v582;
  uint64_t v583;
  uint64_t *v584;
  char *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  char *v590;
  char *v591;
  uint64_t v592;
  char *v593;
  uint64_t v594;
  uint64_t v595;
  char *v596;
  char *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  char *v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  char *v615;
  char *v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  uint64_t v627;
  uint64_t v628;
  char *v629;
  uint64_t v630;
  uint64_t v631;
  char *v632;
  uint64_t v633;
  uint64_t v634;
  char *v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  char *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  char *v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t *v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  char *v663;
  uint64_t v664;
  char *v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  unint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  int *v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  __int128 v684;
  __int128 v685;
  __int128 v686;
  __int128 v687;
  __int128 v688;
  _OWORD v689[2];
  char v690;
  char v691;
  char v692;
  char v693;
  char v694;
  char v695;
  char v696;
  char v697;
  __int128 v698;
  __int128 v699;
  __int128 v700;
  __int128 v701;
  __int128 v702;
  __int128 v703;
  __int128 v704;
  __int128 v705;
  __int128 v706;
  __int128 v707;
  _OWORD v708[3];
  _OWORD v709[7];
  _BYTE v710[48];
  _OWORD v711[3];
  _OWORD v712[3];
  _OWORD v713[3];
  _OWORD v714[7];
  uint64_t v715;
  char v716;
  uint64_t v717;
  char v718;
  uint64_t v719;
  char v720;
  uint64_t v721;
  char v722;
  uint64_t v723;
  char v724;
  uint64_t v725;
  char v726;
  uint64_t v727;
  uint64_t v728;

  v649 = a4;
  v9 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0);
  v570 = *(_QWORD *)(v9 - 8);
  v571 = v9;
  __chkstk_darwin(v9);
  v569 = (char *)&v558 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v568 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0);
  v566 = *(_QWORD *)(v568 - 8);
  __chkstk_darwin(v568);
  v564 = (char *)&v558 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v563 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0);
  v561 = *(_QWORD *)(v563 - 8);
  __chkstk_darwin(v563);
  v560 = (char *)&v558 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v567 = type metadata accessor for Duration.UnitsFormatStyle(0);
  v565 = *(_QWORD *)(v567 - 8);
  __chkstk_darwin(v567);
  v562 = (char *)&v558 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v645 = sub_100007E8C(&qword_1011AFAD8);
  v644 = *(_QWORD *)(v645 - 8);
  __chkstk_darwin(v645);
  v573 = (char *)&v558 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v572 = (uint64_t)&v558 - v16;
  v17 = sub_100007E8C(&qword_1011AFAE0);
  __chkstk_darwin(v17);
  v648 = (uint64_t)&v558 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v647 = (uint64_t)&v558 - v20;
  v638 = _s27DownloadStatusIndicatorViewVMa(0);
  __chkstk_darwin(v638);
  v640 = (char *)&v558 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v639 = sub_100007E8C(&qword_1011AFAE8);
  __chkstk_darwin(v639);
  v643 = (uint64_t)&v558 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v642 = sub_100007E8C(&qword_1011AFAF0);
  __chkstk_darwin(v642);
  v646 = (uint64_t)&v558 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v641 = (uint64_t)&v558 - v25;
  __chkstk_darwin(v26);
  v662 = (uint64_t)&v558 - v27;
  v28 = sub_100007E8C(&qword_1011A2C98);
  __chkstk_darwin(v28);
  v637 = (uint64_t)&v558 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v636 = sub_100007E8C(&qword_1011B32B8);
  __chkstk_darwin(v636);
  v675 = (uint64_t)&v558 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v674 = (uint64_t)&v558 - v32;
  v607 = sub_100007E8C(&qword_1011A2CA8);
  __chkstk_darwin(v607);
  v599 = (uint64_t)&v558 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v604 = sub_100007E8C(&qword_1011B32C0);
  __chkstk_darwin(v604);
  v606 = (uint64_t)&v558 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v605 = sub_100007E8C(&qword_1011B32C8);
  __chkstk_darwin(v605);
  v574 = (uint64_t)&v558 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011B32D0);
  __chkstk_darwin(v36);
  v661 = (uint64_t)&v558 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v671 = (uint64_t)&v558 - v39;
  v657 = sub_100007E8C(&qword_1011A2C90);
  v633 = *(_QWORD *)(v657 - 8);
  __chkstk_darwin(v657);
  v635 = (char *)&v558 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v632 = (char *)&v558 - v42;
  v631 = sub_100007E8C(&qword_1011A2CA0);
  __chkstk_darwin(v631);
  v672 = (uint64_t)&v558 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v666 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v652 = *(_QWORD *)(v666 - 8);
  __chkstk_darwin(v666);
  v665 = (char *)&v558 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v664 = (uint64_t)&v558 - v46;
  v581 = sub_100007E8C(&qword_1011B32D8);
  __chkstk_darwin(v581);
  v584 = (uint64_t *)((char *)&v558 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  v594 = type metadata accessor for ContentRating(0);
  v592 = *(_QWORD *)(v594 - 8);
  __chkstk_darwin(v594);
  v559 = (char *)&v558 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v578 = sub_100007E8C(&qword_10119EA28);
  __chkstk_darwin(v578);
  v593 = (char *)&v558 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v50);
  v575 = (uint64_t)&v558 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v598 = (uint64_t)&v558 - v53;
  __chkstk_darwin(v54);
  v591 = (char *)&v558 - v55;
  v580 = type metadata accessor for Text.TruncationMode(0);
  v600 = *(_QWORD *)(v580 - 8);
  __chkstk_darwin(v580);
  v579 = (char *)&v558 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v601 = sub_100007E8C(&qword_1011B32E0);
  __chkstk_darwin(v601);
  v582 = (char *)&v558 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011B32E8);
  v586 = *(_QWORD *)(v58 - 8);
  v587 = v58;
  __chkstk_darwin(v58);
  v585 = (char *)&v558 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v583 = sub_100007E8C(&qword_1011B32F0);
  __chkstk_darwin(v583);
  v590 = (char *)&v558 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011B32F8);
  v602 = *(_QWORD *)(v61 - 8);
  v603 = v61;
  __chkstk_darwin(v61);
  v589 = (uint64_t)&v558 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  v588 = (uint64_t)&v558 - v64;
  v65 = sub_100007E8C(&qword_1011B3300);
  __chkstk_darwin(v65);
  v660 = (uint64_t)&v558 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  v670 = (uint64_t)&v558 - v68;
  v656 = type metadata accessor for HorizontalCellSource(0);
  __chkstk_darwin(v656);
  v634 = (uint64_t)&v558 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v70);
  v628 = (uint64_t)&v558 - v71;
  v630 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v623 = *(_QWORD *)(v630 - 8);
  __chkstk_darwin(v630);
  v622 = (char *)&v558 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for Optional(0, a2);
  v667 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v597 = (char *)&v558 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v75);
  v651 = (char *)&v558 - v76;
  __chkstk_darwin(v77);
  v577 = (char *)&v558 - v78;
  __chkstk_darwin(v79);
  v576 = (char *)&v558 - v80;
  __chkstk_darwin(v81);
  v596 = (char *)&v558 - v82;
  v669 = a2;
  v650 = a3;
  v84 = (int *)type metadata accessor for HorizontalCell(0, a2, a3, v83);
  v655 = *((_QWORD *)v84 - 1);
  __chkstk_darwin(v84);
  v629 = (char *)&v558 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v86);
  v609 = (char *)&v558 - v87;
  v88 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v88);
  v654 = (uint64_t *)((char *)&v558 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v90);
  v610 = (uint64_t)&v558 - v91;
  v614 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v612 = *(_QWORD *)(v614 - 8);
  __chkstk_darwin(v614);
  v611 = (uint64_t)&v558 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  v619 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v617 = *(_QWORD *)(v619 - 8);
  __chkstk_darwin(v619);
  v615 = (char *)&v558 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  v620 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v618 = *(_QWORD *)(v620 - 8);
  __chkstk_darwin(v620);
  v616 = (char *)&v558 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  v613 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v613);
  v626 = (char *)&v558 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  v621 = sub_100007E8C(&qword_1011A0630);
  __chkstk_darwin(v621);
  v627 = (uint64_t)&v558 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  v625 = sub_100007E8C(&qword_1011B3308);
  __chkstk_darwin(v625);
  v659 = (uint64_t)&v558 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v98);
  v624 = (uint64_t)&v558 - v99;
  __chkstk_darwin(v100);
  v673 = (uint64_t)&v558 - v101;
  v595 = sub_100007E8C(&qword_10119EBA0);
  v102 = *(_QWORD *)(v595 - 8);
  __chkstk_darwin(v595);
  v104 = (char *)&v558 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  v653 = sub_100007E8C(&qword_1011B3310);
  v608 = *(_QWORD *)(v653 - 8);
  __chkstk_darwin(v653);
  v106 = (char *)&v558 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v107);
  v109 = (char *)&v558 - v108;
  v110 = sub_100007E8C(&qword_1011B3318);
  __chkstk_darwin(v110);
  v658 = (uint64_t)&v558 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __chkstk_darwin(v112);
  v115 = (char *)&v558 - v114;
  v116 = a1 + v84[13];
  v117 = *(_BYTE *)(v116 + 8);
  v118 = 1;
  v676 = a1;
  v663 = (char *)&v558 - v114;
  v677 = v84;
  v668 = v73;
  if ((v117 & 1) == 0)
  {
    *(_QWORD *)&v698 = *(_QWORD *)v116;
    *(_QWORD *)&v698 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    *((_QWORD *)&v698 + 1) = v119;
    v120 = sub_100055B68();
    v121 = Text.init<A>(_:)(&v698, &type metadata for String, v120);
    v123 = v122;
    v125 = v124;
    v127 = v126 & 1;
    Text.with(style:)(8, v121, v122, v126 & 1, v124, (uint64_t)v104);
    v128 = v123;
    v84 = v677;
    v129 = v127;
    v115 = v663;
    sub_100055BAC(v121, v128, v129);
    v130 = v125;
    a1 = v676;
    swift_bridgeObjectRelease(v130);
    v132 = static Alignment.center.getter(v131);
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v709, 0x4047000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v132, v133);
    v134 = v595;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v106, v104, v595);
    v135 = &v106[*(int *)(v653 + 36)];
    v136 = v709[5];
    *((_OWORD *)v135 + 4) = v709[4];
    *((_OWORD *)v135 + 5) = v136;
    *((_OWORD *)v135 + 6) = v709[6];
    v137 = v709[1];
    *(_OWORD *)v135 = v709[0];
    *((_OWORD *)v135 + 1) = v137;
    v138 = v709[3];
    *((_OWORD *)v135 + 2) = v709[2];
    *((_OWORD *)v135 + 3) = v138;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v134);
    sub_100065228((uint64_t)v106, (uint64_t)v109, &qword_1011B3310);
    sub_100065228((uint64_t)v109, (uint64_t)v115, &qword_1011B3310);
    v118 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v608 + 56))(v115, v118, 1, v653, v113);
  v139 = (void (*)(_QWORD, _QWORD))v654;
  sub_10004A160(a1 + v84[10], (uint64_t)v654, (uint64_t *)&unk_1011A3E10);
  v140 = v655;
  v141 = v609;
  v653 = *(_QWORD *)(v655 + 16);
  ((void (*)(char *, uint64_t, int *))v653)(v609, a1, v84);
  v142 = type metadata accessor for ArtworkImage.ViewModel(0);
  v143 = *(_QWORD *)(v142 - 8);
  if ((*(unsigned int (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t))(v143 + 48))(v139, 1, v142) == 1)
  {
    v144 = v667;
    v145 = v596;
    v146 = v668;
    (*(void (**)(char *, char *, uint64_t))(v667 + 16))(v596, v141, v668);
    v147 = v669;
    v608 = *(_QWORD *)(v669 - 8);
    v148 = (*(uint64_t (**)(char *, uint64_t, unint64_t))(v608 + 48))(v145, 1, v669);
    v149 = v141;
    v150 = v610;
    if (v148 == 1)
    {
      (*(void (**)(char *, int *))(v140 + 8))(v149, v677);
      (*(void (**)(char *, uint64_t))(v144 + 8))(v145, v146);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v150, 1, 1, v142);
    }
    else
    {
      (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v650 + 16) + 8) + 8))(v147);
      (*(void (**)(char *, int *))(v140 + 8))(v149, v677);
      (*(void (**)(char *, unint64_t))(v608 + 8))(v145, v147);
    }
    sub_10004FF60((uint64_t)v654, (uint64_t *)&unk_1011A3E10);
    v84 = v677;
    a1 = v676;
  }
  else
  {
    (*(void (**)(char *, int *))(v140 + 8))(v141, v84);
    v150 = v610;
    sub_10005B6C0((uint64_t)v139, v610, type metadata accessor for ArtworkImage.ViewModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v143 + 56))(v150, 0, 1, v142);
  }
  v151 = a1 + v84[11];
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v710);
  v152 = v623;
  v153 = (uint64_t)v622;
  v154 = v630;
  (*(void (**)(char *, _QWORD, uint64_t))(v623 + 104))(v622, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v630);
  v155 = v611;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v150, v151, (uint64_t)v710, v153, v611);
  (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v153, v154);
  sub_10004FF60(v150, (uint64_t *)&unk_1011A3E10);
  v156 = Corner.large.unsafeMutableAddressor();
  v157 = *v156;
  v158 = v156[1];
  LOBYTE(v153) = *((_BYTE *)v156 + 16);
  v159 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v160 = sub_1000E4264();
  *(_QWORD *)&v698 = v159;
  *((_QWORD *)&v698 + 1) = v160;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v698, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v163 = v614;
  v162 = v615;
  View.corner(_:)(v157, v158, v153, v614, OpaqueTypeConformance2);
  (*(void (**)(uint64_t, uint64_t))(v612 + 8))(v155, v163);
  v164 = Border.artwork.unsafeMutableAddressor();
  v165 = *v164;
  v166 = *((double *)v164 + 1);
  v167 = *v156;
  v168 = v156[1];
  LOBYTE(v156) = *((_BYTE *)v156 + 16);
  LOBYTE(v155) = *((_BYTE *)v164 + 16);
  swift_retain();
  *(_QWORD *)&v698 = v163;
  *((_QWORD *)&v698 + 1) = OpaqueTypeConformance2;
  v169 = v677;
  v170 = swift_getOpaqueTypeConformance2(&v698, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v171 = v616;
  v172 = v155;
  v173 = a1;
  v174 = (char)v156;
  v175 = v619;
  View.border(_:corner:)(v165, v172, v167, v168, v174, v619, v170, v166);
  v176 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v617 + 8))(v162, v175, v176);
  v177 = *(_QWORD *)(a1 + v169[12]);
  v178 = v618;
  v179 = (uint64_t)v626;
  v180 = v620;
  (*(void (**)(char *, char *, uint64_t))(v618 + 16))(v626, v171, v620);
  v181 = v179 + *(int *)(v613 + 36);
  *(_QWORD *)v181 = v177;
  *(_WORD *)(v181 + 8) = 0;
  (*(void (**)(char *, uint64_t))(v178 + 8))(v171, v180);
  v630 = a1 + v169[18];
  v182 = v628;
  sub_10005B704(v630, v628, type metadata accessor for HorizontalCellSource);
  LODWORD(v180) = swift_getEnumCaseMultiPayload(v182, v656);
  v183 = sub_10005B748(v182, type metadata accessor for HorizontalCellSource);
  if ((_DWORD)v180 == 1)
    v184 = 0x4048000000000000;
  else
    v184 = 0x404A000000000000;
  v185 = static Alignment.center.getter(v183);
  _FrameLayout.init(width:height:alignment:)(v711, 0, 1, v184, 0, v185, v186);
  v187 = v627;
  sub_10004A160(v179, v627, &qword_1011A0628);
  v188 = (_OWORD *)(v187 + *(int *)(v621 + 36));
  v189 = v711[1];
  *v188 = v711[0];
  v188[1] = v189;
  v188[2] = v711[2];
  sub_10004FF60(v179, &qword_1011A0628);
  v191 = static Edge.Set.trailing.getter(v190);
  v192 = EdgeInsets.init(_all:)(12.0);
  v194 = v193;
  v196 = v195;
  v198 = v197;
  v199 = v624;
  sub_10004A160(v187, v624, &qword_1011A0630);
  v200 = v199 + *(int *)(v625 + 36);
  *(_BYTE *)v200 = v191;
  *(double *)(v200 + 8) = v192;
  *(_QWORD *)(v200 + 16) = v194;
  *(_QWORD *)(v200 + 24) = v196;
  *(_QWORD *)(v200 + 32) = v198;
  *(_BYTE *)(v200 + 40) = 0;
  sub_10004FF60(v187, &qword_1011A0630);
  sub_100065228(v199, v673, &qword_1011B3308);
  v201 = (uint64_t *)(a1 + v169[9]);
  v203 = *v201;
  v202 = v201[1];
  v204 = v629;
  ((void (*)(char *, uint64_t, int *))v653)(v629, v173, v169);
  if (v202)
  {
    v205 = *(void (**)(_QWORD, _QWORD))(v655 + 8);
    swift_bridgeObjectRetain();
    v205(v204, v169);
    v206 = v667;
    v207 = v651;
    v208 = v669;
    v209 = v668;
  }
  else
  {
    v206 = v667;
    v256 = v576;
    v257 = v668;
    (*(void (**)(char *, char *, uint64_t))(v667 + 16))(v576, v204, v668);
    v258 = v669;
    v259 = *(_QWORD *)(v669 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v259 + 48))(v256, 1, v669) == 1)
    {
      (*(void (**)(char *, int *))(v655 + 8))(v204, v169);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v256, v257);
      v207 = v651;
      v208 = v258;
      v209 = v257;
      v173 = v676;
LABEL_31:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v602 + 56))(v670, 1, 1, v603);
      v267 = *(void (**)(_QWORD, _QWORD, _QWORD))(v206 + 16);
      goto LABEL_39;
    }
    v203 = (*(uint64_t (**)(unint64_t))(v650 + 32))(v258);
    v202 = v266;
    (*(void (**)(char *, int *))(v655 + 8))(v204, v169);
    (*(void (**)(char *, unint64_t))(v259 + 8))(v256, v258);
    v207 = v651;
    v208 = v258;
    v209 = v257;
    v173 = v676;
    if (!v202)
      goto LABEL_31;
  }
  v210 = HIBYTE(v202) & 0xF;
  if ((v202 & 0x2000000000000000) == 0)
    v210 = v203 & 0xFFFFFFFFFFFFLL;
  if (!v210)
  {
    swift_bridgeObjectRelease(v202);
    goto LABEL_31;
  }
  *(_QWORD *)&v698 = v203;
  *((_QWORD *)&v698 + 1) = v202;
  v211 = sub_100055B68();
  v212 = Text.init<A>(_:)(&v698, &type metadata for String, v211);
  v214 = v213;
  v215 = (uint64_t)v169;
  v217 = v216;
  v219 = v218 & 1;
  v220 = sub_10041B824(v215);
  v222 = v221;
  v224 = v223;
  v226 = v225 & 1;
  v655 = static Text.+ infix(_:_:)(v212, v214, v219, v217, v220, v221, v226, v223);
  v628 = v227;
  v229 = v228;
  LODWORD(v627) = v230 & 1;
  sub_100055BAC(v220, v222, v226);
  swift_bridgeObjectRelease(v224);
  v231 = v212;
  v232 = v667;
  sub_100055BAC(v231, v214, v219);
  swift_bridgeObjectRelease(v217);
  v233 = sub_10041BA48((uint64_t)v677);
  v235 = v234;
  v237 = v236;
  v239 = v238 & 1;
  v240 = v655;
  v241 = v628;
  LOBYTE(v214) = v627;
  v653 = static Text.+ infix(_:_:)(v655, v628, v627, v229, v233, v234, v239, v236);
  v629 = v242;
  LODWORD(v626) = v243;
  v654 = v244;
  LOBYTE(v243) = v239;
  v245 = v669;
  sub_100055BAC(v233, v235, v243);
  swift_bridgeObjectRelease(v237);
  sub_100055BAC(v240, v241, v214);
  swift_bridgeObjectRelease(v229);
  KeyPath = swift_getKeyPath(&unk_100EBA920);
  v247 = v232;
  v248 = *(void (**)(_QWORD, _QWORD, _QWORD))(v232 + 16);
  v249 = v668;
  v250 = v577;
  v655 = (uint64_t)v248;
  v248(v577, v676, v668);
  v251 = *(_QWORD *)(v245 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v251 + 48))(v250, 1, v245) == 1)
  {
    (*(void (**)(char *, uint64_t))(v247 + 8))(v250, v249);
    v253 = (uint64_t)v591;
    v252 = v592;
    v254 = v594;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v592 + 56))(v591, 1, 1, v594);
    v255 = (uint64_t)v593;
  }
  else
  {
    v253 = (uint64_t)v591;
    (*(void (**)(unint64_t))(v650 + 72))(v245);
    (*(void (**)(char *, unint64_t))(v251 + 8))(v250, v245);
    v255 = (uint64_t)v593;
    v254 = v594;
    v252 = v592;
  }
  v260 = v598;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v252 + 104))(v598, enum case for ContentRating.explicit(_:), v254);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v252 + 56))(v260, 0, 1, v254);
  v261 = v255 + *(int *)(v578 + 48);
  sub_10004A160(v253, v255, &qword_1011B8D50);
  sub_10004A160(v260, v261, &qword_1011B8D50);
  v262 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v252 + 48);
  v263 = v262(v255, 1, v254);
  v628 = KeyPath;
  if (v263 == 1)
  {
    sub_10004FF60(v260, &qword_1011B8D50);
    sub_10004FF60(v253, &qword_1011B8D50);
    if (v262(v261, 1, v254) == 1)
    {
      sub_10004FF60(v255, &qword_1011B8D50);
LABEL_33:
      v265 = (unsigned int *)&enum case for Text.TruncationMode.middle(_:);
      goto LABEL_34;
    }
    goto LABEL_28;
  }
  v264 = v575;
  sub_10004A160(v255, v575, &qword_1011B8D50);
  if (v262(v261, 1, v254) == 1)
  {
    sub_10004FF60(v260, &qword_1011B8D50);
    sub_10004FF60(v253, &qword_1011B8D50);
    (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v264, v254);
LABEL_28:
    sub_10004FF60(v255, &qword_10119EA28);
    goto LABEL_29;
  }
  v268 = v264;
  v269 = v559;
  (*(void (**)(char *, uint64_t, uint64_t))(v252 + 32))(v559, v261, v254);
  v270 = sub_100048748(&qword_10119EA30, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t)&protocol conformance descriptor for ContentRating);
  v271 = dispatch thunk of static Equatable.== infix(_:_:)(v268, v269, v254, v270);
  v272 = *(void (**)(_QWORD, _QWORD))(v252 + 8);
  v272(v269, v254);
  sub_10004FF60(v598, &qword_1011B8D50);
  sub_10004FF60(v253, &qword_1011B8D50);
  v272(v268, v254);
  sub_10004FF60(v255, &qword_1011B8D50);
  if ((v271 & 1) != 0)
    goto LABEL_33;
LABEL_29:
  v265 = (unsigned int *)&enum case for Text.TruncationMode.tail(_:);
LABEL_34:
  v273 = (char)v626;
  v274 = v600;
  v276 = v579;
  v275 = v580;
  (*(void (**)(char *, _QWORD, uint64_t))(v600 + 104))(v579, *v265, v580);
  v277 = swift_getKeyPath(&unk_100EBA950);
  v278 = v584;
  (*(void (**)(char *, char *, uint64_t))(v274 + 16))((char *)v584 + *(int *)(v581 + 28), v276, v275);
  *v278 = v277;
  v279 = (uint64_t)v582;
  sub_10004A160((uint64_t)v278, (uint64_t)&v582[*(int *)(v601 + 36)], &qword_1011B32D8);
  v280 = v653;
  v281 = (uint64_t)v629;
  *(_QWORD *)v279 = v653;
  *(_QWORD *)(v279 + 8) = v281;
  v273 &= 1u;
  *(_BYTE *)(v279 + 16) = v273;
  v282 = (void (*)(_QWORD, _QWORD))v654;
  v283 = v628;
  *(_QWORD *)(v279 + 24) = v654;
  *(_QWORD *)(v279 + 32) = v283;
  *(_QWORD *)(v279 + 40) = 2;
  *(_BYTE *)(v279 + 48) = 0;
  sub_100055BBC(v280, v281, v273);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004FF60((uint64_t)v278, &qword_1011B32D8);
  (*(void (**)(char *, uint64_t))(v600 + 8))(v276, v275);
  sub_100055BAC(v280, v281, v273);
  swift_release();
  v284 = swift_bridgeObjectRelease(v282);
  LODWORD(v698) = static HierarchicalShapeStyle.primary.getter(v284);
  v285 = (uint64_t)v677;
  v286 = v676;
  v287 = v664;
  sub_100824838(v664);
  v288 = v652;
  v289 = v665;
  v290 = v666;
  (*(void (**)(char *, _QWORD, uint64_t))(v652 + 104))(v665, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v666);
  LOBYTE(v281) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v287, v289);
  v291 = *(void (**)(_QWORD, _QWORD))(v288 + 8);
  v291(v289, v290);
  v292 = v287;
  v169 = (int *)v285;
  v173 = v286;
  v291(v292, v290);
  v293 = sub_100427DD4();
  v294 = v585;
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v698, v281 & 1, v601, (uint64_t)&type metadata for HierarchicalShapeStyle, v293);
  v295 = sub_10004FF60(v279, &qword_1011B32E0);
  v296 = 0.4;
  if (*(_BYTE *)(v286 + v169[15]))
    v296 = 0.32;
  v297 = v296 * a5;
  v298 = static Alignment.leading.getter(v295);
  _FrameLayout.init(width:height:alignment:)(v712, *(_QWORD *)&v297, 0, 0, 1, v298, v299);
  v301 = v586;
  v300 = v587;
  v302 = (uint64_t)v590;
  (*(void (**)(char *, char *, uint64_t))(v586 + 16))(v590, v294, v587);
  v303 = (_OWORD *)(v302 + *(int *)(v583 + 36));
  v304 = v712[1];
  *v303 = v712[0];
  v303[1] = v304;
  v303[2] = v712[2];
  v305 = (*(double (**)(char *, uint64_t))(v301 + 8))(v294, v300);
  v306 = static Edge.Set.trailing.getter(v305);
  if (qword_10119C8D8 != -1)
    swift_once(&qword_10119C8D8, sub_10085FA00);
  v307 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
  v309 = v308;
  v311 = v310;
  v313 = v312;
  v314 = v589;
  sub_10004A160(v302, v589, &qword_1011B32F0);
  v315 = v603;
  v316 = v314 + *(int *)(v603 + 36);
  *(_BYTE *)v316 = v306;
  *(double *)(v316 + 8) = v307;
  *(_QWORD *)(v316 + 16) = v309;
  *(_QWORD *)(v316 + 24) = v311;
  *(_QWORD *)(v316 + 32) = v313;
  *(_BYTE *)(v316 + 40) = 0;
  sub_10004FF60(v302, &qword_1011B32F0);
  v317 = v588;
  sub_100065228(v314, v588, &qword_1011B32F8);
  v318 = v317;
  v319 = v670;
  sub_100065228(v318, v670, &qword_1011B32F8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v602 + 56))(v319, 0, 1, v315);
  v206 = v667;
  v207 = v651;
  v209 = v668;
  v267 = (void (*)(_QWORD, _QWORD, _QWORD))v655;
  v208 = v669;
LABEL_39:
  v655 = (uint64_t)v267;
  v267(v207, v173, v209);
  v320 = *(_QWORD *)(v208 - 8);
  v629 = *(char **)(v320 + 48);
  v321 = ((uint64_t (*)(char *, uint64_t, unint64_t))v629)(v207, 1, v208);
  v628 = v320;
  if (v321 == 1)
  {
    v322 = 0;
    v323 = 0;
    v324 = v206;
    v325 = v209;
  }
  else
  {
    v322 = (*(uint64_t (**)(unint64_t))(v650 + 40))(v208);
    v323 = v326;
    v324 = v320;
    v325 = v208;
  }
  (*(void (**)(char *, unint64_t))(v324 + 8))(v207, v325);
  v327 = sub_1004872C4((uint64_t)&off_1010AC038);
  v328 = Text.init(optional:options:)(v322, v323, v327);
  v330 = v329;
  v332 = v331;
  v334 = v333;
  v335 = swift_getKeyPath(&unk_100EBA920);
  *(_QWORD *)&v698 = v328;
  *((_QWORD *)&v698 + 1) = v330;
  *(_QWORD *)&v699 = v332;
  *((_QWORD *)&v699 + 1) = v334;
  *(_QWORD *)&v700 = v335;
  *((_QWORD *)&v700 + 1) = 2;
  LOBYTE(v701) = 0;
  LODWORD(v679) = static HierarchicalShapeStyle.secondary.getter(v335);
  v336 = v169;
  v337 = v664;
  sub_100824838(v664);
  v338 = v652;
  v339 = *(void (**)(_QWORD))(v652 + 104);
  v340 = v665;
  LODWORD(v651) = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  v341 = v666;
  v653 = (uint64_t)v339;
  v339(v665);
  LOBYTE(v328) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v337, v340);
  v342 = v173;
  v343 = *(uint64_t **)(v338 + 8);
  ((void (*)(char *, uint64_t))v343)(v340, v341);
  v654 = v343;
  ((void (*)(uint64_t, uint64_t))v343)(v337, v341);
  v344 = sub_100007E8C(&qword_1011A0FA0);
  v345 = sub_1000F571C();
  v346 = v632;
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v679, v328 & 1, v344, (uint64_t)&type metadata for HierarchicalShapeStyle, v345);
  sub_1000E450C(v698, *((uint64_t *)&v698 + 1), v699, *((uint64_t *)&v699 + 1));
  *(_QWORD *)&v347 = swift_release().n128_u64[0];
  v348 = static Edge.Set.trailing.getter(v347);
  if (qword_10119C8D8 != -1)
    swift_once(&qword_10119C8D8, sub_10085FA00);
  v349 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
  v351 = v350;
  v353 = v352;
  v355 = v354;
  v356 = v633;
  v357 = v672;
  v358 = v657;
  (*(void (**)(uint64_t, char *, uint64_t))(v633 + 16))(v672, v346, v657);
  v359 = v357 + *(int *)(v631 + 36);
  *(_BYTE *)v359 = v348;
  *(double *)(v359 + 8) = v349;
  *(_QWORD *)(v359 + 16) = v351;
  *(_QWORD *)(v359 + 24) = v353;
  *(_QWORD *)(v359 + 32) = v355;
  *(_BYTE *)(v359 + 40) = 0;
  v360 = *(uint64_t (**)(_QWORD, _QWORD))(v356 + 8);
  v361 = v360(v346, v358);
  if (*(_BYTE *)(v342 + v336[15]) != 1)
    goto LABEL_50;
  v361 = sub_10041BBC4((uint64_t)v677);
  if (!v362)
    goto LABEL_50;
  v363 = v361;
  v364 = v362;
  swift_bridgeObjectRelease(v362);
  v365 = HIBYTE(v364) & 0xF;
  if ((v364 & 0x2000000000000000) == 0)
    v365 = v363 & 0xFFFFFFFFFFFFLL;
  if (v365)
  {
    v366 = static Alignment.leading.getter(v361);
    ((void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(v713, a5 * 0.28, 0, 0, 1, v366, v367);
    v368 = v574;
    sub_10004A160(v672, v574, &qword_1011A2CA0);
    v370 = v605;
    v369 = v606;
    v371 = (_OWORD *)(v368 + *(int *)(v605 + 36));
    v372 = v713[1];
    *v371 = v713[0];
    v371[1] = v372;
    v371[2] = v713[2];
    v373 = &qword_1011B32C8;
    sub_10004A160(v368, v369, &qword_1011B32C8);
    swift_storeEnumTagMultiPayload(v369, v604, 0);
    v374 = sub_10005610C(&qword_1011B3320, &qword_1011B32C8, (void (*)(void))sub_100427D08);
    v375 = sub_10005610C(&qword_1011B3330, &qword_1011A2CA8, (void (*)(void))sub_100427D08);
    _ConditionalContent<>.init(storage:)(v369, v370, v607, v374, v375);
    v376 = v368;
  }
  else
  {
LABEL_50:
    v377 = static Alignment.leading.getter(v361);
    v378 = v599;
    sub_10014A7C4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v599, 0.0, 1, 0.0, 1, v377, v379);
    v373 = &qword_1011A2CA8;
    v380 = v606;
    sub_10004A160(v378, v606, &qword_1011A2CA8);
    swift_storeEnumTagMultiPayload(v380, v604, 1);
    v381 = sub_10005610C(&qword_1011B3320, &qword_1011B32C8, (void (*)(void))sub_100427D08);
    v382 = sub_10005610C(&qword_1011B3330, &qword_1011A2CA8, (void (*)(void))sub_100427D08);
    _ConditionalContent<>.init(storage:)(v380, v605, v607, v381, v382);
    v376 = v378;
  }
  sub_10004FF60(v376, v373);
  v383 = (uint64_t)v677;
  v384 = v676;
  v385 = sub_10041BBC4((uint64_t)v677);
  v387 = v386;
  v388 = sub_1004872C4((uint64_t)&off_1010AC060);
  v389 = Text.init(optional:options:)(v385, v387, v388);
  v391 = v390;
  v393 = v392;
  v395 = v394;
  v396 = swift_getKeyPath(&unk_100EBA920);
  *(_QWORD *)&v698 = v389;
  *((_QWORD *)&v698 + 1) = v391;
  *(_QWORD *)&v699 = v393;
  *((_QWORD *)&v699 + 1) = v395;
  *(_QWORD *)&v700 = v396;
  *((_QWORD *)&v700 + 1) = 2;
  LOBYTE(v701) = 0;
  LODWORD(v679) = static HierarchicalShapeStyle.secondary.getter(v396);
  v397 = v664;
  sub_100824838(v664);
  v398 = v665;
  v399 = v666;
  ((void (*)(char *, _QWORD, uint64_t))v653)(v665, v651, v666);
  LOBYTE(v389) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v397, v398);
  v400 = v398;
  v401 = (void (*)(_QWORD, _QWORD))v654;
  ((void (*)(char *, uint64_t))v654)(v400, v399);
  v401(v397, v399);
  v402 = v635;
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v679, v389 & 1, v344, (uint64_t)&type metadata for HierarchicalShapeStyle, v345);
  sub_1000E450C(v698, *((uint64_t *)&v698 + 1), v699, *((uint64_t *)&v699 + 1));
  swift_release();
  v404 = static Alignment.leading.getter(v403);
  v405 = v637;
  v408 = sub_10014A828(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v637, v407, 0.0, 1, 0.0, 1, v404, v406);
  v409 = ((double (*)(char *, uint64_t, double))v360)(v402, v657, v408);
  LOBYTE(v389) = static Edge.Set.trailing.getter(v409);
  v410 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
  v412 = v411;
  v414 = v413;
  v416 = v415;
  v417 = v675;
  sub_10004A160(v405, v675, &qword_1011A2C98);
  v418 = v417 + *(int *)(v636 + 36);
  *(_BYTE *)v418 = v389;
  *(double *)(v418 + 8) = v410;
  *(_QWORD *)(v418 + 16) = v412;
  *(_QWORD *)(v418 + 24) = v414;
  *(_QWORD *)(v418 + 32) = v416;
  *(_BYTE *)(v418 + 40) = 0;
  sub_10004FF60(v405, &qword_1011A2C98);
  sub_100065228(v417, v674, &qword_1011B32B8);
  v419 = *(void (**)(__n128))(**(_QWORD **)(v384 + *(int *)(v383 + 76) + 8) + 112);
  v420 = swift_retain();
  v421 = (uint64_t)v640;
  v419(v420);
  swift_release();
  *(_QWORD *)&v698 = 0x4000000000000000;
  v422 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v698, &type metadata for CGFloat, v422);
  *(_QWORD *)&v698 = 0x3FF0000000000000;
  v423 = ScaledMetric.init(wrappedValue:)(&v698, &type metadata for CGFloat, v422);
  v424 = static Alignment.center.getter(v423);
  LOBYTE(v556) = 1;
  LOBYTE(v554) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v714, 0x4046000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v554, 0, v556, v424, v425);
  v426 = v643;
  sub_10005B704(v421, v643, _s27DownloadStatusIndicatorViewVMa);
  v427 = (_OWORD *)(v426 + *(int *)(v639 + 36));
  v428 = v714[5];
  v427[4] = v714[4];
  v427[5] = v428;
  v427[6] = v714[6];
  v429 = v714[1];
  *v427 = v714[0];
  v427[1] = v429;
  v430 = v714[3];
  v427[2] = v714[2];
  v427[3] = v430;
  sub_10005B748(v421, _s27DownloadStatusIndicatorViewVMa);
  v432 = static Edge.Set.trailing.getter(v431);
  v433 = v634;
  sub_10005B704(v630, v634, type metadata accessor for HorizontalCellSource);
  if (swift_getEnumCaseMultiPayload(v433, v656) == 1)
    v434 = 9.0;
  else
    v434 = 0.0;
  sub_10005B748(v433, type metadata accessor for HorizontalCellSource);
  v435 = EdgeInsets.init(_all:)(v434);
  v437 = v436;
  v439 = v438;
  v441 = v440;
  v442 = v641;
  sub_10004A160(v426, v641, &qword_1011AFAE8);
  v443 = v442 + *(int *)(v642 + 36);
  *(_BYTE *)v443 = v432;
  *(double *)(v443 + 8) = v435;
  *(_QWORD *)(v443 + 16) = v437;
  *(_QWORD *)(v443 + 24) = v439;
  *(_QWORD *)(v443 + 32) = v441;
  *(_BYTE *)(v443 + 40) = 0;
  sub_10004FF60(v426, &qword_1011AFAE8);
  sub_100065228(v442, v662, &qword_1011AFAF0);
  if (*(_BYTE *)(v384 + *(int *)(v383 + 64)) != 1)
    goto LABEL_61;
  v444 = v597;
  v445 = v668;
  ((void (*)(char *, uint64_t, uint64_t))v655)(v597, v384, v668);
  v446 = v669;
  if (((unsigned int (*)(char *, uint64_t, unint64_t))v629)(v444, 1, v669) == 1)
  {
    (*(void (**)(char *, uint64_t))(v667 + 8))(v444, v445);
LABEL_61:
    v542 = v647;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v644 + 56))(v647, 1, 1, v645);
    goto LABEL_62;
  }
  v447 = COERCE_DOUBLE((*(uint64_t (**)(unint64_t))(v650 + 80))(v446));
  v449 = v448;
  (*(void (**)(char *, unint64_t))(v628 + 8))(v444, v446);
  if ((v449 & 1) != 0)
    goto LABEL_61;
  v450 = v447;
  if (qword_10119BFD0 != -1)
    swift_once(&qword_10119BFD0, sub_10040FE08);
  v451 = objc_msgSend((id)qword_10124CF88, "stringFromSeconds:", v447);
  v452 = static String._unconditionallyBridgeFromObjectiveC(_:)(v451);
  v454 = v453;

  *(_QWORD *)&v698 = v452;
  *((_QWORD *)&v698 + 1) = v454;
  v669 = sub_100055B68();
  v455 = Text.init<A>(_:)(&v698, &type metadata for String, v669);
  v457 = v456;
  v459 = v458;
  v461 = v460 & 1;
  LODWORD(v698) = static HierarchicalShapeStyle.secondary.getter(v455);
  v462 = v664;
  sub_100824838(v664);
  v463 = v665;
  v464 = v666;
  ((void (*)(char *, _QWORD, uint64_t))v653)(v665, v651, v666);
  LOBYTE(v451) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v462, v463);
  v465 = v463;
  v466 = (void (*)(_QWORD, _QWORD))v654;
  ((void (*)(char *, uint64_t))v654)(v465, v464);
  v466(v462, v464);
  v467 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v698, v451 & 1, v455, v457, v461, v459, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v469 = v468;
  v471 = v470;
  v473 = v472 & 1;
  sub_100055BAC(v455, v457, v461);
  swift_bridgeObjectRelease(v459);
  v475 = static Font.body.getter(v474);
  v476 = Text.font(_:)(v475, v467, v469, v473, v471);
  v478 = v477;
  v480 = v479;
  v482 = v481;
  swift_release();
  v483 = v480 & 1;
  sub_100055BAC(v467, v469, v473);
  v484 = swift_bridgeObjectRelease(v471);
  v677 = (int *)Text.monospacedDigit()(v476, v478, v483, v482, v484);
  v676 = v485;
  LODWORD(v667) = v486;
  v668 = v487;
  sub_100055BAC(v476, v478, v483);
  swift_bridgeObjectRelease(v482);
  v489 = static Alignment.center.getter(v488);
  LOBYTE(v557) = 1;
  LOBYTE(v555) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v715, 0x4048000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v555, 0, v557, v489, v490);
  v491 = v715;
  v492 = v717;
  v493 = v719;
  v494 = v721;
  v495 = v723;
  v496 = v725;
  v497 = v727;
  v498 = v728;
  v696 = v667 & 1;
  v695 = v716;
  v694 = v718;
  v693 = v720;
  v692 = v722;
  v691 = v724;
  v690 = v726;
  LOBYTE(v482) = static Edge.Set.trailing.getter(v499);
  v500 = EdgeInsets.init(_all:)(9.0);
  v697 = 0;
  *(_QWORD *)&v679 = v677;
  *((_QWORD *)&v679 + 1) = v676;
  LOBYTE(v680) = v696;
  *((_QWORD *)&v680 + 1) = v668;
  *(_QWORD *)&v681 = v491;
  BYTE8(v681) = v695;
  *(_QWORD *)&v682 = v492;
  BYTE8(v682) = v694;
  *(_QWORD *)&v683 = v493;
  BYTE8(v683) = v693;
  *(_QWORD *)&v684 = v494;
  BYTE8(v684) = v692;
  *(_QWORD *)&v685 = v495;
  BYTE8(v685) = v691;
  *(_QWORD *)&v686 = v496;
  BYTE8(v686) = v690;
  *(_QWORD *)&v687 = v497;
  *((_QWORD *)&v687 + 1) = v498;
  LOBYTE(v688) = v482;
  *((double *)&v688 + 1) = v500;
  *(_QWORD *)&v689[0] = v501;
  *((_QWORD *)&v689[0] + 1) = v502;
  *(_QWORD *)&v689[1] = v503;
  BYTE8(v689[1]) = 0;
  v506 = static Duration.seconds(_:)(v504, v505, v450);
  v508 = v507;
  v509 = sub_100007E8C(&qword_1011A0640);
  v510 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0);
  v511 = *(_QWORD *)(v510 - 8);
  v512 = *(_QWORD *)(v511 + 72);
  v513 = *(unsigned __int8 *)(v511 + 80);
  v514 = (v513 + 32) & ~v513;
  v515 = swift_allocObject(v509, v514 + 3 * v512, v513 | 7);
  *(_OWORD *)(v515 + 16) = xmmword_100EA7AC0;
  v516 = static Duration.UnitsFormatStyle.Unit.hours.getter();
  v517 = static Duration.UnitsFormatStyle.Unit.minutes.getter(v516);
  static Duration.UnitsFormatStyle.Unit.seconds.getter(v517);
  v518 = sub_1000476D0(v515);
  swift_setDeallocating(v515);
  swift_arrayDestroy(v515 + v514, 3, v510);
  v519 = swift_deallocClassInstance(v515, 32, 7);
  v520 = v560;
  v521 = static Duration.UnitsFormatStyle.UnitWidth.wide.getter(v519);
  v522 = v564;
  v523 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v521);
  v524 = v569;
  static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v523);
  v525 = v562;
  static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)(v518, v520, 0, 1, v522, 0, 1, v524);
  v526 = swift_bridgeObjectRelease(v518);
  (*(void (**)(char *, uint64_t, __n128))(v570 + 8))(v524, v571, v526);
  (*(void (**)(char *, uint64_t))(v566 + 8))(v522, v568);
  (*(void (**)(char *, uint64_t))(v561 + 8))(v520, v563);
  v527 = sub_100048748((unint64_t *)&unk_1011CEA50, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
  v528 = v506;
  v529 = v567;
  Duration.formatted<A>(_:)(&v698, v525, v528, v508, v567, v527);
  (*(void (**)(char *, uint64_t))(v565 + 8))(v525, v529);
  v678 = v698;
  v530 = Text.init<A>(_:)(&v678, &type metadata for String, v669);
  v532 = v531;
  v534 = v533;
  v536 = v535 & 1;
  v537 = sub_100007E8C(&qword_1011AFB88);
  v538 = sub_10005610C((unint64_t *)&qword_1011AFB90, &qword_1011AFB88, (void (*)(void))sub_1001C97E8);
  v539 = (uint64_t)v573;
  View.accessibility(label:)(v530, v532, v536, v534, v537, v538);
  sub_100055BAC(v530, v532, v536);
  swift_bridgeObjectRelease(v534);
  v706 = v687;
  v707 = v688;
  v708[0] = v689[0];
  *(_OWORD *)((char *)v708 + 9) = *(_OWORD *)((char *)v689 + 9);
  v702 = v683;
  v703 = v684;
  v704 = v685;
  v705 = v686;
  v698 = v679;
  v699 = v680;
  v700 = v681;
  v701 = v682;
  sub_1003630A4((uint64_t)&v698);
  v540 = v572;
  sub_100065228(v539, v572, &qword_1011AFAD8);
  v541 = v540;
  v542 = v647;
  sub_100065228(v541, v647, &qword_1011AFAD8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v644 + 56))(v542, 0, 1, v645);
LABEL_62:
  v543 = v658;
  sub_10004A160((uint64_t)v663, v658, &qword_1011B3318);
  v544 = v659;
  sub_10004A160(v673, v659, &qword_1011B3308);
  sub_10004A160(v670, v660, &qword_1011B3300);
  v545 = v661;
  sub_10004A160(v671, v661, &qword_1011B32D0);
  v546 = v675;
  sub_10004A160(v674, v675, &qword_1011B32B8);
  v547 = v662;
  v548 = v646;
  sub_10004A160(v662, v646, &qword_1011AFAF0);
  v549 = v648;
  sub_10004A160(v542, v648, &qword_1011AFAE0);
  v550 = v649;
  sub_10004A160(v543, v649, &qword_1011B3318);
  v551 = (int *)sub_100007E8C(&qword_1011B3338);
  sub_10004A160(v544, v550 + v551[12], &qword_1011B3308);
  v552 = v660;
  sub_10004A160(v660, v550 + v551[16], &qword_1011B3300);
  sub_10004A160(v545, v550 + v551[20], &qword_1011B32D0);
  sub_10004A160(v546, v550 + v551[24], &qword_1011B32B8);
  sub_10004A160(v548, v550 + v551[28], &qword_1011AFAF0);
  sub_10004A160(v549, v550 + v551[32], &qword_1011AFAE0);
  sub_10004FF60(v542, &qword_1011AFAE0);
  sub_10004FF60(v547, &qword_1011AFAF0);
  sub_10004FF60(v674, &qword_1011B32B8);
  sub_10004FF60(v671, &qword_1011B32D0);
  sub_10004FF60(v672, &qword_1011A2CA0);
  sub_10004FF60(v670, &qword_1011B3300);
  sub_10004FF60(v673, &qword_1011B3308);
  sub_10004FF60((uint64_t)v663, &qword_1011B3318);
  sub_10004FF60(v549, &qword_1011AFAE0);
  sub_10004FF60(v548, &qword_1011AFAF0);
  sub_10004FF60(v675, &qword_1011B32B8);
  sub_10004FF60(v661, &qword_1011B32D0);
  sub_10004FF60(v552, &qword_1011B3300);
  sub_10004FF60(v659, &qword_1011B3308);
  return sub_10004FF60(v658, &qword_1011B3318);
}

uint64_t sub_10041B824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - v9;
  v28 = a1;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = type metadata accessor for Optional(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - v14;
  v16 = sub_100007E8C(&qword_1011B8D50);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v29 = v2;
  v20(v15, v2, v12, v17);
  v21 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v22 = type metadata accessor for ContentRating(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
  }
  else
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v28 + 24) + 72))(v11);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v11);
  }
  sub_100824838((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  v23 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v10, v7);
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  v24(v10, v4);
  v25 = TextBadge.init(for:isPlayable:)(v19, v23 & 1);
  return TextBadge.view.getter(v25);
}

uint64_t sub_10041BA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  _BYTE v16[16];

  v3 = *(_QWORD *)(a1 + 16);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-v6];
  v8 = sub_100007E8C(&qword_1011A19A0);
  v9 = __chkstk_darwin(v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_BYTE *)(v1 + *(int *)(a1 + 56)) != 1)
    return 0;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v1, v4, v9);
  v12 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v3) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v13 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  }
  else
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 64))(v3);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v3);
  }
  v15 = TextBadge.init(for:)(v11);
  return TextBadge.view.getter(v15);
}

uint64_t sub_10041BBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - v6;
  v8 = 0;
  if (*(_BYTE *)(v1 + *(int *)(a1 + 60)) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1, v4);
    v9 = *(_QWORD *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v3) == 1)
    {
      v8 = 0;
    }
    else
    {
      v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 48))(v3);
      v5 = v9;
      v4 = v3;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v8;
}

uint64_t sub_10041BCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v8 = type metadata accessor for Optional(0, a3);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - v10;
  v12 = sub_100007E8C(&qword_10119F7C8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, a2, v8, v13);
  v16 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v17 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 1, 1, v17);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, a3);
    v18 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 0, 1, v18);
  }
  swift_storeEnumTagMultiPayload(v15, v12, 0);
  v19 = sub_100007E8C(&qword_1011B0C40);
  return sub_100427C3C((uint64_t)v15, a1 + *(int *)(v19 + 36));
}

_QWORD *sub_10041BE6C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  _QWORD *v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unsigned int v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char isUniquelyReferenced_nonNull_native;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  char *v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  unint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  unsigned int (*v144)(char *, uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned int (*v149)(uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  char v152;
  char v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  unint64_t v176;
  unint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char v182;
  void (*v183)(char *, uint64_t);
  uint64_t v184;
  uint64_t v185;
  char v186;
  char *v187;
  uint64_t v188;
  char *v189;
  unint64_t v190;
  unint64_t v191;
  _QWORD *v192;
  _QWORD *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *result;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  __n128 v203;
  char *v204;
  void (*v205)(char *, char *, uint64_t);
  void (*v206)(char *, uint64_t);
  void (*v207)(char *, char *, uint64_t);
  void (*v208)(char *, char *, uint64_t);
  int v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  void (*v214)(char *, uint64_t);
  void (*v215)(char *, uint64_t);
  uint64_t v216;
  void (*v217)(char *, char *, uint64_t);
  char v218;
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  char *v223;
  void (*v224)(char *, uint64_t);
  void (*v225)(char *, uint64_t);
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(char *, uint64_t);
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  char v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  unint64_t v246;
  unint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  unint64_t v250;
  unint64_t v251;
  _QWORD *v252;
  unint64_t v253;
  unint64_t v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char v265;
  char v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  unint64_t v270;
  unint64_t v271;
  _QWORD *v272;
  uint64_t v273;
  char v274;
  char v275;
  uint64_t v276;
  void (*v277)(char *, uint64_t);
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  void (*v288)(char *, uint64_t);
  void (*v289)(char *, char *, uint64_t, __n128);
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  unsigned int (*v296)(char *, uint64_t, uint64_t);
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  void (*v301)(char *, char *, uint64_t);
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  uint64_t v307;
  _QWORD *v308;
  _QWORD *v309;
  uint64_t v310;

  v2 = v1;
  v4 = type metadata accessor for ContentRating(0);
  v298 = *(_QWORD *)(v4 - 8);
  v299 = v4;
  __chkstk_darwin(v4);
  v281 = (char *)&v278 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v293 = sub_100007E8C(&qword_10119EA28);
  __chkstk_darwin(v293);
  v302 = (char *)&v278 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v7);
  v287 = (uint64_t)&v278 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v294 = (char *)&v278 - v10;
  __chkstk_darwin(v11);
  v300 = (char *)&v278 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = type metadata accessor for Optional(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v278 = (char *)&v278 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v279 = (char *)&v278 - v18;
  __chkstk_darwin(v19);
  v283 = (char *)&v278 - v20;
  __chkstk_darwin(v21);
  v297 = (char *)&v278 - v22;
  __chkstk_darwin(v23);
  v292 = (char *)&v278 - v24;
  __chkstk_darwin(v25);
  v291 = (char *)&v278 - v26;
  __chkstk_darwin(v27);
  v301 = (void (*)(char *, char *, uint64_t))((char *)&v278 - v28);
  __chkstk_darwin(v29);
  v31 = (char *)&v278 - v30;
  v32 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v33);
  v280 = (char *)&v278 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v285 = (char *)&v278 - v36;
  __chkstk_darwin(v37);
  v282 = (char *)&v278 - v38;
  __chkstk_darwin(v39);
  v284 = (char *)&v278 - v40;
  v42 = __chkstk_darwin(v41);
  v44 = (char *)&v278 - v43;
  v45 = &v2[*(int *)(a1 + 36)];
  v47 = *(_QWORD **)v45;
  v46 = *((_QWORD *)v45 + 1);
  v289 = *(void (**)(char *, char *, uint64_t, __n128))(v32 + 16);
  v289((char *)&v278 - v43, v2, a1, v42);
  v304 = v14;
  v305 = v13;
  v303 = v15;
  v307 = a1;
  if (v46)
  {
    v48 = *(void (**)(char *, uint64_t))(v32 + 8);
    swift_bridgeObjectRetain();
    v288 = v48;
    v48(v44, a1);
    v49 = v46;
  }
  else
  {
    v73 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v73(v31, v44, v14);
    v74 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v31, 1, v13) == 1)
    {
      v288 = *(void (**)(char *, uint64_t))(v32 + 8);
      v288(v44, a1);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v14);
      v286 = 0;
      v290 = 0;
      v306 = _swiftEmptyArrayStorage;
      v308 = _swiftEmptyArrayStorage;
      v68 = v14;
      v69 = v15;
      v53 = v301;
      v72 = (uint64_t)v302;
      v70 = v73;
      v71 = v2;
      goto LABEL_13;
    }
    v286 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 32))(v13);
    v49 = v75;
    v288 = *(void (**)(char *, uint64_t))(v32 + 8);
    v288(v44, a1);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v13);
    if (!v49)
    {
      v290 = 0;
      v306 = _swiftEmptyArrayStorage;
      v308 = _swiftEmptyArrayStorage;
      v71 = v2;
      v68 = v304;
      v13 = v305;
      v72 = (uint64_t)v302;
      v69 = v303;
      v70 = v73;
      v53 = v301;
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    v47 = (_QWORD *)v286;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v52 = v50[2];
  v51 = v50[3];
  v308 = v50;
  if (v52 >= v51 >> 1)
    v308 = sub_100431480((_QWORD *)(v51 > 1), v52 + 1, 1, v308);
  v53 = v301;
  v54 = v308;
  v308[2] = v52 + 1;
  v55 = &v54[2 * v52];
  v55[4] = v47;
  v55[5] = v49;
  v286 = (uint64_t)v47;
  v309 = v47;
  v310 = v49;
  v290 = v49;
  v56 = sub_100055B68();
  v57 = Text.init<A>(_:)(&v309, &type metadata for String, v56);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v64 = sub_100432428(0, 1, 1, _swiftEmptyArrayStorage);
  v66 = v64[2];
  v65 = v64[3];
  if (v66 >= v65 >> 1)
    v64 = sub_100432428((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
  v64[2] = v66 + 1;
  v306 = v64;
  v67 = &v64[4 * v66];
  v67[4] = v57;
  v67[5] = v59;
  *((_BYTE *)v67 + 48) = v61 & 1;
  v67[7] = v63;
  v69 = v303;
  v68 = v304;
  v70 = *(void (**)(char *, char *, uint64_t))(v303 + 16);
  v71 = v2;
  v13 = v305;
  v72 = (uint64_t)v302;
LABEL_13:
  v76 = v71;
  ((void (*)(void (*)(char *, char *, uint64_t)))v70)(v53);
  v77 = *(_QWORD *)(v13 - 8);
  v296 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
  v78 = v296((char *)v53, 1, v13);
  v79 = (void (*)(_QWORD))v53;
  v80 = (uint64_t)v300;
  v301 = v70;
  v295 = v77;
  if (v78 == 1)
  {
    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v69 + 8))(v53, v68);
LABEL_26:
    v86 = v296;
    v111 = v297;
    v109 = v76;
    v110 = v68;
    v87 = v291;
    goto LABEL_27;
  }
  v81 = v13;
  v82 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v307 + 24) + 40))(v13);
  v84 = v83;
  (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v77 + 8))((void (*)(char *, char *, uint64_t))v79, v81);
  if (!v84)
  {
    v70 = v301;
    v72 = (uint64_t)v302;
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v308);
  v86 = v296;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v308 = sub_100431480(0, v308[2] + 1, 1, v308);
  v87 = v291;
  v89 = v308[2];
  v88 = v308[3];
  if (v89 >= v88 >> 1)
    v308 = sub_100431480((_QWORD *)(v88 > 1), v89 + 1, 1, v308);
  v90 = v308;
  v308[2] = v89 + 1;
  v91 = &v90[2 * v89];
  v91[4] = v82;
  v91[5] = v84;
  v309 = v90;
  swift_bridgeObjectRetain();
  v92 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v93 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v94 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v92, v93);
  v96 = v95;
  swift_bridgeObjectRelease(v90);
  v309 = (_QWORD *)v94;
  v310 = v96;
  v97 = sub_100055B68();
  v98 = Text.init<A>(_:)(&v309, &type metadata for String, v97);
  v100 = v99;
  v102 = v101;
  v104 = v103;
  if ((swift_isUniquelyReferenced_nonNull_native(v306) & 1) != 0)
    v105 = v306;
  else
    v105 = sub_100432428(0, v306[2] + 1, 1, v306);
  v107 = v105[2];
  v106 = v105[3];
  if (v107 >= v106 >> 1)
    v105 = sub_100432428((_QWORD *)(v106 > 1), v107 + 1, 1, v105);
  v105[2] = v107 + 1;
  v306 = v105;
  v108 = &v105[4 * v107];
  v108[4] = v98;
  v108[5] = v100;
  *((_BYTE *)v108 + 48) = v102 & 1;
  v108[7] = v104;
  v109 = v76;
  v69 = v303;
  v110 = v304;
  v70 = v301;
  v72 = (uint64_t)v302;
  v80 = (uint64_t)v300;
  v111 = v297;
LABEL_27:
  if (v109[*(int *)(v307 + 60)] != 1)
  {
    v115 = v86;
    goto LABEL_41;
  }
  v112 = v109;
  ((void (*)(char *))v70)(v87);
  v113 = v305;
  if (v86(v87, 1, v305) == 1)
  {
    v114 = v87;
    v115 = v86;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v114, v110);
    v109 = v112;
LABEL_41:
    v140 = v299;
    v141 = v292;
    goto LABEL_42;
  }
  v116 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v307 + 24) + 48))(v113);
  v118 = v117;
  (*(void (**)(char *, uint64_t))(v295 + 8))(v87, v113);
  if (v118)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
      v308 = sub_100431480(0, v308[2] + 1, 1, v308);
    v120 = v308[2];
    v119 = v308[3];
    if (v120 >= v119 >> 1)
      v308 = sub_100431480((_QWORD *)(v119 > 1), v120 + 1, 1, v308);
    v121 = v308;
    v308[2] = v120 + 1;
    v122 = &v121[2 * v120];
    v122[4] = v116;
    v122[5] = v118;
    v309 = v121;
    swift_bridgeObjectRetain();
    v123 = sub_100007E8C((uint64_t *)&unk_1011AD420);
    v124 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
    v125 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v123, v124);
    v127 = v126;
    swift_bridgeObjectRelease(v121);
    v309 = (_QWORD *)v125;
    v310 = v127;
    v128 = sub_100055B68();
    v129 = Text.init<A>(_:)(&v309, &type metadata for String, v128);
    v131 = v130;
    v133 = v132;
    v135 = v134;
    if ((swift_isUniquelyReferenced_nonNull_native(v306) & 1) != 0)
      v136 = v306;
    else
      v136 = sub_100432428(0, v306[2] + 1, 1, v306);
    v138 = v136[2];
    v137 = v136[3];
    v115 = v86;
    if (v138 >= v137 >> 1)
      v136 = sub_100432428((_QWORD *)(v137 > 1), v138 + 1, 1, v136);
    v136[2] = v138 + 1;
    v306 = v136;
    v139 = &v136[4 * v138];
    v139[4] = v129;
    v139[5] = v131;
    *((_BYTE *)v139 + 48) = v133 & 1;
    v139[7] = v135;
    v109 = v112;
    v69 = v303;
    v110 = v304;
    v70 = v301;
    v72 = (uint64_t)v302;
    v80 = (uint64_t)v300;
    v111 = v297;
    goto LABEL_41;
  }
  v115 = v86;
  v70 = v301;
  v111 = v297;
  v109 = v112;
  v140 = v299;
  v141 = v292;
  v110 = v304;
LABEL_42:
  if (v109[*(int *)(v307 + 64)] != 1)
  {
LABEL_45:
    v144 = v115;
    goto LABEL_46;
  }
  v142 = v109;
  ((void (*)(char *))v70)(v141);
  v143 = v305;
  if (v115(v141, 1, v305) == 1)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v141, v110);
    v109 = v142;
    v140 = v299;
    goto LABEL_45;
  }
  v151 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v307 + 24) + 80))(v143);
  v153 = v152;
  (*(void (**)(char *, uint64_t))(v295 + 8))(v141, v143);
  if ((v153 & 1) != 0)
  {
    v70 = v301;
    v111 = v297;
    v109 = v142;
    v140 = v299;
    v144 = v115;
    v110 = v304;
  }
  else
  {
    v144 = v115;
    if (qword_10119BFD0 != -1)
    {
      v292 = (char *)v151;
      swift_once(&qword_10119BFD0, sub_10040FE08);
    }
    v154 = objc_msgSend((id)qword_10124CF88, "stringFromSeconds:");
    v155 = static String._unconditionallyBridgeFromObjectiveC(_:)(v154);
    v157 = v156;

    if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
      v308 = sub_100431480(0, v308[2] + 1, 1, v308);
    v159 = v308[2];
    v158 = v308[3];
    if (v159 >= v158 >> 1)
      v308 = sub_100431480((_QWORD *)(v158 > 1), v159 + 1, 1, v308);
    v160 = v308;
    v308[2] = v159 + 1;
    v161 = &v160[2 * v159];
    v161[4] = v155;
    v161[5] = v157;
    v309 = v160;
    swift_bridgeObjectRetain();
    v162 = sub_100007E8C((uint64_t *)&unk_1011AD420);
    v163 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
    v164 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v162, v163);
    v166 = v165;
    swift_bridgeObjectRelease(v160);
    v309 = (_QWORD *)v164;
    v310 = v166;
    v167 = sub_100055B68();
    v168 = Text.init<A>(_:)(&v309, &type metadata for String, v167);
    v170 = v169;
    v172 = v171;
    v174 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native(v306) & 1) != 0)
      v175 = v306;
    else
      v175 = sub_100432428(0, v306[2] + 1, 1, v306);
    v177 = v175[2];
    v176 = v175[3];
    if (v177 >= v176 >> 1)
      v175 = sub_100432428((_QWORD *)(v176 > 1), v177 + 1, 1, v175);
    v175[2] = v177 + 1;
    v306 = v175;
    v178 = &v175[4 * v177];
    v178[4] = v168;
    v178[5] = v170;
    *((_BYTE *)v178 + 48) = v172 & 1;
    v178[7] = v174;
    v109 = v142;
    v69 = v303;
    v110 = v304;
    v70 = v301;
    v72 = (uint64_t)v302;
    v140 = v299;
    v80 = (uint64_t)v300;
    v111 = v297;
  }
LABEL_46:
  v302 = v109;
  ((void (*)(char *))v70)(v111);
  v145 = v305;
  if (v144(v111, 1, v305) == 1)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v111, v110);
    v146 = v298;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v298 + 56))(v80, 1, 1, v140);
  }
  else
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v307 + 24) + 72))(v145);
    (*(void (**)(char *, uint64_t))(v295 + 8))(v111, v145);
    v146 = v298;
  }
  v147 = (uint64_t)v294;
  (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v294, enum case for ContentRating.explicit(_:), v140);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v146 + 56))(v147, 0, 1, v140);
  v148 = v72 + *(int *)(v293 + 48);
  sub_10004A160(v80, v72, &qword_1011B8D50);
  sub_10004A160(v147, v148, &qword_1011B8D50);
  v149 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  if (v149(v72, 1, v140) == 1)
  {
    sub_10004FF60(v147, &qword_1011B8D50);
    sub_10004FF60(v80, &qword_1011B8D50);
    if (v149(v148, 1, v140) == 1)
    {
      sub_10004FF60(v72, &qword_1011B8D50);
      goto LABEL_68;
    }
    goto LABEL_54;
  }
  v150 = v287;
  sub_10004A160(v72, v287, &qword_1011B8D50);
  if (v149(v148, 1, v140) == 1)
  {
    sub_10004FF60(v147, &qword_1011B8D50);
    sub_10004FF60(v80, &qword_1011B8D50);
    (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v150, v140);
LABEL_54:
    sub_10004FF60(v72, &qword_10119EA28);
LABEL_76:
    swift_bridgeObjectRelease(v308);
    swift_bridgeObjectRelease(v290);
    return v306;
  }
  v179 = v298;
  v180 = v281;
  (*(void (**)(char *, uint64_t, uint64_t))(v298 + 32))(v281, v148, v140);
  v181 = sub_100048748(&qword_10119EA30, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t)&protocol conformance descriptor for ContentRating);
  v182 = dispatch thunk of static Equatable.== infix(_:_:)(v150, v180, v140, v181);
  v183 = *(void (**)(char *, uint64_t))(v179 + 8);
  v183(v180, v140);
  sub_10004FF60(v147, &qword_1011B8D50);
  sub_10004FF60(v80, &qword_1011B8D50);
  v144 = v296;
  v183((char *)v150, v140);
  sub_10004FF60(v72, &qword_1011B8D50);
  if ((v182 & 1) == 0)
    goto LABEL_76;
LABEL_68:
  if (qword_10119BE50 != -1)
    swift_once(&qword_10119BE50, sub_1002F406C);
  v184 = qword_10124CD50;
  v185 = *(_QWORD *)algn_10124CD58;
  swift_bridgeObjectRetain_n(*(_QWORD *)algn_10124CD58, 2);
  v186 = swift_isUniquelyReferenced_nonNull_native(v308);
  v187 = v284;
  v188 = v305;
  v189 = v285;
  if ((v186 & 1) == 0)
    v308 = sub_100431480(0, v308[2] + 1, 1, v308);
  v191 = v308[2];
  v190 = v308[3];
  if (v191 >= v190 >> 1)
    v308 = sub_100431480((_QWORD *)(v190 > 1), v191 + 1, 1, v308);
  v192 = v308;
  v308[2] = v191 + 1;
  v193 = &v192[2 * v191];
  v300 = (char *)v184;
  v193[4] = v184;
  v193[5] = v185;
  v194 = v283;
  v195 = v304;
  ((void (*)(char *))v301)(v283);
  if (v144(v194, 1, v188) == 1)
  {
    v196 = v307;
    v197 = v303;
    (*(void (**)(char *, uint64_t))(v303 + 8))(v194, v195);
  }
  else
  {
    v199 = v307;
    v200 = v194;
    (*(void (**)(uint64_t))(*(_QWORD *)(v307 + 24) + 40))(v188);
    v202 = v201;
    (*(void (**)(char *, uint64_t))(v295 + 8))(v200, v188);
    v196 = v199;
    v197 = v303;
    if (v202)
    {
      v203 = swift_bridgeObjectRelease(v202);
      v204 = v302;
      v205 = (void (*)(char *, char *, uint64_t))v289;
      v289(v187, v302, v196, v203);
      v206 = v288;
      v288(v187, v196);
LABEL_93:
      v205(v189, v204, v196);
      v206(v189, v196);
      v226 = v290;
      goto LABEL_94;
    }
  }
  v303 = v185;
  v207 = v301;
  v208 = (void (*)(char *, char *, uint64_t))v289;
  ((void (*)(char *, char *, uint64_t))v289)(v187, v302, v196);
  v209 = v187[*(int *)(v196 + 60)];
  v210 = v282;
  v208(v282, v187, v196);
  if (v209 != 1)
  {
    v215 = v288;
    v288(v210, v196);
    v215(v187, v196);
    goto LABEL_83;
  }
  v211 = v279;
  v212 = v304;
  v207(v279, v210, v304);
  v213 = v305;
  if (v296(v211, 1, v305) == 1)
  {
    v214 = v288;
    v288(v210, v196);
    v214(v187, v196);
    (*(void (**)(char *, uint64_t))(v197 + 8))(v211, v212);
LABEL_83:
    v216 = v295;
    goto LABEL_84;
  }
  v227 = v211;
  (*(void (**)(uint64_t))(*(_QWORD *)(v196 + 24) + 48))(v213);
  v229 = v228;
  v230 = v288;
  v288(v210, v196);
  v230(v187, v196);
  v216 = v295;
  (*(void (**)(char *, uint64_t))(v295 + 8))(v227, v213);
  if (v229)
  {
    swift_bridgeObjectRelease(v229);
    v206 = v288;
    v205 = (void (*)(char *, char *, uint64_t))v289;
    v204 = v302;
    v185 = v303;
    goto LABEL_93;
  }
LABEL_84:
  v217 = (void (*)(char *, char *, uint64_t))v289;
  ((void (*)(char *, char *, uint64_t))v289)(v189, v302, v196);
  v218 = v189[*(int *)(v196 + 64)];
  v219 = v280;
  v217(v280, v189, v196);
  if ((v218 & 1) == 0)
  {
    v225 = v288;
    v288(v219, v196);
    v225(v189, v196);
    goto LABEL_89;
  }
  v220 = v304;
  v221 = v278;
  v207(v278, v219, v304);
  v222 = v305;
  if (v296(v221, 1, v305) != 1)
  {
    v273 = v196;
    (*(void (**)(uint64_t))(*(_QWORD *)(v196 + 24) + 80))(v222);
    v275 = v274;
    v276 = v196;
    v277 = v288;
    v288(v219, v276);
    v277(v189, v273);
    (*(void (**)(char *, uint64_t))(v216 + 8))(v221, v222);
    v226 = v290;
    v185 = v303;
    if ((v275 & 1) != 0)
      goto LABEL_99;
LABEL_94:
    v231 = v308;
    v309 = v308;
    swift_bridgeObjectRetain();
    v232 = sub_100007E8C((uint64_t *)&unk_1011AD420);
    v233 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
    v234 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v232, v233);
    v236 = v235;
    swift_bridgeObjectRelease(v231);
    v309 = (_QWORD *)v234;
    v310 = v236;
    v237 = sub_100055B68();
    v238 = Text.init<A>(_:)(&v309, &type metadata for String, v237);
    v240 = v239;
    v242 = v241;
    v244 = v243;
    if ((swift_isUniquelyReferenced_nonNull_native(v306) & 1) != 0)
      v245 = v306;
    else
      v245 = sub_100432428(0, v306[2] + 1, 1, v306);
    v247 = v245[2];
    v246 = v245[3];
    if (v247 >= v246 >> 1)
      v245 = sub_100432428((_QWORD *)(v246 > 1), v247 + 1, 1, v245);
    v245[2] = v247 + 1;
    v306 = v245;
    v248 = &v245[4 * v247];
    v248[4] = v238;
    v248[5] = v240;
    *((_BYTE *)v248 + 48) = v242 & 1;
    v248[7] = v244;
    goto LABEL_99;
  }
  v223 = v189;
  v224 = v288;
  v288(v219, v196);
  v224(v223, v196);
  (*(void (**)(char *, uint64_t))(v197 + 8))(v221, v220);
LABEL_89:
  v226 = v290;
  v185 = v303;
LABEL_99:
  if (v226)
  {
    swift_bridgeObjectRetain();
    v249 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v251 = v249[2];
    v250 = v249[3];
    if (v251 >= v250 >> 1)
      v249 = sub_100431480((_QWORD *)(v250 > 1), v251 + 1, 1, v249);
    v249[2] = v251 + 1;
    v252 = &v249[2 * v251];
    v252[4] = v286;
    v252[5] = v226;
  }
  else
  {
    v249 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native(v249) & 1) == 0)
    v249 = sub_100431480(0, v249[2] + 1, 1, v249);
  v254 = v249[2];
  v253 = v249[3];
  if (v254 >= v253 >> 1)
    v249 = sub_100431480((_QWORD *)(v253 > 1), v254 + 1, 1, v249);
  v249[2] = v254 + 1;
  v255 = &v249[2 * v254];
  v255[4] = v300;
  v255[5] = v185;
  swift_bridgeObjectRelease(v308);
  swift_bridgeObjectRelease(v185);
  swift_bridgeObjectRelease(v226);
  v309 = v249;
  v256 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v257 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v258 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v256, v257);
  v260 = v259;
  swift_bridgeObjectRelease(v249);
  v309 = (_QWORD *)v258;
  v310 = v260;
  v261 = sub_100055B68();
  v262 = Text.init<A>(_:)(&v309, &type metadata for String, v261);
  v264 = v263;
  v266 = v265;
  v268 = v267;
  if ((swift_isUniquelyReferenced_nonNull_native(v306) & 1) != 0)
    v269 = v306;
  else
    v269 = sub_100432428(0, v306[2] + 1, 1, v306);
  v271 = v269[2];
  v270 = v269[3];
  if (v271 >= v270 >> 1)
    v269 = sub_100432428((_QWORD *)(v270 > 1), v271 + 1, 1, v269);
  v269[2] = v271 + 1;
  v272 = &v269[4 * v271];
  v272[4] = v262;
  v272[5] = v264;
  result = v269;
  *((_BYTE *)v272 + 48) = v266 & 1;
  v272[7] = v268;
  return result;
}

uint64_t sub_10041D53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a3;
  v27 = a4;
  v28 = type metadata accessor for ContextualPreview(0);
  v6 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Optional(0, a2);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - v11;
  v13 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v25 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v21 = 1;
    v22 = v27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v12, a2);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v20, a2);
    sub_1001CAFAC((uint64_t)v16, 2u, a2, *(_QWORD *)(v26 + 8), (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, a2);
    v23 = v27;
    sub_10005B6C0((uint64_t)v8, v27, type metadata accessor for ContextualPreview);
    v21 = 0;
    v22 = v23;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, v21, 1, v28);
}

void NSDirectionalEdgeInsets.Edge.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int MPCPlaybackEngine.Option.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL sub_10041D77C(char *a1, char *a2)
{
  return static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10041D788()
{
  unsigned __int8 *v0;

  return MPCPlaybackEngine.Option.hashValue.getter(*v0);
}

void sub_10041D790(uint64_t a1)
{
  unsigned __int8 *v1;

  NSDirectionalEdgeInsets.Edge.hash(into:)(a1, *v1);
}

Swift::Int sub_10041D798(uint64_t a1)
{
  unsigned __int8 *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  NSDirectionalEdgeInsets.Edge.hash(into:)((uint64_t)v3, *v1);
  return Hasher._finalize()();
}

uint64_t sub_10041D7D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(void);
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v55 = a1;
  v1 = sub_100007E8C(&qword_1011A3C78);
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  __chkstk_darwin(v1);
  v50 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for GenericMusicItem(0);
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - v16;
  v18 = sub_100007E8C(&qword_10119F7C8);
  __chkstk_darwin(v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v49 - v22;
  v24 = type metadata accessor for HorizontalCellSource(0);
  __chkstk_darwin(v24);
  v26 = (uint64_t (**)(void))((char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v56, (uint64_t)v26, v27);
  if (swift_getEnumCaseMultiPayload(v26, v24) == 1)
  {
    v29 = v50;
    v28 = v51;
    v30 = v52;
    (*(void (**)(char *, uint64_t (**)(void), uint64_t))(v51 + 32))(v50, v26, v52);
    sub_10004A160(v55, (uint64_t)v20, &qword_10119F7C8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v18);
    v32 = v28;
    if (EnumCaseMultiPayload == 1)
    {
      v34 = v53;
      v33 = v54;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v11, v20, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v33);
    }
    else
    {
      sub_100065228((uint64_t)v20, (uint64_t)v11, (uint64_t *)&unk_1011A20D0);
    }
    v44 = sub_100049F28(qword_1011B3350, &qword_1011A3C78, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
    v42 = MusicPlayableRequest.playbackIntent(withStartingItem:)(v11, v30, v44);
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A20D0);
    (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v29, v30, v45);
  }
  else
  {
    v35 = (uint64_t)v14;
    v36 = v5;
    v37 = v8;
    v38 = (*v26)();
    sub_10004A160(v55, (uint64_t)v23, &qword_10119F7C8);
    if (swift_getEnumCaseMultiPayload(v23, v18) == 1)
    {
      v39 = swift_bridgeObjectRelease(v38);
      v41 = v53;
      v40 = v54;
      (*(void (**)(char *, char *, uint64_t, __n128))(v53 + 32))(v37, v23, v54, v39);
      sub_1000E3E80();
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v36, v37, v40);
      v42 = MPCPlaybackIntent.init(_:)(v36);
      v43 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v37, v40, v43);
    }
    else
    {
      sub_100065228((uint64_t)v23, (uint64_t)v17, (uint64_t *)&unk_1011A20D0);
      sub_1000E3E80();
      v57 = v38;
      sub_10004A160((uint64_t)v17, v35, (uint64_t *)&unk_1011A20D0);
      v47 = sub_100007E8C((uint64_t *)&unk_1011AB338);
      v48 = sub_100049F28(&qword_1011B1810, (uint64_t *)&unk_1011AB338, (uint64_t)&protocol conformance descriptor for [A]);
      v42 = MPCPlaybackIntent.init<A>(for:startingAt:)(&v57, v35, v47, v48);
      sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A20D0);
      swift_release();
    }
  }
  return v42;
}

uint64_t sub_10041DC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  __n128 v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  __n128 v79;
  void (*v80)(char *, uint64_t, __n128);
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t, __n128);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v90 = type metadata accessor for Logger(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v82 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for UploadedVideo(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v82 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for UploadedAudio(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for TVShow(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for TVSeason(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for TVEpisode(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Station(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Song(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for SocialProfile(0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v109 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for RecordLabel(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for RadioShow(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for Playlist(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v122 = *(_QWORD *)(v12 - 8);
  v123 = v12;
  __chkstk_darwin(v12);
  v121 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicMovie(0);
  v125 = *(_QWORD *)(v14 - 8);
  v126 = v14;
  __chkstk_darwin(v14);
  v124 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Genre(0);
  v128 = *(_QWORD *)(v16 - 8);
  v129 = v16;
  __chkstk_darwin(v16);
  v127 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for EditorialItem(0);
  v131 = *(_QWORD *)(v18 - 8);
  v132 = v18;
  __chkstk_darwin(v18);
  v130 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Curator(0);
  v134 = *(_QWORD *)(v20 - 8);
  v135 = v20;
  __chkstk_darwin(v20);
  v133 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Composer(0);
  v136 = *(_QWORD *)(v22 - 8);
  v137 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Artist(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Album(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for GenericMusicItem(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v84 = (char *)&v82 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v36);
  v39 = (char *)&v82 - v38;
  v83 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v34 + 16);
  v83((char *)&v82 - v38, v138, v33, v37);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v39, v33);
  if (v40 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v32, v39, v29);
    v42 = Album.title.getter(v41);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    return v42;
  }
  if (v40 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v39, v25);
    v42 = Artist.name.getter(v43);
    v44 = *(void (**)(char *, uint64_t))(v26 + 8);
    v45 = v28;
LABEL_40:
    v44(v45, v25);
    return v42;
  }
  if (v40 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v46 = v136;
    v25 = v137;
    v47.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v136 + 32))(v24, v39, v137);
    v42 = Composer.name.getter(v47);
    v44 = *(void (**)(char *, uint64_t))(v46 + 8);
    v45 = v24;
    goto LABEL_40;
  }
  if (v40 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v48 = v133;
    v49 = v134;
    v25 = v135;
    v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v134 + 32))(v133, v39, v135);
    v51 = Curator.name.getter(v50);
LABEL_39:
    v42 = v51;
    v44 = *(void (**)(char *, uint64_t))(v49 + 8);
    v45 = v48;
    goto LABEL_40;
  }
  if (v40 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v48 = v130;
    v49 = v131;
    v25 = v132;
    v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v131 + 32))(v130, v39, v132);
    v51 = EditorialItem.name.getter(v52);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v48 = v127;
    v49 = v128;
    v25 = v129;
    v53.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v128 + 32))(v127, v39, v129);
    v51 = Genre.name.getter(v53);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v48 = v124;
    v49 = v125;
    v25 = v126;
    v54.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v125 + 32))(v124, v39, v126);
    v51 = MusicMovie.title.getter(v54);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v48 = v121;
    v49 = v122;
    v25 = v123;
    v55.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v122 + 32))(v121, v39, v123);
    v51 = MusicVideo.title.getter(v55);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v119;
    v48 = v118;
    v25 = v120;
    v56.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v119 + 32))(v118, v39, v120);
    v51 = Playlist.name.getter(v56);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v116;
    v48 = v115;
    v25 = v117;
    v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v116 + 32))(v115, v39, v117);
    v51 = RadioShow.name.getter(v57);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v113;
    v48 = v112;
    v25 = v114;
    v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v113 + 32))(v112, v39, v114);
    v51 = RecordLabel.name.getter(v58);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v110;
    v48 = v109;
    v25 = v111;
    v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v110 + 32))(v109, v39, v111);
    v51 = SocialProfile.name.getter(v59);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v107;
    v48 = v106;
    v25 = v108;
    v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v107 + 32))(v106, v39, v108);
    v51 = Song.title.getter(v60);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v104;
    v48 = v103;
    v25 = v105;
    v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v104 + 32))(v103, v39, v105);
    v51 = Station.name.getter(v61);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v101;
    v48 = v100;
    v25 = v102;
    v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v101 + 32))(v100, v39, v102);
    v51 = TVEpisode.title.getter(v62);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v98;
    v48 = v97;
    v25 = v99;
    v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v98 + 32))(v97, v39, v99);
    v51 = TVSeason.title.getter(v63);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v95;
    v48 = v94;
    v25 = v96;
    v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v95 + 32))(v94, v39, v96);
    v51 = TVShow.name.getter(v64);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v92;
    v48 = v91;
    v25 = v93;
    v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 32))(v91, v39, v93);
    v51 = UploadedAudio.title.getter(v65);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    v49 = v86;
    v48 = v85;
    v25 = v87;
    v66.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v86 + 32))(v85, v39, v87);
    v51 = UploadedVideo.title.getter(v66);
    goto LABEL_39;
  }
  if (v40 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v39, v33);
    swift_bridgeObjectRelease(*((_QWORD *)v39 + 1));
  }
  else
  {
    v68 = Logger.musicKit.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v88, v68, v90);
    v69 = ((uint64_t (*)(char *, uint64_t, uint64_t))v83)(v84, v138, v33);
    v70 = Logger.logObject.getter(v69);
    v72 = static os_log_type_t.fault.getter(v71);
    if (os_log_type_enabled(v70, v72))
    {
      v73 = swift_slowAlloc(22, -1);
      v138 = swift_slowAlloc(64, -1);
      v140 = v138;
      *(_DWORD *)v73 = 136446466;
      v139 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140);
      *(_WORD *)(v73 + 12) = 2082;
      v137 = v73 + 14;
      v74 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v75 = v84;
      v76 = dispatch thunk of CustomStringConvertible.description.getter(v33, v74);
      v78 = v77;
      v139 = sub_100322200(v76, v77, &v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140);
      v79 = swift_bridgeObjectRelease(v78);
      v80 = *(void (**)(char *, uint64_t, __n128))(v34 + 8);
      v80(v75, v33, v79);
      _os_log_impl((void *)&_mh_execute_header, v70, v72, "Unhandled case for primary text with item: %{public}s: %{public}s", (uint8_t *)v73, 0x16u);
      v81 = v138;
      swift_arrayDestroy(v138, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v81, -1, -1);
      swift_slowDealloc(v73, -1, -1);
    }
    else
    {
      v80 = *(void (**)(char *, uint64_t, __n128))(v34 + 8);
      ((void (*)(char *, uint64_t))v80)(v84, v33);
    }

    (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v90);
    ((void (*)(char *, uint64_t))v80)(v39, v33);
  }
  return 0;
}

uint64_t sub_10041EACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, __n128);
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  __n128 v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  __n128 v73;
  void (*v74)(char *, uint64_t, __n128);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v83 = type metadata accessor for Logger(0);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v81 = (char *)&v76 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for UploadedVideo(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for UploadedAudio(0);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v84 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for TVEpisode(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Station(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Song(0);
  v94 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  __chkstk_darwin(v5);
  v93 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SocialProfile(0);
  v97 = *(_QWORD *)(v7 - 8);
  v98 = v7;
  __chkstk_darwin(v7);
  v96 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RadioShow(0);
  v100 = *(_QWORD *)(v9 - 8);
  v101 = v9;
  __chkstk_darwin(v9);
  v99 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v103 = *(_QWORD *)(v11 - 8);
  v104 = v11;
  __chkstk_darwin(v11);
  v102 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicVideo(0);
  v106 = *(_QWORD *)(v13 - 8);
  v107 = v13;
  __chkstk_darwin(v13);
  v105 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MusicMovie(0);
  v109 = *(_QWORD *)(v15 - 8);
  v110 = v15;
  __chkstk_darwin(v15);
  v108 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v17);
  v111 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for EditorialItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Album(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for GenericMusicItem(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v77 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v76 - v32;
  v34 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16);
  v34((char *)&v76 - v32, v112, v27, v31);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v33, v27);
  if (v35 != enum case for GenericMusicItem.album(_:))
  {
    if (v35 == enum case for GenericMusicItem.artist(_:))
      goto LABEL_11;
    v38 = v33;
    if (v35 == enum case for GenericMusicItem.composer(_:) || v35 == enum case for GenericMusicItem.curator(_:))
      goto LABEL_11;
    if (v35 == enum case for GenericMusicItem.editorialItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v33, v19);
      v40 = (uint64_t)v111;
      EditorialItem.editorialNotes.getter(v39);
      v41 = type metadata accessor for EditorialNotes(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) != 1)
      {
        v37 = EditorialNotes.short.getter();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
        return v37;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      sub_10004FF60(v40, &qword_1011A58C8);
      return 0;
    }
    if (v35 == enum case for GenericMusicItem.genre(_:))
      goto LABEL_11;
    if (v35 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v45 = v108;
      v44 = v109;
      v46 = v110;
      v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v109 + 32))(v108, v38, v110);
      v48 = MusicMovie.artistName.getter(v47);
LABEL_30:
      v37 = v48;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
      return v37;
    }
    if (v35 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v45 = v105;
      v44 = v106;
      v46 = v107;
      v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v106 + 32))(v105, v38, v107);
      v48 = MusicVideo.artistName.getter(v49);
      goto LABEL_30;
    }
    if (v35 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v45 = v102;
      v44 = v103;
      v46 = v104;
      v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v103 + 32))(v102, v38, v104);
      v48 = Playlist.curatorName.getter(v50);
      goto LABEL_30;
    }
    if (v35 == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
      v45 = v99;
      v44 = v100;
      v46 = v101;
      v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v100 + 32))(v99, v38, v101);
      v48 = RadioShow.hostName.getter(v51);
      goto LABEL_30;
    }
    if (v35 != enum case for GenericMusicItem.recordLabel(_:))
    {
      if (v35 == enum case for GenericMusicItem.socialProfile(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
        v45 = v96;
        v44 = v97;
        v46 = v98;
        v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v97 + 32))(v96, v38, v98);
        v48 = SocialProfile.handle.getter(v52);
        goto LABEL_30;
      }
      if (v35 == enum case for GenericMusicItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
        v44 = v94;
        v46 = v95;
        v45 = v93;
        v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v94 + 32))(v93, v38, v95);
        v48 = Song.artistName.getter(v53);
        goto LABEL_30;
      }
      if (v35 == enum case for GenericMusicItem.station(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
        v44 = v91;
        v45 = v90;
        v46 = v92;
        v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v91 + 32))(v90, v38, v92);
        v48 = Station.stationProviderName.getter(v54);
        goto LABEL_30;
      }
      if (v35 == enum case for GenericMusicItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
        v55 = v88;
        v56 = v87;
        v57 = v89;
        v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v33, v89);
        v59 = TVEpisode.showName.getter(v58);
        goto LABEL_33;
      }
      if (v35 != enum case for GenericMusicItem.tvSeason(_:) && v35 != enum case for GenericMusicItem.tvShow(_:))
      {
        if (v35 == enum case for GenericMusicItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
          v55 = v85;
          v56 = v84;
          v57 = v86;
          v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 32))(v84, v33, v86);
          v59 = UploadedAudio.artistName.getter(v60);
        }
        else
        {
          if (v35 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v35 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
              swift_bridgeObjectRelease(*((_QWORD *)v33 + 1));
            }
            else
            {
              v62 = Logger.musicKit.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v62, v83);
              v63 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v77, v112, v27);
              v64 = Logger.logObject.getter(v63);
              v66 = static os_log_type_t.fault.getter(v65);
              if (os_log_type_enabled(v64, v66))
              {
                v67 = swift_slowAlloc(22, -1);
                v112 = swift_slowAlloc(64, -1);
                v114 = v112;
                *(_DWORD *)v67 = 136446466;
                v113 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v114);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114);
                *(_WORD *)(v67 + 12) = 2082;
                v111 = (char *)(v67 + 14);
                v68 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                v69 = v77;
                v70 = dispatch thunk of CustomStringConvertible.description.getter(v27, v68);
                v72 = v71;
                v113 = sub_100322200(v70, v71, &v114);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114);
                v73 = swift_bridgeObjectRelease(v72);
                v74 = *(void (**)(char *, uint64_t, __n128))(v28 + 8);
                v74(v69, v27, v73);
                _os_log_impl((void *)&_mh_execute_header, v64, v66, "Unhandled case for secondary text with item: %{public}s: %{public}s", (uint8_t *)v67, 0x16u);
                v75 = v112;
                swift_arrayDestroy(v112, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v75, -1, -1);
                swift_slowDealloc(v67, -1, -1);
              }
              else
              {
                v74 = *(void (**)(char *, uint64_t, __n128))(v28 + 8);
                ((void (*)(char *, uint64_t))v74)(v77, v27);
              }

              (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
              ((void (*)(char *, uint64_t))v74)(v33, v27);
            }
            return 0;
          }
          (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
          v55 = v79;
          v56 = v78;
          v57 = v80;
          v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v79 + 32))(v78, v33, v80);
          v59 = UploadedVideo.artistName.getter(v61);
        }
LABEL_33:
        v37 = v59;
        (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
        return v37;
      }
    }
LABEL_11:
    (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v28 + 96))(v33, v27);
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v26, v33, v23);
  v37 = Album.artistName.getter(v36);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  return v37;
}

uint64_t sub_10041F674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  __n128 v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = type metadata accessor for Logger(0);
  v42 = *(_QWORD *)(v1 - 8);
  v43 = v1;
  __chkstk_darwin(v1);
  v41 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Song(0);
  v3 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v40 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v39 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v17((char *)&v39 - v15, v0, v10, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v16, v10);
  if (v18 == enum case for GenericMusicItem.album(_:)
    || v18 == enum case for GenericMusicItem.artist(_:)
    || v18 == enum case for GenericMusicItem.composer(_:)
    || v18 == enum case for GenericMusicItem.curator(_:)
    || v18 == enum case for GenericMusicItem.editorialItem(_:)
    || v18 == enum case for GenericMusicItem.genre(_:)
    || v18 == enum case for GenericMusicItem.musicMovie(_:))
  {
    goto LABEL_22;
  }
  if (v18 != enum case for GenericMusicItem.musicVideo(_:))
  {
    if (v18 != enum case for GenericMusicItem.playlist(_:)
      && v18 != enum case for GenericMusicItem.radioShow(_:)
      && v18 != enum case for GenericMusicItem.recordLabel(_:)
      && v18 != enum case for GenericMusicItem.socialProfile(_:))
    {
      if (v18 == enum case for GenericMusicItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v11 + 96))(v16, v10);
        v21 = v16;
        v22 = v44;
        v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v21, v44);
        v20 = Song.albumTitle.getter(v23);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
        return v20;
      }
      if (v18 != enum case for GenericMusicItem.station(_:)
        && v18 != enum case for GenericMusicItem.tvEpisode(_:)
        && v18 != enum case for GenericMusicItem.tvSeason(_:)
        && v18 != enum case for GenericMusicItem.tvShow(_:)
        && v18 != enum case for GenericMusicItem.uploadedAudio(_:)
        && v18 != enum case for GenericMusicItem.uploadedVideo(_:))
      {
        if (v18 == enum case for GenericMusicItem.other(_:))
        {
          (*(void (**)(char *, uint64_t))(v11 + 96))(v16, v10);
          swift_bridgeObjectRelease(*((_QWORD *)v16 + 1));
        }
        else
        {
          v25 = Logger.musicKit.unsafeMutableAddressor();
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v25, v43);
          v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v40, v0, v10);
          v27 = Logger.logObject.getter(v26);
          v29 = static os_log_type_t.fault.getter(v28);
          if (os_log_type_enabled(v27, v29))
          {
            v30 = swift_slowAlloc(22, -1);
            v31 = swift_slowAlloc(64, -1);
            v46 = v31;
            *(_DWORD *)v30 = 136446466;
            v45 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v46);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
            *(_WORD *)(v30 + 12) = 2082;
            v44 = v30 + 14;
            v32 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
            v33 = v40;
            v34 = dispatch thunk of CustomStringConvertible.description.getter(v10, v32);
            v36 = v35;
            v45 = sub_100322200(v34, v35, &v46);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
            v37 = swift_bridgeObjectRelease(v36);
            v38 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
            v38(v33, v10, v37);
            _os_log_impl((void *)&_mh_execute_header, v27, v29, "Unhandled case for tertiary text with item: %{public}s: %{public}s", (uint8_t *)v30, 0x16u);
            swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v31, -1, -1);
            swift_slowDealloc(v30, -1, -1);
          }
          else
          {
            v38 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
            ((void (*)(char *, uint64_t))v38)(v40, v10);
          }

          (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
          ((void (*)(char *, uint64_t))v38)(v16, v10);
        }
        return 0;
      }
    }
LABEL_22:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 96))(v16, v10);
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v16, v6);
  v20 = MusicVideo.albumTitle.getter(v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v20;
}

uint64_t sub_10041FC10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  __n128 v59;
  void (*v60)(char *, uint64_t, __n128);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v2 = v1;
  v78 = a1;
  v3 = type metadata accessor for Logger(0);
  v67 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  __chkstk_darwin(v3);
  v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v73 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  __chkstk_darwin(v9);
  v72 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Song(0);
  v70 = *(_QWORD *)(v11 - 8);
  v71 = v11;
  __chkstk_darwin(v11);
  v69 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicVideo(0);
  v76 = *(_QWORD *)(v13 - 8);
  v77 = v13;
  __chkstk_darwin(v13);
  v75 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Album(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for GenericMusicItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v65 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v63 - v24;
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v64 = v2;
  v27 = v2;
  v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v26)((char *)&v63 - v24, v27, v19, v23);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v29 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v25, v15);
    v31 = v78;
    Album.favoriteStatus.getter(v30);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v32 = type metadata accessor for MusicFavoriteStatus(0);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v34 = v31;
LABEL_6:
    v37 = 0;
    return v33(v34, v37, 1, v32);
  }
  v35 = v78;
  if (v29 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v25, v5);
    Artist.favoriteStatus.getter(v36);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_5:
    v32 = type metadata accessor for MusicFavoriteStatus(0);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v34 = v35;
    goto LABEL_6;
  }
  if (v29 == enum case for GenericMusicItem.composer(_:)
    || v29 == enum case for GenericMusicItem.curator(_:)
    || v29 == enum case for GenericMusicItem.editorialItem(_:)
    || v29 == enum case for GenericMusicItem.genre(_:)
    || v29 == enum case for GenericMusicItem.musicMovie(_:))
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
LABEL_13:
    v38 = v35;
LABEL_14:
    v32 = type metadata accessor for MusicFavoriteStatus(0);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v34 = v38;
    v37 = 1;
    return v33(v34, v37, 1, v32);
  }
  if (v29 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v41 = v75;
    v40 = v76;
    v42 = v77;
    v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v76 + 32))(v75, v25, v77);
    MusicVideo.favoriteStatus.getter(v43);
LABEL_20:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
    goto LABEL_5;
  }
  if (v29 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v41 = v72;
    v40 = v73;
    v42 = v74;
    v44 = (*(uint64_t (**)(char *, char *, uint64_t))(v73 + 32))(v72, v25, v74);
    Playlist.favoriteStatus.getter(v44);
    goto LABEL_20;
  }
  v38 = v78;
  if (v29 == enum case for GenericMusicItem.radioShow(_:)
    || v29 == enum case for GenericMusicItem.recordLabel(_:)
    || v29 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_27;
  }
  if (v29 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v46 = v69;
    v45 = v70;
    v47 = v71;
    v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v70 + 32))(v69, v25, v71);
    Song.favoriteStatus.getter(v48);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    v32 = type metadata accessor for MusicFavoriteStatus(0);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v34 = v38;
    goto LABEL_6;
  }
  if (v29 == enum case for GenericMusicItem.station(_:))
  {
LABEL_27:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
    goto LABEL_14;
  }
  if (v29 == enum case for GenericMusicItem.tvEpisode(_:)
    || v29 == enum case for GenericMusicItem.tvSeason(_:)
    || v29 == enum case for GenericMusicItem.tvShow(_:)
    || v29 == enum case for GenericMusicItem.uploadedAudio(_:)
    || v29 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    goto LABEL_12;
  }
  if (v29 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    swift_bridgeObjectRelease(*((_QWORD *)v25 + 1));
    goto LABEL_13;
  }
  v49 = Logger.badging.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v49, v68);
  v50 = v28(v65, v64, v19);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.info.getter();
  LODWORD(v77) = v52;
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc(22, -1);
    v76 = swift_slowAlloc(64, -1);
    v80 = v76;
    *(_DWORD *)v53 = 136446466;
    v79 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
    *(_WORD *)(v53 + 12) = 2082;
    v75 = (char *)(v53 + 14);
    v54 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v55 = v65;
    v56 = dispatch thunk of CustomStringConvertible.description.getter(v19, v54);
    v58 = v57;
    v79 = sub_100322200(v56, v57, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
    v59 = swift_bridgeObjectRelease(v58);
    v60 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    v60(v55, v19, v59);
    _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v77, "Unhandled case for favorite status with item: %{public}s, %{public}s", (uint8_t *)v53, 0x16u);
    v61 = v76;
    swift_arrayDestroy(v76, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v61, -1, -1);
    swift_slowDealloc(v53, -1, -1);
  }
  else
  {
    v60 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    ((void (*)(char *, uint64_t))v60)(v65, v19);
  }

  (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
  v62 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v35, 1, 1, v62);
  return ((uint64_t (*)(char *, uint64_t))v60)(v25, v19);
}

uint64_t sub_1004203DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(__n128);
  uint64_t v28;
  char *v29;
  int v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __n128 v58;
  void (*v59)(char *, uint64_t, __n128);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[2];

  v2 = v1;
  v82 = a1;
  v3 = type metadata accessor for Logger(0);
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  __chkstk_darwin(v3);
  v67 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for UploadedVideo(0);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v63 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UploadedAudio(0);
  v71 = *(_QWORD *)(v6 - 8);
  v72 = v6;
  __chkstk_darwin(v6);
  v70 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v80 = *(_QWORD *)(v8 - 8);
  v81 = v8;
  __chkstk_darwin(v8);
  v79 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Station(0);
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  __chkstk_darwin(v10);
  v73 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Song(0);
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  __chkstk_darwin(v12);
  v76 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicVideo(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Album(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for GenericMusicItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v65 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v27 = *(void (**)(__n128))(v23 + 16);
  v62 = v2;
  v29 = (char *)&v62 - v28;
  v27(v26);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v29, v22);
  if (v30 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v21, v29, v18);
    Album.contentRating.getter(v31);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  v33 = v82;
  if (v30 == enum case for GenericMusicItem.artist(_:))
    goto LABEL_4;
  v34 = v82;
  if (v30 == enum case for GenericMusicItem.composer(_:)
    || v30 == enum case for GenericMusicItem.curator(_:)
    || v30 == enum case for GenericMusicItem.editorialItem(_:)
    || v30 == enum case for GenericMusicItem.genre(_:)
    || v30 == enum case for GenericMusicItem.musicMovie(_:))
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
    goto LABEL_11;
  }
  if (v30 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v29, v14);
    MusicVideo.contentRating.getter(v36);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  if (v30 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    v38 = v79;
    v37 = v80;
    v39 = v81;
    v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v80 + 32))(v79, v29, v81);
    Playlist.contentRating.getter(v40);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  }
  if (v30 == enum case for GenericMusicItem.radioShow(_:)
    || v30 == enum case for GenericMusicItem.recordLabel(_:)
    || v30 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_10;
  }
  if (v30 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    v38 = v76;
    v37 = v77;
    v39 = v78;
    v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v77 + 32))(v76, v29, v78);
    Song.contentRating.getter(v41);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  }
  if (v30 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    v38 = v73;
    v37 = v74;
    v39 = v75;
    v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(v73, v29, v75);
    Station.contentRating.getter(v42);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  }
  if (v30 == enum case for GenericMusicItem.tvEpisode(_:)
    || v30 == enum case for GenericMusicItem.tvSeason(_:)
    || v30 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_4:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
    v34 = v33;
LABEL_11:
    v35 = type metadata accessor for ContentRating(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  if (v30 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    v43 = v70;
    v44 = v71;
    v45 = v72;
    v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v71 + 32))(v70, v29, v72);
    UploadedAudio.contentRating.getter(v46);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  }
  if (v30 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    v44 = v64;
    v43 = v63;
    v45 = v66;
    v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v64 + 32))(v63, v29, v66);
    UploadedVideo.contentRating.getter(v47);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  }
  if (v30 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v23 + 96))(v29, v22);
    swift_bridgeObjectRelease(*((_QWORD *)v29 + 1));
    v34 = v33;
    goto LABEL_11;
  }
  v48 = Logger.badging.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v48, v69);
  v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v65, v62, v22);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.info.getter();
  LODWORD(v81) = v51;
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc(22, -1);
    v80 = swift_slowAlloc(64, -1);
    v84[0] = v80;
    *(_DWORD *)v52 = 136446466;
    v83 = sub_100322200(0xD000000000000010, 0x8000000100E32610, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84);
    *(_WORD *)(v52 + 12) = 2082;
    v79 = (char *)(v52 + 14);
    v53 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v54 = v65;
    v55 = dispatch thunk of CustomStringConvertible.description.getter(v22, v53);
    v57 = v56;
    v83 = sub_100322200(v55, v56, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84);
    v58 = swift_bridgeObjectRelease(v57);
    v59 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
    v59(v54, v22, v58);
    _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v81, "Unhandled case for content rating with item: %{public}s, %{public}s", (uint8_t *)v52, 0x16u);
    v60 = v80;
    swift_arrayDestroy(v80, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v52, -1, -1);
  }
  else
  {
    v59 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
    ((void (*)(char *, uint64_t))v59)(v65, v22);
  }

  (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
  v61 = type metadata accessor for ContentRating(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v33, 1, 1, v61);
  return ((uint64_t (*)(char *, uint64_t))v59)(v29, v22);
}

uint64_t sub_100420C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  void (*v26)(__n128);
  uint64_t v27;
  char *v28;
  int v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  __n128 v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  __n128 v55;
  void (*v56)(char *, uint64_t, __n128);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[2];

  v1 = type metadata accessor for Logger(0);
  v65 = *(_QWORD *)(v1 - 8);
  v66 = v1;
  __chkstk_darwin(v1);
  v64 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UploadedVideo(0);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  __chkstk_darwin(v3);
  v60 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UploadedAudio(0);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  __chkstk_darwin(v5);
  v67 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVEpisode(0);
  v71 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  __chkstk_darwin(v7);
  v70 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Station(0);
  v74 = *(_QWORD *)(v9 - 8);
  v75 = v9;
  __chkstk_darwin(v9);
  v73 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Song(0);
  v77 = *(_QWORD *)(v11 - 8);
  v78 = v11;
  __chkstk_darwin(v11);
  v76 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicVideo(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicMovie(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for GenericMusicItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v61 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v26 = *(void (**)(__n128))(v22 + 16);
  v59 = v0;
  v28 = (char *)&v58 - v27;
  v26(v25);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v28, v21);
  if (v29 == enum case for GenericMusicItem.album(_:)
    || v29 == enum case for GenericMusicItem.artist(_:)
    || v29 == enum case for GenericMusicItem.composer(_:)
    || v29 == enum case for GenericMusicItem.curator(_:)
    || v29 == enum case for GenericMusicItem.editorialItem(_:)
    || v29 == enum case for GenericMusicItem.genre(_:))
  {
    goto LABEL_7;
  }
  if (v29 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v28, v17);
    v30 = MusicMovie.duration.getter(v32);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return v30;
  }
  if (v29 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v28, v13);
    v30 = MusicVideo.duration.getter(v33);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return v30;
  }
  if (v29 == enum case for GenericMusicItem.playlist(_:)
    || v29 == enum case for GenericMusicItem.radioShow(_:)
    || v29 == enum case for GenericMusicItem.recordLabel(_:)
    || v29 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_7;
  }
  if (v29 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
    v35 = v76;
    v34 = v77;
    v36 = v78;
    v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v77 + 32))(v76, v28, v78);
    v38 = Song.duration.getter(v37);
LABEL_24:
    v30 = v38;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    return v30;
  }
  if (v29 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
    v35 = v73;
    v34 = v74;
    v36 = v75;
    v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(v73, v28, v75);
    v38 = Station.duration.getter(v39);
    goto LABEL_24;
  }
  v40 = v28;
  if (v29 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
    v35 = v70;
    v34 = v71;
    v36 = v72;
    v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v71 + 32))(v70, v28, v72);
    v38 = TVEpisode.duration.getter(v41);
    goto LABEL_24;
  }
  if (v29 == enum case for GenericMusicItem.tvSeason(_:) || v29 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_7:
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
  }
  else
  {
    if (v29 == enum case for GenericMusicItem.uploadedAudio(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
      v35 = v67;
      v34 = v68;
      v36 = v69;
      v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v68 + 32))(v67, v28, v69);
      v38 = UploadedAudio.duration.getter(v42);
      goto LABEL_24;
    }
    if (v29 == enum case for GenericMusicItem.uploadedVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
      v34 = v62;
      v35 = v60;
      v36 = v63;
      v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 32))(v60, v28, v63);
      v38 = UploadedVideo.duration.getter(v43);
      goto LABEL_24;
    }
    if (v29 == enum case for GenericMusicItem.other(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v28, v21);
      swift_bridgeObjectRelease(*((_QWORD *)v28 + 1));
    }
    else
    {
      v44 = Logger.musicKit.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v44, v66);
      v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v61, v59, v21);
      v46 = Logger.logObject.getter(v45);
      v48 = static os_log_type_t.fault.getter(v47);
      if (os_log_type_enabled(v46, v48))
      {
        v49 = swift_slowAlloc(22, -1);
        v78 = swift_slowAlloc(64, -1);
        v80[0] = v78;
        *(_DWORD *)v49 = 136446466;
        v79 = sub_100322200(0xD000000000000010, 0x8000000100E32610, v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);
        *(_WORD *)(v49 + 12) = 2082;
        v50 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
        v51 = v61;
        v52 = dispatch thunk of CustomStringConvertible.description.getter(v21, v50);
        v54 = v53;
        v79 = sub_100322200(v52, v53, v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);
        v55 = swift_bridgeObjectRelease(v54);
        v56 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
        v56(v51, v21, v55);
        _os_log_impl((void *)&_mh_execute_header, v46, v48, "Unhandled case for duration with item: %{public}s: %{public}s", (uint8_t *)v49, 0x16u);
        v57 = v78;
        swift_arrayDestroy(v78, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1, -1);
        swift_slowDealloc(v49, -1, -1);
      }
      else
      {
        v56 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
        ((void (*)(char *, uint64_t))v56)(v61, v21);
      }

      (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
      ((void (*)(char *, uint64_t))v56)(v40, v21);
    }
  }
  return 0;
}

uint64_t sub_100421460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t sub_100421480()
{
  return sub_100420C44();
}

uint64_t sub_100421498(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748((unint64_t *)&qword_10119DD00, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1004214E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.album(_:), a2);
}

uint64_t sub_1004214F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1004217E0((void (*)(void))&Album.favoriteStatus.getter, a1);
}

uint64_t sub_100421504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.artist(_:), a2);
}

uint64_t sub_100421510@<X0>(uint64_t a1@<X8>)
{
  return sub_1004217E0((void (*)(void))&Artist.favoriteStatus.getter, a1);
}

uint64_t sub_10042151C@<X0>(uint64_t a1@<X8>)
{
  return sub_100421A44((uint64_t (*)(_QWORD))&type metadata accessor for ContentRating, a1);
}

uint64_t sub_10042152C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.curator(_:), a2);
}

uint64_t sub_100421538@<X0>(uint64_t a1@<X8>)
{
  return sub_100421A44((uint64_t (*)(_QWORD))&type metadata accessor for MusicFavoriteStatus, a1);
}

uint64_t sub_100421548()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  EditorialItem.editorialNotes.getter(v3);
  v4 = type metadata accessor for EditorialNotes(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v2, &qword_1011A58C8);
    return 0;
  }
  else
  {
    v6 = EditorialNotes.short.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  return v6;
}

uint64_t sub_100421624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.editorialItem(_:), a2);
}

uint64_t sub_100421630(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011B3070, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_100421670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.genre(_:), a2);
}

uint64_t sub_100421684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.musicMovie(_:), a2);
}

uint64_t sub_100421690()
{
  return MusicMovie.duration.getter();
}

uint64_t sub_1004216A8(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748((unint64_t *)&unk_1011A99C0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1004216F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.musicVideo(_:), a2);
}

uint64_t sub_1004216FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1004217E0((void (*)(void))&MusicVideo.favoriteStatus.getter, a1);
}

uint64_t sub_10042170C()
{
  return MusicVideo.duration.getter();
}

uint64_t sub_10042172C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.playlist(_:), a2);
}

uint64_t sub_100421738@<X0>(uint64_t a1@<X8>)
{
  return sub_1004217E0((void (*)(void))&Playlist.favoriteStatus.getter, a1);
}

uint64_t sub_100421750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.radioShow(_:), a2);
}

uint64_t sub_100421760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.recordLabel(_:), a2);
}

uint64_t sub_100421774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.socialProfile(_:), a2);
}

uint64_t sub_100421780(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(qword_1011B3078, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1004217C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.song(_:), a2);
}

uint64_t sub_1004217D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1004217E0((void (*)(void))&Song.favoriteStatus.getter, a1);
}

uint64_t sub_1004217E0@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  a1();
  v3 = type metadata accessor for MusicFavoriteStatus(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_100421824()
{
  return Song.duration.getter();
}

uint64_t sub_100421844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.station(_:), a2);
}

uint64_t sub_100421854()
{
  return Station.duration.getter();
}

uint64_t sub_100421874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.tvEpisode(_:), a2);
}

uint64_t sub_100421880()
{
  return TVEpisode.duration.getter();
}

uint64_t sub_100421898(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011A0550, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1004218D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.tvSeason(_:), a2);
}

uint64_t sub_1004218E4(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011A0300, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_100421924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.tvShow(_:), a2);
}

uint64_t sub_100421930(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748((unint64_t *)&unk_1011CEA20, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_100421974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.uploadedAudio(_:), a2);
}

uint64_t sub_100421984()
{
  return UploadedAudio.duration.getter();
}

uint64_t sub_10042199C(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011A99B8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1004219E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004219EC(a1, (unsigned int *)&enum case for GenericMusicItem.uploadedVideo(_:), a2);
}

uint64_t sub_1004219EC@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v5 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a3, v5, a1);
  v7 = *a2;
  v8 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, v7, v8);
}

uint64_t sub_100421A44@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_100421A84()
{
  return UploadedVideo.duration.getter();
}

uint64_t sub_100421A9C(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011A99B0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_100421AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 104);
}

void sub_100421AE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[22];

  v2 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v12[1] = &unk_100EBA708;
    sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v12[2] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ArtworkImage.Placeholder(319);
      if (v7 <= 0x3F)
      {
        v12[3] = *(_QWORD *)(v6 - 8) + 64;
        v12[4] = (char *)&value witness table for Builtin.Int64 + 64;
        v12[5] = &unk_100EBA720;
        v12[6] = &unk_100EBA738;
        v12[7] = &unk_100EBA750;
        v12[8] = &unk_100EBA750;
        v12[9] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8 = type metadata accessor for HorizontalCellSource(319);
        if (v9 <= 0x3F)
        {
          v12[10] = *(_QWORD *)(v8 - 8) + 64;
          v12[11] = &unk_100EBA768;
          sub_1000E3A44(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
          if (v11 <= 0x3F)
          {
            v12[12] = *(_QWORD *)(v10 - 8) + 64;
            v12[13] = &unk_100EBA780;
            v12[14] = &unk_100EBA708;
            v12[15] = &unk_100EBA708;
            v12[16] = &unk_100EBA798;
            v12[17] = &unk_100EBA708;
            v12[18] = &unk_100EBA708;
            v12[19] = &unk_100EBA708;
            v12[20] = &unk_100EBA798;
            v12[21] = &unk_100EBA798;
            swift_initStructMetadata(a1, 0, 22, v12, a1 + 32);
          }
        }
      }
    }
  }
}

uint64_t *sub_100421C58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  size_t v39;
  unint64_t v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  void *v49;
  _BYTE *v50;
  size_t v51;
  uint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  unsigned int v56;
  void *v57;
  const void *v58;
  char *v59;
  _BYTE *v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  _BOOL8 v72;
  BOOL v73;
  _QWORD *v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  unsigned int v83;
  __n128 v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  unsigned int v92;
  __n128 v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char *v97;
  char *v98;
  unint64_t v99;
  unint64_t v100;
  id v101;
  char v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unsigned int v133;
  size_t __n;
  uint64_t v135;
  uint64_t v136;
  unsigned int v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  size_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned int v149;
  int v150;
  size_t v151;
  unint64_t v153;
  size_t v154;
  uint64_t *v155;
  unint64_t v156;
  size_t v157;

  v143 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v143 - 8);
  if (*(_DWORD *)(v4 + 84))
    v5 = *(_QWORD *)(v4 + 64);
  else
    v5 = *(_QWORD *)(v4 + 64) + 1;
  v154 = v5;
  v141 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v141 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v146 = type metadata accessor for Artwork.CropStyle(0);
  v8 = *(_QWORD *)(v146 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_DWORD *)(v8 + 80);
  v11 = *(_DWORD *)(v8 + 80) | v7;
  v12 = v11;
  v13 = *(_DWORD *)(v6 + 84);
  if (v9)
    v14 = v9 - 1;
  else
    v14 = 0;
  v133 = *(_DWORD *)(v8 + 84);
  v139 = *(_QWORD *)(v6 + 64) + v10;
  v140 = v6;
  v144 = *(_QWORD *)(v146 - 8);
  v15 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v15;
  __n = v15;
  v16 = (v139 & ~v10) + v15;
  v137 = v14;
  v138 = *(_DWORD *)(v6 + 84);
  v150 = v14 | v13;
  if (v14 | v13)
    v17 = (v139 & ~v10) + v15;
  else
    v17 = v16 + 1;
  v151 = v17;
  v18 = type metadata accessor for Playlist.Variant(0);
  v148 = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v21 = *(_DWORD *)(v19 + 80);
  v20 = *(_DWORD *)(v19 + 84);
  if (v20)
    v22 = v20 - 1;
  else
    v22 = 0;
  v147 = *(_QWORD *)(v18 - 8);
  if (v20)
    v23 = *(_QWORD *)(v19 + 64);
  else
    v23 = *(_QWORD *)(v19 + 64) + 1;
  v157 = v23;
  v149 = v22;
  if (v22 <= 9)
  {
    if (v23 <= 3)
    {
      v25 = (~(-1 << (8 * v23)) - v22 + 10) >> (8 * v23);
      v26 = v25 != 0;
      if (v25 >= 0xFF)
        v26 = 2;
      if (v25 <= 0xFFFE)
        v24 = v26;
      else
        v24 = 4;
    }
    else
    {
      v24 = 1;
    }
    v23 += v24;
  }
  v145 = v16;
  v142 = *(_DWORD *)(v19 + 84);
  v27 = a1;
  v28 = sub_100007E8C(&qword_1011A3C78);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_DWORD *)(v29 + 80);
  v31 = v30 & 0xF8;
  v135 = v29;
  v136 = v28;
  v32 = *(_QWORD *)(v29 + 64);
  if (v32 <= 0x10)
    v32 = 16;
  v156 = v32;
  v33 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_DWORD *)(v34 + 80);
  v36 = v35 & 0xF8;
  v37 = *(_QWORD *)(v34 + 64);
  if (v37 <= 8)
    v37 = 8;
  v153 = v37;
  v38 = v21 | *(_DWORD *)(v4 + 80) & 0xF8 | v11 | v31 | v36;
  if (v38 > 7
    || ((v21 | v11 | v30 | v35 | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || (v39 = v151 + v21,
        ((((((((((((v153
                  + ((v36
                    + 23
                    + ((v156
                      + 8
                      + ((v31
                        + 15
                        + ((((((((v39
                                + ((v11 + ((v154 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)v11)) & ~(unint64_t)v21)
                              + v23
                              + 7) & 0xFFFFFFFFFFFFFFF8)
                            + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 19) & 0xFFFFFFFFFFFFFFF8)) & ~v31 & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)) & ~v36 & 0xFFFFFFFFFFFFFFF8)
                  + 24) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 17 > 0x18))
  {
    v43 = *a2;
    *v27 = *a2;
    v44 = v43 + (((v38 | 7) + 16) & ~(unint64_t)(v38 | 7));
    swift_retain();
    return (uint64_t *)v44;
  }
  v128 = v31 + 15;
  v129 = v156 + 8;
  v130 = v36 + 23;
  v131 = ~v36 & 0xFFFFFFFFFFFFFFF8;
  v132 = *(_QWORD *)(v33 - 8);
  v126 = v33;
  v40 = ~(unint64_t)v11;
  v127 = ~v31 & 0xFFFFFFFFFFFFFFF8;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v143))
  {
    v41 = v154;
    memcpy(v27, a2, v154);
    v42 = v146;
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(v27, a2, v143);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v27, 0, 1, v143);
    v42 = v146;
    v41 = v154;
  }
  v45 = ~v10;
  v46 = ~(unint64_t)v21;
  v155 = v27;
  v47 = (_QWORD *)(((unint64_t)v27 + v41 + 7) & 0xFFFFFFFFFFFFFFF8);
  v48 = (_QWORD *)(((unint64_t)a2 + v41 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v47 = *v48;
  v47[1] = v48[1];
  v49 = (void *)(((unint64_t)v47 + v12 + 16) & v40);
  v50 = (_BYTE *)(((unint64_t)v48 + v12 + 16) & v40);
  swift_bridgeObjectRetain();
  if (!v150)
  {
    v51 = v157;
    v52 = v144;
    if (!v50[v145])
      goto LABEL_53;
    v53 = (v50[v145] - 1) << (8 * v145);
    if (v145 > 3)
      v53 = 0;
    if ((_DWORD)v145)
    {
      if (v145 <= 3)
        v54 = v145;
      else
        v54 = 4;
      __asm { BR              X11 }
    }
    if (v53 == -1)
      goto LABEL_53;
    goto LABEL_51;
  }
  v51 = v157;
  v52 = v144;
  if (v138 >= v137)
  {
    if (!(*(unsigned int (**)(_BYTE *))(v140 + 48))(v50))
      goto LABEL_53;
LABEL_51:
    memcpy(v49, v50, v151);
    v55 = v153;
    v56 = v142;
    goto LABEL_58;
  }
  if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v144 + 48))((unint64_t)&v50[v139] & v45, v133, v42) >= 2)goto LABEL_51;
LABEL_53:
  (*(void (**)(void *, _BYTE *, uint64_t))(v140 + 16))(v49, v50, v141);
  v57 = (void *)(((unint64_t)v49 + v139) & v45);
  v58 = (const void *)((unint64_t)&v50[v139] & v45);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v58, 1, v42))
  {
    memcpy(v57, v58, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 16))(v57, v58, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v57, 0, 1, v42);
  }
  v55 = v153;
  v51 = v157;
  v56 = v142;
  if (!v150)
    *((_BYTE *)v49 + v145) = 0;
LABEL_58:
  v59 = (char *)(((unint64_t)v49 + v39) & v46);
  v60 = (_BYTE *)((unint64_t)&v50[v39] & v46);
  if (v149 <= 9)
  {
    if (v51 > 3)
      goto LABEL_60;
    v62 = (~(-1 << (8 * v51)) - v149 + 10) >> (8 * v51);
    if (v62 > 0xFFFE)
    {
      v61 = *(_DWORD *)&v60[v51];
      if (v61)
        goto LABEL_67;
    }
    else
    {
      if (v62 <= 0xFE)
      {
        if (!v62)
          goto LABEL_76;
LABEL_60:
        v61 = v60[v51];
        if (!v60[v51])
          goto LABEL_76;
LABEL_67:
        v63 = (v61 - 1) << (8 * v51);
        if (v51 > 3)
          v63 = 0;
        if ((_DWORD)v51)
        {
          if (v51 <= 3)
            v64 = v51;
          else
            v64 = 4;
          __asm { BR              X11 }
        }
        if (v63 + v149 != -1)
        {
LABEL_81:
          if (v51 <= 3)
          {
            v70 = (~(-1 << (8 * v51)) - v149 + 10) >> (8 * v51);
            v71 = v70 != 0;
            if (v70 >= 0xFF)
              v71 = 2;
            if (v70 <= 0xFFFE)
              v67 = v71;
            else
              v67 = 4;
          }
          else
          {
            v67 = 1;
          }
          memcpy(v59, v60, v67 + v51);
          v66 = v128;
          if (v51 > 3)
            goto LABEL_102;
          goto LABEL_89;
        }
LABEL_83:
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v147 + 48))(v60, 1, v148))
        {
          memcpy(v59, v60, v51);
        }
        else
        {
          (*(void (**)(char *, _BYTE *, uint64_t))(v147 + 16))(v59, v60, v148);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v59, 0, 1, v148);
        }
        v66 = v128;
        if (v149 > 9)
        {
          v65 = v127;
          goto LABEL_108;
        }
        if (v51 <= 3)
        {
          v68 = (~(-1 << (8 * v51)) - v149 + 10) >> (8 * v51);
          if (v68 > 0xFFFE)
          {
            *(_DWORD *)&v59[v51] = 0;
            v69 = 4;
            goto LABEL_107;
          }
          if (v68 > 0xFE)
          {
            *(_WORD *)&v59[v51] = 0;
            goto LABEL_105;
          }
          if (!v68)
          {
LABEL_105:
            v72 = v68 != 0;
            v73 = v68 >= 0xFF;
            v69 = 2;
            if (!v73)
              v69 = v72;
            goto LABEL_107;
          }
        }
        v59[v51] = 0;
        if (v51 > 3)
        {
LABEL_102:
          v69 = 1;
          goto LABEL_107;
        }
LABEL_89:
        v68 = (~(-1 << (8 * v51)) - v149 + 10) >> (8 * v51);
        if (v68 > 0xFFFE)
        {
          v69 = 4;
LABEL_107:
          v65 = v127;
          v51 += v69;
          goto LABEL_108;
        }
        goto LABEL_105;
      }
      v61 = *(unsigned __int16 *)&v60[v51];
      if (*(_WORD *)&v60[v51])
        goto LABEL_67;
    }
  }
LABEL_76:
  if (v56 < 2 || (*(unsigned int (**)(_BYTE *))(v147 + 48))(v60) < 2)
    goto LABEL_83;
  if (v149 < 0xA)
    goto LABEL_81;
  memcpy(v59, v60, v51);
  v65 = v127;
  v66 = v128;
LABEL_108:
  v74 = (_QWORD *)((unint64_t)&v59[v51 + 7] & 0xFFFFFFFFFFFFF8);
  v75 = (_QWORD *)((unint64_t)&v60[v51 + 7] & 0xFFFFFFFFFFFFFFF8);
  *v74 = *v75;
  v76 = ((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8;
  v77 = ((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8;
  v78 = *(_QWORD *)v77;
  *(_BYTE *)(v76 + 8) = *(_BYTE *)(v77 + 8);
  *(_QWORD *)v76 = v78;
  *(_BYTE *)(v76 + 9) = *(_BYTE *)(v77 + 9);
  *(_BYTE *)(v76 + 10) = *(_BYTE *)(v77 + 10);
  *(_BYTE *)(v76 + 11) = *(_BYTE *)(v77 + 11);
  v79 = (_QWORD *)((v76 + 19) & 0xFFFFFFFFFFFFFFF8);
  v80 = (_QWORD *)((v77 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v79 = *v80;
  v81 = (_QWORD *)(((unint64_t)v79 + v66) & v65);
  v82 = (_QWORD *)(((unint64_t)v80 + v66) & v65);
  v83 = *((unsigned __int8 *)v82 + v156);
  v84 = swift_retain();
  if (v83 >= 2)
  {
    if (v156 <= 3)
      v85 = v156;
    else
      v85 = 4;
    __asm { BR              X11 }
  }
  if (v83 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v135 + 16))(v81, v82, v136, v84);
    v86 = 1;
  }
  else
  {
    v87 = v82[1];
    *v81 = *v82;
    v81[1] = v87;
    swift_retain();
    v86 = 0;
  }
  *((_BYTE *)v81 + v156) = v86;
  v88 = (_QWORD *)(((unint64_t)v81 + v129) & 0xFFFFFFFFFFFFFFF8);
  v89 = (_QWORD *)(((unint64_t)v82 + v129) & 0xFFFFFFFFFFFFFFF8);
  *v88 = *v89;
  v88[1] = v89[1];
  v90 = (_QWORD *)(((unint64_t)v88 + v130) & v131);
  v91 = (_QWORD *)(((unint64_t)v89 + v130) & v131);
  v92 = *((unsigned __int8 *)v91 + v55);
  v93 = swift_retain();
  if (v92 >= 2)
  {
    if (v55 <= 3)
      v94 = v55;
    else
      v94 = 4;
    __asm { BR              X11 }
  }
  v95 = v55 + 1;
  if (v92 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v132 + 16))(v90, v91, v126, v93);
    v96 = 1;
  }
  else
  {
    *v90 = *v91;
    swift_retain();
    v96 = 0;
  }
  *((_BYTE *)v90 + v55) = v96;
  v97 = (char *)v90 + v95;
  v98 = (char *)v91 + v95;
  v99 = (unint64_t)(v97 + 7) & 0xFFFFFFFFFFFFFFF8;
  v100 = (unint64_t)(v98 + 7) & 0xFFFFFFFFFFFFFFF8;
  v101 = *(id *)v100;
  v102 = *(_BYTE *)(v100 + 8);
  sub_1000A4100(*(id *)v100, v102);
  *(_QWORD *)v99 = v101;
  *(_BYTE *)(v99 + 8) = v102;
  v103 = (_QWORD *)((unint64_t)(v97 + 23) & 0xFFFFFFFFFFFFFFF8);
  v104 = (_QWORD *)((unint64_t)(v98 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v103 = *v104;
  v103[1] = v104[1];
  v105 = (_QWORD *)(((unint64_t)v103 + 23) & 0xFFFFFFFFFFFFFFF8);
  v106 = (_QWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v105 = *v106;
  v105[1] = v106[1];
  v107 = ((unint64_t)v105 + 23) & 0xFFFFFFFFFFFFFFF8;
  v108 = ((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFFFF8;
  v109 = *(_QWORD *)v108;
  v110 = *(_QWORD *)(v108 + 8);
  LOBYTE(v97) = *(_BYTE *)(v108 + 16);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v109, v110);
  *(_QWORD *)v107 = v109;
  *(_QWORD *)(v107 + 8) = v110;
  *(_BYTE *)(v107 + 16) = (_BYTE)v97;
  v111 = (_QWORD *)(((unint64_t)v105 + 47) & 0xFFFFFFFFFFFFFFF8);
  v112 = (_QWORD *)(((unint64_t)v106 + 47) & 0xFFFFFFFFFFFFFFF8);
  *v111 = *v112;
  v111[1] = v112[1];
  v113 = (_QWORD *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
  v114 = (_QWORD *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v113 = *v114;
  v113[1] = v114[1];
  v115 = (_QWORD *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
  v116 = (_QWORD *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v115 = *v116;
  v115[1] = v116[1];
  v117 = ((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8;
  v118 = ((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8;
  v119 = *(_QWORD *)v118;
  v120 = *(_QWORD *)(v118 + 8);
  LOBYTE(v105) = *(_BYTE *)(v118 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v119, v120, (char)v105);
  *(_QWORD *)v117 = v119;
  *(_QWORD *)(v117 + 8) = v120;
  *(_BYTE *)(v117 + 16) = (_BYTE)v105;
  v121 = ((unint64_t)v115 + 47) & 0xFFFFFFFFFFFFFFF8;
  v122 = ((unint64_t)v116 + 47) & 0xFFFFFFFFFFFFFFF8;
  v123 = *(_QWORD *)v122;
  v124 = *(_QWORD *)(v122 + 8);
  LOBYTE(v119) = *(_BYTE *)(v122 + 16);
  sub_1000A411C(*(_QWORD *)v122, v124, v119);
  *(_QWORD *)v121 = v123;
  *(_QWORD *)(v121 + 8) = v124;
  *(_BYTE *)(v121 + 16) = v119;
  return v155;
}

double sub_100422868(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = a1 + *(_QWORD *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84))
    ++v5;
  v6 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_DWORD *)(v11 + 80) | v9;
  v14 = *(_DWORD *)(v11 + 80);
  v15 = (v6 + v13 + 16) & ~v13;
  v16 = *(_DWORD *)(v8 + 84);
  v17 = v12 - 1;
  if (!v12)
    v17 = 0;
  v18 = ~v14;
  v19 = *(_QWORD *)(v8 + 64) + v14;
  v20 = v19 & ~v14;
  v21 = *(_QWORD *)(v11 + 64);
  if (!v12)
    ++v21;
  v22 = v21 + v20;
  v23 = v17 | v16;
  if (v17 | v16)
  {
    if (v16 >= v17)
    {
      if ((*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v8 + 48))(v15, *(unsigned int *)(v8 + 84), v7))
        goto LABEL_26;
    }
    else if ((*(unsigned int (**)(uint64_t))(v11 + 48))((v19 + v15) & v18) >= 2)
    {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (!*(_BYTE *)(v15 + v22))
    goto LABEL_24;
  v24 = (*(unsigned __int8 *)(v15 + v22) - 1) << (8 * v22);
  if (v22 > 3)
    v24 = 0;
  if ((_DWORD)v22)
  {
    if (v22 <= 3)
      v25 = v21 + v20;
    else
      v25 = 4;
    __asm { BR              X11 }
  }
  if (v24 == -1)
  {
LABEL_24:
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))((v19 + v15) & v18, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))((v19 + v15) & v18, v10);
  }
LABEL_26:
  v26 = type metadata accessor for Playlist.Variant(0);
  v27 = *(_QWORD *)(v26 - 8);
  if (v23)
    v28 = v15;
  else
    v28 = v15 + 1;
  v29 = (v28 + v22 + *(unsigned __int8 *)(v27 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v30 = *(_DWORD *)(v27 + 84);
  if (v30)
    v31 = v30 - 1;
  else
    v31 = 0;
  if (v30)
    v32 = *(_QWORD *)(v27 + 64);
  else
    v32 = *(_QWORD *)(v27 + 64) + 1;
  if (v31 <= 9)
  {
    if (v32 > 3)
      goto LABEL_37;
    v34 = (~(-1 << (8 * v32)) - v31 + 10) >> (8 * v32);
    if (v34 > 0xFFFE)
    {
      v33 = *(_DWORD *)(v29 + v32);
      if (v33)
        goto LABEL_44;
    }
    else
    {
      if (v34 <= 0xFE)
      {
        if (!v34)
          goto LABEL_53;
LABEL_37:
        v33 = *(unsigned __int8 *)(v29 + v32);
        if (!*(_BYTE *)(v29 + v32))
          goto LABEL_53;
LABEL_44:
        v35 = (v33 - 1) << (8 * v32);
        if (v32 > 3)
          v35 = 0;
        if ((_DWORD)v32)
        {
          if (v32 <= 3)
            v36 = v32;
          else
            v36 = 4;
          __asm { BR              X11 }
        }
        if (v35 + v31 != -1)
          goto LABEL_61;
        goto LABEL_57;
      }
      v33 = *(unsigned __int16 *)(v29 + v32);
      if (*(_WORD *)(v29 + v32))
        goto LABEL_44;
    }
  }
LABEL_53:
  if (v30 >= 2 && (*(unsigned int (**)(unint64_t))(v27 + 48))(v29) >= 2)
  {
LABEL_58:
    if (v31 > 9)
      goto LABEL_69;
    goto LABEL_61;
  }
LABEL_57:
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v26))
    goto LABEL_58;
  (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v29, v26);
  if (v31 > 9)
    goto LABEL_69;
LABEL_61:
  if (v32 <= 3)
  {
    v38 = (~(-1 << (8 * v32)) - v31 + 10) >> (8 * v32);
    v39 = v38 != 0;
    if (v38 >= 0xFF)
      v39 = 2;
    if (v38 <= 0xFFFE)
      v37 = v39;
    else
      v37 = 4;
  }
  else
  {
    v37 = 1;
  }
  v32 += v37;
LABEL_69:
  swift_release();
  v40 = sub_100007E8C(&qword_1011A3C78);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(_DWORD *)(v41 + 80) & 0xF8 | 7;
  v43 = (((((((v29 + v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
       + v42
       + 8) & ~v42;
  if (*(_QWORD *)(v41 + 64) <= 0x10uLL)
    v44 = 16;
  else
    v44 = *(_QWORD *)(v41 + 64);
  v45 = *(unsigned __int8 *)(v43 + v44);
  if (v45 >= 2)
  {
    if (v44 <= 3)
      v46 = v44;
    else
      v46 = 4;
    __asm { BR              X13 }
  }
  if (v45 == 1)
    (*(void (**)(unint64_t, uint64_t))(v41 + 8))(v43, v40);
  else
    swift_release();
  swift_release();
  v47 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(_DWORD *)(v48 + 80) & 0xF8 | 7;
  v50 = (((v44 + v43 + 8) & 0xFFFFFFFFFFFFFFF8) + v49 + 16) & ~v49;
  if (*(_QWORD *)(v48 + 64) <= 8uLL)
    v51 = 8;
  else
    v51 = *(_QWORD *)(v48 + 64);
  v52 = *(unsigned __int8 *)(v50 + v51);
  if (v52 >= 2)
  {
    if (v51 <= 3)
      v53 = v51;
    else
      v53 = 4;
    __asm { BR              X13 }
  }
  if (v52 == 1)
    (*(void (**)(unint64_t, uint64_t))(v48 + 8))(v50, v47);
  else
    swift_release();
  v54 = v51 + v50;
  sub_1000A4224(*(id *)((v54 + 8) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v54 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
  swift_release();
  v55 = (((v54 + 24) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1000A6174(*(_QWORD *)((v55 + 23) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  swift_release();
  swift_release();
  v56 = (((((v55 + 47) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1000A4230(*(_QWORD *)((v56 + 23) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v56 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v56 + 23) & 0xFFFFFFFFFFFFFFF8) + 16));
  return sub_1000A4240(*(_QWORD *)((v56 + 47) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v56 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v56 + 47) & 0xFFFFFFFFFFFFFFF8) + 16));
}

void *sub_100422EA0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  size_t v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  size_t v34;
  void *v35;
  void (*v36)(void *, _BYTE *, uint64_t);
  void *v37;
  const void *v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _BYTE *v45;
  unsigned int v46;
  unsigned int v47;
  size_t v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  _BOOL8 v59;
  BOOL v60;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  unsigned int v93;
  __n128 v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char *v98;
  char *v99;
  unint64_t v100;
  unint64_t v101;
  id v102;
  char v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  size_t __n;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *__dst;
  void *v132;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v132 = a1;
  v12 = (_QWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  v129 = type metadata accessor for Artwork(0);
  v14 = *(_QWORD *)(v129 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = type metadata accessor for Artwork.CropStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int *)(v17 + 84);
  v19 = *(_DWORD *)(v17 + 80);
  v20 = *(_DWORD *)(v17 + 80) | v15;
  v130 = v16;
  __dst = (void *)(((unint64_t)v12 + v20 + 16) & ~v20);
  v21 = (_BYTE *)(((unint64_t)v13 + v20 + 16) & ~v20);
  v22 = *(unsigned int *)(v14 + 84);
  if ((_DWORD)v18)
    v23 = v18 - 1;
  else
    v23 = 0;
  v24 = ~v19;
  v25 = *(_QWORD *)(v14 + 64) + v19;
  v26 = v25 & ~v19;
  v27 = *(_QWORD *)(v17 + 64);
  if (!(_DWORD)v18)
    ++v27;
  __n = v27;
  v128 = v24;
  v28 = v26 + v27;
  v29 = v23 | v22;
  swift_bridgeObjectRetain();
  if (!(v23 | v22))
  {
    v30 = v130;
    if (!v21[v28])
      goto LABEL_33;
    v31 = (v21[v28] - 1) << (8 * v28);
    if (v28 > 3)
      v31 = 0;
    if ((_DWORD)v28)
    {
      if (v28 <= 3)
        v32 = v28;
      else
        v32 = 4;
      __asm { BR              X11 }
    }
    if (v31 == -1)
      goto LABEL_33;
    goto LABEL_28;
  }
  if (v22 < v23)
  {
    v30 = v130;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))((unint64_t)&v21[v25] & v128, v18, v130) < 2)goto LABEL_33;
LABEL_28:
    if (v29)
      v34 = v28;
    else
      v34 = v28 + 1;
    v35 = __dst;
    memcpy(__dst, v21, v34);
    goto LABEL_36;
  }
  v33 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v21, v22, v129);
  v30 = v130;
  if (v33)
    goto LABEL_28;
LABEL_33:
  v36 = *(void (**)(void *, _BYTE *, uint64_t))(v14 + 16);
  v35 = __dst;
  v36(__dst, v21, v129);
  v37 = (void *)(((unint64_t)__dst + v25) & v128);
  v38 = (const void *)((unint64_t)&v21[v25] & v128);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v38, 1, v30))
  {
    memcpy(v37, v38, __n);
    if (v29)
      goto LABEL_36;
    goto LABEL_35;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v37, v38, v30);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v37, 0, 1, v30);
  if (!v29)
LABEL_35:
    *((_BYTE *)__dst + v28) = 0;
LABEL_36:
  if (v29)
    v39 = v28;
  else
    v39 = v28 + 1;
  v40 = type metadata accessor for Playlist.Variant(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = v39 + v42;
  v44 = (char *)(((unint64_t)v35 + v39 + v42) & ~v42);
  v45 = (_BYTE *)((unint64_t)&v21[v43] & ~v42);
  v46 = *(_DWORD *)(v41 + 84);
  if (v46)
    v47 = v46 - 1;
  else
    v47 = 0;
  if (v46)
    v48 = *(_QWORD *)(v41 + 64);
  else
    v48 = *(_QWORD *)(v41 + 64) + 1;
  if (v47 <= 9)
  {
    if (v48 > 3)
      goto LABEL_47;
    v50 = (~(-1 << (8 * v48)) - v47 + 10) >> (8 * v48);
    if (v50 > 0xFFFE)
    {
      v49 = *(_DWORD *)&v45[v48];
      if (v49)
        goto LABEL_56;
    }
    else
    {
      if (v50 <= 0xFE)
      {
        if (!v50)
          goto LABEL_65;
LABEL_47:
        v49 = v45[v48];
        if (!v45[v48])
          goto LABEL_65;
LABEL_56:
        v51 = (v49 - 1) << (8 * v48);
        if (v48 > 3)
          v51 = 0;
        if ((_DWORD)v48)
        {
          if (v48 <= 3)
            v52 = v48;
          else
            v52 = 4;
          __asm { BR              X11 }
        }
        if (v51 + v47 != -1)
          goto LABEL_70;
        goto LABEL_79;
      }
      v49 = *(unsigned __int16 *)&v45[v48];
      if (*(_WORD *)&v45[v48])
        goto LABEL_56;
    }
  }
LABEL_65:
  if (v46 >= 2 && (*(unsigned int (**)(_BYTE *))(v41 + 48))(v45) >= 2)
  {
    if (v47 >= 0xA)
    {
      memcpy(v44, v45, v48);
      goto LABEL_96;
    }
LABEL_70:
    v53 = 1;
    v54 = (~(-1 << (8 * v48)) - v47 + 10) >> (8 * v48);
    v55 = v54 != 0;
    if (v54 >= 0xFF)
      v55 = 2;
    if (v54 <= 0xFFFE)
      v56 = v55;
    else
      v56 = 4;
    if (v48 <= 3)
      v53 = v56;
    memcpy(v44, v45, v53 + v48);
    if (v48 > 3)
      goto LABEL_78;
    goto LABEL_85;
  }
LABEL_79:
  if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v45, 1, v40))
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v41 + 16))(v44, v45, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v40);
    if (v47 > 9)
      goto LABEL_96;
LABEL_83:
    if (v48 <= 3)
    {
      v58 = (~(-1 << (8 * v48)) - v47 + 10) >> (8 * v48);
      if (v58 > 0xFFFE)
      {
        *(_DWORD *)&v44[v48] = 0;
        v57 = 4;
        goto LABEL_95;
      }
      if (v58 > 0xFE)
      {
        *(_WORD *)&v44[v48] = 0;
        goto LABEL_93;
      }
      if (!v58)
      {
LABEL_93:
        v59 = v58 != 0;
        v60 = v58 >= 0xFF;
        v57 = 2;
        if (!v60)
          v57 = v59;
        goto LABEL_95;
      }
    }
    v44[v48] = 0;
    if (v48 > 3)
    {
LABEL_78:
      v57 = 1;
LABEL_95:
      v48 += v57;
      goto LABEL_96;
    }
LABEL_85:
    v58 = (~(-1 << (8 * v48)) - v47 + 10) >> (8 * v48);
    if (v58 > 0xFFFE)
    {
      v57 = 4;
      goto LABEL_95;
    }
    goto LABEL_93;
  }
  memcpy(v44, v45, v48);
  if (v47 <= 9)
    goto LABEL_83;
LABEL_96:
  v61 = (_QWORD *)((unint64_t)&v44[v48 + 7] & 0xFFFFFFFFFFFFF8);
  v62 = (_QWORD *)((unint64_t)&v45[v48 + 7] & 0xFFFFFFFFFFFFFFF8);
  *v61 = *v62;
  v63 = ((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8;
  v64 = ((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8;
  v65 = *(_QWORD *)v64;
  *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
  *(_QWORD *)v63 = v65;
  *(_BYTE *)(v63 + 9) = *(_BYTE *)(v64 + 9);
  *(_BYTE *)(v63 + 10) = *(_BYTE *)(v64 + 10);
  *(_BYTE *)(v63 + 11) = *(_BYTE *)(v64 + 11);
  v66 = (_QWORD *)((v63 + 19) & 0xFFFFFFFFFFFFFFF8);
  v67 = (_QWORD *)((v64 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v66 = *v67;
  swift_retain();
  v68 = sub_100007E8C(&qword_1011A3C78);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(_DWORD *)(v69 + 80) & 0xF8;
  v71 = v70 + 15;
  v72 = (unint64_t)v66 + v70 + 15;
  v73 = ~v70 & 0xFFFFFFFFFFFFFFF8;
  v74 = (_QWORD *)(v72 & v73);
  v75 = (_QWORD *)(((unint64_t)v67 + v71) & v73);
  if (*(_QWORD *)(v69 + 64) <= 0x10uLL)
    v76 = 16;
  else
    v76 = *(_QWORD *)(v69 + 64);
  v77 = *((unsigned __int8 *)v75 + v76);
  if (v77 >= 2)
  {
    if (v76 <= 3)
      v78 = v76;
    else
      v78 = 4;
    __asm { BR              X13 }
  }
  if (v77 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v69 + 16))(v74, v75, v68);
    v79 = 1;
  }
  else
  {
    v80 = v75[1];
    *v74 = *v75;
    *(_QWORD *)((v72 & v73) + 8) = v80;
    swift_retain();
    v79 = 0;
  }
  *((_BYTE *)v74 + v76) = v79;
  v81 = v76 + 8;
  v82 = (_QWORD *)(((unint64_t)v74 + v76 + 8) & 0xFFFFFFFFFFFFFFF8);
  v83 = (_QWORD *)(((unint64_t)v75 + v81) & 0xFFFFFFFFFFFFFFF8);
  *v82 = *v83;
  v82[1] = v83[1];
  v84 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(_DWORD *)(v85 + 80) & 0xF8;
  v87 = v86 + 23;
  v88 = (unint64_t)v82 + v86 + 23;
  v89 = ~v86 & 0xFFFFFFFFFFFFFFF8;
  v90 = (_QWORD *)(v88 & v89);
  v91 = (_QWORD *)(((unint64_t)v83 + v87) & v89);
  if (*(_QWORD *)(v85 + 64) <= 8uLL)
    v92 = 8;
  else
    v92 = *(_QWORD *)(v85 + 64);
  v93 = *((unsigned __int8 *)v91 + v92);
  v94 = swift_retain();
  if (v93 >= 2)
  {
    if (v92 <= 3)
      v95 = v92;
    else
      v95 = 4;
    __asm { BR              X11 }
  }
  if (v93 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v85 + 16))(v90, v91, v84, v94);
    v96 = 1;
  }
  else
  {
    *v90 = *v91;
    swift_retain();
    v96 = 0;
  }
  *((_BYTE *)v90 + v92) = v96;
  v97 = v92 + 1;
  v98 = (char *)v90 + v92 + 1;
  v99 = (char *)v91 + v97;
  v100 = (unint64_t)(v98 + 7) & 0xFFFFFFFFFFFFFFF8;
  v101 = ((unint64_t)v91 + v97 + 7) & 0xFFFFFFFFFFFFFFF8;
  v102 = *(id *)v101;
  v103 = *(_BYTE *)(v101 + 8);
  sub_1000A4100(*(id *)v101, v103);
  *(_QWORD *)v100 = v102;
  *(_BYTE *)(v100 + 8) = v103;
  v104 = (_QWORD *)((unint64_t)(v98 + 23) & 0xFFFFFFFFFFFFFFF8);
  v105 = (_QWORD *)((unint64_t)(v99 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v104 = *v105;
  v104[1] = v105[1];
  v106 = (_QWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
  v107 = (_QWORD *)(((unint64_t)v105 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v106 = *v107;
  v106[1] = v107[1];
  v108 = ((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFFFF8;
  v109 = ((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8;
  v110 = *(_QWORD *)v109;
  v111 = *(_QWORD *)(v109 + 8);
  LOBYTE(v100) = *(_BYTE *)(v109 + 16);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v110, v111);
  *(_QWORD *)v108 = v110;
  *(_QWORD *)(v108 + 8) = v111;
  *(_BYTE *)(v108 + 16) = v100;
  v112 = (_QWORD *)(((unint64_t)v106 + 47) & 0xFFFFFFFFFFFFFFF8);
  v113 = (_QWORD *)(((unint64_t)v107 + 47) & 0xFFFFFFFFFFFFFFF8);
  *v112 = *v113;
  v112[1] = v113[1];
  v114 = (_QWORD *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8);
  v115 = (_QWORD *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v114 = *v115;
  v114[1] = v115[1];
  v116 = (_QWORD *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
  v117 = (_QWORD *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v116 = *v117;
  v116[1] = v117[1];
  v118 = ((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8;
  v119 = ((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8;
  v120 = *(_QWORD *)v119;
  v121 = *(_QWORD *)(v119 + 8);
  LOBYTE(v107) = *(_BYTE *)(v119 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v120, v121, (char)v107);
  *(_QWORD *)v118 = v120;
  *(_QWORD *)(v118 + 8) = v121;
  *(_BYTE *)(v118 + 16) = (_BYTE)v107;
  v122 = ((unint64_t)v116 + 47) & 0xFFFFFFFFFFFFFFF8;
  v123 = ((unint64_t)v117 + 47) & 0xFFFFFFFFFFFFFFF8;
  v124 = *(_QWORD *)v123;
  v125 = *(_QWORD *)(v123 + 8);
  LOBYTE(v120) = *(_BYTE *)(v123 + 16);
  sub_1000A411C(*(_QWORD *)v123, v125, v120);
  *(_QWORD *)v122 = v124;
  *(_QWORD *)(v122 + 8) = v125;
  *(_BYTE *)(v122 + 16) = v120;
  return v132;
}

void *sub_1004238A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  int v30;
  unint64_t v31;
  _BYTE *v32;
  uint64_t (*v33)(unint64_t, uint64_t, uint64_t);
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  char v37;
  int v38;
  int v39;
  uint64_t (*v40)(_BYTE *, uint64_t, uint64_t);
  int v41;
  int v42;
  int v43;
  int v44;
  void *v45;
  _BYTE *v46;
  void *v47;
  uint64_t (*v48)(void *, uint64_t, uint64_t);
  int v49;
  int v50;
  size_t v51;
  size_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  char *v57;
  uint64_t v58;
  unsigned int v59;
  size_t v60;
  int v61;
  unsigned int v62;
  void *v63;
  const void *v64;
  int v65;
  int v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  size_t v77;
  size_t v78;
  void *v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  void *v84;
  char *v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  _BOOL8 v90;
  BOOL v91;
  uint64_t v92;
  unsigned int v93;
  _BOOL8 v94;
  _QWORD *v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  __n128 v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  uint64_t v131;
  __n128 v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  unint64_t v138;
  unint64_t v139;
  id v140;
  char v141;
  void *v142;
  char v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  _BYTE *v175;
  size_t v176;
  _BYTE *v177;
  size_t __n;
  int v179;
  uint64_t v180;
  void *v181;
  uint64_t v182;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v181 = a1;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = v13[1];
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = type metadata accessor for Artwork(0);
  v17 = *(_QWORD *)(v16 - 8);
  LODWORD(v15) = *(unsigned __int8 *)(v17 + 80);
  v182 = type metadata accessor for Artwork.CropStyle(0);
  v18 = *(_QWORD *)(v182 - 8);
  v19 = *(unsigned int *)(v18 + 84);
  v20 = *(_DWORD *)(v18 + 80);
  v21 = *(_DWORD *)(v18 + 80) | v15;
  v22 = (_BYTE *)(((unint64_t)v13 + v21 + 16) & ~v21);
  v23 = (_BYTE *)(((unint64_t)v14 + v21 + 16) & ~v21);
  v24 = *(unsigned int *)(v17 + 84);
  v25 = v19 - 1;
  if (!(_DWORD)v19)
    v25 = 0;
  v26 = *(_QWORD *)(v17 + 64) + v20;
  v27 = v26 & ~v20;
  if ((_DWORD)v19)
    v28 = *(_QWORD *)(v18 + 64);
  else
    v28 = *(_QWORD *)(v18 + 64) + 1;
  v29 = v27 + v28;
  v30 = v25 | v24;
  __n = v28;
  v180 = ~v20;
  if (!(v25 | v24))
  {
    v37 = 8 * v29;
    if (!v22[v29])
      goto LABEL_39;
    v38 = (v22[v29] - 1) << v37;
    if (v29 > 3)
      v38 = 0;
    if ((_DWORD)v29)
    {
      if (v29 <= 3)
        v39 = v29;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    if (v38 == -1)
    {
LABEL_39:
      if (!v23[v29])
        goto LABEL_51;
      v43 = (v23[v29] - 1) << v37;
      if (v29 > 3)
        v43 = 0;
      v179 = 0;
      v177 = v23;
      if ((_DWORD)v29)
      {
        if (v29 <= 3)
          v44 = v29;
        else
          v44 = 4;
        __asm { BR              X11 }
      }
      v42 = v43 + 1;
LABEL_48:
      v23 = v177;
      v30 = v179;
      if (v42)
      {
LABEL_49:
        (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v22, v16);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))((unint64_t)&v22[v26] & v180, 1, v182))(*(void (**)(unint64_t, uint64_t))(v18 + 8))((unint64_t)&v22[v26] & v180, v182);
        goto LABEL_59;
      }
LABEL_51:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 24))(v22, v23, v16);
      v45 = (void *)((unint64_t)&v22[v26] & v180);
      v46 = v23;
      v47 = (void *)((unint64_t)&v23[v26] & v180);
      v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
      v49 = v48(v45, 1, v182);
      v50 = v48(v47, 1, v182);
      if (v49)
      {
        if (!v50)
        {
          (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v45, v47, v182);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v45, 0, 1, v182);
          v23 = v46;
          goto LABEL_63;
        }
        goto LABEL_56;
      }
      if (v50)
      {
        (*(void (**)(void *, uint64_t))(v18 + 8))(v45, v182);
LABEL_56:
        memcpy(v45, v47, __n);
        v23 = v46;
        goto LABEL_63;
      }
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v45, v47, v182);
      v23 = v46;
      goto LABEL_63;
    }
    if (!v23[v29])
      goto LABEL_80;
    v179 = 0;
    v177 = v23;
    v42 = ((v23[v29] - 1) << v37) + 1;
LABEL_58:
    v23 = v177;
    v30 = v179;
    if (!v42)
      goto LABEL_80;
LABEL_59:
    if (v30)
      v51 = v29;
    else
      v51 = v29 + 1;
    memcpy(v22, v23, v51);
    goto LABEL_63;
  }
  v179 = v25 | v24;
  if (v24 >= v25)
  {
    v40 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
    v41 = v40(v22, v24, v16);
    v177 = v23;
    v42 = v40(v23, v24, v16);
    if (!v41)
      goto LABEL_48;
    goto LABEL_58;
  }
  v175 = v22;
  v176 = v27 + v28;
  v31 = (unint64_t)&v22[v26] & ~v20;
  v32 = v23;
  v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48);
  v34 = ~v20;
  v35 = v33(v31, v19, v182);
  v36 = v33((unint64_t)&v32[v26] & v34, v19, v182);
  if (v35 < 2)
  {
    v23 = v32;
    v30 = v179;
    v22 = v175;
    v29 = v176;
    if (v36 < 2)
      goto LABEL_51;
    goto LABEL_49;
  }
  v23 = v32;
  v30 = v179;
  v22 = v175;
  v29 = v176;
  if (v36 >= 2)
    goto LABEL_59;
LABEL_80:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 16))(v22, v23, v16);
  v63 = (void *)((unint64_t)&v22[v26] & v180);
  v64 = (const void *)((unint64_t)&v23[v26] & v180);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v64, 1, v182))
  {
    memcpy(v63, v64, __n);
    if (v30)
      goto LABEL_63;
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v63, v64, v182);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v63, 0, 1, v182);
    if (v30)
      goto LABEL_63;
  }
  v22[v29] = 0;
LABEL_63:
  if (v30)
    v52 = v29;
  else
    v52 = v29 + 1;
  v53 = type metadata accessor for Playlist.Variant(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(unsigned __int8 *)(v54 + 80);
  v56 = (_BYTE *)((unint64_t)&v22[v52 + v55] & ~v55);
  v57 = (char *)((unint64_t)&v23[v52 + v55] & ~v55);
  v58 = *(unsigned int *)(v54 + 84);
  if ((_DWORD)v58)
    v59 = v58 - 1;
  else
    v59 = 0;
  if ((_DWORD)v58)
    v60 = *(_QWORD *)(v54 + 64);
  else
    v60 = *(_QWORD *)(v54 + 64) + 1;
  if (v59 <= 9)
  {
    if (v60 > 3)
      goto LABEL_74;
    v62 = (~(-1 << (8 * v60)) - v59 + 10) >> (8 * v60);
    if (v62 > 0xFFFE)
    {
      v61 = *(_DWORD *)&v56[v60];
      if (v61)
        goto LABEL_84;
    }
    else
    {
      if (v62 <= 0xFE)
      {
        if (!v62)
          goto LABEL_95;
LABEL_74:
        v61 = v56[v60];
        if (!v56[v60])
          goto LABEL_95;
LABEL_84:
        v65 = (v61 - 1) << (8 * v60);
        if (v60 > 3)
          v65 = 0;
        if ((_DWORD)v60)
        {
          if (v60 <= 3)
            v66 = v60;
          else
            v66 = 4;
          __asm { BR              X11 }
        }
        if (v65 + v59 == -1)
          goto LABEL_105;
        goto LABEL_102;
      }
      v61 = *(unsigned __int16 *)&v56[v60];
      if (*(_WORD *)&v56[v60])
        goto LABEL_84;
    }
  }
LABEL_95:
  if (v58 >= 2)
  {
    v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
    if (v67(v56, *(unsigned int *)(v54 + 84), v53) >= 2)
    {
      if (v59 > 9)
      {
LABEL_141:
        if (v67(v57, v58, v53) >= 2)
        {
          v77 = v60;
          if (v59 > 9)
          {
LABEL_189:
            v84 = v56;
            v85 = v57;
            goto LABEL_190;
          }
LABEL_167:
          if (v60 <= 3)
          {
            v93 = (~(-1 << (8 * v60)) - v59 + 10) >> (8 * v60);
            if (v93 > 0xFFFE)
            {
              v88 = 4;
            }
            else
            {
              v94 = v93 != 0;
              v91 = v93 >= 0xFF;
              v88 = 2;
              if (!v91)
                v88 = v94;
            }
          }
          else
          {
            v88 = 1;
          }
          v77 = v88 + v60;
          goto LABEL_189;
        }
LABEL_169:
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v57, 1, v53))
        {
          memcpy(v56, v57, v60);
        }
        else
        {
          (*(void (**)(_BYTE *, char *, uint64_t))(v54 + 16))(v56, v57, v53);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v56, 0, 1, v53);
        }
        v79 = v181;
        if (v59 > 9)
          goto LABEL_197;
        if (v60 > 3)
        {
LABEL_174:
          v56[v60] = 0;
          if (v60 > 3)
          {
LABEL_193:
            v92 = 1;
LABEL_196:
            v60 += v92;
            goto LABEL_197;
          }
LABEL_175:
          v89 = (~(-1 << (8 * v60)) - v59 + 10) >> (8 * v60);
          if (v89 <= 0xFFFE)
            goto LABEL_176;
LABEL_195:
          v92 = 4;
          goto LABEL_196;
        }
        v89 = (~(-1 << (8 * v60)) - v59 + 10) >> (8 * v60);
        if (v89 > 0xFFFE)
        {
          *(_DWORD *)&v56[v60] = 0;
          goto LABEL_195;
        }
        if (v89 > 0xFE)
        {
          *(_WORD *)&v56[v60] = 0;
        }
        else if (v89)
        {
          goto LABEL_174;
        }
LABEL_176:
        v90 = v89 != 0;
        v91 = v89 >= 0xFF;
        v92 = 2;
        if (!v91)
          v92 = v90;
        goto LABEL_196;
      }
LABEL_102:
      if (v60 > 3)
        goto LABEL_103;
      v71 = (~(-1 << (8 * v60)) - v59 + 10) >> (8 * v60);
      if (v71 > 0xFFFE)
      {
        v68 = *(_DWORD *)&v57[v60];
        if (v68)
          goto LABEL_126;
      }
      else
      {
        if (v71 <= 0xFE)
        {
          if (!v71)
            goto LABEL_139;
LABEL_103:
          v68 = v57[v60];
          if (!v57[v60])
            goto LABEL_139;
LABEL_126:
          v74 = (v68 - 1) << (8 * v60);
          if (v60 > 3)
            v74 = 0;
          if ((_DWORD)v60)
          {
            if (v60 <= 3)
              v75 = v60;
            else
              v75 = 4;
            __asm { BR              X11 }
          }
          if (v74 + v59 != -1)
            goto LABEL_167;
          goto LABEL_169;
        }
        v68 = *(unsigned __int16 *)&v57[v60];
        if (*(_WORD *)&v57[v60])
          goto LABEL_126;
      }
LABEL_139:
      if (v58 < 2)
        goto LABEL_169;
      v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      goto LABEL_141;
    }
  }
  if (v59 > 9)
    goto LABEL_135;
LABEL_105:
  if (v60 > 3)
    goto LABEL_106;
  v70 = (~(-1 << (8 * v60)) - v59 + 10) >> (8 * v60);
  if (v70 > 0xFFFE)
  {
    v69 = *(_DWORD *)&v57[v60];
    if (v69)
      goto LABEL_117;
LABEL_135:
    if (v58 < 2
      || (v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48), v76(v57, v58, v53) < 2))
    {
LABEL_151:
      v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
      v82 = v81(v56, 1, v53);
      v83 = v81(v57, 1, v53);
      if (v82)
      {
        if (!v83)
        {
          (*(void (**)(_BYTE *, char *, uint64_t))(v54 + 16))(v56, v57, v53);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v56, 0, 1, v53);
          goto LABEL_191;
        }
      }
      else
      {
        if (!v83)
        {
          (*(void (**)(_BYTE *, char *, uint64_t))(v54 + 24))(v56, v57, v53);
          goto LABEL_191;
        }
        (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v56, v53);
      }
      v84 = v56;
      v85 = v57;
      v77 = v60;
LABEL_190:
      memcpy(v84, v85, v77);
LABEL_191:
      v79 = v181;
      if (v59 > 9)
        goto LABEL_197;
LABEL_192:
      if (v60 > 3)
        goto LABEL_193;
      goto LABEL_175;
    }
    goto LABEL_146;
  }
  if (v70 > 0xFE)
  {
    v69 = *(unsigned __int16 *)&v57[v60];
    if (*(_WORD *)&v57[v60])
      goto LABEL_117;
    goto LABEL_135;
  }
  if (!v70)
    goto LABEL_135;
LABEL_106:
  v69 = v57[v60];
  if (!v57[v60])
    goto LABEL_135;
LABEL_117:
  v72 = (v69 - 1) << (8 * v60);
  if (v60 > 3)
    v72 = 0;
  if ((_DWORD)v60)
  {
    if (v60 <= 3)
      v73 = v60;
    else
      v73 = 4;
    __asm { BR              X11 }
  }
  if (v72 + v59 == -1)
    goto LABEL_151;
  v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
LABEL_146:
  if (!v76(v56, 1, v53))
    (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v56, v53);
  v78 = v60;
  v79 = v181;
  if (v59 <= 9)
  {
    if (v60 <= 3)
    {
      v86 = (~(-1 << (8 * v60)) - v59 + 10) >> (8 * v60);
      v87 = v86 != 0;
      if (v86 >= 0xFF)
        v87 = 2;
      if (v86 <= 0xFFFE)
        v80 = v87;
      else
        v80 = 4;
    }
    else
    {
      v80 = 1;
    }
    v78 = v80 + v60;
  }
  memcpy(v56, v57, v78);
  if (v59 <= 9)
    goto LABEL_192;
LABEL_197:
  v95 = (_QWORD *)((unint64_t)&v56[v60 + 7] & 0xFFFFFFFFFFFFF8);
  v96 = (_QWORD *)((unint64_t)&v57[v60 + 7] & 0xFFFFFFFFFFFFFFF8);
  *v95 = *v96;
  v97 = ((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8;
  v98 = ((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8;
  v99 = *(_QWORD *)v98;
  *(_BYTE *)(v97 + 8) = *(_BYTE *)(v98 + 8);
  *(_QWORD *)v97 = v99;
  *(_BYTE *)(v97 + 9) = *(_BYTE *)(v98 + 9);
  *(_BYTE *)(v97 + 10) = *(_BYTE *)(v98 + 10);
  *(_BYTE *)(v97 + 11) = *(_BYTE *)(v98 + 11);
  v100 = (_QWORD *)((v97 + 19) & 0xFFFFFFFFFFFFFFF8);
  v101 = (_QWORD *)((v98 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v100 = *v101;
  swift_retain();
  swift_release();
  v102 = sub_100007E8C(&qword_1011A3C78);
  v103 = *(_QWORD *)(v102 - 8);
  v104 = *(_DWORD *)(v103 + 80) & 0xF8;
  v105 = v104 + 15;
  v106 = (unint64_t)v100 + v104 + 15;
  v107 = ~v104 & 0xFFFFFFFFFFFFFFF8;
  v108 = v106 & v107;
  v109 = ((unint64_t)v101 + v105) & v107;
  if (*(_QWORD *)(v103 + 64) <= 0x10uLL)
    v110 = 16;
  else
    v110 = *(_QWORD *)(v103 + 64);
  if (v108 != v109)
  {
    v111 = v102;
    v112 = *(unsigned __int8 *)(v108 + v110);
    if (v112 >= 2)
    {
      if (v110 <= 3)
        v113 = v110;
      else
        v113 = 4;
      __asm { BR              X12 }
    }
    if (v112 == 1)
      (*(void (**)(unint64_t, uint64_t))(v103 + 8))(v108, v102);
    else
      v114 = swift_release();
    v115 = *(unsigned __int8 *)(v109 + v110);
    if (v115 >= 2)
    {
      if (v110 <= 3)
        v116 = v110;
      else
        v116 = 4;
      __asm { BR              X12 }
    }
    if (v115 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v103 + 16))(v108, v109, v111, v114);
      *(_BYTE *)(v108 + v110) = 1;
    }
    else
    {
      v117 = *(_QWORD *)(v109 + 8);
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *(_QWORD *)(v108 + 8) = v117;
      *(_BYTE *)(v108 + v110) = 0;
      swift_retain();
    }
  }
  v118 = (_QWORD *)(((v108 | 7) + v110 + 1) & 0xFFFFFFFFFFFFFFF8);
  v119 = (_QWORD *)(((v109 | 7) + v110 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v118 = *v119;
  v118[1] = v119[1];
  swift_retain();
  swift_release();
  v120 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v121 = *(_QWORD *)(v120 - 8);
  v122 = *(_DWORD *)(v121 + 80) & 0xF8;
  v123 = v122 + 23;
  v124 = (unint64_t)v118 + v122 + 23;
  v125 = ~v122 & 0xFFFFFFFFFFFFFFF8;
  v126 = (_QWORD *)(v124 & v125);
  v127 = (_QWORD *)(((unint64_t)v119 + v123) & v125);
  if (*(_QWORD *)(v121 + 64) <= 8uLL)
    v128 = 8;
  else
    v128 = *(_QWORD *)(v121 + 64);
  if (v126 != v127)
  {
    v129 = v120;
    v130 = *((unsigned __int8 *)v126 + v128);
    if (v130 >= 2)
    {
      if (v128 <= 3)
        v131 = v128;
      else
        v131 = 4;
      __asm { BR              X12 }
    }
    if (v130 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v121 + 8))(v126, v120);
    else
      v132 = swift_release();
    v133 = *((unsigned __int8 *)v127 + v128);
    if (v133 >= 2)
    {
      if (v128 <= 3)
        v134 = v128;
      else
        v134 = 4;
      __asm { BR              X12 }
    }
    if (v133 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v121 + 16))(v126, v127, v129, v132);
      *((_BYTE *)v126 + v128) = 1;
    }
    else
    {
      *v126 = *v127;
      *((_BYTE *)v126 + v128) = 0;
      swift_retain();
    }
  }
  v135 = v128 + 1;
  v136 = (char *)v126 + v128 + 1;
  v137 = (char *)v127 + v135;
  v138 = (unint64_t)(v136 + 7) & 0xFFFFFFFFFFFFFFF8;
  v139 = ((unint64_t)v127 + v135 + 7) & 0xFFFFFFFFFFFFFFF8;
  v140 = *(id *)v139;
  v141 = *(_BYTE *)(v139 + 8);
  sub_1000A4100(*(id *)v139, v141);
  v142 = *(void **)v138;
  v143 = *(_BYTE *)(v138 + 8);
  *(_QWORD *)v138 = v140;
  *(_BYTE *)(v138 + 8) = v141;
  sub_1000A4224(v142, v143);
  v144 = (_QWORD *)((unint64_t)(v136 + 23) & 0xFFFFFFFFFFFFFFF8);
  v145 = (_QWORD *)((unint64_t)(v137 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v144 = *v145;
  swift_retain();
  swift_release();
  v144[1] = v145[1];
  v146 = (_QWORD *)(((unint64_t)v144 + 23) & 0xFFFFFFFFFFFFFFF8);
  v147 = (_QWORD *)(((unint64_t)v145 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v146 = *v147;
  swift_retain();
  swift_release();
  v146[1] = v147[1];
  v148 = ((unint64_t)v146 + 23) & 0xFFFFFFFFFFFFFFF8;
  v149 = ((unint64_t)v147 + 23) & 0xFFFFFFFFFFFFFFF8;
  v150 = *(_QWORD *)v149;
  v151 = *(_QWORD *)(v149 + 8);
  LOBYTE(v137) = *(_BYTE *)(v149 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v149, v151);
  v152 = *(_QWORD *)v148;
  v153 = *(_QWORD *)(v148 + 8);
  *(_QWORD *)v148 = v150;
  *(_QWORD *)(v148 + 8) = v151;
  *(_BYTE *)(v148 + 16) = (_BYTE)v137;
  sub_1000A6174(v152, v153);
  v154 = (_QWORD *)(((unint64_t)v146 + 47) & 0xFFFFFFFFFFFFFFF8);
  v155 = (_QWORD *)(((unint64_t)v147 + 47) & 0xFFFFFFFFFFFFFFF8);
  *v154 = *v155;
  swift_retain();
  swift_release();
  v154[1] = v155[1];
  v156 = (_QWORD *)(((unint64_t)v154 + 23) & 0xFFFFFFFFFFFFFFF8);
  v157 = (_QWORD *)(((unint64_t)v155 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v156 = *v157;
  swift_retain();
  swift_release();
  v156[1] = v157[1];
  v158 = (_QWORD *)(((unint64_t)v156 + 23) & 0xFFFFFFFFFFFFFFF8);
  v159 = (_QWORD *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v158 = *v159;
  swift_retain();
  swift_release();
  v158[1] = v159[1];
  v160 = ((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8;
  v161 = ((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8;
  v162 = *(_QWORD *)v161;
  v163 = *(_QWORD *)(v161 + 8);
  LOBYTE(v137) = *(_BYTE *)(v161 + 16);
  sub_1000A410C(*(_QWORD *)v161, v163, (char)v137);
  v164 = *(_QWORD *)v160;
  v165 = *(_QWORD *)(v160 + 8);
  v166 = *(_BYTE *)(v160 + 16);
  *(_QWORD *)v160 = v162;
  *(_QWORD *)(v160 + 8) = v163;
  *(_BYTE *)(v160 + 16) = (_BYTE)v137;
  sub_1000A4230(v164, v165, v166);
  v167 = ((unint64_t)v158 + 47) & 0xFFFFFFFFFFFFFFF8;
  v168 = ((unint64_t)v159 + 47) & 0xFFFFFFFFFFFFFFF8;
  v169 = *(_QWORD *)v168;
  v170 = *(_QWORD *)(v168 + 8);
  LOBYTE(v137) = *(_BYTE *)(v168 + 16);
  sub_1000A411C(*(_QWORD *)v168, v170, (char)v137);
  v171 = *(_QWORD *)v167;
  v172 = *(_QWORD *)(v167 + 8);
  v173 = *(_BYTE *)(v167 + 16);
  *(_QWORD *)v167 = v169;
  *(_QWORD *)(v167 + 8) = v170;
  *(_BYTE *)(v167 + 16) = (_BYTE)v137;
  sub_1000A4240(v171, v172, v173);
  return v79;
}

void *sub_100424AE8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _BYTE *v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  size_t v30;
  int v31;
  int v32;
  int v33;
  size_t v34;
  size_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _BYTE *v40;
  unsigned int v41;
  unsigned int v42;
  size_t v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  void *v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  _BOOL8 v54;
  BOOL v55;
  _QWORD *v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _OWORD *v69;
  _OWORD *v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  _OWORD *v76;
  _OWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  char v89;
  char *v90;
  char *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  unint64_t v99;
  unint64_t v100;
  __int128 v101;
  _OWORD *v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  unint64_t v108;
  unint64_t v109;
  __int128 v110;
  unint64_t v111;
  unint64_t v112;
  __int128 v113;
  size_t __n;
  void *v116;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v116 = a1;
  v12 = (_OWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = type metadata accessor for Artwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = type metadata accessor for Artwork.CropStyle(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 84);
  v20 = *(_DWORD *)(v18 + 80);
  v21 = *(_DWORD *)(v18 + 80) | v16;
  v22 = (void *)(((unint64_t)v12 + v21 + 16) & ~v21);
  v23 = (_BYTE *)(((unint64_t)v13 + v21 + 16) & ~v21);
  v24 = *(unsigned int *)(v15 + 84);
  v25 = v19 - 1;
  if (!v19)
    v25 = 0;
  v26 = ~v20;
  v27 = *(_QWORD *)(v15 + 64) + v20;
  v28 = v27 & ~v20;
  v29 = *(_QWORD *)(v18 + 64);
  if (!v19)
    ++v29;
  __n = v29;
  v30 = v28 + v29;
  v31 = v25 | v24;
  if (!(v25 | v24))
  {
    if (!v23[v30])
      goto LABEL_32;
    v32 = (v23[v30] - 1) << (8 * v30);
    if (v30 > 3)
      v32 = 0;
    if ((_DWORD)v30)
    {
      if (v30 <= 3)
        v33 = v28 + v29;
      else
        v33 = 4;
      __asm { BR              X11 }
    }
    if (v32 == -1)
      goto LABEL_32;
    goto LABEL_27;
  }
  if (v24 < v25)
  {
    if ((*(unsigned int (**)(unint64_t))(v18 + 48))((unint64_t)&v23[v27] & v26) < 2)
      goto LABEL_32;
LABEL_27:
    if (v31)
      v34 = v30;
    else
      v34 = v30 + 1;
    memcpy(v22, v23, v34);
    goto LABEL_35;
  }
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v23, v24, v14))
    goto LABEL_27;
LABEL_32:
  (*(void (**)(void *, _BYTE *, uint64_t))(v15 + 32))(v22, v23, v14);
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))((unint64_t)&v23[v27] & v26, 1, v17))
  {
    memcpy((void *)(((unint64_t)v22 + v27) & v26), (const void *)((unint64_t)&v23[v27] & v26), __n);
    if (v31)
      goto LABEL_35;
    goto LABEL_34;
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 32))(((unint64_t)v22 + v27) & v26, (unint64_t)&v23[v27] & v26, v17);
  (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(((unint64_t)v22 + v27) & v26, 0, 1, v17);
  if (!v31)
LABEL_34:
    *((_BYTE *)v22 + v30) = 0;
LABEL_35:
  if (v31)
    v35 = v30;
  else
    v35 = v30 + 1;
  v36 = type metadata accessor for Playlist.Variant(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (char *)(((unint64_t)v22 + v35 + v38) & ~v38);
  v40 = (_BYTE *)((unint64_t)&v23[v35 + v38] & ~v38);
  v41 = *(_DWORD *)(v37 + 84);
  if (v41)
    v42 = v41 - 1;
  else
    v42 = 0;
  if (v41)
    v43 = *(_QWORD *)(v37 + 64);
  else
    v43 = *(_QWORD *)(v37 + 64) + 1;
  if (v42 <= 9)
  {
    if (v43 > 3)
      goto LABEL_46;
    v45 = (~(-1 << (8 * v43)) - v42 + 10) >> (8 * v43);
    if (v45 > 0xFFFE)
    {
      v44 = *(_DWORD *)&v40[v43];
      if (v44)
        goto LABEL_55;
    }
    else
    {
      if (v45 <= 0xFE)
      {
        if (!v45)
          goto LABEL_64;
LABEL_46:
        v44 = v40[v43];
        if (!v40[v43])
          goto LABEL_64;
LABEL_55:
        v46 = (v44 - 1) << (8 * v43);
        if (v43 > 3)
          v46 = 0;
        if ((_DWORD)v43)
        {
          if (v43 <= 3)
            v47 = v43;
          else
            v47 = 4;
          __asm { BR              X11 }
        }
        if (v46 + v42 != -1)
          goto LABEL_69;
        goto LABEL_71;
      }
      v44 = *(unsigned __int16 *)&v40[v43];
      if (*(_WORD *)&v40[v43])
        goto LABEL_55;
    }
  }
LABEL_64:
  if (v41 >= 2 && (*(unsigned int (**)(_BYTE *))(v37 + 48))(v40) >= 2)
  {
    if (v42 >= 0xA)
    {
      memcpy(v39, v40, v43);
      v48 = v116;
      goto LABEL_95;
    }
LABEL_69:
    if (v43 <= 3)
    {
      v52 = (~(-1 << (8 * v43)) - v42 + 10) >> (8 * v43);
      v53 = v52 != 0;
      if (v52 >= 0xFF)
        v53 = 2;
      if (v52 <= 0xFFFE)
        v49 = v53;
      else
        v49 = 4;
    }
    else
    {
      v49 = 1;
    }
    memcpy(v39, v40, v49 + v43);
    if (v43 > 3)
      goto LABEL_89;
    goto LABEL_75;
  }
LABEL_71:
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v40, 1, v36))
  {
    memcpy(v39, v40, v43);
    if (v42 <= 9)
      goto LABEL_73;
LABEL_78:
    v48 = v116;
    goto LABEL_95;
  }
  (*(void (**)(char *, _BYTE *, uint64_t))(v37 + 32))(v39, v40, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v36);
  if (v42 > 9)
    goto LABEL_78;
LABEL_73:
  if (v43 > 3)
    goto LABEL_74;
  v50 = (~(-1 << (8 * v43)) - v42 + 10) >> (8 * v43);
  if (v50 > 0xFFFE)
  {
    *(_DWORD *)&v39[v43] = 0;
    v51 = 4;
    goto LABEL_94;
  }
  if (v50 > 0xFE)
  {
    *(_WORD *)&v39[v43] = 0;
    goto LABEL_92;
  }
  if (!v50)
  {
LABEL_92:
    v54 = v50 != 0;
    v55 = v50 >= 0xFF;
    v51 = 2;
    if (!v55)
      v51 = v54;
    goto LABEL_94;
  }
LABEL_74:
  v39[v43] = 0;
  if (v43 > 3)
  {
LABEL_89:
    v51 = 1;
    goto LABEL_94;
  }
LABEL_75:
  v50 = (~(-1 << (8 * v43)) - v42 + 10) >> (8 * v43);
  if (v50 <= 0xFFFE)
    goto LABEL_92;
  v51 = 4;
LABEL_94:
  v48 = v116;
  v43 += v51;
LABEL_95:
  v56 = (_QWORD *)((unint64_t)&v39[v43 + 7] & 0xFFFFFFFFFFFFF8);
  v57 = (_QWORD *)((unint64_t)&v40[v43 + 7] & 0xFFFFFFFFFFFFFFF8);
  *v56 = *v57;
  v58 = ((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  v59 = ((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8;
  v60 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  *(_QWORD *)v58 = v60;
  *(_BYTE *)(v58 + 9) = *(_BYTE *)(v59 + 9);
  *(_BYTE *)(v58 + 10) = *(_BYTE *)(v59 + 10);
  *(_BYTE *)(v58 + 11) = *(_BYTE *)(v59 + 11);
  v61 = (_QWORD *)((v58 + 19) & 0xFFFFFFFFFFFFFFF8);
  v62 = (_QWORD *)((v59 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v61 = *v62;
  v63 = sub_100007E8C(&qword_1011A3C78);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(_DWORD *)(v64 + 80) & 0xF8;
  v66 = v65 + 15;
  v67 = (unint64_t)v61 + v65 + 15;
  v68 = ~v65 & 0xFFFFFFFFFFFFFFF8;
  v69 = (_OWORD *)(v67 & v68);
  v70 = (_OWORD *)(((unint64_t)v62 + v66) & v68);
  if (*(_QWORD *)(v64 + 64) <= 0x10uLL)
    v71 = 16;
  else
    v71 = *(_QWORD *)(v64 + 64);
  v72 = *((unsigned __int8 *)v70 + v71);
  if (v72 >= 2)
  {
    if (v71 <= 3)
      v73 = v71;
    else
      v73 = 4;
    __asm { BR              X13 }
  }
  if (v72 == 1)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v64 + 32))(v69, v70, v63);
    v74 = 1;
  }
  else
  {
    v74 = 0;
    *v69 = *v70;
  }
  *((_BYTE *)v69 + v71) = v74;
  v75 = v71 + 8;
  v76 = (_OWORD *)(((unint64_t)v69 + v71 + 8) & 0xFFFFFFFFFFFFFFF8);
  v77 = (_OWORD *)(((unint64_t)v70 + v75) & 0xFFFFFFFFFFFFFFF8);
  *v76 = *v77;
  v78 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(_DWORD *)(v79 + 80) & 0xF8;
  v81 = v80 + 23;
  v82 = (unint64_t)v76 + v80 + 23;
  v83 = ~v80 & 0xFFFFFFFFFFFFFFF8;
  v84 = (_QWORD *)(v82 & v83);
  v85 = (_QWORD *)(((unint64_t)v77 + v81) & v83);
  if (*(_QWORD *)(v79 + 64) <= 8uLL)
    v86 = 8;
  else
    v86 = *(_QWORD *)(v79 + 64);
  v87 = *((unsigned __int8 *)v85 + v86);
  if (v87 >= 2)
  {
    if (v86 <= 3)
      v88 = v86;
    else
      v88 = 4;
    __asm { BR              X13 }
  }
  if (v87 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v79 + 32))(v84, v85, v78);
    v89 = 1;
  }
  else
  {
    v89 = 0;
    *v84 = *v85;
  }
  *((_BYTE *)v84 + v86) = v89;
  v90 = (char *)v84 + v86 + 1;
  v91 = (char *)v85 + v86 + 1;
  v92 = (unint64_t)(v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v93 = (unint64_t)(v91 + 7) & 0xFFFFFFFFFFFFFFF8;
  v94 = *(_QWORD *)v93;
  *(_BYTE *)(v92 + 8) = *(_BYTE *)(v93 + 8);
  *(_QWORD *)v92 = v94;
  v95 = (_OWORD *)((unint64_t)(v90 + 23) & 0xFFFFFFFFFFFFFFF8);
  v96 = (_OWORD *)((unint64_t)(v91 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v95 = *v96;
  v97 = (_OWORD *)(((unint64_t)v95 + 23) & 0xFFFFFFFFFFFFFFF8);
  v98 = (_OWORD *)(((unint64_t)v96 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v97 = *v98;
  v99 = ((unint64_t)v97 + 23) & 0xFFFFFFFFFFFFFFF8;
  v100 = ((unint64_t)v98 + 23) & 0xFFFFFFFFFFFFFFF8;
  v101 = *(_OWORD *)v100;
  *(_BYTE *)(v99 + 16) = *(_BYTE *)(v100 + 16);
  *(_OWORD *)v99 = v101;
  v102 = (_OWORD *)(((unint64_t)v97 + 47) & 0xFFFFFFFFFFFFFFF8);
  v103 = (_OWORD *)(((unint64_t)v98 + 47) & 0xFFFFFFFFFFFFFFF8);
  *v102 = *v103;
  v104 = (_OWORD *)(((unint64_t)v102 + 23) & 0xFFFFFFFFFFFFFFF8);
  v105 = (_OWORD *)(((unint64_t)v103 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v104 = *v105;
  v106 = (_OWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
  v107 = (_OWORD *)(((unint64_t)v105 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v106 = *v107;
  v108 = ((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFFFF8;
  v109 = ((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8;
  v110 = *(_OWORD *)v109;
  *(_BYTE *)(v108 + 16) = *(_BYTE *)(v109 + 16);
  *(_OWORD *)v108 = v110;
  v111 = ((unint64_t)v106 + 47) & 0xFFFFFFFFFFFFFFF8;
  v112 = ((unint64_t)v107 + 47) & 0xFFFFFFFFFFFFFFF8;
  v113 = *(_OWORD *)v112;
  *(_BYTE *)(v111 + 16) = *(_BYTE *)(v112 + 16);
  *(_OWORD *)v111 = v113;
  return v48;
}

void *sub_100425410(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  int v31;
  unint64_t v32;
  _BYTE *v33;
  uint64_t (*v34)(unint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  char v38;
  int v39;
  int v40;
  uint64_t (*v41)(_BYTE *, uint64_t, uint64_t);
  int v42;
  int v43;
  int v44;
  int v45;
  void *v46;
  _BYTE *v47;
  void *v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  size_t v52;
  size_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  char *v58;
  uint64_t v59;
  unsigned int v60;
  size_t v61;
  int v62;
  unsigned int v63;
  void *v64;
  const void *v65;
  int v66;
  int v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  size_t v78;
  size_t v79;
  void *v80;
  uint64_t v81;
  uint64_t (*v82)(char *, uint64_t, uint64_t);
  int v83;
  int v84;
  void *v85;
  char *v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  _BOOL8 v91;
  BOOL v92;
  uint64_t v93;
  unsigned int v94;
  _BOOL8 v95;
  _QWORD *v96;
  _QWORD *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  __n128 v115;
  unsigned int v116;
  uint64_t v117;
  char v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int v131;
  uint64_t v132;
  __n128 v133;
  unsigned int v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  char *v138;
  char *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  void *v143;
  char v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  unint64_t v149;
  unint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  unint64_t v166;
  unint64_t v167;
  char v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  _BYTE *v173;
  size_t v174;
  _BYTE *v175;
  size_t __n;
  int v177;
  uint64_t v178;
  void *v179;
  uint64_t v180;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v179 = a1;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = v13[1];
  v13[1] = v14[1];
  swift_bridgeObjectRelease(v15);
  v16 = type metadata accessor for Artwork(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v180 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v180 - 8);
  v20 = *(unsigned int *)(v19 + 84);
  v21 = *(_DWORD *)(v19 + 80);
  v22 = *(_DWORD *)(v19 + 80) | v18;
  v23 = (_BYTE *)(((unint64_t)v13 + v22 + 16) & ~v22);
  v24 = (_BYTE *)(((unint64_t)v14 + v22 + 16) & ~v22);
  v25 = *(unsigned int *)(v17 + 84);
  v26 = v20 - 1;
  if (!(_DWORD)v20)
    v26 = 0;
  v27 = *(_QWORD *)(v17 + 64) + v21;
  v28 = v27 & ~v21;
  if ((_DWORD)v20)
    v29 = *(_QWORD *)(v19 + 64);
  else
    v29 = *(_QWORD *)(v19 + 64) + 1;
  v30 = v28 + v29;
  v31 = v26 | v25;
  __n = v29;
  v178 = ~v21;
  if (!(v26 | v25))
  {
    v38 = 8 * v30;
    if (!v23[v30])
      goto LABEL_39;
    v39 = (v23[v30] - 1) << v38;
    if (v30 > 3)
      v39 = 0;
    if ((_DWORD)v30)
    {
      if (v30 <= 3)
        v40 = v30;
      else
        v40 = 4;
      __asm { BR              X12 }
    }
    if (v39 == -1)
    {
LABEL_39:
      if (!v24[v30])
        goto LABEL_51;
      v44 = (v24[v30] - 1) << v38;
      if (v30 > 3)
        v44 = 0;
      v177 = 0;
      v175 = v24;
      if ((_DWORD)v30)
      {
        if (v30 <= 3)
          v45 = v30;
        else
          v45 = 4;
        __asm { BR              X11 }
      }
      v43 = v44 + 1;
LABEL_48:
      v24 = v175;
      v31 = v177;
      if (v43)
      {
LABEL_49:
        (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v23, v16);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))((unint64_t)&v23[v27] & v178, 1, v180))(*(void (**)(unint64_t, uint64_t))(v19 + 8))((unint64_t)&v23[v27] & v178, v180);
        goto LABEL_59;
      }
LABEL_51:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 40))(v23, v24, v16);
      v46 = (void *)((unint64_t)&v23[v27] & v178);
      v47 = v24;
      v48 = (void *)((unint64_t)&v24[v27] & v178);
      v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
      v50 = v49(v46, 1, v180);
      v51 = v49(v48, 1, v180);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v46, v48, v180);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v46, 0, 1, v180);
          v24 = v47;
          goto LABEL_63;
        }
        goto LABEL_56;
      }
      if (v51)
      {
        (*(void (**)(void *, uint64_t))(v19 + 8))(v46, v180);
LABEL_56:
        memcpy(v46, v48, __n);
        v24 = v47;
        goto LABEL_63;
      }
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v46, v48, v180);
      v24 = v47;
      goto LABEL_63;
    }
    if (!v24[v30])
      goto LABEL_80;
    v177 = 0;
    v175 = v24;
    v43 = ((v24[v30] - 1) << v38) + 1;
LABEL_58:
    v24 = v175;
    v31 = v177;
    if (!v43)
      goto LABEL_80;
LABEL_59:
    if (v31)
      v52 = v30;
    else
      v52 = v30 + 1;
    memcpy(v23, v24, v52);
    goto LABEL_63;
  }
  v177 = v26 | v25;
  if (v25 >= v26)
  {
    v41 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
    v42 = v41(v23, v25, v16);
    v175 = v24;
    v43 = v41(v24, v25, v16);
    if (!v42)
      goto LABEL_48;
    goto LABEL_58;
  }
  v173 = v23;
  v174 = v28 + v29;
  v32 = (unint64_t)&v23[v27] & ~v21;
  v33 = v24;
  v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v19 + 48);
  v35 = ~v21;
  v36 = v34(v32, v20, v180);
  v37 = v34((unint64_t)&v33[v27] & v35, v20, v180);
  if (v36 < 2)
  {
    v24 = v33;
    v31 = v177;
    v23 = v173;
    v30 = v174;
    if (v37 < 2)
      goto LABEL_51;
    goto LABEL_49;
  }
  v24 = v33;
  v31 = v177;
  v23 = v173;
  v30 = v174;
  if (v37 >= 2)
    goto LABEL_59;
LABEL_80:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v23, v24, v16);
  v64 = (void *)((unint64_t)&v23[v27] & v178);
  v65 = (const void *)((unint64_t)&v24[v27] & v178);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v65, 1, v180))
  {
    memcpy(v64, v65, __n);
    if (v31)
      goto LABEL_63;
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v64, v65, v180);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v64, 0, 1, v180);
    if (v31)
      goto LABEL_63;
  }
  v23[v30] = 0;
LABEL_63:
  if (v31)
    v53 = v30;
  else
    v53 = v30 + 1;
  v54 = type metadata accessor for Playlist.Variant(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (_BYTE *)((unint64_t)&v23[v53 + v56] & ~v56);
  v58 = (char *)((unint64_t)&v24[v53 + v56] & ~v56);
  v59 = *(unsigned int *)(v55 + 84);
  if ((_DWORD)v59)
    v60 = v59 - 1;
  else
    v60 = 0;
  if ((_DWORD)v59)
    v61 = *(_QWORD *)(v55 + 64);
  else
    v61 = *(_QWORD *)(v55 + 64) + 1;
  if (v60 <= 9)
  {
    if (v61 > 3)
      goto LABEL_74;
    v63 = (~(-1 << (8 * v61)) - v60 + 10) >> (8 * v61);
    if (v63 > 0xFFFE)
    {
      v62 = *(_DWORD *)&v57[v61];
      if (v62)
        goto LABEL_84;
    }
    else
    {
      if (v63 <= 0xFE)
      {
        if (!v63)
          goto LABEL_95;
LABEL_74:
        v62 = v57[v61];
        if (!v57[v61])
          goto LABEL_95;
LABEL_84:
        v66 = (v62 - 1) << (8 * v61);
        if (v61 > 3)
          v66 = 0;
        if ((_DWORD)v61)
        {
          if (v61 <= 3)
            v67 = v61;
          else
            v67 = 4;
          __asm { BR              X11 }
        }
        if (v66 + v60 == -1)
          goto LABEL_105;
        goto LABEL_102;
      }
      v62 = *(unsigned __int16 *)&v57[v61];
      if (*(_WORD *)&v57[v61])
        goto LABEL_84;
    }
  }
LABEL_95:
  if (v59 >= 2)
  {
    v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    if (v68(v57, *(unsigned int *)(v55 + 84), v54) >= 2)
    {
      if (v60 > 9)
      {
LABEL_141:
        if (v68(v58, v59, v54) >= 2)
        {
          v78 = v61;
          if (v60 > 9)
          {
LABEL_189:
            v85 = v57;
            v86 = v58;
            goto LABEL_190;
          }
LABEL_167:
          if (v61 <= 3)
          {
            v94 = (~(-1 << (8 * v61)) - v60 + 10) >> (8 * v61);
            if (v94 > 0xFFFE)
            {
              v89 = 4;
            }
            else
            {
              v95 = v94 != 0;
              v92 = v94 >= 0xFF;
              v89 = 2;
              if (!v92)
                v89 = v95;
            }
          }
          else
          {
            v89 = 1;
          }
          v78 = v89 + v61;
          goto LABEL_189;
        }
LABEL_169:
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v58, 1, v54))
        {
          memcpy(v57, v58, v61);
        }
        else
        {
          (*(void (**)(_BYTE *, char *, uint64_t))(v55 + 32))(v57, v58, v54);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v54);
        }
        v80 = v179;
        if (v60 > 9)
          goto LABEL_197;
        if (v61 > 3)
        {
LABEL_174:
          v57[v61] = 0;
          if (v61 > 3)
          {
LABEL_193:
            v93 = 1;
LABEL_196:
            v61 += v93;
            goto LABEL_197;
          }
LABEL_175:
          v90 = (~(-1 << (8 * v61)) - v60 + 10) >> (8 * v61);
          if (v90 <= 0xFFFE)
            goto LABEL_176;
LABEL_195:
          v93 = 4;
          goto LABEL_196;
        }
        v90 = (~(-1 << (8 * v61)) - v60 + 10) >> (8 * v61);
        if (v90 > 0xFFFE)
        {
          *(_DWORD *)&v57[v61] = 0;
          goto LABEL_195;
        }
        if (v90 > 0xFE)
        {
          *(_WORD *)&v57[v61] = 0;
        }
        else if (v90)
        {
          goto LABEL_174;
        }
LABEL_176:
        v91 = v90 != 0;
        v92 = v90 >= 0xFF;
        v93 = 2;
        if (!v92)
          v93 = v91;
        goto LABEL_196;
      }
LABEL_102:
      if (v61 > 3)
        goto LABEL_103;
      v72 = (~(-1 << (8 * v61)) - v60 + 10) >> (8 * v61);
      if (v72 > 0xFFFE)
      {
        v69 = *(_DWORD *)&v58[v61];
        if (v69)
          goto LABEL_126;
      }
      else
      {
        if (v72 <= 0xFE)
        {
          if (!v72)
            goto LABEL_139;
LABEL_103:
          v69 = v58[v61];
          if (!v58[v61])
            goto LABEL_139;
LABEL_126:
          v75 = (v69 - 1) << (8 * v61);
          if (v61 > 3)
            v75 = 0;
          if ((_DWORD)v61)
          {
            if (v61 <= 3)
              v76 = v61;
            else
              v76 = 4;
            __asm { BR              X11 }
          }
          if (v75 + v60 != -1)
            goto LABEL_167;
          goto LABEL_169;
        }
        v69 = *(unsigned __int16 *)&v58[v61];
        if (*(_WORD *)&v58[v61])
          goto LABEL_126;
      }
LABEL_139:
      if (v59 < 2)
        goto LABEL_169;
      v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      goto LABEL_141;
    }
  }
  if (v60 > 9)
    goto LABEL_135;
LABEL_105:
  if (v61 > 3)
    goto LABEL_106;
  v71 = (~(-1 << (8 * v61)) - v60 + 10) >> (8 * v61);
  if (v71 > 0xFFFE)
  {
    v70 = *(_DWORD *)&v58[v61];
    if (v70)
      goto LABEL_117;
LABEL_135:
    if (v59 < 2
      || (v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48), v77(v58, v59, v54) < 2))
    {
LABEL_151:
      v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      v83 = v82(v57, 1, v54);
      v84 = v82(v58, 1, v54);
      if (v83)
      {
        if (!v84)
        {
          (*(void (**)(_BYTE *, char *, uint64_t))(v55 + 32))(v57, v58, v54);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v54);
          goto LABEL_191;
        }
      }
      else
      {
        if (!v84)
        {
          (*(void (**)(_BYTE *, char *, uint64_t))(v55 + 40))(v57, v58, v54);
          goto LABEL_191;
        }
        (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v57, v54);
      }
      v85 = v57;
      v86 = v58;
      v78 = v61;
LABEL_190:
      memcpy(v85, v86, v78);
LABEL_191:
      v80 = v179;
      if (v60 > 9)
        goto LABEL_197;
LABEL_192:
      if (v61 > 3)
        goto LABEL_193;
      goto LABEL_175;
    }
    goto LABEL_146;
  }
  if (v71 > 0xFE)
  {
    v70 = *(unsigned __int16 *)&v58[v61];
    if (*(_WORD *)&v58[v61])
      goto LABEL_117;
    goto LABEL_135;
  }
  if (!v71)
    goto LABEL_135;
LABEL_106:
  v70 = v58[v61];
  if (!v58[v61])
    goto LABEL_135;
LABEL_117:
  v73 = (v70 - 1) << (8 * v61);
  if (v61 > 3)
    v73 = 0;
  if ((_DWORD)v61)
  {
    if (v61 <= 3)
      v74 = v61;
    else
      v74 = 4;
    __asm { BR              X11 }
  }
  if (v73 + v60 == -1)
    goto LABEL_151;
  v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
LABEL_146:
  if (!v77(v57, 1, v54))
    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v57, v54);
  v79 = v61;
  v80 = v179;
  if (v60 <= 9)
  {
    if (v61 <= 3)
    {
      v87 = (~(-1 << (8 * v61)) - v60 + 10) >> (8 * v61);
      v88 = v87 != 0;
      if (v87 >= 0xFF)
        v88 = 2;
      if (v87 <= 0xFFFE)
        v81 = v88;
      else
        v81 = 4;
    }
    else
    {
      v81 = 1;
    }
    v79 = v81 + v61;
  }
  memcpy(v57, v58, v79);
  if (v60 <= 9)
    goto LABEL_192;
LABEL_197:
  v96 = (_QWORD *)((unint64_t)&v57[v61 + 7] & 0xFFFFFFFFFFFFF8);
  v97 = (_QWORD *)((unint64_t)&v58[v61 + 7] & 0xFFFFFFFFFFFFFFF8);
  *v96 = *v97;
  v98 = ((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8;
  v99 = ((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8;
  v100 = *(_QWORD *)v99;
  *(_BYTE *)(v98 + 8) = *(_BYTE *)(v99 + 8);
  *(_QWORD *)v98 = v100;
  *(_BYTE *)(v98 + 9) = *(_BYTE *)(v99 + 9);
  *(_BYTE *)(v98 + 10) = *(_BYTE *)(v99 + 10);
  *(_BYTE *)(v98 + 11) = *(_BYTE *)(v99 + 11);
  v101 = (_QWORD *)((v98 + 19) & 0xFFFFFFFFFFFFFFF8);
  v102 = (_QWORD *)((v99 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v101 = *v102;
  swift_release();
  v103 = sub_100007E8C(&qword_1011A3C78);
  v104 = *(_QWORD *)(v103 - 8);
  v105 = *(_DWORD *)(v104 + 80) & 0xF8;
  v106 = v105 + 15;
  v107 = (unint64_t)v101 + v105 + 15;
  v108 = ~v105 & 0xFFFFFFFFFFFFFFF8;
  v109 = v107 & v108;
  v110 = ((unint64_t)v102 + v106) & v108;
  if (*(_QWORD *)(v104 + 64) <= 0x10uLL)
    v111 = 16;
  else
    v111 = *(_QWORD *)(v104 + 64);
  if (v109 != v110)
  {
    v112 = v103;
    v113 = *(unsigned __int8 *)(v109 + v111);
    if (v113 >= 2)
    {
      if (v111 <= 3)
        v114 = v111;
      else
        v114 = 4;
      __asm { BR              X12 }
    }
    if (v113 == 1)
      (*(void (**)(unint64_t, uint64_t))(v104 + 8))(v109, v103);
    else
      v115 = swift_release();
    v116 = *(unsigned __int8 *)(v110 + v111);
    if (v116 >= 2)
    {
      if (v111 <= 3)
        v117 = v111;
      else
        v117 = 4;
      __asm { BR              X12 }
    }
    if (v116 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v104 + 32))(v109, v110, v112, v115);
      v118 = 1;
    }
    else
    {
      v118 = 0;
      *(_OWORD *)v109 = *(_OWORD *)v110;
    }
    *(_BYTE *)(v109 + v111) = v118;
  }
  v119 = (_QWORD *)(((v109 | 7) + v111 + 1) & 0xFFFFFFFFFFFFFFF8);
  v120 = (_QWORD *)(((v110 | 7) + v111 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v119 = *v120;
  v119[1] = v120[1];
  swift_release();
  v121 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v122 = *(_QWORD *)(v121 - 8);
  v123 = *(_DWORD *)(v122 + 80) & 0xF8;
  v124 = v123 + 23;
  v125 = (unint64_t)v119 + v123 + 23;
  v126 = ~v123 & 0xFFFFFFFFFFFFFFF8;
  v127 = (_QWORD *)(v125 & v126);
  v128 = (_QWORD *)(((unint64_t)v120 + v124) & v126);
  if (*(_QWORD *)(v122 + 64) <= 8uLL)
    v129 = 8;
  else
    v129 = *(_QWORD *)(v122 + 64);
  if (v127 != v128)
  {
    v130 = v121;
    v131 = *((unsigned __int8 *)v127 + v129);
    if (v131 >= 2)
    {
      if (v129 <= 3)
        v132 = v129;
      else
        v132 = 4;
      __asm { BR              X12 }
    }
    if (v131 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v122 + 8))(v127, v121);
    else
      v133 = swift_release();
    v134 = *((unsigned __int8 *)v128 + v129);
    if (v134 >= 2)
    {
      if (v129 <= 3)
        v135 = v129;
      else
        v135 = 4;
      __asm { BR              X12 }
    }
    if (v134 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v122 + 32))(v127, v128, v130, v133);
      v136 = 1;
    }
    else
    {
      v136 = 0;
      *v127 = *v128;
    }
    *((_BYTE *)v127 + v129) = v136;
  }
  v137 = v129 + 1;
  v138 = (char *)v127 + v129 + 1;
  v139 = (char *)v128 + v137;
  v140 = (unint64_t)(v138 + 7) & 0xFFFFFFFFFFFFFFF8;
  v141 = (unint64_t)(v139 + 7) & 0xFFFFFFFFFFFFFFF8;
  v142 = *(_QWORD *)v141;
  LOBYTE(v141) = *(_BYTE *)(v141 + 8);
  v143 = *(void **)v140;
  v144 = *(_BYTE *)(v140 + 8);
  *(_QWORD *)v140 = v142;
  *(_BYTE *)(v140 + 8) = v141;
  sub_1000A4224(v143, v144);
  v145 = (_QWORD *)((unint64_t)(v138 + 23) & 0xFFFFFFFFFFFFFFF8);
  v146 = (_QWORD *)((unint64_t)(v139 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v145 = *v146;
  swift_release();
  v145[1] = v146[1];
  v147 = (_QWORD *)(((unint64_t)v145 + 23) & 0xFFFFFFFFFFFFFFF8);
  v148 = (_QWORD *)(((unint64_t)v146 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v147 = *v148;
  swift_release();
  v147[1] = v148[1];
  v149 = ((unint64_t)v147 + 23) & 0xFFFFFFFFFFFFFFF8;
  v150 = ((unint64_t)v148 + 23) & 0xFFFFFFFFFFFFFFF8;
  v151 = *(_BYTE *)(v150 + 16);
  v152 = *(_QWORD *)v149;
  v153 = *(_QWORD *)(v149 + 8);
  *(_OWORD *)v149 = *(_OWORD *)v150;
  *(_BYTE *)(v149 + 16) = v151;
  sub_1000A6174(v152, v153);
  v154 = (_QWORD *)(((unint64_t)v147 + 47) & 0xFFFFFFFFFFFFFFF8);
  v155 = (_QWORD *)(((unint64_t)v148 + 47) & 0xFFFFFFFFFFFFFFF8);
  *v154 = *v155;
  swift_release();
  v154[1] = v155[1];
  v156 = (_QWORD *)(((unint64_t)v154 + 23) & 0xFFFFFFFFFFFFFFF8);
  v157 = (_QWORD *)(((unint64_t)v155 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v156 = *v157;
  swift_release();
  v156[1] = v157[1];
  v158 = (_QWORD *)(((unint64_t)v156 + 23) & 0xFFFFFFFFFFFFFFF8);
  v159 = (_QWORD *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v158 = *v159;
  swift_release();
  v158[1] = v159[1];
  v160 = ((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8;
  v161 = ((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8;
  v162 = *(_BYTE *)(v161 + 16);
  v163 = *(_QWORD *)v160;
  v164 = *(_QWORD *)(v160 + 8);
  v165 = *(_BYTE *)(v160 + 16);
  *(_OWORD *)v160 = *(_OWORD *)v161;
  *(_BYTE *)(v160 + 16) = v162;
  sub_1000A4230(v163, v164, v165);
  v166 = ((unint64_t)v158 + 47) & 0xFFFFFFFFFFFFFFF8;
  v167 = ((unint64_t)v159 + 47) & 0xFFFFFFFFFFFFFFF8;
  v168 = *(_BYTE *)(v167 + 16);
  v169 = *(_QWORD *)v166;
  v170 = *(_QWORD *)(v166 + 8);
  v171 = *(_BYTE *)(v166 + 16);
  *(_OWORD *)v166 = *(_OWORD *)v167;
  *(_BYTE *)(v166 + 16) = v168;
  sub_1000A4240(v169, v170, v171);
  return v80;
}

uint64_t sub_1004265D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  _BOOL8 v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t result;
  unint64_t v40;
  unsigned int v41;
  unint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;

  v55 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(v55 - 8);
  v4 = *(unsigned int *)(v3 + 84);
  if ((_DWORD)v4)
    v5 = v4 - 1;
  else
    v5 = 0;
  v50 = type metadata accessor for Artwork(0);
  v59 = *(_QWORD *)(v50 - 8);
  v6 = *(_DWORD *)(v59 + 84);
  v49 = type metadata accessor for Artwork.CropStyle(0);
  v58 = *(_QWORD *)(v49 - 8);
  v7 = *(unsigned int *)(v58 + 84);
  v8 = v7 - 1;
  if (!(_DWORD)v7)
    v8 = 0;
  v51 = v8;
  v52 = v6;
  if (v8 <= v6)
    v8 = v6;
  v9 = v8 == 0;
  v54 = v8;
  v10 = v8 != 0;
  v11 = v8 - 1;
  if (!v10)
    v11 = 0;
  v56 = v11;
  if (v5 <= v11)
    v12 = v11;
  else
    v12 = v5;
  v48 = type metadata accessor for Playlist.Variant(0);
  v13 = *(_QWORD *)(v48 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if ((_DWORD)v14)
    v15 = v14 - 1;
  else
    v15 = 0;
  v16 = v15 - 10;
  if (v15 <= 9)
    v16 = 0;
  v53 = v16;
  if (v12 > v16)
    v16 = v12;
  if (v16 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16;
  v18 = *(_QWORD *)(sub_100007E8C(&qword_1011A3C78) - 8);
  v19 = *(_QWORD *)(v18 + 64);
  if (v19 <= 0x10)
    LODWORD(v19) = 16;
  v57 = v19;
  v20 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  if (*(_QWORD *)(v20 + 64) <= 8uLL)
    LODWORD(v21) = 8;
  else
    v21 = *(_QWORD *)(v20 + 64);
  if ((_DWORD)v4)
    v22 = *(_QWORD *)(v3 + 64);
  else
    v22 = *(_QWORD *)(v3 + 64) + 1;
  if ((_DWORD)v7)
    v23 = v9;
  else
    v23 = v9 + 1;
  v24 = *(_QWORD *)(v13 + 64);
  if (!(_DWORD)v14)
    ++v24;
  v25 = v24;
  if (v15 <= 9)
  {
    if (v24 <= 3)
    {
      v27 = (~(-1 << (8 * v24)) - v15 + 10) >> (8 * v24);
      v28 = v27 != 0;
      if (v27 >= 0xFF)
        v28 = 2;
      if (v27 <= 0xFFFE)
        v26 = v28;
      else
        v26 = 4;
    }
    else
    {
      v26 = 1;
    }
    v25 = v26 + v24;
  }
  if (!a2)
    return 0;
  v29 = *(_DWORD *)(v58 + 80);
  v30 = *(_DWORD *)(v58 + 80) | *(unsigned __int8 *)(v59 + 80);
  v31 = *(_QWORD *)(v59 + 64) + v29;
  v32 = *(unsigned __int8 *)(v13 + 80);
  v33 = v23 + *(_QWORD *)(v58 + 64) + (v31 & ~v29);
  if (v17 < a2)
  {
    v34 = ((((((((((((v21
                    + (((*(_DWORD *)(v20 + 80) & 0xF8 | 7)
                      + ((v57
                        + (((*(_DWORD *)(v18 + 80) & 0xF8 | 7)
                          + ((((((((v33 + v32 + ((v30 + ((v22 + 7) & 0xFFFFFFF8) + 16) & ~(_DWORD)v30)) & ~(_DWORD)v32)
                                + v25
                                + 7) & 0xFFFFFFF8)
                              + 15) & 0xFFFFFFF8)
                            + 19) & 0xFFFFFFF8)
                          + 8) & ~(*(_DWORD *)(v18 + 80) & 0xF8 | 7))
                        + 8) & 0xFFFFFFF8)
                      + 16) & ~(*(_DWORD *)(v20 + 80) & 0xF8 | 7))
                    + 24) & 0xFFFFFFF8)
                  + 23) & 0xFFFFFFF8)
                + 47) & 0xFFFFFFF8)
              + 23) & 0xFFFFFFF8)
            + 23) & 0xFFFFFFF8)
          + 47) & 0xFFFFFFF8)
        + 17;
    if (v34 < 4)
      v35 = ((a2 - v17 + 255) >> (8 * v34)) + 1;
    else
      v35 = 2;
    if (v35 >= 0x10000)
      v36 = 4;
    else
      v36 = 2;
    if (v35 < 0x100)
      v36 = 1;
    if (v35 >= 2)
      v37 = v36;
    else
      v37 = 0;
    __asm { BR              X7 }
  }
  if (v5 == v17)
  {
    if (v4 >= 2)
    {
      v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, v4, v55, a1);
LABEL_62:
      if (v38 >= 2)
        return v38 - 1;
      else
        return 0;
    }
    return 0;
  }
  v40 = (((a1 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + v30 + 16) & ~v30;
  if (v56 == v17)
  {
    if (v54 >= 2)
    {
      if (v52 >= v51)
      {
        v38 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v59 + 48))(v40, v52, v50, a1);
      }
      else
      {
        v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v58 + 48))((v31 + v40) & ~v29, v7, v49, a1);
        if (v41 >= 2)
          v38 = v41 - 1;
        else
          v38 = 0;
      }
      goto LABEL_62;
    }
    return 0;
  }
  v42 = (v40 + v32 + v33) & ~v32;
  if (v53 == v17)
  {
    if (v14 < 2)
      return 0;
    v43 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 48))(v42, v14, v48, a1);
    v10 = v43 >= 0xB;
    result = v43 - 11;
    if ((_DWORD)result == 0 || !v10)
      return 0;
  }
  else
  {
    if (v15 <= 9)
    {
      if (v24 <= 3)
      {
        v45 = (~(-1 << (8 * v24)) - v15 + 10) >> (8 * v24);
        v46 = v45 != 0;
        if (v45 >= 0xFF)
          v46 = 2;
        if (v45 <= 0xFFFE)
          v44 = v46;
        else
          v44 = 4;
      }
      else
      {
        v44 = 1;
      }
      v24 += v44;
    }
    v47 = *(_QWORD *)((((((v42 + v24 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFF8);
    if (v47 >= 0xFFFFFFFF)
      LODWORD(v47) = -1;
    return (v47 + 1);
  }
  return result;
}

void sub_100426AB4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  _BOOL8 v32;
  BOOL v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unint64_t v42;
  unsigned int v44;

  v4 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  v7 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for Artwork.CropStyle(0) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = v11;
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  if (v6 <= v13)
    v6 = v13;
  v14 = *(_QWORD *)(type metadata accessor for Playlist.Variant(0) - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15)
    v16 = v15 - 1;
  else
    v16 = 0;
  v17 = v16 - 10;
  if (v16 <= 9)
    v17 = 0;
  if (v6 > v17)
    v17 = v6;
  if (v17 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  v44 = v17;
  v18 = *(_QWORD *)(sub_100007E8C(&qword_1011A3C78) - 8);
  v19 = *(_QWORD *)(v18 + 64);
  if (v19 <= 0x10)
    v19 = 16;
  v42 = v19;
  v20 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  if (*(_QWORD *)(v20 + 64) <= 8uLL)
    v21 = 8;
  else
    v21 = *(_QWORD *)(v20 + 64);
  if (v5)
    v22 = *(_QWORD *)(v4 + 64);
  else
    v22 = *(_QWORD *)(v4 + 64) + 1;
  v23 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v23;
  v24 = *(_DWORD *)(v9 + 80);
  v25 = *(_QWORD *)(v7 + 64) + v24;
  if (v12)
    v26 = (v25 & ~(unint64_t)v24) + v23;
  else
    v26 = (v25 & ~(unint64_t)v24) + v23 + 1;
  if (v15)
    v27 = *(_QWORD *)(v14 + 64);
  else
    v27 = *(_QWORD *)(v14 + 64) + 1;
  v29 = v27;
  if (v16 <= 9)
  {
    if (v27 <= 3)
    {
      v31 = (~(-1 << (8 * v27)) - v16 + 10) >> (8 * v27);
      if (v31 > 0xFFFE)
      {
        v30 = 4;
      }
      else
      {
        v32 = v31 != 0;
        v33 = v31 >= 0xFF;
        v30 = 2;
        if (!v33)
          v30 = v32;
      }
    }
    else
    {
      v30 = 1;
    }
    v29 = v30 + v27;
  }
  v28 = v24 | *(unsigned __int8 *)(v7 + 80);
  v34 = (((((((v26 + *(unsigned __int8 *)(v14 + 80) + ((v28 + ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v28)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
           + v29
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 19) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  v36 = *(_DWORD *)(v20 + 80) & 0xF8 | 7;
  v37 = ((((((((((((v21 + ((v36 + ((v42 + ((v35 + v34 + 8) & ~v35) + 8) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v36) + 24) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 47) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  if (v44 >= a3)
  {
    v40 = 0;
  }
  else
  {
    if (v37 <= 3)
      v38 = ((a3 - v44 + 255) >> (8 * v37)) + 1;
    else
      v38 = 2;
    if (v38 >= 0x10000)
      v39 = 4;
    else
      v39 = 2;
    if (v38 < 0x100)
      v39 = 1;
    if (v38 >= 2)
      v40 = v39;
    else
      v40 = 0;
  }
  if (v44 < a2)
  {
    if (v37 >= 4)
      v41 = ~v44 + a2;
    else
      v41 = (~(_BYTE)v44 + a2);
    bzero(a1, v37);
    if ((_DWORD)v37 == 1)
      *a1 = v41;
    else
      *(_DWORD *)a1 = v41;
    __asm { BR              X10 }
  }
  __asm { BR              X3 }
}

void sub_100426E40()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x100427130);
}

void sub_100426E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  *(_DWORD *)(a1 + v6) = 0;
  if (a6)
    JUMPOUT(0x100426E50);
  JUMPOUT(0x100427130);
}

void sub_100426F10()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x100427130);
}

void sub_100426F18()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x100427130);
}

void sub_100426F20()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x100427130);
}

uint64_t sub_100426F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  *(_WORD *)(a1 + v12) = 0;
  if (!a6)
    goto LABEL_11;
  if (v17 != v14)
  {
    if (v16 != v14)
      JUMPOUT(0x100426F34);
    if (a6 + 1 <= v13)
      JUMPOUT(0x100426FB4);
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v7 = v8;
      else
        v7 = 4;
      bzero((void *)((((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & v11), v8);
      __asm { BR              X10 }
    }
LABEL_11:
    JUMPOUT(0x100427130);
  }
  return (*(uint64_t (**)(void))(v15 + 56))();
}

void sub_100426FAC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x100427130);
}

void sub_10042702C()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x100427130);
}

void sub_1004270C0()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x100427130);
}

void sub_1004270D0()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x100427130);
}

void sub_1004270D8()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x100427130);
}

void sub_100427150()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x100427130);
}

void sub_100427158()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x100427130);
}

void sub_100427168()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x100427130);
}

void sub_100427170()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x100427130);
}

void sub_100427178()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x100427130);
}

void sub_100427188()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x100427130);
}

uint64_t type metadata accessor for HorizontalCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalCell);
}

uint64_t type metadata accessor for HorizontalCellSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B3170;
  if (!qword_1011B3170)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HorizontalCellSource);
  return result;
}

uint64_t *sub_1004271DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = sub_100007E8C(&qword_1011A3C78);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_retain();
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_10042729C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = sub_100007E8C(&qword_1011A3C78);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_1004272F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = sub_100007E8C(&qword_1011A3C78);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_retain();
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_100427384(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for HorizontalCellSource);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = sub_100007E8C(&qword_1011A3C78);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_retain();
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_100427430(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = sub_100007E8C(&qword_1011A3C78);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1004274C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for HorizontalCellSource);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = sub_100007E8C(&qword_1011A3C78);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_100427568(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  sub_1004275DC(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
  }
}

void sub_1004275DC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_1011B3180)
  {
    v4[0] = type metadata accessor for TitledSection(255);
    v4[1] = type metadata accessor for Song(255);
    v4[2] = &protocol witness table for TitledSection;
    v4[3] = &protocol witness table for Song;
    v2 = type metadata accessor for MusicLibrarySectionedRequest(a1, v4);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1011B3180);
  }
}

uint64_t sub_10042765C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA0148, 1);
}

uint64_t sub_100427690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for HorizontalCell(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  v11 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v4 + v8, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v4 + v8, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(v10 + v6[9] + 8));
  v12 = v10 + v6[10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    v15 = v12 + *(int *)(v13 + 20);
    v16 = type metadata accessor for Artwork.CropStyle(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  v18 = v9 + v8;
  v19 = v10 + v6[11];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 10, v20))
  {
    v21 = type metadata accessor for Playlist.Variant(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v21);
  }
  swift_release();
  v23 = v10 + v6[18];
  v24 = type metadata accessor for HorizontalCellSource(0);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = sub_100007E8C(&qword_1011A3C78);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  }
  else
  {
    swift_release();
  }
  v26 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v27 = v10 + v6[20];
  v28 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v27, v29);
  }
  else
  {
    swift_release();
  }
  sub_1000A4224(*(id *)(v10 + v6[21]), *(_BYTE *)(v10 + v6[21] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v10 + v6[24]), *(_QWORD *)(v10 + v6[24] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(v10 + v6[28]), *(_QWORD *)(v10 + v6[28] + 8), *(_BYTE *)(v10 + v6[28] + 16));
  sub_1000A4240(*(_QWORD *)(v10 + v6[29]), *(_QWORD *)(v10 + v6[29] + 8), *(_BYTE *)(v10 + v6[29] + 16));
  v30 = v4 + v26;
  v31 = *(_QWORD *)(v4 + v26 + 8);
  if (v31)
  {
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(*(_QWORD *)(v30 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(v30 + 40));

    swift_release();
  }
  return swift_deallocObject(v4, v26 + 80);
}

uint64_t sub_1004279B4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(type metadata accessor for HorizontalCell(0, v4, v5, a1) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_100416B34(v2 + v7, v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8), v4, v5, a2);
}

uint64_t sub_100427A38()
{
  return 16;
}

__n128 sub_100427A44(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100427A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10041D53C(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100427A5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3228;
  if (!qword_1011B3228)
  {
    v1 = sub_100044B54(&qword_1011B31F8);
    sub_100427AE8(&qword_1011B3230, &qword_1011A2C78, &qword_1011B3238, &qword_1011A2C70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3228);
  }
  return result;
}

uint64_t sub_100427AE8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(a3, a4, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100427B70()
{
  return sub_10005610C(&qword_1011B3268, &qword_1011B3270, (void (*)(void))sub_1003AB478);
}

uint64_t sub_100427B94(uint64_t a1)
{
  uint64_t *v1;

  return sub_10041BCD4(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_100427BA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B32A8;
  if (!qword_1011B32A8)
  {
    v1 = sub_100044B54(&qword_1011B3288);
    sub_1003DBD78();
    sub_100427AE8((unint64_t *)&qword_1011B0C50, &qword_1011A2C88, &qword_1011B0C58, &qword_1011A2C80);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B32A8);
  }
  return result;
}

uint64_t sub_100427C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119F7C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100427C84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Text.TruncationMode(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.truncationMode.setter(v4);
}

unint64_t sub_100427D08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011B3328;
  if (!qword_1011B3328)
  {
    v1 = sub_100044B54(&qword_1011A2CA0);
    v2[0] = sub_100044B54(&qword_1011A0FA0);
    v2[1] = &type metadata for HierarchicalShapeStyle;
    v2[2] = sub_1000F571C();
    v2[3] = &protocol witness table for HierarchicalShapeStyle;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.playableForegroundStyle<A>(_:isPlayable:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3328);
  }
  return result;
}

uint64_t sub_100427DB0()
{
  return EnvironmentValues.truncationMode.getter();
}

unint64_t sub_100427DD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3340;
  if (!qword_1011B3340)
  {
    v1 = sub_100044B54(&qword_1011B32E0);
    sub_1001C9648();
    sub_100049F28(&qword_1011B3348, &qword_1011B32D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3340);
  }
  return result;
}

uint64_t sub_100427E58(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100427EA4 + 4 * byte_100EBA520[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100427ED8 + 4 * byte_100EBA51B[v4]))();
}

uint64_t sub_100427ED8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100427EE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100427EE8);
  return result;
}

uint64_t sub_100427EF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100427EFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100427F00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100427F08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for HorizontalCell.FavoritePlacement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalCell.FavoritePlacement);
}

uint64_t sub_100427F20()
{
  return sub_100049F28(&qword_1011B33D8, &qword_1011B33E0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t sub_100427F4C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EBA9E8, a1);
}

uint64_t assignWithCopy for ParagraphView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_retain(v8);
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for ParagraphView()
{
  return &type metadata for ParagraphView;
}

uint64_t sub_100427FC4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA0198, 1);
}

uint64_t sub_100427FD4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  char v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v10;

  v0 = sub_100007E8C(&qword_1011B3410);
  v1 = State.wrappedValue.getter(&v10, v0);
  v2 = v10;
  v3 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *v10) + 0x278))(v1);

  if ((v3 & 1) == 0)
    return 0;
  v4 = State.wrappedValue.getter(&v10, v0);
  v5 = v10;
  v6 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *v10) + 0x2A8))(v4);
  v8 = v7;

  if ((v8 & 1) != 0)
    return 6;
  else
    return v6;
}

uint64_t sub_1004280AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _OWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;

  v65 = a3;
  v5 = sub_100007E8C(&qword_1011B2920);
  __chkstk_darwin(v5);
  v72 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - v8;
  v81 = a1;
  v82 = a2;
  v10 = sub_100007E8C(&qword_1011B3410);
  v11 = State.wrappedValue.getter(&v74, v10);
  v12 = (void *)v74;
  v13 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *(_QWORD *)v74) + 0x128))(v11);
  v15 = v14;

  swift_bridgeObjectRelease(v15);
  v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v16 = v13 & 0xFFFFFFFFFFFFLL;
  v71 = v9;
  if (v16)
  {
    v81 = a1;
    v82 = a2;
    v17 = State.wrappedValue.getter(&v74, v10);
    v18 = (void *)v74;
    v19 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *(_QWORD *)v74) + 0x128))(v17);
    v21 = v20;

    v81 = v19;
    v82 = v21;
    v22 = sub_100055B68();
    v23 = Text.init<A>(_:)(&v81, &type metadata for String, v22);
    v25 = v24;
    v27 = v26;
    v29 = v28 & 1;
    Text.with(style:)(3, v23, v24, v28 & 1, v26, (uint64_t)v9);
    sub_100055BAC(v23, v25, v29);
    swift_bridgeObjectRelease(v27);
    v30 = sub_100007E8C(&qword_10119EBA0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 0, 1, v30);
  }
  else
  {
    v31 = sub_100007E8C(&qword_10119EBA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
  }
  v81 = a1;
  v82 = a2;
  v32 = State.wrappedValue.getter(&v74, v10);
  v33 = (void *)v74;
  v34 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *(_QWORD *)v74) + 0x128))(v32);
  v36 = v35;

  __chkstk_darwin(v37);
  *(&v58 - 2) = a1;
  *(&v58 - 1) = a2;
  v38 = sub_100007E8C(&qword_1011A1028);
  v39 = sub_1000F5D8C();
  ExpandableTextView.init<>(title:buttonColor:_:)(v34, v36, 0, (uint64_t (*)(__n128))sub_100428678, v38, v39, (uint64_t)&v81);
  LOBYTE(v33) = v81;
  v60 = v81;
  v40 = v82;
  v59 = v82;
  v63 = v84;
  v64 = v83;
  v41 = v86;
  v43 = v88;
  v42 = v89;
  v66 = v90;
  v67 = v85;
  v61 = v91;
  v62 = v87;
  v69 = v93;
  v70 = v92;
  v68 = sub_100427FD4();
  LOBYTE(v34) = v44;
  KeyPath = swift_getKeyPath(&unk_100EBAA88);
  v73 = v34 & 1;
  v46 = v72;
  sub_10004A160((uint64_t)v71, v72, &qword_1011B2920);
  LOBYTE(v38) = v73;
  v47 = v46;
  v48 = v65;
  sub_10004A160(v47, v65, &qword_1011B2920);
  v49 = (_OWORD *)(v48 + *(int *)(sub_100007E8C(&qword_1011B3418) + 48));
  LOBYTE(v74) = (_BYTE)v33;
  v51 = v63;
  v50 = v64;
  *((_QWORD *)&v74 + 1) = v40;
  *(_QWORD *)&v75 = v64;
  *((_QWORD *)&v75 + 1) = v63;
  *(_QWORD *)&v76 = v67;
  v53 = v61;
  v52 = v62;
  *((_QWORD *)&v76 + 1) = v41;
  *(_QWORD *)&v77 = v62;
  *((_QWORD *)&v77 + 1) = v43;
  *(_QWORD *)&v78 = v42;
  *((_QWORD *)&v78 + 1) = v66;
  *(_QWORD *)&v79 = v61;
  *((_QWORD *)&v79 + 1) = v70;
  *(_QWORD *)&v80[0] = v69;
  *((_QWORD *)&v80[0] + 1) = KeyPath;
  *(_QWORD *)&v80[1] = v68;
  BYTE8(v80[1]) = v38;
  v54 = v75;
  *v49 = v74;
  v49[1] = v54;
  v55 = v79;
  v49[4] = v78;
  v49[5] = v55;
  v49[6] = v80[0];
  *(_OWORD *)((char *)v49 + 105) = *(_OWORD *)((char *)v80 + 9);
  v56 = v77;
  v49[2] = v76;
  v49[3] = v56;
  sub_100428688(&v74);
  sub_10004FF60((uint64_t)v71, &qword_1011B2920);
  LOBYTE(v81) = v60;
  v82 = v59;
  v83 = v50;
  v84 = v51;
  v85 = v67;
  v86 = v41;
  v87 = v52;
  v88 = v43;
  v89 = v42;
  v90 = v66;
  v91 = v53;
  v92 = v70;
  v93 = v69;
  v94 = KeyPath;
  v95 = v68;
  v96 = v38;
  sub_100428730(&v81);
  return sub_10004FF60(v72, &qword_1011B2920);
}

uint64_t sub_1004284D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  v2 = sub_100007E8C(&qword_1011B3410);
  v3 = State.wrappedValue.getter(&v11, v2);
  v4 = v11;
  v5 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *v11) + 0x158))(v3);
  v7 = v6;

  v9 = static Font.body.getter(v8);
  result = swift_getKeyPath(&unk_100EBAAB8);
  *a1 = v5;
  a1[1] = v7;
  a1[2] = result;
  a1[3] = v9;
  return result;
}

uint64_t sub_100428560@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = sub_100007E8C(&qword_1011B33F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v8);
  *((_QWORD *)v5 + 1) = 0x4024000000000000;
  v5[16] = 0;
  v9 = sub_100007E8C(&qword_1011B3400);
  v10 = sub_1004280AC(v7, v6, (uint64_t)&v5[*(int *)(v9 + 44)]);
  v11 = *(double *)&qword_1011CCD38;
  LOBYTE(v6) = static Edge.Set.all.getter(v10);
  v12 = EdgeInsets.init(_all:)(v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_10004A160((uint64_t)v5, a1, &qword_1011B33F8);
  v19 = a1 + *(int *)(sub_100007E8C(&qword_1011B3408) + 36);
  *(_BYTE *)v19 = v6;
  *(double *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  return sub_10004FF60((uint64_t)v5, &qword_1011B33F8);
}

uint64_t sub_100428678@<X0>(uint64_t *a1@<X8>)
{
  return sub_1004284D0(a1);
}

_QWORD *sub_100428688(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[9];
  v8 = a1[10];
  v9 = a1[11];
  v10 = a1[13];
  swift_retain(a1[12]);
  swift_retain(v10);
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

_QWORD *sub_100428730(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[9];
  v8 = a1[10];
  v9 = a1[11];
  v10 = a1[12];
  swift_release(a1[13]);
  swift_release(v8);
  swift_bridgeObjectRelease(v7);
  swift_release(v5);
  swift_bridgeObjectRelease(v4);
  swift_release(v2);
  swift_bridgeObjectRelease(v3);
  swift_release(v6);
  swift_release(v9);
  swift_release(v10);
  return a1;
}

unint64_t sub_1004287E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3420;
  if (!qword_1011B3420)
  {
    v1 = sub_100044B54(&qword_1011B3408);
    sub_100049F28(&qword_1011B3428, &qword_1011B33F8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3420);
  }
  return result;
}

uint64_t sub_100428868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100007E8C(&qword_1011A3B78);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for Composer(0);
  v6 = sub_100048748(&qword_1011A3B80, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, v6);
  v7 = sub_100049F28(&qword_1011A3B88, &qword_1011A3B78, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v8 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

unint64_t sub_100428964(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v74;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    v14 = *(_BYTE *)(a2 + 56);
    sub_100154A5C(v10, v11, v12, v13, v14);
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = v14;
    v15 = *(int *)(a3 + 24);
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    v18 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v18);
    *v16 = *v17;
    if (EnumCaseMultiPayload == 1)
    {
      v74 = v18;
      v20 = (int *)type metadata accessor for Library.Context(0);
      v21 = v20[5];
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = type metadata accessor for Album(0);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v25 + 48);
      v27 = swift_retain();
      if (v26(v23, 1, v24, v27))
      {
        v28 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v33 = v20[6];
      v34 = (char *)v16 + v33;
      v35 = (char *)v17 + v33;
      v36 = type metadata accessor for Artist(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v20[7];
      v40 = (char *)v16 + v39;
      v41 = (char *)v17 + v39;
      v42 = type metadata accessor for Composer(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v20[8];
      v46 = (char *)v16 + v45;
      v47 = (char *)v17 + v45;
      v48 = type metadata accessor for Genre(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C(&qword_10119ED08);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v20[9];
      v52 = (char *)v16 + v51;
      v53 = (char *)v17 + v51;
      v54 = type metadata accessor for Playlist(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      v57 = v20[10];
      v58 = (char *)v16 + v57;
      v59 = (char *)v17 + v57;
      v60 = type metadata accessor for TVShow(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        v62 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      v63 = v20[11];
      v64 = (char *)v16 + v63;
      v65 = (char *)v17 + v63;
      v66 = type metadata accessor for TVSeason(0);
      v67 = *(_QWORD *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        v68 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
      *((_BYTE *)v16 + v20[12]) = *((_BYTE *)v17 + v20[12]);
      *((_BYTE *)v16 + v20[13]) = *((_BYTE *)v17 + v20[13]);
      *((_BYTE *)v16 + v20[14]) = *((_BYTE *)v17 + v20[14]);
      v69 = v20[15];
      v70 = (_QWORD *)((char *)v16 + v69);
      v71 = (_QWORD *)((char *)v17 + v69);
      v72 = v71[1];
      *v70 = *v71;
      v70[1] = v72;
      *(_QWORD *)((char *)v16 + v20[16]) = *(_QWORD *)((char *)v17 + v20[16]);
      *((_BYTE *)v16 + v20[17]) = *((_BYTE *)v17 + v20[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = v16;
      v31 = v74;
      v32 = 1;
    }
    else
    {
      swift_retain();
      v30 = v16;
      v31 = v18;
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v31, v32);
  }
  return a1;
}

double sub_100428EA4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  double result;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v3 = a1;
  sub_1000A6174(*a1, a1[1]);
  sub_1002BD420(v3[3], v3[4], v3[5], v3[6], *((_BYTE *)v3 + 56));
  v4 = (char *)v3 + *(int *)(a2 + 24);
  v5 = sub_100007E8C(&qword_10119F030);
  LODWORD(v3) = swift_getEnumCaseMultiPayload(v4, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if ((_DWORD)v3 == 1)
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = &v4[v7[5]];
    v9 = type metadata accessor for Album(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = &v4[v7[6]];
    v12 = type metadata accessor for Artist(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    v14 = &v4[v7[7]];
    v15 = type metadata accessor for Composer(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    v17 = &v4[v7[8]];
    v18 = type metadata accessor for Genre(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    v20 = &v4[v7[9]];
    v21 = type metadata accessor for Playlist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
    v23 = &v4[v7[10]];
    v24 = type metadata accessor for TVShow(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    v26 = &v4[v7[11]];
    v27 = type metadata accessor for TVSeason(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[v7[15] + 8]);
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)&v4[v7[16]]).n128_u64[0];
  }
  return result;
}

uint64_t sub_100429120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v70;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_BYTE *)(a2 + 56);
  sub_100154A5C(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v13;
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
  *v15 = *v16;
  if (EnumCaseMultiPayload == 1)
  {
    v70 = v17;
    v19 = (int *)type metadata accessor for Library.Context(0);
    v20 = v19[5];
    v21 = (char *)v15 + v20;
    v22 = (char *)v16 + v20;
    v23 = type metadata accessor for Album(0);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v24 + 48);
    v26 = swift_retain();
    if (v25(v22, 1, v23, v26))
    {
      v27 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v29 = v19[6];
    v30 = (char *)v15 + v29;
    v31 = (char *)v16 + v29;
    v32 = type metadata accessor for Artist(0);
    v33 = *(_QWORD *)(v32 - 8);
    v17 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v19[7];
    v36 = (char *)v15 + v35;
    v37 = (char *)v16 + v35;
    v38 = type metadata accessor for Composer(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v19[8];
    v42 = (char *)v15 + v41;
    v43 = (char *)v16 + v41;
    v44 = type metadata accessor for Genre(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C(&qword_10119ED08);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v19[9];
    v48 = (char *)v15 + v47;
    v49 = (char *)v16 + v47;
    v50 = type metadata accessor for Playlist(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v53 = v19[10];
    v54 = (char *)v15 + v53;
    v55 = (char *)v16 + v53;
    v56 = type metadata accessor for TVShow(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v59 = v19[11];
    v60 = (char *)v15 + v59;
    v61 = (char *)v16 + v59;
    v62 = type metadata accessor for TVSeason(0);
    v63 = *(_QWORD *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
    {
      v64 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
    }
    *((_BYTE *)v15 + v19[12]) = *((_BYTE *)v16 + v19[12]);
    *((_BYTE *)v15 + v19[13]) = *((_BYTE *)v16 + v19[13]);
    *((_BYTE *)v15 + v19[14]) = *((_BYTE *)v16 + v19[14]);
    v65 = v19[15];
    v66 = (_QWORD *)((char *)v15 + v65);
    v67 = (_QWORD *)((char *)v16 + v65);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    *(_QWORD *)((char *)v15 + v19[16]) = *(_QWORD *)((char *)v16 + v19[16]);
    *((_BYTE *)v15 + v19[17]) = *((_BYTE *)v16 + v19[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = 1;
  }
  else
  {
    swift_retain();
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v28);
  return a1;
}

uint64_t sub_10042962C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v76;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1000A6174(v9, v10);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_BYTE *)(a2 + 56);
  sub_100154A5C(v11, v12, v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 56) = v15;
  sub_1002BD420(v16, v17, v18, v19, v20);
  if (a1 != a2)
  {
    v21 = *(int *)(a3 + 24);
    v22 = (_QWORD *)(a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    sub_10004FF60(a1 + v21, &qword_10119F030);
    v24 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v24);
    *v22 = *v23;
    if (EnumCaseMultiPayload == 1)
    {
      v76 = v24;
      v26 = (int *)type metadata accessor for Library.Context(0);
      v27 = v26[5];
      v28 = (char *)v22 + v27;
      v29 = (char *)v23 + v27;
      v30 = type metadata accessor for Album(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v31 + 48);
      v33 = swift_retain();
      if (v32(v29, 1, v30, v33))
      {
        v34 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v36 = v26[6];
      v37 = (char *)v22 + v36;
      v38 = (char *)v23 + v36;
      v39 = type metadata accessor for Artist(0);
      v40 = *(_QWORD *)(v39 - 8);
      v24 = v76;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        v41 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      v42 = v26[7];
      v43 = (char *)v22 + v42;
      v44 = (char *)v23 + v42;
      v45 = type metadata accessor for Composer(0);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        v47 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      v48 = v26[8];
      v49 = (char *)v22 + v48;
      v50 = (char *)v23 + v48;
      v51 = type metadata accessor for Genre(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_100007E8C(&qword_10119ED08);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v54 = v26[9];
      v55 = (char *)v22 + v54;
      v56 = (char *)v23 + v54;
      v57 = type metadata accessor for Playlist(0);
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        v59 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      v60 = v26[10];
      v61 = (char *)v22 + v60;
      v62 = (char *)v23 + v60;
      v63 = type metadata accessor for TVShow(0);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        v65 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      v66 = v26[11];
      v67 = (char *)v22 + v66;
      v68 = (char *)v23 + v66;
      v69 = type metadata accessor for TVSeason(0);
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        v71 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      *((_BYTE *)v22 + v26[12]) = *((_BYTE *)v23 + v26[12]);
      *((_BYTE *)v22 + v26[13]) = *((_BYTE *)v23 + v26[13]);
      *((_BYTE *)v22 + v26[14]) = *((_BYTE *)v23 + v26[14]);
      v72 = v26[15];
      v73 = (_QWORD *)((char *)v22 + v72);
      v74 = (_QWORD *)((char *)v23 + v72);
      *v73 = *v74;
      v73[1] = v74[1];
      *(_QWORD *)((char *)v22 + v26[16]) = *(_QWORD *)((char *)v23 + v26[16]);
      *((_BYTE *)v22 + v26[17]) = *((_BYTE *)v23 + v26[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = 1;
    }
    else
    {
      swift_retain();
      v35 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v35);
  }
  return a1;
}

uint64_t sub_100429B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(int *)(a3 + 24);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    *v5 = *v6;
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v8[5];
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = v8[6];
    v16 = (char *)v5 + v15;
    v17 = (char *)v6 + v15;
    v18 = type metadata accessor for Artist(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = v8[7];
    v22 = (char *)v5 + v21;
    v23 = (char *)v6 + v21;
    v24 = type metadata accessor for Composer(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v27 = v8[8];
    v28 = (char *)v5 + v27;
    v29 = (char *)v6 + v27;
    v30 = type metadata accessor for Genre(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_10119ED08);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = v8[9];
    v34 = (char *)v5 + v33;
    v35 = (char *)v6 + v33;
    v36 = type metadata accessor for Playlist(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v39 = v8[10];
    v40 = (char *)v5 + v39;
    v41 = (char *)v6 + v39;
    v42 = type metadata accessor for TVShow(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v45 = v8[11];
    v46 = (char *)v5 + v45;
    v47 = (char *)v6 + v45;
    v48 = type metadata accessor for TVSeason(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    *((_BYTE *)v5 + v8[12]) = *((_BYTE *)v6 + v8[12]);
    *((_BYTE *)v5 + v8[13]) = *((_BYTE *)v6 + v8[13]);
    *((_BYTE *)v5 + v8[14]) = *((_BYTE *)v6 + v8[14]);
    *(_OWORD *)((char *)v5 + v8[15]) = *(_OWORD *)((char *)v6 + v8[15]);
    *(_QWORD *)((char *)v5 + v8[16]) = *(_QWORD *)((char *)v6 + v8[16]);
    *((_BYTE *)v5 + v8[17]) = *((_BYTE *)v6 + v8[17]);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10042A02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  v9 = *(_BYTE *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v9;
  sub_1002BD420(v10, v11, v12, v13, v14);
  if (a1 != a2)
  {
    v15 = *(int *)(a3 + 24);
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    sub_10004FF60(a1 + v15, &qword_10119F030);
    v18 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      *v16 = *v17;
      v19 = (int *)type metadata accessor for Library.Context(0);
      v20 = v19[5];
      v21 = (char *)v16 + v20;
      v22 = (char *)v17 + v20;
      v23 = type metadata accessor for Album(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v19[6];
      v27 = (char *)v16 + v26;
      v28 = (char *)v17 + v26;
      v29 = type metadata accessor for Artist(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v19[7];
      v33 = (char *)v16 + v32;
      v34 = (char *)v17 + v32;
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v19[8];
      v39 = (char *)v16 + v38;
      v40 = (char *)v17 + v38;
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v19[9];
      v45 = (char *)v16 + v44;
      v46 = (char *)v17 + v44;
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v19[10];
      v51 = (char *)v16 + v50;
      v52 = (char *)v17 + v50;
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v19[11];
      v57 = (char *)v16 + v56;
      v58 = (char *)v17 + v56;
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      *((_BYTE *)v16 + v19[12]) = *((_BYTE *)v17 + v19[12]);
      *((_BYTE *)v16 + v19[13]) = *((_BYTE *)v17 + v19[13]);
      *((_BYTE *)v16 + v19[14]) = *((_BYTE *)v17 + v19[14]);
      *(_OWORD *)((char *)v16 + v19[15]) = *(_OWORD *)((char *)v17 + v19[15]);
      *(_QWORD *)((char *)v16 + v19[16]) = *(_QWORD *)((char *)v17 + v19[16]);
      *((_BYTE *)v16 + v19[17]) = *((_BYTE *)v17 + v19[17]);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10042A524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042A530);
}

uint64_t sub_10042A530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_10042A5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042A5B4);
}

uint64_t sub_10042A5B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t _s13ComposersViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B3488;
  if (!qword_1011B3488)
    return swift_getSingletonMetadata(a1, &_s13ComposersViewVMn);
  return result;
}

void sub_10042A664(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EBAB00;
  v4[1] = &unk_100EBAB18;
  sub_1002ABB08(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_10042A6E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA01E8, 1);
}

uint64_t sub_10042A6F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84[16];
  uint64_t *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;

  v81 = a1;
  v79 = sub_100007E8C(&qword_1011B34C8);
  __chkstk_darwin(v79);
  v80 = (uint64_t)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011B34D0);
  __chkstk_darwin(v78);
  v77 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011B34D8);
  __chkstk_darwin(v4);
  v76 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Library.Context(0);
  v7 = __chkstk_darwin(v6);
  v75 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentMarginPlacement(0, v7);
  v69 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B34E0);
  v68 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011B34E8);
  v70 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011B34F0);
  v73 = *(_QWORD *)(v18 - 8);
  v74 = v18;
  __chkstk_darwin(v18);
  v72 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011B34F8);
  __chkstk_darwin(v83);
  v82 = (uint64_t)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v1;
  v85 = v1;
  v22 = static Axis.Set.vertical.getter(v21);
  v23 = sub_100007E8C(&qword_1011B3500);
  v24 = sub_10005610C(&qword_1011B3508, &qword_1011B3500, (void (*)(void))sub_10042B9F4);
  v25 = ScrollView.init(_:showsIndicators:content:)(v22, 1, sub_10042B9EC, v84, v23, v24);
  v26 = static Edge.Set.top.getter(v25);
  static ContentMarginPlacement.scrollIndicators.getter();
  v27 = sub_100049F28(&qword_1011B3530, &qword_1011B34E0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  View.contentMargins(_:_:for:)(v26, 0, 0, v11, v12, v27);
  v28 = *(void (**)(char *, uint64_t))(v69 + 8);
  v28(v11, v9);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v14, v12);
  v30 = static Edge.Set.bottom.getter(v29);
  if (qword_10119C8B0 != -1)
    swift_once(&qword_10119C8B0, sub_10085F8B4);
  v31 = qword_10124DA28;
  static ContentMarginPlacement.scrollIndicators.getter();
  v87 = v12;
  v88 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v87, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v33 = v72;
  View.contentMargins(_:_:for:)(v30, v31, 0, v11, v15, OpaqueTypeConformance2);
  v28(v11, v9);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v15);
  v34 = v71;
  v35 = *v71;
  v36 = v71[1];
  v37 = *((unsigned __int8 *)v71 + 16);
  v38 = sub_100007E8C(&qword_1011B3538);
  v39 = sub_100049F28(&qword_1011B3540, &qword_1011B3538, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v70 = v38;
  v69 = v39;
  StateObject.wrappedValue.getter(v35, v36, v37, v38, v39);
  v86 = 0;
  static Binding.constant(_:)(&v87, &v86, &type metadata for Library.ContentFilterOption);
  v40 = v87;
  v41 = v88;
  LODWORD(v68) = v89;
  swift_retain();
  swift_retain();
  swift_retain();
  v43 = ObservedObject.init(wrappedValue:)(v42, v38, v39);
  v45 = v44;
  v46 = v73;
  v47 = v82;
  v48 = v33;
  v49 = v33;
  v50 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v82, v48, v74);
  swift_release();
  swift_release();
  v51 = swift_release();
  v52 = v47 + *(int *)(v83 + 36);
  *(_QWORD *)v52 = v43;
  *(_QWORD *)(v52 + 8) = v45;
  *(_QWORD *)(v52 + 16) = v40;
  *(_QWORD *)(v52 + 24) = v41;
  *(_BYTE *)(v52 + 32) = v68;
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v49, v50, v51);
  _s13ComposersViewVMa(0);
  v53 = v75;
  sub_10082460C(v75);
  v54 = v70;
  v55 = v69;
  StateObject.wrappedValue.getter(*v34, v34[1], *((unsigned __int8 *)v34 + 16), v70, v69);
  v57 = (uint64_t)v77;
  v56 = v78;
  v58 = (uint64_t)&v77[*(int *)(v78 + 36)];
  sub_10042BA78(v53, v58);
  v59 = (_QWORD *)(v58 + *(int *)(sub_100007E8C(&qword_1011B3548) + 36));
  swift_retain();
  *v59 = ObservedObject.init(wrappedValue:)(v60, v54, v55);
  v59[1] = v61;
  v62 = v82;
  sub_10004A160(v82, v57, &qword_1011B34F8);
  v63 = v80;
  sub_10004A160(v57, v80, &qword_1011B34D0);
  swift_storeEnumTagMultiPayload(v63, v79, 0);
  v64 = sub_10042BABC();
  v65 = sub_10042BB40();
  v66 = (uint64_t)v76;
  _ConditionalContent<>.init(storage:)(v63, v56, v83, v64, v65);
  sub_10004FF60(v57, &qword_1011B34D0);
  sub_100065228(v66, v81, &qword_1011B34D8);
  swift_release();
  sub_10022D14C(v53);
  return sub_10004FF60(v62, &qword_1011B34F8);
}

uint64_t sub_10042AD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  __int128 v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[16];
  uint64_t v40;
  _OWORD v41[2];
  char v42;
  _DWORD v43[10];

  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v4);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011B3528);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100007E8C(&qword_1011B3518);
  __chkstk_darwin(v11);
  v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = static HorizontalAlignment.leading.getter(v14);
  v40 = a1;
  v43[0] = 0;
  v16 = sub_100048748((unint64_t *)&qword_1011A0308, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(v43, v4, v16);
  v17 = sub_100007E8C(&qword_1011B3578);
  v18 = sub_10042BC3C();
  v19 = LazyVStack.init(alignment:spacing:pinnedViews:content:)(v15, 0, 1, v6, sub_10042BC34, v39, v17, v18);
  LOBYTE(v17) = static Edge.Set.horizontal.getter(v19);
  v20 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v13, v10, v7);
  v27 = (double *)&v13[*(int *)(v11 + 36)];
  *(_BYTE *)v27 = v17;
  v27[1] = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  *((_BYTE *)v27 + 40) = 0;
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  v28 = *(_OWORD *)(a1 + 40);
  v41[0] = *(_OWORD *)(a1 + 24);
  v41[1] = v28;
  v42 = *(_BYTE *)(a1 + 56);
  sub_100065228((uint64_t)v41, (uint64_t)v43, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  v29 = sub_100825088();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = sub_10006FDA8((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  LOBYTE(v17) = static Edge.Set.all.getter(v36);
  sub_10004A160((uint64_t)v13, a2, &qword_1011B3518);
  v37 = a2 + *(int *)(sub_100007E8C(&qword_1011B3500) + 36);
  *(_BYTE *)v37 = v17;
  *(double *)(v37 + 8) = v29;
  *(_QWORD *)(v37 + 16) = v31;
  *(_QWORD *)(v37 + 24) = v33;
  *(_QWORD *)(v37 + 32) = v35;
  *(_BYTE *)(v37 + 40) = 0;
  return sub_10004FF60((uint64_t)v13, &qword_1011B3518);
}

uint64_t sub_10042AFE8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;

  v4 = sub_100007E8C((uint64_t *)&unk_1011ACDF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B3578);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v13 = *((unsigned __int8 *)a1 + 16);
  v14 = sub_100007E8C(&qword_1011B3538);
  v15 = sub_100049F28(&qword_1011B3540, &qword_1011B3538, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  StateObject.wrappedValue.getter(v11, v12, v13, v14, v15);
  dispatch thunk of MusicAutoupdatingResponse.response.getter();
  swift_release();
  v16 = sub_100007E8C((uint64_t *)&unk_1011CF3F0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011ACDF0);
    v18 = _swiftEmptyArrayStorage;
  }
  else
  {
    v18 = (_QWORD *)MusicLibrarySectionedResponse.sections.getter(v16);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
  }
  v26 = v18;
  v19 = sub_100007E8C(&qword_1011B35D0);
  v20 = sub_100007E8C(&qword_1011B3590);
  v21 = sub_100049F28(&qword_1011B35D8, &qword_1011B35D0, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = sub_10042BCA0();
  v23 = sub_100049F28(&qword_1011B35E0, (uint64_t *)&unk_1011A3BB0, (uint64_t)&protocol conformance descriptor for MusicLibrarySection<A, B>);
  ForEach<>.init(_:content:)(&v26, sub_10042B224, 0, v19, &type metadata for MusicItemID, v20, v21, v22, v23);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

uint64_t sub_10042B224(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[4];
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100EBAB80);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3BB0);
  MusicLibrarySection.subscript.getter(KeyPath, v3);
  swift_release();
  v8[2] = a1;
  v4 = sub_100007E8C(&qword_1011B35A0);
  v5 = sub_1000A8D68();
  v6 = sub_10042BD18();
  return Section<>.init(header:content:)(&v9, sub_10042BE98, v8, &_s6HeaderVN, v4, v5, v6);
}

uint64_t sub_10042B2DC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_100007E8C((uint64_t *)&unk_1011ACE60);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3BB0);
  MusicLibrarySection.items.getter(v3, v4);
  v5 = sub_100007E8C(&qword_1011B35E8);
  v6 = sub_100049F28(&qword_1011B35F0, (uint64_t *)&unk_1011ACE60, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v7 = sub_100044B54(&qword_1011B35A8);
  v8 = type metadata accessor for PlainButtonStyle(255);
  v9 = sub_100044B54(&qword_1011B35B0);
  v10 = sub_10042BE10();
  v16 = v9;
  v17 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v12 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v16 = v7;
  v17 = v8;
  v18 = OpaqueTypeConformance2;
  v19 = v12;
  v13 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v14 = sub_100048748(&qword_1011B35F8, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  return ForEach<>.init(_:content:)(v2, sub_10042B484, 0, v0, &type metadata for MusicItemID, v5, v6, v13, v14);
}

uint64_t sub_10042B484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t v50;
  _QWORD v51[2];
  _OWORD v52[3];

  v48 = a2;
  v3 = type metadata accessor for PlainButtonStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v47 = v4;
  __chkstk_darwin(v3);
  v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B35C8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011B35B0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B35A8);
  v17 = *(_QWORD *)(v16 - 8);
  v43 = v16;
  v44 = v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(sub_100007E8C(&qword_10119ED28) + 48);
  v21 = type metadata accessor for Composer(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, a1, v21);
  *(_OWORD *)&v8[v20] = xmmword_100EAE4D0;
  v22 = type metadata accessor for NavigationDestinationItem(0);
  swift_storeEnumTagMultiPayload(v8, v22, 4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 0, 1, v22);
  v50 = a1;
  v23 = sub_100007E8C(&qword_1011B3600);
  v24 = sub_10005610C(&qword_1011B3608, &qword_1011B3600, (void (*)(void))sub_1001C9648);
  v25 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  v26 = NavigationLink<>.init<A>(value:label:)(v8, sub_10042BEA0, v49, v23, v22, v24, v25);
  v27 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v52, 0, 1, 0x4044000000000000, 0, v27, v28);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  v29 = &v15[*(int *)(v13 + 36)];
  v30 = v52[1];
  *(_OWORD *)v29 = v52[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v52[2];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v31 = Corner.medium.unsafeMutableAddressor();
  v32 = *v31;
  v33 = v31[1];
  LOBYTE(v12) = *((_BYTE *)v31 + 16);
  v34 = *HI.HoverOutset.list.unsafeMutableAddressor();
  v35 = sub_10042BE10();
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v32, v33, v12, 1u, 0, 1, 1, v13, *(double *)&v34, v35);
  v36 = sub_10004FF60((uint64_t)v15, &qword_1011B35B0);
  v37 = v45;
  PlainButtonStyle.init()(v36);
  v51[0] = v13;
  v51[1] = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v51, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v39 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v40 = v43;
  v41 = v46;
  View.buttonStyle<A>(_:)(v37, v43, v46, OpaqueTypeConformance2, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v19, v40);
}

__n128 sub_10042B848@<Q0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __n128 result;
  _OWORD v29[10];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  *(_QWORD *)&v29[0] = Composer.name.getter(a2);
  *((_QWORD *)&v29[0] + 1) = v3;
  v4 = sub_100055B68();
  v5 = Text.init<A>(_:)(v29, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  LODWORD(v29[0]) = static HierarchicalShapeStyle.primary.getter(v12);
  v13 = Text.foregroundStyle<A>(_:)(v29, v5, v7, v11, v9, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  sub_100055BAC(v5, v7, v11);
  swift_bridgeObjectRelease(v9);
  KeyPath = swift_getKeyPath(&unk_100EBABB0);
  v31 = v13;
  v32 = v15;
  v33 = v19;
  v34 = v17;
  v35 = KeyPath;
  v36 = 1;
  v37 = 0;
  v21 = static Alignment.leading.getter(KeyPath);
  sub_10014A880(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v29, v23, 0.0, 1, 0.0, 1, v21, v22);
  sub_100055BAC(v13, v15, v19);
  swift_release();
  swift_bridgeObjectRelease(v17);
  v24 = v29[9];
  *(_OWORD *)(a1 + 128) = v29[8];
  *(_OWORD *)(a1 + 144) = v24;
  *(_QWORD *)(a1 + 160) = v30;
  v25 = v29[5];
  *(_OWORD *)(a1 + 64) = v29[4];
  *(_OWORD *)(a1 + 80) = v25;
  v26 = v29[7];
  *(_OWORD *)(a1 + 96) = v29[6];
  *(_OWORD *)(a1 + 112) = v26;
  v27 = v29[1];
  *(_OWORD *)a1 = v29[0];
  *(_OWORD *)(a1 + 16) = v27;
  result = (__n128)v29[3];
  *(_OWORD *)(a1 + 32) = v29[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_10042B9EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10042AD50(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10042B9F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3510;
  if (!qword_1011B3510)
  {
    v1 = sub_100044B54(&qword_1011B3518);
    sub_100049F28(&qword_1011B3520, &qword_1011B3528, (uint64_t)&protocol conformance descriptor for LazyVStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3510);
  }
  return result;
}

uint64_t sub_10042BA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10042BABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3550;
  if (!qword_1011B3550)
  {
    v1 = sub_100044B54(&qword_1011B34D0);
    sub_10042BB40();
    sub_100049F28(&qword_1011B3570, &qword_1011B3548, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3550);
  }
  return result;
}

unint64_t sub_10042BB40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_1011B3558;
  if (!qword_1011B3558)
  {
    v1 = sub_100044B54(&qword_1011B34F8);
    v2 = sub_100044B54(&qword_1011B34E8);
    v4 = sub_100044B54(&qword_1011B34E0);
    v5 = sub_100049F28(&qword_1011B3530, &qword_1011B34E0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    sub_100049F28(&qword_1011B3560, &qword_1011B3568, (uint64_t)&unk_100EC0B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3558);
  }
  return result;
}

uint64_t sub_10042BC34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10042AFE8(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_10042BC3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3580;
  if (!qword_1011B3580)
  {
    v1 = sub_100044B54(&qword_1011B3578);
    sub_10042BCA0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3580);
  }
  return result;
}

unint64_t sub_10042BCA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3588;
  if (!qword_1011B3588)
  {
    v1 = sub_100044B54(&qword_1011B3590);
    sub_1000A8D68();
    sub_10042BD18();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3588);
  }
  return result;
}

unint64_t sub_10042BD18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = qword_1011B3598;
  if (!qword_1011B3598)
  {
    v1 = sub_100044B54(&qword_1011B35A0);
    v2 = sub_100044B54(&qword_1011B35A8);
    v3 = type metadata accessor for PlainButtonStyle(255);
    v6 = sub_100044B54(&qword_1011B35B0);
    v7 = sub_10042BE10();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v5 = sub_100048748(&qword_1011BF800, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3598);
  }
  return result;
}

unint64_t sub_10042BE10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B35B8;
  if (!qword_1011B35B8)
  {
    v1 = sub_100044B54(&qword_1011B35B0);
    sub_100049F28(&qword_1011B35C0, &qword_1011B35C8, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B35B8);
  }
  return result;
}

uint64_t sub_10042BE98()
{
  return sub_10042B2DC();
}

double sub_10042BEA0@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  double result;

  *(_QWORD *)&result = sub_10042B848(a1, a2).n128_u64[0];
  return result;
}

unint64_t sub_10042BEB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3610;
  if (!qword_1011B3610)
  {
    v1 = sub_100044B54(&qword_1011B34D8);
    sub_10042BABC();
    sub_10042BB40();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3610);
  }
  return result;
}

void sub_10042BF20()
{
  qword_10124CFD8 = Int.seconds.getter(5);
}

double sub_10042BF40()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EBAC40);
  v4 = v0;
  v2 = sub_100048748((unint64_t *)&qword_1011B3750, _s11UberMetricsCMa, (uint64_t)&unk_100EBABFC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release();
  return *(double *)(v0 + 16);
}

uint64_t sub_10042BFC4(uint64_t result, double a2)
{
  *(double *)(result + 16) = a2;
  return result;
}

double sub_10042BFCC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EBAC18);
  v4 = v0;
  v2 = sub_100048748((unint64_t *)&qword_1011B3750, _s11UberMetricsCMa, (uint64_t)&unk_100EBABFC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release();
  return *(double *)(v0 + 24);
}

double sub_10042C050@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EBAC18);
  v7 = v3;
  v5 = sub_100048748((unint64_t *)&qword_1011B3750, _s11UberMetricsCMa, (uint64_t)&unk_100EBABFC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release();
  result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

void sub_10042C0DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EBAC18);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100048748((unint64_t *)&qword_1011B3750, _s11UberMetricsCMa, (uint64_t)&unk_100EBABFC);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_10042C27C, v6, (char *)&type metadata for () + 8, v5);
  swift_release();
}

uint64_t sub_10042C18C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV5Music6Header11UberMetrics___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10042C1DC()
{
  return _s11UberMetricsCMa(0);
}

uint64_t _s11UberMetricsCMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B3648, (uint64_t)&_s11UberMetricsCMn);
}

uint64_t sub_10042C1F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

double sub_10042C27C()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 24) = result;
  return result;
}

uint64_t *sub_10042C294(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    v11 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

double sub_10042C38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_10042C40C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  swift_retain();
  v10 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_10042C4D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011D0D50);
    v9 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_10042C5D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_10042C69C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011D0D50);
    v9 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10042C790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042C79C);
}

uint64_t sub_10042C79C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A8018);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_10042C81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042C828);
}

char *sub_10042C828(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A8018);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t _s11UberArtworkVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B37B0, (uint64_t)&_s11UberArtworkVMn);
}

void sub_10042C8B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1000E3A44(319, (unint64_t *)&unk_1011A8090, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_10042C950(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA0320, 1);
}

BOOL sub_10042C960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  _QWORD v28[3];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v2);
  v4 = (char *)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s11UberArtworkVMa(0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v11);
  v13 = (char *)&v28[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10042DC60((uint64_t)v10);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14);
  if ((_DWORD)v16 == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011BCC50);
    v17 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  }
  else
  {
    VideoArtwork.url.getter(v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) != 1)
    {
      sub_10004FF60((uint64_t)v13, &qword_10119E460);
      sub_10005B704(v1, (uint64_t)v7, _s11UberArtworkVMa);
      v25 = 1;
      goto LABEL_6;
    }
  }
  sub_10004FF60((uint64_t)v13, &qword_10119E460);
  sub_10005B704(v1, (uint64_t)v7, _s11UberArtworkVMa);
  v20 = *v7;
  KeyPath = swift_getKeyPath(&unk_100EBACC8);
  v28[0] = v20;
  v22 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v28, KeyPath, v22);
  swift_release();
  v23 = v20 + OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork;
  swift_beginAccess(v20 + OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork, v28, 0, 0);
  sub_10004A160(v23, (uint64_t)v4, &qword_1011A1440);
  v24 = type metadata accessor for Artwork(0);
  v25 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v4, 1, v24) != 1;
  sub_10004FF60((uint64_t)v4, &qword_1011A1440);
LABEL_6:
  sub_10005B748((uint64_t)v7, _s11UberArtworkVMa);
  return v25;
}

uint64_t sub_10042CC6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v67[16];
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _OWORD v77[7];
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;

  v76 = a2;
  v3 = type metadata accessor for LayoutDirection(0);
  v74 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = &v67[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v67[-v7];
  v9 = sub_100007E8C(&qword_1011B3800);
  __chkstk_darwin(v9);
  v11 = (uint64_t)&v67[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = sub_100007E8C(&qword_1011B3808);
  __chkstk_darwin(v68);
  v13 = &v67[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v71 = sub_100007E8C(&qword_1011B3810);
  __chkstk_darwin(v71);
  v15 = &v67[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = sub_100007E8C(&qword_1011B3818);
  __chkstk_darwin(v73);
  v17 = &v67[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_100007E8C(&qword_1011B3820);
  __chkstk_darwin(v18);
  v75 = &v67[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v70 = &v67[-v21];
  __chkstk_darwin(v22);
  v69 = &v67[-v23];
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v24);
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 0;
  v25 = sub_100007E8C(&qword_1011B3828);
  sub_10042D2B0(a1, v11 + *(int *)(v25 + 44));
  v72 = a1;
  v26 = a1[1];
  KeyPath = swift_getKeyPath(&unk_100EBAC18);
  *(_QWORD *)&v77[0] = v26;
  v28 = sub_100048748((unint64_t *)&qword_1011B3750, _s11UberMetricsCMa, (uint64_t)&unk_100EBABFC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v77, KeyPath, v28);
  swift_release();
  v29 = *(_QWORD *)(v26 + 24);
  v31 = static Alignment.top.getter(v30);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v77, 0, 1, 0, 1, 0, 1, v29, 0, 0, 1, 0, 1, v31, v32);
  sub_10004A160(v11, (uint64_t)v13, &qword_1011B3800);
  v33 = &v13[*(int *)(v68 + 36)];
  v34 = v77[5];
  v33[4] = v77[4];
  v33[5] = v34;
  v33[6] = v77[6];
  v35 = v77[1];
  *v33 = v77[0];
  v33[1] = v35;
  v36 = v77[3];
  v33[2] = v77[2];
  v33[3] = v36;
  sub_10004FF60(v11, &qword_1011B3800);
  _s11UberArtworkVMa(0);
  sub_100825054((uint64_t)v8);
  v37 = v74;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v74 + 104))(v5, enum case for LayoutDirection.rightToLeft(_:), v3);
  LOBYTE(v11) = static LayoutDirection.== infix(_:_:)(v8, v5);
  v38 = *(void (**)(_BYTE *, uint64_t))(v37 + 8);
  v38(v5, v3);
  v39 = ((uint64_t (*)(_BYTE *, uint64_t))v38)(v8, v3);
  if ((v11 & 1) != 0)
    v40 = -1.0;
  else
    v40 = 1.0;
  v41 = static UnitPoint.center.getter(v39);
  v43 = v42;
  sub_10004A160((uint64_t)v13, (uint64_t)v15, &qword_1011B3808);
  v44 = v71;
  v45 = &v15[*(int *)(v71 + 36)];
  *(double *)v45 = v40;
  *((_QWORD *)v45 + 1) = 0x3FF0000000000000;
  *((double *)v45 + 2) = v41;
  *((_QWORD *)v45 + 3) = v43;
  sub_10004FF60((uint64_t)v13, &qword_1011B3808);
  v46 = sub_10042E0CC();
  View.accessibilityHidden(_:)(1, v44, v46);
  sub_10004FF60((uint64_t)v15, &qword_1011B3810);
  v47 = AccessibilityIdentifier.containerDetailHeaderArtwork.unsafeMutableAddressor();
  v48 = *v47;
  v49 = v47[1];
  v50 = sub_10042E1B4();
  swift_bridgeObjectRetain();
  v51 = (uint64_t)v70;
  View.accessibilityIdentifier(_:)(v48, v49, v73, v50);
  swift_bridgeObjectRelease(v49);
  sub_10004FF60((uint64_t)v17, &qword_1011B3818);
  v52 = v69;
  v53 = sub_100065228(v51, (uint64_t)v69, &qword_1011B3820);
  if (qword_10119BFF0 != -1)
    v53 = swift_once(&qword_10119BFF0, sub_10042BF20);
  v54 = qword_10124CFD8;
  v55 = static Alignment.center.getter(v53);
  _FrameLayout.init(width:height:alignment:)(&v78, 0, 1, v54, 0, v55, v56);
  v57 = v78;
  v58 = v79;
  v59 = v80;
  v60 = v81;
  v61 = v82;
  v62 = v83;
  v63 = v75;
  sub_10004A160((uint64_t)v52, (uint64_t)v75, &qword_1011B3820);
  v64 = v76;
  sub_10004A160((uint64_t)v63, v76, &qword_1011B3820);
  v65 = v64 + *(int *)(sub_100007E8C(&qword_1011B3850) + 48);
  *(_QWORD *)v65 = 0;
  *(_BYTE *)(v65 + 8) = 1;
  *(_QWORD *)(v65 + 16) = v57;
  *(_BYTE *)(v65 + 24) = v58;
  *(_QWORD *)(v65 + 32) = v59;
  *(_BYTE *)(v65 + 40) = v60;
  *(_QWORD *)(v65 + 48) = v61;
  *(_QWORD *)(v65 + 56) = v62;
  sub_10004FF60((uint64_t)v52, &qword_1011B3820);
  return sub_10004FF60((uint64_t)v63, &qword_1011B3820);
}

uint64_t sub_10042D2B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[24];
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;

  v71 = a2;
  v3 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v3);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s11UberArtworkV12MediaContentVMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B3858);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011B3860);
  __chkstk_darwin(v70);
  v68 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v69 = (char *)&v63 - v14;
  sub_10042DC60((uint64_t)v5);
  v15 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EBACC8);
  v72 = v15;
  v17 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v72, KeyPath, v17);
  swift_release();
  v18 = v15 + OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork;
  swift_beginAccess(v15 + OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork, v78, 0, 0);
  sub_10004A160(v18, (uint64_t)&v8[*(int *)(v6 + 20)], &qword_1011A1440);
  v19 = sub_10042D93C();
  sub_100065228((uint64_t)v5, (uint64_t)v8, &qword_1011BCC50);
  *(_QWORD *)&v8[*(int *)(v6 + 24)] = v19;
  sub_10005B704((uint64_t)v8, (uint64_t)v11, _s11UberArtworkV12MediaContentVMa);
  v20 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v20 = 0;
  *((_WORD *)v20 + 4) = 257;
  v21 = sub_10005B748((uint64_t)v8, _s11UberArtworkV12MediaContentVMa);
  v67 = static Alignment.bottom.getter(v21);
  v66 = v22;
  v65 = static Alignment.center.getter(v67);
  v64 = v23;
  sub_10042D840((uint64_t)&v72);
  v24 = v72;
  LOBYTE(v15) = v73;
  v25 = v74;
  v63 = v75;
  v26 = v76;
  v27 = v77;
  v28 = _s11UberArtworkVMa(0);
  v29 = *(uint64_t *)((char *)a1 + *(int *)(v28 + 28));
  v30 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(&v79, 0, 1, v29, 0, v30, v31);
  v32 = v79;
  v33 = v81;
  v34 = v83;
  v35 = v84;
  v86 = v80;
  v85 = v82;
  v36 = v68;
  sub_10004A160((uint64_t)v11, v68, &qword_1011B3858);
  v37 = v36 + *(int *)(v70 + 36);
  v38 = v64;
  *(_QWORD *)v37 = v65;
  *(_QWORD *)(v37 + 8) = v38;
  *(_QWORD *)(v37 + 16) = v24;
  *(_BYTE *)(v37 + 24) = v15;
  v39 = (uint64_t)v69;
  *(_QWORD *)(v37 + 32) = v25;
  v40 = v36;
  *(_OWORD *)(v37 + 40) = v63;
  *(_QWORD *)(v37 + 56) = v26;
  *(_QWORD *)(v37 + 64) = v27;
  *(_QWORD *)(v37 + 72) = v32;
  *(_BYTE *)(v37 + 80) = v86;
  *(_QWORD *)(v37 + 88) = v33;
  *(_BYTE *)(v37 + 96) = v85;
  *(_QWORD *)(v37 + 104) = v34;
  *(_QWORD *)(v37 + 112) = v35;
  v41 = v66;
  *(_QWORD *)(v37 + 120) = v67;
  *(_QWORD *)(v37 + 128) = v41;
  sub_10004FF60((uint64_t)v11, &qword_1011B3858);
  sub_100065228(v36, v39, &qword_1011B3860);
  v70 = sub_10042D93C();
  v42 = a1[1];
  v43 = swift_getKeyPath(&unk_100EBAC40);
  v72 = v42;
  v44 = sub_100048748((unint64_t *)&qword_1011B3750, _s11UberMetricsCMa, (uint64_t)&unk_100EBABFC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v72, v43, v44);
  swift_release();
  v45 = *(double *)(v42 + 16);
  if (qword_10119BFF0 != -1)
    swift_once(&qword_10119BFF0, sub_10042BF20);
  v46 = v45 - *(double *)&qword_10124CFD8;
  v47 = a1[1];
  v48 = swift_getKeyPath(&unk_100EBAC18);
  v72 = v47;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v72, v48, v44);
  swift_release();
  v49 = fabs(v46 - *(double *)(v47 + 24));
  v51 = static Alignment.center.getter(v50);
  _FrameLayout.init(width:height:alignment:)(&v72, 0, 1, *(_QWORD *)&v49, 0, v51, v52);
  v53 = v72;
  LOBYTE(v47) = v73;
  v54 = v74;
  v55 = v75;
  v56 = *((_QWORD *)&v75 + 1);
  v57 = v76;
  sub_10004A160(v39, v36, &qword_1011B3860);
  v58 = v36;
  v59 = v39;
  v60 = v71;
  sub_10004A160(v58, v71, &qword_1011B3860);
  v61 = v60 + *(int *)(sub_100007E8C(&qword_1011B3868) + 48);
  *(_QWORD *)v61 = v70;
  *(_QWORD *)(v61 + 8) = v53;
  *(_BYTE *)(v61 + 16) = v47;
  *(_QWORD *)(v61 + 24) = v54;
  *(_BYTE *)(v61 + 32) = v55;
  *(_QWORD *)(v61 + 40) = v56;
  *(_QWORD *)(v61 + 48) = v57;
  swift_retain();
  sub_10004FF60(v59, &qword_1011B3860);
  swift_release();
  return sub_10004FF60(v40, &qword_1011B3860);
}

double sub_10042D840@<D0>(uint64_t a1@<X8>)
{
  double v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v2 = UIScreen.Dimensions.size.getter(3);
  v4 = v3;
  v5 = sub_100007E8C(&qword_1011AC5F0);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA7A80;
  v7 = sub_10042D93C();
  *(_QWORD *)(v6 + 32) = v7;
  v8 = static Color.clear.getter(v7);
  *(_QWORD *)(v6 + 40) = v8;
  v20 = v6;
  v9 = specialized Array._endMutation()(v8);
  v10 = static UnitPoint.bottom.getter(v9);
  v12 = v11;
  v14 = v13;
  v15 = static UnitPoint.top.getter(v10);
  v17 = v16;
  Gradient.init(colors:)(v6);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v20, v12, v14, v15, v17);
  v18 = v20;
  *(double *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v18;
  *(_OWORD *)(a1 + 24) = v21;
  result = *(double *)&v22;
  *(_OWORD *)(a1 + 40) = v22;
  return result;
}

uint64_t sub_10042D93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  _QWORD v33[3];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v2);
  v4 = (char *)&v33[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s11UberArtworkVMa(0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v32 = (char *)&v33[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33[-1] - v12;
  v14 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v14);
  v16 = (char *)&v33[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10042DC60((uint64_t)v16);
  v17 = type metadata accessor for VideoArtwork(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011BCC50);
LABEL_6:
    sub_10005B704(v1, (uint64_t)v7, _s11UberArtworkVMa);
    goto LABEL_7;
  }
  VideoArtwork.previewFrame.getter();
  v19 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  v20 = Artwork.backgroundColor.getter(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  if (!v20)
    goto LABEL_6;
  v21 = Color.init(cgColor:)(v20);
  sub_10005B704(v1, (uint64_t)v7, _s11UberArtworkVMa);
  if (!v21)
  {
LABEL_7:
    v22 = *v7;
    KeyPath = swift_getKeyPath(&unk_100EBACC8);
    v33[0] = v22;
    v24 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v33, KeyPath, v24);
    swift_release();
    v25 = v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork;
    swift_beginAccess(v22 + OBJC_IVAR____TtCV5Music6Header13Configuration__tallArtwork, v33, 0, 0);
    sub_10004A160(v25, (uint64_t)v4, &qword_1011A1440);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8))
    {
      v26 = sub_10004FF60((uint64_t)v4, &qword_1011A1440);
    }
    else
    {
      v28 = v32;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v32, v4, v8);
      v29 = sub_10004FF60((uint64_t)v4, &qword_1011A1440);
      v30 = Artwork.backgroundColor.getter(v29);
      v26 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v28, v8);
      if (v30)
      {
        v27 = Color.init(cgColor:)(v30);
        goto LABEL_12;
      }
    }
    v27 = static Color.clear.getter(v26);
LABEL_12:
    v21 = v27;
  }
  sub_10005B748((uint64_t)v7, _s11UberArtworkVMa);
  return v21;
}

uint64_t sub_10042DC60@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v3 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  static EditorialVideoArtworkFlavor.motionDetailTall.getter(v8);
  KeyPath = swift_getKeyPath(&unk_100EBACF0);
  v23 = v7;
  v10 = sub_100048748(&qword_1011B6970, _s13ConfigurationCMa, (uint64_t)&unk_100EC4A18);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v23, KeyPath, v10);
  swift_release();
  v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtCV5Music6Header13Configuration__videoArtworks);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_10079C3DC((uint64_t)v6);
    if ((v13 & 1) != 0)
    {
      v14 = v12;
      v15 = *(_QWORD *)(v11 + 56);
      v16 = type metadata accessor for VideoArtwork(0);
      v17 = *(_QWORD *)(v16 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(a1, v15 + *(_QWORD *)(v17 + 72) * v14, v16);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    }
    else
    {
      v20 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
    }
    v19 = swift_bridgeObjectRelease(v11);
  }
  else
  {
    v18 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v19);
}

uint64_t sub_10042DE10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[3];

  v23 = a1;
  v24 = a2;
  v3 = v2;
  v4 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B3000);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v3, (uint64_t)v19, &qword_1011BCC50);
  sub_10004A160(v3 + *(int *)(v23 + 20), (uint64_t)v16, &qword_1011A1440);
  v20 = type metadata accessor for Artwork.CropStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  ArtworkImage.Size.init(cgSize:)(0, 0, 1, (uint64_t)v25);
  v21 = type metadata accessor for ArtworkImage.Placeholder(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 1, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ArtworkImage.ReusePolicy.notReusableForDistinctItems(_:), v4);
  return ArtworkMotionView.init(videoArtwork:artwork:cropStyle:size:placeholder:reusePolicy:)((uint64_t)v19, (uint64_t)v16, (uint64_t)v13, v25, (uint64_t)v10, (uint64_t)v7, v24);
}

uint64_t sub_10042E038@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = sub_10042C960();
  if (v3)
  {
    *(_QWORD *)a1 = static HorizontalAlignment.center.getter(v3);
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
    v4 = sub_100007E8C(&qword_1011B37F8);
    sub_10042CC6C(v1, a1 + *(int *)(v4 + 44));
    v5 = sub_100007E8C(&qword_1011B37F0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_100007E8C(&qword_1011B37F0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

unint64_t sub_10042E0CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3830;
  if (!qword_1011B3830)
  {
    v1 = sub_100044B54(&qword_1011B3810);
    sub_10042E138();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3830);
  }
  return result;
}

unint64_t sub_10042E138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3838;
  if (!qword_1011B3838)
  {
    v1 = sub_100044B54(&qword_1011B3808);
    sub_10042ED88(&qword_1011B3840, &qword_1011B3800);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3838);
  }
  return result;
}

unint64_t sub_10042E1B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3848;
  if (!qword_1011B3848)
  {
    v1 = sub_100044B54(&qword_1011B3818);
    sub_10042E0CC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3848);
  }
  return result;
}

uint64_t _s11UberArtworkV12MediaContentVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B38C8, (uint64_t)&_s11UberArtworkV12MediaContentVMn);
}

uint64_t *sub_10042E25C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for VideoArtwork(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011BCC50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Artwork(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100007E8C(&qword_1011A1440);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t sub_10042E3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for VideoArtwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

char *sub_10042E480(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011BCC50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C(&qword_1011A1440);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  return a1;
}

char *sub_10042E5CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C(&qword_1011BCC50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = sub_100007E8C(&qword_1011A1440);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_10042E7B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011BCC50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C(&qword_1011A1440);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_10042E8FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C(&qword_1011BCC50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = sub_100007E8C(&qword_1011A1440);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_10042EADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042EAE8);
}

uint64_t sub_10042EAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_100007E8C(&qword_1011BCC50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100007E8C(&qword_1011A1440);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10042EB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042EBA4);
}

uint64_t sub_10042EBA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100007E8C(&qword_1011BCC50);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100007E8C(&qword_1011A1440);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_10042EC50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_1000E3A44(319, (unint64_t *)&qword_1011BCBF0, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_1011B66A0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

unint64_t sub_10042ED14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3908;
  if (!qword_1011B3908)
  {
    v1 = sub_100044B54(&qword_1011B3910);
    sub_10042ED88(&qword_1011B3918, &qword_1011B37F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3908);
  }
  return result;
}

uint64_t sub_10042ED88(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10042EDC8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA0348, 1);
}

uint64_t sub_10042EDD8()
{
  return sub_100048748(&qword_1011B3038, type metadata accessor for ArtworkMotionView, (uint64_t)&protocol conformance descriptor for ArtworkMotionView);
}

uint64_t sub_10042EE04()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EBAE30);
  v2 = swift_getKeyPath(&unk_100EBAE58);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10042EE74()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EBADE8);
  v2 = swift_getKeyPath(&unk_100EBAE10);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_10042EEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  id v47[3];
  uint64_t v48;
  void *v49;
  char v50[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011C4780);
  v45 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011BC990);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicSharedLibrariesRequest(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music25SharedLibrariesController_isReloadingEnabled) == 1)
  {
    v43 = v9;
    v44 = v8;
    v17 = OBJC_IVAR____TtC5Music25SharedLibrariesController_autoupdatingResponse;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music25SharedLibrariesController_autoupdatingResponse))
    {
      v18 = MusicSharedLibrariesRequest.init()(v14);
      v19 = MusicSharedLibrariesRequest.autoupdatingResponse.getter(v18);
      v42 = v5;
      v20 = v11;
      v21 = v19;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      *(_QWORD *)(v1 + v17) = v21;
      v11 = v20;
      v5 = v42;
      swift_retain();
      swift_release();
    }
    v22 = v1 + OBJC_IVAR____TtC5Music25SharedLibrariesController_autoupdatingResponseSubscription;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Music25SharedLibrariesController_autoupdatingResponseSubscription, v50, 0, 0);
    sub_1004308CC(v22, (uint64_t)v47);
    v23 = v48;
    swift_retain();
    if (v23)
    {
      swift_release();
      sub_10004FF60((uint64_t)v47, (uint64_t *)&unk_1011A3850);
    }
    else
    {
      v24 = sub_10004FF60((uint64_t)v47, (uint64_t *)&unk_1011A3850);
      dispatch thunk of MusicAutoupdatingSharedLibrariesResponse.$libraries.getter(v24);
      v25 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v47[0] = (id)static OS_dispatch_queue.main.getter(v25, v26, v27, v28, v29, v30, v31, v32);
      v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v4, 1, 1, v33);
      v34 = sub_100049F28((unint64_t *)&unk_1011BC9B0, (uint64_t *)&unk_1011C4780, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v35 = sub_10006A92C();
      Publisher.receive<A>(on:options:)(v47, v4, v5, v25, v34, v35);
      sub_10004FF60((uint64_t)v4, &qword_1011A08F0);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v5);
      v36 = swift_allocObject(&unk_1010C55F8, 24, 7);
      swift_weakInit(v36 + 16, v1);
      v37 = sub_100049F28((unint64_t *)&unk_1011BC9C0, (uint64_t *)&unk_1011BC990, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v38 = v44;
      v39 = (void *)Publisher<>.sink(receiveValue:)(sub_100430914, v36, v44, v37);
      v40 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v11, v38, v40);
      v48 = type metadata accessor for AnyCancellable(0);
      v49 = &protocol witness table for AnyCancellable;
      swift_release();
      v47[0] = v39;
      swift_beginAccess(v22, v46, 33, 0);
      sub_1000D98B0((uint64_t)v47, v22);
      swift_endAccess(v46);
    }
  }
}

UIMenu sub_10042F288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  UIMenuElementSize v14;
  UIMenuElementSize preferredElementSize;
  Swift::String v16;
  uint64_t v18;
  Swift::OpaquePointer v19;
  _BYTE v20[40];
  uint64_t v21;
  UIImage_optional v22;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100EBAE30);
  v3 = swift_getKeyPath(&unk_100EBAE58);
  static Published.subscript.getter(&v21, v1, KeyPath, v3);
  swift_release();
  swift_release();
  v4 = v21;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v18 = v21;
    else
      v18 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v4);
  if (!v5)
    return 0;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  inited = swift_initStackObject(v6, v20);
  v8 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EA7A90;
  if (qword_10119BFF8 != -1)
    inited = swift_once(&qword_10119BFF8, sub_10043061C);
  *(_QWORD *)(v8 + 32) = qword_1011B3920;
  v21 = v8;
  specialized Array._endMutation()(inited);
  v9 = v21;
  v10 = swift_getKeyPath(&unk_100EBAE30);
  v11 = swift_getKeyPath(&unk_100EBAE58);
  swift_retain();
  static Published.subscript.getter(&v21, v1, v10, v11);
  swift_release();
  swift_release();
  v12 = v21;
  v21 = v9;
  sub_100806F9C(v12);
  v13 = v21;
  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  swift_retain();
  sub_10043065C(v13, v1);
  preferredElementSize = v14;
  swift_bridgeObjectRelease(v13);
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v22.value.super.isa = 0;
  v22.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v22, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v19);
}

void sub_10042F494(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  char **v18;
  id v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  __n128 v27;
  Swift::String v28;
  void *object;
  void *v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  Swift::String v35;

  v34 = a3;
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  type metadata accessor for MusicLibrary(0);
  if (qword_10119BFF8 != -1)
    swift_once(&qword_10119BFF8, sub_10043061C);
  v12 = qword_1011B3920;
  if ((static MusicLibrary.== infix(_:_:)(v11, qword_1011B3920) & 1) != 0)
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x617262694C20794DLL, 0xEA00000000007972);
    static Locale.current.getter(v13);
    v14 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, "Music Library on the current device", 35, 2);
  }
  else
  {
    v14 = ((uint64_t (*)(void))MusicLibrary.name.getter)();
  }
  v33 = v14;
  v16 = v15;
  if ((static MusicLibrary.== infix(_:_:)(v11, v12) & 1) != 0)
  {
    v17 = String._bridgeToObjectiveC()();
    v18 = &selRef__systemImageNamed_;
  }
  else
  {
    v17 = String._bridgeToObjectiveC()();
    v18 = &selRef_systemImageNamed_;
  }
  v19 = objc_msgSend((id)objc_opt_self(UIImage), *v18, v17);

  v20 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC5Music25SharedLibrariesController_isCurrentlyConnecting);
  KeyPath = swift_getKeyPath(&unk_100EBADE8);
  v22 = swift_getKeyPath(&unk_100EBAE10);
  static Published.subscript.getter(&v35, a2, KeyPath, v22);
  swift_release();
  swift_release();
  LOBYTE(KeyPath) = static MusicLibrary.== infix(_:_:)(v11, v35._countAndFlagsBits);
  swift_release();
  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v23 = swift_allocObject(&unk_1010C55F8, 24, 7);
  swift_weakInit(v23 + 16, a2);
  v24 = swift_allocObject(&unk_1010C5620, 32, 7);
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v11;
  swift_retain();
  v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v33, v16, 0, 0, v19, 0, 0, 0, 0, v20, KeyPath & 1, sub_100430818, v24);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v26 = v25;
  _StringGuts.grow(_:)(28);
  v27 = swift_bridgeObjectRelease(v35._object);
  v35._countAndFlagsBits = 0xD00000000000001ALL;
  v35._object = (void *)0x8000000100E39AC0;
  v28._countAndFlagsBits = MusicLibrary.name.getter(v27);
  object = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(object);
  v30 = AccessibilityIdentifier.init(name:)(v35).rawValue._object;
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setAccessibilityIdentifier:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  *v34 = v26;
}

double sub_10042F854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    sub_10042F8B0(a3);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10042F8B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  KeyPath = swift_getKeyPath(&unk_100EBADE8);
  v8 = swift_getKeyPath(&unk_100EBAE10);
  static Published.subscript.getter(&v18, v2, KeyPath, v8);
  swift_release();
  swift_release();
  v9 = type metadata accessor for MusicLibrary(0);
  v10 = sub_100415A4C();
  LOBYTE(v9) = dispatch thunk of static Equatable.== infix(_:_:)(&v19, &v18, v9, v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if ((v9 & 1) == 0
    && (*(_BYTE *)(v2 + OBJC_IVAR____TtC5Music25SharedLibrariesController_isCurrentlyConnecting) & 1) == 0)
  {
    v12 = swift_getKeyPath(&unk_100EBADE8);
    v13 = swift_getKeyPath(&unk_100EBAE10);
    static Published.subscript.getter(&v19, v2, v12, v13);
    swift_release();
    swift_release();
    MusicLibrary.disconnect()();
    swift_release();
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    type metadata accessor for MainActor(0);
    swift_retain();
    v15 = swift_retain();
    v16 = static MainActor.shared.getter(v15);
    v17 = (_QWORD *)swift_allocObject(&unk_1010C5648, 48, 7);
    v17[2] = v16;
    v17[3] = &protocol witness table for MainActor;
    v17[4] = v2;
    v17[5] = a1;
    sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011B3A48, (uint64_t)v17);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10042FA8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE v34[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v34, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    KeyPath = swift_getKeyPath(&unk_100EBAE30);
    v13 = swift_getKeyPath(&unk_100EBAE58);
    static Published.subscript.getter(&v33, v11, KeyPath, v13);
    swift_release();
    swift_release();
    v14 = v33;
    sub_1002ECA74(v8, v33);
    v16 = v15;
    swift_bridgeObjectRelease(v14);
    if ((v16 & 1) == 0)
    {
      v17 = swift_getKeyPath(&unk_100EBAE30);
      v18 = swift_getKeyPath(&unk_100EBAE58);
      v33 = v8;
      swift_bridgeObjectRetain();
      swift_retain();
      static Published.subscript.setter(&v33, v11, v17, v18);
      v19 = swift_getKeyPath(&unk_100EBADE8);
      v20 = swift_getKeyPath(&unk_100EBAE10);
      static Published.subscript.getter(&v33, v11, v19, v20);
      swift_release();
      swift_release();
      if (qword_10119BFF8 != -1)
        swift_once(&qword_10119BFF8, sub_10043061C);
      v32 = qword_1011B3920;
      v21 = type metadata accessor for MusicLibrary(0);
      v22 = sub_100415A4C();
      LOBYTE(v21) = dispatch thunk of static Equatable.== infix(_:_:)(&v33, &v32, v21, v22);
      swift_release();
      if ((v21 & 1) == 0)
      {
        v23 = swift_getKeyPath(&unk_100EBADE8);
        v24 = swift_getKeyPath(&unk_100EBAE10);
        static Published.subscript.getter(&v33, v11, v23, v24);
        swift_release();
        swift_release();
        v25 = sub_1004147EC(v33, v8);
        swift_release();
        if ((v25 & 1) == 0)
        {
          v26 = Logger.libraryMenu.unsafeMutableAddressor();
          v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v26, v4);
          v28 = Logger.logObject.getter(v27);
          v29 = static os_log_type_t.default.getter(v28);
          if (os_log_type_enabled(v28, v29))
          {
            v30 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v30 = 0;
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "Currently selected Library become unavailable, resetting to device library", v30, 2u);
            swift_slowDealloc(v30, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          sub_10042F8B0(qword_1011B3920);
        }
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10042FDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for Logger(0);
  v5[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[9] = v7;
  v5[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[11] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[12] = v10;
  v5[13] = v11;
  return swift_task_switch(sub_10042FE34, v10, v11);
}

uint64_t sub_10042FE34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[6];
  v2 = OBJC_IVAR____TtC5Music25SharedLibrariesController_isCurrentlyConnecting;
  v0[14] = OBJC_IVAR____TtC5Music25SharedLibrariesController_isCurrentlyConnecting;
  *(_BYTE *)(v1 + v2) = 1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.connect()[1]);
  v0[15] = v3;
  *v3 = v0;
  v3[1] = sub_10042FE98;
  return MusicLibrary.connect()();
}

uint64_t sub_10042FE98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10042FF98;
  else
    v4 = sub_10042FEF8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_10042FEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 88));
  *(_BYTE *)(v2 + v1) = 0;
  KeyPath = swift_getKeyPath(&unk_100EBADE8);
  v5 = swift_getKeyPath(&unk_100EBAE10);
  *(_QWORD *)(v0 + 40) = v3;
  swift_retain(v3);
  swift_retain(v2);
  static Published.subscript.setter(v0 + 40, v2, KeyPath, v5);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042FF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  swift_release();
  v5 = Logger.libraryMenu.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 64);
    v28 = *(_QWORD *)(v0 + 80);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v29 = v12;
    *(_QWORD *)(v0 + 24) = v9;
    swift_errorRetain(v9);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 24, v13);
    v16 = v15;
    *(_QWORD *)(v0 + 32) = sub_100322200(v14, v15, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to connect to shared library with error=%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v28, v27);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 64);
    swift_errorRelease(v17);
    swift_errorRelease(v17);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 112)) = 0;
  if (qword_10119BFF8 != -1)
    swift_once(&qword_10119BFF8, sub_10043061C);
  v21 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 48);
  v23 = qword_1011B3920;
  KeyPath = swift_getKeyPath(&unk_100EBADE8);
  v25 = swift_getKeyPath(&unk_100EBAE10);
  *(_QWORD *)(v0 + 16) = v23;
  swift_retain();
  swift_retain();
  static Published.subscript.setter(v0 + 16, v22, KeyPath, v25);
  swift_errorRelease(v21);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10043022C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController__availableSharedLibraries;
  v2 = sub_100007E8C((uint64_t *)&unk_1011BC9A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController__selectedLibrary;
  v4 = sub_100007E8C((uint64_t *)&unk_1011C4790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  sub_10004FF60(v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController_autoupdatingResponseSubscription, (uint64_t *)&unk_1011A3850);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004302D4()
{
  return type metadata accessor for SharedLibrariesController(0);
}

uint64_t type metadata accessor for SharedLibrariesController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B3978;
  if (!qword_1011B3978)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SharedLibrariesController);
  return result;
}

void sub_100430318(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_1004303C0(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100430418(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100EBADA0;
      v6[3] = &unk_100EBADB8;
      v6[4] = &unk_100EBADD0;
      v6[5] = &unk_100EBADA0;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

void sub_1004303C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B3988)
  {
    v2 = sub_100044B54(&qword_1011B3990);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011B3988);
  }
}

void sub_100430418(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B3998)
  {
    v2 = type metadata accessor for MusicLibrary(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011B3998);
  }
}

uint64_t sub_10043046C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v1 = sub_100007E8C((uint64_t *)&unk_1011C4790);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011BC9A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController__availableSharedLibraries;
  v16 = _swiftEmptyArrayStorage;
  v10 = sub_100007E8C(&qword_1011B3990);
  Published.init(initialValue:)(&v16, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  v11 = OBJC_IVAR____TtC5Music25SharedLibrariesController__selectedLibrary;
  if (qword_10119BFF8 != -1)
    swift_once(&qword_10119BFF8, sub_10043061C);
  v16 = (_QWORD *)qword_1011B3920;
  v12 = type metadata accessor for MusicLibrary(0);
  swift_retain();
  Published.init(initialValue:)(&v16, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v0 + v11, v4, v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController_isReloadingEnabled) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController_autoupdatingResponse) = 0;
  v13 = v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController_autoupdatingResponseSubscription;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_QWORD *)(v13 + 32) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Music25SharedLibrariesController_isCurrentlyConnecting) = 0;
  return v0;
}

uint64_t sub_10043061C()
{
  uint64_t result;

  type metadata accessor for MusicLibrary(0);
  result = static MusicLibrary.shared.getter();
  qword_1011B3920 = result;
  return result;
}

void sub_10043065C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    v16 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    if (v6 < 0)
    {
      __break(1u);
      return;
    }
    v7 = 0;
    while (v6 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
        swift_retain();
      }
      v14 = v8;
      sub_10042F494(&v14, a2, &v15);
      swift_release();
      if (v3)
      {
        swift_release();
        return;
      }
      ++v7;
      v10 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
      specialized ContiguousArray._endMutation()(v12);
      if (v6 == v7)
        return;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_1004307C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004307EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100430818(uint64_t a1)
{
  uint64_t v1;

  return sub_10042F854(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100430820()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100430854(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011B3A44);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_10042FDA0(a1, v4, v5, v7, v6);
}

uint64_t sub_1004308CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_100430914(uint64_t *a1)
{
  uint64_t v1;

  return sub_10042FA8C(a1, v1);
}

uint64_t NowPlayingViewModel.duration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NowPlayingViewModel(0);
  return sub_10004A160(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1011B84C0);
}

uint64_t type metadata accessor for NowPlayingViewModel(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B3AB0, (uint64_t)&nominal type descriptor for NowPlayingViewModel);
}

uint64_t NowPlayingViewModel.contentRating.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NowPlayingViewModel(0);
  return sub_10004A160(v1 + *(int *)(v3 + 28), a1, &qword_1011B8D50);
}

uint64_t NowPlayingViewModel.isPlaceholder.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NowPlayingViewModel(0) + 32));
}

uint64_t NowPlayingViewModel.transportButtonsConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for NowPlayingViewModel(0) + 36);
  return sub_1004309F8(v3, a1);
}

uint64_t sub_1004309F8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NowPlayingViewModel.TransportButtonsConfiguration(a2, a1);
  return a2;
}

uint64_t NowPlayingViewModel.subtitleAction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for NowPlayingViewModel(0) + 40));
  v2 = *v1;
  sub_100048AAC(*v1, v1[1]);
  return v2;
}

uint64_t NowPlayingViewModel.contextMenuAction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for NowPlayingViewModel(0) + 44));
  v2 = *v1;
  sub_100048AAC(*v1, v1[1]);
  return v2;
}

__n128 NowPlayingViewModel.init(title:subtitle:duration:contentRating:isPlaceholder:transportButtonsConfiguration:subtitleAction:contextMenuAction:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __n128 result;
  __int128 v26;
  _QWORD *v27;
  _QWORD *v28;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v18 = (int *)type metadata accessor for NowPlayingViewModel(0);
  sub_100065228(a5, (uint64_t)a9 + v18[6], (uint64_t *)&unk_1011B84C0);
  sub_100065228(a6, (uint64_t)a9 + v18[7], &qword_1011B8D50);
  *((_BYTE *)a9 + v18[8]) = a7;
  v19 = (char *)a9 + v18[9];
  v20 = *(_OWORD *)(a8 + 144);
  *((_OWORD *)v19 + 8) = *(_OWORD *)(a8 + 128);
  *((_OWORD *)v19 + 9) = v20;
  v21 = *(_OWORD *)(a8 + 176);
  *((_OWORD *)v19 + 10) = *(_OWORD *)(a8 + 160);
  *((_OWORD *)v19 + 11) = v21;
  v22 = *(_OWORD *)(a8 + 80);
  *((_OWORD *)v19 + 4) = *(_OWORD *)(a8 + 64);
  *((_OWORD *)v19 + 5) = v22;
  v23 = *(_OWORD *)(a8 + 112);
  *((_OWORD *)v19 + 6) = *(_OWORD *)(a8 + 96);
  *((_OWORD *)v19 + 7) = v23;
  v24 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)v19 = *(_OWORD *)a8;
  *((_OWORD *)v19 + 1) = v24;
  result = *(__n128 *)(a8 + 32);
  v26 = *(_OWORD *)(a8 + 48);
  *((__n128 *)v19 + 2) = result;
  *((_OWORD *)v19 + 3) = v26;
  v27 = (_QWORD *)((char *)a9 + v18[10]);
  *v27 = a10;
  v27[1] = a11;
  v28 = (_QWORD *)((char *)a9 + v18[11]);
  *v28 = a12;
  v28[1] = a13;
  return result;
}

double sub_100430B9C()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  double result;
  _QWORD *v8;
  _QWORD *v9;

  v0 = (int *)type metadata accessor for NowPlayingViewModel(0);
  sub_10004FACC((uint64_t)v0, static NowPlayingViewModel.notPlaying);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static NowPlayingViewModel.notPlaying);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for NowPlayingViewModel.DurationType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (char *)v1 + v0[7];
  v5 = type metadata accessor for ContentRating(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *v1 = 0x79616C5020746F4ELL;
  v1[1] = 0xEB00000000676E69;
  v1[2] = 0;
  v1[3] = 0;
  *((_BYTE *)v1 + v0[8]) = 0;
  v6 = (char *)v1 + v0[9];
  *(int64x2_t *)v6 = vdupq_n_s64(1uLL);
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *(_QWORD *)&result = 2;
  *((_OWORD *)v6 + 4) = xmmword_100EBAE80;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_QWORD *)v6 + 16) = 0;
  *((_QWORD *)v6 + 17) = 1;
  *((_OWORD *)v6 + 9) = 0u;
  *((_OWORD *)v6 + 10) = 0u;
  *((_OWORD *)v6 + 11) = 0u;
  v8 = (_QWORD *)((char *)v1 + v0[10]);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)((char *)v1 + v0[11]);
  *v9 = 0;
  v9[1] = 0;
  return result;
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration.init(buttonType:enabled:tapAction:holdBeginAction:holdEndAction:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_BYTE *)(a9 + 9) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_QWORD *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  *(_QWORD *)(a9 + 56) = a10;
  return result;
}

__n128 NowPlayingViewModel.TransportButtonsConfiguration.init(leftButton:middleButton:rightButton:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[4];
  _OWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  sub_100065228(a3, (uint64_t)v25, &qword_1011B3A50);
  v19 = v25[1];
  v20 = v25[0];
  v18 = (__n128)v25[2];
  v7 = v26;
  v8 = v27;
  sub_100065228(a2, (uint64_t)v22, &qword_1011B3A50);
  v16 = v22[1];
  v17 = v22[0];
  v15 = v22[2];
  v9 = v23;
  v10 = v24;
  sub_100065228(a1, (uint64_t)v21, &qword_1011B3A50);
  v11 = v21[1];
  v12 = v21[2];
  v13 = v21[3];
  *(_OWORD *)a4 = v21[0];
  *(_OWORD *)(a4 + 16) = v11;
  *(_OWORD *)(a4 + 32) = v12;
  *(_OWORD *)(a4 + 48) = v13;
  *(_OWORD *)(a4 + 64) = v17;
  *(_OWORD *)(a4 + 80) = v16;
  *(_OWORD *)(a4 + 96) = v15;
  *(_QWORD *)(a4 + 112) = v9;
  *(_QWORD *)(a4 + 120) = v10;
  *(_OWORD *)(a4 + 128) = v20;
  *(_OWORD *)(a4 + 144) = v19;
  result = v18;
  *(__n128 *)(a4 + 160) = v18;
  *(_QWORD *)(a4 + 176) = v7;
  *(_QWORD *)(a4 + 184) = v8;
  return result;
}

uint64_t NowPlayingViewModel.notPlaying.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_10119C000 != -1)
    swift_once(&qword_10119C000, sub_100430B9C);
  v0 = type metadata accessor for NowPlayingViewModel(0);
  return sub_100048B14(v0, (uint64_t)static NowPlayingViewModel.notPlaying);
}

uint64_t static NowPlayingViewModel.notPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119C000 != -1)
    swift_once(&qword_10119C000, sub_100430B9C);
  v2 = type metadata accessor for NowPlayingViewModel(0);
  v3 = sub_100048B14(v2, (uint64_t)static NowPlayingViewModel.notPlaying);
  return sub_10005B704(v3, a1, type metadata accessor for NowPlayingViewModel);
}

double CarNowPlayingMetrics.Data.timePlayed.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double UIView.Shadow.opacity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t NowPlayingViewModel.DurationSnapshot.snapshotTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NowPlayingViewModel.DurationSnapshot(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NowPlayingViewModel.DurationSnapshot(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B3B60, (uint64_t)&nominal type descriptor for NowPlayingViewModel.DurationSnapshot);
}

double NowPlayingViewModel.DurationSnapshot.rate.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for NowPlayingViewModel.DurationSnapshot(0) + 28));
}

uint64_t NowPlayingViewModel.DurationSnapshot.isInTransition.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NowPlayingViewModel.DurationSnapshot(0) + 32));
}

uint64_t NowPlayingViewModel.DurationSnapshot.timeDidChangeHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for NowPlayingViewModel.DurationSnapshot(0) + 36));
  v2 = *v1;
  sub_100048AAC(*v1, v1[1]);
  return v2;
}

uint64_t NowPlayingViewModel.DurationSnapshot.elapsedTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()(v6);
  v7 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  Date.timeIntervalSince(_:)(v1 + *(int *)(v7 + 24));
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t NowPlayingViewModel.DurationSnapshot.init(currentTime:totalTime:snapshotTime:rate:isInTransition:timeDidChangeHandler:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  *a5 = a6;
  a5[1] = a7;
  v14 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v15 = (char *)a5 + v14[6];
  v16 = type metadata accessor for Date(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a1, v16);
  *(double *)((char *)a5 + v14[7]) = a8;
  *((_BYTE *)a5 + v14[8]) = a2;
  v18 = (_QWORD *)((char *)a5 + v14[9]);
  *v18 = a3;
  v18[1] = a4;
  return result;
}

uint64_t static NowPlayingViewModel.TransportButtonType.== infix(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    return ((uint64_t (*)(void))((char *)&loc_10043110C + 4 * byte_100EBAE90[a1]))();
  if ((a4 & 1) != 0)
    return 0;
  return *(double *)&a1 == *(double *)&a3;
}

uint64_t sub_100431174(uint64_t a1, uint64_t a2)
{
  double v2;

  v2 = *(double *)a1;
  if (*(_BYTE *)(a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1004311A4 + 4 * byte_100EBAE95[*(_QWORD *)&v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(double *)a2;
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration.buttonType.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration.isEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration.tapAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration.holdBeginAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration.holdEndAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.leftButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1, a1, &qword_1011B3A50);
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.middleButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1 + 64, a1, &qword_1011B3A50);
}

uint64_t NowPlayingViewModel.TransportButtonsConfiguration.rightButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1 + 128, a1, &qword_1011B3A50);
}

uint64_t NowPlayingViewModel.marqueeResetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v18[64];

  v1 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v1, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v4 = *v0;
  v3 = v0[1];
  *(_QWORD *)(inited + 32) = *v0;
  *(_QWORD *)(inited + 40) = v3;
  v6 = v0[2];
  v5 = v0[3];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n(v3, 2);
  v7 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v9 = v7[2];
  v8 = v7[3];
  v10 = v9 + 1;
  if (v9 >= v8 >> 1)
    v7 = sub_100431480((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v10;
  v11 = &v7[2 * v9];
  v11[4] = v4;
  v11[5] = v3;
  if (v5)
  {
    v12 = v7[3];
    swift_bridgeObjectRetain();
    if (v10 >= v12 >> 1)
      v7 = sub_100431480((_QWORD *)(v12 > 1), v9 + 2, 1, v7);
    v7[2] = v9 + 2;
    v13 = &v7[2 * v10];
    v13[4] = v6;
    v13[5] = v5;
  }
  swift_release();
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v15 = sub_100334808();
  v16 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v14, v15);
  swift_bridgeObjectRelease(v7);
  return v16;
}

_QWORD *sub_100431480(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C((uint64_t *)&unk_1011A6110);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438868(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10043158C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_10119E428);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004380C0(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100431698(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_10119E430);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100437FCC(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004317A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3CC8, &qword_10119F480);
}

uint64_t sub_1004317B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3CB0, &qword_10119F2A8);
}

uint64_t sub_1004317CC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100007E8C(a5);
  v14 = *(_QWORD *)(sub_100007E8C(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(sub_100007E8C(a6) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1004392D4(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_1004319D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3CB8, &qword_10119F288);
}

uint64_t sub_1004319EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3CC0, &qword_10119F2B0);
}

uint64_t sub_100431A00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3D20, type metadata accessor for NavigationDestinationItem);
}

uint64_t sub_100431A14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011AE000, type metadata accessor for SidebarMenu.Item);
}

uint64_t sub_100431A28(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100007E8C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1004394F4(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_100431C34(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431F94(a1, a2, a3, a4, &qword_1011B3D08, &qword_1011A08D8);
}

_QWORD *sub_100431C48(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431E8C(a1, a2, a3, a4, &qword_1011B3D68);
}

uint64_t sub_100431C54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3D88, type metadata accessor for DragDropToQueue);
}

uint64_t sub_100431C68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3C88, (uint64_t (*)(_QWORD))&type metadata accessor for ReactionHistoryEntry);
}

_QWORD *sub_100431C7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C((uint64_t *)&unk_1011AE040);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004385A0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100431D74(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011AE298);
      v11 = (_QWORD *)swift_allocObject(v10, (v9 << 6) | 0x20, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 + 31;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 6);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[8 * v8 + 4])
          memmove(v14, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004381C4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100431E80(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431E8C(a1, a2, a3, a4, &qword_1011B3C90);
}

_QWORD *sub_100431E8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_100007E8C(a5);
      v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
      v13 = j__malloc_size_0(v12);
      v12[2] = v9;
      v12[3] = 2 * v13 - 64;
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= (_QWORD *)((char *)a4 + v9 + 32))
          memmove(v14, a4 + 4, v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004385A0(0, v9, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100431F80(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431F94(a1, a2, a3, a4, &qword_1011B3C38, &qword_1011B3C30);
}

_QWORD *sub_100431F94(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_100007E8C(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
      v15 = j__malloc_size_0(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 4);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v11 + 4])
          memmove(v17, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438FD8(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1004320AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(qword_1011AB9F0);
      v11 = (_QWORD *)swift_allocObject(v10, 104 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 104);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[13 * v8 + 4])
          memmove(v13, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004384B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004321D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B8E60, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo);
}

uint64_t sub_1004321E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_10119F190, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
}

uint64_t sub_1004321FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3D48, &qword_1011A63B0);
}

_QWORD *sub_100432210(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3D38);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004382B4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10043231C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3C40);
      v11 = (_QWORD *)swift_allocObject(v10, 4 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 29;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 2);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= (_QWORD *)((char *)a4 + 4 * v8 + 32))
          memmove(v14, a4 + 4, 4 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438B40(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100432428(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C((uint64_t *)&unk_1011AE2F0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438C28(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100432534(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3C78, type metadata accessor for VerticalLockupGridCell);
}

_QWORD *sub_100432548(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431F94(a1, a2, a3, a4, &qword_1011B3C28, &qword_1011B3C30);
}

_QWORD *sub_10043255C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011A3F90);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438D18(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100432668(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011A9A90, _s23QueueSnapshotIdentifierOMa);
}

uint64_t sub_10043267C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_10119F2C8, (uint64_t (*)(_QWORD))&type metadata accessor for Track);
}

_QWORD *sub_100432690(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004326CC(a1, a2, a3, a4, &qword_1011AE068, (uint64_t *)&unk_1011AE070);
}

_QWORD *sub_1004326A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100432AF0(a1, a2, a3, a4, &qword_1011B3CA0, &qword_1011B3CA8);
}

_QWORD *sub_1004326B8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004326CC(a1, a2, a3, a4, (uint64_t *)&unk_1011AE058, &qword_1011AB320);
}

_QWORD *sub_1004326CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_100007E8C(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
      v15 = j__malloc_size_0(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v11 + 4])
          memmove(v16, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004393EC(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004327F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3D80, type metadata accessor for DragDropToLibrary);
}

_QWORD *sub_10043280C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3D78);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100438A4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100432930(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3DA0, type metadata accessor for PosterView.TextStack);
}

_QWORD *sub_100432944(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004326CC(a1, a2, a3, a4, &qword_1011B3D28, &qword_1011B3D30);
}

uint64_t sub_100432958(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, (uint64_t *)&unk_1011AD770, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Folder.Item);
}

uint64_t sub_10043296C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3CD8, type metadata accessor for WidgetMusicItem);
}

uint64_t sub_100432980(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3CE0, &qword_10119FA90);
}

uint64_t sub_100432994(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, (uint64_t *)&unk_1011AE0F0, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
}

uint64_t sub_1004329A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3D90, type metadata accessor for BrickView.TextContentView);
}

uint64_t sub_1004329BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3C70, (uint64_t (*)(_QWORD))&type metadata accessor for GenericMusicItem);
}

_QWORD *sub_1004329D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B18B8);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438E08(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100432ADC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100432AF0(a1, a2, a3, a4, (uint64_t *)&unk_1011AE300, (uint64_t *)&unk_1011A3090);
}

_QWORD *sub_100432AF0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_100007E8C(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
      v15 = j__malloc_size_0(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 25;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 3);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v11 + 4])
          memmove(v17, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004391D0(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100432C08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011AE1F8, (uint64_t (*)(_QWORD))&type metadata accessor for MusicCatalogSearchSuggestionsResponse);
}

_QWORD *sub_100432C1C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100432AF0(a1, a2, a3, a4, (uint64_t *)&unk_1011A2140, &qword_1011B3C98);
}

_QWORD *sub_100432C30(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431F94(a1, a2, a3, a4, &qword_1011B2088, &qword_1011B3C30);
}

_QWORD *sub_100432C44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C((uint64_t *)&unk_1011AE180);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438684(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100432D50(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100432D5C(a1, a2, a3, a4, &qword_1011B3CE8);
}

_QWORD *sub_100432D5C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_100007E8C(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 8 * v10 + 32, 7);
      v13 = j__malloc_size_0(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v9 + 4])
          memmove(v15, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438EF0(0, v9, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100432E64(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100432AF0(a1, a2, a3, a4, &qword_1011B3CF0, &qword_1011B3CF8);
}

_QWORD *sub_100432E78(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3CD0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438E08(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100432F84(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431F94(a1, a2, a3, a4, &qword_1011B2D80, &qword_1011AE190);
}

_QWORD *sub_100432F98(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431F94(a1, a2, a3, a4, &qword_1011B3C50, &qword_1011B3C58);
}

uint64_t sub_100432FAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, (uint64_t *)&unk_1011A9B60, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_100432FC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, (uint64_t *)&unk_1011AE1C0, type metadata accessor for AlbumDetailDataSource.CellType);
}

uint64_t sub_100432FD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3D50, type metadata accessor for GenericMusicItemEntity);
}

uint64_t sub_100432FE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3D58, &qword_1011B3D60);
}

_QWORD *sub_100432FFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3C68);
      v11 = (_QWORD *)swift_allocObject(v10, 120 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 120);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[15 * v8 + 4])
          memmove(v13, a4 + 4, 120 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100438774(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100433120(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3C60);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100438958(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100433248(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B4300, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
}

_QWORD *sub_10043325C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3C48);
      v11 = (_QWORD *)swift_allocObject(v10, 136 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 136);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[17 * v8 + 4])
          memmove(v13, a4 + 4, 136 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004383BC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10043337C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011AE1F0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

uint64_t sub_100433390(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3D18, (uint64_t (*)(_QWORD))&type metadata accessor for RecentlyAddedMusicItem);
}

_QWORD *sub_1004333A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100432D5C(a1, a2, a3, a4, &qword_1011BC9F0);
}

uint64_t sub_1004333B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, (uint64_t *)&unk_1011AD790, (uint64_t (*)(_QWORD))&type metadata accessor for UICellAccessory);
}

_QWORD *sub_1004333C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431F94(a1, a2, a3, a4, &qword_1011BCCF0, &qword_1011B3D10);
}

_QWORD *sub_1004333D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3D70);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004390DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1004334FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007E8C(&qword_1011B3DA8);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100438E08(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100433608(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100432AF0(a1, a2, a3, a4, &qword_1011AE328, &qword_1011AE330);
}

uint64_t sub_10043361C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004317CC(a1, a2, a3, a4, &qword_1011B3DB0, qword_1011B3DB8);
}

_QWORD *sub_100433630(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100431E8C(a1, a2, a3, a4, &qword_1011B3D00);
}

uint64_t sub_10043363C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3D98, type metadata accessor for FeaturedView.TextContentView);
}

_QWORD *sub_100433650(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004326CC(a1, a2, a3, a4, &qword_1011A9BA0, (uint64_t *)&unk_1011AB388);
}

uint64_t sub_100433664(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011AE168, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry);
}

uint64_t sub_100433678(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100431A28(a1, a2, a3, a4, &qword_1011B3C80, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator);
}

uint64_t _s5Music19NowPlayingViewModelV16DurationSnapshotV2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  __n128 v30;
  uint64_t v31;
  char v32;
  double v33;
  double v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v40;
  uint64_t v41;

  v40 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  __chkstk_darwin(v40);
  v41 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v40 - v18;
  __chkstk_darwin(v20);
  v22 = (double *)((char *)&v40 - v21);
  __chkstk_darwin(v23);
  v25 = (double *)((char *)&v40 - v24);
  v26 = *a1;
  v27 = *a2;
  sub_10005B704((uint64_t)a1, (uint64_t)&v40 - v24, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  sub_10005B704((uint64_t)a2, (uint64_t)v22, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  if (v26 != v27)
  {
    sub_10005B748((uint64_t)v22, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B748((uint64_t)v25, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B704((uint64_t)a1, (uint64_t)v19, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B704((uint64_t)a2, (uint64_t)v16, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    goto LABEL_7;
  }
  v28 = v25[1];
  sub_10005B748((uint64_t)v25, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  v29 = v22[1];
  sub_10005B748((uint64_t)v22, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  sub_10005B704((uint64_t)a1, (uint64_t)v19, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  sub_10005B704((uint64_t)a2, (uint64_t)v16, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  if (v28 != v29)
  {
LABEL_7:
    sub_10005B748((uint64_t)v16, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B748((uint64_t)v19, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B704((uint64_t)a1, (uint64_t)v13, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B704((uint64_t)a2, (uint64_t)v10, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    goto LABEL_8;
  }
  v31 = v40;
  v32 = static Date.== infix(_:_:)(&v19[*(int *)(v40 + 24)], &v16[*(int *)(v40 + 24)], v30);
  sub_10005B748((uint64_t)v16, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  sub_10005B748((uint64_t)v19, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  sub_10005B704((uint64_t)a1, (uint64_t)v13, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  sub_10005B704((uint64_t)a2, (uint64_t)v10, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  if ((v32 & 1) == 0)
  {
LABEL_8:
    sub_10005B748((uint64_t)v10, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B748((uint64_t)v13, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B704((uint64_t)a1, (uint64_t)v7, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    v35 = v41;
    sub_10005B704((uint64_t)a2, v41, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    goto LABEL_9;
  }
  v33 = *(double *)&v13[*(int *)(v31 + 28)];
  sub_10005B748((uint64_t)v13, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  v34 = *(double *)&v10[*(int *)(v31 + 28)];
  sub_10005B748((uint64_t)v10, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  sub_10005B704((uint64_t)a1, (uint64_t)v7, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  v35 = v41;
  sub_10005B704((uint64_t)a2, v41, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  if (v33 != v34)
  {
LABEL_9:
    sub_10005B748(v35, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    sub_10005B748((uint64_t)v7, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    v38 = 0;
    return v38 & 1;
  }
  v36 = v7[*(int *)(v31 + 32)];
  sub_10005B748((uint64_t)v7, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  v37 = *(_BYTE *)(v35 + *(int *)(v31 + 32));
  sub_10005B748(v35, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
  v38 = v36 ^ v37 ^ 1;
  return v38 & 1;
}

_QWORD *initializeBufferWithCopyOfBuffer for NowPlayingViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_OWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v74;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (_OWORD *)((char *)a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for NowPlayingViewModel.DurationType(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011B84C0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
      v18 = *((_QWORD *)v17 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v11, 1, v17))
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        *v10 = *v11;
        v19 = v17[6];
        v74 = (char *)v10 + v19;
        v20 = (char *)v11 + v19;
        v21 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v74, v20, v21);
        *(_QWORD *)((char *)v10 + v17[7]) = *(_QWORD *)((char *)v11 + v17[7]);
        *((_BYTE *)v10 + v17[8]) = *((_BYTE *)v11 + v17[8]);
        v22 = v17[9];
        v23 = (_QWORD *)((char *)v10 + v22);
        v24 = (_QWORD *)((char *)v11 + v22);
        if (*v24)
        {
          v25 = v24[1];
          *v23 = *v24;
          v23[1] = v25;
          v26 = swift_retain();
        }
        else
        {
          v26 = *(__n128 *)v24;
          *(_OWORD *)v23 = *(_OWORD *)v24;
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *, __n128))(v18 + 56))(v10, 0, 1, v17, v26);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v27 = a3[7];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = type metadata accessor for ContentRating(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_1011B8D50);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = (_QWORD *)((char *)a2 + v33 + 16);
    v37 = *v36;
    if (*v36 == 1)
    {
      v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      v39 = *((_OWORD *)v35 + 3);
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *((_OWORD *)v34 + 3) = v39;
    }
    else
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_WORD *)v34 + 4) = *((_WORD *)v35 + 4);
      if (v37)
      {
        v40 = *((_QWORD *)v35 + 3);
        *((_QWORD *)v34 + 2) = v37;
        *((_QWORD *)v34 + 3) = v40;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 1) = *(_OWORD *)v36;
      }
      v41 = *((_QWORD *)v35 + 4);
      if (v41)
      {
        v42 = *((_QWORD *)v35 + 5);
        *((_QWORD *)v34 + 4) = v41;
        *((_QWORD *)v34 + 5) = v42;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      }
      v43 = *((_QWORD *)v35 + 6);
      if (v43)
      {
        v44 = *((_QWORD *)v35 + 7);
        *((_QWORD *)v34 + 6) = v43;
        *((_QWORD *)v34 + 7) = v44;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 3) = *((_OWORD *)v35 + 3);
      }
    }
    v45 = v34 + 64;
    v46 = *((_QWORD *)v35 + 10);
    v47 = v35 + 64;
    if (v46 == 1)
    {
      v48 = *((_OWORD *)v35 + 5);
      *v45 = *v47;
      *((_OWORD *)v34 + 5) = v48;
      v49 = *((_OWORD *)v35 + 7);
      *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
      *((_OWORD *)v34 + 7) = v49;
    }
    else
    {
      *(_QWORD *)v45 = *(_QWORD *)v47;
      v34[72] = v35[72];
      v34[73] = v35[73];
      if (v46)
      {
        v50 = *((_QWORD *)v35 + 11);
        *((_QWORD *)v34 + 10) = v46;
        *((_QWORD *)v34 + 11) = v50;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 5) = *((_OWORD *)v35 + 5);
      }
      v51 = *((_QWORD *)v35 + 12);
      if (v51)
      {
        v52 = *((_QWORD *)v35 + 13);
        *((_QWORD *)v34 + 12) = v51;
        *((_QWORD *)v34 + 13) = v52;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
      }
      v53 = *((_QWORD *)v35 + 14);
      if (v53)
      {
        v54 = *((_QWORD *)v35 + 15);
        *((_QWORD *)v34 + 14) = v53;
        *((_QWORD *)v34 + 15) = v54;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 7) = *((_OWORD *)v35 + 7);
      }
    }
    v55 = v34 + 128;
    v56 = *((_QWORD *)v35 + 18);
    v57 = v35 + 128;
    if (v56 == 1)
    {
      v58 = *((_OWORD *)v35 + 9);
      *v55 = *v57;
      *((_OWORD *)v34 + 9) = v58;
      v59 = *((_OWORD *)v35 + 11);
      *((_OWORD *)v34 + 10) = *((_OWORD *)v35 + 10);
      *((_OWORD *)v34 + 11) = v59;
    }
    else
    {
      *(_QWORD *)v55 = *(_QWORD *)v57;
      v34[136] = v35[136];
      v34[137] = v35[137];
      if (v56)
      {
        v60 = *((_QWORD *)v35 + 19);
        *((_QWORD *)v34 + 18) = v56;
        *((_QWORD *)v34 + 19) = v60;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 9) = *((_OWORD *)v35 + 9);
      }
      v61 = *((_QWORD *)v35 + 20);
      if (v61)
      {
        v62 = *((_QWORD *)v35 + 21);
        *((_QWORD *)v34 + 20) = v61;
        *((_QWORD *)v34 + 21) = v62;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 10) = *((_OWORD *)v35 + 10);
      }
      v63 = *((_QWORD *)v35 + 22);
      if (v63)
      {
        v64 = *((_QWORD *)v35 + 23);
        *((_QWORD *)v34 + 22) = v63;
        *((_QWORD *)v34 + 23) = v64;
        swift_retain();
      }
      else
      {
        *((_OWORD *)v34 + 11) = *((_OWORD *)v35 + 11);
      }
    }
    v65 = a3[10];
    v66 = (_QWORD *)((char *)v4 + v65);
    v67 = (_QWORD *)((char *)a2 + v65);
    if (*v67)
    {
      v68 = v67[1];
      *v66 = *v67;
      v66[1] = v68;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v66 = *(_OWORD *)v67;
    }
    v69 = a3[11];
    v70 = (_QWORD *)((char *)v4 + v69);
    v71 = (_QWORD *)((char *)a2 + v69);
    if (*v71)
    {
      v72 = v71[1];
      *v70 = *v71;
      v70[1] = v72;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v70 = *(_OWORD *)v71;
    }
  }
  return v4;
}

uint64_t type metadata accessor for NowPlayingViewModel.DurationType(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B3C18, (uint64_t)&nominal type descriptor for NowPlayingViewModel.DurationType);
}

double destroy for NowPlayingViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for NowPlayingViewModel.DurationType(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      v7 = v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      if (*(_QWORD *)(v4 + *(int *)(v6 + 36)))
        swift_release();
    }
  }
  v9 = a1 + a2[7];
  v10 = type metadata accessor for ContentRating(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v13 = (_QWORD *)(a1 + a2[9]);
  v14 = v13[2];
  if (v14)
  {
    if (v14 == 1)
      goto LABEL_14;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  if (v13[4])
    *(_QWORD *)&result = swift_release().n128_u64[0];
  if (v13[6])
    *(_QWORD *)&result = swift_release().n128_u64[0];
LABEL_14:
  v15 = v13[10];
  if (v15)
  {
    if (v15 == 1)
      goto LABEL_21;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  if (v13[12])
    *(_QWORD *)&result = swift_release().n128_u64[0];
  if (v13[14])
    *(_QWORD *)&result = swift_release().n128_u64[0];
LABEL_21:
  v16 = v13[18];
  if (v16)
  {
    if (v16 == 1)
      goto LABEL_28;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  if (v13[20])
    *(_QWORD *)&result = swift_release().n128_u64[0];
  if (v13[22])
    *(_QWORD *)&result = swift_release().n128_u64[0];
LABEL_28:
  if (*(_QWORD *)(a1 + a2[10]))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  if (*(_QWORD *)(a1 + a2[11]))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for NowPlayingViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_OWORD *, uint64_t, uint64_t);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  _OWORD *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  char *v72;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (_OWORD *)((char *)a1 + v8);
  v10 = (_OWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for NowPlayingViewModel.DurationType(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011B84C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
    v16 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v16 + 48))(v10, 1, v15))
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      *v9 = *v10;
      v17 = v15[6];
      v72 = (char *)v9 + v17;
      v18 = (char *)v10 + v17;
      v19 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v72, v18, v19);
      *(_QWORD *)((char *)v9 + v15[7]) = *(_QWORD *)((char *)v10 + v15[7]);
      *((_BYTE *)v9 + v15[8]) = *((_BYTE *)v10 + v15[8]);
      v20 = v15[9];
      v21 = (_QWORD *)((char *)v9 + v20);
      v22 = (_QWORD *)((char *)v10 + v20);
      if (*v22)
      {
        v23 = v22[1];
        *v21 = *v22;
        v21[1] = v23;
        v24 = swift_retain();
      }
      else
      {
        v24 = *(__n128 *)v22;
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *, __n128))(v16 + 56))(v9, 0, 1, v15, v24);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v25 = a3[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for ContentRating(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v31 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = (_QWORD *)((char *)a2 + v31 + 16);
  v35 = *v34;
  if (*v34 == 1)
  {
    v36 = *((_OWORD *)v33 + 1);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v36;
    v37 = *((_OWORD *)v33 + 3);
    *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 3) = v37;
  }
  else
  {
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_WORD *)v32 + 4) = *((_WORD *)v33 + 4);
    if (v35)
    {
      v38 = *((_QWORD *)v33 + 3);
      *((_QWORD *)v32 + 2) = v35;
      *((_QWORD *)v32 + 3) = v38;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 1) = *(_OWORD *)v34;
    }
    v39 = *((_QWORD *)v33 + 4);
    if (v39)
    {
      v40 = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 4) = v39;
      *((_QWORD *)v32 + 5) = v40;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
    }
    v41 = *((_QWORD *)v33 + 6);
    if (v41)
    {
      v42 = *((_QWORD *)v33 + 7);
      *((_QWORD *)v32 + 6) = v41;
      *((_QWORD *)v32 + 7) = v42;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 3) = *((_OWORD *)v33 + 3);
    }
  }
  v43 = v32 + 64;
  v44 = *((_QWORD *)v33 + 10);
  v45 = v33 + 64;
  if (v44 == 1)
  {
    v46 = *((_OWORD *)v33 + 5);
    *v43 = *v45;
    *((_OWORD *)v32 + 5) = v46;
    v47 = *((_OWORD *)v33 + 7);
    *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
    *((_OWORD *)v32 + 7) = v47;
  }
  else
  {
    *(_QWORD *)v43 = *(_QWORD *)v45;
    v32[72] = v33[72];
    v32[73] = v33[73];
    if (v44)
    {
      v48 = *((_QWORD *)v33 + 11);
      *((_QWORD *)v32 + 10) = v44;
      *((_QWORD *)v32 + 11) = v48;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 5) = *((_OWORD *)v33 + 5);
    }
    v49 = *((_QWORD *)v33 + 12);
    if (v49)
    {
      v50 = *((_QWORD *)v33 + 13);
      *((_QWORD *)v32 + 12) = v49;
      *((_QWORD *)v32 + 13) = v50;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
    }
    v51 = *((_QWORD *)v33 + 14);
    if (v51)
    {
      v52 = *((_QWORD *)v33 + 15);
      *((_QWORD *)v32 + 14) = v51;
      *((_QWORD *)v32 + 15) = v52;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 7) = *((_OWORD *)v33 + 7);
    }
  }
  v53 = v32 + 128;
  v54 = *((_QWORD *)v33 + 18);
  v55 = v33 + 128;
  if (v54 == 1)
  {
    v56 = *((_OWORD *)v33 + 9);
    *v53 = *v55;
    *((_OWORD *)v32 + 9) = v56;
    v57 = *((_OWORD *)v33 + 11);
    *((_OWORD *)v32 + 10) = *((_OWORD *)v33 + 10);
    *((_OWORD *)v32 + 11) = v57;
  }
  else
  {
    *(_QWORD *)v53 = *(_QWORD *)v55;
    v32[136] = v33[136];
    v32[137] = v33[137];
    if (v54)
    {
      v58 = *((_QWORD *)v33 + 19);
      *((_QWORD *)v32 + 18) = v54;
      *((_QWORD *)v32 + 19) = v58;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 9) = *((_OWORD *)v33 + 9);
    }
    v59 = *((_QWORD *)v33 + 20);
    if (v59)
    {
      v60 = *((_QWORD *)v33 + 21);
      *((_QWORD *)v32 + 20) = v59;
      *((_QWORD *)v32 + 21) = v60;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 10) = *((_OWORD *)v33 + 10);
    }
    v61 = *((_QWORD *)v33 + 22);
    if (v61)
    {
      v62 = *((_QWORD *)v33 + 23);
      *((_QWORD *)v32 + 22) = v61;
      *((_QWORD *)v32 + 23) = v62;
      swift_retain();
    }
    else
    {
      *((_OWORD *)v32 + 11) = *((_OWORD *)v33 + 11);
    }
  }
  v63 = a3[10];
  v64 = (_QWORD *)((char *)a1 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  if (*v65)
  {
    v66 = v65[1];
    *v64 = *v65;
    v64[1] = v66;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
  }
  v67 = a3[11];
  v68 = (_QWORD *)((char *)a1 + v67);
  v69 = (_QWORD *)((char *)a2 + v67);
  if (*v69)
  {
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v68 = *(_OWORD *)v69;
  }
  return a1;
}

_QWORD *assignWithCopy for NowPlayingViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  int *v16;
  uint64_t v17;
  size_t v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  _OWORD *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  uint64_t v89;
  _OWORD *v90;
  __int128 *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  _OWORD *v115;
  uint64_t v116;
  _OWORD *v117;
  __int128 *v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v155;
  char *v156;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for NowPlayingViewModel.DurationType(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      v16 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
      v17 = *((_QWORD *)v16 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v17 + 48))(v10, 1, v16))
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      else
      {
        *v9 = *v10;
        v9[1] = v10[1];
        v32 = v16[6];
        v156 = (char *)v9 + v32;
        v33 = (char *)v10 + v32;
        v34 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v156, v33, v34);
        *(_QWORD *)((char *)v9 + v16[7]) = *(_QWORD *)((char *)v10 + v16[7]);
        *((_BYTE *)v9 + v16[8]) = *((_BYTE *)v10 + v16[8]);
        v35 = v16[9];
        v36 = (_QWORD *)((char *)v9 + v35);
        v37 = (_QWORD *)((char *)v10 + v35);
        if (*v37)
        {
          v38 = v37[1];
          *v36 = *v37;
          v36[1] = v38;
          v39 = swift_retain();
        }
        else
        {
          v39 = *(__n128 *)v37;
          *(_OWORD *)v36 = *(_OWORD *)v37;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v17 + 56))(v9, 0, 1, v16, v39);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      goto LABEL_25;
    }
    goto LABEL_7;
  }
  if (v15)
  {
    sub_10005B748((uint64_t)v9, type metadata accessor for NowPlayingViewModel.DurationType);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B84C0) - 8) + 64);
LABEL_8:
    memcpy(v9, v10, v18);
    goto LABEL_25;
  }
  v19 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v20 + 48);
  v22 = v21(v9, 1, v19);
  v23 = v21(v10, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      *v9 = *v10;
      v9[1] = v10[1];
      v24 = v19[6];
      v25 = (char *)v9 + v24;
      v26 = (char *)v10 + v24;
      v27 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      *(_QWORD *)((char *)v9 + v19[7]) = *(_QWORD *)((char *)v10 + v19[7]);
      *((_BYTE *)v9 + v19[8]) = *((_BYTE *)v10 + v19[8]);
      v28 = v19[9];
      v29 = (_QWORD *)((char *)v9 + v28);
      v30 = (_QWORD *)((char *)v10 + v28);
      if (*v30)
      {
        v31 = v30[1];
        *v29 = *v30;
        v29[1] = v31;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v29 = *(_OWORD *)v30;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v20 + 56))(v9, 0, 1, v19);
      goto LABEL_25;
    }
LABEL_17:
    v18 = *(_QWORD *)(v12 + 64);
    goto LABEL_8;
  }
  if (v23)
  {
    sub_10005B748((uint64_t)v9, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    goto LABEL_17;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  v40 = v19[6];
  v41 = (char *)v9 + v40;
  v42 = (char *)v10 + v40;
  v43 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  *(_QWORD *)((char *)v9 + v19[7]) = *(_QWORD *)((char *)v10 + v19[7]);
  *((_BYTE *)v9 + v19[8]) = *((_BYTE *)v10 + v19[8]);
  v44 = v19[9];
  v45 = (_QWORD *)((char *)v9 + v44);
  v46 = (char *)v10 + v44;
  v47 = *(_QWORD *)((char *)v10 + v44);
  if (*v45)
  {
    if (v47)
    {
      v48 = *((_QWORD *)v46 + 1);
      *v45 = v47;
      v45[1] = v48;
      swift_retain();
      swift_release();
      goto LABEL_25;
    }
    swift_release();
  }
  else if (v47)
  {
    v155 = *((_QWORD *)v46 + 1);
    *v45 = v47;
    v45[1] = v155;
    swift_retain();
    goto LABEL_25;
  }
  *(_OWORD *)v45 = *(_OWORD *)v46;
LABEL_25:
  v49 = a3[7];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = type metadata accessor for ContentRating(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
LABEL_30:
    v57 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
LABEL_31:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v58 = a3[9];
  v59 = (uint64_t)a1 + v58;
  v60 = (char *)a2 + v58;
  v62 = (_QWORD *)((char *)a1 + v58 + 16);
  v61 = *v62;
  v64 = v60 + 16;
  v63 = *((_QWORD *)v60 + 2);
  if (*v62 == 1)
  {
    if (v63 == 1)
    {
      v65 = *(_OWORD *)v60;
      v66 = *((_OWORD *)v60 + 1);
      v67 = *((_OWORD *)v60 + 3);
      *(_OWORD *)(v59 + 32) = *((_OWORD *)v60 + 2);
      *(_OWORD *)(v59 + 48) = v67;
      *(_OWORD *)v59 = v65;
      *(_OWORD *)(v59 + 16) = v66;
      goto LABEL_66;
    }
    v71 = *(_QWORD *)v60;
    *(_BYTE *)(v59 + 8) = v60[8];
    *(_QWORD *)v59 = v71;
    *(_BYTE *)(v59 + 9) = v60[9];
    v72 = *((_QWORD *)v60 + 2);
    if (v72)
    {
      v73 = *((_QWORD *)v60 + 3);
      *(_QWORD *)(v59 + 16) = v72;
      *(_QWORD *)(v59 + 24) = v73;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v62 = *v64;
    }
    v77 = *((_QWORD *)v60 + 4);
    if (v77)
    {
      v78 = *((_QWORD *)v60 + 5);
      *(_QWORD *)(v59 + 32) = v77;
      *(_QWORD *)(v59 + 40) = v78;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v59 + 32) = *((_OWORD *)v60 + 2);
    }
    v80 = *((_QWORD *)v60 + 6);
    if (!v80)
    {
      *(_OWORD *)(v59 + 48) = *((_OWORD *)v60 + 3);
      goto LABEL_66;
    }
    goto LABEL_63;
  }
  if (v63 == 1)
  {
    sub_1004350C4(v59);
    v68 = *((_OWORD *)v60 + 3);
    v70 = *(_OWORD *)v60;
    v69 = *((_OWORD *)v60 + 1);
    *(_OWORD *)(v59 + 32) = *((_OWORD *)v60 + 2);
    *(_OWORD *)(v59 + 48) = v68;
    *(_OWORD *)v59 = v70;
    *(_OWORD *)(v59 + 16) = v69;
    goto LABEL_66;
  }
  v74 = *(_QWORD *)v60;
  *(_BYTE *)(v59 + 8) = v60[8];
  *(_QWORD *)v59 = v74;
  *(_BYTE *)(v59 + 9) = v60[9];
  v75 = *((_QWORD *)v60 + 2);
  if (v61)
  {
    if (v75)
    {
      v76 = *((_QWORD *)v60 + 3);
      *(_QWORD *)(v59 + 16) = v75;
      *(_QWORD *)(v59 + 24) = v76;
      swift_retain();
      swift_release();
      goto LABEL_52;
    }
    swift_release();
  }
  else if (v75)
  {
    v79 = *((_QWORD *)v60 + 3);
    *(_QWORD *)(v59 + 16) = v75;
    *(_QWORD *)(v59 + 24) = v79;
    swift_retain();
    goto LABEL_52;
  }
  *(_OWORD *)v62 = *v64;
LABEL_52:
  v81 = *((_QWORD *)v60 + 4);
  if (*(_QWORD *)(v59 + 32))
  {
    if (v81)
    {
      v82 = *((_QWORD *)v60 + 5);
      *(_QWORD *)(v59 + 32) = v81;
      *(_QWORD *)(v59 + 40) = v82;
      swift_retain();
      swift_release();
      goto LABEL_59;
    }
    swift_release();
  }
  else if (v81)
  {
    v83 = *((_QWORD *)v60 + 5);
    *(_QWORD *)(v59 + 32) = v81;
    *(_QWORD *)(v59 + 40) = v83;
    swift_retain();
    goto LABEL_59;
  }
  *(_OWORD *)(v59 + 32) = *((_OWORD *)v60 + 2);
LABEL_59:
  v80 = *((_QWORD *)v60 + 6);
  if (*(_QWORD *)(v59 + 48))
  {
    if (v80)
    {
      v84 = *((_QWORD *)v60 + 7);
      *(_QWORD *)(v59 + 48) = v80;
      *(_QWORD *)(v59 + 56) = v84;
      swift_retain();
      swift_release();
      goto LABEL_66;
    }
    swift_release();
  }
  else if (v80)
  {
LABEL_63:
    v85 = *((_QWORD *)v60 + 7);
    *(_QWORD *)(v59 + 48) = v80;
    *(_QWORD *)(v59 + 56) = v85;
    swift_retain();
    goto LABEL_66;
  }
  *(_OWORD *)(v59 + 48) = *((_OWORD *)v60 + 3);
LABEL_66:
  v87 = (_OWORD *)(v59 + 80);
  v86 = *(_QWORD *)(v59 + 80);
  v88 = (_OWORD *)(v59 + 64);
  v90 = v60 + 80;
  v89 = *((_QWORD *)v60 + 10);
  v91 = (__int128 *)(v60 + 64);
  if (v86 != 1)
  {
    if (v89 == 1)
    {
      sub_1004350C4(v59 + 64);
      v95 = *((_OWORD *)v60 + 7);
      v97 = *v91;
      v96 = *((_OWORD *)v60 + 5);
      *(_OWORD *)(v59 + 96) = *((_OWORD *)v60 + 6);
      *(_OWORD *)(v59 + 112) = v95;
      *v88 = v97;
      *(_OWORD *)(v59 + 80) = v96;
      goto LABEL_101;
    }
    v101 = *(_QWORD *)v91;
    *(_BYTE *)(v59 + 72) = v60[72];
    *(_QWORD *)v88 = v101;
    *(_BYTE *)(v59 + 73) = v60[73];
    v102 = *((_QWORD *)v60 + 10);
    if (v86)
    {
      if (v102)
      {
        v103 = *((_QWORD *)v60 + 11);
        *(_QWORD *)(v59 + 80) = v102;
        *(_QWORD *)(v59 + 88) = v103;
        swift_retain();
        swift_release();
        goto LABEL_86;
      }
      swift_release();
    }
    else if (v102)
    {
      v106 = *((_QWORD *)v60 + 11);
      *(_QWORD *)(v59 + 80) = v102;
      *(_QWORD *)(v59 + 88) = v106;
      swift_retain();
      goto LABEL_86;
    }
    *v87 = *v90;
LABEL_86:
    v108 = *((_QWORD *)v60 + 12);
    if (*(_QWORD *)(v59 + 96))
    {
      if (v108)
      {
        v109 = *((_QWORD *)v60 + 13);
        *(_QWORD *)(v59 + 96) = v108;
        *(_QWORD *)(v59 + 104) = v109;
        swift_retain();
        swift_release();
        goto LABEL_93;
      }
      swift_release();
    }
    else if (v108)
    {
      v110 = *((_QWORD *)v60 + 13);
      *(_QWORD *)(v59 + 96) = v108;
      *(_QWORD *)(v59 + 104) = v110;
      swift_retain();
      goto LABEL_93;
    }
    *(_OWORD *)(v59 + 96) = *((_OWORD *)v60 + 6);
LABEL_93:
    v88 = (_OWORD *)(v59 + 112);
    v107 = *((_QWORD *)v60 + 14);
    if (*(_QWORD *)(v59 + 112))
    {
      if (v107)
      {
        v111 = *((_QWORD *)v60 + 15);
        *(_QWORD *)(v59 + 112) = v107;
        *(_QWORD *)(v59 + 120) = v111;
        swift_retain();
        swift_release();
        goto LABEL_101;
      }
      swift_release();
    }
    else if (v107)
    {
LABEL_97:
      v112 = *((_QWORD *)v60 + 15);
      *(_QWORD *)(v59 + 112) = v107;
      *(_QWORD *)(v59 + 120) = v112;
      swift_retain();
      goto LABEL_101;
    }
    v92 = *((_OWORD *)v60 + 7);
    goto LABEL_100;
  }
  if (v89 != 1)
  {
    v98 = *(_QWORD *)v91;
    *(_BYTE *)(v59 + 72) = v60[72];
    *(_QWORD *)v88 = v98;
    *(_BYTE *)(v59 + 73) = v60[73];
    v99 = *((_QWORD *)v60 + 10);
    if (v99)
    {
      v100 = *((_QWORD *)v60 + 11);
      *(_QWORD *)(v59 + 80) = v99;
      *(_QWORD *)(v59 + 88) = v100;
      swift_retain();
    }
    else
    {
      *v87 = *v90;
    }
    v104 = *((_QWORD *)v60 + 12);
    if (v104)
    {
      v105 = *((_QWORD *)v60 + 13);
      *(_QWORD *)(v59 + 96) = v104;
      *(_QWORD *)(v59 + 104) = v105;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v59 + 96) = *((_OWORD *)v60 + 6);
    }
    v107 = *((_QWORD *)v60 + 14);
    if (!v107)
    {
      *(_OWORD *)(v59 + 112) = *((_OWORD *)v60 + 7);
      goto LABEL_101;
    }
    goto LABEL_97;
  }
  v92 = *v91;
  v93 = *((_OWORD *)v60 + 5);
  v94 = *((_OWORD *)v60 + 7);
  *(_OWORD *)(v59 + 96) = *((_OWORD *)v60 + 6);
  *(_OWORD *)(v59 + 112) = v94;
  *(_OWORD *)(v59 + 80) = v93;
LABEL_100:
  *v88 = v92;
LABEL_101:
  v114 = (_OWORD *)(v59 + 144);
  v113 = *(_QWORD *)(v59 + 144);
  v115 = (_OWORD *)(v59 + 128);
  v117 = v60 + 144;
  v116 = *((_QWORD *)v60 + 18);
  v118 = (__int128 *)(v60 + 128);
  if (v113 != 1)
  {
    if (v116 == 1)
    {
      sub_1004350C4(v59 + 128);
      v122 = *((_OWORD *)v60 + 11);
      v124 = *v118;
      v123 = *((_OWORD *)v60 + 9);
      *(_OWORD *)(v59 + 160) = *((_OWORD *)v60 + 10);
      *(_OWORD *)(v59 + 176) = v122;
      *v115 = v124;
      *(_OWORD *)(v59 + 144) = v123;
      goto LABEL_136;
    }
    v128 = *(_QWORD *)v118;
    *(_BYTE *)(v59 + 136) = v60[136];
    *(_QWORD *)v115 = v128;
    *(_BYTE *)(v59 + 137) = v60[137];
    v129 = *((_QWORD *)v60 + 18);
    if (v113)
    {
      if (v129)
      {
        v130 = *((_QWORD *)v60 + 19);
        *(_QWORD *)(v59 + 144) = v129;
        *(_QWORD *)(v59 + 152) = v130;
        swift_retain();
        swift_release();
        goto LABEL_121;
      }
      swift_release();
    }
    else if (v129)
    {
      v133 = *((_QWORD *)v60 + 19);
      *(_QWORD *)(v59 + 144) = v129;
      *(_QWORD *)(v59 + 152) = v133;
      swift_retain();
      goto LABEL_121;
    }
    *v114 = *v117;
LABEL_121:
    v135 = *((_QWORD *)v60 + 20);
    if (*(_QWORD *)(v59 + 160))
    {
      if (v135)
      {
        v136 = *((_QWORD *)v60 + 21);
        *(_QWORD *)(v59 + 160) = v135;
        *(_QWORD *)(v59 + 168) = v136;
        swift_retain();
        swift_release();
        goto LABEL_128;
      }
      swift_release();
    }
    else if (v135)
    {
      v137 = *((_QWORD *)v60 + 21);
      *(_QWORD *)(v59 + 160) = v135;
      *(_QWORD *)(v59 + 168) = v137;
      swift_retain();
      goto LABEL_128;
    }
    *(_OWORD *)(v59 + 160) = *((_OWORD *)v60 + 10);
LABEL_128:
    v115 = (_OWORD *)(v59 + 176);
    v134 = *((_QWORD *)v60 + 22);
    if (*(_QWORD *)(v59 + 176))
    {
      if (v134)
      {
        v138 = *((_QWORD *)v60 + 23);
        *(_QWORD *)(v59 + 176) = v134;
        *(_QWORD *)(v59 + 184) = v138;
        swift_retain();
        swift_release();
        goto LABEL_136;
      }
      swift_release();
    }
    else if (v134)
    {
LABEL_132:
      v139 = *((_QWORD *)v60 + 23);
      *(_QWORD *)(v59 + 176) = v134;
      *(_QWORD *)(v59 + 184) = v139;
      swift_retain();
      goto LABEL_136;
    }
    v119 = *((_OWORD *)v60 + 11);
    goto LABEL_135;
  }
  if (v116 != 1)
  {
    v125 = *(_QWORD *)v118;
    *(_BYTE *)(v59 + 136) = v60[136];
    *(_QWORD *)v115 = v125;
    *(_BYTE *)(v59 + 137) = v60[137];
    v126 = *((_QWORD *)v60 + 18);
    if (v126)
    {
      v127 = *((_QWORD *)v60 + 19);
      *(_QWORD *)(v59 + 144) = v126;
      *(_QWORD *)(v59 + 152) = v127;
      swift_retain();
    }
    else
    {
      *v114 = *v117;
    }
    v131 = *((_QWORD *)v60 + 20);
    if (v131)
    {
      v132 = *((_QWORD *)v60 + 21);
      *(_QWORD *)(v59 + 160) = v131;
      *(_QWORD *)(v59 + 168) = v132;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v59 + 160) = *((_OWORD *)v60 + 10);
    }
    v134 = *((_QWORD *)v60 + 22);
    if (!v134)
    {
      *(_OWORD *)(v59 + 176) = *((_OWORD *)v60 + 11);
      goto LABEL_136;
    }
    goto LABEL_132;
  }
  v119 = *v118;
  v120 = *((_OWORD *)v60 + 9);
  v121 = *((_OWORD *)v60 + 11);
  *(_OWORD *)(v59 + 160) = *((_OWORD *)v60 + 10);
  *(_OWORD *)(v59 + 176) = v121;
  *(_OWORD *)(v59 + 144) = v120;
LABEL_135:
  *v115 = v119;
LABEL_136:
  v140 = a3[10];
  v141 = (_QWORD *)((char *)a1 + v140);
  v142 = (char *)a2 + v140;
  v143 = *(_QWORD *)((char *)a1 + v140);
  v144 = *(_QWORD *)((char *)a2 + v140);
  if (v143)
  {
    if (v144)
    {
      v145 = *((_QWORD *)v142 + 1);
      *v141 = v144;
      v141[1] = v145;
      swift_retain();
      swift_release();
      goto LABEL_143;
    }
    swift_release();
  }
  else if (v144)
  {
    v146 = *((_QWORD *)v142 + 1);
    *v141 = v144;
    v141[1] = v146;
    swift_retain();
    goto LABEL_143;
  }
  *(_OWORD *)v141 = *(_OWORD *)v142;
LABEL_143:
  v147 = a3[11];
  v148 = (_QWORD *)((char *)a1 + v147);
  v149 = (_QWORD *)((char *)a2 + v147);
  v150 = *(_QWORD *)((char *)a1 + v147);
  v151 = *v149;
  if (!v150)
  {
    if (v151)
    {
      v153 = v149[1];
      *v148 = v151;
      v148[1] = v153;
      swift_retain();
      return a1;
    }
LABEL_149:
    *(_OWORD *)v148 = *(_OWORD *)v149;
    return a1;
  }
  if (!v151)
  {
    swift_release();
    goto LABEL_149;
  }
  v152 = v149[1];
  *v148 = v151;
  v148[1] = v152;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1004350C4(uint64_t a1)
{
  destroy for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration(a1);
  return a1;
}

_OWORD *initializeWithTake for NowPlayingViewModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for NowPlayingViewModel.DurationType(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011B84C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
    v14 = *((_QWORD *)v13 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v9, 1, v13))
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    else
    {
      *v8 = *v9;
      v15 = v13[6];
      v49 = (char *)v8 + v15;
      v16 = (char *)v9 + v15;
      v17 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v49, v16, v17);
      *(_QWORD *)((char *)v8 + v13[7]) = *(_QWORD *)((char *)v9 + v13[7]);
      *((_BYTE *)v8 + v13[8]) = *((_BYTE *)v9 + v13[8]);
      v18 = v13[9];
      v19 = (_QWORD *)((char *)v8 + v18);
      v20 = (uint64_t *)((char *)v9 + v18);
      v21 = *v20;
      if (*v20)
      {
        v22 = v20[1];
        *v19 = v21;
        v19[1] = v22;
      }
      else
      {
        *(_OWORD *)v19 = *(_OWORD *)v20;
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v14 + 56))(v8, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = type metadata accessor for ContentRating(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v29 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v30 = (_OWORD *)((char *)a1 + v29);
  v31 = (_OWORD *)((char *)a2 + v29);
  v32 = v31[9];
  v30[8] = v31[8];
  v30[9] = v32;
  v33 = v31[11];
  v30[10] = v31[10];
  v30[11] = v33;
  v34 = v31[5];
  v30[4] = v31[4];
  v30[5] = v34;
  v35 = v31[7];
  v30[6] = v31[6];
  v30[7] = v35;
  v36 = v31[1];
  *v30 = *v31;
  v30[1] = v36;
  v37 = v31[3];
  v30[2] = v31[2];
  v30[3] = v37;
  v38 = a3[10];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (uint64_t *)((char *)a2 + v38);
  v41 = *v40;
  if (*v40)
  {
    v42 = v40[1];
    *v39 = v41;
    v39[1] = v42;
  }
  else
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
  }
  v43 = a3[11];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (uint64_t *)((char *)a2 + v43);
  v46 = *v45;
  if (*v45)
  {
    v47 = v45[1];
    *v44 = v46;
    v44[1] = v47;
  }
  else
  {
    *(_OWORD *)v44 = *(_OWORD *)v45;
  }
  return a1;
}

_QWORD *assignWithTake for NowPlayingViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_OWORD *, uint64_t, uint64_t);
  int v16;
  int v17;
  int *v18;
  uint64_t v19;
  size_t v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(_OWORD *, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  _OWORD *v70;
  uint64_t v71;
  _OWORD *v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  _OWORD *v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = type metadata accessor for NowPlayingViewModel.DurationType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      v18 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
      v19 = *((_QWORD *)v18 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48))(v12, 1, v18))
      {
        memcpy(v11, v12, *(_QWORD *)(v14 + 64));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      else
      {
        *v11 = *v12;
        v35 = v18[6];
        v121 = (char *)v11 + v35;
        v36 = (char *)v12 + v35;
        v37 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v121, v36, v37);
        *(_QWORD *)((char *)v11 + v18[7]) = *(_QWORD *)((char *)v12 + v18[7]);
        *((_BYTE *)v11 + v18[8]) = *((_BYTE *)v12 + v18[8]);
        v38 = v18[9];
        v39 = (_QWORD *)((char *)v11 + v38);
        v40 = (uint64_t *)((char *)v12 + v38);
        v41 = *v40;
        if (*v40)
        {
          v42 = v40[1];
          *v39 = v41;
          v39[1] = v42;
        }
        else
        {
          *(_OWORD *)v39 = *(_OWORD *)v40;
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v19 + 56))(v11, 0, 1, v18);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      goto LABEL_25;
    }
    goto LABEL_7;
  }
  if (v17)
  {
    sub_10005B748((uint64_t)v11, type metadata accessor for NowPlayingViewModel.DurationType);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B84C0) - 8) + 64);
LABEL_8:
    memcpy(v11, v12, v20);
    goto LABEL_25;
  }
  v21 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v22 + 48);
  v24 = v23(v11, 1, v21);
  v25 = v23(v12, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      *v11 = *v12;
      v26 = v21[6];
      v27 = (char *)v11 + v26;
      v28 = (char *)v12 + v26;
      v29 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      *(_QWORD *)((char *)v11 + v21[7]) = *(_QWORD *)((char *)v12 + v21[7]);
      *((_BYTE *)v11 + v21[8]) = *((_BYTE *)v12 + v21[8]);
      v30 = v21[9];
      v31 = (_QWORD *)((char *)v11 + v30);
      v32 = (uint64_t *)((char *)v12 + v30);
      v33 = *v32;
      if (*v32)
      {
        v34 = v32[1];
        *v31 = v33;
        v31[1] = v34;
      }
      else
      {
        *(_OWORD *)v31 = *(_OWORD *)v32;
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v22 + 56))(v11, 0, 1, v21);
      goto LABEL_25;
    }
LABEL_17:
    v20 = *(_QWORD *)(v14 + 64);
    goto LABEL_8;
  }
  if (v25)
  {
    sub_10005B748((uint64_t)v11, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    goto LABEL_17;
  }
  *v11 = *v12;
  v43 = v21[6];
  v44 = (char *)v11 + v43;
  v45 = (char *)v12 + v43;
  v46 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  *(_QWORD *)((char *)v11 + v21[7]) = *(_QWORD *)((char *)v12 + v21[7]);
  *((_BYTE *)v11 + v21[8]) = *((_BYTE *)v12 + v21[8]);
  v47 = v21[9];
  v48 = (_QWORD *)((char *)v11 + v47);
  v49 = (uint64_t *)((char *)v12 + v47);
  v50 = *v49;
  if (*v48)
  {
    if (v50)
    {
      v51 = v49[1];
      *v48 = v50;
      v48[1] = v51;
      swift_release();
      goto LABEL_25;
    }
    swift_release();
  }
  else if (v50)
  {
    v120 = v49[1];
    *v48 = v50;
    v48[1] = v120;
    goto LABEL_25;
  }
  *(_OWORD *)v48 = *(_OWORD *)v49;
LABEL_25:
  v52 = a3[7];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = type metadata accessor for ContentRating(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
LABEL_30:
    v60 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
LABEL_31:
  v61 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v62 = (uint64_t)a1 + v61;
  v63 = (char *)a2 + v61;
  v65 = (_QWORD *)((char *)a1 + v61 + 16);
  v64 = *v65;
  if (*v65 == 1)
  {
LABEL_34:
    v67 = *((_OWORD *)v63 + 1);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v67;
    v68 = *((_OWORD *)v63 + 3);
    *(_OWORD *)(v62 + 32) = *((_OWORD *)v63 + 2);
    *(_OWORD *)(v62 + 48) = v68;
    goto LABEL_35;
  }
  v66 = *((_QWORD *)v63 + 2);
  if (v66 == 1)
  {
    sub_1004350C4(v62);
    goto LABEL_34;
  }
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *(_BYTE *)(v62 + 8) = v63[8];
  *(_BYTE *)(v62 + 9) = v63[9];
  if (v64)
  {
    if (v66)
    {
      v88 = *((_QWORD *)v63 + 3);
      *(_QWORD *)(v62 + 16) = v66;
      *(_QWORD *)(v62 + 24) = v88;
      swift_release();
      goto LABEL_76;
    }
    swift_release();
  }
  else if (v66)
  {
    v99 = *((_QWORD *)v63 + 3);
    *(_QWORD *)(v62 + 16) = v66;
    *(_QWORD *)(v62 + 24) = v99;
    goto LABEL_76;
  }
  *(_OWORD *)v65 = *((_OWORD *)v63 + 1);
LABEL_76:
  v102 = *((_QWORD *)v63 + 4);
  if (*(_QWORD *)(v62 + 32))
  {
    if (v102)
    {
      v103 = *((_QWORD *)v63 + 5);
      *(_QWORD *)(v62 + 32) = v102;
      *(_QWORD *)(v62 + 40) = v103;
      swift_release();
      goto LABEL_97;
    }
    swift_release();
  }
  else if (v102)
  {
    v104 = *((_QWORD *)v63 + 5);
    *(_QWORD *)(v62 + 32) = v102;
    *(_QWORD *)(v62 + 40) = v104;
    goto LABEL_97;
  }
  *(_OWORD *)(v62 + 32) = *((_OWORD *)v63 + 2);
LABEL_97:
  v111 = *((_QWORD *)v63 + 6);
  if (*(_QWORD *)(v62 + 48))
  {
    if (v111)
    {
      v112 = *((_QWORD *)v63 + 7);
      *(_QWORD *)(v62 + 48) = v111;
      *(_QWORD *)(v62 + 56) = v112;
      swift_release();
      goto LABEL_35;
    }
    swift_release();
  }
  else if (v111)
  {
    v113 = *((_QWORD *)v63 + 7);
    *(_QWORD *)(v62 + 48) = v111;
    *(_QWORD *)(v62 + 56) = v113;
    goto LABEL_35;
  }
  *(_OWORD *)(v62 + 48) = *((_OWORD *)v63 + 3);
LABEL_35:
  v69 = *(_QWORD *)(v62 + 80);
  v70 = (_OWORD *)(v62 + 64);
  v71 = *((_QWORD *)v63 + 10);
  v72 = v63 + 64;
  if (v69 == 1)
  {
LABEL_38:
    v73 = *((_OWORD *)v63 + 5);
    *v70 = *v72;
    *(_OWORD *)(v62 + 80) = v73;
    v74 = *((_OWORD *)v63 + 7);
    *(_OWORD *)(v62 + 96) = *((_OWORD *)v63 + 6);
    *(_OWORD *)(v62 + 112) = v74;
    goto LABEL_39;
  }
  if (v71 == 1)
  {
    sub_1004350C4(v62 + 64);
    goto LABEL_38;
  }
  *(_QWORD *)v70 = *(_QWORD *)v72;
  *(_BYTE *)(v62 + 72) = v63[72];
  *(_BYTE *)(v62 + 73) = v63[73];
  if (v69)
  {
    if (v71)
    {
      v89 = *((_QWORD *)v63 + 11);
      *(_QWORD *)(v62 + 80) = v71;
      *(_QWORD *)(v62 + 88) = v89;
      swift_release();
      goto LABEL_83;
    }
    swift_release();
  }
  else if (v71)
  {
    v100 = *((_QWORD *)v63 + 11);
    *(_QWORD *)(v62 + 80) = v71;
    *(_QWORD *)(v62 + 88) = v100;
    goto LABEL_83;
  }
  *(_OWORD *)(v62 + 80) = *((_OWORD *)v63 + 5);
LABEL_83:
  v105 = *((_QWORD *)v63 + 12);
  if (*(_QWORD *)(v62 + 96))
  {
    if (v105)
    {
      v106 = *((_QWORD *)v63 + 13);
      *(_QWORD *)(v62 + 96) = v105;
      *(_QWORD *)(v62 + 104) = v106;
      swift_release();
      goto LABEL_104;
    }
    swift_release();
  }
  else if (v105)
  {
    v107 = *((_QWORD *)v63 + 13);
    *(_QWORD *)(v62 + 96) = v105;
    *(_QWORD *)(v62 + 104) = v107;
    goto LABEL_104;
  }
  *(_OWORD *)(v62 + 96) = *((_OWORD *)v63 + 6);
LABEL_104:
  v114 = *((_QWORD *)v63 + 14);
  if (*(_QWORD *)(v62 + 112))
  {
    if (v114)
    {
      v115 = *((_QWORD *)v63 + 15);
      *(_QWORD *)(v62 + 112) = v114;
      *(_QWORD *)(v62 + 120) = v115;
      swift_release();
      goto LABEL_39;
    }
    swift_release();
  }
  else if (v114)
  {
    v116 = *((_QWORD *)v63 + 15);
    *(_QWORD *)(v62 + 112) = v114;
    *(_QWORD *)(v62 + 120) = v116;
    goto LABEL_39;
  }
  *(_OWORD *)(v62 + 112) = *((_OWORD *)v63 + 7);
LABEL_39:
  v75 = *(_QWORD *)(v62 + 144);
  v76 = (_OWORD *)(v62 + 128);
  v77 = *((_QWORD *)v63 + 18);
  v78 = v63 + 128;
  if (v75 == 1)
  {
LABEL_42:
    v79 = *((_OWORD *)v63 + 9);
    *v76 = *v78;
    *(_OWORD *)(v62 + 144) = v79;
    v80 = *((_OWORD *)v63 + 11);
    *(_OWORD *)(v62 + 160) = *((_OWORD *)v63 + 10);
    *(_OWORD *)(v62 + 176) = v80;
    goto LABEL_43;
  }
  if (v77 == 1)
  {
    sub_1004350C4(v62 + 128);
    goto LABEL_42;
  }
  *(_QWORD *)v76 = *(_QWORD *)v78;
  *(_BYTE *)(v62 + 136) = v63[136];
  *(_BYTE *)(v62 + 137) = v63[137];
  if (v75)
  {
    if (v77)
    {
      v90 = *((_QWORD *)v63 + 19);
      *(_QWORD *)(v62 + 144) = v77;
      *(_QWORD *)(v62 + 152) = v90;
      swift_release();
      goto LABEL_90;
    }
    swift_release();
  }
  else if (v77)
  {
    v101 = *((_QWORD *)v63 + 19);
    *(_QWORD *)(v62 + 144) = v77;
    *(_QWORD *)(v62 + 152) = v101;
    goto LABEL_90;
  }
  *(_OWORD *)(v62 + 144) = *((_OWORD *)v63 + 9);
LABEL_90:
  v108 = *((_QWORD *)v63 + 20);
  if (*(_QWORD *)(v62 + 160))
  {
    if (v108)
    {
      v109 = *((_QWORD *)v63 + 21);
      *(_QWORD *)(v62 + 160) = v108;
      *(_QWORD *)(v62 + 168) = v109;
      swift_release();
      goto LABEL_111;
    }
    swift_release();
  }
  else if (v108)
  {
    v110 = *((_QWORD *)v63 + 21);
    *(_QWORD *)(v62 + 160) = v108;
    *(_QWORD *)(v62 + 168) = v110;
    goto LABEL_111;
  }
  *(_OWORD *)(v62 + 160) = *((_OWORD *)v63 + 10);
LABEL_111:
  v117 = *((_QWORD *)v63 + 22);
  if (*(_QWORD *)(v62 + 176))
  {
    if (v117)
    {
      v118 = *((_QWORD *)v63 + 23);
      *(_QWORD *)(v62 + 176) = v117;
      *(_QWORD *)(v62 + 184) = v118;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v117)
  {
    v119 = *((_QWORD *)v63 + 23);
    *(_QWORD *)(v62 + 176) = v117;
    *(_QWORD *)(v62 + 184) = v119;
    goto LABEL_43;
  }
  *(_OWORD *)(v62 + 176) = *((_OWORD *)v63 + 11);
LABEL_43:
  v81 = a3[10];
  v82 = (_QWORD *)((char *)a1 + v81);
  v83 = (char *)a2 + v81;
  v84 = *(_QWORD *)((char *)a1 + v81);
  v85 = *(_QWORD *)((char *)a2 + v81);
  if (v84)
  {
    if (v85)
    {
      v86 = *((_QWORD *)v83 + 1);
      *v82 = v85;
      v82[1] = v86;
      swift_release();
      goto LABEL_59;
    }
    swift_release();
  }
  else if (v85)
  {
    v87 = *((_QWORD *)v83 + 1);
    *v82 = v85;
    v82[1] = v87;
    goto LABEL_59;
  }
  *(_OWORD *)v82 = *(_OWORD *)v83;
LABEL_59:
  v91 = a3[11];
  v92 = (_QWORD *)((char *)a1 + v91);
  v93 = (_QWORD *)((char *)a2 + v91);
  v94 = *(_QWORD *)((char *)a1 + v91);
  v95 = *v93;
  if (!v94)
  {
    if (v95)
    {
      v97 = v93[1];
      *v92 = v95;
      v92[1] = v97;
      return a1;
    }
LABEL_65:
    *(_OWORD *)v92 = *(_OWORD *)v93;
    return a1;
  }
  if (!v95)
  {
    swift_release();
    goto LABEL_65;
  }
  v96 = v93[1];
  *v92 = v95;
  v92[1] = v96;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100435C00);
}

uint64_t sub_100435C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011B84C0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011B8D50);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100435CB4);
}

uint64_t sub_100435CB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011B84C0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011B8D50);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100435D58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = &unk_100EBAF08;
  v6[1] = &unk_100EBAF20;
  sub_10015C698(319, (unint64_t *)&unk_1011B3AC0, type metadata accessor for NowPlayingViewModel.DurationType);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015C698(319, &qword_1011AF918, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100EBAF38;
      v6[5] = &unk_100EBAF50;
      v6[6] = &unk_100EBAF20;
      v6[7] = &unk_100EBAF20;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NowPlayingViewModel.DurationSnapshot(_OWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
    v12 = a3[9];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    if (*v14)
    {
      v15 = v14[1];
      *v13 = *v14;
      v13[1] = v15;
      swift_retain(v15);
    }
    else
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
    }
  }
  return v4;
}

uint64_t destroy for NowPlayingViewModel.DurationSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Date(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v7 = (_QWORD *)(a1 + *(int *)(a2 + 36));
  if (*v7)
    return swift_release(v7[1]);
  return result;
}

_OWORD *initializeWithCopy for NowPlayingViewModel.DurationSnapshot(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[9];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  if (*v13)
  {
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  return a1;
}

_QWORD *assignWithCopy for NowPlayingViewModel.DurationSnapshot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v10 = a3[9];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)((char *)a1 + v10);
  v14 = *(_QWORD *)((char *)a2 + v10);
  if (!v13)
  {
    if (v14)
    {
      v17 = *((_QWORD *)v12 + 1);
      *v11 = v14;
      v11[1] = v17;
      swift_retain(v17);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    return a1;
  }
  if (!v14)
  {
    swift_release(v11[1]);
    goto LABEL_7;
  }
  v15 = *((_QWORD *)v12 + 1);
  v16 = v11[1];
  *v11 = v14;
  v11[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  return a1;
}

_OWORD *initializeWithTake for NowPlayingViewModel.DurationSnapshot(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[9];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = *v13;
  if (*v13)
  {
    v15 = v13[1];
    *v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  return a1;
}

_OWORD *assignWithTake for NowPlayingViewModel.DurationSnapshot(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[9];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = *(_QWORD *)((char *)a1 + v11);
  v15 = *v13;
  if (!v14)
  {
    if (v15)
    {
      v18 = v13[1];
      *v12 = v15;
      v12[1] = v18;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    return a1;
  }
  if (!v15)
  {
    swift_release(v12[1]);
    goto LABEL_7;
  }
  v16 = v13[1];
  v17 = v12[1];
  *v12 = v15;
  v12[1] = v16;
  swift_release(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingViewModel.DurationSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100436288);
}

uint64_t sub_100436288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingViewModel.DurationSnapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100436320);
}

uint64_t sub_100436320(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = a2;
  return result;
}

uint64_t sub_10043639C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_100EBAF38;
    v4[5] = &unk_100EBAF20;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for NowPlayingViewModel.DurationType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v10 = v7[6];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
      v14 = v7[9];
      v15 = (uint64_t *)((char *)a1 + v14);
      v16 = (uint64_t *)((char *)a2 + v14);
      if (*v16)
      {
        v17 = v16[1];
        *v15 = *v16;
        v15[1] = v17;
        v18 = swift_retain();
      }
      else
      {
        v18 = *(__n128 *)v16;
        *(_OWORD *)v15 = *(_OWORD *)v16;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *, __n128))(v8 + 56))(a1, 0, 1, v7, v18);
    }
  }
  return a1;
}

double destroy for NowPlayingViewModel.DurationType(uint64_t a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v4 = a1 + *(int *)(v2 + 24);
    v5 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    if (*(_QWORD *)(a1 + *(int *)(v2 + 36)))
      *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_OWORD *initializeWithCopy for NowPlayingViewModel.DurationType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;

  v6 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = v6[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v12 = v6[9];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    if (*v14)
    {
      v15 = v14[1];
      *v13 = *v14;
      v13[1] = v15;
      v16 = swift_retain();
    }
    else
    {
      v16 = *(__n128 *)v14;
      *(_OWORD *)v13 = *(_OWORD *)v14;
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *, __n128))(v7 + 56))(a1, 0, 1, v6, v16);
  }
  return a1;
}

_QWORD *assignWithCopy for NowPlayingViewModel.DurationType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v6 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v20 = v6[6];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
      v24 = v6[9];
      v25 = (_QWORD *)((char *)a1 + v24);
      v26 = (_QWORD *)((char *)a2 + v24);
      v27 = *(_QWORD *)((char *)a1 + v24);
      v28 = *v26;
      if (v27)
      {
        if (v28)
        {
          v29 = v26[1];
          *v25 = v28;
          v25[1] = v29;
          swift_retain();
          swift_release();
          return a1;
        }
        swift_release();
      }
      else if (v28)
      {
        v31 = v26[1];
        *v25 = v28;
        v25[1] = v31;
        swift_retain();
        return a1;
      }
      *(_OWORD *)v25 = *(_OWORD *)v26;
      return a1;
    }
    sub_10005B748((uint64_t)a1, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  v11 = v6[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  v15 = v6[9];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  if (*v17)
  {
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = swift_retain();
  }
  else
  {
    v19 = *(__n128 *)v17;
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v7 + 56))(a1, 0, 1, v6, v19);
  return a1;
}

_OWORD *initializeWithTake for NowPlayingViewModel.DurationType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = v6[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v12 = v6[9];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = *v14;
    if (*v14)
    {
      v16 = v14[1];
      *v13 = v15;
      v13[1] = v16;
    }
    else
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_OWORD *assignWithTake for NowPlayingViewModel.DurationType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v6 = (int *)type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v20 = v6[6];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
      v24 = v6[9];
      v25 = (_QWORD *)((char *)a1 + v24);
      v26 = (uint64_t *)((char *)a2 + v24);
      v27 = *(_QWORD *)((char *)a1 + v24);
      v28 = *v26;
      if (v27)
      {
        if (v28)
        {
          v29 = v26[1];
          *v25 = v28;
          v25[1] = v29;
          swift_release();
          return a1;
        }
        swift_release();
      }
      else if (v28)
      {
        v31 = v26[1];
        *v25 = v28;
        v25[1] = v31;
        return a1;
      }
      *(_OWORD *)v25 = *(_OWORD *)v26;
      return a1;
    }
    sub_10005B748((uint64_t)a1, type metadata accessor for NowPlayingViewModel.DurationSnapshot);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v11 = v6[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  v15 = v6[9];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingViewModel.DurationType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100436BD0);
}

uint64_t sub_100436BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NowPlayingViewModel.DurationType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100436C28);
}

uint64_t sub_100436C28(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100436C78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_100436CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_100436CF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for NowPlayingViewModel.DurationSnapshot(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NowPlayingRouteSharePlayTogetherControl.Style(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NowPlayingRouteSharePlayTogetherControl.Style(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_100436D94(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100436DB0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TransportButtonType()
{
  return &type metadata for NowPlayingViewModel.TransportButtonType;
}

uint64_t destroy for NowPlayingViewModel.TransportButtonsConfiguration(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    if (v2 == 1)
      goto LABEL_8;
    result = swift_release(*(_QWORD *)(result + 24));
  }
  if (v1[4])
    result = swift_release(v1[5]);
  if (v1[6])
    result = swift_release(v1[7]);
LABEL_8:
  v3 = v1[10];
  if (v3)
  {
    if (v3 == 1)
      goto LABEL_15;
    result = swift_release(v1[11]);
  }
  if (v1[12])
    result = swift_release(v1[13]);
  if (v1[14])
    result = swift_release(v1[15]);
LABEL_15:
  v4 = v1[18];
  if (v4)
  {
    if (v4 == 1)
      return result;
    result = swift_release(v1[19]);
  }
  if (v1[20])
    result = swift_release(v1[21]);
  if (v1[22])
    return swift_release(v1[23]);
  return result;
}

uint64_t initializeWithCopy for NowPlayingViewModel.TransportButtonsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = v7;
      swift_retain(v7);
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    }
    v8 = *(_QWORD *)(a2 + 32);
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v9;
      swift_retain(v9);
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    v10 = *(_QWORD *)(a2 + 48);
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v10;
      *(_QWORD *)(a1 + 56) = v11;
      swift_retain(v11);
    }
    else
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    }
  }
  v12 = (_OWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = (_OWORD *)(a2 + 64);
  if (v13 == 1)
  {
    v15 = *(_OWORD *)(a2 + 80);
    *v12 = *v14;
    *(_OWORD *)(a1 + 80) = v15;
    v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v16;
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v14;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
    if (v13)
    {
      v17 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v13;
      *(_QWORD *)(a1 + 88) = v17;
      swift_retain(v17);
    }
    else
    {
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    }
    v18 = *(_QWORD *)(a2 + 96);
    if (v18)
    {
      v19 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v18;
      *(_QWORD *)(a1 + 104) = v19;
      swift_retain(v19);
    }
    else
    {
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    }
    v20 = *(_QWORD *)(a2 + 112);
    if (v20)
    {
      v21 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = v20;
      *(_QWORD *)(a1 + 120) = v21;
      swift_retain(v21);
    }
    else
    {
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    }
  }
  v22 = (_OWORD *)(a1 + 128);
  v23 = *(_QWORD *)(a2 + 144);
  v24 = (_OWORD *)(a2 + 128);
  if (v23 == 1)
  {
    v25 = *(_OWORD *)(a2 + 144);
    *v22 = *v24;
    *(_OWORD *)(a1 + 144) = v25;
    v26 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v26;
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v24;
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
    if (v23)
    {
      v27 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = v23;
      *(_QWORD *)(a1 + 152) = v27;
      swift_retain(v27);
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    }
    v28 = *(_QWORD *)(a2 + 160);
    if (v28)
    {
      v29 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = v28;
      *(_QWORD *)(a1 + 168) = v29;
      swift_retain(v29);
    }
    else
    {
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    }
    v30 = *(_QWORD *)(a2 + 176);
    if (v30)
    {
      v31 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = v30;
      *(_QWORD *)(a1 + 184) = v31;
      swift_retain(v31);
    }
    else
    {
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    }
  }
  return a1;
}

uint64_t assignWithCopy for NowPlayingViewModel.TransportButtonsConfiguration(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v5 = (_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  v7 = a2 + 1;
  v6 = *((_QWORD *)a2 + 2);
  if (v4 == 1)
  {
    if (v6 == 1)
    {
      v8 = *a2;
      v9 = a2[1];
      v10 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)a1 = v8;
      *(_OWORD *)(a1 + 16) = v9;
      goto LABEL_35;
    }
    v14 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = v14;
    *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
    v15 = *((_QWORD *)a2 + 2);
    if (v15)
    {
      v16 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 16) = v15;
      *(_QWORD *)(a1 + 24) = v16;
      swift_retain();
    }
    else
    {
      *v5 = *v7;
    }
    v20 = *((_QWORD *)a2 + 4);
    if (v20)
    {
      v21 = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 32) = v20;
      *(_QWORD *)(a1 + 40) = v21;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = a2[2];
    }
    v23 = *((_QWORD *)a2 + 6);
    if (!v23)
    {
      *(_OWORD *)(a1 + 48) = a2[3];
      goto LABEL_35;
    }
    goto LABEL_32;
  }
  if (v6 == 1)
  {
    sub_1004350C4(a1);
    v11 = a2[3];
    v13 = *a2;
    v12 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)a1 = v13;
    *(_OWORD *)(a1 + 16) = v12;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v17;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  v18 = *((_QWORD *)a2 + 2);
  if (v4)
  {
    if (v18)
    {
      v19 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 16) = v18;
      *(_QWORD *)(a1 + 24) = v19;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v18)
  {
    v22 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 16) = v18;
    *(_QWORD *)(a1 + 24) = v22;
    swift_retain();
    goto LABEL_21;
  }
  *v5 = *v7;
LABEL_21:
  v24 = *((_QWORD *)a2 + 4);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v24)
    {
      v25 = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 32) = v24;
      *(_QWORD *)(a1 + 40) = v25;
      swift_retain();
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 32) = v24;
    *(_QWORD *)(a1 + 40) = v26;
    swift_retain();
    goto LABEL_28;
  }
  *(_OWORD *)(a1 + 32) = a2[2];
LABEL_28:
  v23 = *((_QWORD *)a2 + 6);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v23)
    {
      v27 = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 48) = v23;
      *(_QWORD *)(a1 + 56) = v27;
      swift_retain();
      swift_release();
      goto LABEL_35;
    }
    swift_release();
  }
  else if (v23)
  {
LABEL_32:
    v28 = *((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 48) = v23;
    *(_QWORD *)(a1 + 56) = v28;
    swift_retain();
    goto LABEL_35;
  }
  *(_OWORD *)(a1 + 48) = a2[3];
LABEL_35:
  v30 = (_OWORD *)(a1 + 80);
  v29 = *(_QWORD *)(a1 + 80);
  v31 = (_OWORD *)(a1 + 64);
  v33 = a2 + 5;
  v32 = *((_QWORD *)a2 + 10);
  v34 = a2 + 4;
  if (v29 != 1)
  {
    if (v32 == 1)
    {
      sub_1004350C4(a1 + 64);
      v38 = a2[7];
      v40 = *v34;
      v39 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v38;
      *v31 = v40;
      *(_OWORD *)(a1 + 80) = v39;
      goto LABEL_70;
    }
    v44 = *(_QWORD *)v34;
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)v31 = v44;
    *(_BYTE *)(a1 + 73) = *((_BYTE *)a2 + 73);
    v45 = *((_QWORD *)a2 + 10);
    if (v29)
    {
      if (v45)
      {
        v46 = *((_QWORD *)a2 + 11);
        *(_QWORD *)(a1 + 80) = v45;
        *(_QWORD *)(a1 + 88) = v46;
        swift_retain();
        swift_release();
        goto LABEL_55;
      }
      swift_release();
    }
    else if (v45)
    {
      v49 = *((_QWORD *)a2 + 11);
      *(_QWORD *)(a1 + 80) = v45;
      *(_QWORD *)(a1 + 88) = v49;
      swift_retain();
      goto LABEL_55;
    }
    *v30 = *v33;
LABEL_55:
    v51 = *((_QWORD *)a2 + 12);
    if (*(_QWORD *)(a1 + 96))
    {
      if (v51)
      {
        v52 = *((_QWORD *)a2 + 13);
        *(_QWORD *)(a1 + 96) = v51;
        *(_QWORD *)(a1 + 104) = v52;
        swift_retain();
        swift_release();
        goto LABEL_62;
      }
      swift_release();
    }
    else if (v51)
    {
      v53 = *((_QWORD *)a2 + 13);
      *(_QWORD *)(a1 + 96) = v51;
      *(_QWORD *)(a1 + 104) = v53;
      swift_retain();
      goto LABEL_62;
    }
    *(_OWORD *)(a1 + 96) = a2[6];
LABEL_62:
    v31 = (_OWORD *)(a1 + 112);
    v50 = *((_QWORD *)a2 + 14);
    if (*(_QWORD *)(a1 + 112))
    {
      if (v50)
      {
        v54 = *((_QWORD *)a2 + 15);
        *(_QWORD *)(a1 + 112) = v50;
        *(_QWORD *)(a1 + 120) = v54;
        swift_retain();
        swift_release();
        goto LABEL_70;
      }
      swift_release();
    }
    else if (v50)
    {
LABEL_66:
      v55 = *((_QWORD *)a2 + 15);
      *(_QWORD *)(a1 + 112) = v50;
      *(_QWORD *)(a1 + 120) = v55;
      swift_retain();
      goto LABEL_70;
    }
    v35 = a2[7];
    goto LABEL_69;
  }
  if (v32 != 1)
  {
    v41 = *(_QWORD *)v34;
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)v31 = v41;
    *(_BYTE *)(a1 + 73) = *((_BYTE *)a2 + 73);
    v42 = *((_QWORD *)a2 + 10);
    if (v42)
    {
      v43 = *((_QWORD *)a2 + 11);
      *(_QWORD *)(a1 + 80) = v42;
      *(_QWORD *)(a1 + 88) = v43;
      swift_retain();
    }
    else
    {
      *v30 = *v33;
    }
    v47 = *((_QWORD *)a2 + 12);
    if (v47)
    {
      v48 = *((_QWORD *)a2 + 13);
      *(_QWORD *)(a1 + 96) = v47;
      *(_QWORD *)(a1 + 104) = v48;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 96) = a2[6];
    }
    v50 = *((_QWORD *)a2 + 14);
    if (!v50)
    {
      *(_OWORD *)(a1 + 112) = a2[7];
      goto LABEL_70;
    }
    goto LABEL_66;
  }
  v35 = *v34;
  v36 = a2[5];
  v37 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v37;
  *(_OWORD *)(a1 + 80) = v36;
LABEL_69:
  *v31 = v35;
LABEL_70:
  v57 = (_OWORD *)(a1 + 144);
  v56 = *(_QWORD *)(a1 + 144);
  v58 = (_OWORD *)(a1 + 128);
  v60 = a2 + 9;
  v59 = *((_QWORD *)a2 + 18);
  v61 = a2 + 8;
  if (v56 == 1)
  {
    if (v59 == 1)
    {
      v62 = *v61;
      v63 = a2[9];
      v64 = a2[11];
      *(_OWORD *)(a1 + 160) = a2[10];
      *(_OWORD *)(a1 + 176) = v64;
      *(_OWORD *)(a1 + 144) = v63;
LABEL_104:
      *v58 = v62;
      return a1;
    }
    v68 = *(_QWORD *)v61;
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)v58 = v68;
    *(_BYTE *)(a1 + 137) = *((_BYTE *)a2 + 137);
    v69 = *((_QWORD *)a2 + 18);
    if (v69)
    {
      v70 = *((_QWORD *)a2 + 19);
      *(_QWORD *)(a1 + 144) = v69;
      *(_QWORD *)(a1 + 152) = v70;
      swift_retain();
    }
    else
    {
      *v57 = *v60;
    }
    v74 = *((_QWORD *)a2 + 20);
    if (v74)
    {
      v75 = *((_QWORD *)a2 + 21);
      *(_QWORD *)(a1 + 160) = v74;
      *(_QWORD *)(a1 + 168) = v75;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 160) = a2[10];
    }
    v77 = *((_QWORD *)a2 + 22);
    if (!v77)
    {
      *(_OWORD *)(a1 + 176) = a2[11];
      return a1;
    }
LABEL_101:
    v82 = *((_QWORD *)a2 + 23);
    *(_QWORD *)(a1 + 176) = v77;
    *(_QWORD *)(a1 + 184) = v82;
    swift_retain();
    return a1;
  }
  if (v59 != 1)
  {
    v71 = *(_QWORD *)v61;
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)v58 = v71;
    *(_BYTE *)(a1 + 137) = *((_BYTE *)a2 + 137);
    v72 = *((_QWORD *)a2 + 18);
    if (v56)
    {
      if (v72)
      {
        v73 = *((_QWORD *)a2 + 19);
        *(_QWORD *)(a1 + 144) = v72;
        *(_QWORD *)(a1 + 152) = v73;
        swift_retain();
        swift_release();
        goto LABEL_90;
      }
      swift_release();
    }
    else if (v72)
    {
      v76 = *((_QWORD *)a2 + 19);
      *(_QWORD *)(a1 + 144) = v72;
      *(_QWORD *)(a1 + 152) = v76;
      swift_retain();
      goto LABEL_90;
    }
    *v57 = *v60;
LABEL_90:
    v78 = *((_QWORD *)a2 + 20);
    if (*(_QWORD *)(a1 + 160))
    {
      if (v78)
      {
        v79 = *((_QWORD *)a2 + 21);
        *(_QWORD *)(a1 + 160) = v78;
        *(_QWORD *)(a1 + 168) = v79;
        swift_retain();
        swift_release();
        goto LABEL_97;
      }
      swift_release();
    }
    else if (v78)
    {
      v80 = *((_QWORD *)a2 + 21);
      *(_QWORD *)(a1 + 160) = v78;
      *(_QWORD *)(a1 + 168) = v80;
      swift_retain();
      goto LABEL_97;
    }
    *(_OWORD *)(a1 + 160) = a2[10];
LABEL_97:
    v58 = (_OWORD *)(a1 + 176);
    v77 = *((_QWORD *)a2 + 22);
    if (*(_QWORD *)(a1 + 176))
    {
      if (v77)
      {
        v81 = *((_QWORD *)a2 + 23);
        *(_QWORD *)(a1 + 176) = v77;
        *(_QWORD *)(a1 + 184) = v81;
        swift_retain();
        swift_release();
        return a1;
      }
      swift_release();
    }
    else if (v77)
    {
      goto LABEL_101;
    }
    v62 = a2[11];
    goto LABEL_104;
  }
  sub_1004350C4(a1 + 128);
  v65 = a2[11];
  v67 = *v61;
  v66 = a2[9];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v65;
  *v58 = v67;
  *(_OWORD *)(a1 + 144) = v66;
  return a1;
}

uint64_t assignWithTake for NowPlayingViewModel.TransportButtonsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = (_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4 == 1)
    goto LABEL_4;
  v7 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6 == 1)
  {
    sub_1004350C4(a1);
LABEL_4:
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    goto LABEL_5;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  if (v4)
  {
    if (v6)
    {
      v23 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v23;
      swift_release();
      goto LABEL_31;
    }
    swift_release();
  }
  else if (v6)
  {
    v26 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v26;
    goto LABEL_31;
  }
  *v5 = *v7;
LABEL_31:
  v29 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v29)
    {
      v30 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v29;
      *(_QWORD *)(a1 + 40) = v30;
      swift_release();
      goto LABEL_52;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v29;
    *(_QWORD *)(a1 + 40) = v31;
    goto LABEL_52;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_52:
  v38 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v38)
    {
      v39 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v38;
      *(_QWORD *)(a1 + 56) = v39;
      swift_release();
      goto LABEL_5;
    }
    swift_release();
  }
  else if (v38)
  {
    v40 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v38;
    *(_QWORD *)(a1 + 56) = v40;
    goto LABEL_5;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_5:
  v10 = *(_QWORD *)(a1 + 80);
  v11 = (_OWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = (_OWORD *)(a2 + 64);
  if (v10 == 1)
  {
LABEL_8:
    v14 = *(_OWORD *)(a2 + 80);
    *v11 = *v13;
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    goto LABEL_9;
  }
  if (v12 == 1)
  {
    sub_1004350C4(a1 + 64);
    goto LABEL_8;
  }
  *(_QWORD *)v11 = *(_QWORD *)v13;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  if (v10)
  {
    if (v12)
    {
      v24 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v12;
      *(_QWORD *)(a1 + 88) = v24;
      swift_release();
      goto LABEL_38;
    }
    swift_release();
  }
  else if (v12)
  {
    v27 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 88) = v27;
    goto LABEL_38;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_38:
  v32 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v32)
    {
      v33 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v32;
      *(_QWORD *)(a1 + 104) = v33;
      swift_release();
      goto LABEL_59;
    }
    swift_release();
  }
  else if (v32)
  {
    v34 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = v32;
    *(_QWORD *)(a1 + 104) = v34;
    goto LABEL_59;
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
LABEL_59:
  v41 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v41)
    {
      v42 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = v41;
      *(_QWORD *)(a1 + 120) = v42;
      swift_release();
      goto LABEL_9;
    }
    swift_release();
  }
  else if (v41)
  {
    v43 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = v41;
    *(_QWORD *)(a1 + 120) = v43;
    goto LABEL_9;
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
LABEL_9:
  v16 = *(_QWORD *)(a1 + 144);
  v17 = (_QWORD *)(a1 + 128);
  v18 = *(_QWORD *)(a2 + 144);
  v19 = (_QWORD *)(a2 + 128);
  if (v16 != 1)
  {
    if (v18 == 1)
    {
      sub_1004350C4(a1 + 128);
      goto LABEL_12;
    }
    *v17 = *v19;
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
    if (v16)
    {
      if (v18)
      {
        v25 = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 144) = v18;
        *(_QWORD *)(a1 + 152) = v25;
        swift_release();
        goto LABEL_45;
      }
      swift_release();
    }
    else if (v18)
    {
      v28 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = v18;
      *(_QWORD *)(a1 + 152) = v28;
      goto LABEL_45;
    }
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
LABEL_45:
    v35 = *(_QWORD *)(a2 + 160);
    if (*(_QWORD *)(a1 + 160))
    {
      if (v35)
      {
        v36 = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 160) = v35;
        *(_QWORD *)(a1 + 168) = v36;
        swift_release();
        goto LABEL_66;
      }
      swift_release();
    }
    else if (v35)
    {
      v37 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = v35;
      *(_QWORD *)(a1 + 168) = v37;
      goto LABEL_66;
    }
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
LABEL_66:
    v44 = *(_QWORD *)(a2 + 176);
    if (*(_QWORD *)(a1 + 176))
    {
      if (v44)
      {
        v45 = *(_QWORD *)(a2 + 184);
        *(_QWORD *)(a1 + 176) = v44;
        *(_QWORD *)(a1 + 184) = v45;
        swift_release();
        return a1;
      }
      swift_release();
    }
    else if (v44)
    {
      v46 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = v44;
      *(_QWORD *)(a1 + 184) = v46;
      return a1;
    }
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    return a1;
  }
LABEL_12:
  v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)v17 = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 144) = v20;
  v21 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v21;
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingViewModel.TransportButtonsConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingViewModel.TransportButtonsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TransportButtonsConfiguration()
{
  return &type metadata for NowPlayingViewModel.TransportButtonsConfiguration;
}

uint64_t destroy for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration(uint64_t result)
{
  _QWORD *v1;

  v1 = (_QWORD *)result;
  if (*(_QWORD *)(result + 16))
    result = swift_release(*(_QWORD *)(result + 24));
  if (v1[4])
    result = swift_release(v1[5]);
  if (v1[6])
    return swift_release(v1[7]);
  return result;
}

uint64_t initializeWithCopy for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v5;
    swift_retain(v5);
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  v6 = *(_QWORD *)(a2 + 32);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v7;
    swift_retain(v7);
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  v8 = *(_QWORD *)(a2 + 48);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  v5 = (_OWORD *)(a1 + 16);
  v7 = a2 + 2;
  v6 = a2[2];
  if (*(_QWORD *)(a1 + 16))
  {
    if (v6)
    {
      v8 = a2[3];
      v9 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      swift_retain(v8);
      swift_release(v9);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 24));
  }
  else if (v6)
  {
    v10 = a2[3];
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v10;
    swift_retain(v10);
    goto LABEL_8;
  }
  *v5 = *v7;
LABEL_8:
  v11 = a2[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v11)
    {
      v12 = a2[5];
      v13 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 40) = v12;
      swift_retain(v12);
      swift_release(v13);
      goto LABEL_15;
    }
    swift_release(*(_QWORD *)(a1 + 40));
  }
  else if (v11)
  {
    v14 = a2[5];
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v14;
    swift_retain(v14);
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_15:
  v15 = a2[6];
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v15)
    {
      v18 = a2[7];
      *(_QWORD *)(a1 + 48) = v15;
      *(_QWORD *)(a1 + 56) = v18;
      swift_retain(v18);
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v15)
  {
    swift_release(*(_QWORD *)(a1 + 56));
    goto LABEL_21;
  }
  v16 = a2[7];
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 56) = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

uint64_t assignWithTake for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = (_OWORD *)(a1 + 16);
  v6 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 24);
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = v7;
      swift_release(v8);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 24));
  }
  else if (v5)
  {
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v9;
    goto LABEL_8;
  }
  *v4 = *v6;
LABEL_8:
  v10 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 40);
      v12 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      swift_release(v12);
      goto LABEL_15;
    }
    swift_release(*(_QWORD *)(a1 + 40));
  }
  else if (v10)
  {
    v13 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v13;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_15:
  v14 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v14)
    {
      v17 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v14;
      *(_QWORD *)(a1 + 56) = v17;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v14)
  {
    swift_release(*(_QWORD *)(a1 + 56));
    goto LABEL_21;
  }
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  swift_release(v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration()
{
  return &type metadata for NowPlayingViewModel.TransportButtonsConfiguration.ButtonConfiguration;
}

uint64_t sub_100437FCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004380C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      type metadata accessor for ActivityType(0);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004381C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004382B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 32 * a1 + 32;
    v7 = a3 + 32 * v4;
    if (v6 >= v7 || v6 + 32 * v4 <= a3)
    {
      sub_100007E8C(&qword_1011B3D40);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004383BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 136 * a1 + 32;
  v6 = a3 + 136 * v4;
  if (v5 >= v6 || v5 + 136 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004384B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 104 * a1 + 32;
  v6 = a3 + 104 * v4;
  if (v5 >= v6 || v5 + 104 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_1004385A0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100438684(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100438774(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 120 * a1 + 32;
  v6 = a3 + 120 * v4;
  if (v5 >= v6 || v5 + 120 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100438868(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100438958(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 56 * a1 + 32;
  v6 = a3 + 56 * v4;
  if (v5 >= v6 || v5 + 56 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100438A4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 56 * a1 + 32;
  v6 = a3 + 56 * v4;
  if (v5 >= v6 || v5 + 56 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100438B40(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100438C28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100438D18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_100438E08(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_100438EF0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100438FD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 16 * a1 + 32;
    v8 = a3 + 16 * v5;
    if (v7 >= v8 || v7 + 16 * v5 <= a3)
    {
      sub_100007E8C(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004390DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004391D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 8 * a1 + 32;
    v8 = a3 + 8 * v5;
    if (v7 >= v8 || v7 + 8 * v5 <= a3)
    {
      sub_100007E8C(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004392D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(sub_100007E8C(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004393EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v7 = a4 + 40 * a1 + 32;
  v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    sub_100007E8C(a5);
    swift_arrayInitWithCopy(a3);
    return v8;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004394F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

double sub_10043960C(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_unknownObjectRelease(*a1).n128_u64[0];
  return result;
}

uint64_t sub_100439614(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_unknownObjectRetain(v3, a2);
  return a1;
}

uint64_t *sub_100439650(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4, a2);
  swift_unknownObjectRelease(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t *sub_1004396B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  return a1;
}

uint64_t getEnumTagSinglePayload for SegueResponseContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SegueResponseContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SocialBadgingModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SocialBadgingModifier);
}

uint64_t type metadata accessor for SocialBadgesViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SocialBadgesViewModel);
}

uint64_t sub_1004397A0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA05FC, 1);
}

uint64_t sub_1004397D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t AssociatedConformanceWitness;

  v34 = a2;
  v35 = a3;
  v32 = a5;
  v33 = a1;
  v36 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a5, a4, &unk_100FA04AC, &unk_100FA04C4);
  v9 = type metadata accessor for ArraySlice(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ArraySlice<A>, v9);
  v11 = *(_QWORD *)(swift_getAssociatedConformanceWitness(a5, a4, AssociatedTypeWitness, &unk_100FA04AC, &unk_100FA04BC)
                  + 8);
  v46 = type metadata accessor for EnumeratedCollection(255, v9, WitnessTable, v11);
  v47 = swift_getAssociatedTypeWitness(255, v11, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v48 = sub_100044B54(&qword_1011B3F40);
  v49 = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v46);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v11, AssociatedTypeWitness, v47, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v12 = type metadata accessor for ForEach(255, &v46);
  v45 = sub_10005610C(&qword_1011B3F48, &qword_1011B3F40, (void (*)(void))sub_10043A9B8);
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v14 = type metadata accessor for ZStack(0, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v31 - v16;
  v18 = type metadata accessor for ModifiedContent(0, v14, &type metadata for _PaddingLayout);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v31 - v23;
  v26 = static Alignment.leading.getter(v25);
  v38 = a4;
  v39 = v32;
  v40 = v33;
  v41 = v34;
  v42 = v35;
  ZStack.init(alignment:content:)(v26, v27, sub_10043AA3C, v37, v12, v13);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v14);
  View.padding(_:)(v14, v28, 10.0);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v43 = v28;
  v44 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  sub_10081EB14((uint64_t)v21, v18, (uint64_t)v24);
  v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v29(v21, v18);
  sub_1000EA744((uint64_t)v24, v18, v36);
  return ((uint64_t (*)(char *, uint64_t))v29)(v24, v18);
}

uint64_t sub_100439AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t WitnessTable;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  uint64_t AssociatedConformanceWitness;

  v31 = a1;
  v33 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4, a3, &unk_100FA04AC, &unk_100FA04C4);
  v30 = type metadata accessor for ArraySlice(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ArraySlice<A>, v30);
  v9 = *(_QWORD *)(swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_100FA04AC, &unk_100FA04BC)
                 + 8);
  v10 = type metadata accessor for EnumeratedCollection(255, v30, WitnessTable, v9);
  v11 = swift_getAssociatedTypeWitness(255, v9, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v28 = sub_100044B54(&qword_1011B3F40);
  *(_QWORD *)&v36 = v10;
  *((_QWORD *)&v36 + 1) = v11;
  *(_QWORD *)&v37 = v28;
  *((_QWORD *)&v37 + 1) = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v10);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v9, AssociatedTypeWitness, v11, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v12 = type metadata accessor for ForEach(0, &v36);
  v29 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - v16;
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 32);
  swift_unknownObjectRetain(a2, v19);
  v20 = v18(a3, a4);
  swift_unknownObjectRelease(a2);
  *(_QWORD *)&v35[0] = v20;
  v21 = type metadata accessor for Array(0);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for [A], v21);
  Collection.prefix(_:)(&v36, v31, v21, v22);
  v35[0] = v36;
  v35[1] = v37;
  v23 = swift_allocObject(&unk_1010C58F8, 32, 7);
  *(_QWORD *)(v23 + 16) = a3;
  *(_QWORD *)(v23 + 24) = a4;
  v24 = sub_10005610C(&qword_1011B3F48, &qword_1011B3F40, (void (*)(void))sub_10043A9B8);
  static ForEach<>.enumerated(_:content:)((uint64_t)v35, (uint64_t)sub_10043AA5C, v23, v30, v11, v28, WitnessTable, v24, (uint64_t)v14, v9);
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)&v35[0]);
  v34 = v24;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  sub_10081EB14((uint64_t)v14, v12, (uint64_t)v17);
  v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  v25(v14, v12);
  sub_1000EA744((uint64_t)v17, v12, v33);
  return ((uint64_t (*)(char *, uint64_t))v25)(v17, v12);
}

uint64_t sub_100439DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v18;

  v8 = type metadata accessor for SocialBadgeView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3, a2, &unk_100FA04AC, &unk_100FA04C4);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &unk_100FA04AC, &unk_100FA04BC);
  v13 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v14 = swift_checkMetadataState(0, AssociatedTypeWitness);
  v13(v14, AssociatedConformanceWitness);
  v15 = -(Int.seconds.getter(10) * (double)a1);
  sub_10043AA64((uint64_t)v10, a4);
  v16 = a4 + *(int *)(sub_100007E8C(&qword_1011B3F40) + 36);
  *(double *)v16 = v15;
  *(_QWORD *)(v16 + 8) = 0;
  return sub_10005B748((uint64_t)v10, type metadata accessor for SocialBadgeView);
}

uint64_t sub_100439F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1004397D4(*v2, v2[1], v2[2], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_100439F44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[48];
  _OWORD v50[3];

  v48 = a1;
  v1 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v43 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v47 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v45 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v44);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 7, 10, v19);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v49);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v1);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v42, (uint64_t)v7, (uint64_t)v49, (uint64_t)v4, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10005B748((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder);
  v20 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v21 = sub_1000E4264();
  *(_QWORD *)&v50[0] = v20;
  *((_QWORD *)&v50[0] + 1) = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v50, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(0, 0, 1, v8, OpaqueTypeConformance2);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v10, v8);
  v24 = static Color.white.getter(v23);
  v25 = UIScreen.Dimensions.size.getter(v24);
  v27 = v26;
  v28 = v25;
  LOBYTE(v10) = v29;
  *(_QWORD *)&v50[0] = v8;
  *((_QWORD *)&v50[0] + 1) = OpaqueTypeConformance2;
  v30 = swift_getOpaqueTypeConformance2(v50, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  View.border(_:corner:)(v27, (char)v10, 0, 0, 1, v11, v30, v28);
  v31 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v13, v11, v31);
  v33 = v45;
  v32 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v18, v16, v46);
  v34 = &v18[*(int *)(v44 + 36)];
  *(_QWORD *)v34 = 0x3FF0000000000000;
  *((_WORD *)v34 + 4) = 0;
  v35 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v32);
  v36 = static Alignment.center.getter(v35);
  _FrameLayout.init(width:height:alignment:)(v50, 0x4034000000000000, 0, 0, 1, v36, v37);
  v38 = v48;
  sub_10043B6E0((uint64_t)v18, v48);
  v39 = (_OWORD *)(v38 + *(int *)(sub_100007E8C(&qword_1011A0630) + 36));
  v40 = v50[1];
  *v39 = v50[0];
  v39[1] = v40;
  v39[2] = v50[2];
  return sub_10043B728((uint64_t)v18);
}

uint64_t sub_10043A31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v30 = a1;
  v31 = a3;
  WitnessTable = swift_getWitnessTable(&unk_100EBB0D0, a2);
  v5 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v6 = *(_QWORD *)(a2 + 24);
  v27 = *(_QWORD *)(a2 + 16);
  v8 = type metadata accessor for SocialBadgesView(255, v27, v6, v7);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _PaddingLayout);
  v38 = swift_getWitnessTable(&unk_100EBB160, v8);
  v39 = &protocol witness table for _PaddingLayout;
  v10 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v11 = type metadata accessor for _OverlayModifier(255, v9, v10);
  v12 = type metadata accessor for ModifiedContent(0, v5, v11);
  v28 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v26 - v17;
  v19 = static Alignment.bottomTrailing.getter(v16);
  v21 = v20;
  v33 = v27;
  v34 = v6;
  v35 = v29;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v5);
  View.overlay<A>(alignment:content:)(v19, v21, sub_10043A710, v32, v5, v9, v22, v10);
  v23 = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v11);
  v36 = v22;
  v37 = v23;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  sub_10081EB14((uint64_t)v14, v12, (uint64_t)v18);
  v24 = *(void (**)(char *, uint64_t))(v28 + 8);
  v24(v14, v12);
  sub_1000EA744((uint64_t)v18, v12, v31);
  return ((uint64_t (*)(char *, uint64_t))v24)(v18, v12);
}

void sub_10043A534(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  char v40;

  v8 = *(_QWORD *)(a3 + 8);
  v9 = swift_unknownObjectRetain(*(_QWORD *)a1, a2);
  v10 = ObservedObject.init(wrappedValue:)(v9, a2, v8);
  v12 = v11;
  *(_QWORD *)&v35 = 3;
  *((_QWORD *)&v35 + 1) = v10;
  v36 = v11;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v18 = type metadata accessor for SocialBadgesView(0, a2, a3, v17);
  WitnessTable = swift_getWitnessTable(&unk_100EBB160, v18);
  View.padding(_:)(v18, WitnessTable, v13, v14, v15, v16);
  swift_unknownObjectRelease(v12);
  v20 = v30;
  v23 = v29;
  v24 = v30;
  v25 = v31;
  v26 = v32;
  v27 = v33;
  v28 = v34;
  v21 = type metadata accessor for ModifiedContent(0, v18, &type metadata for _PaddingLayout);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  sub_10081EB14((uint64_t)&v23, v21, (uint64_t)&v35);
  swift_unknownObjectRelease(v20);
  v22 = v36;
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v33 = v39;
  v34 = v40;
  sub_1000EA744((uint64_t)&v29, v21, a4);
  swift_unknownObjectRelease(v22);
}

uint64_t sub_10043A6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10043A31C(a1, a2, a3);
}

uint64_t type metadata accessor for SocialBadgesView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SocialBadgesView);
}

void sub_10043A710(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10043A534(*(double **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10043A71C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_unknownObjectRetain(v3, a2);
  return a1;
}

double sub_10043A750(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_unknownObjectRelease(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

_QWORD *sub_10043A758(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[2];
  v4 = a1[2];
  a1[2] = v3;
  swift_unknownObjectRetain(v3, a2);
  swift_unknownObjectRelease(v4);
  return a1;
}

uint64_t sub_10043A7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease(v3);
  return a1;
}

uint64_t _s6BorderVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6BorderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10043A860(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for SocialBadgingModifier(255, *a1, v5, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EBB0D0, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v10 = type metadata accessor for SocialBadgesView(255, v4, v5, v9);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _PaddingLayout);
  swift_getWitnessTable(&unk_100EBB160, v10);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v13 = type metadata accessor for _OverlayModifier(255, v11, v12);
  v14 = type metadata accessor for ModifiedContent(255, v8, v13);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v13);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
}

uint64_t sub_10043A984(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA0660, 1);
}

unint64_t sub_10043A9B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B3F50;
  if (!qword_1011B3F50)
  {
    v1 = type metadata accessor for SocialBadgeView(255);
    result = swift_getWitnessTable(&unk_100EBB1C0, v1);
    atomic_store(result, (unint64_t *)&qword_1011B3F50);
  }
  return result;
}

uint64_t type metadata accessor for SocialBadgeView(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B3FB0;
  if (!qword_1011B3FB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SocialBadgeView);
  return result;
}

uint64_t sub_10043AA3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100439AE8(v1[4], v1[6], v1[2], v1[3], a1);
}

uint64_t sub_10043AA4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10043AA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100439DF0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10043AA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SocialBadgeView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10043AAA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for ArtworkImage.ViewModel(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v9 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(v6 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for Artwork.CropStyle(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_10043AC14(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for ArtworkImage.ViewModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(v2 + 20);
    v6 = type metadata accessor for Artwork.CropStyle(0);
    v7 = *(_QWORD *)(v6 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return result;
}

char *sub_10043ACC8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v4 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_10043AE0C(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6((uint64_t)a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v18 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(a1, a2, v18);
      v19 = *(int *)(v4 + 20);
      v20 = (void *)(a1 + v19);
      a2 += v19;
      v21 = type metadata accessor for Artwork.CropStyle(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
      v24 = v23(v20, 1, v21);
      v25 = v23(a2, 1, v21);
      if (v24)
      {
        if (!v25)
        {
          (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v20, a2, v21);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
          return a1;
        }
      }
      else
      {
        if (!v25)
        {
          (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v20, a2, v21);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v22 + 8))(v20, v21);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v17 = v20;
      goto LABEL_8;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v17 = (void *)a1;
LABEL_8:
    memcpy(v17, a2, v16);
    return a1;
  }
  if (v8)
    goto LABEL_7;
  v9 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(v4 + 20);
  v11 = (void *)(a1 + v10);
  v12 = &a2[v10];
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

char *sub_10043B05C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(v4 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_10043B1A0(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6((uint64_t)a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v18 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(a1, a2, v18);
      v19 = *(int *)(v4 + 20);
      v20 = (void *)(a1 + v19);
      a2 += v19;
      v21 = type metadata accessor for Artwork.CropStyle(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
      v24 = v23(v20, 1, v21);
      v25 = v23(a2, 1, v21);
      if (v24)
      {
        if (!v25)
        {
          (*(void (**)(void *, char *, uint64_t))(v22 + 32))(v20, a2, v21);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
          return a1;
        }
      }
      else
      {
        if (!v25)
        {
          (*(void (**)(void *, char *, uint64_t))(v22 + 40))(v20, a2, v21);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v22 + 8))(v20, v21);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v17 = v20;
      goto LABEL_8;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v17 = (void *)a1;
LABEL_8:
    memcpy(v17, a2, v16);
    return a1;
  }
  if (v8)
    goto LABEL_7;
  v9 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  v10 = *(int *)(v4 + 20);
  v11 = (void *)(a1 + v10);
  v12 = &a2[v10];
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_10043B3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043B3FC);
}

uint64_t sub_10043B3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10043B43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043B448);
}

uint64_t sub_10043B448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_10043B48C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1000F7AA8(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

uint64_t sub_10043B4F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;

  v1 = *a1;
  v2 = a1[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2, *a1, &unk_100FA04AC, &unk_100FA04C4);
  v4 = type metadata accessor for ArraySlice(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ArraySlice<A>, v4);
  v6 = *(_QWORD *)(swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100FA04AC, &unk_100FA04BC)
                 + 8);
  v12 = type metadata accessor for EnumeratedCollection(255, v4, WitnessTable, v6);
  v13 = swift_getAssociatedTypeWitness(255, v6, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v14 = sub_100044B54(&qword_1011B3F40);
  v15 = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v12);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, AssociatedTypeWitness, v13, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v7 = type metadata accessor for ForEach(255, &v12);
  sub_10005610C(&qword_1011B3F48, &qword_1011B3F40, (void (*)(void))sub_10043A9B8);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v7);
  v9 = type metadata accessor for ZStack(255, v7, v8);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
}

uint64_t sub_10043B6D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA0694, 1);
}

uint64_t sub_10043B6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A0628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10043B728(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A0628);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10043B768()
{
  return sub_10005610C(&qword_1011B3FE8, &qword_1011A0630, (void (*)(void))sub_100238A3C);
}

uint64_t sub_10043B7A4(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a1);
  v4 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v3 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v4 >= v3 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1);
  v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, a1);
  return specialized Array._endMutation()(v5);
}

id sub_10043B804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(char *);
  void *v10;
  uint64_t v12;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(uint64_t (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v10 = (void *)v9(v7);
  swift_release(v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

void sub_10043B8B0()
{
  qword_10124D000 = Int.seconds.getter(24);
}

void sub_10043B8D0()
{
  qword_10124D008 = Int.seconds.getter(18);
}

unint64_t sub_10043B8F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t updated;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  uint64_t v21;
  _QWORD *v22;

  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v12);
  v22 = _swiftEmptyArrayStorage;
  v13 = sub_100048748((unint64_t *)&qword_1011A6388, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100007E8C(&qword_1011A6390);
  v15 = sub_100049F28((unint64_t *)&qword_1011A6398, &qword_1011A6390, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v14, v15, v6, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(_QWORD *)a1 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002FLL, 0x8000000100E39E60, v11, v8, v5, 0);
  *(_BYTE *)(a1 + 8) = 0;
  updated = type metadata accessor for MRNowPlayingQueueViewController.UpdateContext(0);
  v17 = a1 + *(int *)(updated + 24);
  v18 = sub_100007E8C(&qword_1011B41B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = *(int *)(updated + 28);
  result = sub_100046D10((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(a1 + v19) = result;
  return result;
}

id sub_10043BB18()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController____lazy_storage___collectionView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController____lazy_storage___collectionView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController____lazy_storage___collectionView);
  }
  else
  {
    v4 = sub_10043BB78(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10043BB78(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v12[6];

  v2 = swift_allocObject(&unk_1010C5AE8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, a1);
  v3 = objc_allocWithZone((Class)type metadata accessor for MRNowPlayingQueueViewController.CompositionalLayout());
  v12[4] = sub_1004467AC;
  v12[5] = v2;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1008E31AC;
  v12[3] = &unk_1010C5DA8;
  v4 = _Block_copy(v12);
  v5 = objc_msgSend(v3, "initWithSectionProvider:", v4, swift_retain().n128_f64[0]);
  _Block_release(v4);
  swift_release();
  swift_release();
  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MRNowPlayingQueueViewController.CollectionView()), "initWithFrame:collectionViewLayout:", v5, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, "setAlwaysBounceVertical:", 1);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v6;
  v9 = objc_msgSend(v7, "clearColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v8, "setContentInsetAdjustmentBehavior:", 2);
  v10 = objc_msgSend(v8, "layer");
  objc_msgSend(v10, "setAllowsGroupBlending:", 0);

  objc_msgSend(v8, "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
  return v8;
}

uint64_t sub_10043BD44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = (void *)Strong;
  sub_10043E95C(a1, a2);
  v9 = v8;

  return v9;
}

uint64_t sub_10043BDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  _BYTE v15[16];
  uint64_t v16;
  _QWORD v17[5];

  v4 = sub_100007E8C(&qword_1011B4318);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = a3;
  v8 = type metadata accessor for MRNowPlayingQueueViewController.Cell(0);
  v9 = sub_100048748(&qword_1011B4320, type metadata accessor for MRNowPlayingQueueViewController.Cell, (uint64_t)&unk_100EBB428);
  v10 = UIHostingConfiguration<>.init(content:)(sub_1004467B4, v15, v8, v9);
  v11 = static Edge.Set.horizontal.getter(v10);
  if (qword_10119C008 != -1)
    swift_once(&qword_10119C008, sub_10043B8B0);
  v12 = *(double *)&qword_10124D000;
  if (qword_10119C010 != -1)
    swift_once(&qword_10119C010, sub_10043B8D0);
  v13 = v12 - *(double *)&qword_10124D008;
  v17[3] = v4;
  v17[4] = sub_100049F28(&qword_1011B4328, &qword_1011B4318, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_100049F68(v17);
  UIHostingConfiguration.margins(_:_:)(v11, v4, v13);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return UICollectionViewCell.contentConfiguration.setter(v17);
}

uint64_t sub_10043BF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v6, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
  KeyPath = swift_getKeyPath(&unk_100EBB340);
  v8 = (uint64_t *)(a2 + *(int *)(type metadata accessor for MRNowPlayingQueueViewController.Cell(0) + 20));
  *v8 = KeyPath;
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  return sub_10005B6C0((uint64_t)v6, a2, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
}

id sub_10043C01C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id result;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void **v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void **aBlock;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  void *v66;
  void (*v67)();
  uint64_t v68;
  char v69[24];
  objc_super v70;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v61 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v60 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for MRNowPlayingQueueViewController(0);
  v70.receiver = v0;
  v70.super_class = v8;
  objc_msgSendSuper2(&v70, "viewDidLoad");
  sub_10043C800();
  v9 = sub_10043BB18();
  objc_msgSend(v9, "setDelegate:", v1);

  v10 = sub_10043BB18();
  objc_msgSend(v10, "setAllowsFocus:", 1);

  v11 = sub_10043BB18();
  objc_msgSend(v11, "setRemembersLastFocusedIndexPath:", 1);

  v12 = sub_10043BB18();
  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v14 = result;
  objc_msgSend(result, "frame");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  objc_msgSend(v12, "setFrame:", v16, v18, v20, v22);
  v23 = sub_10043BB18();
  objc_msgSend(v23, "setAutoresizingMask:", 18);

  v24 = sub_10043BB18();
  type metadata accessor for MRNowPlayingQueueHeaderView();
  v25 = _UICollectionViewListLayoutElementKindSectionHeader;
  static String._unconditionallyBridgeFromObjectiveC(_:)(_UICollectionViewListLayoutElementKindSectionHeader);
  v27 = v26;
  UICollectionView.register<A>(_:ofKind:reuseIdentifier:)();

  swift_bridgeObjectRelease(v27);
  v28 = sub_10043BB18();
  static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v30 = v29;
  UICollectionView.register<A>(_:ofKind:reuseIdentifier:)();

  swift_bridgeObjectRelease(v30);
  v31 = sub_10043BB18();
  static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v33 = v32;
  UICollectionView.register<A>(_:ofKind:reuseIdentifier:)();

  swift_bridgeObjectRelease(v33);
  v34 = sub_10043BB18();
  sub_10004A07C(0, (unint64_t *)&unk_1011B42D0, UICollectionReusableView_ptr);
  static String._unconditionallyBridgeFromObjectiveC(_:)(_UICollectionViewListLayoutElementKindSectionFooter);
  v36 = v35;
  UICollectionView.register<A>(_:ofKind:reuseIdentifier:)();

  swift_bridgeObjectRelease(v36);
  v37 = sub_10043BB18();
  v38 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v1, "handleLongPress:");
  objc_msgSend(v37, "addGestureRecognizer:", v38);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v39 = result;
  v40 = sub_10043BB18();
  objc_msgSend(v39, "addSubview:", v40);

  v41 = (void **)&v1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext], v69, 0, 0);
  v42 = *v41;
  v43 = swift_allocObject(&unk_1010C5DE0, 24, 7);
  *(_QWORD *)(v43 + 16) = v1;
  v67 = sub_1004467D8;
  v68 = v43;
  aBlock = _NSConcreteStackBlock;
  v64 = 1107296256;
  v65 = sub_1001DBD98;
  v66 = &unk_1010C5DF8;
  v44 = _Block_copy(&aBlock);
  v45 = v42;
  v46 = v1;
  static DispatchQoS.unspecified.getter(v47);
  v62 = _swiftEmptyArrayStorage;
  v48 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v49 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v50 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v49, v50, v2, v48);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v44);
  _Block_release(v44);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v7, v5);
  swift_release();
  type metadata accessor for Whitetail.Binding();
  v51 = (void **)sub_10043BB18();
  KeyPath = swift_getKeyPath(&unk_100EBB380);
  v66 = (void *)sub_100007E8C((uint64_t *)&unk_1011B4330);
  v67 = (void (*)())&protocol witness table for KeyValueObservationTrigger<A, B>;
  aBlock = v51;
  v64 = KeyPath;
  v53 = swift_allocObject(&unk_1010C5AE8, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16, v46);
  v54 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&aBlock, 1, (uint64_t)sub_10044684C, v53);
  v55 = &v46[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_bindings];
  swift_beginAccess(&v46[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_bindings], &aBlock, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
  v58 = *(_QWORD *)((*(_QWORD *)v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v57 = *(_QWORD *)((*(_QWORD *)v55 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v58 >= v57 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
  v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v54);
  specialized Array._endMutation()(v59);
  return (id)swift_endAccess(&aBlock);
}

void sub_10043C690(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = Strong + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext, &v12, 0, 0);
    if ((*(_BYTE *)(v4 + 8) & 1) == 0)
    {
      v5 = sub_10043BB18();
      v6 = v5[OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_hasInteractiveMovement];

      if ((v6 & 1) == 0)
      {
        v7 = sub_10043BB18();
        objc_msgSend(v7, "contentSize");
        v9 = v8;
        v11 = v10;

        sub_1004421AC(v9, v11);
      }
    }

  }
}

void sub_10043C800()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t (**v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *(**v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v1 = v0;
  v2 = sub_10043BB18();
  v3 = swift_allocObject(&unk_1010C5AE8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  v4 = (char *)objc_allocWithZone((Class)type metadata accessor for MRNowPlayingQueueViewController.DataSource(0));
  v5 = &v4[qword_1011B4110];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v4[qword_1011B4118];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v2, sub_100446794, v3);
  v8 = swift_allocObject(&unk_1010C5AE8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v1);
  v9 = v7;
  v10 = swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_10044679C, v8, v10);

  swift_release();
  v11 = (uint64_t (**)(uint64_t, uint64_t))&v9[qword_1011B4110];
  v12 = *(_QWORD *)&v9[qword_1011B4110];
  v13 = *(_QWORD *)&v9[qword_1011B4110 + 8];
  *v11 = sub_10043CA6C;
  v11[1] = 0;
  sub_10004BA30(v12, v13);
  v14 = swift_allocObject(&unk_1010C5AE8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v1);
  v15 = (char *(**)(uint64_t, uint64_t, uint64_t))&v9[qword_1011B4118];
  v16 = *(_QWORD *)&v9[qword_1011B4118];
  v17 = *(_QWORD *)&v9[qword_1011B4118 + 8];
  *v15 = sub_1004467A4;
  v15[1] = (char *(*)(uint64_t, uint64_t, uint64_t))v14;
  sub_10004BA30(v16, v17);
  v18 = *(void **)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource) = v9;

}

uint64_t sub_10043C95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  _BYTE v11[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return 0;
  v8 = (void *)Strong;
  v9 = sub_1004402D0(a2, a3);

  return v9;
}

uint64_t sub_10043C9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (!Strong)
    return 0;
  v10 = (void *)Strong;
  sub_100440E28(a2, a3, a4);
  v12 = v11;

  return v12;
}

uint64_t sub_10043CA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v11;

  v3 = sub_100007E8C((uint64_t *)&unk_1011B42C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);
  v6 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011B42C0);
    v7 = 0;
  }
  else
  {
    v8 = *(uint64_t (**)(uint64_t))&v5[*(int *)(v6 + 40)];
    swift_retain();
    v9 = sub_10005B748((uint64_t)v5, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
    v7 = v8(v9);
    swift_release();
  }
  return v7 & 1;
}

char *sub_10043CB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *result;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t);
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[24];
  _BYTE v79[8];
  _BYTE v80[8];
  uint64_t v81;
  uint64_t v82;

  v71 = a3;
  v68 = sub_100007E8C(&qword_1011B41B0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v69 = (char *)&v53 - v9;
  v10 = sub_100007E8C((uint64_t *)&unk_1011B42C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - v14;
  v16 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v53 - v21;
  a4 += 16;
  swift_beginAccess(a4, v78, 0, 0);
  result = (char *)swift_unknownObjectWeakLoadStrong(a4);
  if (result)
  {
    v70 = result;
    v66 = a2;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v24(v15, 1, v16) == 1)
    {

      return (char *)sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011B42C0);
    }
    sub_10005B6C0((uint64_t)v15, (uint64_t)v22, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v71);
    if (v24(v12, 1, v16) == 1)
    {
      sub_10005B748((uint64_t)v22, type metadata accessor for NowPlayingQueueSectionViewModel.Item);

      return (char *)sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011B42C0);
    }
    v25 = sub_10005B6C0((uint64_t)v12, (uint64_t)v19, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
    v26 = v69;
    v29 = dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v25, v27, v28);
    v30 = IndexPath.item.getter(v29);
    if (IndexPath.item.getter(v30) >= v30)
    {
      v32 = v68;
      NSDiffableDataSourceSnapshot.moveItem(_:afterItem:)(v22, v19, v68, v31);
    }
    else
    {
      v32 = v68;
      NSDiffableDataSourceSnapshot.moveItem(_:beforeItem:)(v22, v19, v68, v31);
    }
    v33 = dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v26, 1, 0, 0);
    v34 = IndexPath.section.getter(v33);
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v34, v35, v36);
    v37 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v32);
    v38 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
    result = (char *)v38(v7, v32);
    if ((v34 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v57 = (void (*)(char *, uint64_t))v38;
      if (v34 < *(_QWORD *)(v37 + 16))
      {
        v39 = *(_BYTE *)(v37 + v34 + 32);
        swift_bridgeObjectRelease(v37);
        v40 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data];
        v64 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 8];
        v65 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 16];
        v67 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 24];
        v41 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 40];
        v68 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 32];
        v42 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 48];
        v43 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 56];
        v63 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 64];
        v62 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 72];
        v61 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 80];
        v60 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 88];
        v59 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 96];
        v58 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data + 104];
        if (v40)
        {
          swift_bridgeObjectRetain();
          sub_100445F28(v64, v65, v67, v68);
          v55 = v41;
          v56 = v42;
          sub_100445F60(v41, v42, v43);
          sub_100445F60(v63, v62, v61);
          sub_100445F60(v60, v59, v58);
          sub_100369C80(v39, v40, (uint64_t)v79);
          sub_100065228((uint64_t)v79, (uint64_t)&v72, (uint64_t *)&unk_1011B8580);
          sub_100065228((uint64_t)v79, (uint64_t)v80, (uint64_t *)&unk_1011B8580);
          if (v81)
          {
            v54 = v43;
            v82 = v81;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            sub_1001E3E14(&v82);
            swift_release();
            swift_release();
            v53 = v19;
            v45 = v74;
            v44 = v75;
            v46 = v72;
            v47 = v73;
            v49 = v76;
            v48 = v77;
            swift_retain();
            sub_10044657C(v46, v47, (uint64_t)v45, v44, v49, v48);
            v50 = sub_100445F78(v40, v64, v65, v67, v68, v55, v56, v54, v63, v62, v61, v60, v59, v58);
            v51 = IndexPath.item.getter(v50);
            v52 = IndexPath.item.getter(v51);
            v45(v51, v52);
            swift_release();

            v57(v69, v32);
            sub_10005B748((uint64_t)v53, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
            return (char *)sub_10005B748((uint64_t)v22, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
          }
          else
          {

            v57(v69, v32);
            sub_10005B748((uint64_t)v19, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
            sub_10005B748((uint64_t)v22, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
            sub_10044657C(v72, v73, (uint64_t)v74, v75, v76, v77);
            return (char *)sub_100445F78(v40, v64, v65, v67, v68, v55, v56, v43, v63, v62, v61, v60, v59, v58);
          }
        }
        else
        {

          v57(v26, v32);
          sub_10005B748((uint64_t)v19, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
          sub_10005B748((uint64_t)v22, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
          return (char *)sub_100445F78(0, v64, v65, v67, v68, v41, v42, v43, v63, v62, v61, v60, v59, v58);
        }
      }
    }
    __break(1u);
  }
  return result;
}

void sub_10043D380(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  id v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v5 = v4;
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = v5 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext;
  v15 = swift_beginAccess(v5 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext, v24, 0, 0);
  v16 = *(void **)v14;
  *v13 = *(_QWORD *)v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10, v15);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    swift_beginAccess(v14, v23, 33, 0);
    v18 = *(int *)(type metadata accessor for MRNowPlayingQueueViewController.UpdateContext(0) + 28);
    sub_100048AAC(a2, a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v14 + v18));
    v22 = *(_QWORD *)(v14 + v18);
    *(_QWORD *)(v14 + v18) = 0x8000000000000000;
    sub_1005EE3F4(a1 & 1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    v20 = *(_QWORD *)(v14 + v18);
    *(_QWORD *)(v14 + v18) = v22;
    swift_bridgeObjectRelease(v20);
    swift_endAccess(v23);
    if ((*(_BYTE *)(v14 + 8) & 1) == 0)
      sub_10043D500();
  }
  else
  {
    __break(1u);
  }
}

void sub_10043D500()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  __n128 v19;
  void *v20;
  id v21;
  char v22;
  uint64_t updated;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  _BYTE *v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(__n128);
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  double (**v74)();
  uint64_t v75;
  void *v76;
  id v77;
  __n128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  _QWORD aBlock[6];
  char v104[32];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v96 = *(_QWORD *)(v5 - 8);
  v97 = v5;
  __chkstk_darwin(v5);
  v95 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B41B8);
  __chkstk_darwin(v7);
  v91 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v90 = (uint64_t)&v85 - v10;
  v94 = sub_100007E8C(&qword_1011B41B0);
  v99 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = v11;
  v93 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v101 = (char *)&v85 - v13;
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = &v0[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext];
  v19 = swift_beginAccess(&v0[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext], v104, 1, 0);
  v20 = *(void **)v18;
  *v17 = *(_QWORD *)v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14, v19);
  v21 = v20;
  v22 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v22 & 1) == 0)
  {
LABEL_33:
    __break(1u);
    return;
  }
  v87 = v4;
  v88 = v2;
  v89 = v1;
  v18[8] = 1;
  updated = type metadata accessor for MRNowPlayingQueueViewController.UpdateContext(0);
  v24 = *(_QWORD *)&v18[*(int *)(updated + 28)];
  v25 = sub_100046D10((uint64_t)_swiftEmptyArrayStorage);
  v98 = updated;
  v26 = *(int *)(updated + 28);
  v27 = *(_QWORD *)&v18[v26];
  v100 = (uint64_t)v18;
  *(_QWORD *)&v18[v26] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v27);
  v86 = swift_allocObject(&unk_1010C5C78, 24, 7);
  *(_QWORD *)(v86 + 16) = v0;
  v28 = swift_allocObject(&unk_1010C5CA0, 17, 7);
  v29 = v0[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didScrollToUpNext];
  v102 = v28;
  *(_BYTE *)(v28 + 16) = v29;
  v30 = v24 + 64;
  v31 = 1 << *(_BYTE *)(v24 + 32);
  v32 = -1;
  if (v31 < 64)
    v32 = ~(-1 << v31);
  v33 = v32 & *(_QWORD *)(v24 + 64);
  v34 = (unint64_t)(v31 + 63) >> 6;
  swift_bridgeObjectRetain();
  v35 = v0;
  v36 = 0;
  while (1)
  {
    if (v33)
    {
      v37 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      v38 = v37 | (v36 << 6);
      goto LABEL_23;
    }
    v39 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v40 = v100;
    v41 = (uint64_t)v101;
    if (v39 >= v34)
      goto LABEL_27;
    v42 = *(_QWORD *)(v30 + 8 * v39);
    ++v36;
    if (!v42)
    {
      v36 = v39 + 1;
      if (v39 + 1 >= v34)
        goto LABEL_27;
      v42 = *(_QWORD *)(v30 + 8 * v36);
      if (!v42)
      {
        v36 = v39 + 2;
        if (v39 + 2 >= v34)
          goto LABEL_27;
        v42 = *(_QWORD *)(v30 + 8 * v36);
        if (!v42)
        {
          v36 = v39 + 3;
          if (v39 + 3 >= v34)
            goto LABEL_27;
          v42 = *(_QWORD *)(v30 + 8 * v36);
          if (!v42)
            break;
        }
      }
    }
LABEL_22:
    v33 = (v42 - 1) & v42;
    v38 = __clz(__rbit64(v42)) + (v36 << 6);
LABEL_23:
    v44 = *(_QWORD *)(v24 + 56);
    v45 = 24 * v38;
    v46 = *(_BYTE *)(v44 + 24 * v38);
    v47 = v44 + 24 * v38 + 8;
    v48 = *(void (**)(__n128))(v44 + v45 + 8);
    if (v48)
    {
      v49 = *(_QWORD *)(v47 + 8);
      v50 = swift_retain();
      v48(v50);
      sub_10004BA30((uint64_t)v48, v49);
    }
    if ((v46 & 1) == 0)
      *(_BYTE *)(v102 + 16) = 0;
  }
  v43 = v39 + 4;
  if (v43 < v34)
  {
    v42 = *(_QWORD *)(v30 + 8 * v43);
    if (!v42)
    {
      while (1)
      {
        v36 = v43 + 1;
        if (__OFADD__(v43, 1))
          goto LABEL_32;
        if (v36 >= v34)
          goto LABEL_27;
        v42 = *(_QWORD *)(v30 + 8 * v36);
        ++v43;
        if (v42)
          goto LABEL_22;
      }
    }
    v36 = v43;
    goto LABEL_22;
  }
LABEL_27:
  swift_release();
  v51 = v40 + *(int *)(v98 + 24);
  v52 = v90;
  sub_10004A160(v51, v90, &qword_1011B41B8);
  v53 = v99;
  v54 = v94;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v52, 1, v94) == 1)
  {
    v55 = v35;
    sub_10043E548(v41);
    sub_10004FF60(v52, &qword_1011B41B8);
    v56 = v87;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v41, v52, v54);
    v56 = v87;
    v55 = v35;
  }
  v57 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v91, 1, 1, v54);
  v58 = v100;
  swift_beginAccess(v100, aBlock, 33, 0);
  sub_1004465DC(v57, v58 + *(int *)(v98 + 24));
  swift_endAccess(aBlock);
  v59 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v100 = static OS_dispatch_queue.main.getter(v59, v60, v61, v62, v63, v64, v65, v66);
  v67 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v93, v41, v54);
  v68 = *(unsigned __int8 *)(v53 + 80);
  v69 = v53;
  v70 = (v68 + 40) & ~v68;
  v71 = (v92 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = (char *)swift_allocObject(&unk_1010C5CC8, v71 + 16, v68 | 7);
  v73 = v102;
  *((_QWORD *)v72 + 2) = v55;
  *((_QWORD *)v72 + 3) = v73;
  *((_QWORD *)v72 + 4) = v24;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v72[v70], v67, v54);
  v74 = (double (**)())&v72[v71];
  v75 = v86;
  *v74 = sub_100446668;
  v74[1] = (double (*)())v75;
  aBlock[4] = sub_100446728;
  aBlock[5] = v72;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010C5CE0;
  v76 = _Block_copy(aBlock);
  v77 = v55;
  swift_retain();
  swift_retain();
  v78 = swift_release();
  v79 = v95;
  static DispatchQoS.unspecified.getter(v78);
  aBlock[0] = _swiftEmptyArrayStorage;
  v80 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v81 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v82 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  v83 = v89;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v81, v82, v89, v80);
  v84 = (void *)v100;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v79, v56, v76);
  _Block_release(v76);
  swift_release();

  (*(void (**)(char *, uint64_t))(v88 + 8))(v56, v83);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v79, v97);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v54);
  swift_release();
}

double sub_10043DC14(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[6];
  char v24[24];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void **)&a1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext], v24, 0, 0);
  v10 = *v9;
  v11 = swift_allocObject(&unk_1010C5D68, 24, 7);
  *(_QWORD *)(v11 + 16) = a1;
  aBlock[4] = sub_10044678C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010C5D80;
  v12 = _Block_copy(aBlock);
  v13 = v10;
  v14 = a1;
  static DispatchQoS.unspecified.getter(v15);
  v22 = _swiftEmptyArrayStorage;
  v16 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v18 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10043DE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v3[24];

  v1 = a1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext, v3, 1, 0);
  *(_BYTE *)(v1 + 8) = 0;
  result = type metadata accessor for MRNowPlayingQueueViewController.UpdateContext(0);
  if (*(_QWORD *)(*(_QWORD *)(v1 + *(int *)(result + 28)) + 16))
    return sub_10043D500();
  return result;
}

void sub_10043DE90(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  __n128 v23;
  id v24;
  id v25;
  _BYTE *v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  __n128 v38;
  void *v39;
  id v40;
  Class isa;
  id v42;
  uint64_t v43;
  char *v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  __n128 v49;
  char v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  double v56;
  double v57;
  __n128 v58;
  void *v59;
  double v60;
  double v61;
  double v62;
  double v63;
  _BYTE *v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  __n128 v70;
  __n128 v71;
  void *v72;
  id v73;
  double v74;
  double v75;
  __n128 v76;
  void *v77;
  void *v78;
  unsigned __int8 *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  char v95[24];
  _BYTE v96[24];

  v91 = a5;
  v92 = a6;
  v93 = a4;
  v9 = type metadata accessor for IndexPath(0);
  v89 = *(_QWORD *)(v9 - 8);
  v90 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B41B0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v87 - v18;
  v20 = objc_msgSend(a1, "view", v17);
  if (!v20)
  {
    __break(1u);
    goto LABEL_40;
  }
  v21 = v20;
  v94 = (_BYTE *)(a2 + 16);
  v22 = objc_msgSend(v20, "window");

  if (v22)
  {
    v24 = objc_msgSend(v22, "windowScene");

    if (v24)
    {
      v25 = objc_msgSend(v24, "activationState");

      if (v25 == (id)2)
      {
        v26 = v94;
        v23 = swift_beginAccess(v94, v95, 1, 0);
        *v26 = 0;
      }
    }
  }
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_23;
  sub_10079C718(1);
  if ((v27 & 1) == 0)
    goto LABEL_23;
  v28 = *(void **)&a1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource];
  if (!v28)
    goto LABEL_42;
  v29 = v28;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v29, v30, v31);
  v32 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v12);
  v87 = v13;
  v88 = v12;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  v33 = *(_QWORD *)(v32 + 16);
  if (!v33)
  {
LABEL_17:

    v23 = swift_bridgeObjectRelease(v32);
    v13 = v87;
    v12 = v88;
    goto LABEL_23;
  }
  v34 = 0;
  while (!*(_BYTE *)(v32 + v34 + 32))
  {
    v35 = 0xE700000000000000;
    v36 = 0x79726F74736968;
LABEL_15:
    v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v35, 0x7478654E7075, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(v35);
    if ((v37 & 1) != 0)
      goto LABEL_19;
    if (v33 == ++v34)
      goto LABEL_17;
  }
  if (*(_BYTE *)(v32 + v34 + 32) == 2)
  {
    v35 = 0xE800000000000000;
    v36 = 0x79616C506F747561;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease(v32);
  v32 = 0xE600000000000000;
LABEL_19:
  swift_bridgeObjectRelease(v32);

  v39 = (void *)sub_10043BB18(v38);
  v40 = _UICollectionViewListLayoutElementKindSectionHeader;
  IndexPath.init(item:section:)(0, v34);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v11, v90);
  v42 = objc_msgSend(v39, "supplementaryViewForElementKind:atIndexPath:", v40, isa);

  v13 = v87;
  v12 = v88;
  if (v42)
  {
    v43 = type metadata accessor for MRNowPlayingQueueHeaderView();
    v44 = (char *)swift_dynamicCastClass(v42, v43);
    if (v44)
      sub_100440604(v44, 1);

  }
LABEL_23:
  v45 = (void *)sub_10043BB18(v23);
  objc_msgSend(v45, "contentSize");
  v47 = v46;

  sub_100442020(1, v48, v47);
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_29;
  sub_10079C718(0);
  v50 = 0;
  if ((v51 & 1) == 0)
    goto LABEL_34;
  if (*(_QWORD *)(a3 + 16) == 1)
  {
    if (a1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection])
    {
      if (a1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection] == 1)
      {
        v50 = 1;
        v52 = 0xE600000000000000;
        goto LABEL_33;
      }
      v52 = 0xE800000000000000;
      v53 = 0x79616C506F747561;
    }
    else
    {
      v53 = 0x79726F74736968;
      v52 = 0xE700000000000000;
    }
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v52, 0x7478654E7075, 0xE600000000000000, 0);
LABEL_33:
    v49 = swift_bridgeObjectRelease(v52);
  }
  else
  {
LABEL_29:
    v50 = 0;
  }
LABEL_34:
  v54 = (void *)sub_10043BB18(v49);
  v55 = objc_msgSend(v54, "collectionViewLayout");

  objc_msgSend(v55, "collectionViewContentSize");
  v57 = v56;

  v59 = (void *)sub_10043BB18(v58);
  objc_msgSend(v59, "contentOffset");
  v61 = v60;
  v63 = v62;

  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v93, v12);
  if ((v50 & 1) != 0)
  {
    v64 = v94;
    swift_beginAccess(v94, v96, 1, 0);
    *v64 = 0;
    v65 = *(void **)&a1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource];
    if (v65)
    {
      v66 = (_QWORD *)swift_allocObject(&unk_1010C5D40, 40, 7);
      v67 = v91;
      v68 = v92;
      v66[2] = a1;
      v66[3] = v67;
      v66[4] = v68;
      v69 = v65;
      a1;
      swift_retain();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v15, 0, sub_1004487E0, v66);

      v70 = swift_release();
      v71.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v70);
      v72 = (void *)sub_10043BB18(v71);
      v73 = objc_msgSend(v72, "collectionViewLayout");

      objc_msgSend(v73, "collectionViewContentSize");
      v75 = v74;

      v77 = (void *)sub_10043BB18(v76);
      objc_msgSend(v77, "setContentOffset:", v61, v63 + v75 - v57);

      return;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
  }
  else
  {
    v78 = *(void **)&a1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource];
    if (!v78)
      goto LABEL_41;
    v79 = v94;
    swift_beginAccess(v94, v96, 0, 0);
    v80 = *v79;
    v81 = (_QWORD *)swift_allocObject(&unk_1010C5D18, 40, 7);
    v82 = v91;
    v83 = v92;
    v81[2] = a1;
    v81[3] = v82;
    v81[4] = v83;
    v84 = a1;
    swift_retain();
    v85 = v78;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v15, v80, sub_10044677C, v81);

    v86 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v86);
  }
}

uint64_t sub_10043E4E0(__n128 a1, uint64_t a2, uint64_t (*a3)(void))
{
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v4 = (void *)sub_10043BB18(a1);
  objc_msgSend(v4, "contentSize");
  v6 = v5;
  v8 = v7;

  sub_1004421AC(v6, v8);
  return a3();
}

uint64_t sub_10043E548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61[9];

  v58 = a1;
  v2 = sub_100007E8C(&qword_1011B41B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v7 = sub_100446624();
  v8 = sub_100048748(&qword_1011B4310, type metadata accessor for NowPlayingQueueSectionViewModel.Item, (uint64_t)&unk_100EAAE30);
  NSDiffableDataSourceSnapshot.init()(&type metadata for NowPlayingQueueSectionViewModel.SectionType, v6, v7, v8);
  v9 = v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data);
  if (v10)
  {
    v47 = v3;
    v53 = v2;
    v54 = v5;
    v12 = *(_QWORD *)(v9 + 8);
    v11 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v9 + 24);
    v13 = *(_QWORD *)(v9 + 32);
    v15 = *(_QWORD *)(v9 + 40);
    v16 = *(_QWORD *)(v9 + 48);
    v18 = *(_QWORD *)(v9 + 56);
    v17 = *(_QWORD *)(v9 + 64);
    v19 = *(_QWORD *)(v9 + 80);
    v56 = *(_QWORD *)(v9 + 72);
    v57 = v17;
    v20 = *(_QWORD *)(v9 + 88);
    v55 = *(_QWORD *)(v9 + 96);
    v21 = *(_QWORD *)(v9 + 104);
    v42 = *(unsigned __int8 *)(v9 + 112);
    v22 = *(_QWORD *)(v10 + 16);
    v51 = v21;
    v52 = v22;
    swift_bridgeObjectRetain();
    v45 = v12;
    v46 = v11;
    v23 = v12;
    v24 = v11;
    v2 = v53;
    v5 = v54;
    v48 = v14;
    v49 = v13;
    sub_100445F28(v23, v24, v14, v13);
    v50 = v15;
    v25 = v16;
    v26 = v16;
    v27 = v18;
    sub_100445F60(v15, v26, v18);
    v44 = v19;
    sub_100445F60(v57, v56, v19);
    v43 = v20;
    v28 = v51;
    sub_100445F60(v20, v55, v51);
    if (v52)
    {
      v29 = sub_10079CB24(0);
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(v10 + 56) + 48 * v29;
        v52 = v18;
        v32 = *(_QWORD *)(v31 + 8);
        v41 = v25;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1010AC100);
        v59 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v32, &v59, v2);
        v25 = v41;
        swift_release();
        swift_release();
        v27 = v52;
        swift_bridgeObjectRelease(v32);
      }
    }
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_11;
    v33 = sub_10079CB24(1u);
    if ((v34 & 1) != 0)
    {
      v35 = *(_QWORD *)(v10 + 56) + 48 * v33;
      v52 = v27;
      v36 = *(_QWORD *)(v35 + 8);
      v41 = v25;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1010AC0D8);
      v60 = 1;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v36, &v60, v2);
      v25 = v41;
      swift_release();
      swift_release();
      v27 = v52;
      swift_bridgeObjectRelease(v36);
    }
    if (*(_QWORD *)(v10 + 16) && (v37 = sub_10079CB24(2u), (v38 & 1) != 0))
    {
      v39 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 48 * v37 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1010AC0B0);
      v61[0] = 2;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v39, v61, v2);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease(v39);
      sub_100445F78(v10, v45, v46, v48, v49, v50, v25, v27, v57, v56, v44, v43, v55, v28);
    }
    else
    {
LABEL_11:
      sub_100445F78(v10, v45, v46, v48, v49, v50, v25, v27, v57, v56, v44, v43, v55, v28);
    }
    v3 = v47;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(v58, v5, v2);
}

void sub_10043E95C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  int v27;
  _UNKNOWN **v28;
  char **v29;
  _UNKNOWN **v30;
  char **v31;
  void *v32;
  id v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class isa;
  double v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  void *v69;
  char **v70;
  unint64_t v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  char v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  Class v82;
  unint64_t v83;
  _BYTE v84[4];
  int v85;
  _BYTE *v86;
  _QWORD *v87;
  id v88;
  id v89;
  uint64_t v90;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = (_QWORD *)sub_100007E8C(&qword_1011B41B0);
  v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  v9 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v84[-v11];
  v13 = objc_msgSend(objc_allocWithZone((Class)_UICollectionViewListLayoutSectionConfiguration), "initWithAppearanceStyle:layoutEnvironment:", 0, a2);
  v14 = swift_allocObject(&unk_1010C5AE8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v3);
  aBlock[4] = sub_10044608C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10043B804;
  aBlock[3] = &unk_1010C5B28;
  v15 = _Block_copy(aBlock);
  objc_msgSend(v13, "setTrailingSwipeActionsConfigurationProvider:", v15, swift_release().n128_f64[0]);
  _Block_release(v15);
  objc_msgSend(v13, "setEstimatedRowHeight:", 44.0);
  objc_msgSend(v13, "setSeparatorStyle:", 0);
  v16 = objc_msgSend(objc_allocWithZone((Class)_UICollectionViewListLayoutSection), "initWithConfiguration:layoutEnvironment:", v13, a2);
  v17 = qword_10119C010;
  v18 = v16;
  if (v17 != -1)
    swift_once(&qword_10119C010, sub_10043B8D0);
  objc_msgSend(v18, "setContentInsets:", 0.0, *(double *)&qword_10124D008, 10.0, *(double *)&qword_10124D008);
  v89 = v18;

  v19 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource;
  v90 = v3;
  v20 = *(void **)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
  if (!v20)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  v21 = v20;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v21, v22, v23);
  v24 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v6);
  v25 = *(id *)(v7 + 8);
  ((void (*)(_BYTE *, _QWORD *))v25)(v12, v6);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v26 = *(_QWORD *)(v24 + 16);
  if (v26 <= a1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v86 = v9;
  v87 = v6;
  v88 = v13;
  v27 = *(unsigned __int8 *)(v24 + a1 + 32);

  swift_bridgeObjectRelease(v24);
  v28 = MPLibraryAddStatusObserver_ptr;
  v29 = &selRef_setMetricsOverlay_;
  v30 = MPLibraryAddStatusObserver_ptr;
  v31 = &selRef_itemWithLayoutSize_;
  if (v27)
    goto LABEL_12;
  v85 = 0;
  v32 = *(void **)(v90 + v19);
  if (!v32)
    goto LABEL_25;
  v33 = v32;
  v34 = v86;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v33, v35, v36);

  LOBYTE(aBlock[0]) = 0;
  v37 = v87;
  v38 = NSDiffableDataSourceSnapshot.numberOfItems(inSection:)(aBlock, v87);
  ((void (*)(_BYTE *, _QWORD *))v25)(v34, v37);
  v39 = v89;
  if (v38)
  {
    v40 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v41 = objc_msgSend(v40, "fractionalWidthDimension:", 1.0);
    v42 = objc_msgSend(v40, "absoluteDimension:", 20.0);
    v43 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v41, v42);

    static String._unconditionallyBridgeFromObjectiveC(_:)(_UICollectionViewListLayoutElementKindSectionFooter);
    v45 = v44;
    v46 = v43;
    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v45);
    v48 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v46, v47, 5);

    v49 = v39;
    v50 = v48;
    v51 = objc_msgSend(v49, "boundarySupplementaryItems");
    v52 = sub_10004A07C(0, (unint64_t *)&unk_1011B42F0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v52);

    aBlock[0] = v53;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
    v55 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v56 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v55 >= v56 >> 1)
    {
      v83 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v55 + 1, 1);
      v55 = v83;
    }
    v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v50);
    specialized Array._endMutation()(v57);
    v58 = aBlock[0];
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v49, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v58).n128_f64[0]);

    v31 = &selRef_itemWithLayoutSize_;
    v30 = MPLibraryAddStatusObserver_ptr;
    v27 = v85;
    v29 = &selRef_setMetricsOverlay_;
    v28 = MPLibraryAddStatusObserver_ptr;
LABEL_12:
    v60 = sub_100440CB0(v27);
    v61 = (void *)objc_opt_self(v28[132]);
    v62 = objc_msgSend(v61, v29[509], 1.0);
    v63 = objc_msgSend(v61, "absoluteDimension:", v60);
    v64 = objc_msgSend((id)objc_opt_self(v30[136]), "sizeWithWidthDimension:heightDimension:", v62, v63);

    static String._unconditionallyBridgeFromObjectiveC(_:)(_UICollectionViewListLayoutElementKindSectionHeader);
    v66 = v65;
    v25 = v64;
    v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v66);
    v68 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), v31[100], v25, v67, 1);

    if (v27)
    {
      v13 = v88;
      v69 = v89;
      v70 = &selRef_itemWithLayoutSize_;
      if (v27 != 1)
      {
        v74 = swift_bridgeObjectRelease(0xE800000000000000).n128_u64[0];
        v75 = 0;
LABEL_18:
        objc_msgSend(v68, "setPinToVisibleBounds:", v75 & 1, *(double *)&v74);
        objc_msgSend(v68, "setZIndex:", 0x7FFFFFFFFFFFFFFFLL);
        v6 = v69;
        a1 = (unint64_t)v68;
        v76 = objc_msgSend(v6, v70[103]);
        v77 = sub_10004A07C(0, (unint64_t *)&unk_1011B42F0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
        v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v76, v77);

        aBlock[0] = v78;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
        v12 = *(_BYTE **)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v26 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)v12 < v26 >> 1)
        {
LABEL_19:
          v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, a1);
          specialized Array._endMutation()(v80);
          v81 = aBlock[0];
          v82 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v6, "setBoundarySupplementaryItems:", v82, swift_bridgeObjectRelease(v81).n128_f64[0]);

          return;
        }
LABEL_23:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v12 + 1, 1);
        goto LABEL_19;
      }
      v71 = 0xE600000000000000;
      v72 = 0x7478654E7075;
    }
    else
    {
      v71 = 0xE700000000000000;
      v72 = 0x79726F74736968;
      v13 = v88;
      v69 = v89;
      v70 = &selRef_itemWithLayoutSize_;
    }
    v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v71, 0x79616C506F747561, 0xE800000000000000, 0);
    v74 = swift_bridgeObjectRelease(v71).n128_u64[0];
    v75 = v73 ^ 1;
    goto LABEL_18;
  }

}

char *sub_10043F0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *result;
  void *v22;
  id v23;
  uint64_t (*v24)(__n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  Class isa;
  id v46;
  Class v47;
  _QWORD v48[2];
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD aBlock[7];
  char v56[24];

  v54 = a1;
  v3 = type metadata accessor for IndexPath(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v4 = *(_QWORD *)(v51 + 64);
  __chkstk_darwin(v3);
  v50 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B42C0);
  __chkstk_darwin(v11);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)v48 - v19;
  a2 += 16;
  swift_beginAccess(a2, v56, 0, 0);
  result = (char *)swift_unknownObjectWeakLoadStrong(a2);
  if (!result)
    goto LABEL_8;
  v53 = result;
  v22 = *(void **)&result[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource];
  if (v22)
  {
    v23 = v22;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v54);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {

      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011B42C0);
    }
    else
    {
      sub_10005B6C0((uint64_t)v13, (uint64_t)v20, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
      v24 = *(uint64_t (**)(__n128))&v20[*(int *)(v14 + 36)];
      v25 = swift_retain();
      LOBYTE(v24) = v24(v25);
      swift_release();
      if ((v24 & 1) != 0)
      {
        v26 = String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
        static Locale.current.getter(v26);
        v48[1] = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
        v49 = v20;
        v28 = v27;
        v29 = swift_allocObject(&unk_1010C5AE8, 24, 7);
        swift_unknownObjectWeakInit(v29 + 16, v53);
        sub_10005B704((uint64_t)v20, (uint64_t)v17, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
        v31 = v50;
        v30 = v51;
        v32 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v54, v52);
        v33 = *(unsigned __int8 *)(v15 + 80);
        v34 = (v33 + 24) & ~v33;
        v35 = *(unsigned __int8 *)(v30 + 80);
        v36 = (v16 + v35 + v34) & ~v35;
        v37 = swift_allocObject(&unk_1010C5B60, v36 + v4, v33 | v35 | 7);
        *(_QWORD *)(v37 + 16) = v29;
        sub_10005B6C0((uint64_t)v17, v37 + v34, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
        (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v37 + v36, v31, v32);
        swift_retain();
        v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v28);
        aBlock[4] = sub_10044625C;
        aBlock[5] = v37;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10014279C;
        aBlock[3] = &unk_1010C5B78;
        v39 = _Block_copy(aBlock);
        v40 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v38, v39);

        _Block_release(v39);
        swift_release();
        swift_release();
        v41 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v42 = swift_allocObject(v41, 40, 7);
        *(_OWORD *)(v42 + 16) = xmmword_100EA7A90;
        *(_QWORD *)(v42 + 32) = v40;
        aBlock[0] = v42;
        specialized Array._endMutation()(v42);
        v43 = aBlock[0];
        sub_10004A07C(0, &qword_1011B8DC0, UIContextualAction_ptr);
        v44 = v40;
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v43);
        v46 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

        sub_10005B748((uint64_t)v49, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
        return (char *)v46;
      }
      sub_10005B748((uint64_t)v20, type metadata accessor for NowPlayingQueueSectionViewModel.Item);

    }
LABEL_8:
    sub_10004A07C(0, &qword_1011B8DC0, UIContextualAction_ptr);
    v47 = Array._bridgeToObjectiveC()().super.isa;
    v46 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", v47);

    return (char *)v46;
  }
  __break(1u);
  return result;
}

void sub_10043F5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id *v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  id v48;
  char *v49;
  __n128 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  _QWORD *v72;
  _QWORD aBlock[6];
  char v74[24];
  char v75[32];

  v70 = a7;
  v71 = a6;
  v64 = a3;
  v65 = a4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v69 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  __chkstk_darwin(v11);
  v66 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for IndexPath(0);
  v62 = *(_QWORD *)(v63 - 8);
  v13 = *(_QWORD *)(v62 + 64);
  __chkstk_darwin(v63);
  v61 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B41B0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v75, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v23 = (char *)Strong;
    v59 = v9;
    v60 = v8;
    v24 = swift_allocObject(&unk_1010C5AE8, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16, v23);
    sub_10005B704((uint64_t)v71, (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NowPlayingQueueSectionViewModel.Item);
    v25 = *(unsigned __int8 *)(v19 + 80);
    v26 = (v25 + 24) & ~v25;
    v27 = swift_allocObject(&unk_1010C5BB0, v26 + v20, v25 | 7);
    *(_QWORD *)(v27 + 16) = v24;
    sub_10005B6C0((uint64_t)v21, v27 + v26, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
    v28 = *(void **)&v23[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource];
    if (v28)
    {
      v29 = v28;
      v30 = v70;
      v31 = IndexPath.safeSection.getter();
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v31, v32, v33);
      v34 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      if ((v31 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v31 < *(_QWORD *)(v34 + 16))
      {
        v35 = *(_BYTE *)(v34 + v31 + 32);

        swift_bridgeObjectRelease(v34);
        v36 = (id *)&v23[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext];
        v37 = swift_beginAccess(&v23[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext], v74, 0, 0);
        v71 = *v36;
        v38 = v62;
        v39 = v61;
        v40 = v63;
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v62 + 16))(v61, v30, v63, v37);
        v41 = *(unsigned __int8 *)(v38 + 80);
        v42 = (v41 + 49) & ~v41;
        v43 = (v13 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
        v44 = swift_allocObject(&unk_1010C5BD8, v43 + 16, v41 | 7);
        *(_QWORD *)(v44 + 16) = v23;
        *(_BYTE *)(v44 + 24) = 1;
        *(_QWORD *)(v44 + 32) = sub_10044645C;
        *(_QWORD *)(v44 + 40) = v27;
        *(_BYTE *)(v44 + 48) = v35;
        (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v44 + v42, v39, v40);
        v45 = (_QWORD *)(v44 + v43);
        v46 = v65;
        *v45 = v64;
        v45[1] = v46;
        aBlock[4] = sub_100446528;
        aBlock[5] = v44;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001DBD98;
        aBlock[3] = &unk_1010C5BF0;
        v47 = _Block_copy(aBlock);
        v48 = v71;
        v49 = v23;
        swift_retain();
        v50 = swift_retain();
        v51 = v66;
        static DispatchQoS.unspecified.getter(v50);
        v72 = _swiftEmptyArrayStorage;
        v52 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v53 = sub_100007E8C((uint64_t *)&unk_1011A2120);
        v54 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
        v55 = v69;
        v56 = v53;
        v57 = v60;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v72, v56, v54, v60, v52);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v51, v55, v47);
        _Block_release(v47);

        swift_release();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v55, v57);
        (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v68);
        swift_release();
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10043FAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::OpaquePointer v22;
  __n128 v23;
  char *v24;
  uint64_t updated;
  _BYTE v26[24];
  char v27[24];

  v4 = sub_100007E8C(&qword_1011B41B8);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011B41B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v12 = (char *)result;
    v13 = *(void **)(result + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
    if (v13)
    {
      v14 = v13;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v14, v15, v16);

      v17 = sub_100007E8C(&qword_1011B4300);
      v18 = *(_QWORD *)(type metadata accessor for NowPlayingQueueSectionViewModel.Item(0) - 8);
      v19 = *(_QWORD *)(v18 + 72);
      v20 = *(unsigned __int8 *)(v18 + 80);
      v21 = (v20 + 32) & ~v20;
      v22._rawValue = (void *)swift_allocObject(v17, v21 + v19, v20 | 7);
      *((_OWORD *)v22._rawValue + 1) = xmmword_100EA7AA0;
      sub_10005B704(a2, (uint64_t)v22._rawValue + v21, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
      NSDiffableDataSourceSnapshot.deleteItems(_:)(v22);
      v23 = swift_bridgeObjectRelease(v22._rawValue);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v8 + 16))(v6, v10, v7, v23);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      v24 = &v12[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext];
      swift_beginAccess(&v12[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext], v26, 33, 0);
      updated = type metadata accessor for MRNowPlayingQueueViewController.UpdateContext(0);
      sub_1004465DC((uint64_t)v6, (uint64_t)&v24[*(int *)(updated + 24)]);
      swift_endAccess(v26);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10043FCCC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  __n128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void **aBlock;
  uint64_t v97;
  uint64_t (*v98)(uint64_t);
  void *v99;
  uint64_t (*v100)();
  uint64_t v101;
  char v102[8];
  char v103[4];
  uint64_t v104;
  uint64_t v105;

  v91 = a7;
  v88 = a6;
  v90 = type metadata accessor for DispatchWorkItemFlags(0);
  v14 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v17);
  v94 = v19;
  v95 = v16;
  v93 = v20;
  v92 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_BYTE)a5)
  {
    if (a5 == 1)
      v21 = 0x7478654E7075;
    else
      v21 = 0x79616C506F747561;
    if (a5 == 1)
      v22 = 0xE600000000000000;
    else
      v22 = 0xE800000000000000;
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0x79726F74736968, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v22);
    v24 = (v23 & 1) == 0;
  }
  else
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    v24 = 0;
  }
  sub_10043D380(a2 & 1, a3, a4, v24);
  v25 = a1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data;
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data);
  if (v26)
  {
    v86 = a8;
    v87 = v14;
    LODWORD(v77) = a5;
    v28 = *(_QWORD *)(v25 + 8);
    v27 = *(_QWORD *)(v25 + 16);
    v30 = *(_QWORD *)(v25 + 24);
    v29 = *(_QWORD *)(v25 + 32);
    v31 = *(_QWORD *)(v25 + 40);
    v32 = *(_QWORD *)(v25 + 48);
    v33 = *(_QWORD *)(v25 + 56);
    v34 = *(_QWORD *)(v25 + 64);
    v35 = *(_QWORD *)(v25 + 80);
    v73 = *(_QWORD *)(v25 + 72);
    v89 = *(_QWORD *)(v25 + 88);
    v75 = *(_QWORD *)(v25 + 96);
    v74 = *(_QWORD *)(v25 + 104);
    v76 = *(unsigned __int8 *)(v25 + 112);
    swift_bridgeObjectRetain();
    v80 = v28;
    v82 = v27;
    v36 = v27;
    v81 = v30;
    v37 = v29;
    sub_100445F28(v28, v36, v30, v29);
    v85 = v31;
    v84 = v32;
    v83 = v33;
    sub_100445F60(v31, v32, v33);
    v79 = v34;
    v38 = v34;
    v39 = v73;
    v78 = v35;
    sub_100445F60(v38, v73, v35);
    v40 = v75;
    v41 = v74;
    sub_100445F60(v89, v75, v74);
    v42 = v77;
    v77 = v26;
    sub_100369C80(v42, v26, (uint64_t)v102);
    sub_100065228((uint64_t)v102, (uint64_t)&aBlock, (uint64_t *)&unk_1011B8580);
    sub_100065228((uint64_t)v102, (uint64_t)v103, (uint64_t *)&unk_1011B8580);
    if (v104)
    {
      v105 = v104;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_1001E3E14(&v105);
      swift_release();
      swift_release();
      v43 = v100;
      v44 = v101;
      v45 = (uint64_t)aBlock;
      v46 = v97;
      v47 = v37;
      v49 = (uint64_t)v98;
      v48 = (uint64_t)v99;
      swift_retain();
      sub_10044657C(v45, v46, v49, v48, (uint64_t)v43, v44);
      v50 = sub_100445F78(v77, v80, v82, v81, v47, v85, v84, v83, v79, v39, v78, v89, v40, v41);
      v51 = IndexPath.item.getter(v50);
      ((void (*)(uint64_t))v43)(v51);
      swift_release();
    }
    else
    {
      sub_100445F78(v77, v80, v82, v81, v37, v85, v84, v83, v79, v39, v78, v89, v40, v41);
    }
    v14 = v87;
    a8 = v86;
  }
  v52 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v60 = (void *)static OS_dispatch_queue.main.getter(v52, v53, v54, v55, v56, v57, v58, v59);
  v61 = swift_allocObject(&unk_1010C5C28, 32, 7);
  *(_QWORD *)(v61 + 16) = v91;
  *(_QWORD *)(v61 + 24) = a8;
  v100 = sub_1002A56E8;
  v101 = v61;
  aBlock = _NSConcreteStackBlock;
  v97 = 1107296256;
  v98 = sub_1001DBD98;
  v99 = &unk_1010C5C40;
  v62 = _Block_copy(&aBlock);
  swift_retain();
  v63 = swift_release();
  v64 = v92;
  static DispatchQoS.unspecified.getter(v63);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v65 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v66 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v67 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  v68 = v95;
  v69 = v66;
  v70 = v90;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v69, v67, v90, v65);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v64, v68, v62);
  _Block_release(v62);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v68, v70);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v64, v94);
}

uint64_t sub_1004402D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v7 = __chkstk_darwin(v6);
  v40 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory.ReorderOptions(0, v7);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.DisplayedState(0, v10);
  v38 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011B42C0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011B42E0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10043BB18();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_cellRegistration, v19);
  sub_10005B704(a2, (uint64_t)v18, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
  v24 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 0, 1, v24);
  v25 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v26 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v22, a1, v18, v25, v24);

  sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011B42C0);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (((*(uint64_t (**)(uint64_t))(a2 + *(int *)(v24 + 40)))(v27) & 1) != 0)
  {
    v28 = sub_100007E8C((uint64_t *)&unk_1011AD790);
    v29 = type metadata accessor for UICellAccessory(0);
    v30 = swift_allocObject(v28, ((*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) | 7);
    *(_OWORD *)(v30 + 16) = xmmword_100EA7AA0;
    v32 = v38;
    v31 = v39;
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v15, enum case for UICellAccessory.DisplayedState.always(_:), v39);
    v33 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v34 = v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v40, 1, 1, v33);
    UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v34, 0, 2);
    static UICellAccessory.reorder(displayed:options:)(v15, v12);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v31);
    v35 = (_QWORD *)v30;
  }
  else
  {
    v35 = _swiftEmptyArrayStorage;
  }
  UICollectionViewListCell.accessories.setter(v35);
  return v26;
}

id sub_100440604(char *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  NSString v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  NSString v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _DWORD v88[2];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v3 = v2;
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C008 != -1)
    swift_once(&qword_10119C008, sub_10043B8B0);
  objc_msgSend(a1, "setLayoutMargins:", 12.0, *(double *)&qword_10124D000, 10.0, *(double *)&qword_10124D000);
  if (a2)
  {
    if (a2 == 1)
    {
      v12 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E34770);
      static Locale.current.getter(v12);
      v13 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, "Queue section header title", 26, 2);
      v14 = (uint64_t *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_title];
      v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_title + 8];
      *v14 = v13;
      v14[1] = v16;
      swift_bridgeObjectRelease(v15);
      v17 = v14[1];
      v18 = *(id *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_titleLabel];
      swift_bridgeObjectRetain();
      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "setText:", v19, swift_bridgeObjectRelease(v17).n128_f64[0]);

      v20 = v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data;
      v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data);
      if (v21)
      {
        v22 = *(_QWORD *)(v20 + 8);
        v23 = *(_QWORD *)(v20 + 16);
        v24 = *(_QWORD *)(v20 + 24);
        v25 = *(_QWORD *)(v20 + 32);
        v27 = *(_QWORD *)(v20 + 40);
        v26 = *(_QWORD *)(v20 + 48);
        v28 = *(_QWORD *)(v20 + 56);
        v29 = *(_QWORD *)(v20 + 64);
        v31 = *(_QWORD *)(v20 + 72);
        v30 = *(_QWORD *)(v20 + 80);
        v32 = *(_QWORD *)(v20 + 88);
        v33 = *(_QWORD *)(v20 + 96);
        v34 = *(_QWORD *)(v20 + 104);
        v35 = *(unsigned __int8 *)(v20 + 112);
        v92 = v26;
        v93 = v27;
        v90 = v31;
        v91 = v28;
        v95 = v32;
        v96 = v30;
        v94 = v33;
        if (v23)
        {
          sub_100445E64(v21, v22, v23, v24, v25, v27, v26, v28, v29, v31, v30, v32, v33, v34);
          sub_100445F28(v22, v23, v24, v25);
          swift_bridgeObjectRelease(v23);
          sub_10004BA30(v24, v25);
          swift_bridgeObjectRetain();
          v36 = v22;
        }
        else
        {
          v75 = v26;
          v89 = v29;
          v76 = v28;
          v88[1] = v35;
          swift_bridgeObjectRetain();
          sub_100445F28(v22, 0, v24, v25);
          v77 = v76;
          v29 = v89;
          sub_100445F60(v27, v75, v77);
          sub_100445F60(v29, v31, v96);
          sub_100445F60(v95, v94, v34);
          v23 = 0;
          v36 = 0;
        }
        sub_100445F78(v21, v22, v23, v24, v25, v93, v92, v91, v29, v90, v96, v95, v94, v34);
      }
      else
      {
        v36 = 0;
        v23 = 0;
      }
      v78 = (uint64_t *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_subtitle];
      v79 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_subtitle + 8];
      *v78 = v36;
      v78[1] = v23;
      swift_bridgeObjectRelease(v79);
      sub_1004EAC58(v80, v81, v82);
      sub_1004EBA08(0);
    }
    else
    {
      v56 = String.LocalizationValue.init(stringLiteral:)(0x79616C706F747541, 0xE800000000000000);
      static Locale.current.getter(v56);
      v57 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, "Queue section header title", 26, 2);
      v58 = (uint64_t *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_title];
      v59 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_title + 8];
      *v58 = v57;
      v58[1] = v60;
      swift_bridgeObjectRelease(v59);
      v61 = v58[1];
      v62 = *(id *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_titleLabel];
      swift_bridgeObjectRetain();
      v63 = String._bridgeToObjectiveC()();
      objc_msgSend(v62, "setText:", v63, swift_bridgeObjectRelease(v61).n128_f64[0]);

      v64 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100E39E00);
      static Locale.current.getter(v64);
      v65 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, "Autoplay Queue subtitle", 23, 2);
      v66 = (uint64_t *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_subtitle];
      v67 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_subtitle + 8];
      *v66 = v65;
      v66[1] = v68;
      swift_bridgeObjectRelease(v67);
      sub_1004EAC58(v69, v70, v71);
      v72 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, 15.0);
      v73 = String._bridgeToObjectiveC()();
      v74 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v73, v72);

      sub_1004EBA08(v74);
    }
    v83 = &a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_trailingButtonTitle];
    v55 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_trailingButtonTitle + 8];
    *(_QWORD *)v83 = 0;
    *((_QWORD *)v83 + 1) = 0;
  }
  else
  {
    v37 = String.LocalizationValue.init(stringLiteral:)(0x79726F74736948, 0xE700000000000000);
    static Locale.current.getter(v37);
    v38 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, "Queue section header title", 26, 2);
    v39 = (uint64_t *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_title];
    v40 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_title + 8];
    *v39 = v38;
    v39[1] = v41;
    swift_bridgeObjectRelease(v40);
    v42 = v39[1];
    v43 = *(id *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_titleLabel];
    swift_bridgeObjectRetain();
    v44 = String._bridgeToObjectiveC()();
    objc_msgSend(v43, "setText:", v44, swift_bridgeObjectRelease(v42).n128_f64[0]);

    v45 = &a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_subtitle];
    v46 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_subtitle + 8];
    *(_QWORD *)v45 = 0;
    *((_QWORD *)v45 + 1) = 0;
    swift_bridgeObjectRelease(v46);
    sub_1004EAC58(v47, v48, v49);
    sub_1004EBA08(0);
    v50 = String.LocalizationValue.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
    static Locale.current.getter(v50);
    v51 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, "Button Title to clear History", 29, 2);
    v52 = (uint64_t *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_trailingButtonTitle];
    v53 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_trailingButtonTitle + 8];
    *v52 = v51;
    v52[1] = v54;
    v55 = v53;
  }
  swift_bridgeObjectRelease(v55);
  return sub_1004EAD28(v84, v85, v86);
}

double sub_100440CB0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  CGRect v31;
  CGRect v32;

  v3 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_headerSizingView;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_headerSizingView);
  if (v4)
  {
    v5 = *(id *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_headerSizingView);
  }
  else
  {
    type metadata accessor for MRNowPlayingQueueHeaderView();
    v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    v7 = *(void **)(v1 + v3);
    *(_QWORD *)(v1 + v3) = v6;
    v5 = v6;

    v8 = (void *)sub_10043BB18();
    objc_msgSend(v8, "frame");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v31.origin.x = v10;
    v31.origin.y = v12;
    v31.size.width = v14;
    v31.size.height = v16;
    objc_msgSend(v5, "setFrame:", 0.0, 0.0, CGRectGetWidth(v31), 100.0);

    v4 = 0;
  }
  v17 = v4;
  sub_100440604((char *)v5, a1);
  objc_msgSend(v5, "layoutIfNeeded");
  v18 = v5;
  v19 = (void *)sub_10043BB18();
  objc_msgSend(v19, "frame");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v32.origin.x = v21;
  v32.origin.y = v23;
  v32.size.width = v25;
  v32.size.height = v27;
  objc_msgSend(v18, "systemLayoutSizeFittingSize:", CGRectGetWidth(v32), INFINITY);
  v29 = v28;

  return v29;
}

void sub_100440E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (**v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v7 = sub_100007E8C(&qword_1011B41B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(_UICollectionViewListLayoutElementKindSectionFooter);
  if (v11 == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_14;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v11, v12, 0);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
  {
LABEL_14:
    v23 = sub_10004A07C(0, (unint64_t *)&unk_1011B42D0, UICollectionReusableView_ptr);
    UICollectionView.dequeue<A>(_:ofKind:for:reuseIdentifier:)(v23, a1, a2, a3, 0x46676E6963617053, 0xED00007265746F6FLL, v23);
    return;
  }
  v35 = v3;
  v16 = *(void **)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
  if (!v16)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v17 = v16;
  v18 = IndexPath.safeSection.getter();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v18, v19, v20);
  v21 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v18 >= *(_QWORD *)(v21 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v22 = *(unsigned __int8 *)(v21 + v18 + 32);

  swift_bridgeObjectRelease(v21);
  if (v22)
  {
    v31 = type metadata accessor for MRNowPlayingQueueHeaderView();
    if (v22 == 1)
    {
      v32 = (char *)UICollectionView.dequeue<A>(_:ofKind:for:reuseIdentifier:)(v31, a1, a2, a3, 0x65487478654E7055, 0xEC00000072656461, v31);
      v33 = 1;
    }
    else
    {
      v32 = (char *)UICollectionView.dequeue<A>(_:ofKind:for:reuseIdentifier:)(v31, a1, a2, a3, 0x79616C506F747541, 0xEE00726564616548, v31);
      v33 = 2;
    }
    sub_100440604(v32, v33);
  }
  else
  {
    v24 = type metadata accessor for MRNowPlayingQueueHeaderView();
    v25 = (char *)UICollectionView.dequeue<A>(_:ofKind:for:reuseIdentifier:)(v24, a1, a2, a3, 0x4879726F74736948, 0xED00007265646165, v24);
    v26 = v35;
    sub_100440604(v25, 0);
    v27 = swift_allocObject(&unk_1010C5AE8, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, v26);
    v28 = (void (**)())&v25[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_trailingButtonAction];
    v29 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_trailingButtonAction];
    v30 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Music27MRNowPlayingQueueHeaderView_trailingButtonAction + 8];
    *v28 = sub_100445E54;
    v28[1] = (void (*)())v27;
    sub_10004BA30(v29, v30);
  }
}

void sub_100441124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  NSString v24;
  id v25;
  _QWORD aBlock[7];
  _BYTE v27[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000044, 0x8000000100E39D90);
    static Locale.current.getter(v10);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v13, 1);

    v15 = String.LocalizationValue.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
    static Locale.current.getter(v15);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v17 = v16;
    v18 = swift_allocObject(&unk_1010C5AE8, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, v9);
    swift_retain();
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    aBlock[4] = sub_100445E5C;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100223938;
    aBlock[3] = &unk_1010C5B00;
    v20 = _Block_copy(aBlock);
    swift_release();
    v21 = (void *)objc_opt_self(UIAlertAction);
    v22 = objc_msgSend(v21, "actionWithTitle:style:handler:", v19, 2, v20);
    _Block_release(v20);
    swift_release();

    objc_msgSend(v14, "addAction:", v22);
    v23 = String.cancelButtonTitle.unsafeMutableAddressor()[1];
    swift_bridgeObjectRetain();
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v21, "actionWithTitle:style:handler:", v24, 1, 0, swift_bridgeObjectRelease(v23).n128_f64[0]);

    objc_msgSend(v14, "addAction:", v25);
    objc_msgSend(v9, "presentViewController:animated:completion:", v14, 1, 0);

  }
}

void sub_100441448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didScrollToUpNext] = 0;

  }
  if (qword_10119C130 != -1)
    swift_once(&qword_10119C130, sub_100500284);
  sub_10050CB94();
}

void sub_1004414C8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  Class isa;
  id v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v30 - v11;
  v13 = objc_msgSend(a1, "state", v10);
  if (v13 == (id)3)
  {
    v31 = sub_10043BB18();
    objc_msgSend(v31, "endInteractiveMovement");
    goto LABEL_11;
  }
  if (v13 == (id)2)
  {
    v31 = sub_10043BB18();
    v24 = objc_msgSend(a1, "view");
    if (!v24)
    {
      __break(1u);
      return;
    }
    v25 = v24;
    objc_msgSend(a1, "locationInView:", v24);
    v27 = v26;
    v29 = v28;

    objc_msgSend(v31, "updateInteractiveMovementTargetPosition:", v27, v29);
LABEL_11:

    return;
  }
  if (v13 != (id)1)
  {
    v31 = sub_10043BB18();
    objc_msgSend(v31, "cancelInteractiveMovement");
    goto LABEL_11;
  }
  v14 = sub_10043BB18();
  v15 = sub_10043BB18();
  objc_msgSend(a1, "locationInView:", v15);
  v17 = v16;
  v19 = v18;

  v20 = objc_msgSend(v14, "indexPathForItemAtPoint:", v17, v19);
  if (v20)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v20);

    v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v21(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v21(v12, v4, v5);
      v22 = sub_10043BB18();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "beginInteractiveMovementForItemAtIndexPath:", isa);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3D50);
}

void sub_100441804()
{
  qword_1011B3FF0 = Int.seconds.getter(200);
}

void sub_1004418BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  id v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  CGFloat Height;
  double v24;
  double v25;
  id v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  uint64_t v36;
  _BYTE v37[24];
  CGRect v38;
  CGRect v39;

  v3 = v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext;
  *(_QWORD *)&v4 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext, v37, 0, 0).n128_u64[0];
  if ((*(_BYTE *)(v3 + 8) & 1) == 0)
  {
    v5 = sub_10043BB18();
    objc_msgSend(v5, "contentOffset");
    v7 = v6;

    v4 = floor(v7);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection) = floor(*(double *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY)) <= v4;
  }
  v8 = *(double *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_initialDraggingOffset + 8);
  v9 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY;
  v10 = *(double *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY);
  objc_msgSend(a1, "contentOffset", v4);
  v12 = v11;
  if (v10 <= v8)
  {
    v35 = v10 - v11;
  }
  else
  {
    v13 = *(double *)(v1 + v9);
    v14 = sub_10043BB18();
    objc_msgSend(v14, "frame");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v38.origin.x = v16;
    v38.origin.y = v18;
    v38.size.width = v20;
    v38.size.height = v22;
    Height = CGRectGetHeight(v38);
    v24 = 0.0;
    if (Height < v13)
    {
      v25 = *(double *)(v1 + v9);
      v26 = sub_10043BB18();
      objc_msgSend(v26, "frame");
      v28 = v27;
      v30 = v29;
      v32 = v31;
      v34 = v33;

      v39.origin.x = v28;
      v39.origin.y = v30;
      v39.size.width = v32;
      v39.size.height = v34;
      v24 = v25 - CGRectGetHeight(v39);
    }
    v35 = v12 - v24;
  }
  if (qword_10119C018 != -1)
    swift_once(&qword_10119C018, sub_100441804);
  v36 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_shouldPlayHapticFeedback;
  if (*(double *)&qword_1011B3FF0 <= v35)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_shouldPlayHapticFeedback))
    {
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_feedbackGenerator), "impactOccurred", *(double *)&qword_1011B3FF0);
      *(_BYTE *)(v1 + v36) = 0;
    }
  }
  else if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_shouldPlayHapticFeedback) & 1) == 0)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_shouldPlayHapticFeedback) = 1;
  }
}

void sub_100441B04(id a1, double *a2, double a3, double a4)
{
  uint64_t v4;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  CGFloat Height;
  double v29;
  double v30;
  id v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  id v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  id v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  BOOL v59;
  double v60;
  id v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  double v71;
  double v72;
  id v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  CGFloat v82;
  double v83;
  double v84;
  id v85;
  double v86;
  CGFloat v87;
  double v88;
  CGFloat v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  double v94;
  double v95;
  double v96;
  double v97;
  id v98;
  double v99;
  CGFloat v100;
  double v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  double v105;
  CGFloat v106;
  CGFloat v107;
  double v108;
  double v109;
  id v110;
  double v111;
  CGFloat v112;
  double v113;
  CGFloat v114;
  double v115;
  CGFloat v116;
  double v117;
  CGFloat v118;
  double v119;
  double v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;

  v8 = *a2;
  v9 = a2[1];
  v10 = v4 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_initialDraggingOffset;
  v11 = *(double *)(v4 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_initialDraggingOffset + 8);
  v12 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY;
  v13 = *(double *)(v4 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY);
  if (v13 <= v11 && a4 < 0.0)
  {
    objc_msgSend(a1, "contentOffset");
    v14 = *(double *)(v4 + v12);
    if (v15 > v14)
    {
      if (a2[1] >= v14)
        goto LABEL_30;
LABEL_29:
      a2[1] = v14;
      goto LABEL_30;
    }
    goto LABEL_14;
  }
  objc_msgSend(a1, "contentOffset");
  v17 = v16;
  v18 = *(double *)(v4 + v12);
  if (v11 < v13 && a4 > 0.0)
  {
    v19 = sub_10043BB18();
    objc_msgSend(v19, "frame");
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    v122.origin.x = v21;
    v122.origin.y = v23;
    v122.size.width = v25;
    v122.size.height = v27;
    Height = CGRectGetHeight(v122);
    v29 = 0.0;
    if (Height < v18)
    {
      v30 = *(double *)(v4 + v12);
      v31 = sub_10043BB18();
      objc_msgSend(v31, "frame");
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;

      v123.origin.x = v33;
      v123.origin.y = v35;
      v123.size.width = v37;
      v123.size.height = v39;
      v29 = v30 - CGRectGetHeight(v123);
    }
    if (v29 <= v17)
    {
      v14 = *(double *)(v4 + v12);
      goto LABEL_29;
    }
    v40 = *(double *)(v4 + v12);
    if (v40 > a2[1])
      goto LABEL_30;
    v41 = sub_10043BB18();
    objc_msgSend(v41, "frame");
    v43 = v42;
    v45 = v44;
    v47 = v46;
    v49 = v48;

    v124.origin.x = v43;
    v124.origin.y = v45;
    v124.size.width = v47;
    v124.size.height = v49;
    v14 = 0.0;
    if (CGRectGetHeight(v124) >= v40)
      goto LABEL_29;
    goto LABEL_16;
  }
  if (v16 < v18)
  {
    objc_msgSend(a1, "contentOffset");
    v71 = v70;
    v72 = *(double *)(v4 + v12);
    v73 = sub_10043BB18();
    objc_msgSend(v73, "frame");
    v75 = v74;
    v77 = v76;
    v79 = v78;
    v81 = v80;

    v127.origin.x = v75;
    v127.origin.y = v77;
    v127.size.width = v79;
    v127.size.height = v81;
    v82 = CGRectGetHeight(v127);
    v83 = 0.0;
    if (v82 < v72)
    {
      v84 = *(double *)(v4 + v12);
      v85 = sub_10043BB18();
      objc_msgSend(v85, "frame");
      v87 = v86;
      v89 = v88;
      v91 = v90;
      v93 = v92;

      v128.origin.x = v87;
      v128.origin.y = v89;
      v128.size.width = v91;
      v128.size.height = v93;
      v83 = v84 - CGRectGetHeight(v128);
    }
    if (v83 < v71)
    {
      v94 = *(double *)(v4 + v12);
      if (v94 <= *(double *)(v10 + 8))
      {
        v121 = v94 - a2[1];
        if (qword_10119C018 != -1)
          swift_once(&qword_10119C018, sub_100441804);
        v14 = *(double *)(v4 + v12);
        if (*(double *)&qword_1011B3FF0 > v121)
          goto LABEL_29;
      }
      else
      {
        objc_msgSend(a1, "contentOffset");
        v96 = v95;
        v97 = *(double *)(v4 + v12);
        v98 = sub_10043BB18();
        objc_msgSend(v98, "frame");
        v100 = v99;
        v102 = v101;
        v104 = v103;
        v106 = v105;

        v129.origin.x = v100;
        v129.origin.y = v102;
        v129.size.width = v104;
        v129.size.height = v106;
        v107 = CGRectGetHeight(v129);
        v108 = 0.0;
        if (v107 < v97)
        {
          v109 = *(double *)(v4 + v12);
          v110 = sub_10043BB18();
          objc_msgSend(v110, "frame");
          v112 = v111;
          v114 = v113;
          v116 = v115;
          v118 = v117;

          v130.origin.x = v112;
          v130.origin.y = v114;
          v130.size.width = v116;
          v130.size.height = v118;
          v108 = v109 - CGRectGetHeight(v130);
        }
        v119 = v96 - v108;
        if (qword_10119C018 != -1)
          swift_once(&qword_10119C018, sub_100441804);
        v14 = *(double *)(v4 + v12);
        if (*(double *)&qword_1011B3FF0 <= v119)
          goto LABEL_29;
      }
LABEL_14:
      v50 = sub_10043BB18();
      objc_msgSend(v50, "frame");
      v52 = v51;
      v54 = v53;
      v56 = v55;
      v58 = v57;

      v125.origin.x = v52;
      v125.origin.y = v54;
      v125.size.width = v56;
      v125.size.height = v58;
      v59 = CGRectGetHeight(v125) < v14;
      v14 = 0.0;
      if (!v59)
        goto LABEL_29;
LABEL_16:
      v60 = *(double *)(v4 + v12);
      v61 = sub_10043BB18();
      objc_msgSend(v61, "frame");
      v63 = v62;
      v65 = v64;
      v67 = v66;
      v69 = v68;

      v126.origin.x = v63;
      v126.origin.y = v65;
      v126.size.width = v67;
      v126.size.height = v69;
      v14 = v60 - CGRectGetHeight(v126);
      goto LABEL_29;
    }
  }
LABEL_30:
  if (v8 != *a2 || v9 != a2[1])
    objc_msgSend(a1, "setDecelerationRate:", UIScrollViewDecelerationRateFast);
}

void sub_100442020(char a1, double a2, double a3)
{
  uint64_t v3;
  double v5;
  _QWORD *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  CGRect v36;

  v5 = *(double *)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY);
  if ((a1 & 1) != 0)
  {
    v6 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentSize);
    *v6 = 0;
    v6[1] = 0;
    a3 = v5 + sub_100440CB0(1);
  }
  v7 = (void *)sub_10043BB18();
  objc_msgSend(v7, "safeAreaInsets");
  v9 = v8;

  v10 = a3 + v9;
  v11 = (void *)sub_10043BB18();
  objc_msgSend(v11, "frame");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v36.origin.x = v13;
  v36.origin.y = v15;
  v36.size.width = v17;
  v36.size.height = v19;
  v20 = v5 - (v10 - CGRectGetHeight(v36));
  if (v20 > 0.0)
    v21 = v20;
  else
    v21 = 0.0;
  v22 = (void *)sub_10043BB18();
  objc_msgSend(v22, "safeAreaInsets");
  v24 = v23;

  v25 = v21 + v24;
  v26 = (void *)sub_10043BB18();
  objc_msgSend(v26, "contentInset");
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;

  if (v28 != 0.0 || v30 != 0.0 || v32 != v25 || v34 != 0.0)
  {
    v35 = (id)sub_10043BB18();
    objc_msgSend(v35, "setContentInset:", 0.0, 0.0, v25, 0.0);

  }
}

void sub_1004421AC(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double *v14;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  double v27;
  CGFloat MaxY;
  __n128 v29;
  void *v30;
  id v31;
  id v32;
  Class isa;
  id v34;
  uint64_t v35;
  CGRect v36;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011B41B0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (double *)(v2 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentSize);
  if (*(double *)(v2 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentSize) == a1
    && *(double *)(v2 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentSize + 8) == a2)
  {
    return;
  }
  *v14 = a1;
  v14[1] = a2;
  v16 = *(void **)(v2 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
  if (!v16)
  {
    __break(1u);
    return;
  }
  v17 = v16;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v17, v18, v19);

  v20 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
LABEL_14:
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v20).n128_u64[0];
    goto LABEL_15;
  }
  v22 = 0;
  while (1)
  {
    v23 = *(unsigned __int8 *)(v20 + v22 + 32);
    if (v23 != 1)
      break;
    v24 = 0xE600000000000000;
    v25 = 0x7478654E7075;
LABEL_12:
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v24, 0x79726F74736968, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v24);
    if ((v26 & 1) != 0)
      goto LABEL_17;
    if (v21 == ++v22)
      goto LABEL_14;
  }
  if (v23 == 2)
  {
    v24 = 0xE800000000000000;
    v25 = 0x79616C506F747561;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease(v20);
  v20 = 0xE700000000000000;
LABEL_17:
  v29 = swift_bridgeObjectRelease(v20);
  v30 = (void *)sub_10043BB18(v29);
  v31 = objc_msgSend(v30, "collectionViewLayout");

  v32 = _UICollectionViewListLayoutElementKindSectionFooter;
  IndexPath.init(item:section:)(0, v22);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v34 = objc_msgSend(v31, "layoutAttributesForSupplementaryViewOfKind:atIndexPath:", v32, isa);

  if (!v34)
  {
LABEL_15:
    MaxY = 0.0;
    goto LABEL_19;
  }
  objc_msgSend(v34, "frame");
  MaxY = CGRectGetMaxY(v36);

LABEL_19:
  *(CGFloat *)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY) = MaxY;
  sub_100442020(0, v27, a2);
  sub_10044245C();
}

void sub_10044245C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  __n128 v22;
  _BOOL4 v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  void (*v33)(char *, uint64_t);
  char v34;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011B41B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
  if (!v10)
  {
    __break(1u);
    goto LABEL_22;
  }
  v11 = v10;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v11, v12, v13);
  v14 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v2);
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v8, v2);
  v16 = *(_QWORD *)(v14 + 16);
  if (!v16)
  {
LABEL_10:

    v22 = swift_bridgeObjectRelease(v14);
    v23 = 1;
LABEL_15:
    v30 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didScrollToUpNext;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didScrollToUpNext) & 1) == 0)
    {
      v31 = *(double *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY);
      if (v31 > 0.0)
        v23 = 1;
      if (v23)
      {
        v32 = (void *)sub_10043BB18(v22);
        objc_msgSend(v32, "setContentOffset:", 0.0, v31);

        *(_BYTE *)(v1 + v30) = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didAppearOnce);
      }
    }
    return;
  }
  v33 = v15;
  v17 = 0;
  while (1)
  {
    v18 = *(unsigned __int8 *)(v14 + v17 + 32);
    if (v18 != 1)
      break;
    v19 = 0xE600000000000000;
    v20 = 0x7478654E7075;
LABEL_8:
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v19, 0x79726F74736968, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v19);
    if ((v21 & 1) != 0)
    {

      goto LABEL_13;
    }
    if (v16 == ++v17)
      goto LABEL_10;
  }
  if (v18 == 2)
  {
    v19 = 0xE800000000000000;
    v20 = 0x79616C506F747561;
    goto LABEL_8;
  }

  swift_bridgeObjectRelease(v14);
  v14 = 0xE700000000000000;
LABEL_13:
  swift_bridgeObjectRelease(v14);
  v24 = *(void **)(v1 + v9);
  v25 = v33;
  if (v24)
  {
    v26 = v24;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v26, v27, v28);

    v34 = 0;
    v29 = NSDiffableDataSourceSnapshot.numberOfItems(inSection:)(&v34, v2);
    v25(v5, v2);
    v23 = v29 < 1;
    goto LABEL_15;
  }
LABEL_22:
  __break(1u);
}

id sub_1004426B8(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  NSString v15;
  id v16;
  objc_super v18;

  v6 = &v3[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  v6[112] = 0;
  v7 = (uint64_t)&v3[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext];
  v8 = v3;
  sub_10043B8F0(v7);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController____lazy_storage___collectionView] = 0;
  v9 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v10 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10043BDC0, 0, v9, v10);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY] = 0;
  v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didAppearOnce] = 0;
  v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didScrollToUpNext] = 0;
  v11 = &v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentSize];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = &v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentOffset];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_feedbackGenerator;
  *(_QWORD *)&v8[v13] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 3);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_headerSizingView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_bindings] = _swiftEmptyArrayStorage;
  v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection] = 1;
  v14 = &v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_initialDraggingOffset];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v8[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_shouldPlayHapticFeedback] = 0;

  if (a2)
  {
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for MRNowPlayingQueueViewController(0);
  v16 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", v15, a3);

  return v16;
}

id sub_100442908(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  objc_super v14;

  v3 = &v1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController__data];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  v3[112] = 0;
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext];
  v5 = v1;
  sub_10043B8F0(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController____lazy_storage___collectionView] = 0;
  v6 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v7 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10043BDC0, 0, v6, v7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY] = 0;
  v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didAppearOnce] = 0;
  v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_didScrollToUpNext] = 0;
  v8 = &v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentSize];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_previousContentOffset];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_feedbackGenerator;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 3);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_headerSizingView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_bindings] = _swiftEmptyArrayStorage;
  v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection] = 1;
  v11 = &v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_initialDraggingOffset];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v5[OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_shouldPlayHapticFeedback] = 0;

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for MRNowPlayingQueueViewController(0);
  v12 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);

  return v12;
}

id sub_100442AE4()
{
  return sub_10004D23C(0, (uint64_t (*)(void))type metadata accessor for MRNowPlayingQueueViewController);
}

uint64_t sub_100442BE0()
{
  return type metadata accessor for MRNowPlayingQueueViewController(0);
}

uint64_t type metadata accessor for MRNowPlayingQueueViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B40A0, (uint64_t)&nominal type descriptor for MRNowPlayingQueueViewController);
}

void sub_100442BFC(uint64_t a1)
{
  uint64_t updated;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[16];

  v6[0] = "q";
  updated = type metadata accessor for MRNowPlayingQueueViewController.UpdateContext(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(updated - 8) + 64;
    v6[2] = &unk_100EBB258;
    sub_100442CFC(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100EBB258;
      v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[6] = &unk_100EBB270;
      v6[7] = &unk_100EBB270;
      v6[8] = &unk_100EBB288;
      v6[9] = &unk_100EBB288;
      v6[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[11] = &unk_100EBB258;
      v6[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[13] = &unk_100EBB2A0;
      v6[14] = &unk_100EBB288;
      v6[15] = &unk_100EBB270;
      swift_updateClassMetadata2(a1, 256, 16, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for MRNowPlayingQueueViewController.UpdateContext(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B4218, (uint64_t)&nominal type descriptor for MRNowPlayingQueueViewController.UpdateContext);
}

void sub_100442CFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1011B40B0)
  {
    v2 = sub_10004A07C(255, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
    v3 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(255);
    v4 = type metadata accessor for UICollectionView.CellRegistration(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1011B40B0);
  }
}

double sub_100442D70(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  double v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  double v17;
  double v18;
  _BYTE v20[24];

  v7 = type metadata accessor for MRNowPlayingQueueViewController.CollectionView();
  v8 = swift_dynamicCastClass(a1, v7);
  if (v8)
  {
    v9 = (void *)v8;
    if (*(_BYTE *)(v8 + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_hasInteractiveMovement) == 1
      && *(double *)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY) > a3)
    {
      if (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection))
      {
        if (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection) == 1)
        {
          swift_bridgeObjectRelease(0xE600000000000000);
          return 0.0;
        }
        v13 = 0xE800000000000000;
        v14 = 0x79616C506F747561;
      }
      else
      {
        v13 = 0xE700000000000000;
        v14 = 0x79726F74736968;
      }
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v13, 0x7478654E7075, 0xE600000000000000, 0);
      v16 = a1;
      *(_QWORD *)&v17 = swift_bridgeObjectRelease(v13).n128_u64[0];
      if ((v15 & 1) == 0)
      {
        objc_msgSend(v9, "contentOffset", v17);
        a2 = v18;

        return a2;
      }

      return 0.0;
    }
    v10 = v3 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_updateContext;
    *(_QWORD *)&v11 = swift_beginAccess(v10, v20, 0, 0).n128_u64[0];
    if (*(_BYTE *)(v10 + 8) == 1)
    {
      objc_msgSend(v9, "contentOffset", v11);
      return v12;
    }
  }
  return a2;
}

char *sub_1004430A4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *result;
  char *v12;
  uint64_t v13;

  v6 = IndexPath.section.getter();
  v7 = IndexPath.section.getter();
  v8 = IndexPath.section.getter();
  if (v7 < v6)
  {
    v9 = 0;
    v10 = v8;
    return (char *)IndexPath.init(item:section:)(v9, v10);
  }
  if (v8 >= IndexPath.section.getter())
  {
    v13 = type metadata accessor for IndexPath(0);
    return (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a3, a2, v13);
  }
  else
  {
    result = (char *)objc_msgSend(a1, "numberOfItemsInSection:", IndexPath.section.getter());
    v12 = result - 1;
    if (!__OFSUB__(result, 1))
    {
      v10 = IndexPath.section.getter();
      v9 = v12;
      return (char *)IndexPath.init(item:section:)(v9, v10);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100443440(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  _BYTE v10[24];

  v2 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_hasInteractiveMovement);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_hasInteractiveMovement) = result;
  if (v2 == 1 && (result & 1) == 0)
  {
    v3 = (uint64_t *)(v1
                   + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementCompletionHandlers);
    swift_beginAccess(v3, v10, 1, 0);
    v4 = *v3;
    *v3 = (uint64_t)_swiftEmptyArrayStorage;
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v6 = (_QWORD *)(v4 + 40);
      do
      {
        v8 = (void (*)(uint64_t))*(v6 - 1);
        v7 = *v6;
        v9 = swift_retain(*v6);
        v8(v9);
        swift_release(v7);
        v6 += 2;
        --v5;
      }
      while (v5);
    }
    return swift_bridgeObjectRelease(v4);
  }
  return result;
}

uint64_t sub_100443608()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];
  objc_super v29;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for MRNowPlayingQueueViewController.CollectionView();
  v29.receiver = v0;
  v29.super_class = v8;
  objc_msgSendSuper2(&v29, "endInteractiveMovement");
  v9 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v9, v10, v11, v12, v13, v14, v15, v16);
  v18 = swift_allocObject(&unk_1010C5A98, 24, 7);
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = sub_100444EC8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010C5AB0;
  v19 = _Block_copy(aBlock);
  v20 = v0;
  v21 = swift_release();
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v24 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v1, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_100443834(uint64_t a1)
{
  char v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(__n128);
  __n128 v8;
  uint64_t v9;
  void (*v10)(__n128);
  uint64_t v11;
  __n128 v12;
  _BYTE v13[24];

  v2 = *(_BYTE *)(a1 + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_hasInteractiveMovement);
  *(_BYTE *)(a1 + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_hasInteractiveMovement) = 0;
  if ((v2 & 1) != 0)
  {
    v3 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementCompletionHandlers);
    swift_beginAccess(a1+ OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementCompletionHandlers, v13, 1, 0);
    v4 = *v3;
    *v3 = (uint64_t)_swiftEmptyArrayStorage;
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v6 = v4 + 40;
      do
      {
        v7 = *(void (**)(__n128))(v6 - 8);
        v8 = swift_retain();
        v7(v8);
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease(v4);
  }
  v9 = a1 + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock;
  v10 = *(void (**)(__n128))(a1
                                      + OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 8);
    v12 = swift_retain();
    v10(v12);
    sub_10004BA30((uint64_t)v10, v11);
  }
}

id sub_100443A90(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementDidBeginBlock];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v1[OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementDidEndBlock];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_maxReorderingContentOffset] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_interactiveMovementCompletionHandlers] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewController14CollectionView_hasInteractiveMovement] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for MRNowPlayingQueueViewController.CollectionView();
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

id sub_100443B4C(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for MRNowPlayingQueueViewController.CollectionView);
}

uint64_t type metadata accessor for MRNowPlayingQueueViewController.CollectionView()
{
  return objc_opt_self(_TtCC5Music31MRNowPlayingQueueViewController14CollectionView);
}

uint64_t type metadata accessor for MRNowPlayingQueueViewController.DataSource(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B4130, (uint64_t)&nominal type descriptor for MRNowPlayingQueueViewController.DataSource);
}

uint64_t sub_100443BDC(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100EBB2D8;
  v2[1] = &unk_100EBB2D8;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_1011B4120);
}

uint64_t sub_100443C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, __n128);
  uint64_t v5;
  __n128 v6;
  char v7;

  v3 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v2 + qword_1011B4110);
  if (!v3)
    return 0;
  v5 = *(_QWORD *)(v2 + qword_1011B4110 + 8);
  v6 = swift_retain();
  v7 = v3(v2, a2, v6);
  sub_10004BA30((uint64_t)v3, v5);
  return v7 & 1;
}

uint64_t sub_100443C94(char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(char *, char *);
  uint64_t v12;
  id v13;
  char *v14;
  char v15;
  uint64_t v17;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = *(uint64_t (**)(char *, char *))&a1[qword_1011B4110];
  if (v11)
  {
    v12 = *(_QWORD *)&a1[qword_1011B4110 + 8];
    v13 = a3;
    v14 = a1;
    sub_100048AAC((uint64_t)v11, v12);
    v15 = v11(v14, v10);
    sub_10004BA30((uint64_t)v11, v12);

  }
  else
  {
    v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v15 & 1;
}

void sub_100443D90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  id v10;

  v7 = type metadata accessor for MRNowPlayingQueueViewController.CollectionView();
  if (swift_dynamicCastClass(a1, v7))
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + qword_1011B4118);
    if (v8)
    {
      v9 = *(_QWORD *)(v3 + qword_1011B4118 + 8);
      v10 = a1;
      sub_100048AAC((uint64_t)v8, v9);
      v8(v3, a2, a3);
      sub_10004BA30((uint64_t)v8, v9);

    }
  }
}

uint64_t sub_100443E48(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, char *);
  uint64_t v18;
  id v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v23 - v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v16 = type metadata accessor for MRNowPlayingQueueViewController.CollectionView();
  if (swift_dynamicCastClass(a3, v16))
  {
    v17 = *(void (**)(char *, char *, char *))&a1[qword_1011B4118];
    if (v17)
    {
      v18 = *(_QWORD *)&a1[qword_1011B4118 + 8];
      v19 = a3;
      v20 = a1;
      sub_100048AAC((uint64_t)v17, v18);
      v17(v20, v15, v12);
      sub_10004BA30((uint64_t)v17, v18);

    }
  }
  v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v12, v9);
  return ((uint64_t (*)(char *, uint64_t))v21)(v15, v9);
}

uint64_t sub_100443F8C()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + qword_1011B4110), *(_QWORD *)(v0 + qword_1011B4110 + 8));
  return sub_10004BA30(*(_QWORD *)(v0 + qword_1011B4118), *(_QWORD *)(v0 + qword_1011B4118 + 8));
}

id sub_100443FC0()
{
  return sub_10004D23C(0, (uint64_t (*)(void))type metadata accessor for MRNowPlayingQueueViewController.DataSource);
}

uint64_t sub_100443FD0(uint64_t a1)
{
  sub_10004BA30(*(_QWORD *)(a1 + qword_1011B4110), *(_QWORD *)(a1 + qword_1011B4110 + 8));
  return sub_10004BA30(*(_QWORD *)(a1 + qword_1011B4118), *(_QWORD *)(a1 + qword_1011B4118 + 8));
}

uint64_t sub_100444010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  char *v7;
  char *v8;

  v6 = (char *)objc_allocWithZone((Class)type metadata accessor for MRNowPlayingQueueViewController.DataSource(0));
  v7 = &v6[qword_1011B4110];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v6[qword_1011B4118];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(a1, a2, a3);
}

uint64_t sub_100444080()
{
  return type metadata accessor for MRNowPlayingQueueViewController.DataSource(0);
}

id sub_1004444C4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v4;
  void *v9;
  objc_class *v10;
  id v11;
  _QWORD v13[6];
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music31MRNowPlayingQueueViewControllerP33_8E32695F97AEF024FCAC1FE4F403941119CompositionalLayout_upNextHeaderMaxY] = 0;
  if (a2)
  {
    v13[4] = a2;
    v13[5] = a3;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1008E31AC;
    v13[3] = &unk_1010C59C0;
    v9 = _Block_copy(v13);
    swift_retain();
    swift_release();
  }
  else
  {
    v9 = 0;
  }
  v10 = (objc_class *)type metadata accessor for MRNowPlayingQueueViewController.CompositionalLayout();
  v14.receiver = v4;
  v14.super_class = v10;
  v11 = objc_msgSendSuper2(&v14, "initWithSection:sectionProvider:configuration:", a1, v9, a4);

  sub_10004BA30(a2, a3);
  _Block_release(v9);
  return v11;
}

id sub_10044464C()
{
  return sub_10004D23C(0, type metadata accessor for MRNowPlayingQueueViewController.CompositionalLayout);
}

uint64_t type metadata accessor for MRNowPlayingQueueViewController.CompositionalLayout()
{
  return objc_opt_self(_TtCC5Music31MRNowPlayingQueueViewControllerP33_8E32695F97AEF024FCAC1FE4F403941119CompositionalLayout);
}

char *sub_10044467C(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    a1[8] = *((_BYTE *)a2 + 8);
    v8 = *(int *)(a3 + 24);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = v5;
    v12 = sub_100007E8C(&qword_1011B41B0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = sub_100007E8C(&qword_1011B41B8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    *(_QWORD *)&a1[*(int *)(a3 + 28)] = *(char **)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_10044478C(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C(&qword_1011B41B0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(id *)((char *)a1 + *(int *)(a2 + 28))).n128_u64[0];
  return result;
}

uint64_t sub_100444810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = v6;
  v11 = sub_100007E8C(&qword_1011B41B0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
  {
    v13 = sub_100007E8C(&qword_1011B41B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v8, v9, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1004448FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_100007E8C(&qword_1011B41B0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100007E8C(&qword_1011B41B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = *(_QWORD *)(a2 + v18);
  v20 = *(_QWORD *)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_100444A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100007E8C(&qword_1011B41B0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011B41B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100444B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_100007E8C(&qword_1011B41B0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C(&qword_1011B41B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 28);
  v17 = *(_QWORD *)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_100444C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100444C78);
}

uint64_t sub_100444C78(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011B41B8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_100444CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100444D04);
}

char *sub_100444D04(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011B41B8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_100444D7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_100EBB270;
  sub_100444E08(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_100444E08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B4228)
  {
    v2 = sub_100044B54(&qword_1011B41B0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011B4228);
  }
}

uint64_t sub_100444E60()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_100444E84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10070A6B8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100444E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100444E9C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100444EA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100444EC8()
{
  uint64_t v0;

  sub_100443834(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100444ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  char *v34;
  uint64_t v35;
  __n128 v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[3];

  v68 = a1;
  v80 = a2;
  v3 = sub_100007E8C(&qword_1011B43F8);
  __chkstk_darwin(v3);
  v79 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v78 = (uint64_t *)((char *)&v68 - v6);
  v7 = type metadata accessor for MRNowPlayingQueueViewController.Cell(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011B4400);
  v74 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100007E8C(&qword_1011B4408);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v69 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011B4410);
  __chkstk_darwin(v70);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011B4418);
  __chkstk_darwin(v77);
  v71 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v76 = (uint64_t)&v68 - v18;
  sub_10005B704(a1, (uint64_t)v10, type metadata accessor for MRNowPlayingQueueViewController.Cell);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_1010C5F68, v20 + v9, v19 | 7);
  sub_10005B6C0((uint64_t)v10, v21 + v20, type metadata accessor for MRNowPlayingQueueViewController.Cell);
  *(_QWORD *)&v81[0] = sub_100447FBC;
  *((_QWORD *)&v81[0] + 1) = v21;
  v22 = Corner.medium.unsafeMutableAddressor();
  v23 = *v22;
  v24 = v22[1];
  v25 = *((_BYTE *)v22 + 16);
  v26 = sub_100007E8C(&qword_1011B4420);
  v27 = sub_100049F28(&qword_1011B4428, &qword_1011B4420, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  View.corner(_:)(v23, v24, v25, v26, v27);
  swift_release();
  v28 = Border.artwork.unsafeMutableAddressor();
  v29 = *v28;
  v30 = *((double *)v28 + 1);
  v31 = *v22;
  v32 = v22[1];
  LOBYTE(v22) = *((_BYTE *)v22 + 16);
  LOBYTE(v21) = *((_BYTE *)v28 + 16);
  swift_retain();
  *(_QWORD *)&v81[0] = v26;
  *((_QWORD *)&v81[0] + 1) = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v81, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v34 = v69;
  v35 = v72;
  View.border(_:corner:)(v29, v21, v31, v32, (char)v22, v72, OpaqueTypeConformance2, v30);
  v36 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v12, v35, v36);
  v37 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v38 = v68;
  v39 = *(_QWORD *)(v68 + v37[6]);
  v40 = v73;
  v41 = v75;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v15, v34, v75);
  v42 = &v15[*(int *)(v70 + 36)];
  *(_QWORD *)v42 = v39;
  *((_WORD *)v42 + 4) = 0;
  v43 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v34, v41);
  v44 = static Alignment.center.getter(v43);
  _FrameLayout.init(width:height:alignment:)(v81, 0, 1, 0x4048000000000000, 0, v44, v45);
  v46 = v71;
  sub_10004A160((uint64_t)v15, v71, &qword_1011B4410);
  v47 = (_OWORD *)(v46 + *(int *)(v77 + 36));
  v48 = v81[1];
  *v47 = v81[0];
  v47[1] = v48;
  v47[2] = v81[2];
  sub_10004FF60((uint64_t)v15, &qword_1011B4410);
  v49 = v76;
  v50 = sub_100065228(v46, v76, &qword_1011B4418);
  v51 = static HorizontalAlignment.leading.getter(v50);
  v52 = (uint64_t)v78;
  *v78 = v51;
  *(_QWORD *)(v52 + 8) = 0;
  *(_BYTE *)(v52 + 16) = 0;
  v53 = v52 + *(int *)(sub_100007E8C(&qword_1011B4430) + 44);
  v54 = (uint64_t *)(v38 + v37[7]);
  v56 = *v54;
  v55 = v54[1];
  v57 = (uint64_t *)(v38 + v37[8]);
  v58 = v57[1];
  v77 = *v57;
  v59 = *(uint64_t (**)(uint64_t))(v38 + v37[11]);
  swift_bridgeObjectRetain();
  v60 = swift_bridgeObjectRetain();
  LOBYTE(v37) = v59(v60);
  KeyPath = swift_getKeyPath(&unk_100EBB340);
  v62 = (uint64_t *)(v53 + *(int *)(type metadata accessor for MRNowPlayingQueueViewController.Cell.TextContent(0) + 28));
  *v62 = KeyPath;
  v63 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v62, v63, 0);
  *(_QWORD *)v53 = v56;
  *(_QWORD *)(v53 + 8) = v55;
  *(_QWORD *)(v53 + 16) = v77;
  *(_QWORD *)(v53 + 24) = v58;
  *(_BYTE *)(v53 + 32) = v37 & 1;
  sub_10004A160(v49, v46, &qword_1011B4418);
  v64 = v79;
  sub_10004A160(v52, v79, &qword_1011B43F8);
  v65 = v80;
  sub_10004A160(v46, v80, &qword_1011B4418);
  v66 = sub_100007E8C((uint64_t *)&unk_1011B4438);
  sub_10004A160(v64, v65 + *(int *)(v66 + 48), &qword_1011B43F8);
  sub_10004FF60(v52, &qword_1011B43F8);
  sub_10004FF60(v49, &qword_1011B4418);
  sub_10004FF60(v64, &qword_1011B43F8);
  return sub_10004FF60(v46, &qword_1011B4418);
}

uint64_t sub_100445444@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[48];

  v4 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v12 = a1 + *(int *)(v11 + 20);
  v13 = GeometryProxy.size.getter(v11);
  GeometryProxy.size.getter(v14);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v13, 0, v15, 0, *(_QWORD *)(a1 + *(int *)(v11 + 24)), 0, 2, (uint64_t)v18);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 10, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v4);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v12, (uint64_t)v10, (uint64_t)v18, (uint64_t)v7, a2);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10005B748((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder);
}

double sub_1004455C0@<D0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double result;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t KeyPath;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v2 = v1;
  v76 = a1;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v80 = *(_QWORD *)(v3 - 8);
  KeyPath = v3;
  __chkstk_darwin(v3);
  v79 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = v1[1];
  v84 = v5;
  v85 = v6;
  v7 = sub_100055B68();
  swift_bridgeObjectRetain();
  v78 = v7;
  v8 = Text.init<A>(_:)(&v84, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  LODWORD(v84) = static HierarchicalShapeStyle.primary.getter(v15);
  v16 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v84, (v2[4] & 1) == 0, v8, v10, v14, v12, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  sub_100055BAC(v8, v10, v14);
  swift_bridgeObjectRelease(v12);
  v24 = static Font.body.getter(v23);
  v25 = Text.font(_:)(v24, v16, v18, v22, v20);
  v82 = v26;
  v83 = v27;
  v29 = v28;
  swift_release();
  sub_100055BAC(v16, v18, v22);
  swift_bridgeObjectRelease(v20);
  type metadata accessor for MRNowPlayingQueueViewController.Cell.TextContent(0);
  v30 = v79;
  v31 = sub_1008237B8(v79);
  v32 = DynamicTypeSize.isAccessibilitySize.getter(v31);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v30, KeyPath);
  KeyPath = swift_getKeyPath(&unk_100EBB520);
  v33 = v2[3];
  if (v33)
  {
    v84 = v2[2];
    v85 = v33;
    swift_bridgeObjectRetain();
    v34 = Text.init<A>(_:)(&v84, &type metadata for String, v78);
    v36 = v35;
    v37 = v32;
    v39 = v38;
    v41 = v40 & 1;
    LODWORD(v84) = static HierarchicalShapeStyle.secondary.getter(v34);
    v42 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v84, (v2[4] & 1) == 0, v34, v36, v41, v39, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v43 = v29;
    v44 = v42;
    v75 = v25;
    v46 = v45;
    v48 = v47;
    v50 = v49 & 1;
    sub_100055BAC(v34, v36, v41);
    v51 = v39;
    v32 = v37;
    swift_bridgeObjectRelease(v51);
    v53 = static Font.subheadline.getter(v52);
    v54 = v48;
    v55 = Text.font(_:)(v53, v44, v46, v50, v48);
    v79 = v56;
    v80 = v55;
    LOBYTE(v36) = v57;
    v77 = 1;
    v78 = v58;
    swift_release();
    v59 = v36 & 1;
    v60 = v44;
    v29 = v43;
    v61 = v46;
    v25 = v75;
    sub_100055BAC(v60, v61, v50);
    swift_bridgeObjectRelease(v54);
    v62 = swift_getKeyPath(&unk_100EBB520);
  }
  else
  {
    v79 = 0;
    v80 = 0;
    v59 = 0;
    v77 = 0;
    v78 = 0;
    v62 = 0;
  }
  v63 = v29 & 1;
  v64 = 1;
  v65 = v76;
  v67 = v82;
  v66 = v83;
  *v76 = v25;
  v65[1] = v67;
  if ((v32 & 1) != 0)
    v64 = 2;
  *((_BYTE *)v65 + 16) = v63;
  LODWORD(v75) = v63;
  v69 = v80;
  v68 = KeyPath;
  v65[3] = v66;
  v65[4] = v68;
  v65[5] = v64;
  *((_BYTE *)v65 + 48) = 0;
  v71 = v78;
  v70 = v79;
  v65[7] = v69;
  v65[8] = v70;
  v65[9] = v59;
  v65[10] = v71;
  v72 = v77;
  v65[11] = v62;
  v65[12] = v72;
  *((_BYTE *)v65 + 104) = 0;
  sub_100055BBC(v25, v67, v63);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1003DFEAC(v69, v70, v59, v71);
  sub_1003DFEE8(v69, v70, v59, v71);
  sub_100055BAC(v25, v67, v75);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v66).n128_u64[0];
  return result;
}

uint64_t sub_100445978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v14;

  v3 = sub_100007E8C(&qword_1011B43E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v6);
  *((_QWORD *)v5 + 1) = 0x4024000000000000;
  v5[16] = 0;
  v7 = sub_100007E8C(&qword_1011B43E8);
  sub_100444ED0(v1, (uint64_t)&v5[*(int *)(v7 + 44)]);
  v8 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v9 = (*(uint64_t (**)(void))(v1 + *(int *)(v8 + 44)))();
  KeyPath = swift_getKeyPath(&unk_100EBB478);
  v11 = swift_allocObject(&unk_1010C5F40, 17, 7);
  *(_BYTE *)(v11 + 16) = v9 & 1;
  sub_10004A160((uint64_t)v5, a1, &qword_1011B43E0);
  v12 = (uint64_t *)(a1 + *(int *)(sub_100007E8C(&qword_1011B43F0) + 36));
  *v12 = KeyPath;
  v12[1] = (uint64_t)sub_100447DFC;
  v12[2] = v11;
  return sub_10004FF60((uint64_t)v5, &qword_1011B43E0);
}

void sub_100445A9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;

  v3 = sub_100007E8C((uint64_t *)&unk_1011B42C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
  if (v6)
  {
    v7 = v6;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    v8 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) == 1)
    {
      sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011B42C0);
    }
    else
    {
      v9 = *(void (**)(uint64_t))&v5[*(int *)(v8 + 44)];
      swift_retain();
      v10 = sub_10005B748((uint64_t)v5, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
      v9(v10);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100445BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  double v27;
  id v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011B41B0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011B42C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_dataSource);
  if (!v12)
    goto LABEL_18;
  v13 = v12;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

  v14 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011B42C0);
  }
  else
  {
    v15 = *(void (**)(uint64_t))&v10[*(int *)(v14 + 48)];
    swift_retain();
    v16 = sub_10005B748((uint64_t)v10, type metadata accessor for NowPlayingQueueSectionViewModel.Item);
    v15(v16);
    swift_release();
  }
  v17 = *(void **)(v2 + v11);
  if (!v17)
    goto LABEL_19;
  v18 = v17;
  v19 = IndexPath.section.getter(v18);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v19, v20, v21);
  v22 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v19 >= *(_QWORD *)(v22 + 16))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  v23 = *(unsigned __int8 *)(v22 + v19 + 32);

  swift_bridgeObjectRelease(v22);
  if (v23)
  {
    if (v23 == 1)
    {
      v24 = 0xE600000000000000;
      v25 = 0x7478654E7075;
    }
    else
    {
      v24 = 0xE800000000000000;
      v25 = 0x79616C506F747561;
    }
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v24, 0x79726F74736968, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v24);
    if ((v26 & 1) == 0)
    {
      v27 = *(double *)(v2 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_upNextSectionMinY);
      v28 = sub_10043BB18();
      objc_msgSend(v28, "setContentOffset:animated:", 0, 0.0, v27);

      *(_BYTE *)(v2 + OBJC_IVAR____TtC5Music31MRNowPlayingQueueViewController_currentSection) = 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
}

uint64_t sub_100445E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100445E54()
{
  uint64_t v0;

  sub_100441124(v0);
}

void sub_100445E5C(uint64_t a1)
{
  uint64_t v1;

  sub_100441448(a1, v1);
}

uint64_t sub_100445E64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    sub_100445F28(a2, a3, a4, a5);
    sub_100445F60(a6, a7, a8);
    sub_100445F60(a9, a10, a11);
    return sub_100445F60(a12, a13, a14);
  }
  return result;
}

uint64_t sub_100445F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_100048AAC(a3, a4);
  }
  return result;
}

uint64_t sub_100445F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2 != 1)
    return sub_100048AAC(a2, a3);
  return result;
}

uint64_t sub_100445F78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    sub_10044603C(a2, a3, a4, a5);
    sub_100446074(a6, a7, a8);
    sub_100446074(a9, a10, a11);
    return sub_100446074(a12, a13, a14);
  }
  return result;
}

uint64_t sub_10044603C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return sub_10004BA30(a3, a4);
  }
  return result;
}

uint64_t sub_100446074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2 != 1)
    return sub_10004BA30(a2, a3);
  return result;
}

char *sub_10044608C(uint64_t a1)
{
  uint64_t v1;

  return sub_10043F0CC(a1, v1);
}

uint64_t sub_100446094()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v20 = *(_QWORD *)(v5 + 64);
  swift_release();
  v7 = v0 + v3;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 8));
  v8 = v0 + v3 + v1[5];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v19 = v4;
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    v18 = v11;
    v14 = v11;
    v4 = v19;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12))
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v18, v12);
  }
  v15 = (v3 + v21 + v6) & ~v6;
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  v16 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v5 + 8))(v0 + v15, v4, v16);
  return swift_deallocObject(v0, v15 + v20);
}

void sub_10044625C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(type metadata accessor for NowPlayingQueueSectionViewModel.Item(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_10043F5FC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (void *)(v4 + v10), v4 + ((v10 + v11 + v12) & ~v12));
}

uint64_t sub_1004462F0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  v5 = v0 + v3;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 8));
  v6 = v0 + v3 + v1[5];
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = v6 + *(int *)(v7 + 20);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v1[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v1[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10044645C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingQueueSectionViewModel.Item(0) - 8) + 80);
  return sub_10043FAC4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10044648C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  v5 = (v3 + 49) & ~v3;
  v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v3 | 7);
}

uint64_t sub_100446528()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_10043FCCC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), v0 + v2, *v3, v3[1]);
}

uint64_t sub_10044657C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_release(a4);
    return swift_release(a6);
  }
  return result;
}

uint64_t sub_1004465B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004465DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B41B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100446624()
{
  unint64_t result;

  result = qword_1011B4308;
  if (!qword_1011B4308)
  {
    result = swift_getWitnessTable(&unk_100EAAF18, &type metadata for NowPlayingQueueSectionViewModel.SectionType);
    atomic_store(result, (unint64_t *)&qword_1011B4308);
  }
  return result;
}

double sub_100446668()
{
  uint64_t v0;

  return sub_10043DC14(*(char **)(v0 + 16));
}

uint64_t sub_100446670()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100446680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011B41B0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  v5 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  swift_release();
  return swift_deallocObject(v0, v4 + 16);
}

void sub_100446728()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011B41B0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_10043DE90(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, *v3, v3[1]);
}

uint64_t sub_10044677C(__n128 a1)
{
  uint64_t v1;

  return sub_10043E4E0(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_10044678C()
{
  uint64_t v0;

  return sub_10043DE2C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100446794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10043C95C(a1, a2, a3, v3);
}

uint64_t sub_10044679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10043C9D8(a1, a2, a3, a4, v4);
}

char *sub_1004467A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10043CB5C(a1, a2, a3, v3);
}

uint64_t sub_1004467AC(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10043BD44(a1, a2, v2);
}

uint64_t sub_1004467B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10043BF4C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for MRNowPlayingQueueViewController.Cell(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B4398, (uint64_t)&nominal type descriptor for MRNowPlayingQueueViewController.Cell);
}

void sub_1004467D8()
{
  sub_10043D380(0, 0, 0, 2);
}

id sub_100446808@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_100446838(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void sub_10044684C()
{
  uint64_t v0;

  sub_10043C690(v0);
}

uint64_t *sub_100446854(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
    v9 = v8[5];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for ArtworkImage.ViewModel(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, v11, v17);
      v18 = *(int *)(v12 + 20);
      __dst = &v10[v18];
      v19 = &v11[v18];
      v20 = type metadata accessor for Artwork.CropStyle(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)v4 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    v23 = v8[7];
    v24 = (uint64_t *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v8[8];
    v28 = (uint64_t *)((char *)v4 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v8[9];
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v8[10];
    v36 = (uint64_t *)((char *)v4 + v35);
    v37 = (uint64_t *)((char *)a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = v8[11];
    v40 = (uint64_t *)((char *)v4 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = v8[12];
    v44 = (uint64_t *)((char *)v4 + v43);
    v45 = (uint64_t *)((char *)a2 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(int *)(a3 + 20);
    v48 = (uint64_t *)((char *)v4 + v47);
    v49 = (uint64_t *)((char *)a2 + v47);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v50 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
      v52 = v48;
      v53 = v50;
      v54 = 1;
    }
    else
    {
      *v48 = *v49;
      swift_retain();
      v52 = v48;
      v53 = v50;
      v54 = 0;
    }
    swift_storeEnumTagMultiPayload(v52, v53, v54);
  }
  return v4;
}

double sub_100446B30(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v5 = a1 + v4[5];
  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
    v8 = v5 + *(int *)(v6 + 20);
    v9 = type metadata accessor for Artwork.CropStyle(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v11 = a1 + *(int *)(a2 + 20);
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_100446CB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v53 = a3;
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    v16 = *(int *)(v11 + 20);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    a3 = v53;
  }
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  v22 = v7[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v7[8];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = v7[9];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v7[10];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = v7[11];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v7[12];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = *(int *)(a3 + 20);
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v49 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
  {
    v50 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v47, v48, v50);
    v51 = 1;
  }
  else
  {
    *v47 = *v48;
    swift_retain();
    v51 = 0;
  }
  swift_storeEnumTagMultiPayload(v47, v49, v51);
  return a1;
}

_QWORD *sub_100446F64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10005B748((uint64_t)v9, type metadata accessor for ArtworkImage.ViewModel);
      goto LABEL_7;
    }
    v24 = a3;
    v25 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v9, v10, v25);
    v26 = *(int *)(v11 + 20);
    v27 = &v9[v26];
    v28 = &v10[v26];
    v29 = type metadata accessor for Artwork.CropStyle(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
    v32 = v31(v27, 1, v29);
    v33 = v31(v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_16:
        a3 = v24;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    }
    v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_16;
  }
  if (v15)
  {
LABEL_7:
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  v66 = a3;
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
  v17 = *(int *)(v11 + 20);
  v18 = &v9[v17];
  v19 = &v10[v17];
  v20 = type metadata accessor for Artwork.CropStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  a3 = v66;
LABEL_17:
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  v35 = v7[7];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  *v36 = *v37;
  v38 = v36[1];
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v38);
  v39 = v7[8];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  *v40 = *v41;
  v42 = v40[1];
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v42);
  v43 = v7[9];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)a2 + v43);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  swift_retain();
  swift_release();
  v47 = v7[10];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  swift_retain();
  swift_release();
  v51 = v7[11];
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  swift_retain();
  swift_release();
  v55 = v7[12];
  v56 = (_QWORD *)((char *)a1 + v55);
  v57 = (_QWORD *)((char *)a2 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v59 = *(int *)(a3 + 20);
    v60 = (_QWORD *)((char *)a1 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    sub_10004FF60((uint64_t)a1 + v59, (uint64_t *)&unk_1011ACE40);
    v62 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v61, v62) == 1)
    {
      v63 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v60, v61, v63);
      v64 = 1;
    }
    else
    {
      *v60 = *v61;
      swift_retain();
      v64 = 0;
    }
    swift_storeEnumTagMultiPayload(v60, v62, v64);
  }
  return a1;
}

_OWORD *sub_10044739C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ArtworkImage.ViewModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v26 = a3;
    v13 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    v14 = *(int *)(v10 + 20);
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = type metadata accessor for Artwork.CropStyle(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    a3 = v26;
  }
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
  *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload(v21, v23, 1);
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1004475E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v9 = v8[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v54 = a3;
      v17 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
      v18 = *(int *)(v12 + 20);
      v19 = &v10[v18];
      v20 = &v11[v18];
      v21 = type metadata accessor for Artwork.CropStyle(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      a3 = v54;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    sub_10005B748((uint64_t)v10, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v24 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_17;
  }
  v25 = a3;
  v26 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v10, v11, v26);
  v27 = *(int *)(v12 + 20);
  v28 = &v10[v27];
  v29 = &v11[v27];
  v30 = type metadata accessor for Artwork.CropStyle(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_15;
  }
  if (v34)
  {
LABEL_15:
    v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_16:
  a3 = v25;
LABEL_17:
  *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
  v36 = v8[7];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  v41 = v37[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease(v41);
  v42 = v8[8];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  v47 = v43[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease(v47);
  *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
  swift_release();
  *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
  swift_release();
  *(_OWORD *)((char *)a1 + v8[11]) = *(_OWORD *)((char *)a2 + v8[11]);
  swift_release();
  *(_OWORD *)((char *)a1 + v8[12]) = *(_OWORD *)((char *)a2 + v8[12]);
  swift_release();
  if (a1 != a2)
  {
    v48 = *(int *)(a3 + 20);
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_10004FF60((uint64_t)a1 + v48, (uint64_t *)&unk_1011ACE40);
    v51 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
    {
      v52 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v49, v50, v52);
      swift_storeEnumTagMultiPayload(v49, v51, 1);
    }
    else
    {
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004479C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004479D0);
}

uint64_t sub_1004479D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100447A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100447A54);
}

uint64_t sub_100447A54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011C6890);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100447AD4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for NowPlayingQueueSectionViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000559DC(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_100447B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for NowPlayingController.QueueInfo.Repeat(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v8;
      swift_retain(v8);
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

uint64_t assignWithTake for NowPlayingController.QueueInfo.Repeat(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v8;
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for MRNowPlayingQueueViewController.UpdateContext.Update()
{
  return &type metadata for MRNowPlayingQueueViewController.UpdateContext.Update;
}

uint64_t storeEnumTagSinglePayload for MRNowPlayingQueueViewController.UpdateContext.UpdateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100447D0C + 4 * byte_100EBB215[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100447D40 + 4 * byte_100EBB210[v4]))();
}

uint64_t sub_100447D40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100447D48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100447D50);
  return result;
}

uint64_t sub_100447D5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100447D64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100447D68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100447D70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MRNowPlayingQueueViewController.UpdateContext.UpdateType()
{
  return &type metadata for MRNowPlayingQueueViewController.UpdateContext.UpdateType;
}

unint64_t sub_100447D90()
{
  unint64_t result;

  result = qword_1011B43D8;
  if (!qword_1011B43D8)
  {
    result = swift_getWitnessTable(&unk_100EBB400, &type metadata for MRNowPlayingQueueViewController.UpdateContext.UpdateType);
    atomic_store(result, (unint64_t *)&qword_1011B43D8);
  }
  return result;
}

uint64_t sub_100447DD4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA0B94, 1);
}

uint64_t sub_100447DEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_100447DFC(_BYTE *a1)
{
  uint64_t v1;

  return sub_1006F4F0C(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_100447E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for MRNowPlayingQueueViewController.Cell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 8));
  v6 = (int *)type metadata accessor for NowPlayingQueueSectionViewModel.Item(0);
  v7 = v0 + v3 + v6[5];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v13 = v5 + *(int *)(v1 + 20);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100447FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MRNowPlayingQueueViewController.Cell(0) - 8) + 80);
  return sub_100445444(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t type metadata accessor for MRNowPlayingQueueViewController.Cell.TextContent(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B44A0, (uint64_t)&nominal type descriptor for MRNowPlayingQueueViewController.Cell.TextContent);
}

uint64_t sub_10044801C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_100448110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100448190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t sub_100448250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

uint64_t sub_100448354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100448404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 28);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_10004FF60(a1 + v10, (uint64_t *)&unk_1011ACE40);
    v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004484EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004484F8);
}

uint64_t sub_1004484F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_100448578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100448584);
}

uint64_t sub_100448584(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1004485FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EBB4B8;
  v4[1] = &unk_100EBB2D8;
  v4[2] = &unk_100EBB270;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

unint64_t sub_100448688()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B44E0;
  if (!qword_1011B44E0)
  {
    v1 = sub_100044B54(&qword_1011B43F0);
    sub_100049F28(&qword_1011B44E8, &qword_1011B43E0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B44E0);
  }
  return result;
}

uint64_t sub_100448724(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA0BBC, 1);
}

uint64_t sub_10044873C()
{
  return sub_100049F28(&qword_1011B4508, (uint64_t *)&unk_1011B4510, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_1004487E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[72];

  v38 = a4;
  v39 = a5;
  v40 = a3;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v7);
  v37 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v33 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v32 - v14;
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v32 - v16;
  v17 = *(void (**)(void))(v10 + 16);
  v17();
  ((void (*)(char *, uint64_t, uint64_t))v17)(v15, a1, v9);
  v18 = *(unsigned __int8 *)(v10 + 80);
  v35 = v10;
  v19 = (v18 + 24) & ~v18;
  v20 = v18 | 7;
  v21 = swift_allocObject(&unk_1010C6048, v19 + v11, v18 | 7);
  v34 = v21;
  *(_QWORD *)(v21 + 16) = a2;
  v22 = v21 + v19;
  v23 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v23(v22, v15, v9);
  v24 = v33;
  ((void (*)(char *, uint64_t, uint64_t))v17)(v33, a1, v9);
  sub_100064AC8(v40, (uint64_t)v41);
  v25 = (v18 + 16) & ~v18;
  v26 = (v11 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject(&unk_1010C6070, v27 + 72, v20);
  v23(v28 + v25, v24, v9);
  *(_QWORD *)(v28 + v26) = a2;
  sub_100064EF0((uint64_t)v41, v28 + v27);
  v30 = v37;
  v29 = v38;
  sub_10004A160(v38, v37, (uint64_t *)&unk_1011A9990);
  swift_retain(a2);
  Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)(v36, (uint64_t)sub_10044B4BC, v34, (uint64_t)sub_10044B734, v28, v30, v39);
  sub_10004FF60(v29, (uint64_t *)&unk_1011A9990);
  sub_100064B4C(v40);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(a1, v9);
}

uint64_t sub_100448A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint8_t *, uint64_t);
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint8_t *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v60;
  char *v61;
  uint64_t (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint8_t *v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint8_t *v77;
  void (*v78)(uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  int v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSString v98;
  NSString v99;
  id v100;
  uint64_t v101;
  NSString v102;
  id v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSString v112;
  NSString v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSString v130;
  NSString v131;
  uint64_t v132;
  NSString v133;
  id v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD v144[2];
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint8_t *v155;
  void (*v156)(char *, uint8_t *, uint64_t);
  void (*v157)(uint64_t, uint64_t, uint64_t);
  _QWORD *v158;
  uint64_t v159;
  char v160[8];
  uint64_t v161;
  uint64_t v162;
  char v163[16];
  _QWORD v164[5];
  char v165;
  unint64_t v166;
  uint64_t v167;
  unsigned __int8 v168;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011B45F0);
  __chkstk_darwin(v4);
  v158 = (_QWORD *)((char *)v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for MusicCollaborativePlaylist.Error(0);
  v154 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v148 = (char *)v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v159 = (uint64_t)v144 - v9;
  __chkstk_darwin(v10);
  v153 = (char *)v144 - v11;
  v12 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v12);
  v147 = (char *)v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v149 = (char *)v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Logger(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v157 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v151 = (char *)v144 - v23;
  __chkstk_darwin(v24);
  v152 = (char *)v144 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)v144 - v27;
  v29 = Logger.collaboration.unsafeMutableAddressor();
  v30 = *(void (**)(char *, uint8_t *, uint64_t))(v20 + 16);
  v155 = (uint8_t *)v29;
  v156 = v30;
  ((void (*)(char *))v30)(v28);
  swift_errorRetain(a1);
  v31 = swift_errorRetain(a1);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  v34 = os_log_type_enabled(v32, v33);
  v150 = v16;
  if (v34)
  {
    v35 = swift_slowAlloc(12, -1);
    v146 = v1;
    v36 = (uint8_t *)v35;
    v37 = swift_slowAlloc(32, -1);
    v166 = v37;
    v145 = v6;
    *(_DWORD *)v36 = 136446210;
    v144[1] = v36 + 4;
    swift_getErrorValue(a1, v163, v160);
    v38 = Error.localizedDescription.getter(v161, v162);
    v40 = v39;
    v164[0] = sub_100322200(v38, v39, (uint64_t *)&v166);
    v6 = v145;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v164, &v164[1]);
    swift_bridgeObjectRelease(v40);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Handling error=%{public}s", v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    v41 = v36;
    v2 = v146;
    swift_slowDealloc(v41, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v42 = *(void (**)(char *, uint64_t))(v20 + 8);
  v42(v28, v19);
  v43 = v159;
  v44 = (uint64_t)v158;
  v164[0] = a1;
  swift_errorRetain(a1);
  v45 = sub_100007E8C(&qword_1011A14B0);
  if (swift_dynamicCast(&v166, v164, v45, &type metadata for Collaboration.Error, 6))
  {
    v47 = v167;
    v46 = v166;
    if (!v168)
      return sub_10044BB60(v166, v167, v168);
    if (v168 != 1)
    {
      if (v168 == 3 && v166 <= 9)
        __asm { BR              X10 }
      return sub_10044BB60(v166, v167, v168);
    }
    swift_errorRetain(v166);
    swift_errorRetain(v46);
    v57 = swift_dynamicCast(v44, &v166, v45, v6, 6);
    v58 = v154;
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
    if ((v57 & 1) != 0)
    {
      v158 = (_QWORD *)v46;
      v59(v44, 0, 1, v6);
      v60 = v153;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v153, v44, v6);
      v61 = v152;
      v156(v152, v155, v19);
      v62 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v58 + 16);
      v63 = v62(v43, v60, v6);
      v64 = v43;
      v65 = Logger.logObject.getter(v63);
      v66 = static os_log_type_t.error.getter(v65);
      v67 = os_log_type_enabled(v65, v66);
      v159 = v47;
      if (v67)
      {
        v157 = (void (*)(uint64_t, uint64_t, uint64_t))v62;
        v68 = (uint8_t *)swift_slowAlloc(12, -1);
        v69 = (uint64_t *)swift_slowAlloc(8, -1);
        v156 = (void (*)(char *, uint8_t *, uint64_t))v19;
        *(_DWORD *)v68 = 138543362;
        v155 = v68 + 4;
        v70 = sub_10044BB88();
        v71 = v2;
        v72 = swift_allocError(v6, v70, 0, 0);
        v157(v73, v64, v6);
        v74 = _swift_stdlib_bridgeErrorToNSError(v72);
        v166 = v74;
        v19 = (uint64_t)v156;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167);
        *v69 = v74;
        v2 = v71;
        v75 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
        v75(v64, v6);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "Getting MusicKit error=%{public}@", v68, 0xCu);
        v76 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
        swift_arrayDestroy(v69, 1, v76);
        swift_slowDealloc(v69, -1, -1);
        v77 = v68;
        v78 = v75;
        v62 = (uint64_t (*)(uint64_t, char *, uint64_t))v157;
        v61 = v152;
        swift_slowDealloc(v77, -1, -1);
      }
      else
      {
        v78 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
        v78(v64, v6);
      }
      v87 = v148;

      v42(v61, v19);
      v62((uint64_t)v87, v153, v6);
      v88 = (*(uint64_t (**)(char *, uint64_t))(v154 + 88))(v87, v6);
      if (v88 == enum case for MusicCollaborativePlaylist.Error.expiredLink(_:))
      {
        v89 = v6;
        v90 = v149;
        v91 = String.LocalizationValue.init(stringLiteral:)(0x707845206B6E694CLL, 0xEC00000064657269);
        v92 = v150;
        static Locale.current.getter(v91);
        String.init(localized:table:bundle:locale:comment:)(v90, 0, 0, 0, v92, "Alert tile", 10, 2);
        v94 = v93;
        v95 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000052, 0x8000000100E39FB0);
        static Locale.current.getter(v95);
        String.init(localized:table:bundle:locale:comment:)(v90, 0, 0, 0, v92, "Alert message", 13, 2);
        v97 = v96;
        v98 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v94);
        v99 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v97);
        v100 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v98, v99, 1);

        v101 = String.okButtonTitle.unsafeMutableAddressor()[1];
        swift_bridgeObjectRetain();
        v102 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v101);
        v103 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v102, 1, 0);
LABEL_27:
        v115 = v103;

        objc_msgSend(v100, "addAction:", v115);
        v116 = *(_QWORD *)(v2 + 16);
        if (v116)
        {
          v117 = *(_QWORD *)(v116 + 32);
          v118 = v117 >> 62;
          v119 = (uint64_t)v158;
          if (v117 >> 62 == 2)
            goto LABEL_30;
          goto LABEL_29;
        }
        v119 = (uint64_t)v158;
        goto LABEL_32;
      }
      if (v88 == enum case for MusicCollaborativePlaylist.Error.maximumCollaboratorsReached(_:))
      {
        v89 = v6;
        v104 = v149;
        v105 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E39F40);
        v106 = v150;
        static Locale.current.getter(v105);
        String.init(localized:table:bundle:locale:comment:)(v104, 0, 0, 0, v106, "Alert tile", 10, 2);
        v108 = v107;
        v109 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E39F60);
        static Locale.current.getter(v109);
        String.init(localized:table:bundle:locale:comment:)(v104, 0, 0, 0, v106, "Alert message", 13, 2);
        v111 = v110;
        v112 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v108);
        v113 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v111);
        v100 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v112, v113, 1);

        v114 = String.okButtonTitle.unsafeMutableAddressor()[1];
        swift_bridgeObjectRetain();
        v102 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v114);
        v103 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v102, 1, 0);
        goto LABEL_27;
      }
      if (v88 == enum case for MusicCollaborativePlaylist.Error.maximumPendingCollaboratorsReached(_:))
      {
        v89 = v6;
        v122 = v149;
        v123 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100E39ED0);
        v124 = v150;
        static Locale.current.getter(v123);
        String.init(localized:table:bundle:locale:comment:)(v122, 0, 0, 0, v124, "Alert tile", 10, 2);
        v126 = v125;
        v127 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x8000000100E39F00);
        static Locale.current.getter(v127);
        String.init(localized:table:bundle:locale:comment:)(v122, 0, 0, 0, v124, "Alert message", 13, 2);
        v129 = v128;
        v130 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v126);
        v131 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v129);
        v100 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v130, v131, 1);

        v132 = String.okButtonTitle.unsafeMutableAddressor()[1];
        swift_bridgeObjectRetain();
        v133 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v132);
        v134 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v133, 1, 0);

        objc_msgSend(v100, "addAction:", v134);
        v135 = *(_QWORD *)(v2 + 16);
        v119 = (uint64_t)v158;
        if (v135)
        {
          v117 = *(_QWORD *)(v135 + 32);
          v118 = v117 >> 62;
          if (v117 >> 62 == 2)
            goto LABEL_30;
LABEL_29:
          if ((_DWORD)v118 != 1)
          {
            v120 = (void *)(v117 & 0x3FFFFFFFFFFFFFFFLL);
            goto LABEL_38;
          }
LABEL_30:
          v120 = (void *)(v117 & 0x3FFFFFFFFFFFFFFFLL);
          v117 &= 0x3FFFFFFFFFFFFFFFuLL;
LABEL_38:
          memset(v164, 0, sizeof(v164));
          v165 = -1;
          v136 = v120;
          PresentationSource.init(viewController:position:)((void *)v117, (uint64_t)v164, (uint64_t)&v166);
          PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v100, 1, (id)0xF, (void **)1, 0, 0);

          v137 = v159;
          sub_10044BB60(v119, v159, 1u);
          sub_10044BB60(v119, v137, 1u);
          v78((uint64_t)v153, v89);
          return sub_100064B4C((uint64_t)&v166);
        }
LABEL_32:
        v121 = v159;
        sub_10044BB60(v119, v159, 1u);

        sub_10044BB60(v119, v121, 1u);
        return ((uint64_t (*)(char *, uint64_t))v78)(v153, v89);
      }
      v138 = (uint64_t)v158;
      if (v88 == enum case for MusicCollaborativePlaylist.Error.underageUser(_:))
      {
        v139 = sub_10044BB1C();
        v140 = swift_allocError(&type metadata for Collaboration.Error, v139, 0, 0);
        *(_QWORD *)v141 = 0;
        *(_QWORD *)(v141 + 8) = 0;
        *(_BYTE *)(v141 + 16) = 3;
        sub_100448A34();
        v142 = v159;
        sub_10044BB60(v138, v159, 1u);
        sub_10044BB60(v138, v142, 1u);
        v78((uint64_t)v153, v6);
        return swift_errorRelease(v140);
      }
      else
      {
        sub_10044A228();
        v143 = v159;
        sub_10044BB60(v138, v159, 1u);
        sub_10044BB60(v138, v143, 1u);
        v78((uint64_t)v153, v6);
        return ((uint64_t (*)(char *, uint64_t))v78)(v87, v6);
      }
    }
    else
    {
      v59(v44, 1, 1, v6);
      sub_10004FF60(v44, &qword_1011B45F0);
      v79 = v151;
      v156(v151, v155, v19);
      swift_errorRetain(v46);
      v80 = swift_errorRetain(v46);
      v81 = Logger.logObject.getter(v80);
      v82 = static os_log_type_t.error.getter(v81);
      if (os_log_type_enabled(v81, v82))
      {
        v159 = v47;
        v83 = (uint8_t *)swift_slowAlloc(12, -1);
        v158 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v83 = 138543362;
        swift_errorRetain(v46);
        v84 = _swift_stdlib_bridgeErrorToNSError(v46);
        v166 = v84;
        v47 = v159;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167);
        v85 = v158;
        *v158 = v84;
        v79 = v151;
        sub_10044BB60(v46, v47, 1u);
        sub_10044BB60(v46, v47, 1u);
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "Not handled MusicKit error=%{public}@", v83, 0xCu);
        v86 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
        swift_arrayDestroy(v85, 1, v86);
        swift_slowDealloc(v85, -1, -1);
        swift_slowDealloc(v83, -1, -1);
      }
      else
      {
        sub_10044BB60(v46, v47, 1u);
        sub_10044BB60(v46, v47, 1u);
      }

      v42(v79, v19);
      sub_10044A228();
      sub_10044BB60(v46, v47, 1u);
      return sub_10044BB60(v46, v47, 1u);
    }
  }
  else
  {
    v48 = v157;
    v156((char *)v157, v155, v19);
    swift_errorRetain(a1);
    v49 = swift_errorRetain(a1);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.error.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v52 = 138543362;
      swift_errorRetain(a1);
      v54 = _swift_stdlib_bridgeErrorToNSError(a1);
      v166 = v54;
      v48 = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167);
      *v53 = v54;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Not handled error=%{public}@", v52, 0xCu);
      v55 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v53, 1, v55);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    return ((uint64_t (*)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t))v42)(v48, v19);
  }
}

uint64_t sub_10044A100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  __n128 v6;
  _QWORD *v7;

  v4[2] = a1;
  v4[3] = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v6);
  v7 = (_QWORD *)swift_task_alloc(dword_1011D729C);
  v4[5] = v7;
  *v7 = v4;
  v7[1] = sub_10044A174;
  return static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:)(3, a4, 0);
}

uint64_t sub_10044A174(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10044A1EC, v4, v5);
}

uint64_t sub_10044A1EC()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_BYTE **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10044A228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  _BYTE v23[80];
  _OWORD v24[2];
  uint64_t v25;
  char v26;

  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x8000000100E3A0B0);
  static Locale.current.getter(v7);
  String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, "Alert tile", 10, 2);
  v9 = v8;
  v10 = String.LocalizationValue.init(stringLiteral:)(0x100000000000004BLL, 0x8000000100E3A0D0);
  static Locale.current.getter(v10);
  String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, "Alert message", 13, 2);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v13, v14, 1);

  v16 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v17, 1, 0);

  objc_msgSend(v15, "addAction:", v18);
  v19 = *(_QWORD *)(v0 + 16);
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + 32);
    if (v20 >> 62 == 2 || v20 >> 62 == 1)
    {
      v21 = (void *)(v20 & 0x3FFFFFFFFFFFFFFFLL);
      v20 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v21 = (void *)(v20 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v25 = 0;
    memset(v24, 0, sizeof(v24));
    v26 = -1;
    v22 = v21;
    PresentationSource.init(viewController:position:)((void *)v20, (uint64_t)v24, (uint64_t)v23);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v15, 1, (id)0xF, (void **)1, 0, 0);

    sub_100064B4C((uint64_t)v23);
  }
  else
  {

  }
}

uint64_t sub_10044A4D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t _s11CoordinatorCMa_0()
{
  return objc_opt_self(_TtCE5MusicO9MusicCore13Collaboration11Coordinator);
}

uint64_t sub_10044A51C(uint64_t a1)
{
  return sub_100448A34(a1);
}

uint64_t sub_10044A53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  __n128 v45;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[11];

  v66 = a2;
  v4 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v4);
  v63 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin(v60);
  v61 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Collaboration.Flow.View(0);
  __chkstk_darwin(v7);
  v62 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v65 = (char *)&v60 - v10;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v67 = v11;
  v68 = v12;
  __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  v64 = (char *)&v60 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v60 - v16;
  v18 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Playlist(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v60 - v26;
  if ((Collaboration.Object.hasActiveCollaboration.getter() & 1) == 0)
  {
LABEL_4:
    Collaboration.Manager.canCollaborate(for:)();
    v28 = v2;
    v29 = Collaboration.Manager.participantProfile.getter();
    v30 = v67;
    v31 = v68;
    if (v29)
    {
      v32 = v29;
      v33 = objc_msgSend(v29, "collaborationAllowed");

      v34 = v33 ^ 1;
    }
    else
    {
      v34 = 1;
    }
    v48 = v64;
    v47 = v65;
    v49 = (uint64_t)v61;
    swift_storeEnumTagMultiPayload(v61, v60, 2);
    v50 = v63;
    sub_10005B704(a1, v63, type metadata accessor for Collaboration.Object);
    sub_100064AC8(v66, (uint64_t)v69);
    v51 = swift_allocObject(&unk_1010C60C0, 96, 7);
    *(_QWORD *)(v51 + 16) = v28;
    sub_100064EF0((uint64_t)v69, v51 + 24);
    swift_retain_n(v28, 2);
    Collaboration.Flow.View.init(_:object:manager:showProfileCreation:profileUpdateHandler:completion:)(v49, v50, v28, v34, (uint64_t)&unk_1011B45D0, 0, (uint64_t)sub_10044BA84, v51, v47);
    v52 = v62;
    sub_10005B704((uint64_t)v47, v62, type metadata accessor for Collaboration.Flow.View);
    v53 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011B45D8));
    v54 = (void *)Card.ViewController.init(content:)(v52);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v54, 0, (id)0xF, (void **)1, 0, 0);
    v55 = Logger.collaboration.unsafeMutableAddressor();
    v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 16))(v48, v55, v30);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter(v57);
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Initialization sheet presented", v59, 2u);
      swift_slowDealloc(v59, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v48, v30);
    return sub_10005B748((uint64_t)v47, type metadata accessor for Collaboration.Flow.View);
  }
  Collaboration.Object.musicItem.getter((uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10004FF60((uint64_t)v20, &qword_1011A30F0);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v20, v21);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v27, v21);
  v35 = type metadata accessor for Collaboration.Management.Model(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  swift_retain();
  Collaboration.Management.Model.init(manager:playlist:)(v36, (uint64_t)v24);
  v37 = objc_allocWithZone((Class)type metadata accessor for Collaboration.Management.ViewController(0));
  swift_retain();
  v38 = (void *)Collaboration.Management.ViewController.init(model:)();
  objc_msgSend(v38, "setModalPresentationStyle:", 2);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v38, 0, (id)0xF, (void **)1, 0, 0);
  v39 = Logger.collaboration.unsafeMutableAddressor();
  v40 = v67;
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 16))(v17, v39, v67);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.default.getter(v42);
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Management view presented", v44, 2u);
    swift_slowDealloc(v44, -1, -1);
  }

  v45 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v17, v40, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v27, v21);
}

uint64_t sub_10044AC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v42 = a3;
  v4 = type metadata accessor for Logger(0);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  __chkstk_darwin(v4);
  v43 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for URL(0);
  v49 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Collaboration.Object(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v48 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011B45E0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  v19 = sub_100007E8C(&qword_1011D0E90);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(a1, (uint64_t)v21, &qword_1011D0E90);
  if (swift_getEnumCaseMultiPayload(v21, v19) == 1)
  {
    v22 = *v21;
    Collaboration.Manager.handleError(_:)(*v21);
    return swift_errorRelease(v22);
  }
  else
  {
    sub_10044BA90((uint64_t)v21, (uint64_t)v18);
    sub_10004A160((uint64_t)v18, (uint64_t)v15, &qword_1011B45E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10) == 1)
    {
      sub_10004FF60((uint64_t)v18, &qword_1011B45E0);
      v24 = (uint64_t)v15;
      v25 = &qword_1011B45E0;
    }
    else
    {
      v26 = v48;
      sub_10044BAD8((uint64_t)v15, v48);
      Collaboration.Object.collaborationURL.getter((uint64_t)v8);
      v27 = v49;
      v28 = v47;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v8, 1, v47) == 1)
      {
        sub_10005B748(v26, type metadata accessor for Collaboration.Object);
        sub_10004FF60((uint64_t)v18, &qword_1011B45E0);
        v25 = &qword_10119E460;
        v24 = (uint64_t)v8;
      }
      else
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
        v30 = (uint64_t)v46;
        v29(v46, v8, v28);
        v31 = (void *)Collaboration.Manager.activityViewController(for:url:)(v26, v30);
        v32 = v31;
        if (*(unsigned __int8 *)(v42 + 48) == 255)
        {
          objc_msgSend(v31, "setAllowsCustomPresentationStyle:", 1);
          objc_msgSend(v32, "setModalPresentationStyle:", 2);
        }
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v32, 1, (id)0xF, (void **)1, 0, 0);
        v33 = Logger.collaboration.unsafeMutableAddressor();
        v35 = v43;
        v34 = v44;
        v36 = v45;
        v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v33, v45);
        v38 = Logger.logObject.getter(v37);
        v39 = static os_log_type_t.default.getter(v38);
        if (os_log_type_enabled(v38, v39))
        {
          v40 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v40 = 0;
          _os_log_impl((void *)&_mh_execute_header, v38, v39, "ShareSheet invite presented", v40, 2u);
          v41 = v40;
          v28 = v47;
          swift_slowDealloc(v41, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v28);
        sub_10005B748(v48, type metadata accessor for Collaboration.Object);
        v25 = &qword_1011B45E0;
        v24 = (uint64_t)v18;
      }
    }
    return sub_10004FF60(v24, v25);
  }
}

uint64_t sub_10044B098(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[8] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[10] = v4;
  v1[11] = v5;
  return swift_task_switch(sub_10044B104, v4, v5);
}

uint64_t sub_10044B104()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  if (((*(uint64_t (**)(void))(**(_QWORD **)(v0 + 64) + 280))() & 1) != 0)
  {
    v1 = 0;
  }
  else
  {
    v2 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 64) + 312))();
    if (v2 <= 1)
      v1 = 1;
    else
      v1 = v2;
  }
  *(_QWORD *)(v0 + 96) = v1;
  v3 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 64) + 272))();
  *(_QWORD *)(v0 + 104) = v4;
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = v1;
  *(_WORD *)(v0 + 56) = 513;
  sub_1003B2554((id)v1);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1011AFDA0 + dword_1011AFDA0);
  v5 = (_QWORD *)swift_task_alloc(unk_1011AFDA4);
  *(_QWORD *)(v0 + 112) = v5;
  *v5 = v0;
  v5[1] = sub_10044B1D4;
  return v7(v0 + 16, 1);
}

uint64_t sub_10044B1D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10044B298;
  else
    v4 = sub_10044B234;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10044B234()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  sub_1003B25A8(v1);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0);
  sub_1003B25A8(v1);
  v3 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10044B298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  swift_release();
  v4 = sub_10044BB1C();
  swift_allocError(&type metadata for Collaboration.Error, v4, 0, 0);
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = 0;
  *(_BYTE *)(v5 + 16) = 0;
  swift_errorRetain(v1);
  swift_willThrow(v6);
  sub_1003B25A8(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0);
  sub_1003B25A8(v3);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10044B344(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a2, v6);
  swift_storeEnumTagMultiPayload(v5, v3, 1);
  Collaboration.Manager.supportsCollaboration(for:)((uint64_t)v5);
  sub_10005B748((uint64_t)v5, type metadata accessor for Collaboration.Object);
  return 0;
}

uint64_t sub_10044B448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10044B4BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  return sub_10044B344(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

double sub_10044B4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  _BYTE v24[72];

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_100064AC8(a3, (uint64_t)v24);
  type metadata accessor for MainActor(0);
  v14 = swift_retain(a2);
  v15 = static MainActor.shared.getter(v14);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1010C6098, v19 + 72, v16 | 7);
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v20 + v17, v9, v6);
  *(_QWORD *)(v20 + v18) = a2;
  sub_100064EF0((uint64_t)v24, v20 + v19);
  v21 = sub_100166D14((uint64_t)v12, (uint64_t)&unk_1011B45C8, v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_10044B688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v5 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4, v6);
  v7 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v7 != 255)
    sub_100064AA4(*(id *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), v7);
  if (*(_QWORD *)(v5 + 56))
    swift_release();
  return swift_deallocObject(v0, v4 + 72);
}

double sub_10044B734()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10044B4EC(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10044B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for Collaboration.Object(0);
  v6[5] = v7;
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v6[7] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10044B814, v10, v11);
}

uint64_t sub_10044B814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  swift_release();
  v5 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v4, v5);
  swift_storeEnumTagMultiPayload(v1, v3, 1);
  sub_10044A53C(v1, v2);
  sub_10005B748(v1, type metadata accessor for Collaboration.Object);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10044B8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  swift_release();
  v6 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4, v7);
  v8 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v8);
  if (*(_QWORD *)(v6 + 56))
    swift_release();
  return swift_deallocObject(v0, v4 + 72);
}

uint64_t sub_10044B978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)swift_task_alloc(dword_1011B45C4);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10006AEE4;
  return sub_10044B780(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_10044BA2C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_release();
  swift_unknownObjectWeakDestroy(v0 + 24, v1);
  v2 = *(unsigned __int8 *)(v0 + 72);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v2);
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  return swift_deallocObject(v0, 96);
}

uint64_t sub_10044BA84(uint64_t a1)
{
  uint64_t v1;

  return sub_10044AC64(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_10044BA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B45E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10044BAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10044BB1C()
{
  unint64_t result;

  result = qword_1011B45E8;
  if (!qword_1011B45E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Error, &type metadata for Collaboration.Error);
    atomic_store(result, (unint64_t *)&qword_1011B45E8);
  }
  return result;
}

uint64_t sub_10044BB60(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
    return swift_bridgeObjectRelease(a2);
  if (a3 <= 1u)
    return swift_errorRelease(result);
  return result;
}

unint64_t sub_10044BB88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B45F8;
  if (!qword_1011B45F8)
  {
    v1 = type metadata accessor for MusicCollaborativePlaylist.Error(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicCollaborativePlaylist.Error, v1);
    atomic_store(result, &qword_1011B45F8);
  }
  return result;
}

uint64_t sub_10044BBD0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 32, v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v2);
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  return swift_deallocObject(v0, 104);
}

uint64_t sub_10044BC28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011B4604);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10005AEE4;
  return sub_10044A100(a1, v4, v5, v1 + 32);
}

uint64_t sub_10044BC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100EBB5F8);
  v6 = v0;
  v3 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release();
  v4 = *(_QWORD *)(v0 + 16);
  sub_100048AAC(v4, *(_QWORD *)(v1 + 24));
  return v4;
}

uint64_t sub_10044BD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = a3;
  sub_100048AAC(a2, a3);
  return sub_10004BA30(v3, v4);
}

uint64_t sub_10044BD5C()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EBB648);
  v4 = v0;
  v2 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t sub_10044BDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2;
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRelease(v2);
}

__n128 sub_10044BE04@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  unint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __n128 result;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100EBB620);
  v9 = v1;
  v4 = sub_10044C45C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v4);
  swift_release();
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_BYTE *)(v1 + 96);
  v7 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 16) = v7;
  result = *(__n128 *)(v1 + 72);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v6;
  return result;
}

uint64_t sub_10044BE94(uint64_t a1, uint64_t a2)
{
  return sub_10044C16C(a2, a1 + 40);
}

double sub_10044BEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  char v10;
  _UNKNOWN **v11;
  Swift::Int v12;
  uint64_t KeyPath;
  unint64_t v14;
  double result;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F4328(a1, (uint64_t)v6);
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000EA704((uint64_t)v6);
  }
  else
  {
    v10 = Playlist.supportsSing.getter(v9);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if ((v10 & 1) != 0)
    {
      v11 = &off_1010AC178;
      goto LABEL_6;
    }
  }
  v11 = &off_1010AC1A0;
LABEL_6:
  v12 = sub_100047028((uint64_t)v11);
  KeyPath = swift_getKeyPath(&unk_100EBB648);
  __chkstk_darwin(KeyPath);
  *(&v16 - 2) = v2;
  *(&v16 - 1) = v12;
  v17 = v2;
  v14 = sub_10044C45C();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v17, KeyPath, sub_10044C4E0, &v16 - 4, (char *)&type metadata for () + 8, v14);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10044C038()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;

  sub_10004BA30(v0[2], v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  v1 = (char *)v0 + OBJC_IVAR____TtCV5Music12SearchHeader13Configuration___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10044C098()
{
  return _s13ConfigurationCMa_0(0);
}

uint64_t _s13ConfigurationCMa_0(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B4640;
  if (!qword_1011B4640)
    return swift_getSingletonMetadata(a1, &_s13ConfigurationCMn_0);
  return result;
}

uint64_t sub_10044C0DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EBB5A8;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_100EBB5C0;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10044C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B4788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10044C1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char v13;
  _UNKNOWN **v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a4;
  v7 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F4328(a1, (uint64_t)v9);
  v10 = type metadata accessor for Playlist(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000EA704((uint64_t)v9);
  }
  else
  {
    v13 = Playlist.supportsSing.getter(v12);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if ((v13 & 1) != 0)
    {
      v14 = &off_1010AC128;
      goto LABEL_6;
    }
  }
  v14 = &off_1010AC150;
LABEL_6:
  v15 = sub_100047028((uint64_t)v14);
  v16 = _s13ConfigurationCMa_0(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(v17 + 56) = 0;
  *(_QWORD *)(v17 + 64) = 0x20000;
  *(_QWORD *)(v17 + 80) = 0;
  *(_QWORD *)(v17 + 88) = 0;
  *(_QWORD *)(v17 + 72) = 0;
  *(_BYTE *)(v17 + 96) = 0;
  ObservationRegistrar.init()(v17);
  *(_QWORD *)(v17 + 32) = v15;
  KeyPath = swift_getKeyPath(&unk_100EBB5F8);
  __chkstk_darwin(KeyPath);
  *(&v23 - 4) = v17;
  *(&v23 - 3) = a2;
  *(&v23 - 2) = a3;
  v25 = v17;
  sub_100048AAC(a2, a3);
  v19 = sub_10044C45C();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, KeyPath, sub_10044C414, &v23 - 6, (char *)&type metadata for () + 8, v19);
  sub_10004BA30(a2, a3);
  swift_release(KeyPath);
  v20 = swift_getKeyPath(&unk_100EBB620);
  __chkstk_darwin(v20);
  v21 = v24;
  *(&v23 - 2) = v17;
  *(&v23 - 1) = v21;
  v25 = v17;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v20, sub_10044C4AC, &v23 - 4, (char *)&type metadata for () + 8, v19);
  swift_release(v20);
  sub_1000EA704(a1);
  return v17;
}

uint64_t sub_10044C414()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v3;
  sub_100048AAC(v1, v3);
  return sub_10004BA30(v4, v5);
}

unint64_t sub_10044C45C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4790;
  if (!qword_1011B4790)
  {
    v1 = _s13ConfigurationCMa_0(255);
    result = swift_getWitnessTable(&unk_100EBB5D8, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4790);
  }
  return result;
}

uint64_t sub_10044C4AC()
{
  uint64_t v0;

  return sub_10044C16C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16) + 40);
}

uint64_t sub_10044C4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  swift_bridgeObjectRetain(v1);
  return swift_bridgeObjectRelease(v3);
}

void sub_10044C518(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  int v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  Class isa;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  Class v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  Class v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;

  v2 = OBJC_IVAR____TtC5Music12BackdropView_gradientMaskType;
  if (v1[OBJC_IVAR____TtC5Music12BackdropView_gradientMaskType] != a1)
  {
    v3 = v1;
    v4 = (void *)objc_opt_self(UIColor);
    v5 = objc_msgSend(v4, "blackColor");
    v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.0);

    v7 = objc_msgSend(v6, "cgColor");
    v8 = v6;
    if (v7)
    {
      v9 = v7;
      v10 = objc_msgSend(v4, "blackColor");
      v11 = objc_msgSend(v10, "cgColor");
      v12 = v10;
      if (v11)
      {
        v13 = v3[v2];
        v14 = v11;
        if (!v13)
        {
          v34 = *(Class *)&v3[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer];
          *(_QWORD *)&v3[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer] = 0;
LABEL_12:

          goto LABEL_13;
        }
        if (v13 == 1)
        {
          v15 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
          v16 = sub_100007E8C((uint64_t *)&unk_1011A1470);
          v17 = swift_allocObject(v16, 40, 7);
          *(_OWORD *)(v17 + 16) = xmmword_100EA7A90;
          v18 = objc_allocWithZone((Class)CAMediaTimingFunction);
          LODWORD(v19) = 1045220557;
          LODWORD(v20) = 1061997773;
          LODWORD(v21) = 0;
          LODWORD(v22) = 1.0;
          v23 = objc_msgSend(v18, "initWithControlPoints::::", v21, v19, v22, v20);
          *(_QWORD *)(v17 + 32) = v23;
          specialized Array._endMutation()(v23);
          sub_10004A07C(0, &qword_1011B47E0, CAMediaTimingFunction_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v15, "setInterpolations:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

          v25 = OBJC_IVAR____TtC5Music12BackdropView_gradientLayer;
          v26 = *(void **)&v3[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer];
          *(_QWORD *)&v3[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer] = v15;

          v27 = *(void **)&v3[v25];
          if (v27)
          {
            v28 = sub_100007E8C(&qword_10119E430);
            v29 = swift_allocObject(v28, 96, 7);
            *(_OWORD *)(v29 + 16) = xmmword_100EA7A80;
            type metadata accessor for CGColor(0);
            *(_QWORD *)(v29 + 32) = v14;
            *(_QWORD *)(v29 + 88) = v30;
            *(_QWORD *)(v29 + 56) = v30;
            *(_QWORD *)(v29 + 64) = v9;
            v31 = v27;
            v32 = v14;
            v33 = v9;
LABEL_11:
            v34 = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v31, "setColors:", v34, swift_bridgeObjectRelease(v29).n128_f64[0]);

            goto LABEL_12;
          }
        }
        else
        {
          v35 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
          v36 = sub_100007E8C((uint64_t *)&unk_1011A1470);
          v37 = swift_allocObject(v36, 40, 7);
          *(_OWORD *)(v37 + 16) = xmmword_100EA7A90;
          v38 = objc_allocWithZone((Class)CAMediaTimingFunction);
          LODWORD(v39) = 1045220557;
          LODWORD(v40) = 1061997773;
          LODWORD(v41) = 0;
          LODWORD(v42) = 1.0;
          v43 = objc_msgSend(v38, "initWithControlPoints::::", v41, v39, v42, v40);
          *(_QWORD *)(v37 + 32) = v43;
          specialized Array._endMutation()(v43);
          sub_10004A07C(0, &qword_1011B47E0, CAMediaTimingFunction_ptr);
          v44 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v35, "setInterpolations:", v44, swift_bridgeObjectRelease(v37).n128_f64[0]);

          v45 = OBJC_IVAR____TtC5Music12BackdropView_gradientLayer;
          v46 = *(void **)&v3[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer];
          *(_QWORD *)&v3[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer] = v35;

          v47 = *(void **)&v3[v45];
          if (v47)
          {
            v48 = sub_100007E8C(&qword_10119E430);
            v29 = swift_allocObject(v48, 96, 7);
            *(_OWORD *)(v29 + 16) = xmmword_100EA7A80;
            type metadata accessor for CGColor(0);
            *(_QWORD *)(v29 + 32) = v9;
            *(_QWORD *)(v29 + 88) = v49;
            *(_QWORD *)(v29 + 56) = v49;
            *(_QWORD *)(v29 + 64) = v14;
            v50 = v14;
            v51 = v9;
            v31 = v47;
            goto LABEL_11;
          }
        }
LABEL_13:
        v53 = objc_msgSend(v3, "layer");
        v52 = objc_opt_self(CABackdropLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v53, v52, 0, 0, 0), "setMask:", *(_QWORD *)&v3[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer]);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_10044C970(int a1, id a2)
{
  id v3;
  unint64_t v4;
  char v5;
  char **v6;
  id v7;
  uint64_t v8;
  unsigned int v9;

  v3 = objc_msgSend(a2, "traitCollection");
  v4 = sub_10013B23C();
  v5 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4);

  v6 = &selRef_clearColor;
  if ((v5 & 1) == 0)
  {
    v7 = objc_msgSend(a2, "layer");
    v8 = objc_opt_self(CABackdropLayer);
    v9 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v7, v8, 0, 0, 0), "captureOnly");

    if (!v9)
      v6 = &selRef_systemBackgroundColor;
  }
  return objc_msgSend((id)objc_opt_self(UIColor), *v6);
}

void sub_10044CB38()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for BackdropView();
  objc_msgSendSuper2(&v4, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v2, "setFrame:");

  }
  v3 = *(id *)&v0[OBJC_IVAR____TtC5Music12BackdropView_overlayView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v3, "setFrame:");

}

void sub_10044CC44()
{
  uint64_t v0;

}

id sub_10044CC70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackdropView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BackdropView()
{
  return objc_opt_self(_TtC5Music12BackdropView);
}

uint64_t storeEnumTagSinglePayload for BackdropView.GradientMaskType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10044CD44 + 4 * byte_100EBB675[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10044CD78 + 4 * byte_100EBB670[v4]))();
}

uint64_t sub_10044CD78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044CD80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10044CD88);
  return result;
}

uint64_t sub_10044CD94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10044CD9CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10044CDA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044CDA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackdropView.GradientMaskType()
{
  return &type metadata for BackdropView.GradientMaskType;
}

unint64_t sub_10044CDC8()
{
  unint64_t result;

  result = qword_1011B47D8;
  if (!qword_1011B47D8)
  {
    result = swift_getWitnessTable(&unk_100EBB6E4, &type metadata for BackdropView.GradientMaskType);
    atomic_store(result, (unint64_t *)&qword_1011B47D8);
  }
  return result;
}

char *sub_10044CE0C()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  _BYTE *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  NSString v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  char *v20;
  _QWORD v22[5];
  uint64_t v23;
  objc_super v24;

  v0[OBJC_IVAR____TtC5Music12BackdropView_gradientMaskType] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music12BackdropView_gradientLayer] = 0;
  v1 = OBJC_IVAR____TtC5Music12BackdropView_overlayView;
  type metadata accessor for PassthroughView();
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v24.receiver = v3;
  v24.super_class = (Class)type metadata accessor for BackdropView();
  v4 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC5Music12BackdropView_overlayView;
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Music12BackdropView_overlayView];
  v7 = v4;
  objc_msgSend(v7, "addSubview:", v6);
  v8 = objc_msgSend(v7, "traitCollection");
  v9 = objc_msgSend(v8, "userInterfaceIdiom");

  v10 = objc_msgSend(v7, "layer");
  v11 = objc_opt_self(CABackdropLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  if (v9 == (id)6)
  {
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v14 = objc_msgSend(v13, "CGColor");

    objc_msgSend(v12, "setBackgroundColor:", v14);
  }
  else
  {
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setGroupName:", v15);

    v16 = *(void **)&v4[v5];
    v17 = swift_allocObject(&unk_1010C61B8, 24, 7);
    *(_QWORD *)(v17 + 16) = v7;
    v18 = objc_allocWithZone((Class)UIColor);
    v22[4] = sub_10044D0D4;
    v23 = v17;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_100264780;
    v22[3] = &unk_1010C61D0;
    v19 = _Block_copy(v22);
    v20 = v7;
    v10 = v16;
    v14 = objc_msgSend(v18, "initWithDynamicProvider:", v19);
    _Block_release(v19);
    swift_release(v23);
    objc_msgSend(v10, "setBackgroundColor:", v14);
  }

  return v7;
}

uint64_t sub_10044D0B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10044D0D4(int a1)
{
  uint64_t v1;

  return sub_10044C970(a1, *(id *)(v1 + 16));
}

uint64_t sub_10044D0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10044D0EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10044D0F4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___backgroundView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___backgroundView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___backgroundView];
  }
  else
  {
    v4 = sub_10044D154(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10044D154(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = UIView.forAutolayout.getter();

  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "whiteColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.1);

  objc_msgSend(v3, "setBackgroundColor:", v6);
  v7 = objc_msgSend(v3, "layer");
  v8 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v8, "displayScale");
  v10 = v9;

  objc_msgSend(v7, "setBorderWidth:", 1.0 / v10);
  v11 = objc_msgSend(v3, "layer");
  v12 = objc_msgSend(v4, "whiteColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.04);

  v14 = objc_msgSend(v13, "CGColor");
  objc_msgSend(v11, "setBorderColor:", v14);

  v15 = objc_msgSend(v3, "layer");
  objc_msgSend(v15, "setShadowOffset:", 0.0, 2.0);

  v16 = objc_msgSend(v3, "layer");
  v17 = objc_msgSend(v4, "blackColor");
  v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.02);

  v19 = objc_msgSend(v18, "CGColor");
  objc_msgSend(v16, "setShadowColor:", v19);

  v20 = objc_msgSend(v3, "layer");
  objc_msgSend(v20, "setShadowPathIsBounds:", 1);

  return v3;
}

char *sub_10044D3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___artworkView;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___artworkView);
  if (v6)
  {
    v7 = *(char **)(v1 + OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___artworkView);
  }
  else
  {
    Artwork.init()((uint64_t)v4);
    v8 = objc_allocWithZone((Class)type metadata accessor for Artwork.View(0));
    v9 = Artwork.View.init(configuration:)((uint64_t)v4);
    v10 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v9;
    v7 = v9;

    v6 = 0;
  }
  v11 = v6;
  return v7;
}

id sub_10044D4B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = sub_10044D510();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10044D510()
{
  id v0;
  id v1;
  void *v2;
  double v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = UIView.forAutolayout.getter();

  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v2 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightSemibold);
  objc_msgSend(v1, "setFont:", v2);

  LODWORD(v3) = 1148846080;
  objc_msgSend(v1, "setContentHuggingPriority:forAxis:", 1, v3);
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v1, "setMaximumContentSizeCategory:", UIContentSizeCategoryExtraExtraExtraLarge);
  return v1;
}

id sub_10044D5F4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  id v50;
  char *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  char *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  Class isa;
  id v78;
  objc_super v79;

  v9 = &v4[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_title];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artwork] = 0;
  v10 = OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artworkCachingReference;
  v11 = type metadata accessor for Artwork.Caching.Reference();
  *(_QWORD *)&v4[v10] = swift_allocObject(v11, 16, 7);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___artworkView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___titleLabel] = 0;
  v79.receiver = v4;
  v79.super_class = (Class)type metadata accessor for NowPlayingAttributionView();
  v12 = objc_msgSendSuper2(&v79, "initWithFrame:", a1, a2, a3, a4);
  v13 = sub_10044D0F4();
  objc_msgSend(v12, "addSubview:", v13);

  v14 = v12;
  v15 = sub_10044D3FC();
  v16 = UIView.forAutolayout.getter();

  objc_msgSend(v14, "addSubview:", v16);
  v17 = v14;
  v18 = sub_10044D4B4();
  objc_msgSend(v17, "addSubview:", v18);

  v78 = (id)objc_opt_self(NSLayoutConstraint);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v20 = swift_allocObject(v19, 136, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EBB720;
  v21 = sub_10044D0F4();
  v22 = objc_msgSend(v21, "topAnchor");

  v23 = objc_msgSend(v17, "topAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v20 + 32) = v24;
  v25 = sub_10044D0F4();
  v26 = objc_msgSend(v25, "bottomAnchor");

  v27 = objc_msgSend(v17, "bottomAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v20 + 40) = v28;
  v29 = sub_10044D0F4();
  v30 = objc_msgSend(v29, "trailingAnchor");

  v31 = objc_msgSend(v17, "trailingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 48) = v32;
  v33 = sub_10044D0F4();
  v34 = objc_msgSend(v33, "leadingAnchor");

  v35 = objc_msgSend(v17, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v20 + 56) = v36;
  v37 = sub_10044D3FC();
  v38 = objc_msgSend(v37, "leadingAnchor");

  v39 = objc_msgSend(v17, "leadingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, 4.0);

  *(_QWORD *)(v20 + 64) = v40;
  v41 = sub_10044D3FC();
  v42 = objc_msgSend(v41, "topAnchor");

  v43 = objc_msgSend(v17, "topAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, 4.0);

  *(_QWORD *)(v20 + 72) = v44;
  v45 = sub_10044D3FC();
  v46 = objc_msgSend(v45, "bottomAnchor");

  v47 = objc_msgSend(v17, "bottomAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, -4.0);

  *(_QWORD *)(v20 + 80) = v48;
  v49 = sub_10044D3FC();
  v50 = objc_msgSend(v49, "heightAnchor");

  v51 = sub_10044D3FC();
  v52 = objc_msgSend(v51, "widthAnchor");

  v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
  *(_QWORD *)(v20 + 88) = v53;
  v54 = sub_10044D4B4();
  v55 = objc_msgSend(v54, "centerYAnchor");

  v56 = objc_msgSend(v17, "centerYAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v20 + 96) = v57;
  v58 = sub_10044D4B4();
  v59 = objc_msgSend(v58, "topAnchor");

  v60 = objc_msgSend(v17, "topAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v60, 2.0);

  *(_QWORD *)(v20 + 104) = v61;
  v62 = sub_10044D4B4();
  v63 = objc_msgSend(v62, "bottomAnchor");

  v64 = objc_msgSend(v17, "bottomAnchor");
  v65 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, -2.0);

  *(_QWORD *)(v20 + 112) = v65;
  v66 = sub_10044D4B4();
  v67 = objc_msgSend(v66, "leadingAnchor");

  v68 = sub_10044D3FC();
  v69 = objc_msgSend(v68, "trailingAnchor");

  v70 = objc_msgSend(v67, "constraintEqualToAnchor:constant:", v69, 5.0);
  *(_QWORD *)(v20 + 120) = v70;
  v71 = sub_10044D4B4();
  v72 = objc_msgSend(v71, "trailingAnchor");

  v73 = objc_msgSend(v17, "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v73, -10.0);

  *(_QWORD *)(v20 + 128) = v74;
  specialized Array._endMutation()(v75);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v78, "activateConstraints:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

  return v17;
}

void sub_10044DDC4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v14;

  v1 = type metadata accessor for UIView.Corner.Radius(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (double *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for NowPlayingAttributionView();
  v14.receiver = v0;
  v14.super_class = v8;
  objc_msgSendSuper2(&v14, "layoutSubviews");
  v9 = sub_10044D0F4();
  objc_msgSend(v0, "frame");
  *v4 = v10 * 0.5;
  *((_BYTE *)v4 + 8) = 1;
  v11 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for UIView.Corner.Radius.value(_:), v1);
  v12 = static CACornerMask.all.getter(v11);
  UIView.Corner.init(radius:mask:)(v4, v12);
  v13 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
  UIView.corner.setter(v7);

}

uint64_t sub_10044DF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v25[3];

  v4 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(a2 + OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artwork);
  v8 = v7;
  v9 = Artwork.Content.init(catalog:background:)((uint64_t)v7, 0);
  v11 = v10;
  sub_10044E244(*(void **)(a1 + 24), *(void **)(a1 + 32));
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v11;
  static UIView.Corner.rounded.getter(v12);
  v13 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  v14 = a1 + *(int *)(type metadata accessor for Artwork(0) + 24);
  v15 = type metadata accessor for Artwork.Decoration(0);
  sub_1000A5508((uint64_t)v6, v14 + *(int *)(v15 + 20), &qword_10119DDD8);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.16);
  UIView.Border.init(thickness:color:)();
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;

  *(_QWORD *)v14 = v17;
  *(_QWORD *)(v14 + 8) = v21;
  *(_QWORD *)(v14 + 16) = v19;
  swift_retain(*(_QWORD *)(a2 + OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artworkCachingReference));
  Artwork.Caching.init(reference:)(v22, v25);
  return sub_1000A5508((uint64_t)v25, a1, &qword_1011B4848);
}

id sub_10044E0B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingAttributionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingAttributionView()
{
  return objc_opt_self(_TtC5Music25NowPlayingAttributionView);
}

void sub_10044E184()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_title];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artwork] = 0;
  v2 = OBJC_IVAR____TtC5Music25NowPlayingAttributionView_artworkCachingReference;
  v3 = type metadata accessor for Artwork.Caching.Reference();
  *(_QWORD *)&v0[v2] = swift_allocObject(v3, 16, 7);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___artworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingAttributionView____lazy_storage___titleLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingAttributionView.swift", 37, 2, 77, 0);
  __break(1u);
}

void sub_10044E244(void *a1, void *a2)
{
  if (a2)
  {

  }
}

uint64_t _s9ComposersVwxx(_QWORD *a1)
{
  swift_release(*a1);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[9]);
  return swift_bridgeObjectRelease(a1[10]);
}

uint64_t _s9ComposersVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  v5 = a2[5];
  v6 = a2[6];
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v7 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v7;
  v8 = a2[10];
  *(_QWORD *)(a1 + 80) = v8;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t *_s9ComposersVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  *((_BYTE *)a1 + 33) = *((_BYTE *)a2 + 33);
  *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
  *((_BYTE *)a1 + 35) = *((_BYTE *)a2 + 35);
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[6];
  v11 = a1[6];
  a1[6] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a2[10];
  v15 = a1[10];
  a1[10] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

__n128 _s9ComposersVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t *_s9ComposersVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a2[3];
  v6 = a1[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  *((_BYTE *)a1 + 33) = *((_BYTE *)a2 + 33);
  *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
  *((_BYTE *)a1 + 35) = *((_BYTE *)a2 + 35);
  swift_bridgeObjectRelease(a1[5]);
  v7 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  a1[8] = a2[8];
  swift_bridgeObjectRelease(a1[9]);
  v8 = a1[10];
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t _s9ComposersVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s9ComposersVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13RecentlyAddedVMa()
{
  return &_s13RecentlyAddedVN;
}

uint64_t sub_10044E5CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryMusicMovieFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10044E610@<X0>(uint8_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  NSObject *v114;
  __n128 v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  __n128 v122;
  void (*v123)(char *, uint64_t, __n128);
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint8_t *, uint64_t);
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t, uint64_t, uint64_t);
  char *v162;
  uint64_t v163;
  uint8_t *v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168[2];
  __int128 v169;
  __int128 v170;

  v164 = a1;
  v162 = (char *)a2;
  v158 = type metadata accessor for Logger(0);
  v130 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v129 = (char *)&v124 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for UploadedVideo(0);
  v127 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v125 = (char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v126 = (char *)&v124 - v5;
  v151 = sub_100007E8C(&qword_10119D2D0);
  v149 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v148 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for MusicMovie(0);
  v147 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v146 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  v141 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v140 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for MusicVideo(0);
  v139 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v138 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v10);
  v132 = (char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011A19D0);
  v135 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v134 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for Playlist(0);
  v133 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v144 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
  v154 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for Album(0);
  v153 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v18 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for RecentlyAddedMusicItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v157 = (char *)&v124 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v152 = (char *)&v124 - v23;
  __chkstk_darwin(v24);
  v124 = (char *)&v124 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v124 - v27;
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v29);
  v31 = (char *)&v124 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v145 = (char *)&v124 - v33;
  __chkstk_darwin(v34);
  v36 = (char *)&v124 - v35;
  __chkstk_darwin(v37);
  v131 = (char *)&v124 - v38;
  __chkstk_darwin(v39);
  v41 = (char *)&v124 - v40;
  __chkstk_darwin(v42);
  v44 = (char *)&v124 - v43;
  v45 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
  v159 = v44;
  v47 = v44;
  v48 = v19;
  v160 = v45;
  v161 = v46;
  ((void (*)(char *, uint64_t, uint64_t))v46)(v47, 1, 1);
  v156 = *(void (**)(char *, uint8_t *, uint64_t))(v20 + 16);
  v156(v28, v164, v19);
  v163 = v20;
  v49 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v28, v19);
  if (v49 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v163 + 96))(v28, v19);
    v50 = v153;
    v51 = v155;
    (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v18, v28, v155);
    v52 = type metadata accessor for Track(0);
    MusicLibrarySectionedRequest.init()(v51, v52, &protocol witness table for Album, &protocol witness table for Track);
    swift_retain();
    MusicLibrarySectionedRequest.library.setter(v53, v14);
    KeyPath = swift_getKeyPath(&unk_100EBB8C8);
    LOBYTE(v168[0]) = 1;
    MusicLibrarySectionedRequest<>.includeSections<A>(matching:equalTo:)(KeyPath, v168, v14, &protocol witness table for Album, &protocol witness table for Bool);
    swift_release();
    v55 = swift_getKeyPath(&unk_100EBB8F0);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(v55, v18, v14);
    swift_release();
    v56 = swift_getKeyPath(&unk_100EBB918);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v56, 1, v14);
    swift_release();
    v57 = swift_getKeyPath(&unk_100EBB940);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v57, 1, v14);
    swift_release();
    *((_QWORD *)&v169 + 1) = v14;
    *(_QWORD *)&v170 = sub_100450330((unint64_t *)&qword_1011A7D50, (uint64_t *)&unk_1011B69A0);
    v58 = sub_100049F68(v168);
    v59 = v154;
    (*(void (**)(_QWORD *, char *, uint64_t))(v154 + 16))(v58, v16, v14);
    v167 = 0;
    v165 = 0u;
    v166 = 0u;
    MusicPlaybackIntentDescriptor.init(request:startingAt:)(v168, &v165);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v14);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v51);
    v83 = (uint64_t)v159;
    sub_10004FF60((uint64_t)v159, (uint64_t *)&unk_1011A3D60);
LABEL_16:
    v161(v41, 0, 1, v160);
    sub_10010E13C((uint64_t)v41, v83);
    return sub_10010E13C(v83, (uint64_t)v162);
  }
  if (v49 == enum case for RecentlyAddedMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v163 + 96))(v28, v19);
    v60 = v147;
    v61 = v146;
    v62 = v150;
    (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v146, v28, v150);
    v63 = type metadata accessor for TitledSection(0);
    v64 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
    v65 = v148;
    MusicLibrarySectionedRequest.init()(v63, v62, &protocol witness table for TitledSection, v64);
    v66 = v65;
    swift_retain();
    v67 = v151;
    MusicLibrarySectionedRequest.library.setter(v68, v151);
    v69 = swift_getKeyPath(&unk_100EBB850);
    v168[0] = MusicMovie.id.getter(v69);
    v168[1] = v70;
    MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(v69, v168, v67, &protocol witness table for MusicItemID);
    swift_bridgeObjectRelease();
    swift_release();
    *((_QWORD *)&v169 + 1) = v67;
    *(_QWORD *)&v170 = sub_100450330(&qword_10119D388, &qword_10119D2D0);
    v71 = sub_100049F68(v168);
    v72 = v149;
    (*(void (**)(_QWORD *, char *, uint64_t))(v149 + 16))(v71, v65, v67);
    v167 = 0;
    v165 = 0u;
    v166 = 0u;
    v73 = v145;
    MusicPlaybackIntentDescriptor.init(request:startingAt:)(v168, &v165);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v67);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
LABEL_15:
    v83 = (uint64_t)v159;
    sub_10004FF60((uint64_t)v159, (uint64_t *)&unk_1011A3D60);
    v41 = v73;
    goto LABEL_16;
  }
  if (v49 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v163 + 96))(v28, v19);
    v74 = v139;
    v75 = v138;
    v76 = v142;
    (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v28, v142);
    v77 = type metadata accessor for TitledSection(0);
    v78 = v140;
    MusicLibrarySectionedRequest.init()(v77, v76, &protocol witness table for TitledSection, &protocol witness table for MusicVideo);
    swift_retain();
    v79 = v143;
    MusicLibrarySectionedRequest.library.setter(v80, v143);
    MusicLibrarySectionedRequest<>.filterItems(equalTo:)(v75, v79, &protocol witness table for MusicVideo);
    *((_QWORD *)&v169 + 1) = v79;
    *(_QWORD *)&v170 = sub_100450330((unint64_t *)&qword_1011B4938, (uint64_t *)&unk_1011A3840);
    v81 = sub_100049F68(v168);
    v82 = v141;
    (*(void (**)(_QWORD *, char *, uint64_t))(v141 + 16))(v81, v78, v79);
    v167 = 0;
    v165 = 0u;
    v166 = 0u;
    MusicPlaybackIntentDescriptor.init(request:startingAt:)(v168, &v165);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v78, v79);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
    v83 = (uint64_t)v159;
    sub_10004FF60((uint64_t)v159, (uint64_t *)&unk_1011A3D60);
    v41 = v36;
    goto LABEL_16;
  }
  if (v49 == enum case for RecentlyAddedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v163 + 96))(v28, v19);
    v84 = v133;
    v85 = v136;
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v144, v28, v136);
    v86 = type metadata accessor for Playlist.Entry(0);
    v87 = v134;
    MusicLibrarySectionedRequest.init()(v85, v86, &protocol witness table for Playlist, &protocol witness table for Playlist.Entry);
    swift_retain();
    v88 = v137;
    MusicLibrarySectionedRequest.library.setter(v89, v137);
    v90 = swift_getKeyPath(&unk_100EBB878);
    if (qword_10119BE60 != -1)
      swift_once(&qword_10119BE60, sub_10031EE34);
    v91 = swift_bridgeObjectRetain();
    v92 = sub_1004819E0(v91);
    swift_bridgeObjectRelease();
    v93 = sub_100048748(&qword_1011A19B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    MusicLibrarySectionedRequest<>.filterSections<A>(matching:memberOf:)(v90, v92, v88, &protocol witness table for Playlist, v93);
    swift_release();
    swift_release();
    v94 = swift_getKeyPath(&unk_100EBB8A0);
    v95 = (uint64_t)v132;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v132, v144, v85);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56))(v95, 0, 1, v85);
    v96 = sub_100048748((unint64_t *)&qword_1011A60B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(v94, v95, v88, &protocol witness table for Playlist.Entry, v96);
    swift_release();
    sub_10004FF60(v95, &qword_1011A30F0);
    *((_QWORD *)&v169 + 1) = v88;
    *(_QWORD *)&v170 = sub_100450330((unint64_t *)&qword_1011A19D8, &qword_1011A19D0);
    v97 = sub_100049F68(v168);
    v98 = v135;
    (*(void (**)(_QWORD *, char *, uint64_t))(v135 + 16))(v97, v87, v88);
    v167 = 0;
    v165 = 0u;
    v166 = 0u;
    v73 = v131;
    MusicPlaybackIntentDescriptor.init(request:startingAt:)(v168, &v165);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v87, v88);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v144, v85);
    goto LABEL_15;
  }
  if (v49 == enum case for RecentlyAddedMusicItem.tvSeason(_:))
  {
    sub_10004FF60((uint64_t)v159, (uint64_t *)&unk_1011A3D60);
    v161(v162, 1, 1, v160);
    return (*(uint64_t (**)(char *, uint64_t))(v163 + 8))(v28, v19);
  }
  if (v49 == enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v163 + 96))(v28, v19);
    v100 = v127;
    v101 = v126;
    v102 = v128;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v28, v128);
    v103 = v125;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v125, v101, v102);
    v104 = sub_100048748(&qword_10119E0A0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
    MusicPlaybackIntentDescriptor.init<A>(item:)(v103, v102, v104);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
    v83 = (uint64_t)v159;
    sub_10004FF60((uint64_t)v159, (uint64_t *)&unk_1011A3D60);
    v41 = v31;
    goto LABEL_16;
  }
  v105 = Logger.musicKit.unsafeMutableAddressor();
  v106 = v130;
  v107 = v129;
  v108 = v19;
  v109 = v158;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v129, v105, v158);
  v110 = v124;
  v111 = v48;
  v112 = (void (*)(char *, char *, uint64_t))v156;
  v113 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v156)(v124, v164, v111);
  v114 = Logger.logObject.getter(v113);
  v116 = static os_log_type_t.fault.getter(v115);
  if (os_log_type_enabled(v114, v116))
  {
    v117 = (uint8_t *)swift_slowAlloc(12, -1);
    v118 = swift_slowAlloc(32, -1);
    v168[0] = v118;
    *(_DWORD *)v117 = 136315138;
    v164 = v117 + 4;
    v119 = v152;
    v112(v152, v110, v108);
    v120 = String.init<A>(describing:)(v119, v108);
    *(_QWORD *)&v165 = sub_100322200(v120, v121, v168);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 8);
    v122 = swift_bridgeObjectRelease();
    v123 = *(void (**)(char *, uint64_t, __n128))(v163 + 8);
    v123(v110, v108, v122);
    _os_log_impl((void *)&_mh_execute_header, v114, v116, "Unknown Recently Added Item=%s", v117, 0xCu);
    swift_arrayDestroy(v118, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v118, -1, -1);
    swift_slowDealloc(v117, -1, -1);

    (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v158);
  }
  else
  {

    v123 = *(void (**)(char *, uint64_t, __n128))(v163 + 8);
    ((void (*)(char *, uint64_t))v123)(v110, v108);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v109);
  }
  sub_10004FF60((uint64_t)v159, (uint64_t *)&unk_1011A3D60);
  v161(v162, 1, 1, v160);
  return ((uint64_t (*)(char *, uint64_t))v123)(v28, v108);
}

uint64_t sub_10044FA20(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistInternalFilter.variant.getter);
}

uint64_t sub_10044FA2C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryRecentlyAddedSortProperties.dateDownloaded.getter);
}

uint64_t sub_10044FA38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryRecentlyAddedSortProperties.dateAdded.getter);
}

void sub_10044FA44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = type metadata accessor for MusicLibrary(0);
  v5 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8) & 1);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  __asm { BR              X10 }
}

uint64_t sub_10044FB2C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v2 & 1);
  return ((uint64_t (*)(void))((char *)sub_10044FC08 + 4 * byte_100EBB757[*(unsigned __int8 *)(v1 + 34)]))();
}

void sub_10044FC08()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1 & 1);
  v3 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  sub_100046220((uint64_t)v0, v3);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_100045DAC(v0, v4);
  swift_bridgeObjectRelease(v4);
  v5 = *(unsigned __int8 *)(v2 + 56);
  if ((_DWORD)v5 != 7)
  {
    Hasher._combine(_:)(1u);
    __asm { BR              X9 }
  }
  Hasher._combine(_:)(0);
  v6 = *(_QWORD *)(v2 + 64);
  v7 = *(_QWORD *)(v2 + 72);
  swift_bridgeObjectRetain();
  String.hash(into:)(v0, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain();
  sub_100046164((uint64_t)v0, v8);
  swift_bridgeObjectRelease(v8);
}

double sub_10044FE68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  __n128 v11;
  double result;
  uint64_t v13;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 8);
  v3 = v0[2];
  v4 = (void *)v0[3];
  v5 = type metadata accessor for TitledSection(0);
  v6 = type metadata accessor for RecentlyAddedMusicItem(0);
  v7 = sub_100048748(&qword_1011A3998, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
  MusicLibrarySectionedRequest.init()(v5, v6, &protocol witness table for TitledSection, v7);
  swift_retain();
  v8 = sub_100007E8C(&qword_1011A3990);
  MusicLibrarySectionedRequest.library.setter(v1, v8);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v2, v8);
  v9._countAndFlagsBits = v3;
  v9._object = v4;
  MusicLibrarySectionedRequest.filterItems(text:)(v9);
  MusicLibrarySectionedRequest.limit.setter(60, v8);
  if ((_DWORD)v2 == 1)
  {
    KeyPath = swift_getKeyPath(&unk_100EBB828);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 0, v8);
    v11 = swift_release();
    MusicLibrarySectionedRequest.excludeNonPinnedPlaylists.setter(1, v8, v11);
  }
  else
  {
    v13 = swift_getKeyPath(&unk_100EBB800);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v13, 0, v8);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

Swift::Int sub_10044FFB8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10044FA44((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10044FFF8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10044FA44((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100450030(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_10045018C((uint64_t)v7, (uint64_t)v9) & 1;
}

unint64_t sub_10045009C()
{
  unint64_t result;

  result = qword_1011B4850;
  if (!qword_1011B4850)
  {
    result = swift_getWitnessTable(&unk_100EBB77C, &_s13RecentlyAddedVN);
    atomic_store(result, (unint64_t *)&qword_1011B4850);
  }
  return result;
}

uint64_t sub_1004500E0()
{
  return sub_100048748(&qword_1011A3998, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
}

unint64_t sub_10045010C(uint64_t a1)
{
  unint64_t result;

  result = sub_100450130();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100450130()
{
  unint64_t result;

  result = qword_1011B4930;
  if (!qword_1011B4930)
  {
    result = swift_getWitnessTable(&unk_100EBB7A4, &_s13RecentlyAddedVN);
    atomic_store(result, (unint64_t *)&qword_1011B4930);
  }
  return result;
}

uint64_t sub_100450174(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryRecentlyAddedSortProperties.dateAdded.getter);
}

uint64_t sub_100450180(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryRecentlyAddedSortProperties.dateDownloaded.getter);
}

uint64_t sub_10045018C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  int v10;
  char v11;
  int v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) != 0)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0) & 1) == 0)
    return 0;
  v9 = *(unsigned __int8 *)(a1 + 33);
  v10 = *(unsigned __int8 *)(a2 + 33);
  sub_1005CFF5C(*(_BYTE *)(a1 + 32));
  if ((v11 & 1) == 0)
    return 0;
  if (((v9 ^ v10) & 1) != 0)
    return 0;
  v12 = *(unsigned __int8 *)(a1 + 35);
  v13 = *(unsigned __int8 *)(a2 + 35);
  sub_1005CFF5C(*(_BYTE *)(a1 + 34));
  if ((v14 & 1) == 0
    || ((v12 ^ v13) & 1) != 0
    || (sub_1002EBD18(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) == 0
    || (sub_10016CD08(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) == 0)
  {
    return 0;
  }
  v15 = *(unsigned __int8 *)(a1 + 56);
  v16 = *(unsigned __int8 *)(a2 + 56);
  if ((_DWORD)v15 == 7)
  {
    if ((_DWORD)v16 != 7)
      return 0;
  }
  else if ((_DWORD)v16 == 7 || (sub_1005CFF58(v15, v16) & 1) == 0)
  {
    return 0;
  }
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a2 + 64);
  v20 = *(_QWORD *)(a2 + 72);
  if (v17 == v19 && v18 == v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v19, v20, 0) & 1) != 0)
    return sub_1002EBFA4(*(_QWORD *)(a1 + 80), *(_QWORD *)(a2 + 80));
  return 0;
}

uint64_t sub_1004502CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryMusicMovieFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100450310(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistInternalFilter.variant.getter);
}

uint64_t sub_100450330(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100450438(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *result;
  char *v19;
  char *v20;
  id v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  Class isa;
  objc_super v49;

  v9 = OBJC_IVAR____TtC5Music16BottomPlayerCell_viewController;
  v10 = objc_allocWithZone((Class)type metadata accessor for BottomPlayerViewController());
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Music16BottomPlayerCell_queue] = 0;
  v12 = &v11[OBJC_IVAR____TtC5Music16BottomPlayerCell_handoffToAction];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v11[OBJC_IVAR____TtC5Music16BottomPlayerCell_handoffFromAction];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  v49.receiver = v11;
  v49.super_class = (Class)type metadata accessor for BottomPlayerCell();
  v14 = (char *)objc_msgSendSuper2(&v49, "initWithFrame:", a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC5Music16BottomPlayerCell_viewController;
  v16 = *(void **)&v14[OBJC_IVAR____TtC5Music16BottomPlayerCell_viewController];
  v17 = v14;
  result = (char *)objc_msgSend(v16, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v19 = result;
  objc_msgSend(result, "setDirectionalLayoutMargins:", 8.0, 8.0, 8.0, 16.0);

  result = (char *)objc_msgSend(*(id *)&v14[v15], "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v20 = result;
  objc_msgSend(result, "setInsetsLayoutMarginsFromSafeArea:", 0);

  v21 = objc_msgSend(v17, "contentView");
  result = (char *)objc_msgSend(*(id *)&v14[v15], "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22 = result;
  v23 = UIView.forAutolayout.getter();

  objc_msgSend(v21, "addSubview:", v23);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100EA7AB0;
  result = (char *)objc_msgSend(*(id *)&v14[v15], "view");
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v26 = result;
  v27 = objc_msgSend(result, "leadingAnchor");

  v28 = objc_msgSend(v17, "contentView");
  v29 = objc_msgSend(v28, "leadingAnchor");

  v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);
  *(_QWORD *)(v25 + 32) = v30;
  result = (char *)objc_msgSend(*(id *)&v14[v15], "view");
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = result;
  v32 = objc_msgSend(result, "trailingAnchor");

  v33 = objc_msgSend(v17, "contentView");
  v34 = objc_msgSend(v33, "trailingAnchor");

  v35 = objc_msgSend(v32, "constraintEqualToAnchor:", v34);
  *(_QWORD *)(v25 + 40) = v35;
  result = (char *)objc_msgSend(*(id *)&v14[v15], "view");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v36 = result;
  v37 = objc_msgSend(result, "topAnchor");

  v38 = objc_msgSend(v17, "contentView");
  v39 = objc_msgSend(v38, "topAnchor");

  v40 = objc_msgSend(v37, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v25 + 48) = v40;
  result = (char *)objc_msgSend(*(id *)&v14[v15], "view");
  if (result)
  {
    v41 = result;
    v42 = (void *)objc_opt_self(NSLayoutConstraint);
    v43 = objc_msgSend(v41, "bottomAnchor");

    v44 = objc_msgSend(v17, "contentView");
    v45 = objc_msgSend(v44, "bottomAnchor");

    v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);
    *(_QWORD *)(v25 + 56) = v46;
    specialized Array._endMutation()(v47);
    sub_10023E8D4();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v42, "activateConstraints:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

    return v17;
  }
LABEL_15:
  __break(1u);
  return result;
}

id sub_100450914()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BottomPlayerCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BottomPlayerCell()
{
  return objc_opt_self(_TtC5Music16BottomPlayerCell);
}

unint64_t sub_1004509C8()
{
  unint64_t result;

  result = qword_1011B4988;
  if (!qword_1011B4988)
  {
    result = swift_getWitnessTable(&unk_100EBBA38, &type metadata for DownloadMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011B4988);
  }
  return result;
}

unint64_t sub_100450A10()
{
  unint64_t result;

  result = qword_1011B4990;
  if (!qword_1011B4990)
  {
    result = swift_getWitnessTable(&unk_100EBBA60, &type metadata for DownloadMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011B4990);
  }
  return result;
}

uint64_t sub_100450A54(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100FA0F8C, 1) + 8);
}

uint64_t sub_100450A78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA0F64, 1);
}

uint64_t sub_100450A88()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124D010);
  sub_100048B14(v0, (uint64_t)qword_10124D010);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100E3A390);
}

uint64_t sub_100450AE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2[32] = a1;
  v2[33] = a2;
  v3 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v2[34] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[35] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[36] = swift_task_alloc(v5);
  v2[37] = swift_task_alloc(v5);
  v2[38] = swift_task_alloc(v5);
  v6 = type metadata accessor for MusicLibrary.DownloadAction(0);
  v2[39] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[40] = v7;
  v2[41] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011B8DB0);
  v2[42] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[43] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[44] = swift_task_alloc(v10);
  v2[45] = swift_task_alloc(v10);
  v2[46] = swift_task_alloc(v10);
  v2[47] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for GenericMusicItemEntity(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[48] = swift_task_alloc(v11);
  v2[49] = swift_task_alloc(v11);
  v2[50] = swift_task_alloc(v11);
  v2[51] = swift_task_alloc(v11);
  return swift_task_switch(sub_100450C28, 0, 0);
}

uint64_t sub_100450C28()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  __n128 v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  void (*v53)(uint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  unint64_t v76;
  _BYTE *v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  _BYTE *v86;
  __n128 v87;
  __n128 v88;
  _QWORD *v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  _BOOL4 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  __n128 v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  __n128 v105;
  void (*v106)(uint64_t, uint64_t, __n128);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _BYTE *v111;
  __n128 v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136[2];

  v1 = (__int128 *)(v0 + 64);
  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v131 = v0 + 144;
  v2 = *(_QWORD *)(v0 + 264);
  v3 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 416) = sub_100048B14(v3, (uint64_t)qword_10124CEC8);
  v4 = swift_retain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD **)(v0 + 408);
    v9 = *(_QWORD *)(v0 + 264);
    v10 = swift_slowAlloc(22, -1);
    v124 = swift_slowAlloc(64, -1);
    v136[0] = v124;
    *(_DWORD *)v10 = 136446466;
    *(_QWORD *)(v0 + 232) = &type metadata for DownloadMusicItemAppIntent;
    v11 = sub_100007E8C(&qword_1011B49C8);
    v12 = String.init<A>(describing:)(v0 + 232, v11);
    v14 = v13;
    *(_QWORD *)(v0 + 240) = sub_100322200(v12, v13, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v10 + 12) = 2082;
    IntentParameter.wrappedValue.getter(v8);
    v15 = sub_1004E1D7C();
    v17 = v16;
    sub_100078DD0((uint64_t)v8);
    *(_QWORD *)(v0 + 248) = sub_100322200(v15, v17, v136);
    v1 = (__int128 *)(v0 + 64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 248, v0 + 256);
    v18 = swift_bridgeObjectRelease(v17);
    swift_release_n(v9, 2, v18);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%{public}s – downloading item %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v124, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v124, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 264), 2, v7);
  }

  v19 = *(_QWORD **)(v0 + 400);
  IntentParameter.wrappedValue.getter(v19);
  sub_1004E36A0((uint64_t)v1);
  sub_100078DD0((uint64_t)v19);
  if (*(_QWORD *)(v0 + 88))
  {
    v123 = v0 + 168;
    v20 = *(_QWORD *)(v0 + 376);
    v22 = *(_QWORD *)(v0 + 336);
    v21 = *(_QWORD *)(v0 + 344);
    v23 = *(_QWORD *)(v0 + 328);
    v125 = *(_QWORD *)(v0 + 320);
    v127 = *(_QWORD *)(v0 + 368);
    v24 = *(_QWORD *)(v0 + 312);
    sub_100145714(v1, (_OWORD *)(v0 + 16));
    v25 = type metadata accessor for MusicLibrary(0);
    *(_QWORD *)(v0 + 424) = static MusicLibrary.shared.getter(v25);
    v26 = *(_QWORD *)(v0 + 40);
    v27 = *(_QWORD *)(v0 + 56);
    v28 = sub_100007E68((_QWORD *)(v0 + 16), v26);
    static MusicLibraryAction<>.download.getter(v28);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v28, v23, v26, v24, v27, &protocol witness table for MusicLibrary.DownloadAction);
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v23, v24);
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    v29(v127, v20, v22);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 88))(v127, v22);
    if (v30 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
    {
      v31 = *(_QWORD *)(v0 + 368);
      v33 = *(_QWORD *)(v0 + 296);
      v32 = *(_QWORD *)(v0 + 304);
      v35 = *(_QWORD *)(v0 + 272);
      v34 = *(_QWORD *)(v0 + 280);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 344) + 96))(v31, *(_QWORD *)(v0 + 336));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v32, v31, v35);
      v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
      v37 = v36(v33, v32, v35);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.error.getter(v38);
      v40 = os_log_type_enabled(v38, v39);
      v41 = *(_QWORD *)(v0 + 296);
      if (v40)
      {
        v128 = *(_QWORD *)(v0 + 288);
        v42 = *(_QWORD *)(v0 + 272);
        v132 = *(_QWORD *)(v0 + 280);
        v43 = swift_slowAlloc(22, -1);
        v134 = swift_slowAlloc(64, -1);
        v136[0] = v134;
        *(_DWORD *)v43 = 136446466;
        *(_QWORD *)(v0 + 168) = &type metadata for DownloadMusicItemAppIntent;
        v44 = sub_100007E8C(&qword_1011B49C8);
        v45 = String.init<A>(describing:)(v123, v44);
        v47 = v46;
        *(_QWORD *)(v0 + 176) = sub_100322200(v45, v46, v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184);
        v48 = swift_bridgeObjectRelease(v47);
        *(_WORD *)(v43 + 12) = 2082;
        ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v36)(v128, v41, v42, v48);
        v49 = String.init<A>(describing:)(v128, v42);
        v51 = v50;
        *(_QWORD *)(v0 + 184) = sub_100322200(v49, v50, v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192);
        v52 = swift_bridgeObjectRelease(v51);
        v53 = *(void (**)(uint64_t, uint64_t, __n128))(v132 + 8);
        v53(v41, v42, v52);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "%{public}s – unsupported reason %{public}s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy(v134, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v134, -1, -1);
        swift_slowDealloc(v43, -1, -1);
      }
      else
      {
        v53 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 280) + 8);
        ((void (*)(_QWORD, _QWORD))v53)(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272));
      }

      v79 = *(_QWORD *)(v0 + 376);
      v80 = *(_QWORD *)(v0 + 336);
      v81 = *(_QWORD *)(v0 + 344);
      v82 = *(_QWORD *)(v0 + 304);
      v83 = *(_QWORD *)(v0 + 272);
      v84 = sub_100451B98();
      v85 = sub_100452434();
      swift_allocError(&type metadata for DownloadMusicItemIntentError, v85, 0, 0);
      *v86 = v84;
      swift_willThrow(v87);
      v88 = swift_release();
      v53(v82, v83, v88);
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
      v89 = (_QWORD *)(v0 + 16);
    }
    else
    {
      if (v30 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
      {
        v72 = *(_QWORD *)(v0 + 40);
        v71 = *(_QWORD *)(v0 + 48);
        v73 = sub_100007E68((_QWORD *)(v0 + 16), v72);
        v74 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
        *(_QWORD *)(v0 + 432) = v74;
        *v74 = v0;
        v74[1] = sub_1004516D0;
        return MusicLibrary.download<A>(_:)(v73, v72, v71);
      }
      v90 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v29)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 336));
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.error.getter(v91);
      v93 = os_log_type_enabled(v91, v92);
      v94 = *(_QWORD *)(v0 + 360);
      if (v93)
      {
        v95 = *(_QWORD *)(v0 + 336);
        v126 = *(_QWORD *)(v0 + 352);
        v129 = *(_QWORD *)(v0 + 344);
        v96 = swift_slowAlloc(22, -1);
        v135 = swift_slowAlloc(64, -1);
        v136[0] = v135;
        *(_DWORD *)v96 = 136446466;
        *(_QWORD *)(v0 + 144) = &type metadata for DownloadMusicItemAppIntent;
        v97 = sub_100007E8C(&qword_1011B49C8);
        v98 = String.init<A>(describing:)(v131, v97);
        v100 = v99;
        *(_QWORD *)(v0 + 152) = sub_100322200(v98, v99, v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160);
        v101 = swift_bridgeObjectRelease(v100);
        *(_WORD *)(v96 + 12) = 2082;
        ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v29)(v126, v94, v95, v101);
        v102 = String.init<A>(describing:)(v126, v95);
        v104 = v103;
        *(_QWORD *)(v0 + 160) = sub_100322200(v102, v103, v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v123);
        v105 = swift_bridgeObjectRelease(v104);
        v106 = *(void (**)(uint64_t, uint64_t, __n128))(v129 + 8);
        v106(v94, v95, v105);
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "%{public}s – unknown supported status %{public}s", (uint8_t *)v96, 0x16u);
        swift_arrayDestroy(v135, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v135, -1, -1);
        swift_slowDealloc(v96, -1, -1);
      }
      else
      {
        v106 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 344) + 8);
        ((void (*)(_QWORD, _QWORD))v106)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 336));
      }

      v108 = *(_QWORD *)(v0 + 368);
      v107 = *(_QWORD *)(v0 + 376);
      v109 = *(_QWORD *)(v0 + 336);
      v110 = sub_100452434();
      swift_allocError(&type metadata for DownloadMusicItemIntentError, v110, 0, 0);
      *v111 = 10;
      swift_willThrow(v112);
      v113 = swift_release();
      v106(v107, v109, v113);
      ((void (*)(uint64_t, uint64_t))v106)(v108, v109);
      v89 = (_QWORD *)(v0 + 16);
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v89);
  }
  else
  {
    v54 = *(_QWORD *)(v0 + 264);
    sub_10037DD4C((uint64_t)v1);
    v55 = swift_retain_n(v54, 2);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.error.getter(v56);
    v58 = os_log_type_enabled(v56, v57);
    v60 = *(_QWORD *)(v0 + 264);
    if (v58)
    {
      v61 = swift_slowAlloc(22, -1);
      v62 = swift_slowAlloc(64, -1);
      v136[0] = v62;
      *(_DWORD *)v61 = 136446466;
      *(_QWORD *)(v0 + 112) = &type metadata for DownloadMusicItemAppIntent;
      v63 = sub_100007E8C(&qword_1011B49C8);
      v64 = String.init<A>(describing:)(v0 + 112, v63);
      v66 = v65;
      *(_QWORD *)(v0 + 120) = sub_100322200(v64, v65, v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128);
      swift_bridgeObjectRelease(v66);
      *(_WORD *)(v61 + 12) = 2082;
      *(_QWORD *)(v0 + 128) = v60;
      swift_retain();
      v67 = String.init<A>(describing:)(v0 + 128, &type metadata for DownloadMusicItemAppIntent);
      v69 = v68;
      *(_QWORD *)(v0 + 136) = sub_100322200(v67, v68, v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v131);
      v70 = swift_bridgeObjectRelease(v69);
      swift_release_n(v60, 2, v70);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "%{public}s – unsupported type %{public}s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v61, -1, -1);
    }
    else
    {
      swift_release_n(*(_QWORD *)(v0 + 264), 2, v59);
    }

    v76 = sub_100452434();
    swift_allocError(&type metadata for DownloadMusicItemIntentError, v76, 0, 0);
    *v77 = 11;
    swift_willThrow(v78);
  }
  v114 = *(_QWORD *)(v0 + 400);
  v116 = *(_QWORD *)(v0 + 384);
  v115 = *(_QWORD *)(v0 + 392);
  v118 = *(_QWORD *)(v0 + 368);
  v117 = *(_QWORD *)(v0 + 376);
  v120 = *(_QWORD *)(v0 + 352);
  v119 = *(_QWORD *)(v0 + 360);
  v121 = *(_QWORD *)(v0 + 328);
  v122 = *(_QWORD *)(v0 + 304);
  v130 = *(_QWORD *)(v0 + 296);
  v133 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v130);
  swift_task_dealloc(v133);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004516D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 432);
  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1004518B0;
  else
    v3 = sub_100451734;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100451734()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD **)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 376);
  v11 = *(_QWORD *)(v0 + 400);
  v12 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 360);
  v14 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 336);
  v15 = *(_QWORD *)(v0 + 328);
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 288);
  IntentParameter.wrappedValue.getter(v1);
  v7 = sub_100725F20();
  sub_100078D8C((uint64_t)v1, v3);
  sub_100078D8C(v3, v2);
  IntentParameter.wrappedValue.setter(v2);
  sub_100078DD0(v3);
  sub_100078DD0((uint64_t)v1);
  *(_QWORD *)(v0 + 224) = v7;
  v8 = sub_100078E54();
  static IntentResult.result<A>(opensIntent:)(v0 + 224, &type metadata for OpenMusicItemAppIntent, v8);
  v9 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v9);
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v11);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004518B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];

  v1 = *(_QWORD *)(v0 + 440);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 440);
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v36[0] = v7;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 192) = &type metadata for DownloadMusicItemAppIntent;
    v8 = sub_100007E8C(&qword_1011B49C8);
    v9 = String.init<A>(describing:)(v0 + 192, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 200) = sub_100322200(v9, v10, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2082;
    *(_QWORD *)(v0 + 208) = v5;
    swift_errorRetain(v5);
    v12 = sub_100007E8C(&qword_1011A14B0);
    v13 = String.init<A>(describing:)(v0 + 208, v12);
    v15 = v14;
    *(_QWORD *)(v0 + 216) = sub_100322200(v13, v14, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s – error downloading item %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 440);
    swift_errorRelease(v16);
    swift_errorRelease(v16);
  }

  v17 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 376);
  v20 = *(_QWORD *)(v0 + 336);
  v19 = *(_QWORD *)(v0 + 344);
  v21 = sub_100452434();
  swift_allocError(&type metadata for DownloadMusicItemIntentError, v21, 0, 0);
  *v22 = 10;
  swift_willThrow(v23);
  swift_release();
  swift_errorRelease(v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  v24 = *(_QWORD *)(v0 + 400);
  v26 = *(_QWORD *)(v0 + 384);
  v25 = *(_QWORD *)(v0 + 392);
  v28 = *(_QWORD *)(v0 + 368);
  v27 = *(_QWORD *)(v0 + 376);
  v30 = *(_QWORD *)(v0 + 352);
  v29 = *(_QWORD *)(v0 + 360);
  v31 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 304);
  v34 = *(_QWORD *)(v0 + 296);
  v35 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100451B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.unsupportedType(_:))
    return 11;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.notAdded(_:))
    return 7;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.downloadUnavailable(_:))
    return 5;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.notDownloadable(_:))
    return 8;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.downloadWaiting(_:))
    return 6;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.downloadPaused(_:))
    return 4;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.downloadCancelled(_:))
    return 3;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.alreadyDownloading(_:))
    return 1;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.alreadyDownloaded(_:))
    return 0;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.sharedLibrary(_:))
    return 9;
  if (v6 == enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    return 2;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 10;
}

uint64_t sub_100451D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119C020 != -1)
    swift_once(&qword_10119C020, sub_100450A88);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124D010);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100451DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_100007E8C(&qword_1011B49D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B49D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, a1, a2);
  v10._countAndFlagsBits = 0x64616F6C6E776F44;
  v10._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100EBBAA0);
  v12 = sub_100007E8C(&qword_1011B49E0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_100451F34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1011B49BC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return sub_100450AE8(a1, v4);
}

uint64_t sub_100451F8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100452170();
  *a1 = result;
  return result;
}

uint64_t sub_100451FB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004523F0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for DownloadMusicItemAppIntent()
{
  return &type metadata for DownloadMusicItemAppIntent;
}

uint64_t sub_100451FE8()
{
  return sub_100049F28(&qword_1011B49A0, &qword_1011B49A8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100452014(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_100452030 + 4 * byte_100EBB990[a1]))();
}

uint64_t sub_100452030()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E3A560);
}

uint64_t sub_100452168()
{
  unsigned __int8 *v0;

  return sub_100452014(*v0);
}

uint64_t sub_100452170()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_100007E8C(&qword_10119ECC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011AEEF0);
  LocalizedStringResource.init(stringLiteral:)(0x744920636973754DLL, 0xEA00000000006D65);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x8000000100E3A370);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v19 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v8, 1, 1, v20);
  v21(v5, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v25);
  v22 = sub_10037DCC0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v18, v14, v11, v8, v5, v2, v22);
}

unint64_t sub_1004523F0()
{
  unint64_t result;

  result = qword_1011B49B0;
  if (!qword_1011B49B0)
  {
    result = swift_getWitnessTable(&unk_100EBB9A8, &type metadata for DownloadMusicItemAppIntent);
    atomic_store(result, &qword_1011B49B0);
  }
  return result;
}

unint64_t sub_100452434()
{
  unint64_t result;

  result = qword_1011B49C0;
  if (!qword_1011B49C0)
  {
    result = swift_getWitnessTable(&unk_100EBBB80, &type metadata for DownloadMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011B49C0);
  }
  return result;
}

uint64_t sub_100452478@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DownloadMusicItemIntentError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadMusicItemIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_10045257C + 4 * byte_100EBB9A1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1004525B0 + 4 * byte_100EBB99C[v4]))();
}

uint64_t sub_1004525B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004525B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004525C0);
  return result;
}

uint64_t sub_1004525CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004525D4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1004525D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004525E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadMusicItemIntentError()
{
  return &type metadata for DownloadMusicItemIntentError;
}

unint64_t sub_100452600()
{
  unint64_t result;

  result = qword_1011B49E8;
  if (!qword_1011B49E8)
  {
    result = swift_getWitnessTable(&unk_100EBBB58, &type metadata for DownloadMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011B49E8);
  }
  return result;
}

char *sub_100452644(char a1, char a2)
{
  _BYTE *v2;
  objc_class *v4;
  _UNKNOWN **v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t ObjectType;
  void *v19;
  void (*v20)(void *, uint64_t, uint64_t);
  id v21;
  id v22;
  char *v23;
  objc_super v25;

  v2[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutMode] = a1 & 1;
  if ((a1 & 1) != 0)
  {
    v4 = (objc_class *)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer();
    v5 = &off_1010C6650;
  }
  else
  {
    v4 = (objc_class *)type metadata accessor for LibraryArtistsContainerViewController.PlainLayoutContainer();
    v5 = &off_1010C66B8;
  }
  v6 = objc_allocWithZone(v4);
  v7 = v2;
  v8 = objc_msgSend(v6, "init");
  v9 = &v7[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer];
  *(_QWORD *)v9 = v8;
  *((_QWORD *)v9 + 1) = v5;
  v10 = objc_allocWithZone((Class)type metadata accessor for LibraryArtistsListViewController(0));
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_artistListViewController] = sub_1007D07B4(a2 & 1);

  v25.receiver = v7;
  v25.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController();
  v11 = (char *)objc_msgSendSuper2(&v25, "initWithNibName:bundle:", 0, 0);
  v12 = &v11[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer];
  v13 = *(void **)&v11[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer];
  v14 = v11;
  v15 = v13;
  UIViewController.add(_:)((UIViewController)v15);

  objc_msgSend(*(id *)v12, "didMoveToParentViewController:", v14);
  v16 = *(id *)v12;
  v17 = *((_QWORD *)v12 + 1);
  ObjectType = swift_getObjectType();
  v19 = *(void **)&v14[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_artistListViewController];
  v20 = *(void (**)(void *, uint64_t, uint64_t))(v17 + 32);
  v21 = v16;
  v22 = v19;
  v20(v19, ObjectType, v17);

  v23 = v14;
  UIViewController.playActivityFeatureIdentifier.setter(2u);

  return v23;
}

void sub_100452844(char a1)
{
  uint64_t v1;
  int v2;
  objc_class *v3;
  _UNKNOWN **v4;
  id v5;
  _QWORD *v6;
  objc_class *v7;
  uint64_t v8;
  UIViewController v9;
  id v10;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutMode);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutMode) = a1 & 1;
  if (((((a1 & 1) == 0) ^ v2) & 1) == 0)
  {
    if ((a1 & 1) != 0)
    {
      v3 = (objc_class *)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer();
      v4 = &off_1010C6650;
    }
    else
    {
      v3 = (objc_class *)type metadata accessor for LibraryArtistsContainerViewController.PlainLayoutContainer();
      v4 = &off_1010C66B8;
    }
    v5 = objc_msgSend(objc_allocWithZone(v3), "init");
    v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer);
    v7 = *(objc_class **)(v1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer);
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer + 8);
    *v6 = v5;
    v6[1] = v4;
    v10 = v5;
    v9.super.super.isa = v7;
    sub_100452FE4(v9, v8);

  }
}

void sub_100452910()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  objc_super v23;

  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController();
  objc_msgSendSuper2(&v23, "viewDidLoad");
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)6)
  {
LABEL_4:
    v6 = OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer;
    v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer], "view");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v0, "view");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "bounds");
        v12 = v11;
        v14 = v13;
        v16 = v15;
        v18 = v17;

        objc_msgSend(v8, "setFrame:", v12, v14, v16, v18);
        v19 = objc_msgSend(v0, "view");
        if (v19)
        {
          v20 = v19;
          v21 = objc_msgSend(*(id *)&v0[v6], "view");
          if (v21)
          {
            v22 = v21;
            objc_msgSend(v20, "addSubview:", v21);

            return;
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  v3 = objc_msgSend(v0, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

    goto LABEL_4;
  }
LABEL_13:
  __break(1u);
}

void sub_100452B20()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  unsigned int v14;
  id v15;
  void *v16;
  double v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  objc_super v33;
  _OWORD v34[2];
  char v35;

  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController();
  objc_msgSendSuper2(&v33, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = v1;
  objc_msgSend(v1, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v11 = objc_msgSend(v0, "tabBarController");
  if (!v11)
  {
LABEL_8:
    v22 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer], "view");
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v0, "view");
      if (v24)
      {
        v25 = v24;
        memset(v34, 0, sizeof(v34));
        v35 = 1;
        v26 = CGRect.applyingLayoutDirection(in:bounds:)(v24, v34, v4, v6, v8, v10);
        v28 = v27;
        v30 = v29;
        v32 = v31;

        objc_msgSend(v23, "setFrame:", v26, v28, v30, v32);
        return;
      }
      goto LABEL_13;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "_uip_sidebar");
  v14 = objc_msgSend(v13, "_isVisible");

  if (!v14)
  {

    goto LABEL_8;
  }
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v15;
  objc_msgSend(v15, "safeAreaInsets");
  v4 = v17;

  v18 = objc_msgSend(v0, "view");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "safeAreaInsets");
    v21 = v20;

    v8 = v8 - v21;
    goto LABEL_8;
  }
LABEL_15:
  __break(1u);
}

double sub_100452D64(void *a1)
{
  void *v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController();
  objc_msgSendSuper2(&v10, "didMoveToParentViewController:", a1);
  if (a1)
  {
    v4 = sub_100007E8C(&qword_1011A1750);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v5 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v5 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    v6 = swift_allocObject(&unk_1010C6788, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v1);
    v7 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v8 = a1;
    v9 = UIViewController.registerForTraitChanges<A>(_:handler:)(v5, sub_1004562E0, v6, v7);

    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease(v5);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100452E70(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  _BYTE v15[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v15, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "parentViewController");

    if (v7)
    {
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v8 = a1;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
      {
        swift_beginAccess(v4, &v14, 0, 0);
        v10 = swift_unknownObjectWeakLoadStrong(v4);
        if (v10)
        {
          v11 = (void *)v10;
          v12 = objc_msgSend(v8, "traitCollection");
          v13 = sub_100455CD0(v12);

          sub_100452844(v13 & 1);
        }
      }
    }
  }
}

void sub_100452FE4(UIViewController a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v6;
  objc_class *v7;
  uint64_t ObjectType;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(id);
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void (*v18)(void *, uint64_t, uint64_t);
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  char *v44;
  _QWORD v45[6];

  v3 = v2;
  v6 = &v2[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer];
  v7 = *(objc_class **)&v2[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer];
  ObjectType = swift_getObjectType();
  if (v7 != a1.super.super.isa)
  {
    v9 = ObjectType;
    v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(a2 + 32))(0, v9, a2);
    if (v10)
    {
      v45[0] = a1.super.super.isa;
      v11 = *(uint64_t (**)(id))(*(_QWORD *)(a2 + 16) + 24);
      v12 = v10;
      v13 = (void *)v11(v12);

    }
    UIViewController.remove(_:)(a1);
    v14 = *(id *)v6;
    v15 = *((_QWORD *)v6 + 1);
    v16 = swift_getObjectType();
    v17 = *(void **)&v3[OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_artistListViewController];
    v18 = *(void (**)(void *, uint64_t, uint64_t))(v15 + 32);
    v19 = v14;
    v20 = v17;
    v18(v17, v16, v15);

    v21 = *(id *)v6;
    UIViewController.add(_:)((UIViewController)v21);

    if (!objc_msgSend(v3, "isViewLoaded"))
      goto LABEL_10;
    v22 = objc_msgSend(*(id *)v6, "view");
    if (v22)
    {
      v23 = v22;
      objc_msgSend(v22, "setAutoresizingMask:", 18);

      v24 = objc_msgSend(*(id *)v6, "view");
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend(v3, "view");
        if (v26)
        {
          v27 = v26;
          objc_msgSend(v26, "bounds");
          v29 = v28;
          v31 = v30;
          v33 = v32;
          v35 = v34;

          objc_msgSend(v25, "setFrame:", v29, v31, v33, v35);
          v36 = objc_msgSend(v3, "view");
          if (v36)
          {
            v37 = v36;
            objc_msgSend(v36, "layoutIfNeeded");

LABEL_10:
            if (v10)
            {
              v38 = (void *)objc_opt_self(UIApplication);
              v39 = v10;
              v40 = objc_msgSend(v38, "sharedApplication");
              v41 = swift_allocObject(&unk_1010C6738, 32, 7);
              *(_QWORD *)(v41 + 16) = v3;
              *(_QWORD *)(v41 + 24) = v39;
              v45[4] = sub_1004562C0;
              v45[5] = v41;
              v45[0] = _NSConcreteStackBlock;
              v45[1] = 1107296256;
              v45[2] = sub_1001DBD98;
              v45[3] = &unk_1010C6750;
              v42 = _Block_copy(v45);
              v43 = v39;
              v44 = v3;
              objc_msgSend(v40, "_performBlockAfterCATransactionCommits:", v42, swift_release().n128_f64[0]);

              _Block_release(v42);
            }
            return;
          }
LABEL_16:
          __break(1u);
          return;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

void sub_1004532F8(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  id v10;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer + 8);
  ObjectType = swift_getObjectType(v4);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_artistListViewController);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 16);
  v10 = v4;
  v9(a2, v7, 0, ObjectType, v8);

}

id sub_1004533A4(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for LibraryArtistsContainerViewController);
}

uint64_t type metadata accessor for LibraryArtistsContainerViewController()
{
  return objc_opt_self(_TtC5Music37LibraryArtistsContainerViewController);
}

uint64_t sub_100453408()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t ObjectType;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC5Music37LibraryArtistsContainerViewController_layoutContainer);
  v2 = v1[1];
  ObjectType = swift_getObjectType(*v1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 8))(ObjectType);
}

void sub_1004535D4()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController.PlainLayoutContainer();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_artistListViewController];
    if (v1)
    {
      v2 = objc_msgSend(v1, "view");
      if (v2)
      {
        v3 = v2;
        v4 = objc_msgSend(v0, "view");
        if (v4)
        {
          v5 = v4;
          objc_msgSend(v4, "bounds");
          v7 = v6;
          v9 = v8;
          v11 = v10;
          v13 = v12;

          objc_msgSend(v3, "setFrame:", v7, v9, v11, v13);
          objc_msgSend(v3, "setAutoresizingMask:", 18);
          v14 = objc_msgSend(v0, "view");
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v14, "addSubview:", v3);

            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
    }
  }
}

void sub_100453748(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  __n128 v11;
  unint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  id v27;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_artistListViewController;
  v8 = *(void **)&v2[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_artistListViewController];
  if (!v8)
  {
    if (!a1)
      return;
LABEL_7:
    v9 = a1;
    UIViewController.remove(_:)((UIViewController)v9);

    v8 = *(void **)&v2[v7];
    if (!v8)
      return;
LABEL_8:
    v10 = v8;
    UIViewController.traitOverrides.getter(v11);
    v12 = sub_100455C84();
    dispatch thunk of UIMutableTraits.subscript.setter(0, &type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v12, v4, &protocol witness table for UITraitOverrides);
    UIViewController.traitOverrides.setter(v6);
    UIViewController.add(_:)((UIViewController)v10);
    if (!objc_msgSend(v2, "isViewLoaded"))
      goto LABEL_14;
    v13 = *(void **)&v2[v7];
    if (!v13)
      goto LABEL_14;
    v14 = objc_msgSend(v13, "view");
    if (!v14)
      goto LABEL_14;
    v15 = v14;
    v16 = objc_msgSend(v2, "view");
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v16, "bounds");
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;

      objc_msgSend(v15, "setFrame:", v19, v21, v23, v25);
      objc_msgSend(v15, "setAutoresizingMask:", 18);
      v26 = objc_msgSend(v2, "view");
      if (v26)
      {
        v27 = v26;
        objc_msgSend(v26, "addSubview:", v15);

        v10 = v27;
LABEL_14:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  if (!a1 || v8 != a1)
  {
    if (!a1)
      goto LABEL_8;
    goto LABEL_7;
  }
}

void sub_10045394C(void *a1, id a2, char a3)
{
  char *v3;
  char *v4;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  void *v21;
  Swift::Bool v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  id v33;
  Class isa;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;

  v4 = v3;
  v8 = objc_msgSend(v3, "navigationController");
  if (v8)
  {
    v9 = v8;
    v10 = *(void **)&v3[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_artistListViewController];
    if (a2)
    {
      if (!v10)
        goto LABEL_18;
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v11 = v10;
      v12 = a2;
      v13 = static NSObject.== infix(_:_:)(v12, v11);

      if ((v13 & 1) == 0)
        goto LABEL_18;
    }
    else
    {
      if (v10)
        goto LABEL_18;
      v14 = 0;
    }
    v40 = a3;
    v15 = objc_msgSend(v9, "viewControllers");
    v41 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v41);

    if ((unint64_t)v16 >> 62)
      goto LABEL_31;
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v4;
    if (v17)
    {
LABEL_10:
      v19 = 0;
      while (1)
      {
        v20 = (v16 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v16)
            : *(id *)(v16 + 8 * v19 + 32);
        v21 = v20;
        v22 = UIViewController.isDescendant(of:)((UIViewController)v20);

        if (v22)
          break;
        v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
          __break(1u);
LABEL_31:
          if (v16 < 0)
            v35 = v16;
          else
            v35 = v16 & 0xFFFFFFFFFFFFFF8;
          v36 = v4;
          swift_bridgeObjectRetain();
          v17 = _CocoaArrayWrapper.endIndex.getter(v35);
          swift_bridgeObjectRelease(v16);
          if (!v17)
            goto LABEL_17;
          goto LABEL_10;
        }
        ++v19;
        if (v23 == v17)
          goto LABEL_17;
      }
      swift_bridgeObjectRelease(v16);

      v24 = type metadata accessor for LibraryArtistDetailViewController(0);
      v25 = swift_dynamicCastClass(a1, v24);
      if (!v25)
        goto LABEL_18;
      v26 = v25;
      v27 = *(void **)&v4[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_navigatedArtistDetailViewController];
      *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_navigatedArtistDetailViewController] = v25;
      v28 = a1;

      v29 = objc_msgSend(v9, "viewControllers");
      v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v41);

      if ((unint64_t)v30 >> 62)
      {
        if (v30 < 0)
          v37 = v30;
        else
          v37 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v31 = _CocoaArrayWrapper.endIndex.getter(v37);
        swift_bridgeObjectRelease(v30);
      }
      else
      {
        v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)&v32 = swift_bridgeObjectRelease(v30).n128_u64[0];
      if (__OFSUB__(v31, 1))
      {
        __break(1u);
      }
      else
      {
        if (v19 >= v31 - 1)
        {
          objc_msgSend(v9, "navigateTo:from:animated:", v28, a2, v40 & 1, v32);

          goto LABEL_29;
        }
        a2 = (id)v28;
        v33 = objc_msgSend(v9, "viewControllers");
        v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v41);

        v42 = v28;
        if (!((unint64_t)v28 >> 62))
        {
          if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10) > v19)
          {
LABEL_27:
            sub_1001FD730(v19 + 1, v19 + 1, v26);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v9, "setViewControllers:", isa, swift_bridgeObjectRelease(v42).n128_f64[0]);

LABEL_29:
            return;
          }
LABEL_45:
          __break(1u);
          return;
        }
      }
      if (v28 < 0)
        v38 = v28;
      else
        v38 = v28 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v39 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v28);
      if (v39 > v19)
        goto LABEL_27;
      goto LABEL_45;
    }
LABEL_17:
    swift_bridgeObjectRelease(v16);

LABEL_18:
  }
}

id sub_100453CF8(void *a1, char a2)
{
  char *v2;
  char *v3;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  void *v13;
  id v14;

  v3 = v2;
  v6 = objc_msgSend(v3, "navigationController");
  if (!v6)
    return 0;
  v7 = v6;
  v8 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_navigatedArtistDetailViewController;
  v9 = *(void **)&v3[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_navigatedArtistDetailViewController];
  if (!v9
    || (sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr),
        v10 = v9,
        v11 = a1,
        v12 = static NSObject.== infix(_:_:)(v11, v10),
        v11,
        v10,
        (v12 & 1) == 0))
  {

    return 0;
  }
  v13 = *(void **)&v3[v8];
  *(_QWORD *)&v3[v8] = 0;

  v14 = objc_msgSend(v7, "drop:animated:", v11, a2 & 1);
  return v14;
}

id sub_100453E00()
{
  return sub_10004D23C(0, type metadata accessor for LibraryArtistsContainerViewController.PlainLayoutContainer);
}

uint64_t type metadata accessor for LibraryArtistsContainerViewController.PlainLayoutContainer()
{
  return objc_opt_self(_TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer);
}

void sub_100453E68(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100455B74(a1, a2, a3, &OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_artistListViewController, sub_100453748);
}

void *sub_100453E7C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F20PlainLayoutContainer_navigatedArtistDetailViewController);
  v2 = v1;
  return v1;
}

uint64_t sub_100453EA8(void *a1, void *a2, char a3)
{
  char v3;

  sub_10045394C(a1, a2, a3);
  return v3 & 1;
}

id sub_100453ECC(void *a1, char a2)
{
  return sub_100453CF8(a1, a2);
}

id sub_100453EEC()
{
  id *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(*v0, "navigationController");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "navigationBar");

  return v3;
}

id sub_100453F4C()
{
  char *v0;
  id v1;
  id v2;
  const void *v3;
  Class isa;
  objc_super v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_artistListViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer____lazy_storage___verticalSeparator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController] = 0;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer();
  v1 = objc_msgSendSuper2(&v6, "initWithNibName:bundle:", 0, 0);
  v2 = objc_msgSend(v1, "navigationItem");
  if ((sub_1008EBAC8() & 1) == 0)
  {
    if (qword_10119C9E0 != -1)
      swift_once(&qword_10119C9E0, sub_1008EC840);
    v3 = (const void *)qword_1011CF408;
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    objc_setAssociatedObject(v2, v3, isa, (void *)3);

    sub_1008EC640();
  }

  return v1;
}

void sub_10045410C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  __n128 v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;

  v2 = v1;
  v4 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v2
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_artistListViewController);
  if (v7)
  {
    if (!a1 || v7 != a1)
    {
      v8 = v7;
      UIViewController.traitOverrides.getter(v9);
      v10 = sub_100455C84();
      dispatch thunk of UIMutableTraits.subscript.setter(1, &type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v10, v4, &protocol witness table for UITraitOverrides);
      UIViewController.traitOverrides.setter(v6);
      v11 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011B4B48));
      v12 = v8;
      v13 = sub_100455464(v12, &qword_1011B4B48);
      v14 = *(void **)(v2
                     + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController);
      *(_QWORD *)(v2
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController) = v13;
      v15 = v13;
      sub_100454D30(v14);

    }
  }
  else if (a1)
  {
    v18 = *(id *)(v2
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController);
    v16 = v18;
    *(_QWORD *)(v2
              + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController) = 0;
    sub_100454D30(v16);

  }
}

void sub_10045427C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (!v3)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v4 = v3;
    v5 = objc_msgSend(v2, "view");
    if (!v5)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    v6 = v5;
    objc_msgSend(v4, "addSubview:", v5);

  }
  v7 = *(void **)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController];
  if (!v7)
  {
LABEL_9:
    v13 = objc_msgSend(v0, "view");
    if (v13)
    {
      v14 = v13;
      v15 = sub_100454C80();
      objc_msgSend(v14, "addSubview:", v15);

      return;
    }
    __break(1u);
    goto LABEL_12;
  }
  v8 = v7;
  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v9;
  v11 = objc_msgSend(v8, "view");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v10, "addSubview:", v11);

    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
}

void sub_10045442C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  char v29[24];
  objc_super v30;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v29[-v12 - 8];
  v14 = (objc_class *)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer();
  v30.receiver = v2;
  v30.super_class = v14;
  objc_msgSendSuper2(&v30, "viewWillAppear:", a1 & 1);
  v15 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_artistListViewController;
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_artistListViewController];
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_5;
  }
  v17 = v16 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist;
  swift_beginAccess(v16 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist, v29, 0, 0);
  sub_10004A160(v17, (uint64_t)v6, (uint64_t *)&unk_1011A3FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_5:
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3FB0);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v18 = v2;
  v19 = objc_msgSend(v18, "traitCollection");
  v20 = sub_10018D478();
  UITraitCollection.subscript.getter(&v28, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v20);

  v21 = v28;
  v22 = sub_1007607C4(v28);
  swift_bridgeObjectRelease(v21);
  v23 = objc_allocWithZone((Class)type metadata accessor for LibraryArtistDetailViewController(0));
  sub_10016DB0C((uint64_t)v10, v22 & 1);
  v25 = v24;
  v26 = *(void **)&v2[v15];
  v27 = v26;
  sub_1000E4FCC((uint64_t)v25, v26, 0, v18);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_6:
  sub_10045507C();
}

void sub_1004546D4()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  id v36;
  void *v37;
  double v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  double MaxX;
  id v50;
  void *v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  double MinY;
  id v61;
  double v62;
  double v63;
  id v64;
  void *v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double Height;
  id v75;
  void *v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  void *v85;
  id v86;
  double v87;
  double v88;
  double v89;
  double v90;
  __int128 v91;
  __int128 v92;
  double v93;
  double v94;
  double v95;
  double v96;
  objc_super v97;
  _OWORD v98[2];
  char v99;
  _OWORD v100[2];
  char v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;

  v97.receiver = v0;
  v97.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer();
  objc_msgSendSuper2(&v97, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_16;
  }
  v2 = v1;
  objc_msgSend(v1, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  sub_100454B34((uint64_t)&v91, v4, v6, v8, v10);
  v11 = *((double *)&v91 + 1);
  v12 = *(double *)&v91;
  v14 = *((double *)&v92 + 1);
  v13 = *(double *)&v92;
  v15 = v93;
  v16 = v94;
  v17 = v95;
  v90 = v96;
  v18 = *(void **)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController];
  if (v18)
  {
    v19 = objc_msgSend(v18, "view");
    if (!v19)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v20 = v19;
    v87 = v17;
    v88 = v16;
    v89 = v15;
    v21 = objc_msgSend(v0, "view");
    if (!v21)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    v22 = v21;
    v91 = 0u;
    v92 = 0u;
    LOBYTE(v93) = 1;
    v23 = CGRect.applyingLayoutDirection(in:bounds:)(v21, &v91, v12, v11, v13, v14);
    v24 = v14;
    v25 = v13;
    v26 = v11;
    v27 = v12;
    v29 = v28;
    v31 = v30;
    v33 = v32;

    v34 = v29;
    v12 = v27;
    v11 = v26;
    v13 = v25;
    v14 = v24;
    objc_msgSend(v20, "setFrame:", v23, v34, v31, v33);

    v16 = v88;
    v15 = v89;
    v17 = v87;
  }
  v35 = *(void **)&v0[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController];
  if (!v35)
  {
LABEL_10:
    v48 = sub_100454C80();
    v102.origin.x = v12;
    v102.origin.y = v11;
    v102.size.width = v13;
    v102.size.height = v14;
    MaxX = CGRectGetMaxX(v102);
    v50 = objc_msgSend(v0, "view");
    if (v50)
    {
      v51 = v50;
      objc_msgSend(v50, "bounds");
      v53 = v52;
      v55 = v54;
      v57 = v56;
      v59 = v58;

      v103.origin.x = v53;
      v103.origin.y = v55;
      v103.size.width = v57;
      v103.size.height = v59;
      MinY = CGRectGetMinY(v103);
      v61 = objc_msgSend(v0, "traitCollection");
      objc_msgSend(v61, "displayScale");
      v63 = v62;

      v64 = objc_msgSend(v0, "view");
      if (v64)
      {
        v65 = v64;
        objc_msgSend(v64, "bounds");
        v67 = v66;
        v69 = v68;
        v71 = v70;
        v73 = v72;

        v104.origin.x = v67;
        v104.origin.y = v69;
        v104.size.width = v71;
        v104.size.height = v73;
        Height = CGRectGetHeight(v104);
        v75 = objc_msgSend(v0, "view");
        if (v75)
        {
          v76 = v75;
          memset(v98, 0, sizeof(v98));
          v99 = 1;
          v77 = CGRect.applyingLayoutDirection(in:bounds:)(v75, v98, MaxX, MinY, 1.0 / v63, Height);
          v79 = v78;
          v81 = v80;
          v83 = v82;

          objc_msgSend(v48, "setFrame:", v77, v79, v81, v83);
          v84 = objc_msgSend(v0, "view");
          if (v84)
          {
            v85 = v84;
            v86 = sub_100454C80();
            objc_msgSend(v85, "bringSubviewToFront:", v86);

            return;
          }
          goto LABEL_19;
        }
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v36 = objc_msgSend(v35, "view");
  if (!v36)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v37 = v36;
  v38 = v12;
  v39 = objc_msgSend(v0, "view");
  if (v39)
  {
    v40 = v39;
    memset(v100, 0, sizeof(v100));
    v101 = 1;
    v41 = CGRect.applyingLayoutDirection(in:bounds:)(v39, v100, v15, v16, v17, v90);
    v43 = v42;
    v45 = v44;
    v47 = v46;

    objc_msgSend(v37, "setFrame:", v41, v43, v45, v47);
    v12 = v38;
    goto LABEL_10;
  }
LABEL_23:
  __break(1u);
}

void sub_100454B34(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  void *v5;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  CGFloat v19;
  CGPoint origin;
  CGSize size;
  CGSize v22;
  CGRect v23;
  CGRect slice;
  CGRect v25;

  v11 = CGRectGetWidth(*(CGRect *)&a2) * 0.5;
  v12 = objc_msgSend(v5, "traitCollection");
  objc_msgSend(v12, "displayScale");
  v14 = v13;

  v15 = CGFloat.floorValue(scale:)(v14, v11);
  v16 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v16, "scaledValueForValue:", 600.0);
  v18 = v17;

  if (v18 >= v15)
    v19 = v15;
  else
    v19 = v18;
  memset(&slice, 0, sizeof(slice));
  memset(&v23, 0, sizeof(v23));
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  CGRectDivide(v25, &slice, &v23, v19, CGRectMinXEdge);
  origin = v23.origin;
  size = v23.size;
  v22 = slice.size;
  *(CGPoint *)a1 = slice.origin;
  *(CGSize *)(a1 + 16) = v22;
  *(CGPoint *)(a1 + 32) = origin;
  *(CGSize *)(a1 + 48) = size;
}

id sub_100454C80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer____lazy_storage___verticalSeparator;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer____lazy_storage___verticalSeparator);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer____lazy_storage___verticalSeparator);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_100454D30(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  id v12;
  __n128 v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  id v18;

  v2 = v1;
  v4 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController;
  v8 = *(void **)(v1
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController);
  if (!v8)
  {
    if (!a1)
      return;
    goto LABEL_6;
  }
  if (a1)
  {
    sub_100007E8C(&qword_1011B4B48);
    a1 = a1;
    v9 = v8;
    v10 = static NSObject.== infix(_:_:)(v9, a1);

    if ((v10 & 1) != 0)
      return;
LABEL_6:
    v11 = a1;
    UIViewController.remove(_:)((UIViewController)v11);

    v8 = *(void **)(v2 + v7);
    if (!v8)
    {
      v18 = *(id *)(v2
                  + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController);
      v16 = v18;
      *(_QWORD *)(v2
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController) = 0;
      sub_100454EF4(v16);

      return;
    }
  }
  v12 = v8;
  UIViewController.traitOverrides.getter(v13);
  UIMutableTraits.horizontalSizeClass.setter(1, v4, &protocol witness table for UITraitOverrides);
  UIViewController.traitOverrides.setter(v6);
  UIViewController.add(_:)((UIViewController)v12);
  v14 = objc_msgSend(v12, "navigationBar");
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "_setBackdropViewLayerGroupName:", v15);

}

void sub_100454EF4(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  id v12;
  __n128 v13;
  id v14;
  NSString v15;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController;
  v8 = *(void **)(v1
                + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController);
  if (!v8)
  {
    if (!a1)
      return;
    goto LABEL_6;
  }
  if (!a1)
  {
LABEL_7:
    v12 = v8;
    UIViewController.traitOverrides.getter(v13);
    UIMutableTraits.horizontalSizeClass.setter(1, v4, &protocol witness table for UITraitOverrides);
    UIViewController.traitOverrides.setter(v6);
    UIViewController.add(_:)((UIViewController)v12);
    v14 = objc_msgSend(v12, "navigationBar");
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "_setBackdropViewLayerGroupName:", v15);

    return;
  }
  sub_100007E8C(&qword_1011B4B50);
  a1 = a1;
  v9 = v8;
  v10 = static NSObject.== infix(_:_:)(v9, a1);

  if ((v10 & 1) == 0)
  {
LABEL_6:
    v11 = a1;
    UIViewController.remove(_:)((UIViewController)v11);

    v8 = *(void **)(v2 + v7);
    if (!v8)
      return;
    goto LABEL_7;
  }
}

void sub_10045507C()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  double v10;
  BOOL v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  Swift::String_optional v23;
  UIBarButtonItem v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  UIImage_optional v30;
  UIAction_optional v31;
  UIMenu_optional v32;

  v1 = (uint64_t)v0;
  v2 = objc_msgSend(v0, "navigationController");
  if (v2)
  {
    v29 = v2;
    v3 = objc_msgSend(v2, "viewControllers");
    v4 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    sub_1008AB03C(v1, v5);
    v7 = v6;
    v9 = v8;
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
    if ((v9 & 1) != 0 || (v11 = v7 < 1, v12 = v7 - 1, v11))
    {
      v27 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController);
      if (!v27)
      {
        v28 = v29;
LABEL_18:

        return;
      }
      v24.super.super.isa = (Class)objc_msgSend(*(id *)(v27 + qword_1011B4AB0), "navigationItem", v10);
      -[objc_class setLeftBarButtonItem:](v24.super.super.isa, "setLeftBarButtonItem:", 0);
      v16 = v29;
LABEL_17:

      v28 = v16;
      goto LABEL_18;
    }
    v13 = objc_msgSend(v29, "viewControllers", v10);
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v4);

    if ((v14 & 0xC000000000000001) != 0)
    {
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v14);
LABEL_7:
      v16 = v15;
      v17 = objc_msgSend(v15, "navigationItem", swift_bridgeObjectRelease(v14).n128_f64[0]);
      v18 = objc_msgSend(v17, "backButtonTitle");

      if (v18 || (v18 = objc_msgSend(v16, "title")) != 0)
      {
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

      }
      else
      {
        v19 = 0;
        v21 = 0;
      }
      sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v22 = swift_allocObject(&unk_1010C6710, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16, v1);
      v30.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10045628C, v22);
      v23.value._countAndFlagsBits = v19;
      v23.value._object = v21;
      v30.value.super.isa = 0;
      v31.value.super.super.isa = 0;
      v24.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v23, v30, v31, v32).super.super.isa;
      -[objc_class _setShowsBackButtonIndicator:](v24.super.super.isa, "_setShowsBackButtonIndicator:", 1);
      v25 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController);
      if (v25)
      {
        v26 = objc_msgSend(*(id *)(v25 + qword_1011B4AB0), "navigationItem");
        v24.super.super.isa = v24.super.super.isa;
        objc_msgSend(v26, "setLeftBarButtonItem:", v24.super.super.isa);

      }
      else
      {

      }
      goto LABEL_17;
    }
    if (v12 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v15 = *(id *)(v14 + 8 * v12 + 32);
      goto LABEL_7;
    }
    __break(1u);
  }
}

void sub_1004553D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "navigationController");

    if (v5)
    {
      v6 = objc_msgSend(v5, "popViewControllerAnimated:", 1);

    }
  }
}

id sub_100455464(void *a1, uint64_t *a2)
{
  char *v2;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  Class isa;
  uint64_t v15;
  objc_super v16;

  *(_QWORD *)&v2[qword_1011B4AB0] = a1;
  type metadata accessor for NavigationBar();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = a1;
  v16.receiver = v2;
  v16.super_class = (Class)sub_100007E8C(a2);
  v7 = objc_msgSendSuper2(&v16, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, 0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v9 + 32) = v6;
  v15 = v9;
  specialized Array._endMutation()(v9);
  sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v10 = v7;
  v11 = v6;
  v12 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "setViewControllers:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  return v12;
}

void sub_10045558C()
{
  sub_1004561E4();
}

uint64_t sub_1004555B8(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_1004555D0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  _BYTE v9[24];
  uint64_t v10;

  sub_10004A160(a2, (uint64_t)v9, &qword_10119DCC0);
  if (v10)
  {
    v4 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v5 = v2;
    if (swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, v4, 6))
      v6 = v8;
    else
      v6 = 0;
  }
  else
  {
    v7 = v2;
    sub_10004FF60((uint64_t)v9, &qword_10119DCC0);
    v6 = 0;
  }
  sub_1000E4FCC(a1, v6, 1, v2);

}

uint64_t sub_1004556A0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _OWORD v14[2];

  if (a4)
  {
    v7 = a3;
    v8 = a1;
    v10 = swift_unknownObjectRetain(a4, v9);
    _bridgeAnyObjectToAny(_:)(v14, v10);
    swift_unknownObjectRelease(a4);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
    v11 = a3;
    v12 = a1;
  }
  sub_1004555D0((uint64_t)a3, (uint64_t)v14);

  return sub_10004FF60((uint64_t)v14, &qword_10119DCC0);
}

id sub_100455730(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v4 = v3;
  v8 = *v4;
  v9 = swift_isaMask;
  v10 = objc_msgSend(v4, "viewControllers");
  v11 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v18 = v12;
    else
      v18 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v12);
  if (v13)
    return 0;
  v15 = *(_QWORD *)((v9 & v8) + 0x1F8);
  result = (id)swift_dynamicCastUnknownClass(a1, v15);
  if (result)
  {
    v19.receiver = v4;
    v19.super_class = (Class)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer.DummyNavigationController(0, v15, v16, v17);
    return objc_msgSendSuper2(&v19, "navigateTo:from:animated:", a1, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_100455864(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  id v8;
  id v9;
  id v10;
  unsigned __int8 v11;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  v11 = sub_100455730((uint64_t)v8, (uint64_t)a4, a5);

  return v11 & 1;
}

id sub_1004558D8()
{
  return 0;
}

void sub_1004558E0()
{
  sub_10045623C();
}

void sub_1004558FC()
{
  uint64_t v0;

}

id sub_10045590C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer.DummyNavigationController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x1F8), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100455958(uint64_t a1)
{

}

id sub_100455978()
{
  return sub_10004D23C(0, type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer);
}

uint64_t type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer()
{
  return objc_opt_self(_TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer);
}

uint64_t sub_100455A00(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 512);
}

uint64_t type metadata accessor for LibraryArtistsContainerViewController.SplayedLayoutContainer.DummyNavigationController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryArtistsContainerViewController.SplayedLayoutContainer.DummyNavigationController);
}

uint64_t storeEnumTagSinglePayload for LibraryArtistsContainerViewController.LayoutMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100455A98 + 4 * byte_100EBBBC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100455ACC + 4 * byte_100EBBBC0[v4]))();
}

uint64_t sub_100455ACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100455AD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100455ADCLL);
  return result;
}

uint64_t sub_100455AE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100455AF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100455AF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100455AFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryArtistsContainerViewController.LayoutMode()
{
  return &type metadata for LibraryArtistsContainerViewController.LayoutMode;
}

unint64_t sub_100455B1C()
{
  unint64_t result;

  result = qword_1011B4B38;
  if (!qword_1011B4B38)
  {
    result = swift_getWitnessTable(&unk_100EBBCCC, &type metadata for LibraryArtistsContainerViewController.LayoutMode);
    atomic_store(result, (unint64_t *)&qword_1011B4B38);
  }
  return result;
}

void sub_100455B60(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100455B74(a1, a2, a3, &OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_artistListViewController, sub_10045410C);
}

void sub_100455B74(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(void *))
{
  uint64_t v5;
  void *v7;
  id v8;

  v7 = *(void **)(v5 + *a4);
  *(_QWORD *)(v5 + *a4) = a1;
  v8 = a1;
  a5(v7);

}

void *sub_100455BC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController);
  if (!v1)
    return 0;
  v2 = *(void **)(v1 + qword_1011B4AB0);
  v3 = v2;
  return v2;
}

uint64_t sub_100455C08(void *a1, void *a2)
{
  return sub_100455E04(a1, a2) & 1;
}

void *sub_100455C2C(void *a1)
{
  return sub_1004560F0(a1);
}

id sub_100455C4C()
{
  _QWORD *v0;
  id result;

  result = *(id *)(*v0
                 + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_leftViewController);
  if (result)
    return objc_msgSend(result, "navigationBar");
  return result;
}

unint64_t sub_100455C84()
{
  unint64_t result;

  result = qword_1011B4B40;
  if (!qword_1011B4B40)
  {
    result = swift_getWitnessTable(&unk_100EBBDC4, &type metadata for SplayedLayoutTrait);
    atomic_store(result, (unint64_t *)&qword_1011B4B40);
  }
  return result;
}

uint64_t sub_100455CD0(void *a1)
{
  unint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v13;

  if ((UITraitCollection.legacyLibraryFilter.getter().rawValue & 2) == 0)
  {
    v2 = sub_10018D478();
    UITraitCollection.subscript.getter(&v13, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v2);
    v3 = v13;
    v4 = sub_1007607C4(v13);
    swift_bridgeObjectRelease(v3);
    if ((v4 & 1) == 0)
    {
      v5 = UITraitCollection.mediaLibrary.getter();
      v6 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
      if (v6)
      {
        v7 = v6;
        sub_10004A07C(0, (unint64_t *)&qword_1011A9920, MPMediaLibrary_ptr);
        v8 = v5;
        v9 = static NSObject.== infix(_:_:)(v8, v7);

        if ((v9 & 1) != 0)
        {
          if (objc_msgSend(a1, "horizontalSizeClass") == (id)2)
            return 1;
          v10 = sub_100354868();
          if (v11 != 5 && !v10)
            return 1;
        }
      }
      else
      {

      }
    }
  }
  return 0;
}

uint64_t sub_100455E04(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t result;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];
  char v43[24];

  v3 = v2;
  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - v11;
  v13 = *(void **)&v3[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_artistListViewController];
  if (!a2)
  {
    if (!v13)
    {
      v18 = 0;
      goto LABEL_8;
    }
    return 0;
  }
  if (!v13)
    return 0;
  sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v14 = v13;
  v15 = a2;
  v16 = static NSObject.== infix(_:_:)(v15, v14);

  if ((v16 & 1) == 0)
    return 0;
LABEL_8:
  objc_msgSend(v3, "loadViewIfNeeded");
  v19 = type metadata accessor for LibraryArtistDetailViewController(0);
  result = swift_dynamicCastClass(a1, v19);
  if (!result)
    return result;
  v20 = (char *)result;
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController];
  v41 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController;
  if (v21)
  {
    v22 = *(_QWORD *)(v21 + qword_1011B4AB0) + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist;
    v23 = swift_beginAccess(v22, v43, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v12, v22, v6, v23);
    v24 = Artist.id.getter(a1);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    v27 = a1;
    v24 = 0;
    v26 = 0;
  }
  v28 = &v20[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
  v29 = swift_beginAccess(&v20[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist], v42, 0, 0);
  v30 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v29);
  v31 = Artist.id.getter(v30);
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v26)
  {
    swift_bridgeObjectRelease(v33);
    goto LABEL_19;
  }
  if (v24 != v31 || v26 != v33)
  {
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v31, v33, 0);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v33);
    if ((v34 & 1) != 0)
    {

      return 1;
    }
LABEL_19:
    v35 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011B4B50));
    v36 = a1;
    v37 = sub_100455464(v20, &qword_1011B4B50);
    v38 = *(void **)&v3[v41];
    *(_QWORD *)&v3[v41] = v37;
    v39 = v37;
    sub_100454EF4(v38);

    return 1;
  }

  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v33);
  return 1;
}

void *sub_1004560F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;
  id v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  void *v14;
  void *v15;
  id v16;

  v2 = OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController;
  v3 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtCC5Music37LibraryArtistsContainerViewControllerP33_CE2A41BFB64A7DDBA59CF94A5FD1A01F22SplayedLayoutContainer_rightViewController);
  if (!v3)
    return 0;
  v4 = v1;
  v6 = *(void **)(v3 + qword_1011B4AB0);
  sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v7 = v6;
  v8 = a1;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  if ((v9 & 1) == 0)
  {
    v10 = *(void **)(v1 + v2);
    if (!v10)
      return 0;
    v11 = v8;
    v12 = v10;
    v13 = static NSObject.== infix(_:_:)(v11, v12);

    if ((v13 & 1) == 0)
      return 0;
  }
  v14 = *(void **)(v4 + v2);
  *(_QWORD *)(v4 + v2) = 0;
  sub_100454EF4(v14);

  v15 = *(void **)(v4 + v2);
  if (v15)
    v16 = v15;
  return v15;
}

void sub_1004561E4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LibraryArtistsContainerViewController.swift", 49, 2, 399, 0);
  __break(1u);
}

void sub_10045623C()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.DummyNavigationController", 31, "init(navigationBarClass:toolbarClass:)", 38, 0);
  __break(1u);
}

uint64_t sub_100456268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10045628C(uint64_t a1)
{
  uint64_t v1;

  sub_1004553D4(a1, v1);
}

uint64_t sub_100456294()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004562C0()
{
  uint64_t v0;

  sub_1004532F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004562C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004562D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1004562E0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100452E70(a1, a2, v2);
}

ValueMetadata *type metadata accessor for SplayedLayoutTrait()
{
  return &type metadata for SplayedLayoutTrait;
}

uint64_t sub_1004562FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100007E8C(&qword_1011A3990);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for RecentlyAddedMusicItem(0);
  v6 = sub_100048748(&qword_1011A3998, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, v6);
  v7 = sub_100049F28(&qword_1011A39A0, &qword_1011A3990, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v8 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

unint64_t sub_1004563F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v24 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(int *)(v6 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(v3 + v10);
    v13 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    *v11 = *v12;
    if (EnumCaseMultiPayload == 1)
    {
      v75 = v13;
      v76 = v3;
      v77 = v6;
      v15 = (int *)type metadata accessor for Library.Context(0);
      v16 = v15[5];
      v17 = (char *)v11 + v16;
      v18 = (char *)v12 + v16;
      v19 = type metadata accessor for Album(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
      v22 = swift_retain();
      if (v21(v18, 1, v19, v22))
      {
        v23 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v26 = v15[6];
      v27 = (char *)v11 + v26;
      v28 = (char *)v12 + v26;
      v29 = type metadata accessor for Artist(0);
      v30 = *(_QWORD *)(v29 - 8);
      v3 = v76;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v15[7];
      v33 = (char *)v11 + v32;
      v34 = (char *)v12 + v32;
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v15[8];
      v39 = (char *)v11 + v38;
      v40 = (char *)v12 + v38;
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v15[9];
      v45 = (char *)v11 + v44;
      v46 = (char *)v12 + v44;
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v15[10];
      v51 = (char *)v11 + v50;
      v52 = (char *)v12 + v50;
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v15[11];
      v57 = (char *)v11 + v56;
      v58 = (char *)v12 + v56;
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      v6 = v77;
      *((_BYTE *)v11 + v15[12]) = *((_BYTE *)v12 + v15[12]);
      *((_BYTE *)v11 + v15[13]) = *((_BYTE *)v12 + v15[13]);
      *((_BYTE *)v11 + v15[14]) = *((_BYTE *)v12 + v15[14]);
      v62 = v15[15];
      v63 = (_QWORD *)((char *)v11 + v62);
      v64 = (_QWORD *)((char *)v12 + v62);
      v65 = v64[1];
      *v63 = *v64;
      v63[1] = v65;
      *(_QWORD *)((char *)v11 + v15[16]) = *(_QWORD *)((char *)v12 + v15[16]);
      *((_BYTE *)v11 + v15[17]) = *((_BYTE *)v12 + v15[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = 1;
      v13 = v75;
    }
    else
    {
      swift_retain();
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v25);
    v66 = *(int *)(v6 + 24);
    v67 = (_QWORD *)(a1 + v66);
    v68 = (_QWORD *)(v3 + v66);
    v69 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v68, v69) == 1)
    {
      v70 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v67, v68, v70);
      v71 = v67;
      v72 = v69;
      v73 = 1;
    }
    else
    {
      *v67 = *v68;
      swift_retain();
      v71 = v67;
      v72 = v69;
      v73 = 0;
    }
    swift_storeEnumTagMultiPayload(v71, v72, v73);
  }
  return a1;
}

double sub_100456988(uint64_t *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  double result;

  sub_1000A6174(*a1, a1[1]);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = &v4[v7[5]];
    v9 = type metadata accessor for Album(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = &v4[v7[6]];
    v12 = type metadata accessor for Artist(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    v14 = &v4[v7[7]];
    v15 = type metadata accessor for Composer(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    v17 = &v4[v7[8]];
    v18 = type metadata accessor for Genre(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    v20 = &v4[v7[9]];
    v21 = type metadata accessor for Playlist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
    v23 = &v4[v7[10]];
    v24 = type metadata accessor for TVShow(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    v26 = &v4[v7[11]];
    v27 = type metadata accessor for TVSeason(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[v7[15] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[v7[16]]);
  }
  v29 = (char *)a1 + *(int *)(a2 + 24);
  v30 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
  {
    v31 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v29, v31);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100456C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(v4 + v9);
  v12 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  *v10 = *v11;
  if (EnumCaseMultiPayload == 1)
  {
    v71 = v12;
    v72 = a3;
    v73 = v4;
    v14 = (int *)type metadata accessor for Library.Context(0);
    v15 = v14[5];
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = type metadata accessor for Album(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v19 + 48);
    v21 = swift_retain();
    if (v20(v17, 1, v18, v21))
    {
      v22 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v24 = v14[6];
    v25 = (char *)v10 + v24;
    v26 = (char *)v11 + v24;
    v27 = type metadata accessor for Artist(0);
    v28 = *(_QWORD *)(v27 - 8);
    v4 = v73;
    v12 = v71;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v30 = v14[7];
    v31 = (char *)v10 + v30;
    v32 = (char *)v11 + v30;
    v33 = type metadata accessor for Composer(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v36 = v14[8];
    v37 = (char *)v10 + v36;
    v38 = (char *)v11 + v36;
    v39 = type metadata accessor for Genre(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_100007E8C(&qword_10119ED08);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v42 = v14[9];
    v43 = (char *)v10 + v42;
    v44 = (char *)v11 + v42;
    v45 = type metadata accessor for Playlist(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v48 = v14[10];
    v49 = (char *)v10 + v48;
    v50 = (char *)v11 + v48;
    v51 = type metadata accessor for TVShow(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    v54 = v14[11];
    v55 = (char *)v10 + v54;
    v56 = (char *)v11 + v54;
    v57 = type metadata accessor for TVSeason(0);
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      v59 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    *((_BYTE *)v10 + v14[12]) = *((_BYTE *)v11 + v14[12]);
    *((_BYTE *)v10 + v14[13]) = *((_BYTE *)v11 + v14[13]);
    *((_BYTE *)v10 + v14[14]) = *((_BYTE *)v11 + v14[14]);
    v60 = v14[15];
    v61 = (_QWORD *)((char *)v10 + v60);
    v62 = (_QWORD *)((char *)v11 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    *(_QWORD *)((char *)v10 + v14[16]) = *(_QWORD *)((char *)v11 + v14[16]);
    *((_BYTE *)v10 + v14[17]) = *((_BYTE *)v11 + v14[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = 1;
    a3 = v72;
  }
  else
  {
    swift_retain();
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v23);
  v64 = *(int *)(a3 + 24);
  v65 = (_QWORD *)(a1 + v64);
  v66 = (_QWORD *)(v4 + v64);
  v67 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
  {
    v68 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v65, v66, v68);
    v69 = 1;
  }
  else
  {
    *v65 = *v66;
    swift_retain();
    v69 = 0;
  }
  swift_storeEnumTagMultiPayload(v65, v67, v69);
  return a1;
}

uint64_t sub_1004571A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v71;
  uint64_t v72;
  uint64_t v73;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1000A6174(v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10004FF60(a1 + v11, &qword_10119F030);
    v14 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    *v12 = *v13;
    if (EnumCaseMultiPayload == 1)
    {
      v72 = v14;
      v73 = a3;
      v71 = (int *)type metadata accessor for Library.Context(0);
      v16 = v71[5];
      v17 = (char *)v12 + v16;
      v18 = (char *)v13 + v16;
      v19 = type metadata accessor for Album(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
      v22 = swift_retain();
      if (v21(v18, 1, v19, v22))
      {
        v23 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v25 = v71[6];
      v26 = (char *)v12 + v25;
      v27 = (char *)v13 + v25;
      v28 = type metadata accessor for Artist(0);
      v29 = *(_QWORD *)(v28 - 8);
      v14 = v72;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v71[7];
      v32 = (char *)v12 + v31;
      v33 = (char *)v13 + v31;
      v34 = type metadata accessor for Composer(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v71[8];
      v38 = (char *)v12 + v37;
      v39 = (char *)v13 + v37;
      v40 = type metadata accessor for Genre(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_10119ED08);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v71[9];
      v44 = (char *)v12 + v43;
      v45 = (char *)v13 + v43;
      v46 = type metadata accessor for Playlist(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v71[10];
      v50 = (char *)v12 + v49;
      v51 = (char *)v13 + v49;
      v52 = type metadata accessor for TVShow(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v71[11];
      v56 = (char *)v12 + v55;
      v57 = (char *)v13 + v55;
      v58 = type metadata accessor for TVSeason(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      a3 = v73;
      *((_BYTE *)v12 + v71[12]) = *((_BYTE *)v13 + v71[12]);
      *((_BYTE *)v12 + v71[13]) = *((_BYTE *)v13 + v71[13]);
      *((_BYTE *)v12 + v71[14]) = *((_BYTE *)v13 + v71[14]);
      v61 = v71[15];
      v62 = (_QWORD *)((char *)v12 + v61);
      v63 = (_QWORD *)((char *)v13 + v61);
      *v62 = *v63;
      v62[1] = v63[1];
      *(_QWORD *)((char *)v12 + v71[16]) = *(_QWORD *)((char *)v13 + v71[16]);
      *((_BYTE *)v12 + v71[17]) = *((_BYTE *)v13 + v71[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = 1;
    }
    else
    {
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v24);
    v64 = *(int *)(a3 + 24);
    v65 = (_QWORD *)(a1 + v64);
    v66 = (_QWORD *)(a2 + v64);
    sub_10004FF60(a1 + v64, (uint64_t *)&unk_1011C72D0);
    v67 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
    {
      v68 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v65, v66, v68);
      v69 = 1;
    }
    else
    {
      *v65 = *v66;
      swift_retain();
      v69 = 0;
    }
    swift_storeEnumTagMultiPayload(v65, v67, v69);
  }
  return a1;
}

uint64_t sub_10045773C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;

  v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v59 = v3;
    *v7 = *v8;
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = v10[6];
    v18 = (char *)v7 + v17;
    v19 = (char *)v8 + v17;
    v20 = type metadata accessor for Artist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v10[7];
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v26 = type metadata accessor for Composer(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v10[8];
    v30 = (char *)v7 + v29;
    v31 = (char *)v8 + v29;
    v32 = type metadata accessor for Genre(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119ED08);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v10[9];
    v36 = (char *)v7 + v35;
    v37 = (char *)v8 + v35;
    v38 = type metadata accessor for Playlist(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v10[10];
    v42 = (char *)v7 + v41;
    v43 = (char *)v8 + v41;
    v44 = type metadata accessor for TVShow(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v10[11];
    v48 = (char *)v7 + v47;
    v49 = (char *)v8 + v47;
    v50 = type metadata accessor for TVSeason(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v3 = v59;
    *((_BYTE *)v7 + v10[12]) = *((_BYTE *)v8 + v10[12]);
    *((_BYTE *)v7 + v10[13]) = *((_BYTE *)v8 + v10[13]);
    *((_BYTE *)v7 + v10[14]) = *((_BYTE *)v8 + v10[14]);
    *(_OWORD *)((char *)v7 + v10[15]) = *(_OWORD *)((char *)v8 + v10[15]);
    *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)((char *)v8 + v10[16]);
    *((_BYTE *)v7 + v10[17]) = *((_BYTE *)v8 + v10[17]);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v53 = *(int *)(v3 + 24);
  v54 = (void *)(a1 + v53);
  v55 = (const void *)(a2 + v53);
  v56 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
  {
    v57 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v54, v55, v57);
    swift_storeEnumTagMultiPayload(v54, v56, 1);
  }
  else
  {
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100457C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_10004FF60(a1 + v9, &qword_10119F030);
    v12 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v62 = v12;
      *v10 = *v11;
      v13 = (int *)type metadata accessor for Library.Context(0);
      v14 = v13[5];
      v15 = (char *)v10 + v14;
      v16 = (char *)v11 + v14;
      v17 = type metadata accessor for Album(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = v13[6];
      v21 = (char *)v10 + v20;
      v22 = (char *)v11 + v20;
      v23 = type metadata accessor for Artist(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v13[7];
      v27 = (char *)v10 + v26;
      v28 = (char *)v11 + v26;
      v29 = type metadata accessor for Composer(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v13[8];
      v33 = (char *)v10 + v32;
      v34 = (char *)v11 + v32;
      v35 = type metadata accessor for Genre(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C(&qword_10119ED08);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v13[9];
      v39 = (char *)v10 + v38;
      v40 = (char *)v11 + v38;
      v41 = type metadata accessor for Playlist(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v13[10];
      v45 = (char *)v10 + v44;
      v46 = (char *)v11 + v44;
      v47 = type metadata accessor for TVShow(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v13[11];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      v53 = type metadata accessor for TVSeason(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *((_BYTE *)v10 + v13[12]) = *((_BYTE *)v11 + v13[12]);
      *((_BYTE *)v10 + v13[13]) = *((_BYTE *)v11 + v13[13]);
      *((_BYTE *)v10 + v13[14]) = *((_BYTE *)v11 + v13[14]);
      *(_OWORD *)((char *)v10 + v13[15]) = *(_OWORD *)((char *)v11 + v13[15]);
      *(_QWORD *)((char *)v10 + v13[16]) = *(_QWORD *)((char *)v11 + v13[16]);
      *((_BYTE *)v10 + v13[17]) = *((_BYTE *)v11 + v13[17]);
      swift_storeEnumTagMultiPayload(v10, v62, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v56 = *(int *)(a3 + 24);
    v57 = (void *)(a1 + v56);
    v58 = (const void *)(a2 + v56);
    sub_10004FF60(a1 + v56, (uint64_t *)&unk_1011C72D0);
    v59 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
    {
      v60 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v57, v58, v60);
      swift_storeEnumTagMultiPayload(v57, v59, 1);
    }
    else
    {
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004581D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004581DC);
}

uint64_t sub_1004581DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10045827C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100458288);
}

uint64_t sub_100458288(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s17RecentlyAddedViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B4BB0;
  if (!qword_1011B4BB0)
    return swift_getSingletonMetadata(a1, &_s17RecentlyAddedViewVMn);
  return result;
}

void sub_100458364(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = &unk_100EBBE38;
  sub_1000A79B0(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000A79B0(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_100458414(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA132C, 1);
}

uint64_t sub_100458424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t (**v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _QWORD v69[2];
  char v70;

  v2 = v1;
  v67 = a1;
  v66 = sub_100007E8C(&qword_1011B4BF0);
  __chkstk_darwin(v66);
  v65 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011B4BF8);
  __chkstk_darwin(v63);
  v62 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011B4C00);
  __chkstk_darwin(v5);
  v64 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v7);
  v61 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = _s17RecentlyAddedViewVMa(0);
  v9 = *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64);
  v56 = *(_QWORD *)(v60 - 8);
  v57 = v9;
  __chkstk_darwin(v60);
  v55 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011CF2E0);
  __chkstk_darwin(v11);
  v54 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)sub_100007E8C(&qword_1011B4C08);
  __chkstk_darwin(v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v59 = (uint64_t)&v54 - v17;
  v18 = *(_QWORD *)v1;
  v19 = *(_QWORD *)(v1 + 8);
  v20 = *(unsigned __int8 *)(v1 + 16);
  v21 = sub_100007E8C(&qword_1011B4C10);
  v22 = sub_100049F28(&qword_1011B4C18, &qword_1011B4C10, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v58 = v21;
  StateObject.wrappedValue.getter(v18, v19, v20, v21, v22);
  dispatch thunk of MusicAutoupdatingResponse.response.getter();
  swift_release();
  v23 = v21;
  v24 = v22;
  v25 = StateObject.wrappedValue.getter(v18, v19, v20, v23, v22);
  v26 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v25);
  swift_release();
  v27 = v55;
  sub_10005B704(v2, v55, _s17RecentlyAddedViewVMa);
  v28 = *(unsigned __int8 *)(v56 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_1010C6858, v29 + v57, v28 | 7);
  sub_10005B6C0(v27, v30 + v29, _s17RecentlyAddedViewVMa);
  v68 = 0;
  static Binding.constant(_:)(v69, &v68, &type metadata for Library.ContentFilterOption);
  v31 = v69[0];
  v32 = v69[1];
  LOBYTE(v27) = v70;
  v33 = &v15[v13[19]];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_100EBBEA0);
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 2) = 0;
  *((_QWORD *)v33 + 3) = 0;
  v33[32] = 0;
  sub_100065228(v54, (uint64_t)v15, (uint64_t *)&unk_1011CF2E0);
  v15[v13[13]] = v26 & 1;
  v15[v13[14]] = 0;
  v34 = &v15[v13[15]];
  *(_QWORD *)v34 = v31;
  *((_QWORD *)v34 + 1) = v32;
  v34[16] = v27;
  *(_QWORD *)&v15[v13[16]] = 4;
  *(_QWORD *)&v15[v13[17]] = 0x403E000000000000;
  v35 = (uint64_t (**)(uint64_t))&v15[v13[18]];
  *v35 = sub_10045B8F0;
  v35[1] = (uint64_t (*)(uint64_t))v30;
  v36 = v59;
  sub_100065228((uint64_t)v15, v59, &qword_1011B4C08);
  v37 = v61;
  sub_10082460C(v61);
  v38 = *(_QWORD *)v2;
  v39 = *(_QWORD *)(v2 + 8);
  v40 = *(unsigned __int8 *)(v2 + 16);
  v41 = v58;
  StateObject.wrappedValue.getter(v38, v39, v40, v58, v24);
  v42 = (uint64_t)v62;
  v43 = v63;
  v44 = (uint64_t)&v62[*(int *)(v63 + 36)];
  sub_10005B704(v37, v44, type metadata accessor for Library.Context);
  v45 = (_QWORD *)(v44 + *(int *)(sub_100007E8C(&qword_1011B4C20) + 36));
  swift_retain();
  *v45 = ObservedObject.init(wrappedValue:)(v46, v41, v24);
  v45[1] = v47;
  v48 = v36;
  sub_10004A160(v36, v42, &qword_1011B4C08);
  v49 = v65;
  sub_10004A160(v42, v65, &qword_1011B4BF8);
  swift_storeEnumTagMultiPayload(v49, v66, 0);
  v50 = sub_10045B904();
  v51 = sub_100049F28(&qword_1011B4C30, &qword_1011B4C08, (uint64_t)&unk_100EC0C68);
  v52 = (uint64_t)v64;
  _ConditionalContent<>.init(storage:)(v49, v43, v13, v50, v51);
  sub_10004FF60(v42, &qword_1011B4BF8);
  sub_100065228(v52, v67, &qword_1011B4C00);
  swift_release();
  sub_10005B748(v37, type metadata accessor for Library.Context);
  return sub_10004FF60(v48, &qword_1011B4C08);
}

uint64_t sub_100458938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[4];

  v5[2] = a1;
  v5[3] = a2;
  v2 = sub_100007E8C(&qword_1011B4C40);
  v3 = sub_10045B9A8();
  return Section<>.init(content:)(sub_10045B9A0, v5, v2, v3);
}

uint64_t sub_100458990(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s17RecentlyAddedViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011CF300);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A39C0);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s17RecentlyAddedViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010C6880, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s17RecentlyAddedViewVMa);
  v14 = sub_100007E8C(&qword_1011B4C58);
  v15 = sub_100049F28(&qword_1011B4CE0, (uint64_t *)&unk_1011CF300, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_10015FD08(&qword_1011B4C50, &qword_1011B4C58, (void (*)(void))sub_10045BA2C, (void (*)(void))sub_10045BC70);
  v17 = sub_100048748(&qword_1011B4CE8, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
  return ForEach<>.init(_:content:)(v8, sub_10045C034, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_100458B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  char *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  int *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  int *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t KeyPath;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t *v202;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned int (*v213)(uint64_t, uint64_t, uint64_t);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  void (*v226)(uint64_t, char *, uint64_t);
  uint64_t v227;
  __n128 v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int *v253;
  uint64_t v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  _QWORD *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(char *, char *, uint64_t);
  char *v293;
  __n128 v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  int *v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  int *v310;
  uint64_t v311;
  _QWORD *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  _QWORD *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  unint64_t v353;
  unint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  __n128 v364;
  uint64_t v365;
  unint64_t v366;
  uint64_t v367;
  unint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  int *v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  uint64_t *v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  unint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  void (*v391)(char *, uint64_t);
  uint64_t v392;
  unint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  unint64_t v397;
  uint64_t v398;
  char *v399;
  uint64_t v400;
  char *v401;
  char *v402;
  uint64_t v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  char *v407;
  char *v408;
  char *v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  char *v423;
  char *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  unint64_t v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t *v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  char *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  _QWORD v466[2];
  uint64_t v467;
  uint64_t v468;

  v461 = a2;
  v466[0] = a1;
  v466[1] = a3;
  v403 = type metadata accessor for UploadedVideo(0);
  v405 = *(_QWORD *)(v403 - 8);
  __chkstk_darwin(v403);
  v404 = (char *)&v398 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v431 = sub_100007E8C(&qword_1011B4CF0);
  __chkstk_darwin(v431);
  v432 = (uint64_t)&v398 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v427 = sub_100007E8C(&qword_1011B4CF8);
  __chkstk_darwin(v427);
  v428 = (uint64_t)&v398 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v430 = sub_100007E8C(&qword_1011B4CD8);
  __chkstk_darwin(v430);
  v429 = (char *)&v398 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v462 = sub_100007E8C(&qword_1011B4CC8);
  __chkstk_darwin(v462);
  v433 = (char *)&v398 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v426 = type metadata accessor for MusicVideo(0);
  v425 = *(_QWORD *)(v426 - 8);
  __chkstk_darwin(v426);
  v424 = (char *)&v398 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v415 = type metadata accessor for TVSeason(0);
  v414 = *(_QWORD *)(v415 - 8);
  __chkstk_darwin(v415);
  v413 = (char *)&v398 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v438 = sub_100007E8C(&qword_1011B4D00);
  __chkstk_darwin(v438);
  v439 = (uint64_t)&v398 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v459 = sub_100007E8C(&qword_1011B4C98);
  __chkstk_darwin(v459);
  v440 = (char *)&v398 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v444 = sub_100007E8C(&qword_1011B4CA8);
  __chkstk_darwin(v444);
  v443 = (uint64_t)&v398 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v442 = _s5VideoO5ModelVMa(0);
  __chkstk_darwin(v442);
  v402 = (char *)&v398 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v441 = (char *)&v398 - v15;
  v437 = type metadata accessor for MusicMovie(0);
  v445 = *(_QWORD *)(v437 - 8);
  __chkstk_darwin(v437);
  v436 = (char *)&v398 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v408 = (char *)&v398 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v407 = (char *)&v398 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v420 = type metadata accessor for Playlist.Variant(0);
  v418 = *(_QWORD *)(v420 - 8);
  __chkstk_darwin(v420);
  v401 = (char *)&v398 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v416 = sub_100007E8C((uint64_t *)&unk_1011C66C0);
  __chkstk_darwin(v416);
  v419 = (uint64_t)&v398 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v23);
  v406 = (uint64_t)&v398 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v422 = (uint64_t)&v398 - v26;
  __chkstk_darwin(v27);
  v417 = (char *)&v398 - v28;
  v449 = sub_100007E8C(&qword_1011B4C88);
  __chkstk_darwin(v449);
  v412 = (uint64_t)&v398 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v434 = type metadata accessor for Playlist(0);
  v435 = *(_QWORD *)(v434 - 8);
  __chkstk_darwin(v434);
  v409 = (char *)&v398 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v423 = (char *)&v398 - v32;
  v463 = sub_100007E8C(&qword_1011B4D08);
  __chkstk_darwin(v463);
  v465 = (uint64_t)&v398 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v455 = sub_100007E8C(&qword_1011B4D10);
  __chkstk_darwin(v455);
  v457 = (uint64_t)&v398 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v447 = sub_100007E8C(&qword_1011B4D18);
  __chkstk_darwin(v447);
  v450 = (uint64_t)&v398 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v456 = sub_100007E8C(&qword_1011B4C78);
  __chkstk_darwin(v456);
  v448 = (char *)&v398 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v464 = sub_100007E8C(&qword_1011B4C68);
  __chkstk_darwin(v464);
  v458 = (char *)&v398 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v38);
  v452 = (uint64_t *)((char *)&v398 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v460 = _s9ContainerO4CellVMa(0);
  v411 = *(_QWORD *)(v460 - 8);
  __chkstk_darwin(v460);
  v446 = (uint64_t)&v398 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v454 = (uint64_t)&v398 - v42;
  v43 = type metadata accessor for GenericMusicItem(0);
  v467 = *(_QWORD *)(v43 - 8);
  v468 = v43;
  __chkstk_darwin(v43);
  v45 = (char *)&v398 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v421 = (char *)&v398 - v47;
  __chkstk_darwin(v48);
  v50 = (char *)&v398 - v49;
  v451 = _s9ContainerO5ModelVMa(0);
  __chkstk_darwin(v451);
  v52 = (char *)&v398 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  v410 = (char *)&v398 - v54;
  __chkstk_darwin(v55);
  v453 = (uint64_t)&v398 - v56;
  __chkstk_darwin(v57);
  v59 = (char *)&v398 - v58;
  v60 = type metadata accessor for Album(0);
  v61 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v63 = (char *)&v398 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for RecentlyAddedMusicItem(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = __chkstk_darwin(v64);
  v68 = (char *)&v398 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v65 + 16))(v68, v466[0], v64, v66);
  v69 = (*(uint64_t (**)(char *, uint64_t))(v65 + 88))(v68, v64);
  if (v69 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v65 + 96))(v68, v64);
    v70 = (*(uint64_t (**)(char *, char *, uint64_t))(v61 + 32))(v63, v68, v60);
    v71 = Album.title.getter(v70);
    v73 = v72;
    v75 = swift_bridgeObjectRelease(v72);
    v76 = HIBYTE(v73) & 0xF;
    if ((v73 & 0x2000000000000000) == 0)
      v76 = v71 & 0xFFFFFFFFFFFFLL;
    v77 = v60;
    if (v76)
      v78 = Album.title.getter(v74);
    else
      v78 = Album.representativeTrackTitle.getter(v75);
    v135 = v78;
    v136 = v79;
    v400 = v61;
    v137 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v137(v50, v63, v77);
    v138 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v467 + 104))(v50, enum case for GenericMusicItem.album(_:), v468);
    if (v136)
      v139 = v135;
    else
      v139 = 0;
    v466[0] = v139;
    v140 = 0xE000000000000000;
    if (v136)
      v140 = v136;
    v445 = v140;
    v141 = v63;
    v399 = v63;
    v444 = Album.artistName.getter(v138);
    v443 = v142;
    v143 = (int *)v451;
    v144 = &v59[*(int *)(v451 + 28)];
    v145 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v144, 1, 10, v145);
    v146 = v143[9];
    v147 = v77;
    v398 = v77;
    v148 = &v59[v146];
    v149 = (int *)sub_100007E8C(&qword_1011C5BA0);
    v150 = (uint64_t)&v148[v149[12]];
    v151 = &v148[v149[16]];
    v152 = v149[20];
    v137(v148, v141, v147);
    _s17RecentlyAddedViewVMa(0);
    sub_10082460C(v150);
    v153 = type metadata accessor for Library.Context(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v150, 0, 1, v153);
    *(_QWORD *)v151 = 0;
    *((_QWORD *)v151 + 1) = 0;
    *(_OWORD *)&v148[v152] = xmmword_100EAE4D0;
    v154 = type metadata accessor for NavigationDestinationItem(0);
    swift_storeEnumTagMultiPayload(v148, v154, 1);
    (*(void (**)(char *, char *, uint64_t))(v467 + 32))(v59, v50, v468);
    v155 = &v59[v143[5]];
    v156 = v445;
    *(_QWORD *)v155 = v466[0];
    *((_QWORD *)v155 + 1) = v156;
    v157 = (uint64_t *)&v59[v143[6]];
    v158 = v443;
    *v157 = v444;
    v157[1] = v158;
    *(_QWORD *)&v59[v143[8]] = 0x3FF0000000000000;
    v159 = (uint64_t)v59;
    v160 = v453;
    sub_10005B704((uint64_t)v59, v453, _s9ContainerO5ModelVMa);
    KeyPath = swift_getKeyPath(&unk_100EBBEC8);
    v162 = (uint64_t)v452;
    *v452 = KeyPath;
    v163 = sub_100007E8C(&qword_10119F030);
    swift_storeEnumTagMultiPayload(v162, v163, 0);
    v164 = v446;
    sub_10005B6C0(v160, v446, _s9ContainerO5ModelVMa);
    v165 = (int *)v460;
    v166 = v164 + *(int *)(v460 + 20);
    *(_QWORD *)v166 = swift_getKeyPath(&unk_100EBBEF8);
    *(_BYTE *)(v166 + 8) = 0;
    sub_100065228(v162, v164 + v165[6], &qword_10119EE98);
    v167 = (_QWORD *)(v164 + v165[7]);
    v168 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v169 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *v167 = EnvironmentObject.init()(v168, v169);
    v167[1] = v170;
    v171 = (_QWORD *)(v164 + v165[8]);
    v172 = type metadata accessor for NoticePresenter(0);
    v173 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    *v171 = EnvironmentObject.init()(v172, v173);
    v171[1] = v174;
    v175 = v164 + v165[9];
    *(_QWORD *)v175 = sub_1008419B0;
    *(_QWORD *)(v175 + 8) = 0;
    *(_BYTE *)(v175 + 16) = 0;
    v176 = (_QWORD *)(v164 + v165[10]);
    v177 = type metadata accessor for NavigationPusher();
    v178 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    *v176 = EnvironmentObject.init()(v177, v178);
    v176[1] = v179;
    v180 = (_QWORD *)(v164 + v165[11]);
    v181 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v182 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    *v180 = EnvironmentObject.init()(v181, v182);
    v180[1] = v183;
    v184 = (_QWORD *)(v164 + v165[12]);
    v185 = type metadata accessor for TabSelectionManager(0);
    v186 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    *v184 = EnvironmentObject.init()(v185, v186);
    v184[1] = v187;
    v188 = v164 + v165[13];
    *(_QWORD *)v188 = swift_getKeyPath(&unk_100EBBF20);
    *(_QWORD *)(v188 + 8) = 0;
    *(_BYTE *)(v188 + 16) = 0;
    v189 = v164 + v165[14];
    *(_QWORD *)v189 = swift_getKeyPath(&unk_100EBBF48);
    *(_QWORD *)(v189 + 8) = 0;
    *(_BYTE *)(v189 + 16) = 0;
    v190 = v454;
    sub_10005B6C0(v164, v454, _s9ContainerO4CellVMa);
    v191 = v450;
    sub_10005B704(v190, v450, _s9ContainerO4CellVMa);
    swift_storeEnumTagMultiPayload(v191, v447, 0);
    v192 = sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
    v193 = sub_10045BAD4();
    v194 = (uint64_t)v448;
    _ConditionalContent<>.init(storage:)(v191, v165, v449, v192, v193);
    v195 = v457;
    sub_10004A160(v194, v457, &qword_1011B4C78);
    swift_storeEnumTagMultiPayload(v195, v455, 0);
    v196 = sub_10045BA50();
    v197 = sub_10045BB50();
    v198 = (uint64_t)v458;
    _ConditionalContent<>.init(storage:)(v195, v456, v459, v196, v197);
    sub_10004FF60(v194, &qword_1011B4C78);
    v199 = v465;
    sub_10004A160(v198, v465, &qword_1011B4C68);
    swift_storeEnumTagMultiPayload(v199, v463, 0);
    v200 = sub_10045BA2C();
    v201 = sub_10045BC70();
    _ConditionalContent<>.init(storage:)(v199, v464, v462, v200, v201);
    sub_10004FF60(v198, &qword_1011B4C68);
    sub_10005B748(v190, _s9ContainerO4CellVMa);
    sub_10005B748(v159, _s9ContainerO5ModelVMa);
    v108 = *(uint64_t (**)(char *, uint64_t))(v400 + 8);
    v133 = v399;
    v202 = &v430;
    goto LABEL_18;
  }
  if (v69 != enum case for RecentlyAddedMusicItem.musicMovie(_:))
  {
    if (v69 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v65 + 96))(v68, v64);
      v109 = v425;
      v81 = v424;
      v82 = v426;
      (*(void (**)(char *, char *, uint64_t))(v425 + 32))(v424, v68, v426);
      v110 = (uint64_t)v441;
      (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v441, v81, v82);
      v111.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t))(v467 + 104))(v110, enum case for GenericMusicItem.musicVideo(_:), v468);
      v112 = MusicVideo.title.getter(v111);
      v114 = v113;
      v115 = MusicVideo.artistName.getter(v112);
      v117 = v116;
      v118 = (int *)v442;
      v119 = v110 + *(int *)(v442 + 28);
      v120 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v119, 4, 10, v120);
      v121 = (uint64_t *)(v110 + v118[5]);
      *v121 = v112;
      v121[1] = v114;
      v122 = (uint64_t *)(v110 + v118[6]);
      *v122 = v115;
      v122[1] = v117;
      *(_QWORD *)(v110 + v118[8]) = 0x3FFC71C71C71C71CLL;
      v123 = v443;
      sub_10045B1DC(v110, v443);
      v124 = v428;
      sub_10004A160(v123, v428, &qword_1011B4CA8);
      swift_storeEnumTagMultiPayload(v124, v427, 0);
      v125 = sub_10045BBD4();
      v126 = (uint64_t)v429;
      _ConditionalContent<>.init(storage:)(v124, v444, v444, v125, v125);
      v127 = v432;
      sub_10004A160(v126, v432, &qword_1011B4CD8);
      swift_storeEnumTagMultiPayload(v127, v431, 0);
      v128 = sub_10045BCDC();
      v129 = (uint64_t)v433;
      _ConditionalContent<>.init(storage:)(v127, v430, &type metadata for EmptyView, v128, &protocol witness table for EmptyView);
      sub_10004FF60(v126, &qword_1011B4CD8);
      v130 = v465;
      sub_10004A160(v129, v465, &qword_1011B4CC8);
      swift_storeEnumTagMultiPayload(v130, v463, 1);
      v131 = sub_10045BA2C();
      v132 = sub_10045BC70();
      _ConditionalContent<>.init(storage:)(v130, v464, v462, v131, v132);
      sub_10004FF60(v129, &qword_1011B4CC8);
      sub_10004FF60(v123, &qword_1011B4CA8);
      sub_10005B748(v110, _s5VideoO5ModelVMa);
      v108 = *(uint64_t (**)(char *, uint64_t))(v109 + 8);
      goto LABEL_10;
    }
    if (v69 != enum case for RecentlyAddedMusicItem.playlist(_:))
    {
      if (v69 == enum case for RecentlyAddedMusicItem.tvSeason(_:))
      {
        (*(void (**)(char *, uint64_t))(v65 + 96))(v68, v64);
        v222 = v414;
        v223 = v413;
        v224 = v68;
        v225 = v415;
        (*(void (**)(char *, char *, uint64_t))(v414 + 32))(v413, v224, v415);
        v226 = *(void (**)(uint64_t, char *, uint64_t))(v222 + 16);
        v227 = v453;
        v226(v453, v223, v225);
        v228.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t))(v467 + 104))(v227, enum case for GenericMusicItem.tvSeason(_:), v468);
        v229 = v223;
        v230 = TVSeason.showName.getter(v228);
        v467 = v231;
        v468 = v230;
        v232 = v407;
        v233 = String.LocalizationValue.init(stringLiteral:)(0x776F6853205654, 0xE700000000000000);
        v234 = v408;
        static Locale.current.getter(v233);
        v235 = String.init(localized:table:bundle:locale:comment:)(v232, 0, 0, 0, v234, "Item Type", 9, 2);
        v237 = v236;
        v238 = (int *)v451;
        v239 = v227 + *(int *)(v451 + 28);
        v240 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v240 - 8) + 56))(v239, 5, 10, v240);
        v241 = v227 + v238[9];
        v242 = *(int *)(sub_100007E8C(&qword_10119ED38) + 48);
        v226(v241, v229, v225);
        v243 = _s14TVEpisodesViewV10DataSourceOMa(0);
        swift_storeEnumTagMultiPayload(v241, v243, 1);
        *(_OWORD *)(v241 + v242) = xmmword_100EAE4D0;
        v244 = type metadata accessor for NavigationDestinationItem(0);
        swift_storeEnumTagMultiPayload(v241, v244, 6);
        v245 = (uint64_t *)(v227 + v238[5]);
        v246 = v467;
        *v245 = v468;
        v245[1] = v246;
        v247 = (uint64_t *)(v227 + v238[6]);
        *v247 = v235;
        v247[1] = v237;
        *(_QWORD *)(v227 + v238[8]) = 0x3FF0000000000000;
        v248 = v227;
        sub_10005B704(v227, (uint64_t)v52, _s9ContainerO5ModelVMa);
        v249 = swift_getKeyPath(&unk_100EBBEC8);
        v250 = (uint64_t)v452;
        *v452 = v249;
        v251 = sub_100007E8C(&qword_10119F030);
        swift_storeEnumTagMultiPayload(v250, v251, 0);
        v252 = v446;
        sub_10005B6C0((uint64_t)v52, v446, _s9ContainerO5ModelVMa);
        v253 = (int *)v460;
        v254 = v252 + *(int *)(v460 + 20);
        *(_QWORD *)v254 = swift_getKeyPath(&unk_100EBBEF8);
        *(_BYTE *)(v254 + 8) = 0;
        sub_100065228(v250, v252 + v253[6], &qword_10119EE98);
        v255 = (_QWORD *)(v252 + v253[7]);
        v256 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
        v257 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
        *v255 = EnvironmentObject.init()(v256, v257);
        v255[1] = v258;
        v259 = (_QWORD *)(v252 + v253[8]);
        v260 = type metadata accessor for NoticePresenter(0);
        v261 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
        *v259 = EnvironmentObject.init()(v260, v261);
        v259[1] = v262;
        v263 = v252 + v253[9];
        *(_QWORD *)v263 = sub_1008419B0;
        *(_QWORD *)(v263 + 8) = 0;
        *(_BYTE *)(v263 + 16) = 0;
        v264 = (_QWORD *)(v252 + v253[10]);
        v265 = type metadata accessor for NavigationPusher();
        v266 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
        *v264 = EnvironmentObject.init()(v265, v266);
        v264[1] = v267;
        v268 = (_QWORD *)(v252 + v253[11]);
        v269 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v270 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
        *v268 = EnvironmentObject.init()(v269, v270);
        v268[1] = v271;
        v272 = (_QWORD *)(v252 + v253[12]);
        v273 = type metadata accessor for TabSelectionManager(0);
        v274 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
        *v272 = EnvironmentObject.init()(v273, v274);
        v272[1] = v275;
        v276 = v252 + v253[13];
        *(_QWORD *)v276 = swift_getKeyPath(&unk_100EBBF20);
        *(_QWORD *)(v276 + 8) = 0;
        *(_BYTE *)(v276 + 16) = 0;
        v277 = v252 + v253[14];
        *(_QWORD *)v277 = swift_getKeyPath(&unk_100EBBF48);
        *(_QWORD *)(v277 + 8) = 0;
        *(_BYTE *)(v277 + 16) = 0;
        v278 = v454;
        sub_10005B6C0(v252, v454, _s9ContainerO4CellVMa);
        v279 = v439;
        sub_10005B704(v278, v439, _s9ContainerO4CellVMa);
        swift_storeEnumTagMultiPayload(v279, v438, 1);
        v280 = sub_10045BBD4();
        v281 = sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
        v282 = (uint64_t)v440;
        _ConditionalContent<>.init(storage:)(v279, v444, v253, v280, v281);
        v283 = v457;
        sub_10004A160(v282, v457, &qword_1011B4C98);
        swift_storeEnumTagMultiPayload(v283, v455, 1);
        v284 = sub_10045BA50();
        v285 = sub_10045BB50();
        v286 = (uint64_t)v458;
        _ConditionalContent<>.init(storage:)(v283, v456, v459, v284, v285);
        sub_10004FF60(v282, &qword_1011B4C98);
        v287 = v465;
        sub_10004A160(v286, v465, &qword_1011B4C68);
        swift_storeEnumTagMultiPayload(v287, v463, 0);
        v288 = sub_10045BA2C();
        v289 = sub_10045BC70();
        _ConditionalContent<>.init(storage:)(v287, v464, v462, v288, v289);
        sub_10004FF60(v286, &qword_1011B4C68);
        sub_10005B748(v278, _s9ContainerO4CellVMa);
        sub_10005B748(v248, _s9ContainerO5ModelVMa);
        v108 = *(uint64_t (**)(char *, uint64_t))(v414 + 8);
        v133 = v413;
        v202 = &v447;
      }
      else
      {
        if (v69 != enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
        {
          v392 = v432;
          swift_storeEnumTagMultiPayload(v432, v431, 1);
          v393 = sub_10045BCDC();
          v394 = (uint64_t)v433;
          _ConditionalContent<>.init(storage:)(v392, v430, &type metadata for EmptyView, v393, &protocol witness table for EmptyView);
          v395 = v465;
          sub_10004A160(v394, v465, &qword_1011B4CC8);
          swift_storeEnumTagMultiPayload(v395, v463, 1);
          v396 = sub_10045BA2C();
          v397 = sub_10045BC70();
          _ConditionalContent<>.init(storage:)(v395, v464, v462, v396, v397);
          sub_10004FF60(v394, &qword_1011B4CC8);
          return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v68, v64);
        }
        (*(void (**)(char *, uint64_t))(v65 + 96))(v68, v64);
        v359 = v405;
        v360 = v404;
        v361 = v403;
        (*(void (**)(char *, char *, uint64_t))(v405 + 32))(v404, v68, v403);
        (*(void (**)(char *, char *, uint64_t))(v359 + 16))(v45, v360, v361);
        v363 = v467;
        v362 = v468;
        v364.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v467 + 104))(v45, enum case for GenericMusicItem.uploadedVideo(_:), v468);
        v365 = UploadedVideo.title.getter(v364);
        if (v366)
          v367 = v365;
        else
          v367 = 0;
        if (v366)
          v368 = v366;
        else
          v368 = 0xE000000000000000;
        v369 = UploadedVideo.artistName.getter(v365);
        v371 = v370;
        v372 = (int *)v442;
        v373 = (uint64_t)v402;
        v374 = &v402[*(int *)(v442 + 28)];
        v375 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v375 - 8) + 56))(v374, 4, 10, v375);
        (*(void (**)(uint64_t, char *, uint64_t))(v363 + 32))(v373, v45, v362);
        v376 = (uint64_t *)(v373 + v372[5]);
        *v376 = v367;
        v376[1] = v368;
        v377 = (uint64_t *)(v373 + v372[6]);
        *v377 = v369;
        v377[1] = v371;
        *(_QWORD *)(v373 + v372[8]) = 0x3FFC71C71C71C71CLL;
        v378 = v443;
        sub_10045B1DC(v373, v443);
        v379 = v428;
        sub_10004A160(v378, v428, &qword_1011B4CA8);
        swift_storeEnumTagMultiPayload(v379, v427, 1);
        v380 = sub_10045BBD4();
        v381 = (uint64_t)v429;
        _ConditionalContent<>.init(storage:)(v379, v444, v444, v380, v380);
        v382 = v432;
        sub_10004A160(v381, v432, &qword_1011B4CD8);
        swift_storeEnumTagMultiPayload(v382, v431, 0);
        v383 = sub_10045BCDC();
        v384 = (uint64_t)v433;
        _ConditionalContent<>.init(storage:)(v382, v430, &type metadata for EmptyView, v383, &protocol witness table for EmptyView);
        sub_10004FF60(v381, &qword_1011B4CD8);
        v385 = v465;
        sub_10004A160(v384, v465, &qword_1011B4CC8);
        swift_storeEnumTagMultiPayload(v385, v463, 1);
        v386 = sub_10045BA2C();
        v387 = sub_10045BC70();
        _ConditionalContent<>.init(storage:)(v385, v464, v462, v386, v387);
        sub_10004FF60(v384, &qword_1011B4CC8);
        sub_10004FF60(v378, &qword_1011B4CA8);
        sub_10005B748(v373, _s5VideoO5ModelVMa);
        v108 = *(uint64_t (**)(char *, uint64_t))(v405 + 8);
        v133 = v404;
        v202 = &v435;
      }
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v65 + 96))(v68, v64);
    v204 = v423;
    v205 = v434;
    v206 = (*(uint64_t (**)(char *, char *, uint64_t))(v435 + 32))(v423, v68, v434);
    v207 = (uint64_t)v417;
    Playlist.variant.getter(v206);
    v208 = v418;
    v209 = v422;
    v210 = v420;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v418 + 104))(v422, enum case for Playlist.Variant.folder(_:), v420);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v208 + 56))(v209, 0, 1, v210);
    v211 = v419;
    v212 = v419 + *(int *)(v416 + 48);
    sub_10004A160(v207, v419, (uint64_t *)&unk_1011CEF20);
    sub_10004A160(v209, v212, (uint64_t *)&unk_1011CEF20);
    v213 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48);
    if (v213(v211, 1, v210) == 1)
    {
      sub_10004FF60(v209, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v207, (uint64_t *)&unk_1011CEF20);
      if (v213(v212, 1, v210) == 1)
      {
        sub_10004FF60(v211, (uint64_t *)&unk_1011CEF20);
        v214 = 1;
        v215 = v462;
        v216 = v455;
        v217 = (int *)v460;
        v218 = v449;
        v219 = (uint64_t)v448;
        v220 = v447;
        v221 = v412;
LABEL_35:
        (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v411 + 56))(v221, v214, 1, v217);
        v349 = v450;
        sub_10004A160(v221, v450, &qword_1011B4C88);
        swift_storeEnumTagMultiPayload(v349, v220, 1);
        v350 = sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
        v351 = sub_10045BAD4();
        _ConditionalContent<>.init(storage:)(v349, v217, v218, v350, v351);
        v352 = v457;
        sub_10004A160(v219, v457, &qword_1011B4C78);
        swift_storeEnumTagMultiPayload(v352, v216, 0);
        v353 = sub_10045BA50();
        v354 = sub_10045BB50();
        v355 = (uint64_t)v458;
        _ConditionalContent<>.init(storage:)(v352, v456, v459, v353, v354);
        sub_10004FF60(v219, &qword_1011B4C78);
        v356 = v465;
        sub_10004A160(v355, v465, &qword_1011B4C68);
        swift_storeEnumTagMultiPayload(v356, v463, 0);
        v357 = sub_10045BA2C();
        v358 = sub_10045BC70();
        _ConditionalContent<>.init(storage:)(v356, v464, v215, v357, v358);
        sub_10004FF60(v355, &qword_1011B4C68);
        sub_10004FF60(v221, &qword_1011B4C88);
        v108 = *(uint64_t (**)(char *, uint64_t))(v435 + 8);
        v133 = v423;
        v202 = v466;
LABEL_18:
        v134 = *(v202 - 32);
        return v108(v133, v134);
      }
    }
    else
    {
      v290 = v406;
      sub_10004A160(v211, v406, (uint64_t *)&unk_1011CEF20);
      if (v213(v212, 1, v210) != 1)
      {
        v388 = v207;
        v389 = v401;
        (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v401, v212, v210);
        v390 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        LODWORD(v466[0]) = dispatch thunk of static Equatable.== infix(_:_:)(v290, v389, v210, v390);
        v391 = *(void (**)(char *, uint64_t))(v208 + 8);
        v391(v389, v210);
        sub_10004FF60(v422, (uint64_t *)&unk_1011CEF20);
        sub_10004FF60(v388, (uint64_t *)&unk_1011CEF20);
        v391((char *)v290, v210);
        sub_10004FF60(v211, (uint64_t *)&unk_1011CEF20);
        v217 = (int *)v460;
        if ((v466[0] & 1) != 0)
        {
          v214 = 1;
          v215 = v462;
          v216 = v455;
          v218 = v449;
          v219 = (uint64_t)v448;
          v220 = v447;
          v221 = v412;
          goto LABEL_35;
        }
LABEL_30:
        v291 = v435;
        v292 = *(void (**)(char *, char *, uint64_t))(v435 + 16);
        v293 = v421;
        v292(v421, v204, v205);
        v294.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v467 + 104))(v293, enum case for GenericMusicItem.playlist(_:), v468);
        v466[0] = Playlist.name.getter(v294);
        v446 = v295;
        v296 = Playlist.curatorName.getter(v466[0]);
        v298 = v297;
        v299 = v409;
        v292(v409, v204, v205);
        if (!v298)
        {
          v296 = sub_10031E9D4();
          if (!v300)
          {
            v301 = v407;
            v302 = String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xE800000000000000);
            v303 = v408;
            static Locale.current.getter(v302);
            v296 = String.init(localized:table:bundle:locale:comment:)(v301, v296, 0, 0, v303, "Item Type", 9, 2);
          }
          v298 = v300;
        }
        v304 = (*(uint64_t (**)(char *, uint64_t))(v291 + 8))(v299, v205);
        v305 = (int *)v451;
        v306 = (uint64_t)v410;
        v307 = &v410[*(int *)(v451 + 28)];
        Playlist.variant.getter(v304);
        v308 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v308 - 8) + 56))(v307, 0, 10, v308);
        v309 = v306 + v305[9];
        v310 = (int *)sub_100007E8C(&qword_10119ED18);
        v311 = v309 + v310[12];
        v312 = (_QWORD *)(v309 + v310[16]);
        v313 = v204;
        v314 = v310[20];
        v292((char *)v309, v313, v434);
        _s17RecentlyAddedViewVMa(0);
        sub_10082460C(v311);
        v315 = type metadata accessor for Library.Context(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v315 - 8) + 56))(v311, 0, 1, v315);
        *v312 = 0;
        v312[1] = 0;
        *(_OWORD *)(v309 + v314) = xmmword_100EAE4D0;
        v316 = type metadata accessor for NavigationDestinationItem(0);
        swift_storeEnumTagMultiPayload(v309, v316, 2);
        (*(void (**)(uint64_t, char *, uint64_t))(v467 + 32))(v306, v421, v468);
        v317 = (_QWORD *)(v306 + v305[5]);
        v318 = v446;
        *v317 = v466[0];
        v317[1] = v318;
        v319 = (uint64_t *)(v306 + v305[6]);
        *v319 = v296;
        v319[1] = v298;
        *(_QWORD *)(v306 + v305[8]) = 0x3FF0000000000000;
        v320 = v453;
        sub_10005B704(v306, v453, _s9ContainerO5ModelVMa);
        v321 = swift_getKeyPath(&unk_100EBBEC8);
        v322 = (uint64_t)v452;
        *v452 = v321;
        v323 = sub_100007E8C(&qword_10119F030);
        swift_storeEnumTagMultiPayload(v322, v323, 0);
        v324 = v454;
        sub_10005B6C0(v320, v454, _s9ContainerO5ModelVMa);
        v217 = (int *)v460;
        v325 = v324 + *(int *)(v460 + 20);
        *(_QWORD *)v325 = swift_getKeyPath(&unk_100EBBEF8);
        *(_BYTE *)(v325 + 8) = 0;
        sub_100065228(v322, v324 + v217[6], &qword_10119EE98);
        v326 = (_QWORD *)(v324 + v217[7]);
        v327 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
        v328 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
        *v326 = EnvironmentObject.init()(v327, v328);
        v326[1] = v329;
        v330 = (_QWORD *)(v324 + v217[8]);
        v331 = type metadata accessor for NoticePresenter(0);
        v332 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
        *v330 = EnvironmentObject.init()(v331, v332);
        v330[1] = v333;
        v334 = v324 + v217[9];
        *(_QWORD *)v334 = sub_1008419B0;
        *(_QWORD *)(v334 + 8) = 0;
        *(_BYTE *)(v334 + 16) = 0;
        v335 = (_QWORD *)(v324 + v217[10]);
        v336 = type metadata accessor for NavigationPusher();
        v337 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
        *v335 = EnvironmentObject.init()(v336, v337);
        v335[1] = v338;
        v339 = (_QWORD *)(v324 + v217[11]);
        v340 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v341 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
        *v339 = EnvironmentObject.init()(v340, v341);
        v339[1] = v342;
        v343 = (_QWORD *)(v324 + v217[12]);
        v344 = type metadata accessor for TabSelectionManager(0);
        v345 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
        *v343 = EnvironmentObject.init()(v344, v345);
        v343[1] = v346;
        v347 = v324 + v217[13];
        *(_QWORD *)v347 = swift_getKeyPath(&unk_100EBBF20);
        *(_QWORD *)(v347 + 8) = 0;
        *(_BYTE *)(v347 + 16) = 0;
        v348 = v324 + v217[14];
        *(_QWORD *)v348 = swift_getKeyPath(&unk_100EBBF48);
        *(_QWORD *)(v348 + 8) = 0;
        *(_BYTE *)(v348 + 16) = 0;
        sub_10005B748(v306, _s9ContainerO5ModelVMa);
        v221 = v412;
        sub_10005B6C0(v324, v412, _s9ContainerO4CellVMa);
        v214 = 0;
        v215 = v462;
        v216 = v455;
        v218 = v449;
        v219 = (uint64_t)v448;
        v220 = v447;
        goto LABEL_35;
      }
      sub_10004FF60(v422, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v207, (uint64_t *)&unk_1011CEF20);
      (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v290, v210);
    }
    sub_10004FF60(v211, (uint64_t *)&unk_1011C66C0);
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t))(v65 + 96))(v68, v64);
  v80 = v445;
  v81 = v436;
  v82 = v437;
  (*(void (**)(char *, char *, uint64_t))(v445 + 32))(v436, v68, v437);
  v83 = (uint64_t)v441;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v441, v81, v82);
  v84.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t))(v467 + 104))(v83, enum case for GenericMusicItem.musicMovie(_:), v468);
  v85 = MusicMovie.title.getter(v84);
  v87 = v86;
  v88 = MusicMovie.artistName.getter(v85);
  v90 = v89;
  v91 = (int *)v442;
  v92 = v83 + *(int *)(v442 + 28);
  v93 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v92, 5, 10, v93);
  v94 = (uint64_t *)(v83 + v91[5]);
  *v94 = v85;
  v94[1] = v87;
  v95 = (uint64_t *)(v83 + v91[6]);
  *v95 = v88;
  v95[1] = v90;
  *(_QWORD *)(v83 + v91[8]) = 0x3FE5555555555555;
  v96 = v443;
  sub_10045B1DC(v83, v443);
  v97 = v439;
  sub_10004A160(v96, v439, &qword_1011B4CA8);
  swift_storeEnumTagMultiPayload(v97, v438, 0);
  v98 = sub_10045BBD4();
  v99 = sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
  v100 = (uint64_t)v440;
  _ConditionalContent<>.init(storage:)(v97, v444, v460, v98, v99);
  v101 = v457;
  sub_10004A160(v100, v457, &qword_1011B4C98);
  swift_storeEnumTagMultiPayload(v101, v455, 1);
  v102 = sub_10045BA50();
  v103 = sub_10045BB50();
  v104 = (uint64_t)v458;
  _ConditionalContent<>.init(storage:)(v101, v456, v459, v102, v103);
  sub_10004FF60(v100, &qword_1011B4C98);
  v105 = v465;
  sub_10004A160(v104, v465, &qword_1011B4C68);
  swift_storeEnumTagMultiPayload(v105, v463, 0);
  v106 = sub_10045BA2C();
  v107 = sub_10045BC70();
  _ConditionalContent<>.init(storage:)(v105, v464, v462, v106, v107);
  sub_10004FF60(v104, &qword_1011B4C68);
  sub_10004FF60(v96, &qword_1011B4CA8);
  sub_10005B748(v83, _s5VideoO5ModelVMa);
  v108 = *(uint64_t (**)(char *, uint64_t))(v445 + 8);
LABEL_10:
  v133 = v81;
  v134 = v82;
  return v108(v133, v134);
}

uint64_t sub_10045B1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a2;
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011B4D20);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = _s5VideoO5ModelVMa(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)_s5VideoO4CellVMa(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v14, _s5VideoO5ModelVMa);
  *v11 = swift_getKeyPath(&unk_100EBBEC8);
  v18 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v11, v18, 0);
  sub_10005B6C0((uint64_t)v14, (uint64_t)v17, _s5VideoO5ModelVMa);
  v19 = &v17[v15[5]];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_100EBBEF8);
  v19[8] = 0;
  sub_100065228((uint64_t)v11, (uint64_t)&v17[v15[6]], &qword_10119EE98);
  v20 = &v17[v15[7]];
  v21 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v22 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v20 = EnvironmentObject.init()(v21, v22);
  *((_QWORD *)v20 + 1) = v23;
  v24 = &v17[v15[8]];
  v25 = type metadata accessor for NoticePresenter(0);
  v26 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *(_QWORD *)v24 = EnvironmentObject.init()(v25, v26);
  *((_QWORD *)v24 + 1) = v27;
  v28 = &v17[v15[9]];
  *(_QWORD *)v28 = sub_1008419B0;
  *((_QWORD *)v28 + 1) = 0;
  v28[16] = 0;
  v29 = &v17[v15[10]];
  v30 = type metadata accessor for NavigationPusher();
  v31 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)v29 = EnvironmentObject.init()(v30, v31);
  *((_QWORD *)v29 + 1) = v32;
  v33 = &v17[v15[11]];
  v34 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v35 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v33 = EnvironmentObject.init()(v34, v35);
  *((_QWORD *)v33 + 1) = v36;
  v37 = &v17[v15[12]];
  v38 = type metadata accessor for TabSelectionManager(0);
  v39 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)v37 = EnvironmentObject.init()(v38, v39);
  *((_QWORD *)v37 + 1) = v40;
  v41 = &v17[v15[13]];
  *(_QWORD *)v41 = swift_getKeyPath(&unk_100EBBF20);
  *((_QWORD *)v41 + 1) = 0;
  v41[16] = 0;
  v42 = &v17[v15[14]];
  *(_QWORD *)v42 = swift_getKeyPath(&unk_100EBBF48);
  *((_QWORD *)v42 + 1) = 0;
  v42[16] = 0;
  v43 = type metadata accessor for GenericMusicItem(0);
  v44 = *(_QWORD *)(v43 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v8, a1, v43);
  v45 = &v8[*(int *)(v6 + 36)];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, 1, 1, v43);
  v46 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v45, v46, 0);
  v8[*(int *)(v6 + 40)] = 2;
  _s17RecentlyAddedViewVMa(0);
  sub_100824838((uint64_t)v5);
  sub_10045B664((uint64_t)v8, (uint64_t)v5, 0, 0, &qword_1011B4CB8, &qword_1011B4D20, &qword_1011B4CA8, v49);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v51);
  sub_10004FF60((uint64_t)v8, &qword_1011B4D20);
  return sub_10005B748((uint64_t)v17, _s5VideoO4CellVMa);
}

uint64_t sub_10045B648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_10045B664(a1, a2, a3, a4, &qword_1011B4D28, &qword_1011A7880, &qword_1011B4D30, a5);
}

uint64_t sub_10045B664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v11;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t *v48;

  v48 = a7;
  v11 = v8;
  v17 = (int *)sub_100007E8C(a5);
  __chkstk_darwin(v17);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v19, a6);
  v20 = &v19[v17[9]];
  v21 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, a2, v21);
  sub_100048AAC(a3, a4);
  v22 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v23 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v24 = EnvironmentObject.init()(v22, v23);
  v26 = v25;
  v27 = type metadata accessor for TabSelectionManager(0);
  v28 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v29 = EnvironmentObject.init()(v27, v28);
  v30 = (uint64_t *)&v19[v17[10]];
  *v30 = a3;
  v30[1] = a4;
  v31 = (uint64_t *)&v19[v17[11]];
  *v31 = v24;
  v31[1] = v26;
  v32 = (uint64_t *)&v19[v17[12]];
  *v32 = v29;
  v32[1] = v33;
  v34 = &v19[v17[13]];
  v35 = sub_100007E8C(&qword_10119CBF8);
  v36 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v34 = EnvironmentObject.init()(v35, v36);
  *((_QWORD *)v34 + 1) = v37;
  v38 = &v19[v17[14]];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_100EBBEF8);
  v38[8] = 0;
  v39 = &v19[v17[15]];
  v40 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v41 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v39 = EnvironmentObject.init()(v40, v41);
  *((_QWORD *)v39 + 1) = v42;
  v43 = &v19[v17[16]];
  *(_QWORD *)v43 = swift_getKeyPath(&unk_100EBBF20);
  *((_QWORD *)v43 + 1) = 0;
  v43[16] = 0;
  v44 = &v19[v17[17]];
  *(_QWORD *)v44 = swift_getKeyPath(&unk_100EBBF48);
  *((_QWORD *)v44 + 1) = 0;
  v44[16] = 0;
  sub_10005B704(v11, a8, _s5VideoO4CellVMa);
  v45 = sub_100007E8C(v48);
  return sub_100065228((uint64_t)v19, a8 + *(int *)(v45 + 36), a5);
}

uint64_t sub_10045B8F0(uint64_t a1)
{
  return sub_10045C040(a1, sub_100458938);
}

unint64_t sub_10045B904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4C28;
  if (!qword_1011B4C28)
  {
    v1 = sub_100044B54(&qword_1011B4BF8);
    sub_100049F28(&qword_1011B4C30, &qword_1011B4C08, (uint64_t)&unk_100EC0C68);
    sub_100049F28(&qword_1011B4C38, &qword_1011B4C20, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4C28);
  }
  return result;
}

uint64_t sub_10045B9A0()
{
  uint64_t v0;

  return sub_100458990(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_10045B9A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4C48;
  if (!qword_1011B4C48)
  {
    v1 = sub_100044B54(&qword_1011B4C40);
    sub_10015FD08(&qword_1011B4C50, &qword_1011B4C58, (void (*)(void))sub_10045BA2C, (void (*)(void))sub_10045BC70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4C48);
  }
  return result;
}

uint64_t sub_10045BA2C()
{
  return sub_10015FD08(&qword_1011B4C60, &qword_1011B4C68, (void (*)(void))sub_10045BA50, (void (*)(void))sub_10045BB50);
}

unint64_t sub_10045BA50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4C70;
  if (!qword_1011B4C70)
  {
    v1 = sub_100044B54(&qword_1011B4C78);
    sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
    sub_10045BAD4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4C70);
  }
  return result;
}

unint64_t sub_10045BAD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4C80;
  if (!qword_1011B4C80)
  {
    v1 = sub_100044B54(&qword_1011B4C88);
    sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4C80);
  }
  return result;
}

unint64_t sub_10045BB50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4C90;
  if (!qword_1011B4C90)
  {
    v1 = sub_100044B54(&qword_1011B4C98);
    sub_10045BBD4();
    sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4C90);
  }
  return result;
}

unint64_t sub_10045BBD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4CA0;
  if (!qword_1011B4CA0)
  {
    v1 = sub_100044B54(&qword_1011B4CA8);
    sub_100048748(&qword_10119F788, _s5VideoO4CellVMa, (uint64_t)&unk_100ED6F8C);
    sub_100049F28(&qword_1011B4CB0, &qword_1011B4CB8, (uint64_t)&protocol conformance descriptor for PlaybackSelection<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4CA0);
  }
  return result;
}

unint64_t sub_10045BC70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4CC0;
  if (!qword_1011B4CC0)
  {
    v1 = sub_100044B54(&qword_1011B4CC8);
    sub_10045BCDC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4CC0);
  }
  return result;
}

unint64_t sub_10045BCDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4CD0;
  if (!qword_1011B4CD0)
  {
    v1 = sub_100044B54(&qword_1011B4CD8);
    sub_10045BBD4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4CD0);
  }
  return result;
}

uint64_t sub_10045BD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v1 = _s17RecentlyAddedViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1000A6174(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8));
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v34 = v4;
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v5 + v8[5];
    v10 = type metadata accessor for Album(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = v5 + v8[6];
    v13 = type metadata accessor for Artist(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);
    v15 = v5 + v8[7];
    v16 = type metadata accessor for Composer(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v5 + v8[8];
    v19 = type metadata accessor for Genre(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v5 + v8[9];
    v22 = type metadata accessor for Playlist(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v5 + v8[10];
    v25 = type metadata accessor for TVShow(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v5 + v8[11];
    v28 = type metadata accessor for TVSeason(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(unint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v8[15] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v8[16]));
    v4 = v34;
  }
  v30 = v0 + v3 + *(int *)(v1 + 24);
  v31 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10045C034(uint64_t a1)
{
  return sub_10045C040(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100458B54);
}

uint64_t sub_10045C040(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s17RecentlyAddedViewVMa(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_10045C0C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B4D38;
  if (!qword_1011B4D38)
  {
    v1 = sub_100044B54(&qword_1011B4C00);
    sub_10045B904();
    sub_100049F28(&qword_1011B4C30, &qword_1011B4C08, (uint64_t)&unk_100EC0C68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B4D38);
  }
  return result;
}

void sub_10045C144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id i;
  double v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  void *v30;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
    v5 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v29, v3, v4, v5);
    v1 = v29[0];
    v27 = v29[1];
    v7 = v29[2];
    v8 = v29[3];
    v9 = v29[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v26 = v7;
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
    goto LABEL_32;
  }
  v23 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v23 < v13)
    {
      v24 = *(_QWORD *)(v27 + 8 * v23);
      v16 = v8 + 1;
      if (v24)
        goto LABEL_31;
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_36;
      v24 = *(_QWORD *)(v27 + 8 * v16);
      if (v24)
        goto LABEL_31;
      v16 = v8 + 3;
      if (v8 + 3 >= v13)
        goto LABEL_36;
      v24 = *(_QWORD *)(v27 + 8 * v16);
      if (v24)
        goto LABEL_31;
      v16 = v8 + 4;
      if (v8 + 4 >= v13)
        goto LABEL_36;
      v24 = *(_QWORD *)(v27 + 8 * v16);
      if (v24)
      {
LABEL_31:
        v14 = (v24 - 1) & v24;
        v15 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_32:
        for (i = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15); i; v14 = v9)
        {
          if (!objc_msgSend(i, "activationState", v22, v26))
            break;

          v8 = v16;
          v9 = v14;
          if ((v1 & 0x8000000000000000) == 0)
            goto LABEL_11;
LABEL_13:
          v17 = __CocoaSet.Iterator.next()(v6);
          if (!v17)
            break;
          v18 = v17;
          v28 = v17;
          v19 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
          swift_unknownObjectRetain(v18, v20);
          swift_dynamicCast(&v30, &v28, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
          i = v30;
          *(_QWORD *)&v22 = swift_unknownObjectRelease(v18).n128_u64[0];
          v16 = v8;
        }
        goto LABEL_36;
      }
      v16 = v8 + 5;
      if (v8 + 5 < v13)
      {
        v24 = *(_QWORD *)(v27 + 8 * v16);
        if (!v24)
        {
          v25 = v8 + 6;
          while (v13 != v25)
          {
            v24 = *(_QWORD *)(v27 + 8 * v25++);
            if (v24)
            {
              v16 = v25 - 1;
              goto LABEL_31;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_31;
      }
    }
LABEL_36:
    sub_10004FA7C(v1);
    return;
  }
  __break(1u);
}

double sub_10045C420(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  double result;
  objc_super v41;
  uint64_t v42;
  _QWORD v43[3];
  _BYTE v44[40];
  char v45[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
  if (v5)
  {
    v6 = (objc_class *)type metadata accessor for KeyboardShortcutsManager();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC5Music24KeyboardShortcutsManager____lazy_storage____keyCommands] = 0;
    *(_QWORD *)&v7[OBJC_IVAR____TtC5Music24KeyboardShortcutsManager_interfaceContext] = v5;
    v41.receiver = v7;
    v41.super_class = v6;
    swift_retain_n(v5, 2);
    v8 = objc_msgSendSuper2(&v41, "init");
    v9 = *(void **)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_keyboardShortcutsManager);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_keyboardShortcutsManager) = v8;
    swift_release();

  }
  else
  {
    v10 = *(void **)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_keyboardShortcutsManager);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_keyboardShortcutsManager) = 0;

  }
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v11 = qword_10124C790 + 16;
  swift_beginAccess(qword_10124C790 + 16, v45, 0, 0);
  sub_100064C78(v11, (uint64_t)v44);
  v12 = sub_100007E8C(&qword_1011B4DC8);
  v13 = _s11CoordinatorCMa_1();
  if ((swift_dynamicCast(v43, v44, v12, v13, 6) & 1) != 0)
  {
    v14 = v43[0];
    swift_retain();
    *(_QWORD *)(v14 + 24) = sub_1005F4308();
    swift_release();
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v2 + v4);
    swift_retain();
    swift_release();
    swift_release();
  }
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  sub_100064C78(qword_10124C798 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)v44);
  v15 = sub_100007E8C(&qword_1011B4DD0);
  v16 = _s11CoordinatorCMa();
  if ((swift_dynamicCast(v43, v44, v15, v16, 6) & 1) != 0)
  {
    v17 = (_QWORD *)v43[0];
    swift_retain();
    v17[3] = sub_1005F4308();
    swift_release();
    v17[4] = sub_1005F43F8();
    swift_release();
    v17[2] = *(_QWORD *)(v2 + v4);
    swift_retain();
    swift_release();
    swift_release();
  }
  if (qword_10119B8C8 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v18 = qword_10124C7A0 + 16;
  swift_beginAccess(qword_10124C7A0 + 16, v43, 0, 0);
  sub_100064C78(v18, (uint64_t)v44);
  v19 = sub_100007E8C(&qword_1011B4DD8);
  v20 = _s11CoordinatorCMa_0();
  if ((swift_dynamicCast(&v42, v44, v19, v20, 6) & 1) != 0)
  {
    *(_QWORD *)(v42 + 16) = *(_QWORD *)(v2 + v4);
    swift_retain();
    swift_release();
    if (!a1)
      goto LABEL_28;
LABEL_18:
    v21 = *(_QWORD *)(v2 + v4);
    if (!v21)
      goto LABEL_28;
    v22 = *(_QWORD *)(a1 + 32);
    v23 = v22 >> 62;
    v24 = v22;
    if (v22 >> 62)
      v24 = v22 & 0x3FFFFFFFFFFFFFFFLL;
    v25 = *(_QWORD *)(v21 + 32);
    v26 = v25 >> 62;
    v27 = v25;
    if (v25 >> 62)
      v27 = v25 & 0x3FFFFFFFFFFFFFFFLL;
    if (v24 == v27)
      goto LABEL_28;
    if ((_DWORD)v23)
    {
      if ((_DWORD)v23 == 1)
      {
        v28 = (void *)(v22 & 0x3FFFFFFFFFFFFFFFLL);
        if ((_DWORD)v26)
        {
          v29 = (id)(v25 & 0x3FFFFFFFFFFFFFFFLL);
          v30 = v28;
          swift_retain();
          swift_retain();
LABEL_34:
          swift_release();
          swift_release();
LABEL_37:
          swift_release();
          swift_release();

          goto LABEL_38;
        }
        v37 = (id)(v25 & 0x3FFFFFFFFFFFFFFFLL);
        v38 = v28;
        swift_retain();
        swift_retain();
        v29 = v37;
        v30 = v38;
        v34 = sub_10076C9AC(v30);
LABEL_36:
        v39 = v34;
        swift_release();
        swift_release();

        swift_bridgeObjectRelease(v39);
        goto LABEL_37;
      }
      v35 = (void *)(v22 & 0x3FFFFFFFFFFFFFFFLL);
      v36 = (void *)(v25 & 0x3FFFFFFFFFFFFFFFLL);
    }
    else
    {
      if ((_DWORD)v26 == 1)
      {
        v31 = (void *)(v25 & 0x3FFFFFFFFFFFFFFFLL);
        v32 = (id)(v22 & 0x3FFFFFFFFFFFFFFFLL);
        swift_retain();
        swift_retain();
        v33 = v31;
        v30 = v32;
        v29 = v33;
        v34 = sub_10076C6A4((char *)v22);
        goto LABEL_36;
      }
      v36 = (void *)(v25 & 0x3FFFFFFFFFFFFFFFLL);
      v35 = (void *)(v22 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v30 = v35;
    swift_retain();
    swift_retain();
    v29 = v36;
    goto LABEL_34;
  }
  if (a1)
    goto LABEL_18;
LABEL_28:
  swift_release();
  swift_release();
LABEL_38:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10045C954(unint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_signpost_type_t v37;
  char v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint8_t *v41;
  os_signpost_id_t v42;
  os_signpost_type_t v43;
  char *v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_signpost_type_t v55;
  uint8_t *v56;
  os_signpost_id_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  double v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  void *v77;
  id v78;
  id v79;
  char *v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  void *v90;
  id v91;
  unint64_t v92;
  char v93;
  id *v94;
  uint64_t (*v95)(void);
  id v96;
  _QWORD *v97;
  uint64_t v98;
  void (*v99)(double (*)(), uint64_t);
  id v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t KeyPath;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  char *v109;
  uint64_t inited;
  char *v111;
  char *v112;
  void (*v113)(char **, _QWORD);
  uint64_t v114;
  id v115;
  id v116;
  char *v117;
  char *v118;
  void (*v119)(char **, _QWORD);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  void (*v125)(void (*)(CGFloat *), uint64_t, __n128);
  __n128 v126;
  id v127;
  id v128;
  char v129;
  id v130;
  unsigned int v131;
  uint64_t v132;
  void *v133;
  id v134;
  id v135;
  void *v136;
  id v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  __n128 v178;
  uint64_t v179;
  __n128 v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  __n128 v195;
  __n128 v196;
  id v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  void *v203;
  uint64_t v204;
  id v205;
  id v206;
  char v207;
  char v208;
  id v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int64_t v223;
  uint64_t v224;
  unint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  int64_t v231;
  unint64_t v232;
  char *v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  __n128 v254;
  uint64_t v255;
  id v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  __n128 v264;
  uint64_t v265;
  NSObject *v266;
  uint64_t v267;
  os_signpost_type_t v268;
  __n128 v269;
  __n128 v270;
  uint64_t v271;
  const char *v272;
  char *v273;
  uint64_t v274;
  uint8_t *v275;
  os_signpost_id_t v276;
  void (*v277)(char *, uint64_t, __n128);
  __n128 v278;
  id v279;
  id v280;
  uint64_t v281;
  void *v282;
  void *v283;
  Swift::String v284;
  Swift::String v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  void (*v293)(char *, char *, uint64_t);
  uint64_t v294;
  void (*v295)(char *, uint64_t);
  char *v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  char *v303;
  char *v304;
  uint64_t v305;
  id v306;
  id v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t (*v311)(char *, uint64_t, uint64_t, __n128);
  uint64_t v312;
  void (*v313)(char *, uint64_t);
  uint64_t v314;
  id v315;
  char *v316;
  id v317;
  char *v318;
  void *v319;
  uint64_t v320;
  uint64_t v321;
  id v322;
  uint64_t v323;
  char v324[8];
  char *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  unint64_t v329;

  v306 = a3;
  v317 = a2;
  v294 = type metadata accessor for OSSignpostError(0);
  v305 = *(_QWORD *)(v294 - 8);
  __chkstk_darwin(v294);
  v304 = (char *)&v286 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v299 = sub_100007E8C(&qword_1011B4DE8);
  v297 = *(_QWORD *)(v299 - 8);
  __chkstk_darwin(v299);
  v296 = (char *)&v286 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v301 = sub_100007E8C((uint64_t *)&unk_1011B4DF0);
  v300 = *(_QWORD *)(v301 - 8);
  __chkstk_darwin(v301);
  v298 = (char *)&v286 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v7);
  v308 = (char *)&v286 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A23C0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v291 = (char *)&v286 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = type metadata accessor for DispatchPredicate(0);
  v288 = *(_QWORD *)(v289 - 8);
  __chkstk_darwin(v289);
  v287 = (uint64_t *)((char *)&v286 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for OSSignpostID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v303 = (char *)&v286 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v286 - v17;
  __chkstk_darwin(v19);
  v316 = (char *)&v286 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v286 - v22;
  v24 = type metadata accessor for OSSignposter(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v302 = (char *)&v286 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v318 = (char *)&v286 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v286 - v30;
  objc_opt_self(UIWindowScene);
  v319 = (void *)swift_dynamicCastObjCClass(a1);
  if (!v319)
  {
LABEL_90:
    v325 = 0;
    v326 = (char *)0xE000000000000000;
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease(v326);
    v325 = (char *)0xD000000000000011;
    v326 = (char *)0x8000000100E3AB30;
    v279 = (id)a1;
    v280 = objc_msgSend(v279, "description");
    v281 = static String._unconditionallyBridgeFromObjectiveC(_:)(v280);
    v283 = v282;

    v284._countAndFlagsBits = v281;
    v284._object = v283;
    String.append(_:)(v284);
    swift_bridgeObjectRelease(v283);
    v285._countAndFlagsBits = 0xD000000000000016;
    v285._object = (void *)0x8000000100E3AB50;
    String.append(_:)(v285);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v325, v326, "Music/MainSceneDelegate.swift", 29, 2, 81, 0);
    __break(1u);
    JUMPOUT(0x10045E7BCLL);
  }
  v290 = v10;
  v292 = v9;
  v315 = (id)a1;
  v32 = OSSignposter.launch.unsafeMutableAddressor();
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16);
  v312 = v32;
  v314 = v24;
  v311 = v33;
  v34 = ((uint64_t (*)(char *))v33)(v31);
  v35 = static OSSignpostID.exclusive.getter(v34);
  v36 = OSSignposter.logHandle.getter(v35);
  v37 = static os_signpost_type_t.begin.getter();
  v38 = OS_os_log.signpostsEnabled.getter();
  v309 = v13;
  if ((v38 & 1) != 0)
  {
    v39 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v40 = v316;
    v39(v316, v23, v13);
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    v42 = OSSignpostID.rawValue.getter();
    v43 = v37;
    v44 = v40;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v36, v43, v42, "MainScene.DidBecomeActive", "", v41, 2u);
    v45 = v41;
    v13 = v309;
    swift_slowDealloc(v45, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v40, v13);
  }
  else
  {

    v39 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v44 = v316;
  }
  v39(v44, v23, v13);
  v46 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  v47 = OSSignpostIntervalState.init(id:isOpen:)(v44, 1);
  v48 = *(void (**)(char *, uint64_t))(v14 + 8);
  v48(v23, v13);
  v49 = *(void (**)(char *, uint64_t))(v25 + 8);
  v50 = v314;
  v313 = v49;
  v49(v31, v314);
  *(_QWORD *)(v320 + OBJC_IVAR____TtC5Music17MainSceneDelegate_signpostDidBecomeActiveIntervalState) = v47;
  v51 = swift_release();
  v52 = v311(v318, v312, v50, v51);
  v53 = static OSSignpostID.exclusive.getter(v52);
  v54 = OSSignposter.logHandle.getter(v53);
  v55 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v39(v44, v18, v13);
    v56 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v56 = 0;
    v57 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v54, v55, v57, "MainScene.DidLoad", "", v56, 2u);
    v58 = v56;
    v44 = v316;
    swift_slowDealloc(v58, -1, -1);

    v48(v44, v13);
  }
  else
  {

  }
  v293 = v39;
  v39(v44, v18, v13);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  v310 = OSSignpostIntervalState.init(id:isOpen:)(v44, 1);
  v295 = v48;
  v48(v18, v13);
  v313(v318, v50);
  if (qword_10119C728 == -1)
    goto LABEL_9;
  while (1)
  {
    swift_once(&qword_10119C728, sub_1006DD7C0);
LABEL_9:
    v59 = type metadata accessor for Logger(0);
    sub_100048B14(v59, (uint64_t)qword_10124D830);
    v60 = v315;
    v61 = v317;
    v62 = v60;
    v63 = v61;
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.default.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc(22, -1);
      v318 = (char *)swift_slowAlloc(64, -1);
      v325 = v318;
      *(_DWORD *)v66 = 136446466;
      v67 = objc_msgSend(v62, "description");
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v70 = v69;

      v323 = sub_100322200(v68, v70, (uint64_t *)&v325);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324);

      *(_QWORD *)&v71 = swift_bridgeObjectRelease(v70).n128_u64[0];
      *(_WORD *)(v66 + 12) = 2082;
      v72 = objc_msgSend(v63, "description", v71);
      v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v75 = v74;

      v323 = sub_100322200(v73, v75, (uint64_t *)&v325);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324);

      swift_bridgeObjectRelease(v75);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Main scene: %{public}s willConnectTo: %{public}s", (uint8_t *)v66, 0x16u);
      v76 = v318;
      swift_arrayDestroy(v318, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v66, -1, -1);

    }
    else
    {

    }
    v77 = v319;
    v78 = objc_allocWithZone((Class)type metadata accessor for Window());
    v315 = v62;
    v79 = objc_msgSend(v78, "initWithWindowScene:", v77);
    v80 = (char *)objc_opt_self(UITraitCollection);
    v81 = objc_msgSend(v80, "currentTraitCollection");
    v82 = objc_msgSend(v81, "userInterfaceIdiom");

    if (v82 == (id)6)
    {
      v83 = (void *)objc_opt_self(UIColor);
      v84 = v79;
      v85 = objc_msgSend(v83, "labelColor");
      objc_msgSend(v84, "setTintColor:", v85);

    }
    else
    {
      v86 = objc_allocWithZone((Class)UIColor);
      v87 = v79;
      v88 = objc_msgSend(v86, "initWithWhite:alpha:", 0.0, 0.2);
      objc_msgSend(v87, "setBackgroundColor:", v88);

      v85 = v87;
      objc_msgSend(v85, "setTintColor:", *UIColor.MusicTint.normal.unsafeMutableAddressor());
    }
    v89 = v320;

    v90 = *(void **)(v89 + OBJC_IVAR____TtC5Music17MainSceneDelegate_window);
    *(_QWORD *)(v89 + OBJC_IVAR____TtC5Music17MainSceneDelegate_window) = v79;
    v91 = v79;

    LOBYTE(v325) = 6;
    v92 = sub_10004D63C();
    v93 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v92);
    v307 = v91;
    if ((v93 & 1) == 0)
    {
      v318 = v80;
      v94 = (id *)JSBridge.shared.unsafeMutableAddressor();
      v95 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*v94) + 0xC0);
      v96 = *v94;
      LOBYTE(v95) = v95();

      v97 = *v94;
      if ((v95 & 1) == 0)
      {
        v102 = qword_10119C088;
        v317 = v91;
        v103 = v97;
        if (v102 != -1)
          v103 = (_QWORD *)swift_once(&qword_10119C088, sub_10046C5FC);
        v104 = qword_10124D080;
        __chkstk_darwin(v103);
        sub_1000502A4();
        KeyPath = swift_getKeyPath(&unk_100EBBFB8);
        __chkstk_darwin(KeyPath);
        v106 = swift_getKeyPath(&unk_100EBBFF0);
        static Published.subscript.getter(&v325, v104, KeyPath, v106);
        swift_release();
        swift_release();
        __asm { BR              X12 }
      }
      v98 = swift_allocObject(&unk_1010C6A38, 24, 7);
      *(_QWORD *)(v98 + 16) = v91;
      v99 = *(void (**)(double (*)(), uint64_t))((swift_isaMask & *v97) + 0xD8);
      v100 = v91;
      v101 = v97;
      v99(sub_1004621D4, v98);

      swift_release();
      v80 = v318;
    }
    v107 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
    v108 = type metadata accessor for SeguePerformer();
    v109 = v107;
    inited = swift_initStaticObject(v108, &unk_10119CB90);
    v111 = &v109[OBJC_IVAR____TtC11MusicJSCore18JSSegueCoordinator_seguePerformingDelegate];
    swift_beginAccess(&v109[OBJC_IVAR____TtC11MusicJSCore18JSSegueCoordinator_seguePerformingDelegate], &v323, 1, 0);
    *((_QWORD *)v111 + 1) = &off_1010CB5E8;
    swift_unknownObjectWeakAssign(v111, inited);

    v112 = UIWindowScene.noticePresenter.getter();
    LOBYTE(inited) = *(_BYTE *)NoticePresenter.defaultEdge.unsafeMutableAddressor();
    v113 = (void (*)(char **, _QWORD))(*(uint64_t (**)(char **))(*(_QWORD *)v112 + 248))(&v325);
    *(_BYTE *)(v114 + 8) = inited;
    v113(&v325, 0);
    v115 = objc_msgSend(v80, "currentTraitCollection", swift_release().n128_f64[0]);
    v116 = objc_msgSend(v115, "userInterfaceIdiom");

    v117 = UIWindowScene.noticePresenter.getter();
    v118 = v117;
    if (v116 == (id)6)
    {
      v119 = (void (*)(char **, _QWORD))(*(uint64_t (**)(char **))(*(_QWORD *)v117 + 248))(&v325);
      *(_QWORD *)(v120 + 16) = 0x4034000000000000;
    }
    else
    {
      v121 = *NoticePresenter.defaultEdgePadding.unsafeMutableAddressor();
      v119 = (void (*)(char **, _QWORD))(*(uint64_t (**)(char **))(*(_QWORD *)v118 + 248))(&v325);
      *(_QWORD *)(v122 + 16) = v121;
    }
    v119(&v325, 0);
    swift_release();
    v123 = UIWindowScene.noticePresenter.getter();
    v124 = swift_allocObject(&unk_1010C6970, 24, 7);
    swift_unknownObjectWeakInit(v124 + 16, v89);
    v125 = *(void (**)(void (*)(CGFloat *), uint64_t, __n128))(*(_QWORD *)v123 + 264);
    v126 = swift_retain();
    v125(sub_1004621A8, v124, v126);
    swift_release();
    swift_release();
    LOBYTE(v325) = 5;
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v92) & 1) != 0)
    {
      v127 = objc_msgSend(v77, "traitCollection");
      sub_1004618D4(v127, 0);

      objc_msgSend(v91, "makeKeyAndVisible");
      LOBYTE(v325) = 6;
      if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v92) & 1) == 0)
      {
        v128 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v129 = sub_10045E8EC();

        if ((v129 & 1) != 0
          || (v130 = objc_msgSend((id)objc_opt_self(ICPrivacyInfo), "sharedPrivacyInfo"),
              v131 = objc_msgSend(v130, "privacyAcknowledgementRequiredForMusic"),
              v130,
              v131))
        {
          v132 = *(_QWORD *)(v89 + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
          if (!v132)
          {

            swift_release();
            v137 = v315;

            return;
          }
          a1 = *(_QWORD *)(v132 + 32);
          if (a1 >> 62 == 2 || a1 >> 62 == 1)
          {
            v133 = (void *)(a1 & 0x3FFFFFFFFFFFFFFFLL);
            a1 &= 0x3FFFFFFFFFFFFFFFuLL;
          }
          else
          {
            v133 = (void *)(a1 & 0x3FFFFFFFFFFFFFFFLL);
          }
          v138 = v133;
          v139 = sub_1005F43F8();
          v140 = type metadata accessor for PrivacyDisclaimerPresenter(0);
          v141 = swift_allocObject(v140, *(unsigned int *)(v140 + 48), *(unsigned __int16 *)(v140 + 52));
          *(_QWORD *)(v141 + 24) = 0;
          *(_BYTE *)(v141 + 32) = 1;
          v142 = v141 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel;
          v143 = type metadata accessor for WelcomeViewModel(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v142, 1, 1, v143);
          *(_QWORD *)(v141 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_contentViewController) = 0;
          *(_QWORD *)(v141 + 16) = v139;
          v144 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
          v152 = static OS_dispatch_queue.main.getter(v144, v145, v146, v147, v148, v149, v150, v151);
          v153 = v287;
          *v287 = v152;
          v154 = v288;
          v155 = v289;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v288 + 104))(v153, enum case for DispatchPredicate.onQueue(_:), v289);
          LOBYTE(v139) = _dispatchPreconditionTest(_:)(v153);
          (*(void (**)(_QWORD *, uint64_t))(v154 + 8))(v153, v155);
          if ((v139 & 1) == 0)
          {
            __break(1u);
            goto LABEL_90;
          }
          *(_BYTE *)(v141 + 32) = 1;
          sub_1007AF974((void *)a1, 1);

          swift_release();
        }
      }
      v156 = swift_allocObject(&unk_1010C6970, 24, 7);
      swift_unknownObjectWeakInit(v156 + 16, v89);
      v157 = swift_allocObject(&unk_1010C69C0, 32, 7);
      *(_QWORD *)(v157 + 16) = v156;
      *(_QWORD *)(v157 + 24) = v77;
      v158 = type metadata accessor for PrivacyAcknowledgementObserver();
      swift_allocObject(v158, 56, 7);
      v318 = (char *)v315;
      *(_QWORD *)(v89 + OBJC_IVAR____TtC5Music17MainSceneDelegate_privacyAcknowledgementObserver) = PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(1, (uint64_t)sub_1004621B4, v157);
      swift_release();
      if (qword_10119BFC8 != -1)
        swift_once(&qword_10119BFC8, sub_10040BCB8);
      objc_msgSend(v77, "setActivityItemsConfigurationSource:", static GroupActivitiesManager.suggestionProvider);
      sub_1005F4308();
      v159 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v160 = (char *)ObservableObject<>.objectWillChange.getter(v159);
      swift_release();
      v325 = v160;
      v161 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v322 = (id)static OS_dispatch_queue.main.getter(v161, v162, v163, v164, v165, v166, v167, v168);
      v169 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      v317 = *(id *)(*(_QWORD *)(v169 - 8) + 56);
      v170 = (uint64_t)v308;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v317)(v308, 1, 1, v169);
      v171 = type metadata accessor for ObservableObjectPublisher(0);
      v289 = v171;
      v288 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      v172 = v291;
      Publisher.receive<A>(on:options:)(&v322, v170, v171, v161, &protocol witness table for ObservableObjectPublisher, v288);
      sub_10004FF60(v170, &qword_1011A08F0);

      swift_release();
      v173 = swift_allocObject(&unk_1010C6970, 24, 7);
      swift_unknownObjectWeakInit(v173 + 16, v89);
      v174 = swift_allocObject(&unk_1010C69E8, 32, 7);
      v175 = v319;
      *(_QWORD *)(v174 + 16) = v173;
      *(_QWORD *)(v174 + 24) = v175;
      v176 = sub_100049F28((unint64_t *)&qword_1011A23D0, (uint64_t *)&unk_1011A23C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v287 = (_QWORD *)v176;
      v318 = v318;
      v177 = v292;
      Publisher<>.sink(receiveValue:)(sub_1004621C0, v174, v292, v176);
      v178 = swift_release();
      v290 = *(_QWORD *)(v290 + 8);
      ((void (*)(char *, uint64_t, __n128))v290)(v172, v177, v178);
      v179 = v320 + OBJC_IVAR____TtC5Music17MainSceneDelegate_observers;
      v180 = swift_beginAccess(v320 + OBJC_IVAR____TtC5Music17MainSceneDelegate_observers, &v325, 33, 0);
      AnyCancellable.store(in:)(v179, v180);
      swift_endAccess(&v325);
      swift_release();
      sub_1005F4380();
      v181 = sub_100007E8C(&qword_10119F4E8);
      sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v182 = v181;
      v77 = v319;
      v89 = v320;
      v183 = (char *)ObservableObject<>.objectWillChange.getter(v182);
      swift_release();
      v325 = v183;
      v322 = (id)static OS_dispatch_queue.main.getter(v184, v185, v186, v187, v188, v189, v190, v191);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v317)(v170, 1, 1, v169);
      Publisher.receive<A>(on:options:)(&v322, v170, v289, v161, &protocol witness table for ObservableObjectPublisher, v288);
      sub_10004FF60(v170, &qword_1011A08F0);

      swift_release();
      v192 = swift_allocObject(&unk_1010C6970, 24, 7);
      swift_unknownObjectWeakInit(v192 + 16, v89);
      v193 = swift_allocObject(&unk_1010C6A10, 32, 7);
      *(_QWORD *)(v193 + 16) = v192;
      *(_QWORD *)(v193 + 24) = v77;
      v194 = v318;
      Publisher<>.sink(receiveValue:)(sub_1004621CC, v193, v177, v287);
      v195 = swift_release();
      ((void (*)(char *, uint64_t, __n128))v290)(v172, v177, v195);
      v196 = swift_beginAccess(v179, &v325, 33, 0);
      AnyCancellable.store(in:)(v179, v196);
      swift_endAccess(&v325);
      swift_release();
    }
    else
    {
      v325 = (char *)0xD000000000000019;
      v326 = (char *)0x8000000100E3AB90;
      LOBYTE(v327) = 0;
      v328 = (char *)_swiftEmptyArrayStorage;
      v134 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011B4E00));
      v135 = v91;
      v136 = (void *)UIHostingController.init(rootView:)(&v325);
      objc_msgSend(v135, "setRootViewController:", v136);

      objc_msgSend(v135, "makeKeyAndVisible");
    }
    sub_100461BA4();
    v197 = v306;
    v198 = objc_msgSend(v306, "URLContexts");
    v199 = sub_10004A07C(0, &qword_1011B4DE0, UIOpenURLContext_ptr);
    v200 = sub_1000EA1BC(&qword_1011C8A70, &qword_1011B4DE0, UIOpenURLContext_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v201 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v198, v199, v200);

    sub_100461224(v77, v201);
    v202 = objc_msgSend(v197, "shortcutItem", swift_bridgeObjectRelease(v201).n128_f64[0]);
    if (v202)
    {
      v203 = v202;
      v204 = type metadata accessor for LaunchOptions(0);
      swift_allocObject(v204, *(unsigned int *)(v204 + 48), *(unsigned __int16 *)(v204 + 52));
      v205 = v315;
      v206 = v203;
      if (sub_1002743BC(v206, v77, (uint64_t)UIScreen.Dimensions.size.getter, 0))
      {
        sub_100275D54();
        v208 = v207;
        swift_release();
        if ((v208 & 1) != 0)
          *(_BYTE *)(v89 + OBJC_IVAR____TtC5Music17MainSceneDelegate_scriptedApplicationActivationMethod) = 1;
      }

    }
    v209 = objc_msgSend(v197, "userActivities");
    v210 = (void *)sub_10004A07C(0, &qword_1011B4E08, NSUserActivity_ptr);
    v211 = sub_1000EA1BC(&qword_1011B4E10, &qword_1011B4E08, NSUserActivity_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v212 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v209, v210, v211);

    v317 = v210;
    if ((v212 & 0xC000000000000001) != 0)
    {
      v214 = v212 < 0 ? v212 : v212 & 0xFFFFFFFFFFFFFF8;
      v215 = __CocoaSet.makeIterator()(v214);
      v213 = Set.Iterator.init(_cocoa:)(&v325, v215, v210, v211);
      v212 = (uint64_t)v325;
      v318 = v326;
      v216 = v327;
      v217 = v328;
      v218 = v329;
    }
    else
    {
      v217 = 0;
      v219 = -1 << *(_BYTE *)(v212 + 32);
      v220 = *(_QWORD *)(v212 + 56);
      v318 = (char *)(v212 + 56);
      v216 = ~v219;
      v221 = -v219;
      v222 = v221 < 64 ? ~(-1 << v221) : -1;
      v218 = v222 & v220;
    }
    v306 = (id)v216;
    v223 = (unint64_t)(v216 + 64) >> 6;
    if (v212 < 0)
      break;
LABEL_55:
    if (v218)
    {
      v224 = (v218 - 1) & v218;
      v225 = __clz(__rbit64(v218)) | ((_QWORD)v217 << 6);
      v226 = v217;
      goto LABEL_74;
    }
    v231 = (int64_t)(v217 + 1);
    if (!__OFADD__(v217, 1))
    {
      if (v231 >= v223)
        goto LABEL_77;
      v232 = *(_QWORD *)&v318[8 * v231];
      v226 = v217 + 1;
      if (!v232)
      {
        v226 = v217 + 2;
        if ((uint64_t)(v217 + 2) >= v223)
          goto LABEL_77;
        v232 = *(_QWORD *)&v318[8 * (_QWORD)v226];
        if (!v232)
        {
          v226 = v217 + 3;
          if ((uint64_t)(v217 + 3) >= v223)
            goto LABEL_77;
          v232 = *(_QWORD *)&v318[8 * (_QWORD)v226];
          if (!v232)
          {
            v226 = v217 + 4;
            if ((uint64_t)(v217 + 4) >= v223)
              goto LABEL_77;
            v232 = *(_QWORD *)&v318[8 * (_QWORD)v226];
            if (!v232)
            {
              v233 = v217 + 5;
              while ((char *)v223 != v233)
              {
                v232 = *(_QWORD *)&v318[8 * (_QWORD)v233++];
                if (v232)
                {
                  v226 = v233 - 1;
                  goto LABEL_73;
                }
              }
              goto LABEL_77;
            }
          }
        }
      }
LABEL_73:
      v224 = (v232 - 1) & v232;
      v225 = __clz(__rbit64(v232)) + ((_QWORD)v226 << 6);
LABEL_74:
      v230 = *(id *)(*(_QWORD *)(v212 + 48) + 8 * v225);
      if (v230)
        goto LABEL_75;
      goto LABEL_77;
    }
    __break(1u);
  }
  while (1)
  {
    v227 = __CocoaSet.Iterator.next()(v213);
    if (!v227)
      break;
    v229 = v227;
    v321 = v227;
    swift_unknownObjectRetain(v227, v228);
    swift_dynamicCast(&v322, &v321, (char *)&type metadata for Swift.AnyObject + 8, v317, 7);
    v230 = v322;
    swift_unknownObjectRelease(v229);
    v226 = v217;
    v224 = v218;
    if (!v230)
      break;
LABEL_75:
    sub_100460A70(v319, v230);

    v217 = v226;
    v218 = v224;
    if ((v212 & 0x8000000000000000) == 0)
      goto LABEL_55;
  }
LABEL_77:
  sub_10004FA7C(v212);
  if (qword_10119C368 != -1)
    swift_once(&qword_10119C368, sub_1005F4120);
  swift_beginAccess(qword_10124D480 + *(_QWORD *)(*(_QWORD *)qword_10124D480 + 88), &v322, 33, 0);
  v234 = sub_100007E8C((uint64_t *)&unk_1011B4E18);
  v235 = v296;
  Published.projectedValue.getter(v234);
  swift_endAccess(&v322);
  v236 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v322 = (id)static OS_dispatch_queue.main.getter(v236, v237, v238, v239, v240, v241, v242, v243);
  v244 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v245 = (uint64_t)v308;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v244 - 8) + 56))(v308, 1, 1, v244);
  v246 = sub_100049F28((unint64_t *)&unk_1011B4E28, &qword_1011B4DE8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v247 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v248 = v298;
  v249 = v299;
  Publisher.receive<A>(on:options:)(&v322, v245, v299, v236, v246, v247);
  sub_10004FF60(v245, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v297 + 8))(v235, v249);
  v250 = sub_100049F28(&qword_1011B4E38, (uint64_t *)&unk_1011B4DF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v251 = v301;
  Publisher<>.sink(receiveValue:)(sub_10045EFB0, 0, v301, v250);
  (*(void (**)(char *, uint64_t))(v300 + 8))(v248, v251);
  v252 = v320;
  v253 = v320 + OBJC_IVAR____TtC5Music17MainSceneDelegate_observers;
  v254 = swift_beginAccess(v320 + OBJC_IVAR____TtC5Music17MainSceneDelegate_observers, &v322, 33, 0);
  AnyCancellable.store(in:)(v253, v254);
  swift_endAccess(&v322);
  swift_release();
  v255 = qword_10119B8B0;
  v256 = v315;
  v257 = v305;
  v258 = v304;
  v259 = v303;
  v260 = v314;
  v261 = v302;
  if (v255 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v262 = qword_10124C788;
  v263 = type metadata accessor for Player.SnapshotController();
  swift_allocObject(v263, 81, 7);
  swift_retain();
  *(_QWORD *)(v252 + OBJC_IVAR____TtC5Music17MainSceneDelegate_snapshotter) = Player.SnapshotController.init(windowScene:player:)(v319, v262);
  v264 = swift_release();
  v265 = v311(v261, v312, v260, v264);
  v266 = OSSignposter.logHandle.getter(v265);
  v267 = OSSignpostIntervalState.signpostID.getter();
  v268 = static os_signpost_type_t.end.getter(v267);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v269 = swift_retain();
    checkForErrorAndConsumeState(state:)(v269);
    v270 = swift_release();
    v271 = v294;
    if ((*(unsigned int (**)(char *, uint64_t, __n128))(v257 + 88))(v258, v294, v270) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v272 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v257 + 8))(v258, v271);
      v272 = "";
    }
    v273 = v316;
    v274 = v309;
    v293(v316, v259, v309);
    v275 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v275 = 0;
    v276 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v266, v268, v276, "MainScene.DidLoad", v272, v275, 2u);
    swift_slowDealloc(v275, -1, -1);

    v277 = (void (*)(char *, uint64_t, __n128))v295;
    v295(v259, v274);
    v313(v261, v260);
    v278 = swift_release();
    v277(v273, v274, v278);
  }
  else
  {

    v295(v259, v309);
    v313(v261, v260);
    swift_release();
  }
}

void sub_10045E7D8(CGFloat *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  id v9;
  double v10;
  CGFloat top;
  double v12;
  CGFloat leading;
  double v14;
  CGFloat bottom;
  double v16;
  CGFloat trailing;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  _BYTE v23[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    goto LABEL_8;
  v5 = (void *)Strong;
  v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
  swift_retain();

  if (!v6)
    goto LABEL_8;
  v7 = *(_QWORD *)(v6 + 32);
  v8 = (id)(v7 & 0x3FFFFFFFFFFFFFFFLL);
  swift_release();
  if (!(v7 >> 62))
  {
    v18 = (id)v7;
    sub_100728D24();
    top = v19;
    leading = v20;
    bottom = v21;
    trailing = v22;

    goto LABEL_9;
  }
  if (v7 >> 62 != 1)
  {

LABEL_8:
    top = NSDirectionalEdgeInsetsZero.top;
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
    goto LABEL_9;
  }
  v9 = v8;
  sub_100354704();
  top = v10;
  leading = v12;
  bottom = v14;
  trailing = v16;

LABEL_9:
  a1[3] = top;
  a1[4] = leading;
  a1[5] = bottom;
  a1[6] = trailing;
}

uint64_t sub_10045E8EC()
{
  unint64_t v0;
  uint64_t result;
  _QWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  v2[0] = 0xD00000000000001ELL;
  v2[1] = 0x8000000100E3ABB0;
  v0 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)v2, (uint64_t)&type metadata for String, v0, (uint64_t)v3);
  if (v4)
  {
    result = swift_dynamicCast(v2, v3, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((_DWORD)result)
      return LOBYTE(v2[0]);
  }
  else
  {
    sub_10004FF60((uint64_t)v3, &qword_10119DCC0);
    return 0;
  }
  return result;
}

void sub_10045E988(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t Strong;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[56];
  uint64_t v26;
  _BYTE v27[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25[0] = 6;
  v8 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v8) & 1) != 0)
  {
    if ((a1 & 1) != 0)
      return;
    goto LABEL_8;
  }
  if ((a1 & 1) == 0)
  {
LABEL_8:
    if (qword_10119BEF0 != -1)
      swift_once(&qword_10119BEF0, sub_10034A560);
    sub_10034AF00();
    return;
  }
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v10 = (void *)Strong;
    static PresentationSource.topmost(in:)((uint64_t)v25);
    if (v26 == 1)
    {

      sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011A20F0);
    }
    else
    {
      v11 = (void *)swift_unknownObjectWeakLoadStrong(v25);
      sub_100064B4C((uint64_t)v25);
      if (v11)
      {
        v12 = sub_1005F43F8();
        v13 = type metadata accessor for PrivacyDisclaimerPresenter(0);
        v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
        *(_QWORD *)(v14 + 24) = 0;
        *(_BYTE *)(v14 + 32) = 1;
        v15 = v14 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel;
        v16 = type metadata accessor for WelcomeViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
        *(_QWORD *)(v14 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_contentViewController) = 0;
        *(_QWORD *)(v14 + 16) = v12;
        v17 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *v7 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24);
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
        LOBYTE(v12) = _dispatchPreconditionTest(_:)(v7);
        (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
        if ((v12 & 1) != 0)
        {
          *(_BYTE *)(v14 + 32) = 1;
          sub_1007AF974(v11, 1);

          swift_release();
        }
        else
        {
          __break(1u);
        }
      }
      else
      {

      }
    }
  }
}

void sub_10045EBEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  _BYTE v18[56];
  uint64_t v19;
  _BYTE v20[72];
  _BYTE v21[24];
  _BYTE v22[24];
  _QWORD v23[4];
  char v24;
  uint64_t v25;
  void *v26;
  _BYTE v27[32];
  uint64_t v28;
  char v29;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v17 = a3;
    swift_retain();
    v7 = sub_1005F4308();
    swift_release();
    v8 = (uint64_t *)((char *)v7 + *(_QWORD *)(*v7 + 96));
    swift_beginAccess(v8, v21, 0, 0);
    v10 = *v8;
    v9 = v8[1];
    v12 = v8[2];
    v11 = v8[3];
    v14 = v8[4];
    v13 = v8[5];
    v15 = (void *)v8[6];
    sub_100462208(*v8, v9, v12, v11, v14, v13, v15);
    swift_release();
    if (v13)
    {
      v23[0] = v10;
      v23[1] = v9;
      v23[2] = v12;
      v23[3] = v11;
      v24 = v14 & 1;
      v25 = v13;
      v26 = v15;
      memset(v27, 0, sizeof(v27));
      v28 = 0;
      v29 = -1;
      PresentationSource.init(windowScene:position:)(v17, (uint64_t)v27, (uint64_t)v20);
      sub_10004A07C(0, &qword_1011A2A18, UIAlertController_ptr);
      v16 = static UIAlertController.alertController(with:overrideStyle:)((uint64_t)v23, 0, 1);
      objc_msgSend(v16, "setImage:", v15);
      sub_10004A160((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_1011A20F0);
      if (v19 == 1)
      {
        sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A20F0);

        sub_100462254(v10, v9, v12, v11, v14, v13, v15);
        sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A20F0);
      }
      else
      {
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v16, 1, (id)0xF, (void **)1, 0, 0);

        sub_100462254(v10, v9, v12, v11, v14, v13, v15);
        sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A20F0);
        sub_100064B4C((uint64_t)v18);
      }
    }
    else
    {

    }
  }
}

void sub_10045EE30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD v10[9];
  _QWORD v11[9];
  _BYTE v12[24];
  _BYTE v13[32];
  uint64_t v14;
  char v15;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1005F4380();
    PresentedViewState.data.getter(v11);
    swift_release();
    v7 = v11[0];
    if (v11[0])
    {
      memset(v13, 0, sizeof(v13));
      v14 = 0;
      v15 = -1;
      PresentationSource.init(windowScene:position:)(a3, (uint64_t)v13, (uint64_t)v11);
      v10[0] = v7;
      v8 = objc_allocWithZone((Class)sub_100007E8C((uint64_t *)&unk_1011B4E58));
      swift_retain();
      v9 = (void *)UIHostingController.init(rootView:)(v10);
      sub_10004A160((uint64_t)v11, (uint64_t)v10, (uint64_t *)&unk_1011A20F0);
      if (v10[7] == 1)
      {
        sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A20F0);

        swift_release();
        sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20F0);
      }
      else
      {
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v9, 1, (id)0xF, (void **)1, 0, 0);
        swift_release();

        sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A20F0);
        sub_100064B4C((uint64_t)v10);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_10045EFB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unsigned int (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  unsigned int (*v59)(_QWORD, _QWORD, _QWORD);
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - v9;
  v11 = type metadata accessor for NavigationDestinationItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v55 - v19;
  v62 = a1;
  sub_10004A160(a1, (uint64_t)v10, &qword_1011A3CF0);
  v21 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v12 + 48);
  if (v21(v10, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011A3CF0);
  }
  else
  {
    sub_10046233C((uint64_t)v10, (uint64_t)v20);
    if (qword_10119C088 != -1)
      swift_once(&qword_10119C088, sub_10046C5FC);
    v22 = qword_10124D080;
    v23 = sub_100082F1C((uint64_t)v20);
    if (v23 == 6)
    {
      sub_10005B748((uint64_t)v20, type metadata accessor for NavigationDestinationItem);
    }
    else
    {
      v58 = v7;
      v59 = v21;
      v61 = v23;
      v60 = v4;
      __chkstk_darwin(v23);
      *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
      v24 = sub_1000502A4();
      *(&v55 - 1) = v24;
      KeyPath = swift_getKeyPath(&unk_100EBBFB8);
      __chkstk_darwin(KeyPath);
      *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
      *(&v55 - 1) = v24;
      v57 = v24;
      v26 = swift_getKeyPath(&unk_100EBBFF0);
      static Published.subscript.getter(&v64, v22, KeyPath, v26);
      swift_release();
      swift_release();
      if (v64 == 6 || (sub_10072DEC0(v61), (v27 & 1) == 0))
      {
        if (qword_10119C4F8 != -1)
          swift_once(&qword_10119C4F8, sub_10066DE80);
        v28 = type metadata accessor for Logger(0);
        sub_100048B14(v28, (uint64_t)qword_10124D548);
        v29 = sub_10005B704((uint64_t)v20, (uint64_t)v17, type metadata accessor for NavigationDestinationItem);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter(v30);
        if (os_log_type_enabled(v30, v31))
        {
          v32 = swift_slowAlloc(22, -1);
          v56 = swift_slowAlloc(64, -1);
          v64 = v56;
          *(_DWORD *)v32 = 136446466;
          LOBYTE(v63) = v61;
          v33 = String.init<A>(describing:)(&v63, &type metadata for TabIdentifier);
          v35 = v34;
          v63 = sub_100322200(v33, v34, &v64);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
          swift_bridgeObjectRelease(v35);
          *(_WORD *)(v32 + 12) = 2082;
          sub_10005B704((uint64_t)v17, (uint64_t)v14, type metadata accessor for NavigationDestinationItem);
          v36 = String.init<A>(describing:)(v14, v11);
          v38 = v37;
          v63 = sub_100322200(v36, v37, &v64);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
          swift_bridgeObjectRelease(v38);
          sub_10005B748((uint64_t)v17, type metadata accessor for NavigationDestinationItem);
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Tab switched to %{public}s for navigation item %{public}s", (uint8_t *)v32, 0x16u);
          v39 = v56;
          swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v39, -1, -1);
          swift_slowDealloc(v32, -1, -1);
        }
        else
        {
          sub_10005B748((uint64_t)v17, type metadata accessor for NavigationDestinationItem);
        }

        v40 = qword_10124D080;
        __chkstk_darwin(v41);
        v42 = v57;
        *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
        *(&v55 - 1) = v42;
        v43 = swift_getKeyPath(&unk_100EBBFB8);
        __chkstk_darwin(v43);
        *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
        *(&v55 - 1) = v42;
        v44 = swift_getKeyPath(&unk_100EBBFF0);
        static Published.subscript.getter(&v64, v40, v43, v44);
        swift_release();
        swift_release();
        LOBYTE(v43) = v64;
        __chkstk_darwin(v45);
        *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
        *(&v55 - 1) = v42;
        v46 = swift_getKeyPath(&unk_100EBBFB8);
        __chkstk_darwin(v46);
        *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
        *(&v55 - 1) = v42;
        v47 = swift_getKeyPath(&unk_100EBBFF0);
        LOBYTE(v64) = v61;
        swift_retain();
        static Published.subscript.setter(&v64, v40, v46, v47);
        sub_10046C638(v43);
      }
      sub_10005B748((uint64_t)v20, type metadata accessor for NavigationDestinationItem);
      v21 = v59;
      v7 = v58;
    }
  }
  LOBYTE(v64) = 6;
  v48 = sub_10004D63C();
  result = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v48);
  if ((result & 1) == 0)
  {
    LOBYTE(v64) = 5;
    result = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v48);
    if ((result & 1) != 0)
    {
      sub_10004A160(v62, (uint64_t)v7, &qword_1011A3CF0);
      if (v21(v7, 1, v11) == 1)
      {
        return sub_10004FF60((uint64_t)v7, &qword_1011A3CF0);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v7, v11) == 7)
        {
          v50 = sub_1000822B4(*((_QWORD *)v7 + 2), *((_QWORD *)v7 + 3));
          if (qword_10119C088 != -1)
            v50 = swift_once(&qword_10119C088, sub_10046C5FC);
          v51 = qword_10124D080;
          __chkstk_darwin(v50);
          *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
          v52 = sub_1000502A4();
          *(&v55 - 1) = v52;
          v53 = swift_getKeyPath(&unk_100EBBFB8);
          __chkstk_darwin(v53);
          *(&v55 - 2) = (uint64_t)&type metadata for TabIdentifier;
          *(&v55 - 1) = v52;
          v54 = swift_getKeyPath(&unk_100EBBFF0);
          static Published.subscript.getter(&v64, v51, v53, v54);
          swift_release();
          swift_release();
          __asm { BR              X10; loc_10045F754 }
        }
        return sub_10005B748((uint64_t)v7, type metadata accessor for NavigationDestinationItem);
      }
    }
  }
  return result;
}

uint64_t sub_10045F884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[44] = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v4[45] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A9580);
  v4[46] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s18PerformanceConteXtVMa(0);
  v4[47] = v7;
  v4[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[49] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[50] = v10;
  v4[51] = v11;
  return swift_task_switch(sub_10045F95C, v10, v11);
}

uint64_t sub_10045F95C()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v1 = JSBridge.shared.unsafeMutableAddressor();
  v2 = (_QWORD *)*v1;
  *(_QWORD *)(v0 + 416) = *v1;
  v3 = *(int **)((swift_isaMask & *v2) + 0xE0);
  v4 = v3[1];
  v7 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 424) = v5;
  *v5 = v0;
  v5[1] = sub_10045F9F4;
  return v7(v0 + 16);
}

uint64_t sub_10045F9F4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 416);
  swift_task_dealloc(*(_QWORD *)(*v0 + 424));

  return swift_task_switch(sub_10045FA44, *(_QWORD *)(v1 + 400), *(_QWORD *)(v1 + 408));
}

uint64_t sub_10045FA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  __int128 v10;
  id v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 352);
  swift_release();
  v5 = *(id *)(v0 + 16);
  sub_1000A543C(v0 + 16);
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_QWORD *)(v0 + 184) = 0;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 192) = xmmword_100EA93A0;
  v6 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v7 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  v8 = v5;
  sub_1005F5640(v0 + 136, 0, v2, v4, 0, 0, 0, 0, v1, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
  *(_QWORD *)(v0 + 344) = v3;
  v9 = sub_100049F68((_QWORD *)(v0 + 320));
  sub_10005B704(v1, (uint64_t)v9, _s18PerformanceConteXtVMa);
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_QWORD *)(v0 + 272) = 0;
  *(_QWORD *)(v0 + 280) = 0;
  *(_QWORD *)(v0 + 264) = v5;
  sub_10027FA68(v0 + 320, v0 + 288);
  v10 = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 224) = v10;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 312);
  sub_10005B748(v1, _s18PerformanceConteXtVMa);
  v11 = (id)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  JSSegueCoordinator.perform(segue:with:)(v13, v0 + 208);

  sub_1000A554C(v0 + 208);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10045FCA4(void *a1)
{
  return objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_10045FCB8()
{
  void *v0;
  id v1;
  uint64_t v2;
  NSString v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[2];
  char v10[24];
  void *v11;

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  v2 = *((_QWORD *)SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.unsafeMutableAddressor() + 1);
  swift_bridgeObjectRetain();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeObjectForKey:", v3, swift_bridgeObjectRelease(v2).n128_f64[0]);

  v4 = objc_msgSend(v0, "standardUserDefaults");
  v5 = (uint64_t *)SharePlayTogetherSession.didShowDisplayNameAck.unsafeMutableAddressor();
  v6 = *v5;
  v7 = v5[1];
  v11 = &type metadata for Bool;
  v10[0] = 1;
  v9[0] = v6;
  v9[1] = v7;
  v8 = sub_100055B68();
  swift_bridgeObjectRetain();
  NSUserDefaults.subscript.setter((uint64_t)v10, (uint64_t)v9, (uint64_t)&type metadata for String, v8);

}

void sub_10045FDFC(id *a1)
{
  id v1;

  v1 = *a1;
  JSApplication.didEnterBackground()();

}

void sub_10045FF08(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  if (qword_10119C728 != -1)
    swift_once(&qword_10119C728, sub_1006DD7C0);
  v4 = type metadata accessor for Logger(0);
  sub_100048B14(v4, (uint64_t)qword_10124D830);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = objc_msgSend(v5, "description");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v16 = sub_100322200(v11, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);

    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Main sceneDidDisconnect %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext) = 0;
  sub_10045C420(v14);
  swift_release();
  v15 = *(void **)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_window);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music17MainSceneDelegate_window) = 0;

}

double sub_100460164(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(double (*)(void **), uint64_t);
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  char *v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  const char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint8_t *v50;
  os_signpost_id_t v51;
  void (*v52)(char *, uint64_t);
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v2 = v1;
  v4 = type metadata accessor for OSSignpostError(0);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  __chkstk_darwin(v4);
  v57 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v64 = (char *)v54 - v9;
  v10 = type metadata accessor for OSSignposter(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v63 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C728 != -1)
    swift_once(&qword_10119C728, sub_1006DD7C0);
  v13 = type metadata accessor for Logger(0);
  sub_100048B14(v13, (uint64_t)qword_10124D830);
  v14 = a1;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v62 = v10;
    v17 = swift_slowAlloc(12, -1);
    v56 = v6;
    v18 = (uint8_t *)v17;
    v55 = swift_slowAlloc(32, -1);
    v66 = v55;
    *(_DWORD *)v18 = 136446210;
    v54[1] = v18 + 4;
    v19 = v2;
    v20 = objc_msgSend(v14, "description");
    v21 = v11;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

    v2 = v19;
    v25 = v22;
    v11 = v21;
    v10 = v62;
    v65 = sub_100322200(v25, v24, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);

    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Main sceneDidBecomeActive %{public}s", v18, 0xCu);
    v26 = v55;
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    v27 = v18;
    v6 = v56;
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {

  }
  v28 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
  v29 = swift_allocObject(&unk_1010C6948, 24, 7);
  *(_QWORD *)(v29 + 16) = v2;
  v30 = *(void (**)(double (*)(void **), uint64_t))((swift_isaMask & *v28) + 0xD8);
  v31 = v28;
  v32 = v2;
  v30(sub_100462150, v29);

  swift_release();
  v33 = OBJC_IVAR____TtC5Music17MainSceneDelegate_signpostDidBecomeActiveIntervalState;
  if (*(_QWORD *)&v32[OBJC_IVAR____TtC5Music17MainSceneDelegate_signpostDidBecomeActiveIntervalState])
  {
    swift_retain();
    v34 = OSSignposter.launch.unsafeMutableAddressor();
    v35 = v63;
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v63, v34, v10);
    v37 = OSSignposter.logHandle.getter(v36);
    v38 = v64;
    v39 = OSSignpostIntervalState.signpostID.getter();
    LODWORD(v56) = static os_signpost_type_t.end.getter(v39);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v40 = swift_retain();
      v41 = v57;
      checkForErrorAndConsumeState(state:)(v40);
      v42 = swift_release();
      v44 = v58;
      v43 = v59;
      v45 = (*(uint64_t (**)(char *, uint64_t, __n128))(v58 + 88))(v41, v59, v42);
      v62 = v10;
      v54[0] = v11;
      if (v45 == enum case for OSSignpostError.doubleEnd(_:))
      {
        v46 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
        v46 = "";
      }
      v47 = v60;
      v48 = v61;
      v49 = v64;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v60, v64, v61);
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      v51 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v37, (os_signpost_type_t)v56, v51, "MainScene.DidBecomeActive", v46, v50, 2u);
      swift_slowDealloc(v50, -1, -1);

      v52 = *(void (**)(char *, uint64_t))(v6 + 8);
      v52(v49, v48);
      (*(void (**)(char *, uint64_t))(v54[0] + 8))(v63, v62);
      v52(v47, v48);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v38, v61);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v35, v10);
    }
    *(_QWORD *)&v32[v33] = 0;
    swift_release();
    swift_release();
  }
  return static AppReview.recordAppOpened()();
}

double sub_100460650(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  double result;

  v3 = *a1;
  v4 = swift_allocObject(&unk_1010C6970, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a2);
  v5 = swift_allocObject(&unk_1010C6998, 32, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = v3;
  swift_retain();
  JSApplication.didBecomeActive(completion:)((uint64_t)sub_100462180, v5);

  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004606EC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  __int128 v27;
  _BYTE v28[40];
  _QWORD v29[4];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  _BYTE v35[32];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s18PerformanceConteXtVMa(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v16 = Strong;
    if (a1)
    {
      v33 = 0;
      v31 = 0u;
      v32 = 0u;
      v30 = 0u;
      v34 = xmmword_100EA93A0;
      v17 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
      v18 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
      v19 = a1;
      v20 = sub_1005F43F8();
      v21 = sub_1005F4308();
      v22 = sub_1005F4380();
      sub_1005F5640((uint64_t)&v30, 0, (uint64_t)v11, (uint64_t)v8, 0, v20, (uint64_t)v21, v22, (uint64_t)v14, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
      v29[3] = v12;
      v23 = sub_100049F68(v29);
      sub_10005B704((uint64_t)v14, (uint64_t)v23, _s18PerformanceConteXtVMa);
      memset(v28, 0, sizeof(v28));
      v27 = (unint64_t)a3;
      v24 = a3;
      sub_10027FA68((uint64_t)v29, (uint64_t)&v28[8]);
      v30 = v27;
      v31 = *(_OWORD *)v28;
      v32 = *(_OWORD *)&v28[16];
      v33 = *(_QWORD *)&v28[32];
      sub_10005B748((uint64_t)v14, _s18PerformanceConteXtVMa);
      v25 = (id)*JSSegueCoordinator.shared.unsafeMutableAddressor();
      JSSegueCoordinator.perform(segue:with:)((uint64_t)v19, (uint64_t)&v30);

      sub_1000A554C((uint64_t)&v30);
    }
    else
    {

    }
  }
}

