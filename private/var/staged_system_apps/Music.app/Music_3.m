uint64_t sub_1001C0E54(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAD458);
  v5 = swift_getKeyPath(&unk_100EAD480);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1001C0EDC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v15);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (uint64_t *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = v7;
    swift_retain(v5);
    swift_retain(v6);
    swift_retain(v7);
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      v17 = v9;
      v18 = v11;
      v19 = 1;
    }
    else
    {
      v16 = *v10;
      *v9 = *v10;
      swift_retain(v16);
      v17 = v9;
      v18 = v11;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return a1;
}

void sub_1001C1040(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 28));
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
}

uint64_t sub_1001C1100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 28);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(v8, v9, v11);
      v14 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    v15 = *v9;
    *v8 = *v9;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v14);
  return a1;
}

uint64_t sub_1001C1238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v11;
  swift_retain(v11);
  swift_release(v10);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 28);
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011A3ED0);
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for UserInterfaceSizeClass(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v19 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v17 + 16))(v13, v14, v16);
        v19 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v19);
  }
  return a1;
}

_OWORD *sub_1001C13BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001C14CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_release(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_10004FF60(a1 + v11, (uint64_t *)&unk_1011A3ED0);
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for UserInterfaceSizeClass(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v12, v13, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C1624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C1630);
}

uint64_t sub_1001C1630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1001C16B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C16BC);
}

uint64_t sub_1001C16BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A4900, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView);
}

void sub_1001C1748(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EAD510;
  v4[1] = &unk_100EAD510;
  v4[2] = &unk_100EAD528;
  sub_1001C17C8(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1001C17C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A4910)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011A33B8);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A4910);
  }
}

uint64_t sub_1001C1820(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F976F0, 1);
}

double sub_1001C1830(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for UserInterfaceSizeClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v24 - v16;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))((char *)&v24 - v16, enum case for UserInterfaceSizeClass.compact(_:), v4, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10004A160(a1, (uint64_t)v10, (uint64_t *)&unk_1011A33B8);
  sub_10004A160((uint64_t)v17, v18, (uint64_t *)&unk_1011A33B8);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) != 1)
  {
    sub_10004A160((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1011A33B8);
    if (v19(v18, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
      v21 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7, v4, v21);
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v7, v4);
      sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A33B8);
      v23(v13, v4);
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A33B8);
      result = 24.0;
      if ((v22 & 1) == 0)
        return result;
      goto LABEL_8;
    }
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_10004FF60((uint64_t)v10, &qword_1011A49C0);
    return 24.0;
  }
  sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A33B8);
  if (v19(v18, 1, v4) != 1)
    goto LABEL_6;
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A33B8);
LABEL_8:
  result = 8.0;
  if ((a2 & 1) != 0)
    return 20.0;
  return result;
}

uint64_t sub_1001C1AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistSongSuggestionsView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001C1BD8(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView(0) - 8) + 80);
  return sub_1001B25A4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1001C1C24()
{
  return sub_10005610C(&qword_1011A4980, &qword_1011A4958, (void (*)(void))sub_1001C1C48);
}

unint64_t sub_1001C1C48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4988;
  if (!qword_1011A4988)
  {
    v1 = sub_100044B54(&qword_1011A4950);
    sub_1001C1CCC();
    sub_100049F28(&qword_1011A49B8, (uint64_t *)&unk_1011C9530, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4988);
  }
  return result;
}

unint64_t sub_1001C1CCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4990;
  if (!qword_1011A4990)
  {
    v1 = sub_100044B54(&qword_1011A4948);
    sub_1001C1D50();
    sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4990);
  }
  return result;
}

unint64_t sub_1001C1D50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4998;
  if (!qword_1011A4998)
  {
    v1 = sub_100044B54(&qword_1011A2D58);
    sub_100049F28(&qword_1011A49A0, &qword_1011A2D50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4998);
  }
  return result;
}

uint64_t sub_1001C1DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001C1DE4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.ContentView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A4A38, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.ContentView);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.HeaderView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A4AD8, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.HeaderView);
}

uint64_t sub_1001C1E24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[4];
    v10 = a2[5];
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v11 = *(int *)(a3 + 28);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    swift_retain(v7);
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v10);
    v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v18 = *v13;
      *v12 = *v13;
      swift_retain(v18);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v19 = *(int *)(a3 + 32);
    v20 = (uint64_t *)(a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
    {
      v23 = type metadata accessor for UserInterfaceSizeClass(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v24 + 16))(v20, v21, v23);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
      }
      v27 = v20;
      v28 = v22;
      v29 = 1;
    }
    else
    {
      v26 = *v21;
      *v20 = *v21;
      swift_retain(v26);
      v27 = v20;
      v28 = v22;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return a1;
}

void sub_1001C2014(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 28));
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 32));
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
}

uint64_t sub_1001C212C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(int *)(a3 + 28);
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v17 = *(int *)(a3 + 32);
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for UserInterfaceSizeClass(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v22 + 16))(v18, v19, v21);
      v24 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    }
  }
  else
  {
    v25 = *v19;
    *v18 = *v19;
    swift_retain(v25);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v24);
  return a1;
}

uint64_t sub_1001C22F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_retain(v12);
  swift_release(v13);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 28);
    v15 = (uint64_t *)(a1 + v14);
    v16 = (uint64_t *)(a2 + v14);
    sub_10004FF60(a1 + v14, (uint64_t *)&unk_1011ACE40);
    v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
    v21 = *(int *)(a3 + 32);
    v22 = (uint64_t *)(a1 + v21);
    v23 = (uint64_t *)(a2 + v21);
    sub_10004FF60(a1 + v21, (uint64_t *)&unk_1011A3ED0);
    v24 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for UserInterfaceSizeClass(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v23, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        v28 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v26 + 16))(v22, v23, v25);
        v28 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v25);
      }
    }
    else
    {
      v29 = *v23;
      *v22 = *v23;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v28);
  }
  return a1;
}

uint64_t sub_1001C2510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 32);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v13, v14, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001C26A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v10);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 28);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = *(int *)(a3 + 32);
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_10004FF60(a1 + v17, (uint64_t *)&unk_1011A3ED0);
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for UserInterfaceSizeClass(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C2898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C28A4);
}

uint64_t sub_1001C28A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1001C294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C2958);
}

uint64_t sub_1001C2958(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1001C29FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_100EAD510;
  v6[1] = &unk_100EAD510;
  v6[2] = &unk_100EAD600;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001C17C8(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1001C2A98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v14);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain(v5);
    swift_retain(v6);
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(v8, v9, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v16 = v8;
      v17 = v10;
      v18 = 1;
    }
    else
    {
      v15 = *v9;
      *v8 = *v9;
      swift_retain(v15);
      v16 = v8;
      v17 = v10;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

void sub_1001C2BE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
}

_QWORD *sub_1001C2C9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain(v4);
  swift_retain(v5);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(v7, v8, v10);
      v13 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  else
  {
    v14 = *v8;
    *v7 = *v8;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v13);
  return a1;
}

_QWORD *sub_1001C2DBC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    sub_10004FF60((uint64_t)a1 + v10, (uint64_t *)&unk_1011A3ED0);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        v17 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(v11, v12, v14);
        v17 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
    }
    else
    {
      v18 = *v12;
      *v11 = *v12;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v17);
  }
  return a1;
}

_OWORD *sub_1001C2F20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1001C3028(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_10004FF60((uint64_t)a1 + v10, (uint64_t *)&unk_1011A3ED0);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C3168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C3174);
}

uint64_t sub_1001C3174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1001C31F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C3200);
}

uint64_t sub_1001C3200(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A48A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1001C3278(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EAD510;
  v4[1] = &unk_100EAD510;
  sub_1001C17C8(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

unint64_t sub_1001C32F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011A4B18;
  if (!qword_1011A4B18)
  {
    v1 = sub_100044B54(&qword_1011A4B20);
    v2[0] = sub_100044B54(&qword_1011A4960);
    v2[1] = &type metadata for Bool;
    v2[2] = sub_10005610C(&qword_1011A4978, &qword_1011A4960, (void (*)(void))sub_1001C1C24);
    v2[3] = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4B18);
  }
  return result;
}

uint64_t sub_1001C33B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97798, 1);
}

uint64_t sub_1001C33C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97770, 1);
}

uint64_t sub_1001C33DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.ContentView(0) - 8)
                          + 80);
  return sub_1001B4440(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A4DE0, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.SuggestedSongCell);
}

uint64_t sub_1001C3440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001C357C()
{
  return sub_1001C6DD4(type metadata accessor for PlaylistSongSuggestionsView.ContentView, (uint64_t (*)(uint64_t))sub_1001B5328);
}

uint64_t type metadata accessor for HostedTaggedView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A4D48, (uint64_t)&nominal type descriptor for HostedTaggedView);
}

uint64_t sub_1001C35A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v20 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Song(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v9 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v12, v14);
  }
  else
  {
    v16 = swift_release(*v12);
  }
  v17 = (v4 + v20 + v7) & ~v7;
  v18 = v17 + v8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v17, v5, v16);
  return swift_deallocObject(v0, v18, v3 | v7 | 7);
}

void sub_1001C3738()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.ContentView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song(0) - 8) + 80);
  sub_1001B550C(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

double sub_1001C3798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v22 - v14;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))((char *)&v22 - v14, enum case for UserInterfaceSizeClass.compact(_:), v2, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10004A160(a1, (uint64_t)v8, (uint64_t *)&unk_1011A33B8);
  sub_10004A160((uint64_t)v15, v16, (uint64_t *)&unk_1011A33B8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v17((uint64_t)v8, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A33B8);
    if (v17(v16, 1, v2) == 1)
    {
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A33B8);
      return 16.0;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1011A33B8);
    if (v17(v16, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v16, v2);
      v19 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v5, v2, v19);
      v21 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21(v5, v2);
      sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A33B8);
      v21(v11, v2);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A33B8);
      result = 16.0;
      if ((v20 & 1) != 0)
        return result;
      return 20.0;
    }
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  sub_10004FF60((uint64_t)v8, &qword_1011A49C0);
  return 20.0;
}

uint64_t sub_1001C3A4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_BYTE *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  sub_100055BAC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_100055BAC(v3, v4, v5);
  swift_bridgeObjectRelease(v6);
  return a1;
}

unint64_t sub_1001C3ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4C30;
  if (!qword_1011A4C30)
  {
    v1 = sub_100044B54(&qword_1011A4BF0);
    sub_10005610C(&qword_1011A4C38, &qword_1011A4BE8, (void (*)(void))sub_1001C3B60);
    sub_100049F28((unint64_t *)&unk_1011BF6F0, &qword_1011A4C90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4C30);
  }
  return result;
}

unint64_t sub_1001C3B60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4C40;
  if (!qword_1011A4C40)
  {
    v1 = sub_100044B54(&qword_1011A4BE0);
    sub_1001C6FB8(&qword_1011A4C48, &qword_1011A4BD8, (void (*)(void))sub_1001C3BE4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4C40);
  }
  return result;
}

unint64_t sub_1001C3BE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4C50;
  if (!qword_1011A4C50)
  {
    v1 = sub_100044B54(&qword_1011A4C58);
    sub_100049F28(&qword_1011A4C60, &qword_1011A4C68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_1001C3C68();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4C50);
  }
  return result;
}

unint64_t sub_1001C3C68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4C70;
  if (!qword_1011A4C70)
  {
    v1 = sub_100044B54(&qword_1011A4C78);
    sub_100049F28(&qword_1011A4C80, &qword_1011A4C88, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4C70);
  }
  return result;
}

unint64_t sub_1001C3D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4C98;
  if (!qword_1011A4C98)
  {
    v1 = sub_100044B54(&qword_1011A4BF8);
    sub_1001C3ABC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4C98);
  }
  return result;
}

uint64_t sub_1001C3D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001C3E64()
{
  return sub_1001C60B4((void (*)(_QWORD))type metadata accessor for PlaylistSongSuggestionsView.HeaderView, sub_1001B3ABC);
}

unint64_t sub_1001C3E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4CC0;
  if (!qword_1011A4CC0)
  {
    v1 = sub_100044B54(&qword_1011A4CB8);
    sub_1001C3EFC();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4CC0);
  }
  return result;
}

unint64_t sub_1001C3EFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4CC8;
  if (!qword_1011A4CC8)
  {
    v1 = sub_100044B54(&qword_1011A4CD0);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4CC8);
  }
  return result;
}

uint64_t sub_1001C3FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001C4084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1011A4CE4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_1001B40BC(a1, v5, v6, v7);
}

uint64_t sub_1001C4120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C412C);
}

uint64_t sub_1001C4130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C413C);
}

uint64_t *sub_1001C4144(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  int *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v26);
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    swift_retain(v12);
    swift_retain(v15);
    swift_retain(v20);
    v23 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      v25 = 1;
    }
    else
    {
      v27 = *v22;
      *v21 = *v22;
      swift_retain(v27);
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v25);
    v28 = a3[9];
    v29 = (uint64_t *)((char *)a1 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for UserInterfaceSizeClass(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v32))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v33 + 16))(v29, v30, v32);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      }
      v36 = v29;
      v37 = v31;
      v38 = 1;
    }
    else
    {
      v35 = *v30;
      *v29 = *v30;
      swift_retain(v35);
      v36 = v29;
      v37 = v31;
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v36, v37, v38);
    v39 = a3[10];
    v40 = (uint64_t *)((char *)a1 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    v42 = *(uint64_t *)((char *)a2 + v39 + 8);
    if (v42 > 9)
    {
      *v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v40 = *(_OWORD *)v41;
    }
    v43 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
    v44 = v43[5];
    v45 = (_QWORD *)((char *)v40 + v44);
    v46 = (_QWORD *)((char *)v41 + v44);
    v47 = (int *)type metadata accessor for MetricsEvent.Page(0);
    v48 = *((_QWORD *)v47 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011A8780);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v50 = v46[1];
      *v45 = *v46;
      v45[1] = v50;
      v51 = v46[3];
      v45[2] = v46[2];
      v45[3] = v51;
      v52 = v47[6];
      v75 = v48;
      __dst = (char *)v45 + v52;
      v74 = (char *)v46 + v52;
      v53 = type metadata accessor for URL(0);
      v72 = *(_QWORD *)(v53 - 8);
      v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v73(v74, 1, v53))
      {
        v54 = sub_100007E8C(&qword_10119E460);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(__dst, v74, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v53);
      }
      *(_QWORD *)((char *)v45 + v47[7]) = *(_QWORD *)((char *)v46 + v47[7]);
      v55 = v47[8];
      v56 = (_QWORD *)((char *)v45 + v55);
      v57 = (_QWORD *)((char *)v46 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      *((_BYTE *)v45 + v47[9]) = *((_BYTE *)v46 + v47[9]);
      v59 = v47[10];
      v60 = (_QWORD *)((char *)v45 + v59);
      v61 = (_QWORD *)((char *)v46 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      v63 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v75 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63(v45, 0, 1, v47);
    }
    v64 = v43[6];
    v65 = (_QWORD *)((char *)v40 + v64);
    v66 = (_QWORD *)((char *)v41 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    *(_QWORD *)((char *)v40 + v43[7]) = *(_QWORD *)((char *)v41 + v43[7]);
    *(_QWORD *)((char *)v40 + v43[8]) = *(_QWORD *)((char *)v41 + v43[8]);
    v68 = v43[9];
    v69 = (char *)v40 + v68;
    v70 = (char *)v41 + v68;
    *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_1001C4594(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  swift_release(*(_QWORD *)(a1 + a2[7] + 8));
  v5 = (_QWORD *)(a1 + a2[8]);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)(a1 + a2[9]);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v12 = a1 + a2[10];
  v13 = *(_QWORD *)(v12 + 8);
  if (v13 >= 0xA)
    swift_bridgeObjectRelease(v13);
  v14 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v15 = v12 + v14[5];
  v16 = (int *)type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v15, 1, v16))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
    v17 = v15 + v16[6];
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[10] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v12 + v14[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v12 + v14[7]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v12 + v14[8])).n128_u64[0];
  return result;
}

uint64_t sub_1001C47C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  int *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  void (*v62)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v74;
  uint64_t v75;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (uint64_t *)(a1 + v16);
  v21 = (uint64_t *)(a2 + v16);
  swift_retain(v11);
  swift_retain(v14);
  swift_retain(v19);
  v22 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    v25 = *v21;
    *v20 = *v21;
    swift_retain(v25);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  v26 = a3[9];
  v27 = (uint64_t *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for UserInterfaceSizeClass(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30))
    {
      v32 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v31 + 16))(v27, v28, v30);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
    }
    v34 = v27;
    v35 = v29;
    v36 = 1;
  }
  else
  {
    v33 = *v28;
    *v27 = *v28;
    swift_retain(v33);
    v34 = v27;
    v35 = v29;
    v36 = 0;
  }
  swift_storeEnumTagMultiPayload(v34, v35, v36);
  v37 = a3[10];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a2 + v37 + 8);
  if (v40 > 9)
  {
    *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  v41 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v42 = v41[5];
  v43 = (_QWORD *)((char *)v38 + v42);
  v44 = (_QWORD *)((char *)v39 + v42);
  v45 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v46 = *((_QWORD *)v45 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_100007E8C((uint64_t *)&unk_1011A8780);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v74 = v46;
    v75 = a1;
    v48 = v44[1];
    *v43 = *v44;
    v43[1] = v48;
    v49 = v44[3];
    v43[2] = v44[2];
    v43[3] = v49;
    v50 = v45[6];
    __dst = (char *)v43 + v50;
    v51 = (char *)v44 + v50;
    v52 = type metadata accessor for URL(0);
    v71 = *(_QWORD *)(v52 - 8);
    v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72(v51, 1, v52))
    {
      v53 = sub_100007E8C(&qword_10119E460);
      memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(__dst, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v52);
    }
    *(_QWORD *)((char *)v43 + v45[7]) = *(_QWORD *)((char *)v44 + v45[7]);
    v54 = v45[8];
    v55 = (_QWORD *)((char *)v43 + v54);
    v56 = (_QWORD *)((char *)v44 + v54);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    *((_BYTE *)v43 + v45[9]) = *((_BYTE *)v44 + v45[9]);
    v58 = v45[10];
    v59 = (_QWORD *)((char *)v43 + v58);
    v60 = (_QWORD *)((char *)v44 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    v62 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v74 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62(v43, 0, 1, v45);
    a1 = v75;
  }
  v63 = v41[6];
  v64 = (_QWORD *)((char *)v38 + v63);
  v65 = (_QWORD *)((char *)v39 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  *(_QWORD *)((char *)v38 + v41[7]) = *(_QWORD *)((char *)v39 + v41[7]);
  *(_QWORD *)((char *)v38 + v41[8]) = *(_QWORD *)((char *)v39 + v41[8]);
  v67 = v41[9];
  v68 = (char *)v38 + v67;
  v69 = (char *)v39 + v67;
  *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001C4BF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  int *v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD *, uint64_t, int *);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  size_t v66;
  void *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  void (*v74)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  uint64_t v103;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  if (a1 != a2)
  {
    v22 = a3[8];
    v23 = (uint64_t *)(a1 + v22);
    v24 = (uint64_t *)(a2 + v22);
    sub_10004FF60(a1 + v22, (uint64_t *)&unk_1011ACE40);
    v25 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
      v27 = 1;
    }
    else
    {
      v28 = *v24;
      *v23 = *v24;
      swift_retain(v28);
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v27);
    v29 = a3[9];
    v30 = (uint64_t *)(a1 + v29);
    v31 = (uint64_t *)(a2 + v29);
    sub_10004FF60(a1 + v29, (uint64_t *)&unk_1011A3ED0);
    v32 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
    {
      v33 = type metadata accessor for UserInterfaceSizeClass(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v34 + 16))(v30, v31, v33);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
      }
      v37 = v30;
      v38 = v32;
      v39 = 1;
    }
    else
    {
      v36 = *v31;
      *v30 = *v31;
      swift_retain(v36);
      v37 = v30;
      v38 = v32;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
  }
  v40 = a3[10];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = *(_QWORD *)(a1 + v40 + 8);
  v44 = v42[1];
  if (v43 == 9)
  {
    if (v44 >= 0xA)
      goto LABEL_27;
    goto LABEL_17;
  }
  if (v44 == 9)
  {
    sub_1001C5334((uint64_t)v41);
    goto LABEL_17;
  }
  if (v43 < 9)
  {
    if (v44 >= 9)
    {
LABEL_27:
      *v41 = *v42;
      v41[1] = v42[1];
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
LABEL_17:
    *(_OWORD *)v41 = *(_OWORD *)v42;
    goto LABEL_18;
  }
  if (v44 < 9)
  {
    sub_10004FF60((uint64_t)v41, &qword_1011A4D80);
    goto LABEL_17;
  }
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v43);
LABEL_18:
  v45 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v46 = v45[5];
  v47 = (_QWORD *)((char *)v41 + v46);
  v48 = (_QWORD *)((char *)v42 + v46);
  v49 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v50 = *((_QWORD *)v49 - 1);
  v51 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v50 + 48);
  v52 = v51(v47, 1, v49);
  v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (v53)
    {
      sub_10005B748((uint64_t)v47, type metadata accessor for MetricsEvent.Page);
      goto LABEL_24;
    }
    v103 = a1;
    *v47 = *v48;
    v58 = v47[1];
    v47[1] = v48[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v58);
    v47[2] = v48[2];
    v59 = v47[3];
    v47[3] = v48[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v59);
    v60 = v49[6];
    v61 = (char *)v47 + v60;
    v62 = (char *)v48 + v60;
    v63 = type metadata accessor for URL(0);
    v99 = *(_QWORD *)(v63 - 8);
    v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48);
    __dsta = v61;
    LODWORD(v61) = v64(v61, 1, v63);
    v65 = v64(v62, 1, v63);
    if ((_DWORD)v61)
    {
      if (!v65)
      {
        (*(void (**)(void *, char *, uint64_t))(v99 + 16))(__dsta, v62, v63);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(__dsta, 0, 1, v63);
        goto LABEL_41;
      }
      v66 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
      v67 = __dsta;
    }
    else
    {
      if (!v65)
      {
        (*(void (**)(void *, char *, uint64_t))(v99 + 24))(__dsta, v62, v63);
        goto LABEL_41;
      }
      (*(void (**)(void *, uint64_t))(v99 + 8))(__dsta, v63);
      v66 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
      v67 = __dsta;
    }
    memcpy(v67, v62, v66);
LABEL_41:
    a1 = v103;
    v75 = v49[7];
    v76 = *(_QWORD *)((char *)v47 + v75);
    *(_QWORD *)((char *)v47 + v75) = *(_QWORD *)((char *)v48 + v75);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v76);
    v77 = v49[8];
    v78 = (_QWORD *)((char *)v47 + v77);
    v79 = (_QWORD *)((char *)v48 + v77);
    *v78 = *v79;
    v80 = v78[1];
    v78[1] = v79[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v80);
    *((_BYTE *)v47 + v49[9]) = *((_BYTE *)v48 + v49[9]);
    v81 = v49[10];
    v82 = (_QWORD *)((char *)v47 + v81);
    v83 = (_QWORD *)((char *)v48 + v81);
    *v82 = *v83;
    v84 = v82[1];
    v82[1] = v83[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v84);
    goto LABEL_42;
  }
  if (v53)
  {
LABEL_24:
    v57 = sub_100007E8C((uint64_t *)&unk_1011A8780);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_42;
  }
  *v47 = *v48;
  v47[1] = v48[1];
  v47[2] = v48[2];
  v47[3] = v48[3];
  v54 = v49[6];
  __dst = (char *)v47 + v54;
  v98 = (char *)v48 + v54;
  v55 = type metadata accessor for URL(0);
  v97 = *(_QWORD *)(v55 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__src(v98, 1, v55))
  {
    v56 = sub_100007E8C(&qword_10119E460);
    memcpy(__dst, v98, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(__dst, v98, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(__dst, 0, 1, v55);
  }
  *(_QWORD *)((char *)v47 + v49[7]) = *(_QWORD *)((char *)v48 + v49[7]);
  v68 = v49[8];
  v69 = (_QWORD *)((char *)v47 + v68);
  v70 = (_QWORD *)((char *)v48 + v68);
  *v69 = *v70;
  v69[1] = v70[1];
  *((_BYTE *)v47 + v49[9]) = *((_BYTE *)v48 + v49[9]);
  v71 = v49[10];
  v72 = (_QWORD *)((char *)v47 + v71);
  v73 = (_QWORD *)((char *)v48 + v71);
  *v72 = *v73;
  v72[1] = v73[1];
  v74 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v50 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v74(v47, 0, 1, v49);
LABEL_42:
  v85 = v45[6];
  v86 = (_QWORD *)((char *)v41 + v85);
  v87 = (_QWORD *)((char *)v42 + v85);
  *v86 = *v87;
  v88 = v86[1];
  v86[1] = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v88);
  v89 = v45[7];
  v90 = *(_QWORD *)((char *)v41 + v89);
  *(_QWORD *)((char *)v41 + v89) = *(_QWORD *)((char *)v42 + v89);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v90);
  v91 = v45[8];
  v92 = *(_QWORD *)((char *)v41 + v91);
  *(_QWORD *)((char *)v41 + v91) = *(_QWORD *)((char *)v42 + v91);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v92);
  v93 = v45[9];
  v94 = (char *)v41 + v93;
  v95 = (char *)v42 + v93;
  *v94 = *v95;
  *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
  *((_QWORD *)v94 + 2) = *((_QWORD *)v95 + 2);
  return a1;
}

uint64_t sub_1001C5334(uint64_t a1)
{
  destroy for MetricsEvent.Click.ActionContext(a1);
  return a1;
}

uint64_t sub_1001C5368(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v14, v15, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  v23 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v24 = v23[5];
  v25 = (_OWORD *)(v21 + v24);
  v26 = (_OWORD *)(v22 + v24);
  v27 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v28 = *((_QWORD *)v27 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    v29 = sub_100007E8C((uint64_t *)&unk_1011A8780);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v40 = v28;
    v30 = v26[1];
    *v25 = *v26;
    v25[1] = v30;
    v31 = v27[6];
    v41 = (char *)v25 + v31;
    v32 = (char *)v26 + v31;
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C(&qword_10119E460);
      memcpy(v41, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v41, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v41, 0, 1, v33);
    }
    *(_QWORD *)((char *)v25 + v27[7]) = *(_QWORD *)((char *)v26 + v27[7]);
    *(_OWORD *)((char *)v25 + v27[8]) = *(_OWORD *)((char *)v26 + v27[8]);
    *((_BYTE *)v25 + v27[9]) = *((_BYTE *)v26 + v27[9]);
    *(_OWORD *)((char *)v25 + v27[10]) = *(_OWORD *)((char *)v26 + v27[10]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v40 + 56))(v25, 0, 1, v27);
  }
  *(_OWORD *)(v21 + v23[6]) = *(_OWORD *)(v22 + v23[6]);
  *(_QWORD *)(v21 + v23[7]) = *(_QWORD *)(v22 + v23[7]);
  *(_QWORD *)(v21 + v23[8]) = *(_QWORD *)(v22 + v23[8]);
  v36 = v23[9];
  v37 = v21 + v36;
  v38 = v22 + v36;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
  return a1;
}

uint64_t sub_1001C56D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  unint64_t v40;
  unint64_t v41;
  int *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  int *v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD *, uint64_t, int *);
  int v49;
  int v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  size_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *__src;
  char *__srca;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_release(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_release(v18);
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_release(v24);
  if (a1 != a2)
  {
    v25 = a3[8];
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    sub_10004FF60(a1 + v25, (uint64_t *)&unk_1011ACE40);
    v28 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload(v26, v28, 1);
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v30 = a3[9];
    v31 = (void *)(a1 + v30);
    v32 = (const void *)(a2 + v30);
    sub_10004FF60(a1 + v30, (uint64_t *)&unk_1011A3ED0);
    v33 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for UserInterfaceSizeClass(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v31, v32, v34);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
      }
      swift_storeEnumTagMultiPayload(v31, v33, 1);
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
  }
  v37 = a3[10];
  v38 = a1 + v37;
  v39 = (_OWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 8);
  v41 = *(_QWORD *)(a2 + v37 + 8);
  if (v40 == 9)
    goto LABEL_17;
  if (v41 == 9)
  {
    sub_1001C5334(v38);
LABEL_17:
    *(_OWORD *)v38 = *v39;
    goto LABEL_18;
  }
  if (v40 < 9)
    goto LABEL_17;
  if (v41 < 9)
  {
    sub_10004FF60(v38, &qword_1011A4D80);
    goto LABEL_17;
  }
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_QWORD *)(v38 + 8) = v41;
  swift_bridgeObjectRelease(v40);
LABEL_18:
  v42 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v43 = v42[5];
  v44 = (_QWORD *)(v38 + v43);
  v45 = (_QWORD *)((char *)v39 + v43);
  v46 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v47 = *((_QWORD *)v46 - 1);
  v48 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (v50)
    {
      sub_10005B748((uint64_t)v44, type metadata accessor for MetricsEvent.Page);
      goto LABEL_24;
    }
    v57 = v45[1];
    v58 = v44[1];
    *v44 = *v45;
    v44[1] = v57;
    swift_bridgeObjectRelease(v58);
    v59 = v45[3];
    v60 = v44[3];
    v44[2] = v45[2];
    v44[3] = v59;
    swift_bridgeObjectRelease(v60);
    v61 = v46[6];
    v62 = (char *)v44 + v61;
    __srca = (char *)v45 + v61;
    v63 = type metadata accessor for URL(0);
    v97 = *(_QWORD *)(v63 - 8);
    v98 = v62;
    v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
    LODWORD(v62) = v64(v62, 1, v63);
    v65 = v64(__srca, 1, v63);
    if ((_DWORD)v62)
    {
      if (!v65)
      {
        (*(void (**)(void *, char *, uint64_t))(v97 + 32))(v98, __srca, v63);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v98, 0, 1, v63);
        goto LABEL_36;
      }
      v66 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
      v67 = v98;
    }
    else
    {
      if (!v65)
      {
        (*(void (**)(void *, char *, uint64_t))(v97 + 40))(v98, __srca, v63);
        goto LABEL_36;
      }
      (*(void (**)(void *, uint64_t))(v97 + 8))(v98, v63);
      v66 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64);
      v67 = v98;
    }
    memcpy(v67, __srca, v66);
LABEL_36:
    v68 = v46[7];
    v69 = *(_QWORD *)((char *)v44 + v68);
    *(_QWORD *)((char *)v44 + v68) = *(_QWORD *)((char *)v45 + v68);
    swift_bridgeObjectRelease(v69);
    v70 = v46[8];
    v71 = (_QWORD *)((char *)v44 + v70);
    v72 = (_QWORD *)((char *)v45 + v70);
    v74 = *v72;
    v73 = v72[1];
    v75 = v71[1];
    *v71 = v74;
    v71[1] = v73;
    swift_bridgeObjectRelease(v75);
    *((_BYTE *)v44 + v46[9]) = *((_BYTE *)v45 + v46[9]);
    v76 = v46[10];
    v77 = (_QWORD *)((char *)v44 + v76);
    v78 = (_QWORD *)((char *)v45 + v76);
    v80 = *v78;
    v79 = v78[1];
    v81 = v77[1];
    *v77 = v80;
    v77[1] = v79;
    swift_bridgeObjectRelease(v81);
    goto LABEL_37;
  }
  if (v50)
  {
LABEL_24:
    v56 = sub_100007E8C((uint64_t *)&unk_1011A8780);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_37;
  }
  v51 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v51;
  v52 = v46[6];
  __src = (char *)v44 + v52;
  v53 = (char *)v45 + v52;
  v54 = type metadata accessor for URL(0);
  v96 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v53, 1, v54))
  {
    v55 = sub_100007E8C(&qword_10119E460);
    memcpy(__src, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(__src, v53, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(__src, 0, 1, v54);
  }
  *(_QWORD *)((char *)v44 + v46[7]) = *(_QWORD *)((char *)v45 + v46[7]);
  *(_OWORD *)((char *)v44 + v46[8]) = *(_OWORD *)((char *)v45 + v46[8]);
  *((_BYTE *)v44 + v46[9]) = *((_BYTE *)v45 + v46[9]);
  *(_OWORD *)((char *)v44 + v46[10]) = *(_OWORD *)((char *)v45 + v46[10]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
LABEL_37:
  v82 = v42[6];
  v83 = (_QWORD *)(v38 + v82);
  v84 = (uint64_t *)((char *)v39 + v82);
  v86 = *v84;
  v85 = v84[1];
  v87 = v83[1];
  *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease(v87);
  v88 = v42[7];
  v89 = *(_QWORD *)(v38 + v88);
  *(_QWORD *)(v38 + v88) = *(_QWORD *)((char *)v39 + v88);
  swift_bridgeObjectRelease(v89);
  v90 = v42[8];
  v91 = *(_QWORD *)(v38 + v90);
  *(_QWORD *)(v38 + v90) = *(_QWORD *)((char *)v39 + v90);
  swift_bridgeObjectRelease(v91);
  v92 = v42[9];
  v93 = v38 + v92;
  v94 = (char *)v39 + v92;
  *(_BYTE *)v93 = *v94;
  *(_OWORD *)(v93 + 8) = *(_OWORD *)(v94 + 8);
  return a1;
}

uint64_t sub_1001C5CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C5CBC);
}

uint64_t sub_1001C5CBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C(&qword_1011C6890);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011A48A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[9];
      }
      else
      {
        v8 = type metadata accessor for Actions.MetricsReportingContext(0);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[10];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1001C5DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C5DC4);
}

uint64_t sub_1001C5DC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C(&qword_1011C6890);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011A48A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v10 = type metadata accessor for Actions.MetricsReportingContext(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[10];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001C5EBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];

  v2 = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_100EAD510;
    v10[2] = &unk_100EAD510;
    v10[3] = &unk_100EAD510;
    sub_1000559DC(319);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001C17C8(319);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for Actions.MetricsReportingContext(319);
        if (v9 <= 0x3F)
        {
          v10[6] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 7, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1001C5F84()
{
  return sub_100049F28(&qword_1011A4E30, &qword_1011A4E38, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1001C5FB0()
{
  return sub_10005610C(&qword_1011A4E40, &qword_1011A4BD0, (void (*)(void))sub_1001C5FE4);
}

unint64_t sub_1001C5FE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4E48;
  if (!qword_1011A4E48)
  {
    v1 = sub_100044B54(&qword_1011A4BC0);
    sub_100049F28(&qword_1011A4E50, &qword_1011A4BB8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4E48);
  }
  return result;
}

uint64_t sub_1001C6068(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F978A0, 1);
}

uint64_t sub_1001C6078(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97878, 1);
}

uint64_t type metadata accessor for TaggedViewResolver(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A50E8, (uint64_t)&nominal type descriptor for TaggedViewResolver);
}

uint64_t sub_1001C60A0()
{
  return sub_1001C60B4((void (*)(_QWORD))type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell, (uint64_t (*)(void))sub_1001B750C);
}

uint64_t sub_1001C60B4(void (*a1)(_QWORD), uint64_t (*a2)(void))
{
  a1(0);
  return a2();
}

double sub_1001C60F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v22 - v14;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))((char *)&v22 - v14, enum case for UserInterfaceSizeClass.compact(_:), v2, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10004A160(a1, (uint64_t)v8, (uint64_t *)&unk_1011A33B8);
  sub_10004A160((uint64_t)v15, v16, (uint64_t *)&unk_1011A33B8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v17((uint64_t)v8, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A33B8);
    if (v17(v16, 1, v2) == 1)
    {
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A33B8);
      return 10.0;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1011A33B8);
    if (v17(v16, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v16, v2);
      v19 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v5, v2, v19);
      v21 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21(v5, v2);
      sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A33B8);
      v21(v11, v2);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A33B8);
      result = 10.0;
      if ((v20 & 1) != 0)
        return result;
      return 16.0;
    }
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  sub_10004FF60((uint64_t)v8, &qword_1011A49C0);
  return 16.0;
}

unint64_t sub_1001C63A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4EE0;
  if (!qword_1011A4EE0)
  {
    v1 = sub_100044B54(&qword_1011A4EC8);
    sub_10005610C(&qword_1011A4EE8, &qword_1011A4EC0, (void (*)(void))sub_1001C644C);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4EE0);
  }
  return result;
}

unint64_t sub_1001C644C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4EF0;
  if (!qword_1011A4EF0)
  {
    v1 = sub_100044B54(&qword_1011A4EB8);
    sub_100049F28(&qword_1011A4C80, &qword_1011A4C88, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4EF0);
  }
  return result;
}

unint64_t sub_1001C64D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4EF8;
  if (!qword_1011A4EF8)
  {
    v1 = sub_100044B54(&qword_1011A4ED0);
    sub_1001C63A8();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4EF8);
  }
  return result;
}

uint64_t sub_1001C6558()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v1 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[7] + 8));
  v8 = (_QWORD *)(v0 + v4 + v1[8]);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(v6 + v1[9]);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v15 = v6 + v1[10];
  v16 = *(_QWORD *)(v15 + 8);
  if (v16 >= 0xA)
    swift_bridgeObjectRelease(v16);
  v17 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v18 = v15 + v17[5];
  v19 = (int *)type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48))(v18, 1, v19))
  {
    v24 = v5;
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 24));
    v20 = v18 + v19[6];
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[10] + 8));
    v5 = v24;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[7]));
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[8]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001C67D8()
{
  return sub_1001C60B4((void (*)(_QWORD))type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell, (uint64_t (*)(void))sub_1001BA250);
}

uint64_t sub_1001C67EC()
{
  return sub_10005610C(&qword_1011A4F10, &qword_1011A4E80, (void (*)(void))sub_1001C6810);
}

unint64_t sub_1001C6810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4F18;
  if (!qword_1011A4F18)
  {
    v1 = sub_100044B54(&qword_1011A4E78);
    sub_100049F28(&qword_1011A4F20, &qword_1011A4E70, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4F18);
  }
  return result;
}

unint64_t sub_1001C6894()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_1011A4F28;
  if (!qword_1011A4F28)
  {
    v1 = sub_100044B54(&qword_1011A4EA0);
    v2 = sub_100044B54(&qword_1011A4E90);
    v4 = sub_100044B54(&qword_1011A4E88);
    v5 = sub_10005610C(&qword_1011A4F08, &qword_1011A4E88, (void (*)(void))sub_1001C67EC);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4F28);
  }
  return result;
}

unint64_t sub_1001C6990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4F30;
  if (!qword_1011A4F30)
  {
    v1 = sub_100044B54(&qword_1011A4EA8);
    sub_1001C6894();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, &qword_1011A4F30);
  }
  return result;
}

uint64_t sub_1001C6A1C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v1 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  v7 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[7] + 8));
  v8 = (_QWORD *)(v0 + v4 + v1[8]);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(v6 + v1[9]);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v15 = v6 + v1[10];
  v16 = *(_QWORD *)(v15 + 8);
  if (v16 >= 0xA)
    swift_bridgeObjectRelease(v16);
  v17 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v18 = v15 + v17[5];
  v19 = (int *)type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48))(v18, 1, v19))
  {
    v24 = v5;
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 24));
    v20 = v18 + v19[6];
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[10] + 8));
    v5 = v24;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[7]));
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[8]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001C6CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1011A4F3C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_1001BAB58(a1, v5, v6, v7);
}

uint64_t sub_1001C6D28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001C6D54()
{
  uint64_t v0;

  sub_10093B5D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001C6D5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C6D6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1001C6D98()
{
  uint64_t *v0;

  sub_10093C280(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001C6DA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C6DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001B9F84(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1001C6DC0()
{
  return sub_1001C6DD4(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell, (uint64_t (*)(uint64_t))sub_1001BA094);
}

uint64_t sub_1001C6DD4(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

unint64_t sub_1001C6E14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4F90;
  if (!qword_1011A4F90)
  {
    v1 = sub_100044B54(&qword_1011A4F78);
    sub_1001C6E98();
    sub_100049F28(&qword_1011A4FE0, &qword_1011A4F88, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4F90);
  }
  return result;
}

unint64_t sub_1001C6E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4F98;
  if (!qword_1011A4F98)
  {
    v1 = sub_100044B54(&qword_1011A4F70);
    sub_1001C6F1C();
    sub_100049F28(&qword_1011A4FE0, &qword_1011A4F88, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4F98);
  }
  return result;
}

unint64_t sub_1001C6F1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4FA0;
  if (!qword_1011A4FA0)
  {
    v1 = sub_100044B54(&qword_1011A4F68);
    sub_1001C6FB8(&qword_1011A4FA8, &qword_1011A4F60, (void (*)(void))sub_1001C701C);
    sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4FA0);
  }
  return result;
}

uint64_t sub_1001C6FB8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001C701C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4FB0;
  if (!qword_1011A4FB0)
  {
    v1 = sub_100044B54(&qword_1011A4FB8);
    sub_1001C70A0();
    sub_100049F28(&qword_1011A4FD0, &qword_1011A4FD8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4FB0);
  }
  return result;
}

unint64_t sub_1001C70A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4FC0;
  if (!qword_1011A4FC0)
  {
    v1 = sub_100044B54(&qword_1011A2F18);
    sub_100049F28(&qword_1011A4FC8, &qword_1011A2F10, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4FC0);
  }
  return result;
}

uint64_t sub_1001C7124()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;

  v1 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  v7 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[7] + 8));
  v8 = (_QWORD *)(v0 + v4 + v1[8]);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(v6 + v1[9]);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v15 = v6 + v1[10];
  v16 = *(_QWORD *)(v15 + 8);
  if (v16 >= 0xA)
    swift_bridgeObjectRelease(v16);
  v17 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v18 = v15 + v17[5];
  v19 = (int *)type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48))(v18, 1, v19))
  {
    v25 = v5;
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 24));
    v20 = v18 + v19[6];
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + v19[10] + 8));
    v5 = v25;
  }
  v23 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[7]));
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + v17[8]));
  swift_release(*(_QWORD *)(v0 + v23));
  return swift_deallocObject(v0, v23 + 8, v3 | 7);
}

uint64_t sub_1001C73C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011A4FFC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1001BA7F8(a1, v6, v7, v8, v9);
}

uint64_t sub_1001C7464(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

_QWORD *sub_1001C748C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[10];
  v7 = a1[13];
  swift_release(a1[15]);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001C7514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

unint64_t sub_1001C75A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1001B15F0(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001C75E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1001C7674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_1011A5014);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_10006AEE4;
  return sub_1001B1720(v5, v6, v7);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.VerticalText(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5218, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.VerticalText);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A52A8, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.PreviewArtwork);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5178, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.HorizontalText);
}

uint64_t sub_1001C7744(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UserInterfaceSizeClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v33 - v20;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))((char *)&v33 - v20, enum case for UserInterfaceSizeClass.compact(_:), v8, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v8);
  v22 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_10004A160(a1, (uint64_t)v14, (uint64_t *)&unk_1011A33B8);
  sub_10004A160((uint64_t)v21, v22, (uint64_t *)&unk_1011A33B8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v23((uint64_t)v14, 1, v8) == 1)
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A33B8);
    if (v23(v22, 1, v8) == 1)
    {
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A33B8);
      v24 = v36;
LABEL_12:
      v26 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v34, v24);
LABEL_13:
      v28 = 1;
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  sub_10004A160((uint64_t)v14, (uint64_t)v17, (uint64_t *)&unk_1011A33B8);
  if (v23(v22, 1, v8) == 1)
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
LABEL_6:
    sub_10004FF60((uint64_t)v14, &qword_1011A49C0);
    v24 = v36;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v22, v8);
  v29 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v30 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v11, v8, v29);
  v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v11, v8);
  sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A33B8);
  v31(v17, v8);
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A33B8);
  v24 = v36;
  if ((v30 & 1) != 0)
    goto LABEL_12;
LABEL_7:
  if (qword_10119BB40 != -1)
    swift_once(&qword_10119BB40, sub_1001BF91C);
  v25 = *(double *)&qword_10124CA98;
  v26 = v35;
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v34, v24);
  if (v25 > a3)
    goto LABEL_13;
  v28 = DynamicTypeSize.isAccessibilitySize.getter(v27);
LABEL_14:
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v24);
  return v28 & 1;
}

uint64_t *sub_1001C7AC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain(v11);
  return a1;
}

uint64_t sub_1001C7B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t sub_1001C7BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  return a1;
}

uint64_t sub_1001C7C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t sub_1001C7C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001C7CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_1001C7D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C7D4C);
}

uint64_t sub_1001C7D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001C7DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C7DD8);
}

uint64_t sub_1001C7DDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1001C7E54(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1001C7EC8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 2) = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    swift_retain(v12);
    swift_retain(v15);
    v19 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      v23 = *v18;
      *v17 = *v18;
      swift_retain(v23);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
    v24 = a3[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = type metadata accessor for UserInterfaceSizeClass(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v29 + 16))(v25, v26, v28);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
      }
      v32 = v25;
      v33 = v27;
      v34 = 1;
    }
    else
    {
      v31 = *v26;
      *v25 = *v26;
      swift_retain(v31);
      v32 = v25;
      v33 = v27;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

void sub_1001C80CC(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 16));
  v5 = (_QWORD *)(a1 + a2[7]);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)(a1 + a2[8]);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
}

uint64_t sub_1001C8200(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 16) = v14;
  v15 = a3[7];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  swift_retain(v11);
  swift_retain(v14);
  v18 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
    v20 = 1;
  }
  else
  {
    v21 = *v17;
    *v16 = *v17;
    swift_retain(v21);
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v18, v20);
  v22 = a3[8];
  v23 = (uint64_t *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for UserInterfaceSizeClass(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v27 + 16))(v23, v24, v26);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    }
    v30 = v23;
    v31 = v25;
    v32 = 1;
  }
  else
  {
    v29 = *v24;
    *v23 = *v24;
    swift_retain(v29);
    v30 = v23;
    v31 = v25;
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v31, v32);
  return a1;
}

uint64_t sub_1001C83D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  v15 = v13[2];
  v16 = v14[2];
  v13[2] = v16;
  swift_retain(v16);
  swift_release(v15);
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (uint64_t *)(a1 + v17);
    v19 = (uint64_t *)(a2 + v17);
    sub_10004FF60(a1 + v17, (uint64_t *)&unk_1011ACE40);
    v20 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
      v22 = 1;
    }
    else
    {
      v23 = *v19;
      *v18 = *v19;
      swift_retain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v22);
    v24 = a3[8];
    v25 = (uint64_t *)(a1 + v24);
    v26 = (uint64_t *)(a2 + v24);
    sub_10004FF60(a1 + v24, (uint64_t *)&unk_1011A3ED0);
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = type metadata accessor for UserInterfaceSizeClass(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v29 + 16))(v25, v26, v28);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
      }
      v32 = v25;
      v33 = v27;
      v34 = 1;
    }
    else
    {
      v31 = *v26;
      *v25 = *v26;
      swift_retain(v31);
      v32 = v25;
      v33 = v27;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

uint64_t sub_1001C8600(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload(v11, v13, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for UserInterfaceSizeClass(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v16, v17, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001C87C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_release(v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_release(v16);
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_10004FF60(a1 + v17, (uint64_t *)&unk_1011ACE40);
    v20 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    v22 = a3[8];
    v23 = (void *)(a1 + v22);
    v24 = (const void *)(a2 + v22);
    sub_10004FF60(a1 + v22, (uint64_t *)&unk_1011A3ED0);
    v25 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for UserInterfaceSizeClass(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26))
      {
        v28 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v23, v24, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
      }
      swift_storeEnumTagMultiPayload(v23, v25, 1);
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C89CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C89D8);
}

uint64_t sub_1001C89D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C(&qword_1011C6890);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v8 = sub_100007E8C(&qword_1011A48A0);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[8];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1001C8AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C8ABC);
}

uint64_t sub_1001C8ABC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C(&qword_1011C6890);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A48A0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001C8B90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v2 = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100EAD510;
    v8[2] = &unk_100EAD888;
    sub_1000559DC(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001C17C8(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1001C8C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C8C68);
}

uint64_t sub_1001C8C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C8C78);
}

uint64_t *sub_1001C8C80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = v9;
      v14 = v11;
      v15 = 1;
    }
    else
    {
      v17 = *v10;
      *v9 = *v10;
      swift_retain(v17);
      v13 = v9;
      v14 = v11;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

double sub_1001C8D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001C8E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = v8;
    v13 = v10;
    v14 = 1;
  }
  else
  {
    v15 = *v9;
    *v8 = *v9;
    swift_retain(v15);
    v12 = v8;
    v13 = v10;
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v13, v14);
  return a1;
}

uint64_t sub_1001C8ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)(a1 + v7);
    v9 = (uint64_t *)(a2 + v7);
    sub_10004FF60(a1 + v7, (uint64_t *)&unk_1011ACE40);
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      v15 = *v9;
      *v8 = *v9;
      swift_retain(v15);
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_1001C8FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001C907C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_10004FF60(a1 + v7, (uint64_t *)&unk_1011ACE40);
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C915C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C9168);
}

uint64_t sub_1001C916C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1001C91E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C91F0);
}

uint64_t sub_1001C91F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011C6890);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001C9274(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000559DC(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

unint64_t sub_1001C92FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A52E0;
  if (!qword_1011A52E0)
  {
    v1 = sub_100044B54(&qword_1011A4E58);
    sub_100049F28(&qword_1011A52E8, &qword_1011A4E68, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011A52F0, &qword_1011A4E60, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A52E0);
  }
  return result;
}

unint64_t sub_1001C939C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A52F8;
  if (!qword_1011A52F8)
  {
    v1 = sub_100044B54(&qword_1011A4EB0);
    sub_1001C6990();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A52F8);
  }
  return result;
}

uint64_t sub_1001C9420(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9799C, 1);
}

uint64_t sub_1001C9430()
{
  return sub_100048748(&qword_1011A5300, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_100EAD90C);
}

uint64_t sub_1001C945C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97974, 1);
}

uint64_t sub_1001C946C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9794C, 1);
}

uint64_t type metadata accessor for LineHeightModifier(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A54B8, (uint64_t)&nominal type descriptor for LineHeightModifier);
}

unint64_t sub_1001C9498()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5350;
  if (!qword_1011A5350)
  {
    v1 = sub_100044B54(&qword_1011A5330);
    sub_1001C951C();
    sub_100048748(&qword_1011A5360, type metadata accessor for LineHeightModifier, (uint64_t)&unk_100EADB8C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5350);
  }
  return result;
}

unint64_t sub_1001C951C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011A5358;
  if (!qword_1011A5358)
  {
    v1 = sub_100044B54(&qword_1011A5328);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5358);
  }
  return result;
}

unint64_t sub_1001C95C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5378;
  if (!qword_1011A5378)
  {
    v1 = sub_100044B54(&qword_1011A2988);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5378);
  }
  return result;
}

unint64_t sub_1001C9648()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5390;
  if (!qword_1011A5390)
  {
    v1 = sub_100044B54(&qword_1011A5388);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5390);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.DurationView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5548, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.DurationView);
}

unint64_t sub_1001C96E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A53E0;
  if (!qword_1011A53E0)
  {
    v1 = sub_100044B54(&qword_1011A53D8);
    sub_1001C9764();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A53E0);
  }
  return result;
}

unint64_t sub_1001C9764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A53E8;
  if (!qword_1011A53E8)
  {
    v1 = sub_100044B54(&qword_1011A53F0);
    sub_1001C97E8();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A53E8);
  }
  return result;
}

unint64_t sub_1001C97E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A53F8;
  if (!qword_1011A53F8)
  {
    v1 = sub_100044B54(&qword_1011A5400);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A53F8);
  }
  return result;
}

uint64_t sub_1001C984C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 152);
  sub_100055BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001C989C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  id v33;
  id v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  char v38;
  _QWORD v39[3];
  objc_super v40;

  v7 = &v3[OBJC_IVAR____TtCV5Music18TaggedViewResolver4View_song];
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  v10 = &v3[OBJC_IVAR____TtCV5Music18TaggedViewResolver4View_windowObserver];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v40.receiver = v3;
  v40.super_class = (Class)type metadata accessor for TaggedViewResolver.View(0);
  swift_retain(a3);
  v11 = objc_msgSendSuper2(&v40, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  result = Song.catalogID.getter(v11);
  if (!v13)
    goto LABEL_47;
  v14 = v13;
  v15 = HIBYTE(v13) & 0xF;
  v16 = result & 0xFFFFFFFFFFFFLL;
  if ((v14 & 0x2000000000000000) != 0)
    v17 = v15;
  else
    v17 = result & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {
    swift_bridgeObjectRelease(v14);
LABEL_47:
    v32 = (void *)objc_opt_self(UIColor);
    v33 = v11;
    v34 = objc_msgSend(v32, "clearColor");
    objc_msgSend(v33, "setBackgroundColor:", v34);

    objc_msgSend(v33, "setUserInteractionEnabled:", 0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    return (uint64_t)v33;
  }
  if ((v14 & 0x1000000000000000) != 0)
  {
    v19 = sub_1001AF604(result, v14, 10);
    v21 = v38;
LABEL_45:
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v14).n128_u64[0];
    if ((v21 & 1) == 0)
      objc_msgSend(v11, "setTag:", v19, v31);
    goto LABEL_47;
  }
  if ((v14 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v18 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v14);
    v19 = (uint64_t)sub_1001AF5E4(v18, v16, 10);
    v21 = v20 & 1;
    goto LABEL_45;
  }
  v39[0] = result;
  v39[1] = v14 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v15)
      goto LABEL_58;
    if (v15 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    v19 = (BYTE1(result) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v19 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v22 = v15 - 3;
      if (v22)
      {
        v23 = (unsigned __int8 *)v39 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            goto LABEL_32;
          v25 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_32;
          v19 = v25 + v24;
          if (__OFADD__(v25, v24))
            goto LABEL_32;
          v21 = 0;
          ++v23;
          if (!--v22)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v21 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v15 || (result - 48) > 9u)
      goto LABEL_32;
    v19 = (result - 48);
    if (v15 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v19 = 10 * (result - 48) + (BYTE1(result) - 48);
      v26 = v15 - 2;
      if (v26)
      {
        v27 = (unsigned __int8 *)v39 + 2;
        while (1)
        {
          v28 = *v27 - 48;
          if (v28 > 9)
            goto LABEL_32;
          v29 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_32;
          v19 = v29 + v28;
          if (__OFADD__(v29, v28))
            goto LABEL_32;
          v21 = 0;
          ++v27;
          if (!--v26)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        v21 = 0;
        v19 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v19 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v30 = v15 - 3;
        if (!v30)
          goto LABEL_44;
        v35 = (unsigned __int8 *)v39 + 3;
        while (1)
        {
          v36 = *v35 - 48;
          if (v36 > 9)
            break;
          v37 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            break;
          v19 = v37 - v36;
          if (__OFSUB__(v37, v36))
            break;
          v21 = 0;
          ++v35;
          if (!--v30)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v19 = 0;
    v21 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

unint64_t sub_1001C9C90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011A5448;
  if (!qword_1011A5448)
  {
    v1 = sub_100044B54(&qword_1011A5420);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011C5080);
    v2[1] = sub_1000E4264();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_100048748(&qword_1011A5450, type metadata accessor for PreviewOverlay.ArtworkVariant, (uint64_t)&unk_100ED16C4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5448);
  }
  return result;
}

unint64_t sub_1001C9D3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011A5458;
  if (!qword_1011A5458)
  {
    v1 = sub_100044B54(&qword_1011A5438);
    v2 = sub_100044B54(&qword_1011A5428);
    v4 = sub_100044B54(&qword_1011A5420);
    v5 = sub_1001C9C90();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5458);
  }
  return result;
}

uint64_t *sub_1001C9E00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_1001C9EC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

uint64_t *sub_1001C9F2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_1001C9FC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, (uint64_t *)&unk_1011ACE40);
    v4 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_1001CA07C(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_1001CA114(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, (uint64_t *)&unk_1011ACE40);
    v4 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001CA1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001CA1D0);
}

uint64_t sub_1001CA1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011C6890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1001CA210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001CA21C);
}

uint64_t sub_1001CA21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011C6890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1001CA260(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

uint64_t initializeWithCopy for SwiftUISize(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for SwiftUISize(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for SwiftUISize(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for SwiftUISize()
{
  return &type metadata for SwiftUISize;
}

uint64_t *sub_1001CA3C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v13);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
    {
      v9 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
      v10 = v6;
      v11 = v8;
      v12 = 1;
    }
    else
    {
      v14 = *v7;
      *v6 = *v7;
      swift_retain(v14);
      v10 = v6;
      v11 = v8;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return v3;
}

double sub_1001CA49C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v2 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v2, v3) == 1)
  {
    v4 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v2).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1001CA504(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
    v9 = 1;
  }
  else
  {
    v10 = *v6;
    *v5 = *v6;
    swift_retain(v10);
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v9);
  return a1;
}

_QWORD *sub_1001CA5A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (_QWORD *)((char *)a1 + v4);
    v6 = (_QWORD *)((char *)a2 + v4);
    sub_10004FF60((uint64_t)a1 + v4, (uint64_t *)&unk_1011ACE40);
    v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
      v9 = 1;
    }
    else
    {
      v10 = *v6;
      *v5 = *v6;
      swift_retain(v10);
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v5, v7, v9);
  }
  return a1;
}

_QWORD *sub_1001CA664(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1001CA70C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    sub_10004FF60((uint64_t)a1 + v4, (uint64_t *)&unk_1011ACE40);
    v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload(v5, v7, 1);
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001CA7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001CA7D8);
}

uint64_t sub_1001CA7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_100007E8C(&qword_1011C6890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1001CA81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001CA828);
}

uint64_t sub_1001CA828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_100007E8C(&qword_1011C6890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_1001CA870(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_1001CA8E8()
{
  return sub_10005610C(&qword_1011A5580, &qword_1011A2F38, (void (*)(void))sub_1001CA91C);
}

unint64_t sub_1001CA91C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5588;
  if (!qword_1011A5588)
  {
    v1 = sub_100044B54(&qword_1011A2F30);
    sub_100049F28(&qword_1011A5590, &qword_1011A5308, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5588);
  }
  return result;
}

unint64_t sub_1001CA9A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5598;
  if (!qword_1011A5598)
  {
    v1 = sub_100044B54(&qword_1011A2F48);
    sub_100049F28(&qword_1011A55A0, &qword_1011A2F40, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5598);
  }
  return result;
}

unint64_t sub_1001CAA2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A55A8;
  if (!qword_1011A55A8)
  {
    v1 = sub_100044B54(&qword_1011A5440);
    sub_1001C9D3C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A55A8);
  }
  return result;
}

uint64_t sub_1001CAAB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97A14, 1);
}

uint64_t sub_1001CAAC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F979EC, 1);
}

uint64_t sub_1001CAAD0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F979C4, 1);
}

unint64_t sub_1001CAAE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_1011A55E0;
  if (!qword_1011A55E0)
  {
    v1 = sub_100044B54(&qword_1011A55D0);
    v2 = sub_100044B54(&qword_1011A55C0);
    v4 = sub_100044B54(&qword_1011A55B0);
    v5 = sub_100049F28(&qword_1011A55D8, &qword_1011A55B0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.minimumLineHeight(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.maximumLineHeight(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A55E0);
  }
  return result;
}

uint64_t sub_1001CABBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001CABE8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1001C0164(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

uint64_t sub_1001CABF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001CAC70()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  return sub_1001C0278(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

unint64_t sub_1001CACA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5630;
  if (!qword_1011A5630)
  {
    v1 = sub_100044B54(&qword_1011A5628);
    sub_1001C9648();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5630);
  }
  return result;
}

unint64_t sub_1001CAD28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011A5638;
  if (!qword_1011A5638)
  {
    v1 = sub_100044B54(&qword_1011A5608);
    v2[0] = sub_100044B54(&qword_1011A5628);
    v2[1] = sub_1001CACA4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.monospacedDigit()>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5638);
  }
  return result;
}

unint64_t sub_1001CADC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5640;
  if (!qword_1011A5640)
  {
    v1 = sub_100044B54(&qword_1011A5648);
    sub_1001CAAE0();
    sub_100049F28(&qword_1011A55D8, &qword_1011A55B0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5640);
  }
  return result;
}

unint64_t sub_1001CAE48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5650;
  if (!qword_1011A5650)
  {
    v1 = sub_100044B54(&qword_1011A55F0);
    sub_100049F28(&qword_1011A5658, &qword_1011A55E8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011A5660, &qword_1011A5668, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5650);
  }
  return result;
}

uint64_t sub_1001CAEE4()
{
  return sub_10005610C(&qword_1011A5670, &qword_1011A5618, (void (*)(void))sub_1001CAF18);
}

unint64_t sub_1001CAF18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5678;
  if (!qword_1011A5678)
  {
    v1 = sub_100044B54(&qword_1011A5610);
    sub_1001CAD28();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5678);
  }
  return result;
}

uint64_t sub_1001CAFAC@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v10 = a2;
  v11 = type metadata accessor for ContextualPreview.Data(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 8))(a3, a4, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  if (v10 != 2)
    v14[*(int *)(v11 + 36)] = a2 & 1;
  return sub_10005B6C0((uint64_t)v14, a5, type metadata accessor for ContextualPreview.Data);
}

uint64_t sub_1001CB080@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *object;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  int v39;
  char *v40;
  int *v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  char v45;
  __int128 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t *v55;
  uint64_t *v56;
  char *v57;
  char *v59;
  uint64_t v60;
  char *v61;
  int *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t);
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  int *v99;
  char *v100;
  uint64_t v101;
  uint64_t *v102;
  unsigned __int8 v103;
  __n128 v104;
  __n128 *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  char *v117;
  uint64_t v118;
  uint64_t *v119;
  unsigned __int8 v120;
  __n128 v121;
  __n128 *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  int *v139;
  char *v140;
  uint64_t v141;
  uint64_t *v142;
  unsigned __int8 v143;
  __n128 v144;
  __n128 *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  uint64_t *v153;
  uint64_t *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  int *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int *v170;
  uint64_t *v171;
  uint64_t *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  int *v178;
  char *v179;
  uint64_t v180;
  uint64_t *v181;
  char v182;
  __int128 v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t *v192;
  uint64_t *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  int *v197;
  char *v198;
  uint64_t v199;
  uint64_t *v200;
  char v201;
  __int128 v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t *v211;
  char *v212;
  uint64_t v213;
  Swift::String v214;
  uint64_t v215;
  void (*v216)(char *, uint64_t, uint64_t, __n128);
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;

  v268 = a1;
  v220 = type metadata accessor for UploadedVideo(0);
  v219 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v218 = (char *)&v215 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = type metadata accessor for UploadedAudio(0);
  v222 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v221 = (char *)&v215 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for TVShow(0);
  v225 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v224 = (char *)&v215 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = type metadata accessor for TVSeason(0);
  v228 = *(_QWORD *)(v229 - 8);
  __chkstk_darwin(v229);
  v227 = (char *)&v215 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for TVEpisode(0);
  v231 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v230 = (char *)&v215 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = type metadata accessor for Station(0);
  v234 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v233 = (char *)&v215 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = type metadata accessor for Song(0);
  v237 = *(_QWORD *)(v238 - 8);
  __chkstk_darwin(v238);
  v236 = (char *)&v215 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = type metadata accessor for SocialProfile(0);
  v240 = *(_QWORD *)(v241 - 8);
  __chkstk_darwin(v241);
  v239 = (char *)&v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = type metadata accessor for RecordLabel(0);
  v243 = *(_QWORD *)(v244 - 8);
  __chkstk_darwin(v244);
  v242 = (char *)&v215 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = type metadata accessor for RadioShow(0);
  v246 = *(_QWORD *)(v247 - 8);
  __chkstk_darwin(v247);
  v245 = (char *)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = type metadata accessor for Playlist(0);
  v249 = *(_QWORD *)(v250 - 8);
  __chkstk_darwin(v250);
  v248 = (char *)&v215 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v252 = *(_QWORD *)(v12 - 8);
  v253 = v12;
  __chkstk_darwin(v12);
  v251 = (char *)&v215 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicMovie(0);
  v255 = *(_QWORD *)(v14 - 8);
  v256 = v14;
  __chkstk_darwin(v14);
  v254 = (char *)&v215 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Genre(0);
  v258 = *(_QWORD *)(v16 - 8);
  v259 = v16;
  __chkstk_darwin(v16);
  v257 = (char *)&v215 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for EditorialItem(0);
  v261 = *(_QWORD *)(v18 - 8);
  v262 = v18;
  __chkstk_darwin(v18);
  v260 = (char *)&v215 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CreditArtist(0);
  v265 = *(_QWORD *)(v20 - 8);
  v266 = v20;
  __chkstk_darwin(v20);
  v264 = (char *)&v215 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for Curator(0);
  v22 = *(_QWORD *)(v263 - 8);
  __chkstk_darwin(v263);
  v24 = (char *)&v215 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Artist(0);
  v267 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (char *)&v215 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Album(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v215 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for GenericMusicItem(0);
  object = *(_QWORD **)(v32 - 8);
  __chkstk_darwin(v32);
  v217 = (char *)&v215 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v35);
  v38 = (char *)&v215 - v37;
  v216 = (void (*)(char *, uint64_t, uint64_t, __n128))object[2];
  v216((char *)&v215 - v37, v269, v32, v36);
  v39 = ((uint64_t (*)(char *, uint64_t))object[11])(v38, v32);
  if (v39 == enum case for GenericMusicItem.album(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v38, v28);
    v40 = v268;
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v28, (uint64_t)&protocol witness table for Album, v268);
    v41 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v42 = &v40[v41[5]];
    v43 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 10, v43);
    v44 = Corner.large.unsafeMutableAddressor();
    v45 = *((_BYTE *)v44 + 16);
    v46 = *(_OWORD *)v44;
    *(_QWORD *)&v40[v41[6]] = 0x3FF0000000000000;
    v47 = &v40[v41[7]];
    *(_OWORD *)v47 = v46;
    v47[16] = v45;
    v48 = Album.title.getter(v44);
    v50 = v49;
    v51 = Album.artistName.getter(v48);
    v53 = v52;
    v54 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v55 = (uint64_t *)&v40[v54[5]];
    *v55 = v48;
    v55[1] = v50;
    v56 = (uint64_t *)&v40[v54[6]];
    *v56 = v51;
    v56[1] = v53;
    v57 = &v40[v54[7]];
    *(_QWORD *)v57 = 0;
    *((_QWORD *)v57 + 1) = 0;
    v40[v54[8]] = 1;
    v40[v54[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  v59 = v268;
  if (v39 == enum case for GenericMusicItem.artist(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v60 = v267;
    (*(void (**)(char *, char *, uint64_t))(v267 + 32))(v27, v38, v25);
    v61 = v59;
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v25, (uint64_t)&protocol witness table for Artist, v59);
    v62 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v63 = &v59[v62[5]];
    v64 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 6, 10, v64);
    *(_QWORD *)&v61[v62[6]] = 0x3FF0000000000000;
    v66 = &v61[v62[7]];
    *(_QWORD *)v66 = 0;
    *((_QWORD *)v66 + 1) = 0;
    v66[16] = 1;
    v67 = Artist.name.getter(v65);
    v69 = v68;
    v70 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v71 = (uint64_t *)&v61[v70[5]];
    *v71 = v67;
    v71[1] = v69;
    v72 = &v61[v70[6]];
    *(_QWORD *)v72 = 0;
    *((_QWORD *)v72 + 1) = 0;
    v73 = &v61[v70[7]];
    *(_QWORD *)v73 = 0;
    *((_QWORD *)v73 + 1) = 0;
    v61[v70[8]] = 0;
    v61[v70[9]] = 1;
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v27, v25);
  }
  if (v39 == enum case for GenericMusicItem.composer(_:))
    goto LABEL_44;
  v74 = v268;
  if (v39 == enum case for GenericMusicItem.creditArtist(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v76 = v264;
    v75 = v265;
    v77 = v38;
    v78 = v266;
    (*(void (**)(char *, char *, uint64_t))(v265 + 32))(v264, v77, v266);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v78, (uint64_t)&protocol witness table for CreditArtist, v59);
    v79 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v80 = &v74[v79[5]];
    v81 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 6, 10, v81);
    *(_QWORD *)&v74[v79[6]] = 0x3FF0000000000000;
    v83 = &v74[v79[7]];
    *(_QWORD *)v83 = 0;
    *((_QWORD *)v83 + 1) = 0;
    v83[16] = 1;
    v84 = CreditArtist.name.getter(v82);
    v86 = v85;
    v87 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v88 = (uint64_t *)&v74[v87[5]];
    *v88 = v84;
    v88[1] = v86;
    v89 = &v74[v87[6]];
    *(_QWORD *)v89 = 0;
    *((_QWORD *)v89 + 1) = 0;
    v90 = &v74[v87[7]];
    *(_QWORD *)v90 = 0;
    *((_QWORD *)v90 + 1) = 0;
    v74[v87[8]] = 0;
    v74[v87[9]] = 1;
    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v76, v78);
  }
  if (v39 == enum case for GenericMusicItem.curator(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v91 = v263;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v38, v263);
    sub_1001D0160((uint64_t)v59);
    v92 = *(uint64_t (**)(char *, uint64_t))(v22 + 8);
    v93 = v24;
    return v92(v93, v91);
  }
  if (v39 == enum case for GenericMusicItem.editorialItem(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v94 = v260;
    v95 = v261;
    v91 = v262;
    (*(void (**)(char *, char *, uint64_t))(v261 + 32))(v260, v38, v262);
    sub_1001D04A8((uint64_t)v74);
LABEL_14:
    v92 = *(uint64_t (**)(char *, uint64_t))(v95 + 8);
    v93 = v94;
    return v92(v93, v91);
  }
  if (v39 == enum case for GenericMusicItem.genre(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v94 = v257;
    v95 = v258;
    v91 = v259;
    (*(void (**)(char *, char *, uint64_t))(v258 + 32))(v257, v38, v259);
    sub_1001D0698((uint64_t)v74);
    goto LABEL_14;
  }
  if (v39 == enum case for GenericMusicItem.musicMovie(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v97 = v254;
    v96 = v255;
    v98 = v256;
    (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v254, v38, v256);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v98, (uint64_t)&protocol witness table for MusicMovie, v59);
    v99 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v100 = &v74[v99[5]];
    v101 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v100, 5, 10, v101);
    v102 = Corner.large.unsafeMutableAddressor();
    v103 = *((_BYTE *)v102 + 16);
    v104 = *(__n128 *)v102;
    *(_QWORD *)&v74[v99[6]] = 0x3FE5555555555555;
    v105 = (__n128 *)&v74[v99[7]];
    *v105 = v104;
    v105[1].n128_u8[0] = v103;
    v106 = MusicMovie.title.getter(v104);
    v108 = v107;
    v109 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v110 = (uint64_t *)&v74[v109[5]];
    *v110 = v106;
    v110[1] = v108;
    v111 = &v74[v109[6]];
    *(_QWORD *)v111 = 0;
    *((_QWORD *)v111 + 1) = 0;
    v112 = &v74[v109[7]];
    *(_QWORD *)v112 = 0;
    *((_QWORD *)v112 + 1) = 0;
    v74[v109[8]] = 1;
    v74[v109[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v97, v98);
  }
  if (v39 == enum case for GenericMusicItem.musicVideo(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v113 = v251;
    v114 = v252;
    v115 = v253;
    (*(void (**)(char *, char *, uint64_t))(v252 + 32))(v251, v38, v253);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v115, (uint64_t)&protocol witness table for MusicVideo, v74);
    v116 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v117 = &v74[v116[5]];
    v118 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v117, 4, 10, v118);
    v119 = Corner.large.unsafeMutableAddressor();
    v120 = *((_BYTE *)v119 + 16);
    v121 = *(__n128 *)v119;
    *(_QWORD *)&v74[v116[6]] = 0x3FFC71C71C71C71CLL;
    v122 = (__n128 *)&v74[v116[7]];
    *v122 = v121;
    v122[1].n128_u8[0] = v120;
    v123 = MusicVideo.title.getter(v121);
    v125 = v124;
    v126 = MusicVideo.artistName.getter(v123);
    v128 = v127;
    v129 = MusicVideo.albumTitle.getter(v126);
    v131 = v130;
    v132 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v133 = (uint64_t *)&v74[v132[5]];
    *v133 = v123;
    v133[1] = v125;
    v134 = (uint64_t *)&v74[v132[6]];
    *v134 = v126;
    v134[1] = v128;
    v135 = (uint64_t *)&v74[v132[7]];
    *v135 = v129;
    v135[1] = v131;
    v74[v132[8]] = 1;
    v74[v132[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v113, v115);
  }
  if (v39 == enum case for GenericMusicItem.playlist(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v136 = v249;
    v137 = v248;
    v138 = v250;
    (*(void (**)(char *, char *, uint64_t))(v249 + 32))(v248, v38, v250);
    Playlist.artworkViewModel.getter((uint64_t)v74);
    v139 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v140 = &v74[v139[5]];
    Playlist.variant.getter(v139);
    v141 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v140, 0, 10, v141);
    v142 = Corner.large.unsafeMutableAddressor();
    v143 = *((_BYTE *)v142 + 16);
    v144 = *(__n128 *)v142;
    *(_QWORD *)&v74[v139[6]] = 0x3FF0000000000000;
    v145 = (__n128 *)&v74[v139[7]];
    *v145 = v144;
    v145[1].n128_u8[0] = v143;
    v146 = Playlist.name.getter(v144);
    v148 = v147;
    v149 = Playlist.curatorName.getter(v146);
    v151 = v150;
    v152 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v153 = (uint64_t *)&v74[v152[5]];
    *v153 = v146;
    v153[1] = v148;
    v154 = (uint64_t *)&v74[v152[6]];
    *v154 = v149;
    v154[1] = v151;
    v155 = &v74[v152[7]];
    *(_QWORD *)v155 = 0;
    *((_QWORD *)v155 + 1) = 0;
    v74[v152[8]] = 1;
    v74[v152[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v137, v138);
  }
  if (v39 == enum case for GenericMusicItem.radioShow(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v95 = v246;
    v94 = v245;
    v91 = v247;
    (*(void (**)(char *, char *, uint64_t))(v246 + 32))(v245, v38, v247);
    sub_1001D0A0C((uint64_t)v74);
    goto LABEL_14;
  }
  if (v39 == enum case for GenericMusicItem.recordLabel(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v95 = v243;
    v94 = v242;
    v91 = v244;
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v242, v38, v244);
    sub_1001D0D88(v74);
    goto LABEL_14;
  }
  if (v39 == enum case for GenericMusicItem.socialProfile(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v156 = v240;
    v157 = v239;
    v158 = v241;
    (*(void (**)(char *, char *, uint64_t))(v240 + 32))(v239, v38, v241);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v158, (uint64_t)&protocol witness table for SocialProfile, v74);
    v159 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v160 = &v74[v159[5]];
    v161 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v162 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v160, 7, 10, v161);
    *(_QWORD *)&v74[v159[6]] = 0x3FF0000000000000;
    v163 = &v74[v159[7]];
    *(_QWORD *)v163 = 0;
    *((_QWORD *)v163 + 1) = 0;
    v163[16] = 1;
    v164 = SocialProfile.name.getter(v162);
    v166 = v165;
    v167 = SocialProfile.handle.getter();
    v169 = v168;
    v170 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v171 = (uint64_t *)&v74[v170[5]];
    *v171 = v164;
    v171[1] = v166;
    v172 = (uint64_t *)&v74[v170[6]];
    *v172 = v167;
    v172[1] = v169;
    v173 = &v74[v170[7]];
    *(_QWORD *)v173 = 0;
    *((_QWORD *)v173 + 1) = 0;
    v74[v170[8]] = 1;
    v74[v170[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v157, v158);
  }
  if (v39 == enum case for GenericMusicItem.song(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v95 = v237;
    v94 = v236;
    v91 = v238;
    (*(void (**)(char *, char *, uint64_t))(v237 + 32))(v236, v38, v238);
    sub_1001D0F3C((uint64_t)v74);
    goto LABEL_14;
  }
  if (v39 == enum case for GenericMusicItem.station(_:))
  {
    ((void (*)(char *, uint64_t))object[12])(v38, v32);
    v95 = v234;
    v94 = v233;
    v91 = v235;
    (*(void (**)(char *, char *, uint64_t))(v234 + 32))(v233, v38, v235);
    sub_1001D1688((uint64_t)v74);
    goto LABEL_14;
  }
  if (v39 != enum case for GenericMusicItem.tvEpisode(_:))
  {
    if (v39 == enum case for GenericMusicItem.tvSeason(_:))
    {
      ((void (*)(char *, uint64_t))object[12])(v38, v32);
      v195 = v228;
      v196 = v227;
      v91 = v229;
      (*(void (**)(char *, char *, uint64_t))(v228 + 32))(v227, v38, v229);
      sub_1001D191C(v59);
    }
    else if (v39 == enum case for GenericMusicItem.tvShow(_:))
    {
      ((void (*)(char *, uint64_t))object[12])(v38, v32);
      v195 = v225;
      v196 = v224;
      v91 = v226;
      (*(void (**)(char *, char *, uint64_t))(v225 + 32))(v224, v38, v226);
      sub_1001D1AD4(v59);
    }
    else
    {
      if (v39 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        ((void (*)(char *, uint64_t))object[12])(v38, v32);
        v174 = v222;
        v175 = v221;
        v176 = v223;
        (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v221, v38, v223);
        v177 = v59;
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v176, (uint64_t)&protocol witness table for UploadedAudio, v59);
        v197 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
        v198 = &v59[v197[5]];
        v199 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 56))(v198, 1, 10, v199);
        v200 = Corner.large.unsafeMutableAddressor();
        v201 = *((_BYTE *)v200 + 16);
        v202 = *(_OWORD *)v200;
        *(_QWORD *)&v177[v197[6]] = 0x3FF0000000000000;
        v203 = &v177[v197[7]];
        *(_OWORD *)v203 = v202;
        v203[16] = v201;
        v204 = UploadedAudio.title.getter();
        v206 = v205;
        v207 = UploadedAudio.artistName.getter();
        v209 = v208;
        v191 = (int *)type metadata accessor for ContextualPreview.Data(0);
        v210 = (uint64_t *)&v177[v191[5]];
        *v210 = v204;
        v210[1] = v206;
        v211 = (uint64_t *)&v177[v191[6]];
        *v211 = v207;
        v211[1] = v209;
        v212 = &v177[v191[7]];
        *(_QWORD *)v212 = 0;
        *((_QWORD *)v212 + 1) = 0;
        v177[v191[8]] = 0;
        goto LABEL_34;
      }
      if (v39 != enum case for GenericMusicItem.uploadedVideo(_:))
      {
        while (1)
        {
          if (v39 == enum case for GenericMusicItem.other(_:))
          {
            ((void (*)(char *, uint64_t))object[12])(v38, v32);
            swift_bridgeObjectRelease(*((_QWORD *)v38 + 1));
          }
          else
          {
LABEL_44:
            ((void (*)(char *, uint64_t))object[1])(v38, v32);
          }
          ((void (*)(char *, uint64_t, uint64_t))v216)(v217, v269, v32);
          v270 = 0;
          v271 = 0xE000000000000000;
          _StringGuts.grow(_:)(31);
          swift_bridgeObjectRelease(v271);
          v270 = 0xD00000000000001DLL;
          v271 = 0x8000000100E30CE0;
          v213 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
          v214._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v32, v213);
          object = v214._object;
          String.append(_:)(v214);
          swift_bridgeObjectRelease(object);
          v39 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v270, v271, "Music/ContextualPreview.swift", 29, 2, 332, 0);
          __break(1u);
        }
      }
      ((void (*)(char *, uint64_t))object[12])(v38, v32);
      v195 = v219;
      v196 = v218;
      v91 = v220;
      (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v218, v38, v220);
      sub_1001D1D0C((uint64_t)v59);
    }
    v92 = *(uint64_t (**)(char *, uint64_t))(v195 + 8);
    v93 = v196;
    return v92(v93, v91);
  }
  ((void (*)(char *, uint64_t))object[12])(v38, v32);
  v174 = v231;
  v175 = v230;
  v176 = v232;
  (*(void (**)(char *, char *, uint64_t))(v231 + 32))(v230, v38, v232);
  v177 = v59;
  TVEpisode.artworkViewModel.getter(v59);
  v178 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v179 = &v59[v178[5]];
  v180 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 56))(v179, 5, 10, v180);
  v181 = Corner.large.unsafeMutableAddressor();
  v182 = *((_BYTE *)v181 + 16);
  v183 = *(_OWORD *)v181;
  *(_QWORD *)&v177[v178[6]] = 0x3FFC71C71C71C71CLL;
  v184 = &v177[v178[7]];
  *(_OWORD *)v184 = v183;
  v184[16] = v182;
  v185 = TVEpisode.title.getter(v181);
  v187 = v186;
  v188 = TVEpisode.showName.getter();
  v190 = v189;
  v191 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v192 = (uint64_t *)&v177[v191[5]];
  *v192 = v185;
  v192[1] = v187;
  v193 = (uint64_t *)&v177[v191[6]];
  *v193 = v188;
  v193[1] = v190;
  v194 = &v177[v191[7]];
  *(_QWORD *)v194 = 0;
  *((_QWORD *)v194 + 1) = 0;
  v177[v191[8]] = 1;
LABEL_34:
  v177[v191[9]] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v174 + 8))(v175, v176);
}

id sub_1001CC550(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  Class isa;
  id v6;
  id v7;
  id v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double v16;
  id v17;
  id v18;
  id v19;
  _QWORD v21[2];
  char v22;
  double v23;
  double v24;
  double v25;
  double v26;
  _QWORD v27[2];
  char v28;
  double v29;
  double v30;
  double v31;
  double v32;
  char v33;

  v3 = v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v3, "cellForItemAtIndexPath:", isa);

  if (v6)
  {
    v7 = objc_msgSend(v6, "window");

    if (v7)
    {
      v8 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
      sub_100065228(a2, (uint64_t)v27, &qword_1011A58D8);
      if ((v33 & 1) != 0)
      {
        sub_1001D7AF4(v6, (uint64_t)v21);
        v9 = v23;
        v10 = v24;
        v11 = v25;
        v12 = v26;
        v13 = v21[0];
        v14 = v21[1];
        v15 = v22;
      }
      else
      {
        v13 = v27[0];
        v14 = v27[1];
        v9 = v29;
        v10 = v30;
        v11 = v31;
        v12 = v32;
        v15 = v28 & 1;
      }
      v16 = Corner.radius(in:)(v13, v9, v10, v11, v12, v14, v15);
      v17 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v9, v10, v11, v12, v16);
      objc_msgSend(v8, "setVisiblePath:", v17);

      objc_msgSend(v6, "setHighlighted:", 0);
      objc_msgSend(v6, "setSelected:", 0);
      objc_msgSend(v6, "setBackgroundColor:", 0);
      v18 = objc_allocWithZone((Class)UITargetedPreview);
      v19 = v6;
      v6 = objc_msgSend(v18, "initWithView:parameters:", v19, v8);

    }
    else
    {

      return 0;
    }
  }
  return v6;
}

uint64_t sub_1001CC750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = type metadata accessor for ContextualPreview.InlinePreview(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_100007E8C(&qword_1011A58B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ContextualPreview.StackedPreview(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for ContextualPreview.Data(0) + 32)) == 1)
  {
    sub_10005B704(v0, (uint64_t)v12, type metadata accessor for ContextualPreview.Data);
    v12[*(int *)(v10 + 20)] = 1;
    sub_10005B704((uint64_t)v12, (uint64_t)v9, type metadata accessor for ContextualPreview.StackedPreview);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v13 = sub_100048748(&qword_1011A58B8, type metadata accessor for ContextualPreview.StackedPreview, (uint64_t)&unk_100EADF94);
    v14 = sub_100048748(&qword_1011A58C0, type metadata accessor for ContextualPreview.InlinePreview, (uint64_t)&unk_100EADF44);
    _ConditionalContent<>.init(storage:)(v9, v10, v1, v13, v14);
    v15 = (uint64_t)v12;
    v16 = type metadata accessor for ContextualPreview.StackedPreview;
  }
  else
  {
    v17 = sub_10005B704(v0, (uint64_t)v3, type metadata accessor for ContextualPreview.Data);
    v3[*(int *)(v1 + 20)] = 0;
    Text.Measurements.init()(v17);
    v18 = &v3[*(int *)(v1 + 28)];
    *(_QWORD *)v18 = swift_getKeyPath(&unk_100EADE78);
    v19 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    swift_storeEnumTagMultiPayload(v18, v19, 0);
    sub_10005B6C0((uint64_t)v3, (uint64_t)v6, type metadata accessor for ContextualPreview.InlinePreview);
    sub_10005B704((uint64_t)v6, (uint64_t)v9, type metadata accessor for ContextualPreview.InlinePreview);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v20 = sub_100048748(&qword_1011A58B8, type metadata accessor for ContextualPreview.StackedPreview, (uint64_t)&unk_100EADF94);
    v21 = sub_100048748(&qword_1011A58C0, type metadata accessor for ContextualPreview.InlinePreview, (uint64_t)&unk_100EADF44);
    _ConditionalContent<>.init(storage:)(v9, v10, v1, v20, v21);
    v15 = (uint64_t)v6;
    v16 = type metadata accessor for ContextualPreview.InlinePreview;
  }
  return sub_10005B748(v15, v16);
}

void sub_1001CCA04(char a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  char v6;
  id v7;

  v2 = (void *)objc_opt_self(UITraitCollection);
  v3 = objc_msgSend(v2, "currentTraitCollection");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (!v4)
  {
    v5 = objc_msgSend(v2, "currentTraitCollection");
    v6 = UITraitCollection.isAccessibilitySizeCategory.getter();

    if (((v6 & 1) == 0 || (a1 & 1) != 0) && qword_10119BB98 != -1)
      swift_once(&qword_10119BB98, sub_1001CFECC);
    v7 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v7, "bounds");

  }
}

uint64_t sub_1001CCB2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t OpaqueTypeConformance2;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD v68[5];

  v2 = v1;
  v63 = a1;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  __chkstk_darwin(v3);
  v62 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011C92A0);
  __chkstk_darwin(v61);
  v67 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A5A28);
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A5A30);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A5A38);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A2CF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011A2CF8);
  __chkstk_darwin(v57);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A5A40);
  v59 = *(_QWORD *)(v20 - 8);
  v60 = v20;
  __chkstk_darwin(v20);
  v58 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v22);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v23 = sub_100007E8C(&qword_1011A5A48);
  sub_1001CD078(v2, &v8[*(int *)(v23 + 44)]);
  KeyPath = swift_getKeyPath(&unk_100EADFE8);
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011A5A28);
  v25 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v25 = KeyPath;
  *((_QWORD *)v25 + 1) = 2;
  v25[16] = 0;
  v26 = (uint64_t)v67;
  sub_10004FF60((uint64_t)v8, &qword_1011A5A28);
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011A5A30);
  *(_WORD *)&v14[*(int *)(v12 + 36)] = 256;
  v27 = sub_10004FF60((uint64_t)v11, &qword_1011A5A30);
  LOBYTE(v11) = static Edge.Set.all.getter(v27);
  v28 = EdgeInsets.init(_all:)(16.0);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011A5A38);
  v35 = &v17[*(int *)(v15 + 36)];
  *v35 = (char)v11;
  *((double *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_10004FF60((uint64_t)v14, &qword_1011A5A38);
  LOBYTE(v14) = *(_BYTE *)(v66 + *(int *)(type metadata accessor for ContextualPreview.StackedPreview(0) + 20));
  sub_1001CCA04((char)v14);
  v37 = v36 + 32.0;
  sub_1001CCA04((char)v14);
  v39 = v38 + 32.0;
  v40 = sub_1001CD918((char)v14);
  LOBYTE(v8) = v41 & 1;
  v42 = static Alignment.center.getter(v40);
  sub_100149E6C(v37, 0, v39, 0, *(double *)&v40, (char)v8, 0.0, 1, (uint64_t)v19, 0.0, 1, 0.0, 1, v42, v43);
  sub_10004FF60((uint64_t)v17, &qword_1011A2CF0);
  v44 = enum case for DynamicTypeSize.accessibility2(_:);
  v45 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v26, v44, v45);
  v46 = sub_100048748((unint64_t *)&qword_1011A5A50, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v26, v26, v45, v46);
  if ((result & 1) != 0)
  {
    v48 = sub_10005610C(&qword_1011A5A58, &qword_1011A2CF8, (void (*)(void))sub_1001DAE0C);
    v49 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v51 = v57;
    v50 = v58;
    v52 = v61;
    View.dynamicTypeSize<A>(_:)(v26, v57, v61, v48, v49);
    sub_10004FF60(v26, &qword_1011C92A0);
    v53 = sub_10004FF60((uint64_t)v19, &qword_1011A2CF8);
    v54 = v62;
    static AccessibilityChildBehavior.combine.getter(v53);
    v68[0] = v51;
    v68[1] = v52;
    v68[2] = v48;
    v68[3] = v49;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v68, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v56 = v60;
    View.accessibilityElement(children:)(v54, v60, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v54, v65);
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v50, v56);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001CD078@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  double v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  Swift::Int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v99 = a2;
  v103 = sub_100007E8C(&qword_1011A0F48);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v4 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_100007E8C(&qword_1011A5A88);
  __chkstk_darwin(v100);
  v98 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100007E8C(&qword_1011A5A90);
  __chkstk_darwin(v102);
  v109 = (uint64_t)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v104 = (uint64_t)&v92 - v8;
  v9 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v10 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  v11 = v10;
  v108 = v10;
  __chkstk_darwin(v9);
  v106 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v92 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v92 - v17;
  v107 = (char *)&v92 - v17;
  v19 = *(double *)(a1 + *(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 24));
  v20 = type metadata accessor for ContextualPreview.StackedPreview(0);
  sub_1001CCA04(*(_BYTE *)(a1 + *(int *)(v20 + 20)));
  v97 = a1;
  sub_1001CD6A8((uint64_t)v15, COERCE__INT64(v21 * fmin(v19, 1.0)));
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v15, v9);
  v96 = type metadata accessor for ContextualPreview.Data(0);
  v22 = (uint64_t *)(a1 + *(int *)(v96 + 20));
  v23 = *v22;
  v24 = v22[1];
  v25 = sub_1004872C4((uint64_t)&off_1010AAB10);
  swift_bridgeObjectRetain();
  v26 = Text.init(optional:options:)(v23, v24, v25);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = static Font.body.getter(v26);
  KeyPath = swift_getKeyPath(&unk_100EAE018);
  v110 = v26;
  v111 = v28;
  v112 = v30;
  v113 = v32;
  v114 = KeyPath;
  v115 = v33;
  v35 = static Font.Weight.semibold.getter(KeyPath);
  v36 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v37 = sub_1000F59AC();
  View.fontWeight(_:)(*(_QWORD *)&v35, 0, v36, v37);
  sub_1000E450C(v26, v28, v30, v32);
  swift_release(v33);
  v38 = swift_release(KeyPath);
  LODWORD(v33) = static HierarchicalShapeStyle.primary.getter(v38);
  v39 = v101;
  v40 = (uint64_t)v98;
  v41 = v103;
  (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v98, v4, v103);
  *(_DWORD *)(v40 + *(int *)(v100 + 36)) = v33;
  v42 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v4, v41);
  LOBYTE(v33) = static Edge.Set.top.getter(v42);
  v43 = EdgeInsets.init(_all:)(6.0);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v109;
  sub_10004A160(v40, v109, &qword_1011A5A88);
  v51 = v50 + *(int *)(v102 + 36);
  *(_BYTE *)v51 = v33;
  *(double *)(v51 + 8) = v43;
  *(_QWORD *)(v51 + 16) = v45;
  *(_QWORD *)(v51 + 24) = v47;
  *(_QWORD *)(v51 + 32) = v49;
  *(_BYTE *)(v51 + 40) = 0;
  sub_10004FF60(v40, &qword_1011A5A88);
  v52 = v104;
  sub_100065228(v50, v104, &qword_1011A5A90);
  v53 = v96;
  v54 = v97;
  v55 = (uint64_t *)(v97 + *(int *)(v96 + 24));
  v56 = *v55;
  v57 = v55[1];
  v58 = sub_1004872C4((uint64_t)&off_1010AAB38);
  swift_bridgeObjectRetain();
  v59 = Text.init(optional:options:)(v56, v57, v58);
  v102 = v60;
  v103 = v59;
  v98 = v61;
  v101 = v62;
  v95 = static Font.body.getter(v59);
  v100 = swift_getKeyPath(&unk_100EAE018);
  v94 = static HierarchicalShapeStyle.secondary.getter(v100);
  v63 = (uint64_t *)(v54 + *(int *)(v53 + 28));
  v64 = *v63;
  v65 = v63[1];
  v66 = sub_1004872C4((uint64_t)&off_1010AAB60);
  swift_bridgeObjectRetain();
  v67 = Text.init(optional:options:)(v64, v65, v66);
  v69 = v68;
  v71 = v70;
  v97 = v72;
  v96 = static Font.footnote.getter(v67);
  v73 = swift_getKeyPath(&unk_100EAE018);
  v93 = static HierarchicalShapeStyle.secondary.getter(v73);
  v74 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  v76 = v105;
  v75 = v106;
  v74(v106, v107, v105);
  v77 = v109;
  sub_10004A160(v52, v109, &qword_1011A5A90);
  v78 = v99;
  v74(v99, v75, v76);
  v79 = (int *)sub_100007E8C(&qword_1011A5A98);
  sub_10004A160(v77, (uint64_t)&v78[v79[12]], &qword_1011A5A90);
  v80 = &v78[v79[16]];
  v82 = v102;
  v81 = v103;
  *(_QWORD *)v80 = v103;
  *((_QWORD *)v80 + 1) = v82;
  LOBYTE(v52) = (_BYTE)v98;
  v84 = v100;
  v83 = v101;
  *((_QWORD *)v80 + 2) = v98;
  *((_QWORD *)v80 + 3) = v83;
  v85 = v95;
  *((_QWORD *)v80 + 4) = v84;
  *((_QWORD *)v80 + 5) = v85;
  *((_DWORD *)v80 + 12) = v94;
  v86 = &v78[v79[20]];
  *(_QWORD *)v86 = v67;
  *((_QWORD *)v86 + 1) = v69;
  v87 = v97;
  *((_QWORD *)v86 + 2) = v71;
  *((_QWORD *)v86 + 3) = v87;
  v88 = v96;
  *((_QWORD *)v86 + 4) = v73;
  *((_QWORD *)v86 + 5) = v88;
  *((_DWORD *)v86 + 12) = v93;
  sub_1000E4440(v81, v82, v52, v83);
  swift_retain(v84);
  swift_retain(v85);
  sub_1000E4440(v67, v69, v71, v87);
  swift_retain(v73);
  swift_retain(v88);
  sub_10004FF60(v104, &qword_1011A5A90);
  v89 = *(void (**)(char *, uint64_t))(v108 + 8);
  v90 = v105;
  v89(v107, v105);
  sub_1000E450C(v67, v69, v71, v87);
  swift_release(v88);
  swift_release(v73);
  sub_1000E450C(v103, v102, v52, v101);
  swift_release(v85);
  swift_release(v100);
  sub_10004FF60(v109, &qword_1011A5A90);
  return ((uint64_t (*)(char *, uint64_t))v89)(v106, v90);
}

uint64_t sub_1001CD6A8@<X0>(uint64_t a1@<X8>, uint64_t a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _BYTE v37[48];

  v3 = v2;
  v34 = a1;
  v5 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v32 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v33 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v16 = v3 + v15[5];
  ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)(a2, 0, 0.0, 1, (uint64_t)v37, *(double *)(v3 + v15[6]));
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v5);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v3, v16, (uint64_t)v37, (uint64_t)v8, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v3 + v15[7];
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  LOBYTE(v8) = *(_BYTE *)(v17 + 16);
  v20 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v21 = sub_1000E4264();
  v35 = v20;
  v36 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v35, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(v18, v19, (char)v8, v9, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  v23 = Border.artwork.unsafeMutableAddressor();
  v24 = *v23;
  v25 = *((double *)v23 + 1);
  v26 = *(_QWORD *)v17;
  v27 = *(_QWORD *)(v17 + 8);
  LOBYTE(v8) = *(_BYTE *)(v17 + 16);
  LOBYTE(v16) = *((_BYTE *)v23 + 16);
  swift_retain(*v23);
  v35 = v9;
  v36 = OpaqueTypeConformance2;
  v28 = swift_getOpaqueTypeConformance2(&v35, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  View.border(_:corner:)(v24, v16, v26, v27, (char)v8, v12, v28, v25);
  v29 = swift_release(v24);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v33 + 8))(v14, v12, v29);
}

uint64_t sub_1001CD918(char a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t result;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;

  v2 = (void *)objc_opt_self(UITraitCollection);
  v3 = objc_msgSend(v2, "currentTraitCollection");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (id)6)
  {
    if ((a1 & 1) != 0)
    {
      *(double *)&result = 0.0;
    }
    else
    {
      if (qword_10119BB90 != -1)
        swift_once(&qword_10119BB90, sub_1001CFEB8);
      return qword_1011A5688;
    }
  }
  else
  {
    v6 = objc_msgSend(v2, "currentTraitCollection");
    v7 = objc_msgSend(v6, "userInterfaceIdiom");

    if (v7)
    {
      if (qword_10119BB88 != -1)
        swift_once(&qword_10119BB88, sub_1001CFEA4);
      return qword_1011A5680;
    }
    else
    {
      v8 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v8, "bounds");
      v10 = v9;

      if (qword_10119BB98 != -1)
        swift_once(&qword_10119BB98, sub_1001CFECC);
      *(double *)&result = v10 - (*(double *)&qword_1011A5690 + *(double *)&qword_1011A5690);
    }
  }
  return result;
}

uint64_t sub_1001CDAB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  Swift::Int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  __n128 v39;
  int v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t result;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t OpaqueTypeConformance2;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  double v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  double v147;
  double v148;
  double v149;
  double v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __n128 v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t KeyPath;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  int v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  int v250;

  v2 = v1;
  v209 = a1;
  v3 = sub_100007E8C(&qword_1011A5AA0);
  __chkstk_darwin(v3);
  v189 = (uint64_t *)((char *)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v185 = sub_100007E8C(&qword_1011A5AA8);
  __chkstk_darwin(v185);
  v188 = (uint64_t)&v172 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = sub_100007E8C(&qword_1011A5AB0);
  __chkstk_darwin(v186);
  v190 = (uint64_t)&v172 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100007E8C(&qword_1011A2D10);
  __chkstk_darwin(v187);
  v191 = (uint64_t)&v172 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_100007E8C(&qword_1011A2D18);
  __chkstk_darwin(v207);
  v193 = (uint64_t)&v172 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = sub_100007E8C(&qword_1011A5AB8);
  v195 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v192 = (char *)&v172 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v194 = (char *)&v172 - v11;
  v205 = sub_100007E8C(&qword_1011A5AC0);
  __chkstk_darwin(v205);
  v206 = (char *)&v172 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for AccessibilityChildBehavior(0);
  v201 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v200 = (char *)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_100007E8C(&qword_1011C92A0);
  __chkstk_darwin(v203);
  v197 = (char *)&v172 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A5AC8);
  __chkstk_darwin(v15);
  v180 = (uint64_t *)((char *)&v172 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v178 = sub_100007E8C(&qword_1011A5AD0);
  __chkstk_darwin(v178);
  v182 = (uint64_t)&v172 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_1011A5AD8);
  __chkstk_darwin(v179);
  v183 = (uint64_t)&v172 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100007E8C(&qword_1011A2D00);
  __chkstk_darwin(v181);
  v184 = (uint64_t)&v172 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100007E8C(&qword_1011A2D08);
  __chkstk_darwin(v198);
  v196 = (uint64_t)&v172 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_100007E8C(&qword_1011A5AE0);
  v175 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v174 = (char *)&v172 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_100007E8C(&qword_1011A5AE8);
  v177 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v173 = (char *)&v172 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v176 = (char *)&v172 - v24;
  v25 = type metadata accessor for DynamicTypeSize(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v172 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v30 = (uint64_t *)(v2 + v29[5]);
  v31 = *v30;
  v32 = v30[1];
  v33 = sub_1004872C4((uint64_t)&off_1010AAB88);
  swift_bridgeObjectRetain();
  v226 = Text.init(optional:options:)(v31, v32, v33);
  v227 = v34;
  v228 = v35;
  v229 = v36;
  v37 = static Font.body.getter(v226);
  v38 = static Font.Weight.semibold.getter(v37);
  v225 = Font.weight(_:)(v37, v38);
  swift_release(v37);
  KeyPath = swift_getKeyPath(&unk_100EAE018);
  v40 = static HierarchicalShapeStyle.primary.getter(v39);
  v41 = (uint64_t *)(v2 + v29[6]);
  v42 = *v41;
  v43 = v41[1];
  v44 = sub_1004872C4((uint64_t)&off_1010AABB0);
  swift_bridgeObjectRetain();
  v215 = Text.init(optional:options:)(v42, v43, v44);
  v216 = v45;
  v221 = v46;
  v222 = v47;
  v217 = static Font.footnote.getter(v215);
  v223 = swift_getKeyPath(&unk_100EAE018);
  v48 = static HierarchicalShapeStyle.secondary.getter(v223);
  v49 = (uint64_t *)(v2 + v29[7]);
  v50 = *v49;
  v51 = v49[1];
  v52 = sub_1004872C4((uint64_t)&off_1010AABD8);
  swift_bridgeObjectRetain();
  v214 = Text.init(optional:options:)(v50, v51, v52);
  v218 = v53;
  v219 = v54;
  v213 = v55;
  v220 = static Font.footnote.getter(v214);
  v212 = swift_getKeyPath(&unk_100EAE018);
  v56 = static HierarchicalShapeStyle.secondary.getter(v212);
  v210 = type metadata accessor for ContextualPreview.InlinePreview(0);
  v211 = v2;
  v57 = sub_1008237B8((uint64_t)v28);
  LOBYTE(v50) = DynamicTypeSize.isAccessibilitySize.getter(v57);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  if ((v50 & 1) != 0)
  {
    v59 = static HorizontalAlignment.leading.getter(v58);
    v244 = v226;
    v245 = v227;
    v246 = v228;
    v247 = v229;
    v248 = KeyPath;
    v249 = v225;
    v250 = v40;
    v237 = v215;
    v238 = v216;
    v239 = v221;
    v240 = v222;
    v241 = v223;
    v242 = v217;
    v243 = v48;
    v230 = v214;
    v231 = v218;
    v232 = v219;
    v233 = v213;
    v234 = v212;
    v235 = v220;
    v236 = v56;
    v60 = (uint64_t)v180;
    *v180 = v59;
    *(_QWORD *)(v60 + 8) = 0;
    *(_BYTE *)(v60 + 16) = 0;
    v61 = sub_100007E8C(&qword_1011A5B48);
    v62 = v211;
    sub_1001CEE74(v211, (uint64_t)&v244, &v237, (uint64_t)&v230, v60 + *(int *)(v61 + 44));
    v63 = swift_getKeyPath(&unk_100EADFE8);
    v64 = v182;
    sub_10004A160(v60, v182, &qword_1011A5AC8);
    v65 = v64 + *(int *)(v178 + 36);
    *(_QWORD *)v65 = v63;
    *(_QWORD *)(v65 + 8) = 2;
    *(_BYTE *)(v65 + 16) = 0;
    sub_10004FF60(v60, &qword_1011A5AC8);
    v66 = v183;
    sub_10004A160(v64, v183, &qword_1011A5AD0);
    *(_WORD *)(v66 + *(int *)(v179 + 36)) = 256;
    v67 = sub_10004FF60(v64, &qword_1011A5AD0);
    LOBYTE(v63) = static Edge.Set.all.getter(v67);
    v68 = EdgeInsets.init(_all:)(16.0);
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v75 = v184;
    sub_10004A160(v66, v184, &qword_1011A5AD8);
    v76 = v75 + *(int *)(v181 + 36);
    *(_BYTE *)v76 = v63;
    *(double *)(v76 + 8) = v68;
    *(_QWORD *)(v76 + 16) = v70;
    *(_QWORD *)(v76 + 24) = v72;
    *(_QWORD *)(v76 + 32) = v74;
    *(_BYTE *)(v76 + 40) = 0;
    sub_10004FF60(v66, &qword_1011A5AD8);
    LOBYTE(v63) = *(_BYTE *)(v62 + *(int *)(v210 + 20));
    sub_1001CCA04(v63);
    v78 = v77;
    sub_1001CCA04(v63);
    v80 = v79;
    v81 = sub_1001CD918(v63);
    LOBYTE(v66) = v82 & 1;
    v83 = static Alignment.center.getter(v81);
    sub_100149ED0(v78, 0, v80, 0, *(double *)&v81, v66, 0.0, 1, v196, 0.0, 1, 0.0, 1, v83, v84);
    sub_10004FF60(v75, &qword_1011A2D00);
    v85 = v197;
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v197, enum case for DynamicTypeSize.accessibility2(_:), v25);
    v86 = sub_100048748((unint64_t *)&qword_1011A5A50, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
    result = dispatch thunk of static Equatable.== infix(_:_:)(v85, v85, v25, v86);
    if ((result & 1) != 0)
    {
      v88 = sub_10005610C(&qword_1011A5B20, &qword_1011A2D08, (void (*)(void))sub_1001DB038);
      v89 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
      v90 = v174;
      v91 = (uint64_t)v197;
      v92 = v198;
      v93 = v203;
      v94 = v196;
      View.dynamicTypeSize<A>(_:)(v197, v198, v203, v88, v89);
      sub_10004FF60(v91, &qword_1011C92A0);
      v95 = sub_10004FF60(v94, &qword_1011A2D08);
      v96 = v200;
      static AccessibilityChildBehavior.combine.getter(v95);
      v244 = v92;
      v245 = v93;
      v246 = v88;
      v247 = v89;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v244, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
      v98 = v173;
      v99 = v199;
      View.accessibilityElement(children:)(v96, v199, OpaqueTypeConformance2);
      (*(void (**)(char *, uint64_t))(v201 + 8))(v96, v202);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v90, v99);
      v100 = v177;
      v101 = v176;
      v102 = v204;
      (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v176, v98, v204);
      v103 = v206;
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v206, v101, v102);
      swift_storeEnumTagMultiPayload(v103, v205, 0);
      v244 = v99;
      v245 = OpaqueTypeConformance2;
      v104 = swift_getOpaqueTypeConformance2(&v244, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
      v105 = sub_10005610C(&qword_1011A5AF8, &qword_1011A2D18, (void (*)(void))sub_1001DAF54);
      v244 = v207;
      v245 = v105;
      v106 = swift_getOpaqueTypeConformance2(&v244, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
      _ConditionalContent<>.init(storage:)(v103, v102, v208, v104, v106);
      sub_1000E450C(v214, v218, v219, v213);
      swift_release(v220);
      swift_release(v212);
      sub_1000E450C(v215, v216, v221, v222);
      swift_release(v217);
      swift_release(v223);
      sub_1000E450C(v226, v227, v228, v229);
      swift_release(v225);
      v107 = swift_release(KeyPath);
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v100 + 8))(v101, v102, v107);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v244 = v226;
    v245 = v227;
    v246 = v228;
    v247 = v229;
    v108 = KeyPath;
    v109 = v225;
    v248 = KeyPath;
    v249 = v225;
    v250 = v40;
    v110 = v215;
    v111 = v216;
    v237 = v215;
    v238 = v216;
    v112 = v221;
    v113 = v222;
    v239 = v221;
    v240 = v222;
    v114 = v223;
    v115 = v217;
    v241 = v223;
    v242 = v217;
    v243 = v48;
    v230 = v214;
    v116 = v56;
    v117 = v214;
    v231 = v218;
    v232 = v219;
    v233 = v213;
    v118 = v212;
    v234 = v212;
    v235 = v220;
    v236 = v116;
    sub_1000E4440(v226, v227, v228, v229);
    swift_retain(v108);
    swift_retain(v109);
    v119 = v110;
    v120 = v111;
    sub_1000E4440(v110, v111, v112, v113);
    swift_retain(v114);
    v121 = v115;
    swift_retain(v115);
    v122 = v218;
    v123 = v219;
    v124 = v213;
    sub_1000E4440(v117, v218, v219, v213);
    v125 = v118;
    swift_retain(v118);
    v126 = v220;
    swift_retain(v220);
    v128 = static VerticalAlignment.center.getter(v127);
    v129 = (uint64_t)v189;
    *v189 = v128;
    *(_QWORD *)(v129 + 8) = 0;
    *(_BYTE *)(v129 + 16) = 0;
    v130 = sub_100007E8C(&qword_1011A5AF0);
    sub_1001CF468(v211, (uint64_t)&v244, (uint64_t)&v237, (uint64_t)&v230, v129 + *(int *)(v130 + 44));
    sub_1000E450C(v226, v227, v228, v229);
    swift_release(v225);
    swift_release(KeyPath);
    sub_1000E450C(v119, v120, v221, v222);
    swift_release(v121);
    swift_release(v223);
    v131 = v123;
    v132 = v124;
    sub_1000E450C(v117, v122, v131, v124);
    swift_release(v126);
    swift_release(v125);
    v133 = swift_getKeyPath(&unk_100EADFE8);
    v134 = v188;
    sub_10004A160(v129, v188, &qword_1011A5AA0);
    v135 = v134 + *(int *)(v185 + 36);
    *(_QWORD *)v135 = v133;
    *(_QWORD *)(v135 + 8) = 2;
    *(_BYTE *)(v135 + 16) = 0;
    sub_10004FF60(v129, &qword_1011A5AA0);
    v136 = v190;
    sub_10004A160(v134, v190, &qword_1011A5AA8);
    *(_WORD *)(v136 + *(int *)(v186 + 36)) = 256;
    v137 = sub_10004FF60(v134, &qword_1011A5AA8);
    LOBYTE(v133) = static Edge.Set.all.getter(v137);
    v138 = EdgeInsets.init(_all:)(16.0);
    v140 = v139;
    v142 = v141;
    v144 = v143;
    v145 = v191;
    sub_10004A160(v136, v191, &qword_1011A5AB0);
    v146 = v145 + *(int *)(v187 + 36);
    *(_BYTE *)v146 = v133;
    *(double *)(v146 + 8) = v138;
    *(_QWORD *)(v146 + 16) = v140;
    *(_QWORD *)(v146 + 24) = v142;
    *(_QWORD *)(v146 + 32) = v144;
    *(_BYTE *)(v146 + 40) = 0;
    sub_10004FF60(v136, &qword_1011A5AB0);
    LOBYTE(v133) = *(_BYTE *)(v211 + *(int *)(v210 + 20));
    sub_1001CCA04(v133);
    v148 = v147;
    sub_1001CCA04(v133);
    v150 = v149;
    v151 = sub_1001CD918(v133);
    LOBYTE(v136) = v152 & 1;
    v153 = static Alignment.center.getter(v151);
    v154 = v193;
    sub_100149F34(v148, 0, v150, 0, *(double *)&v151, v136, 0.0, 1, v193, 0.0, 1, 0.0, 1, v153, v155);
    v156 = sub_10004FF60(v145, &qword_1011A2D10);
    v157 = v200;
    static AccessibilityChildBehavior.combine.getter(v156);
    v158 = sub_10005610C(&qword_1011A5AF8, &qword_1011A2D18, (void (*)(void))sub_1001DAF54);
    v159 = v192;
    v160 = v207;
    View.accessibilityElement(children:)(v157, v207, v158);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v157, v202);
    sub_10004FF60(v154, &qword_1011A2D18);
    v161 = v195;
    v162 = v194;
    v163 = v159;
    v164 = v208;
    (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v194, v163, v208);
    v165 = v206;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v206, v162, v164);
    swift_storeEnumTagMultiPayload(v165, v205, 1);
    v166 = sub_10005610C(&qword_1011A5B20, &qword_1011A2D08, (void (*)(void))sub_1001DB038);
    v167 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v244 = v198;
    v245 = v203;
    v246 = v166;
    v247 = v167;
    v168 = swift_getOpaqueTypeConformance2(&v244, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v244 = v199;
    v245 = v168;
    v169 = swift_getOpaqueTypeConformance2(&v244, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v244 = v160;
    v245 = v158;
    v170 = swift_getOpaqueTypeConformance2(&v244, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    _ConditionalContent<>.init(storage:)(v165, v204, v164, v169, v170);
    sub_1000E450C(v214, v218, v219, v132);
    swift_release(v220);
    swift_release(v212);
    sub_1000E450C(v215, v216, v221, v222);
    swift_release(v217);
    swift_release(v223);
    sub_1000E450C(v226, v227, v228, v229);
    swift_release(v225);
    v171 = swift_release(KeyPath);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v161 + 8))(v162, v164, v171);
  }
  return result;
}

uint64_t sub_1001CEE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a5;
  v9 = sub_100007E8C(&qword_1011A5B50);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A5B58);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v60 - v16;
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v18);
  *((_QWORD *)v11 + 1) = 0x4030000000000000;
  v11[16] = 0;
  v19 = sub_100007E8C(&qword_1011A5B60);
  v20 = sub_1001CF1D4(a1, a2, &v11[*(int *)(v19 + 44)]);
  LOBYTE(a2) = static Edge.Set.bottom.getter(v20);
  v21 = EdgeInsets.init(_all:)(16.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011A5B50);
  v28 = &v14[*(int *)(v12 + 36)];
  *v28 = a2;
  *((double *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  sub_10004FF60((uint64_t)v11, &qword_1011A5B50);
  v66 = v17;
  sub_100065228((uint64_t)v14, (uint64_t)v17, &qword_1011A5B58);
  v29 = *a3;
  v30 = a3[1];
  v71 = a3[2];
  v72 = v30;
  v31 = a3[3];
  v73 = a3[4];
  v69 = a3[5];
  v70 = v31;
  v65 = *((_DWORD *)a3 + 12);
  v32 = *(_QWORD *)a4;
  v61 = *(_QWORD *)(a4 + 8);
  v33 = v61;
  v35 = *(_QWORD *)(a4 + 16);
  v34 = *(_QWORD *)(a4 + 24);
  v37 = *(_QWORD *)(a4 + 40);
  v63 = *(_QWORD *)(a4 + 32);
  v36 = v63;
  v64 = v29;
  LODWORD(a4) = *(_DWORD *)(a4 + 48);
  v67 = v14;
  sub_10004A160((uint64_t)v17, (uint64_t)v14, &qword_1011A5B58);
  v38 = (uint64_t)v14;
  v39 = v68;
  sub_10004A160(v38, v68, &qword_1011A5B58);
  v40 = sub_100007E8C(&qword_1011A5B68);
  v41 = v39 + *(int *)(v40 + 48);
  v42 = v39;
  v43 = v64;
  v45 = v71;
  v44 = v72;
  *(_QWORD *)v41 = v64;
  *(_QWORD *)(v41 + 8) = v44;
  v47 = v69;
  v46 = v70;
  *(_QWORD *)(v41 + 16) = v45;
  *(_QWORD *)(v41 + 24) = v46;
  v48 = v73;
  *(_QWORD *)(v41 + 32) = v73;
  *(_QWORD *)(v41 + 40) = v47;
  *(_DWORD *)(v41 + 48) = v65;
  v49 = v42 + *(int *)(v40 + 64);
  *(_QWORD *)v49 = v32;
  *(_QWORD *)(v49 + 8) = v33;
  v62 = v32;
  *(_QWORD *)(v49 + 16) = v35;
  *(_QWORD *)(v49 + 24) = v34;
  *(_QWORD *)(v49 + 32) = v36;
  *(_QWORD *)(v49 + 40) = v37;
  *(_DWORD *)(v49 + 48) = a4;
  v50 = v43;
  v51 = v43;
  v52 = v44;
  LOBYTE(v43) = v45;
  v53 = v46;
  sub_1000E4440(v50, v44, v45, v46);
  swift_retain(v47);
  swift_retain(v48);
  v54 = v32;
  v55 = v61;
  sub_1000E4440(v54, v61, v35, v34);
  swift_retain(v37);
  v56 = v63;
  swift_retain(v63);
  sub_1000E4440(v51, v52, v43, v53);
  swift_retain(v48);
  v57 = v69;
  swift_retain(v69);
  v58 = v62;
  sub_1000E4440(v62, v55, v35, v34);
  swift_retain(v56);
  swift_retain(v37);
  sub_10004FF60((uint64_t)v66, &qword_1011A5B58);
  sub_1000E450C(v58, v55, v35, v34);
  swift_release(v37);
  swift_release(v56);
  sub_1000E450C(v51, v72, v71, v70);
  swift_release(v57);
  swift_release(v73);
  return sub_10004FF60((uint64_t)v67, &qword_1011A5B58);
}

uint64_t sub_1001CF1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, __n128);
  __n128 v35;
  __n128 v36;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;

  v42 = a3;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v9 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - v15;
  type metadata accessor for ContextualPreview.InlinePreview(0);
  v17 = sub_1008237B8((uint64_t)v8);
  v18 = DynamicTypeSize.isAccessibilitySize.getter(v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v18 & 1) != 0)
    v19 = 78.0;
  else
    v19 = 92.0;
  v20 = type metadata accessor for ContextualPreview.Artwork(0);
  sub_1001CD6A8((uint64_t)v13, COERCE__INT64(v19 * *(double *)(a1 + *(int *)(v20 + 24))));
  v40 = v9;
  v21 = v16;
  v22 = v16;
  v23 = v41;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v13, v41);
  v24 = *(_QWORD *)a2;
  v25 = *(_QWORD *)(a2 + 8);
  v27 = *(_QWORD *)(a2 + 16);
  v26 = *(_QWORD *)(a2 + 24);
  v28 = *(_QWORD *)(a2 + 40);
  v38 = *(_QWORD *)(a2 + 32);
  v39 = *(_DWORD *)(a2 + 48);
  v29 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v30 = v43;
  v29(v43, v21, v23);
  v31 = v42;
  v29(v42, v30, v23);
  v32 = &v31[*(int *)(sub_100007E8C(&qword_1011A5B70) + 48)];
  *(_QWORD *)v32 = v24;
  *((_QWORD *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v26;
  v33 = v38;
  *((_QWORD *)v32 + 4) = v38;
  *((_QWORD *)v32 + 5) = v28;
  *((_DWORD *)v32 + 12) = v39;
  sub_1000E4440(v24, v25, v27, v26);
  swift_retain(v28);
  swift_retain(v33);
  sub_1000E4440(v24, v25, v27, v26);
  v34 = *(void (**)(char *, uint64_t, __n128))(v40 + 8);
  swift_retain(v33);
  v35 = swift_retain(v28);
  v34(v21, v23, v35);
  sub_1000E450C(v24, v25, v27, v26);
  swift_release(v28);
  v36 = swift_release(v33);
  return ((uint64_t (*)(char *, uint64_t, __n128))v34)(v43, v23, v36);
}

uint64_t sub_1001CF468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  double v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  unsigned __int8 v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  _OWORD *v70;
  uint64_t v71;
  char v72;
  char v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  _BYTE v84[12];
  int v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  __int128 v103;
  _OWORD v104[11];
  __int128 v105;
  _OWORD v106[2];
  uint64_t v107[2];
  char v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _BYTE v118[27];
  char v119;
  _BYTE v120[7];
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  _OWORD v126[10];
  int v127;
  _BYTE v128[171];
  char v129;
  unsigned __int8 v130;
  _BYTE v131[7];
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  _OWORD v141[3];

  v93 = a3;
  v94 = a4;
  v92 = a2;
  v98 = a5;
  v86 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  __chkstk_darwin(v86);
  v91 = (uint64_t *)&v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Image.Scale(0);
  v89 = *(_QWORD *)(v7 - 8);
  v90 = v7;
  __chkstk_darwin(v7);
  v88 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = sub_100007E8C(&qword_1011A5B78);
  v96 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v87 = &v84[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100007E8C(&qword_1011A5B80);
  __chkstk_darwin(v10);
  v97 = &v84[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v100 = &v84[-v13];
  v14 = type metadata accessor for DynamicTypeSize(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v84[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = (_BYTE *)sub_100007E8C((uint64_t *)&unk_1011C6960);
  v18 = *((_QWORD *)v101 - 1);
  __chkstk_darwin(v101);
  v20 = &v84[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v95 = sub_100007E8C(&qword_1011A5B88);
  __chkstk_darwin(v95);
  v102 = &v84[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v24 = &v84[-v23];
  __chkstk_darwin(v25);
  v27 = &v84[-v26];
  type metadata accessor for ContextualPreview.InlinePreview(0);
  v28 = sub_1008237B8((uint64_t)v17);
  v29 = DynamicTypeSize.isAccessibilitySize.getter(v28);
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
  if ((v29 & 1) != 0)
    v30 = 78.0;
  else
    v30 = 92.0;
  v31 = type metadata accessor for ContextualPreview.Artwork(0);
  sub_1001CD6A8((uint64_t)v20, COERCE__INT64(v30 * *(double *)(a1 + *(int *)(v31 + 24))));
  v33 = static Edge.Set.trailing.getter(v32);
  v34 = EdgeInsets.init(_all:)(16.0);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = (uint64_t)v101;
  (*(void (**)(_BYTE *, _BYTE *, _BYTE *))(v18 + 16))(v24, v20, v101);
  v42 = (double *)&v24[*(int *)(v95 + 36)];
  *(_BYTE *)v42 = v33;
  v42[1] = v34;
  *((_QWORD *)v42 + 2) = v36;
  *((_QWORD *)v42 + 3) = v38;
  *((_QWORD *)v42 + 4) = v40;
  *((_BYTE *)v42 + 40) = 0;
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v41);
  v101 = v27;
  v43 = sub_100065228((uint64_t)v24, (uint64_t)v27, &qword_1011A5B88);
  v95 = static HorizontalAlignment.leading.getter(v43);
  sub_1001CFC7C(v92, v93, v94, (uint64_t)v126);
  *(_OWORD *)&v128[71] = v126[4];
  *(_OWORD *)&v128[55] = v126[3];
  *(_OWORD *)&v128[119] = v126[7];
  *(_OWORD *)&v128[135] = v126[8];
  v129 = 0;
  *(_OWORD *)&v128[151] = v126[9];
  *(_DWORD *)&v128[167] = v127;
  *(_OWORD *)&v128[87] = v126[5];
  *(_OWORD *)&v128[103] = v126[6];
  *(_OWORD *)&v128[7] = v126[0];
  *(_OWORD *)&v128[23] = v126[1];
  *(_OWORD *)&v128[39] = v126[2];
  LODWORD(v94) = 0;
  v139 = *(_OWORD *)&v128[112];
  v140 = *(_OWORD *)&v128[128];
  v141[0] = *(_OWORD *)&v128[144];
  *(_OWORD *)((char *)v141 + 11) = *(_OWORD *)&v128[155];
  v136 = *(_OWORD *)&v128[64];
  v137 = *(_OWORD *)&v128[80];
  v138 = *(_OWORD *)&v128[96];
  v132 = *(_OWORD *)v128;
  v133 = *(_OWORD *)&v128[16];
  v134 = *(_OWORD *)&v128[32];
  v135 = *(_OWORD *)&v128[48];
  LODWORD(v93) = static Edge.Set.trailing.getter(*(double *)&v128[48]);
  v44 = EdgeInsets.init(_all:)(16.0);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v130 = 0;
  v51 = type metadata accessor for ContextualPreview.Data(0);
  v52 = 1;
  if (*(_BYTE *)(a1 + *(int *)(v51 + 36)) == 1)
  {
    v92 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
    v53 = static Font.body.getter(v92);
    KeyPath = swift_getKeyPath(&unk_100EAE018);
    v85 = static HierarchicalShapeStyle.secondary.getter(KeyPath);
    v56 = v88;
    v55 = v89;
    v57 = v90;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v89 + 104))(v88, enum case for Image.Scale.medium(_:), v90);
    v58 = swift_getKeyPath(&unk_100EAE048);
    v59 = v91;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v55 + 16))((_BYTE *)v91 + *(int *)(v86 + 28), v56, v57);
    *v59 = v58;
    v60 = (uint64_t)v87;
    sub_10004A160((uint64_t)v59, (uint64_t)&v87[*(int *)(v99 + 36)], (uint64_t *)&unk_1011C94A0);
    v61 = v92;
    *(_QWORD *)v60 = v92;
    *(_QWORD *)(v60 + 8) = KeyPath;
    *(_QWORD *)(v60 + 16) = v53;
    *(_DWORD *)(v60 + 24) = v85;
    swift_retain(v61);
    swift_retain(KeyPath);
    swift_retain(v53);
    sub_10004FF60((uint64_t)v59, (uint64_t *)&unk_1011C94A0);
    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v56, v57);
    swift_release(v53);
    swift_release(KeyPath);
    swift_release(v92);
    sub_100065228(v60, (uint64_t)v100, &qword_1011A5B78);
    v52 = 0;
  }
  v62 = v100;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v100, v52, 1, v99);
  v63 = v102;
  sub_10004A160((uint64_t)v101, (uint64_t)v102, &qword_1011A5B88);
  v64 = v130;
  LODWORD(v99) = v130;
  v65 = v97;
  sub_10004A160((uint64_t)v62, (uint64_t)v97, &qword_1011A5B80);
  v66 = (uint64_t)v63;
  v67 = v98;
  sub_10004A160(v66, v98, &qword_1011A5B88);
  v68 = (int *)sub_100007E8C(&qword_1011A5B90);
  v69 = v68[12];
  *(_OWORD *)((char *)&v104[7] + 1) = v139;
  *(_OWORD *)((char *)&v104[8] + 1) = v140;
  *(_OWORD *)((char *)&v104[9] + 1) = v141[0];
  *(_OWORD *)((char *)&v104[9] + 12) = *(_OWORD *)((char *)v141 + 11);
  *(_OWORD *)((char *)&v104[3] + 1) = v135;
  *(_OWORD *)((char *)&v104[4] + 1) = v136;
  v70 = (_OWORD *)(v67 + v69);
  v71 = v95;
  v103 = (unint64_t)v95;
  v72 = v94;
  LOBYTE(v104[0]) = v94;
  *(_OWORD *)((char *)&v104[5] + 1) = v137;
  *(_OWORD *)((char *)&v104[6] + 1) = v138;
  *(_OWORD *)((char *)&v104[1] + 1) = v133;
  *(_OWORD *)((char *)&v104[2] + 1) = v134;
  *(_OWORD *)((char *)v104 + 1) = v132;
  v73 = v93;
  LOBYTE(v105) = v93;
  *(_DWORD *)((char *)&v105 + 1) = *(_DWORD *)v131;
  DWORD1(v105) = *(_DWORD *)&v131[3];
  *((double *)&v105 + 1) = v44;
  *(_QWORD *)&v106[0] = v46;
  *((_QWORD *)&v106[0] + 1) = v48;
  *(_QWORD *)&v106[1] = v50;
  BYTE8(v106[1]) = v64;
  v74 = v104[8];
  v70[8] = v104[7];
  v70[9] = v74;
  v75 = v104[10];
  v70[10] = v104[9];
  v70[11] = v75;
  v76 = v104[4];
  v70[4] = v104[3];
  v70[5] = v76;
  v77 = v104[6];
  v70[6] = v104[5];
  v70[7] = v77;
  v78 = v104[0];
  *v70 = v103;
  v70[1] = v78;
  v79 = v104[2];
  v70[2] = v104[1];
  v70[3] = v79;
  v80 = *(_OWORD *)((char *)v106 + 9);
  v81 = v106[0];
  v70[12] = v105;
  v70[13] = v81;
  *(_OWORD *)((char *)v70 + 217) = v80;
  v82 = v67 + v68[16];
  *(_QWORD *)v82 = 0;
  *(_BYTE *)(v82 + 8) = 1;
  sub_10004A160((uint64_t)v65, v67 + v68[20], &qword_1011A5B80);
  sub_1001DB11C((uint64_t *)&v103);
  sub_10004FF60((uint64_t)v62, &qword_1011A5B80);
  sub_10004FF60((uint64_t)v101, &qword_1011A5B88);
  sub_10004FF60((uint64_t)v65, &qword_1011A5B80);
  v116 = v139;
  v117 = v140;
  *(_OWORD *)v118 = v141[0];
  *(_OWORD *)&v118[11] = *(_OWORD *)((char *)v141 + 11);
  v112 = v135;
  v113 = v136;
  v114 = v137;
  v115 = v138;
  v109 = v132;
  v110 = v133;
  v107[0] = v71;
  v107[1] = 0;
  v108 = v72;
  v111 = v134;
  v119 = v73;
  *(_DWORD *)v120 = *(_DWORD *)v131;
  *(_DWORD *)&v120[3] = *(_DWORD *)&v131[3];
  v121 = v44;
  v122 = v46;
  v123 = v48;
  v124 = v50;
  v125 = v99;
  sub_1001DB1F8(v107);
  return sub_10004FF60((uint64_t)v102, &qword_1011A5B88);
}

double sub_1001CFC7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_DWORD *)(a1 + 48);
  v11 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v24 = *(_QWORD *)(a2 + 32);
  v22 = *(_QWORD *)(a2 + 24);
  v23 = *(_QWORD *)(a2 + 40);
  v13 = *(_DWORD *)(a2 + 48);
  v14 = *(_QWORD *)a3;
  v15 = *(_QWORD *)(a3 + 8);
  v16 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 40);
  v21 = *(_QWORD *)(a3 + 32);
  v18 = *(_DWORD *)(a3 + 48);
  v28 = *(_QWORD *)a1;
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_QWORD *)(a4 + 8) = v4;
  v26 = v5;
  v27 = v4;
  *(_QWORD *)(a4 + 16) = v6;
  *(_QWORD *)(a4 + 24) = v5;
  v25 = v6;
  *(_QWORD *)(a4 + 32) = v7;
  *(_QWORD *)(a4 + 40) = v8;
  *(_DWORD *)(a4 + 48) = v9;
  *(_QWORD *)(a4 + 56) = v11;
  *(_QWORD *)(a4 + 64) = v10;
  *(_QWORD *)(a4 + 72) = v12;
  *(_QWORD *)(a4 + 80) = v22;
  *(_QWORD *)(a4 + 88) = v24;
  *(_QWORD *)(a4 + 96) = v23;
  *(_DWORD *)(a4 + 104) = v13;
  *(_QWORD *)(a4 + 112) = v14;
  *(_QWORD *)(a4 + 120) = v15;
  *(_QWORD *)(a4 + 128) = v16;
  *(_QWORD *)(a4 + 136) = v20;
  *(_QWORD *)(a4 + 144) = v21;
  *(_QWORD *)(a4 + 152) = v17;
  *(_DWORD *)(a4 + 160) = v18;
  sub_1000E4440(v28, v4, v6, v5);
  swift_retain(v8);
  swift_retain(v7);
  sub_1000E4440(v11, v10, v12, v22);
  swift_retain(v23);
  swift_retain(v24);
  sub_1000E4440(v14, v15, v16, v20);
  swift_retain(v17);
  swift_retain(v21);
  sub_1000E4440(v28, v27, v25, v26);
  swift_retain(v7);
  swift_retain(v8);
  sub_1000E4440(v11, v10, v12, v22);
  swift_retain(v24);
  swift_retain(v23);
  sub_1000E4440(v14, v15, v16, v20);
  swift_retain(v21);
  swift_retain(v17);
  sub_1000E450C(v14, v15, v16, v20);
  swift_release(v17);
  swift_release(v21);
  sub_1000E450C(v11, v10, v12, v22);
  swift_release(v23);
  swift_release(v24);
  sub_1000E450C(v28, v27, v25, v26);
  swift_release(v8);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_1001CFEA4()
{
  qword_1011A5680 = 0x4075700000000000;
}

void sub_1001CFEB8()
{
  qword_1011A5688 = 0x4082C00000000000;
}

void sub_1001CFECC()
{
  qword_1011A5690 = 0x4038000000000000;
}

void sub_1001CFEE0()
{
  qword_10124CAF8 = 0x4020000000000000;
}

void sub_1001CFEF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  v2 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextualPreview(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14 - v9;
  sub_10005B704(a1, (uint64_t)&v14 - v9, type metadata accessor for ContextualPreview.Data);
  sub_10005B704((uint64_t)v10, (uint64_t)v7, type metadata accessor for ContextualPreview);
  v11 = (id)UIHostingController.init(rootView:)(v7);
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v4);
  v12 = objc_msgSend(v11, "view");

  if (v12)
  {
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v12, "setBackgroundColor:", v13);

    sub_10005B748(a1, type metadata accessor for ContextualPreview.Data);
    sub_10005B748((uint64_t)v10, type metadata accessor for ContextualPreview);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001D007C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/ContextualPreview.swift", 29, 2, 277, 0);
  __break(1u);
}

void sub_1001D00D4()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.ViewController", 20, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_1001D0100()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.ViewController", 20, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

id sub_1001D012C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextualPreview.ViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

int *sub_1001D0160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *result;
  uint64_t *v42;
  uint64_t *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;

  v46 = a1;
  v1 = sub_100007E8C(&qword_1011A58C8);
  v2 = __chkstk_darwin(v1);
  v45 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Curator.Kind(0, v2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Curator(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v20, (uint64_t)&protocol witness table for Curator, v16);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 7, 10, v21);
  Curator.kind.getter(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Curator.Kind.external(_:), v4);
  v23 = static Curator.Kind.== infix(_:_:)(v10, v7);
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  v24(v10, v4);
  if ((v23 & 1) != 0)
  {
    v25 = 0;
    v26 = 0;
    v27 = 1;
  }
  else
  {
    v28 = Corner.large.unsafeMutableAddressor();
    v25 = *v28;
    v26 = v28[1];
    v27 = *((_BYTE *)v28 + 16);
  }
  sub_100065228((uint64_t)v16, (uint64_t)v19, (uint64_t *)&unk_1011A3E10);
  v29 = sub_10005B6C0((uint64_t)v13, (uint64_t)&v19[v17[5]], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)&v19[v17[6]] = 0x3FF0000000000000;
  v30 = &v19[v17[7]];
  *(_QWORD *)v30 = v25;
  *((_QWORD *)v30 + 1) = v26;
  v30[16] = v27;
  v31 = Curator.name.getter(v29);
  v33 = v32;
  v34 = (uint64_t)v45;
  Curator.editorialNotes.getter();
  v35 = type metadata accessor for EditorialNotes(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
  {
    sub_10004FF60(v34, &qword_1011A58C8);
    v37 = 0;
    v38 = 0;
  }
  else
  {
    v37 = EditorialNotes.short.getter();
    v38 = v39;
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
  }
  v40 = v46;
  sub_10005B6C0((uint64_t)v19, v46, type metadata accessor for ContextualPreview.Artwork);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v42 = (uint64_t *)(v40 + result[5]);
  *v42 = v31;
  v42[1] = v33;
  v43 = (uint64_t *)(v40 + result[6]);
  *v43 = v37;
  v43[1] = v38;
  v44 = (_QWORD *)(v40 + result[7]);
  *v44 = 0;
  v44[1] = 0;
  *(_BYTE *)(v40 + result[8]) = 1;
  *(_BYTE *)(v40 + result[9]) = 0;
  return result;
}

int *sub_1001D04A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  __int128 v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *result;
  uint64_t *v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;

  v2 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EditorialItem(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v8, (uint64_t)&protocol witness table for EditorialItem, v7);
  v9 = &v7[v5[5]];
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 10, v10);
  v11 = Corner.large.unsafeMutableAddressor();
  v12 = *((_BYTE *)v11 + 16);
  v13 = *(_OWORD *)v11;
  *(_QWORD *)&v7[v5[6]] = 0x3FF0000000000000;
  v14 = &v7[v5[7]];
  *(_OWORD *)v14 = v13;
  v14[16] = v12;
  v15 = EditorialItem.name.getter();
  v17 = v16;
  EditorialItem.editorialNotes.getter();
  v18 = type metadata accessor for EditorialNotes(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18) == 1)
  {
    sub_10004FF60((uint64_t)v4, &qword_1011A58C8);
    v20 = 0;
    v21 = 0;
  }
  else
  {
    v20 = EditorialNotes.short.getter();
    v21 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  sub_10005B6C0((uint64_t)v7, a1, type metadata accessor for ContextualPreview.Artwork);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v24 = (uint64_t *)(a1 + result[5]);
  *v24 = v15;
  v24[1] = v17;
  v25 = (uint64_t *)(a1 + result[6]);
  *v25 = v20;
  v25[1] = v21;
  v26 = (_QWORD *)(a1 + result[7]);
  *v26 = 0;
  v26[1] = 0;
  *(_BYTE *)(a1 + result[8]) = 1;
  *(_BYTE *)(a1 + result[9]) = 0;
  return result;
}

int *sub_1001D0698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *result;
  uint64_t *v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;

  v45 = a1;
  v1 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v1);
  v44 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  v10 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - v14;
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  Genre.logoArtwork.getter(v20);
  sub_10004A160((uint64_t)v15, (uint64_t)v12, &qword_1011A1440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    v23 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1, 1, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v12, v3);
    v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    v25 = (uint64_t)v44;
    static Artwork.CropStyle.boundedBox.getter(v24);
    v26 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
    ArtworkImage.ViewModel.init(artwork:cropStyle:)((uint64_t)v6, v25, (uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    v27 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v18, 0, 1, v27);
  }
  sub_10004FF60((uint64_t)v15, &qword_1011A1440);
  v28 = &v22[v19[5]];
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 9, 10, v29);
  v30 = Corner.large.unsafeMutableAddressor();
  v31 = *v30;
  v32 = v30[1];
  v33 = *((_BYTE *)v30 + 16);
  sub_100065228((uint64_t)v18, (uint64_t)v22, (uint64_t *)&unk_1011A3E10);
  *(_QWORD *)&v22[v19[6]] = 0x3FF0000000000000;
  v34 = &v22[v19[7]];
  *(_QWORD *)v34 = v31;
  *((_QWORD *)v34 + 1) = v32;
  v34[16] = v33;
  v36 = Genre.name.getter(v35);
  v38 = v37;
  v39 = v45;
  sub_10005B6C0((uint64_t)v22, v45, type metadata accessor for ContextualPreview.Artwork);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v41 = (uint64_t *)(v39 + result[5]);
  *v41 = v36;
  v41[1] = v38;
  v42 = (_QWORD *)(v39 + result[6]);
  *v42 = 0;
  v42[1] = 0;
  v43 = (_QWORD *)(v39 + result[7]);
  *v43 = 0;
  v43[1] = 0;
  *(_BYTE *)(v39 + result[8]) = 1;
  *(_BYTE *)(v39 + result[9]) = 0;
  return result;
}

int *sub_1001D0A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  int *result;
  uint64_t *v46;
  uint64_t *v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  v56 = a1;
  v3 = type metadata accessor for RadioShow(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - v7;
  v9 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v9);
  v53 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - v12;
  v14 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v3, (uint64_t)&protocol witness table for RadioShow, v16);
  v17 = &v16[v14[5]];
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 8, 10, v18);
  v19 = Corner.large.unsafeMutableAddressor();
  v20 = *((_BYTE *)v19 + 16);
  v21 = *(_OWORD *)v19;
  *(_QWORD *)&v16[v14[6]] = 0x3FF0000000000000;
  v22 = &v16[v14[7]];
  *(_OWORD *)v22 = v21;
  v22[16] = v20;
  v23 = RadioShow.name.getter();
  v54 = v24;
  v55 = v23;
  ((void (*)(void))RadioShow.editorialNotes.getter)();
  v25 = type metadata accessor for EditorialNotes(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v13, 1, v25) == 1)
  {
    sub_10004FF60((uint64_t)v13, &qword_1011A58C8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v29 = v28(v8, v2, v3);
    goto LABEL_6;
  }
  v51 = EditorialNotes.short.getter();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v25);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v50 = v8;
  v29 = v28(v8, v2, v3);
  if (!v31)
  {
    v8 = v50;
LABEL_6:
    v37 = (uint64_t)v53;
    RadioShow.editorialNotes.getter(v29);
    v38 = v27((char *)v37, 1, v25);
    v39 = v4;
    if (v38 == 1)
    {
      sub_10004FF60(v37, &qword_1011A58C8);
      v40 = v52;
      v41 = v28(v52, (uint64_t)v8, v3);
      v34 = v55;
      v33 = v56;
      v36 = v54;
    }
    else
    {
      v51 = EditorialNotes.standard.getter();
      v31 = v42;
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v37, v25);
      v40 = v52;
      v41 = v28(v52, (uint64_t)v8, v3);
      v34 = v55;
      v33 = v56;
      v36 = v54;
      if (v31)
      {
        v35 = v51;
LABEL_11:
        v44 = *(void (**)(char *, uint64_t))(v39 + 8);
        v44(v40, v3);
        v44(v8, v3);
        goto LABEL_12;
      }
    }
    v35 = RadioShow.hostName.getter(v41);
    v31 = v43;
    goto LABEL_11;
  }
  v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v34 = v55;
  v33 = v56;
  v35 = v51;
  v36 = v54;
  v32(v50, v3);
LABEL_12:
  sub_10005B6C0((uint64_t)v16, v33, type metadata accessor for ContextualPreview.Artwork);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v46 = (uint64_t *)(v33 + result[5]);
  *v46 = v34;
  v46[1] = v36;
  v47 = (uint64_t *)(v33 + result[6]);
  *v47 = v35;
  v47[1] = v31;
  v48 = (_QWORD *)(v33 + result[7]);
  *v48 = 0;
  v48[1] = 0;
  *(_BYTE *)(v33 + result[8]) = 1;
  *(_BYTE *)(v33 + result[9]) = 0;
  return result;
}

int *sub_1001D0D88@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *result;
  uint64_t *v22;
  uint64_t *v23;
  char *v24;
  _BYTE v25[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for RecordLabel(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v8, (uint64_t)&protocol witness table for RecordLabel, a1);
  v9 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v10 = &a1[v9[5]];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 10, 10, v11);
  *(_QWORD *)&a1[v9[6]] = 0x3FF0000000000000;
  v13 = &a1[v9[7]];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v14 = RecordLabel.name.getter(v12);
  v16 = v15;
  v17 = String.LocalizationValue.init(stringLiteral:)(0x4C2064726F636552, 0xEC0000006C656261);
  static Locale.current.getter(v17);
  v18 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Item Type", 9, 2);
  v20 = v19;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v22 = (uint64_t *)&a1[result[5]];
  *v22 = v14;
  v22[1] = v16;
  v23 = (uint64_t *)&a1[result[6]];
  *v23 = v18;
  v23[1] = v20;
  v24 = &a1[result[7]];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  a1[result[8]] = 1;
  a1[result[9]] = 0;
  return result;
}

int *sub_1001D0F3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *result;
  uint64_t *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  char v110[72];

  v2 = v1;
  v106 = a1;
  v93 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v91 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v90 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for Date.FormatStyle(0);
  v89 = *(_QWORD *)(v94 - 8);
  v4 = __chkstk_darwin(v94);
  v88 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v92 = (char *)&v87 - v6;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v7);
  v98 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v99 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v100 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for NumberFormatStyleConfiguration.Grouping(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A3E28);
  v95 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v87 - v20;
  v22 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v9, (uint64_t)&protocol witness table for Song, v24);
  v25 = &v24[v22[5]];
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 10, v26);
  v27 = Corner.large.unsafeMutableAddressor();
  v28 = *((_BYTE *)v27 + 16);
  v29 = *(_OWORD *)v27;
  *(_QWORD *)&v24[v22[6]] = 0x3FF0000000000000;
  v30 = v22[7];
  v101 = v24;
  v31 = &v24[v30];
  *(_OWORD *)v31 = v29;
  v31[16] = v28;
  v32 = Song.title.getter(v27);
  v104 = v33;
  v105 = v32;
  v34 = Song.artistName.getter(v32);
  v102 = v35;
  v103 = v34;
  v36 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v36, v110);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = Song.albumTitle.getter(inited);
  *(_QWORD *)(inited + 40) = v38;
  v39 = Song.releaseYear.getter();
  if ((v41 & 1) != 0)
  {
    v48 = v99;
    v49 = v100;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 16))(v100, v2, v9);
  }
  else
  {
    v107 = v39;
    static Locale.autoupdatingCurrent.getter(v40);
    v42 = sub_1001AA49C();
    v43 = IntegerFormatStyle.init(locale:)(v15);
    static NumberFormatStyleConfiguration.Grouping.never.getter(v43);
    IntegerFormatStyle.grouping(_:)(v12, v16);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v12, v97);
    v44 = *(void (**)(char *, uint64_t))(v95 + 8);
    v44(v19, v16);
    v45 = sub_100049F28(&qword_1011A3E38, &qword_1011A3E28, (uint64_t)&protocol conformance descriptor for IntegerFormatStyle<A>);
    BinaryInteger.formatted<A>(_:)(&v108, v21, &type metadata for Int, v16, v42, v45);
    v44(v21, v16);
    v47 = v108;
    v46 = v109;
    v48 = v99;
    v49 = v100;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 16))(v100, v2, v9);
    if (v46)
    {
      *(_QWORD *)(inited + 48) = v47;
      *(_QWORD *)(inited + 56) = v46;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v9);
      goto LABEL_9;
    }
  }
  v51 = (uint64_t)v98;
  Song.releaseDate.getter(v50);
  v52 = type metadata accessor for Date(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52);
  if ((_DWORD)v54 == 1)
  {
    sub_10004FF60(v51, (uint64_t *)&unk_1011A30A0);
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    goto LABEL_7;
  }
  v55 = v88;
  v56 = static FormatStyle<>.dateTime.getter(v54);
  v100 = (char *)v9;
  v57 = v51;
  v58 = v90;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v56);
  v59 = v92;
  Date.FormatStyle.year(_:)(v58);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v58, v93);
  v60 = *(void (**)(char *, uint64_t))(v89 + 8);
  v61 = v94;
  v60(v55, v94);
  v62 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v108, v59, v61, v62);
  v60(v59, v61);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v57, v52);
  v63 = v109;
  *(_QWORD *)(inited + 48) = v108;
  *(_QWORD *)(inited + 56) = v63;
  (*(void (**)(char *, char *))(v48 + 8))(v49, v100);
LABEL_9:
  v64 = *(_QWORD *)(inited + 40);
  if (!v64)
  {
    v66 = _swiftEmptyArrayStorage;
    v70 = *(_QWORD *)(inited + 56);
    if (!v70)
      goto LABEL_20;
    goto LABEL_15;
  }
  v65 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain();
  v66 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v68 = v66[2];
  v67 = v66[3];
  if (v68 >= v67 >> 1)
    v66 = sub_100431480((_QWORD *)(v67 > 1), v68 + 1, 1, v66);
  v66[2] = v68 + 1;
  v69 = &v66[2 * v68];
  v69[4] = v65;
  v69[5] = v64;
  v70 = *(_QWORD *)(inited + 56);
  if (v70)
  {
LABEL_15:
    v71 = *(_QWORD *)(inited + 48);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0)
      v66 = sub_100431480(0, v66[2] + 1, 1, v66);
    v73 = v66[2];
    v72 = v66[3];
    if (v73 >= v72 >> 1)
      v66 = sub_100431480((_QWORD *)(v72 > 1), v73 + 1, 1, v66);
    v66[2] = v73 + 1;
    v74 = &v66[2 * v73];
    v74[4] = v71;
    v74[5] = v70;
  }
LABEL_20:
  swift_bridgeObjectRelease(inited);
  v108 = v66;
  v75 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v76 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v77 = BidirectionalCollection<>.joined(separator:)(548913696, 0xA400000000000000, v75, v76);
  v79 = v78;
  swift_bridgeObjectRelease(v66);
  v80 = v106;
  sub_10005B6C0((uint64_t)v101, v106, type metadata accessor for ContextualPreview.Artwork);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v82 = (uint64_t *)(v80 + result[5]);
  v83 = v104;
  *v82 = v105;
  v82[1] = v83;
  v84 = (uint64_t *)(v80 + result[6]);
  v85 = v102;
  *v84 = v103;
  v84[1] = v85;
  v86 = (uint64_t *)(v80 + result[7]);
  *v86 = v77;
  v86[1] = v79;
  *(_BYTE *)(v80 + result[8]) = 0;
  *(_BYTE *)(v80 + result[9]) = 0;
  return result;
}

int *sub_1001D1688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *result;
  uint64_t *v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v3 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v3);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Station(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v5, (uint64_t)&protocol witness table for Station, v11);
  v12 = &v11[v9[5]];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 8, 10, v13);
  v14 = Corner.large.unsafeMutableAddressor();
  v15 = *((_BYTE *)v14 + 16);
  v16 = *(_OWORD *)v14;
  *(_QWORD *)&v11[v9[6]] = 0x3FF0000000000000;
  v17 = &v11[v9[7]];
  *(_OWORD *)v17 = v16;
  v17[16] = v15;
  v18 = Station.name.getter();
  v20 = v19;
  v21 = Station.stationProviderName.getter();
  v23 = v22;
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v1, v5);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v35 = v20;
    v36 = v18;
    v25 = (uint64_t)v37;
    Station.editorialNotes.getter(v24);
    v26 = type metadata accessor for EditorialNotes(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_10004FF60(v25, &qword_1011A58C8);
      v21 = 0;
      v23 = 0;
    }
    else
    {
      v28 = v25;
      v21 = EditorialNotes.standard.getter();
      v23 = v29;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
    }
    v20 = v35;
    v18 = v36;
  }
  sub_10005B6C0((uint64_t)v11, a1, type metadata accessor for ContextualPreview.Artwork);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v31 = (uint64_t *)(a1 + result[5]);
  *v31 = v18;
  v31[1] = v20;
  v32 = (uint64_t *)(a1 + result[6]);
  *v32 = v21;
  v32[1] = v23;
  v33 = (_QWORD *)(a1 + result[7]);
  *v33 = 0;
  v33[1] = 0;
  *(_BYTE *)(a1 + result[8]) = 1;
  *(_BYTE *)(a1 + result[9]) = 0;
  return result;
}

int *sub_1001D191C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  unsigned __int8 v13;
  __n128 v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *result;
  uint64_t *v24;
  uint64_t *v25;
  char *v26;
  _BYTE v27[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TVSeason(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v8, (uint64_t)&protocol witness table for TVSeason, a1);
  v9 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v10 = &a1[v9[5]];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 5, 10, v11);
  v12 = Corner.large.unsafeMutableAddressor();
  v13 = *((_BYTE *)v12 + 16);
  v14 = *(__n128 *)v12;
  *(_QWORD *)&a1[v9[6]] = 0x3FF0000000000000;
  v15 = (__n128 *)&a1[v9[7]];
  *v15 = v14;
  v15[1].n128_u8[0] = v13;
  v16 = TVSeason.showName.getter(v14);
  v18 = v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0x776F6853205654, 0xE700000000000000);
  static Locale.current.getter(v19);
  v20 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Item Type", 9, 2);
  v22 = v21;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v24 = (uint64_t *)&a1[result[5]];
  *v24 = v16;
  v24[1] = v18;
  v25 = (uint64_t *)&a1[result[6]];
  *v25 = v20;
  v25[1] = v22;
  v26 = &a1[result[7]];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  a1[result[8]] = 1;
  a1[result[9]] = 0;
  return result;
}

int *sub_1001D1AD4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  __int128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *result;
  uint64_t *v30;
  uint64_t *v31;
  char *v32;
  _BYTE v33[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v33[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TVShow(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v8, (uint64_t)&protocol witness table for TVShow, a1);
  v9 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v10 = &a1[v9[5]];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 5, 10, v11);
  v12 = Corner.large.unsafeMutableAddressor();
  v13 = *((_BYTE *)v12 + 16);
  v14 = *(_OWORD *)v12;
  *(_QWORD *)&a1[v9[6]] = 0x3FF0000000000000;
  v15 = &a1[v9[7]];
  *(_OWORD *)v15 = v14;
  v15[16] = v13;
  v16 = TVShow.name.getter(v12);
  v18 = v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0x6F73697045206425, 0xED00002973286564);
  static Locale.current.getter(v19);
  v20 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Numbers of episodes", 19, 2);
  v22 = v21;
  v23 = sub_100007E8C(&qword_1011E7E30);
  v24 = swift_allocObject(v23, 72, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100EA7AA0;
  v25 = TVShow.episodeCount.getter();
  *(_QWORD *)(v24 + 56) = &type metadata for Int;
  *(_QWORD *)(v24 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v24 + 32) = v25;
  v26 = static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
  v28 = v27;
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v30 = (uint64_t *)&a1[result[5]];
  *v30 = v16;
  v30[1] = v18;
  v31 = (uint64_t *)&a1[result[6]];
  *v31 = v26;
  v31[1] = v28;
  v32 = &a1[result[7]];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  a1[result[8]] = 1;
  a1[result[9]] = 0;
  return result;
}

int *sub_1001D1D0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  char v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *result;
  uint64_t *v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;

  v2 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v37 - v9;
  v11 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UploadedVideo(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v14, (uint64_t)&protocol witness table for UploadedVideo, v10);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 5, 10, v15);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v14, (uint64_t)&protocol witness table for UploadedVideo, v8);
  v16 = type metadata accessor for ArtworkImage.ViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v8, 1, v16) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3E10);
    v17 = 1.77777778;
  }
  else
  {
    v18 = COERCE_DOUBLE(ArtworkImage.ViewModel.calculatedAspectRatio.getter());
    v20 = v19;
    sub_10005B748((uint64_t)v8, type metadata accessor for ArtworkImage.ViewModel);
    if ((v20 & 1) != 0)
      v17 = 1.77777778;
    else
      v17 = v18;
  }
  v21 = Corner.large.unsafeMutableAddressor();
  v22 = *v21;
  v23 = v21[1];
  v24 = *((_BYTE *)v21 + 16);
  sub_100065228((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1011A3E10);
  sub_10005B6C0((uint64_t)v4, (uint64_t)&v13[v11[5]], type metadata accessor for ArtworkImage.Placeholder);
  *(double *)&v13[v11[6]] = v17;
  v25 = &v13[v11[7]];
  *(_QWORD *)v25 = v22;
  *((_QWORD *)v25 + 1) = v23;
  v25[16] = v24;
  v27 = UploadedVideo.title.getter(v26);
  v29 = v28;
  v30 = UploadedVideo.artistName.getter(v27);
  v32 = v31;
  sub_10005B6C0((uint64_t)v13, a1, type metadata accessor for ContextualPreview.Artwork);
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v34 = (uint64_t *)(a1 + result[5]);
  *v34 = v27;
  v34[1] = v29;
  v35 = (uint64_t *)(a1 + result[6]);
  *v35 = v30;
  v35[1] = v32;
  v36 = (_QWORD *)(a1 + result[7]);
  *v36 = 0;
  v36[1] = 0;
  *(_BYTE *)(a1 + result[8]) = 1;
  *(_BYTE *)(a1 + result[9]) = 0;
  return result;
}

int *sub_1001D1FAC@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unsigned __int8 v6;
  __n128 v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *result;
  uint64_t *v16;
  uint64_t *v17;
  _QWORD *v18;

  Playlist.artworkViewModel.getter(a1);
  v2 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v3 = a1 + v2[5];
  Playlist.variant.getter(v2);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 10, v4);
  v5 = Corner.large.unsafeMutableAddressor();
  v6 = *((_BYTE *)v5 + 16);
  v7 = *(__n128 *)v5;
  *(_QWORD *)(a1 + v2[6]) = 0x3FF0000000000000;
  v8 = (__n128 *)(a1 + v2[7]);
  *v8 = v7;
  v8[1].n128_u8[0] = v6;
  v9 = Playlist.name.getter(v7);
  v11 = v10;
  v12 = Playlist.curatorName.getter(v9);
  v14 = v13;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v16 = (uint64_t *)(a1 + result[5]);
  *v16 = v9;
  v16[1] = v11;
  v17 = (uint64_t *)(a1 + result[6]);
  *v17 = v12;
  v17[1] = v14;
  v18 = (_QWORD *)(a1 + result[7]);
  *v18 = 0;
  v18[1] = 0;
  *(_BYTE *)(a1 + result[8]) = 1;
  *(_BYTE *)(a1 + result[9]) = 0;
  return result;
}

int *sub_1001D20A0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  int *v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  __int128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *result;
  uint64_t *v17;
  uint64_t *v18;
  char *v19;

  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(a1, (uint64_t)&protocol witness table for Album, a2);
  v3 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v4 = &a2[v3[5]];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 10, v5);
  v6 = Corner.large.unsafeMutableAddressor();
  v7 = *((_BYTE *)v6 + 16);
  v8 = *(_OWORD *)v6;
  *(_QWORD *)&a2[v3[6]] = 0x3FF0000000000000;
  v9 = &a2[v3[7]];
  *(_OWORD *)v9 = v8;
  v9[16] = v7;
  v10 = Album.title.getter(v6);
  v12 = v11;
  v13 = Album.artistName.getter(v10);
  v15 = v14;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v17 = (uint64_t *)&a2[result[5]];
  *v17 = v10;
  v17[1] = v12;
  v18 = (uint64_t *)&a2[result[6]];
  *v18 = v13;
  v18[1] = v15;
  v19 = &a2[result[7]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  a2[result[8]] = 1;
  a2[result[9]] = 0;
  return result;
}

uint64_t sub_1001D2198@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int *v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  unsigned __int8 v31;
  __n128 v32;
  __n128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t *v38;
  char *v39;
  char *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int *v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  unsigned __int8 v49;
  __n128 v50;
  __n128 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t);
  uint64_t v70;
  int *v71;
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  char v75;
  __int128 v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t *v85;
  uint64_t *v86;
  char *v87;
  int *v88;
  char *v89;
  uint64_t v90;
  uint64_t *v91;
  char v92;
  __int128 v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t *v102;
  char *v103;
  uint64_t v104;
  Swift::String v105;
  void *object;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;

  v2 = v1;
  v4 = type metadata accessor for UploadedVideo(0);
  v110 = *(_QWORD *)(v4 - 8);
  v111 = v4;
  __chkstk_darwin(v4);
  v109 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UploadedAudio(0);
  v113 = *(_QWORD *)(v6 - 8);
  v114 = v6;
  __chkstk_darwin(v6);
  v112 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TVEpisode(0);
  v116 = *(_QWORD *)(v8 - 8);
  v117 = v8;
  __chkstk_darwin(v8);
  v115 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v119 = *(_QWORD *)(v10 - 8);
  v120 = v10;
  __chkstk_darwin(v10);
  v118 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v121 = *(_QWORD *)(v12 - 8);
  v122 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MusicMovie(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v107 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v107 - v23;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v108 = v2;
  v25((char *)&v107 - v23, v2, v19);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v24, v19);
  if (v26 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v24, v15);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v15, (uint64_t)&protocol witness table for MusicMovie, a1);
    v27 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v28 = &a1[v27[5]];
    v29 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 5, 10, v29);
    v30 = Corner.large.unsafeMutableAddressor();
    v31 = *((_BYTE *)v30 + 16);
    v32 = *(__n128 *)v30;
    *(_QWORD *)&a1[v27[6]] = 0x3FE5555555555555;
    v33 = (__n128 *)&a1[v27[7]];
    *v33 = v32;
    v33[1].n128_u8[0] = v31;
    v34 = MusicMovie.title.getter(v32);
    v36 = v35;
    v37 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v38 = (uint64_t *)&a1[v37[5]];
    *v38 = v34;
    v38[1] = v36;
    v39 = &a1[v37[6]];
    *(_QWORD *)v39 = 0;
    *((_QWORD *)v39 + 1) = 0;
    v40 = &a1[v37[7]];
    *(_QWORD *)v40 = 0;
    *((_QWORD *)v40 + 1) = 0;
    a1[v37[8]] = 1;
    a1[v37[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  if (v26 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
    v43 = v121;
    v42 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v14, v24, v122);
    v44 = a1;
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v42, (uint64_t)&protocol witness table for MusicVideo, a1);
    v45 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v46 = &a1[v45[5]];
    v47 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 4, 10, v47);
    v48 = Corner.large.unsafeMutableAddressor();
    v49 = *((_BYTE *)v48 + 16);
    v50 = *(__n128 *)v48;
    *(_QWORD *)&a1[v45[6]] = 0x3FFC71C71C71C71CLL;
    v51 = (__n128 *)&a1[v45[7]];
    *v51 = v50;
    v51[1].n128_u8[0] = v49;
    v52 = MusicVideo.title.getter(v50);
    v54 = v53;
    v55 = MusicVideo.artistName.getter(v52);
    v57 = v56;
    v58 = MusicVideo.albumTitle.getter(v55);
    v60 = v59;
    v61 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v62 = (uint64_t *)&v44[v61[5]];
    *v62 = v52;
    v62[1] = v54;
    v63 = (uint64_t *)&v44[v61[6]];
    *v63 = v55;
    v63[1] = v57;
    v64 = (uint64_t *)&v44[v61[7]];
    *v64 = v58;
    v64[1] = v60;
    v44[v61[8]] = 1;
    v44[v61[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v14, v42);
  }
  v65 = a1;
  if (v26 != enum case for Playlist.Entry.InternalItem.song(_:))
  {
    if (v26 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
      v66 = v115;
      v70 = v116;
      v68 = v117;
      (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v24, v117);
      TVEpisode.artworkViewModel.getter(v65);
      v71 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
      v72 = &v65[v71[5]];
      v73 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v72, 5, 10, v73);
      v74 = Corner.large.unsafeMutableAddressor();
      v75 = *((_BYTE *)v74 + 16);
      v76 = *(_OWORD *)v74;
      *(_QWORD *)&v65[v71[6]] = 0x3FFC71C71C71C71CLL;
      v77 = &v65[v71[7]];
      *(_OWORD *)v77 = v76;
      v77[16] = v75;
      v78 = TVEpisode.title.getter();
      v80 = v79;
      v81 = TVEpisode.showName.getter();
      v83 = v82;
      v84 = (int *)type metadata accessor for ContextualPreview.Data(0);
      v85 = (uint64_t *)&v65[v84[5]];
      *v85 = v78;
      v85[1] = v80;
      v86 = (uint64_t *)&v65[v84[6]];
      *v86 = v81;
      v86[1] = v83;
      v87 = &v65[v84[7]];
      *(_QWORD *)v87 = 0;
      *((_QWORD *)v87 + 1) = 0;
      v65[v84[8]] = 1;
    }
    else
    {
      if (v26 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
      {
        if (v26 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
        {
          v25(v107, v108, v19);
          v123 = 0;
          v124 = 0xE000000000000000;
          _StringGuts.grow(_:)(42);
          swift_bridgeObjectRelease(v124);
          v123 = 0xD000000000000028;
          v124 = 0x8000000100E30D50;
          v104 = sub_100048748(&qword_1011A58D0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
          v105._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v19, v104);
          object = v105._object;
          String.append(_:)(v105);
          swift_bridgeObjectRelease(object);
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v123, v124, "Music/ContextualPreview.swift", 29, 2, 396, 0);
          __break(1u);
          return result;
        }
        (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
        v66 = v109;
        v67 = v110;
        v68 = v111;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v24, v111);
        sub_1001D1D0C((uint64_t)a1);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
      v66 = v112;
      v70 = v113;
      v68 = v114;
      (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v24, v114);
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v68, (uint64_t)&protocol witness table for UploadedAudio, v65);
      v88 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
      v89 = &v65[v88[5]];
      v90 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 1, 10, v90);
      v91 = Corner.large.unsafeMutableAddressor();
      v92 = *((_BYTE *)v91 + 16);
      v93 = *(_OWORD *)v91;
      *(_QWORD *)&v65[v88[6]] = 0x3FF0000000000000;
      v94 = &v65[v88[7]];
      *(_OWORD *)v94 = v93;
      v94[16] = v92;
      v95 = UploadedAudio.title.getter();
      v97 = v96;
      v98 = UploadedAudio.artistName.getter();
      v100 = v99;
      v84 = (int *)type metadata accessor for ContextualPreview.Data(0);
      v101 = (uint64_t *)&v65[v84[5]];
      *v101 = v95;
      v101[1] = v97;
      v102 = (uint64_t *)&v65[v84[6]];
      *v102 = v98;
      v102[1] = v100;
      v103 = &v65[v84[7]];
      *(_QWORD *)v103 = 0;
      *((_QWORD *)v103 + 1) = 0;
      v65[v84[8]] = 0;
    }
    v65[v84[9]] = 0;
    v69 = *(uint64_t (**)(char *, uint64_t))(v70 + 8);
    return v69(v66, v68);
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
  v66 = v118;
  v67 = v119;
  v68 = v120;
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v24, v120);
  sub_1001D0F3C((uint64_t)a1);
LABEL_7:
  v69 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
  return v69(v66, v68);
}

uint64_t sub_1001D29A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, __n128);
  int v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t result;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unsigned __int8 v41;
  __n128 v42;
  __n128 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t *v51;
  uint64_t *v52;
  _QWORD *v53;
  uint64_t v54;
  Swift::String v55;
  void *object;
  unint64_t v57;
  unint64_t v58;

  v2 = v1;
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Folder.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v57 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v16((char *)&v57 - v14, v2, v8, v13);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v15, v8);
  if (v17 == enum case for Playlist.Folder.Item.folder(_:))
  {
    v18 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
    v19 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v20 = a1 + v19[5];
    v21 = enum case for Playlist.Variant.folder(_:);
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104))(v20, v21, v22);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    v24 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 0, 10, v24);
    v25 = Corner.large.unsafeMutableAddressor();
    v26 = *((_BYTE *)v25 + 16);
    v27 = *(_OWORD *)v25;
    *(_QWORD *)(a1 + v19[6]) = 0x3FF0000000000000;
    v28 = a1 + v19[7];
    *(_OWORD *)v28 = v27;
    *(_BYTE *)(v28 + 16) = v26;
    v29 = Playlist.Folder.Item.name.getter();
    v31 = v30;
    v32 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v33 = (uint64_t *)(a1 + v32[5]);
    *v33 = v29;
    v33[1] = v31;
    v34 = (_QWORD *)(a1 + v32[6]);
    *v34 = 0;
    v34[1] = 0;
    v35 = (_QWORD *)(a1 + v32[7]);
    *v35 = 0;
    v35[1] = 0;
    *(_BYTE *)(a1 + v32[8]) = 1;
    *(_BYTE *)(a1 + v32[9]) = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  else if (v17 == enum case for Playlist.Folder.Item.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v15, v8);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    Playlist.artworkViewModel.getter(a1);
    v37 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v38 = a1 + v37[5];
    Playlist.variant.getter(v37);
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 10, v39);
    v40 = Corner.large.unsafeMutableAddressor();
    v41 = *((_BYTE *)v40 + 16);
    v42 = *(__n128 *)v40;
    *(_QWORD *)(a1 + v37[6]) = 0x3FF0000000000000;
    v43 = (__n128 *)(a1 + v37[7]);
    *v43 = v42;
    v43[1].n128_u8[0] = v41;
    v44 = Playlist.name.getter(v42);
    v46 = v45;
    v47 = Playlist.curatorName.getter(v44);
    v49 = v48;
    v50 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v51 = (uint64_t *)(a1 + v50[5]);
    *v51 = v44;
    v51[1] = v46;
    v52 = (uint64_t *)(a1 + v50[6]);
    *v52 = v47;
    v52[1] = v49;
    v53 = (_QWORD *)(a1 + v50[7]);
    *v53 = 0;
    v53[1] = 0;
    *(_BYTE *)(a1 + v50[8]) = 1;
    *(_BYTE *)(a1 + v50[9]) = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v16)(v11, v2, v8);
    v57 = 0;
    v58 = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease(v58);
    v57 = 0xD000000000000021;
    v58 = 0x8000000100E30DB0;
    v54 = sub_100048748(&qword_1011A58E0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
    v55._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v8, v54);
    object = v55._object;
    String.append(_:)(v55);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v57, v58, "Music/ContextualPreview.swift", 29, 2, 416, 0);
    __break(1u);
  }
  return result;
}

int *sub_1001D2DC0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1001D2DE8(a1, (uint64_t)&protocol witness table for Artist, (uint64_t (*)(uint64_t))&Artist.name.getter, a2);
}

int *sub_1001D2DD4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1001D2DE8(a1, (uint64_t)&protocol witness table for CreditArtist, (uint64_t (*)(uint64_t))&CreditArtist.name.getter, a2);
}

int *sub_1001D2DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t)@<X3>, char *a4@<X8>)
{
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *result;
  uint64_t *v15;
  char *v16;
  char *v17;

  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(a1, a2, a4);
  v6 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v7 = &a4[v6[5]];
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 6, 10, v8);
  *(_QWORD *)&a4[v6[6]] = 0x3FF0000000000000;
  v10 = &a4[v6[7]];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v11 = a3(v9);
  v13 = v12;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v15 = (uint64_t *)&a4[result[5]];
  *v15 = v11;
  v15[1] = v13;
  v16 = &a4[result[6]];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &a4[result[7]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  a4[result[8]] = 0;
  a4[result[9]] = 1;
  return result;
}

int *sub_1001D2EDC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  int *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *result;
  uint64_t *v15;
  uint64_t *v16;
  char *v17;

  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(a1, (uint64_t)&protocol witness table for SocialProfile, a2);
  v3 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v4 = &a2[v3[5]];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 7, 10, v5);
  *(_QWORD *)&a2[v3[6]] = 0x3FF0000000000000;
  v7 = &a2[v3[7]];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v8 = SocialProfile.name.getter(v6);
  v10 = v9;
  v11 = SocialProfile.handle.getter();
  v13 = v12;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v15 = (uint64_t *)&a2[result[5]];
  *v15 = v8;
  v15[1] = v10;
  v16 = (uint64_t *)&a2[result[6]];
  *v16 = v11;
  v16[1] = v13;
  v17 = &a2[result[7]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  a2[result[8]] = 1;
  a2[result[9]] = 0;
  return result;
}

int *sub_1001D2FC4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  int *v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  __int128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *result;
  uint64_t *v17;
  uint64_t *v18;
  char *v19;

  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(a1, (uint64_t)&protocol witness table for UploadedAudio, a2);
  v3 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v4 = &a2[v3[5]];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 10, v5);
  v6 = Corner.large.unsafeMutableAddressor();
  v7 = *((_BYTE *)v6 + 16);
  v8 = *(_OWORD *)v6;
  *(_QWORD *)&a2[v3[6]] = 0x3FF0000000000000;
  v9 = &a2[v3[7]];
  *(_OWORD *)v9 = v8;
  v9[16] = v7;
  v10 = UploadedAudio.title.getter();
  v12 = v11;
  v13 = UploadedAudio.artistName.getter();
  v15 = v14;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v17 = (uint64_t *)&a2[result[5]];
  *v17 = v10;
  v17[1] = v12;
  v18 = (uint64_t *)&a2[result[6]];
  *v18 = v13;
  v18[1] = v15;
  v19 = &a2[result[7]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  a2[result[8]] = 0;
  a2[result[9]] = 0;
  return result;
}

int *sub_1001D30B8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  int *v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned __int8 v7;
  __n128 v8;
  __n128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *result;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;

  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(a1, (uint64_t)&protocol witness table for MusicVideo, a2);
  v3 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v4 = &a2[v3[5]];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 4, 10, v5);
  v6 = Corner.large.unsafeMutableAddressor();
  v7 = *((_BYTE *)v6 + 16);
  v8 = *(__n128 *)v6;
  *(_QWORD *)&a2[v3[6]] = 0x3FFC71C71C71C71CLL;
  v9 = (__n128 *)&a2[v3[7]];
  *v9 = v8;
  v9[1].n128_u8[0] = v7;
  v10 = MusicVideo.title.getter(v8);
  v12 = v11;
  v13 = MusicVideo.artistName.getter(v10);
  v15 = v14;
  v16 = MusicVideo.albumTitle.getter(v13);
  v18 = v17;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v20 = (uint64_t *)&a2[result[5]];
  *v20 = v10;
  v20[1] = v12;
  v21 = (uint64_t *)&a2[result[6]];
  *v21 = v13;
  v21[1] = v15;
  v22 = (uint64_t *)&a2[result[7]];
  *v22 = v16;
  v22[1] = v18;
  a2[result[8]] = 1;
  a2[result[9]] = 0;
  return result;
}

int *sub_1001D31CC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  int *v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned __int8 v7;
  __n128 v8;
  __n128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *result;
  uint64_t *v14;
  char *v15;
  char *v16;

  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(a1, (uint64_t)&protocol witness table for MusicMovie, a2);
  v3 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v4 = &a2[v3[5]];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 5, 10, v5);
  v6 = Corner.large.unsafeMutableAddressor();
  v7 = *((_BYTE *)v6 + 16);
  v8 = *(__n128 *)v6;
  *(_QWORD *)&a2[v3[6]] = 0x3FE5555555555555;
  v9 = (__n128 *)&a2[v3[7]];
  *v9 = v8;
  v9[1].n128_u8[0] = v7;
  v10 = MusicMovie.title.getter(v8);
  v12 = v11;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v14 = (uint64_t *)&a2[result[5]];
  *v14 = v10;
  v14[1] = v12;
  v15 = &a2[result[6]];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &a2[result[7]];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  a2[result[8]] = 1;
  a2[result[9]] = 0;
  return result;
}

int *sub_1001D32B8@<X0>(char *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  __int128 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *result;
  uint64_t *v16;
  uint64_t *v17;
  char *v18;

  TVEpisode.artworkViewModel.getter(a1);
  v2 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v3 = &a1[v2[5]];
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 5, 10, v4);
  v5 = Corner.large.unsafeMutableAddressor();
  v6 = *((_BYTE *)v5 + 16);
  v7 = *(_OWORD *)v5;
  *(_QWORD *)&a1[v2[6]] = 0x3FFC71C71C71C71CLL;
  v8 = &a1[v2[7]];
  *(_OWORD *)v8 = v7;
  v8[16] = v6;
  v9 = TVEpisode.title.getter(v5);
  v11 = v10;
  v12 = TVEpisode.showName.getter();
  v14 = v13;
  result = (int *)type metadata accessor for ContextualPreview.Data(0);
  v16 = (uint64_t *)&a1[result[5]];
  *v16 = v9;
  v16[1] = v11;
  v17 = (uint64_t *)&a1[result[6]];
  *v17 = v12;
  v17[1] = v14;
  v18 = &a1[result[7]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  a1[result[8]] = 1;
  a1[result[9]] = 0;
  return result;
}

uint64_t sub_1001D33B0@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  int v27;
  int *v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  char v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t *v42;
  uint64_t *v43;
  char *v44;
  uint64_t result;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int *v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  unsigned __int8 v53;
  __n128 v54;
  __n128 *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  char *v67;
  uint64_t v68;
  uint64_t *v69;
  unsigned __int8 v70;
  __n128 v71;
  __n128 *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  char *v90;
  uint64_t v91;
  uint64_t *v92;
  unsigned __int8 v93;
  __n128 v94;
  __n128 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t *v103;
  uint64_t *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  Swift::String v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;

  v2 = v1;
  v4 = type metadata accessor for UploadedVideo(0);
  v115 = *(_QWORD *)(v4 - 8);
  v116 = v4;
  __chkstk_darwin(v4);
  v114 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TVSeason(0);
  v112 = *(_QWORD *)(v6 - 8);
  v113 = v6;
  __chkstk_darwin(v6);
  v111 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v121 = *(_QWORD *)(v8 - 8);
  v122 = v8;
  __chkstk_darwin(v8);
  v120 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicMovie(0);
  v124 = *(_QWORD *)(v10 - 8);
  v125 = v10;
  __chkstk_darwin(v10);
  v123 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v118 = *(_QWORD *)(v12 - 8);
  v119 = v12;
  __chkstk_darwin(v12);
  v117 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RecentlyAddedMusicItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v110 - v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16);
  v110 = v2;
  v26((char *)&v110 - v24, v2, v18, v23);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v25, v18);
  if (v27 == enum case for RecentlyAddedMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v25, v18);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v25, v14);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v14, (uint64_t)&protocol witness table for Album, a1);
    v28 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v29 = &a1[v28[5]];
    v30 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 10, v30);
    v31 = Corner.large.unsafeMutableAddressor();
    v32 = *((_BYTE *)v31 + 16);
    v33 = *(_OWORD *)v31;
    *(_QWORD *)&a1[v28[6]] = 0x3FF0000000000000;
    v34 = &a1[v28[7]];
    *(_OWORD *)v34 = v33;
    v34[16] = v32;
    v35 = Album.title.getter(v31);
    v37 = v36;
    v38 = Album.artistName.getter(v35);
    v40 = v39;
    v41 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v42 = (uint64_t *)&a1[v41[5]];
    *v42 = v35;
    v42[1] = v37;
    v43 = (uint64_t *)&a1[v41[6]];
    *v43 = v38;
    v43[1] = v40;
    v44 = &a1[v41[7]];
    *(_QWORD *)v44 = 0;
    *((_QWORD *)v44 + 1) = 0;
    a1[v41[8]] = 1;
    a1[v41[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  if (v27 == enum case for RecentlyAddedMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v25, v18);
    v47 = v123;
    v46 = v124;
    v48 = v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v25, v125);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v48, (uint64_t)&protocol witness table for MusicMovie, a1);
    v49 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v50 = &a1[v49[5]];
    v51 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 5, 10, v51);
    v52 = Corner.large.unsafeMutableAddressor();
    v53 = *((_BYTE *)v52 + 16);
    v54 = *(__n128 *)v52;
    *(_QWORD *)&a1[v49[6]] = 0x3FE5555555555555;
    v55 = (__n128 *)&a1[v49[7]];
    *v55 = v54;
    v55[1].n128_u8[0] = v53;
    v56 = MusicMovie.title.getter(v54);
    v58 = v57;
    v59 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v60 = (uint64_t *)&a1[v59[5]];
    *v60 = v56;
    v60[1] = v58;
    v61 = &a1[v59[6]];
    *(_QWORD *)v61 = 0;
    *((_QWORD *)v61 + 1) = 0;
    v62 = &a1[v59[7]];
    *(_QWORD *)v62 = 0;
    *((_QWORD *)v62 + 1) = 0;
    a1[v59[8]] = 1;
    a1[v59[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  }
  if (v27 == enum case for RecentlyAddedMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v25, v18);
    v63 = v120;
    v64 = v121;
    v65 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v120, v25, v122);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v65, (uint64_t)&protocol witness table for MusicVideo, a1);
    v66 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v67 = &a1[v66[5]];
    v68 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 4, 10, v68);
    v69 = Corner.large.unsafeMutableAddressor();
    v70 = *((_BYTE *)v69 + 16);
    v71 = *(__n128 *)v69;
    *(_QWORD *)&a1[v66[6]] = 0x3FFC71C71C71C71CLL;
    v72 = (__n128 *)&a1[v66[7]];
    *v72 = v71;
    v72[1].n128_u8[0] = v70;
    v73 = MusicVideo.title.getter(v71);
    v75 = v74;
    v76 = MusicVideo.artistName.getter(v73);
    v78 = v77;
    v79 = MusicVideo.albumTitle.getter(v76);
    v81 = v80;
    v82 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v83 = (uint64_t *)&a1[v82[5]];
    *v83 = v73;
    v83[1] = v75;
    v84 = (uint64_t *)&a1[v82[6]];
    *v84 = v76;
    v84[1] = v78;
    v85 = (uint64_t *)&a1[v82[7]];
    *v85 = v79;
    v85[1] = v81;
    a1[v82[8]] = 1;
    a1[v82[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v63, v65);
  }
  if (v27 == enum case for RecentlyAddedMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v25, v18);
    v86 = v117;
    v87 = v118;
    v88 = v119;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v117, v25, v119);
    Playlist.artworkViewModel.getter((uint64_t)a1);
    v89 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v90 = &a1[v89[5]];
    Playlist.variant.getter(v89);
    v91 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 0, 10, v91);
    v92 = Corner.large.unsafeMutableAddressor();
    v93 = *((_BYTE *)v92 + 16);
    v94 = *(__n128 *)v92;
    *(_QWORD *)&a1[v89[6]] = 0x3FF0000000000000;
    v95 = (__n128 *)&a1[v89[7]];
    *v95 = v94;
    v95[1].n128_u8[0] = v93;
    v96 = Playlist.name.getter(v94);
    v98 = v97;
    v99 = Playlist.curatorName.getter(v96);
    v101 = v100;
    v102 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v103 = (uint64_t *)&a1[v102[5]];
    *v103 = v96;
    v103[1] = v98;
    v104 = (uint64_t *)&a1[v102[6]];
    *v104 = v99;
    v104[1] = v101;
    v105 = &a1[v102[7]];
    *(_QWORD *)v105 = 0;
    *((_QWORD *)v105 + 1) = 0;
    a1[v102[8]] = 1;
    a1[v102[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v86, v88);
  }
  if (v27 == enum case for RecentlyAddedMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v25, v18);
    v106 = v111;
    v107 = v112;
    v108 = v113;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v111, v25, v113);
    sub_1001D191C(a1);
  }
  else
  {
    if (v27 != enum case for RecentlyAddedMusicItem.uploadedVideo(_:))
    {
      ((void (*)(char *, uint64_t, uint64_t))v26)(v21, v110, v18);
      v126 = 0;
      v127 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      v109._object = (void *)0x8000000100E30D80;
      v109._countAndFlagsBits = 0xD000000000000023;
      String.append(_:)(v109);
      _print_unlocked<A, B>(_:_:)(v21, &v126, v18, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v126, v127, "Music/ContextualPreview.swift", 29, 2, 661, 0);
      __break(1u);
      return result;
    }
    (*(void (**)(char *, uint64_t))(v19 + 96))(v25, v18);
    v106 = v114;
    v107 = v115;
    v108 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v25, v116);
    sub_1001D1D0C((uint64_t)a1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v106, v108);
}

uint64_t sub_1001D3BB4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t result;
  uint64_t v20;
  int *v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  unsigned __int8 v25;
  __n128 v26;
  __n128 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  Swift::String v42;
  void *object;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;

  v3 = type metadata accessor for MusicVideo(0);
  v4 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v47 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Track(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v44 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v44 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v45 = v1;
  v17((char *)&v44 - v15, v1, v11);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v16, v11);
  if (v18 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v16, v11);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v16, v7);
    sub_1001D0F3C((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else if (v18 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v16, v11);
    v20 = v46;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v6, v16, v46);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v20, (uint64_t)&protocol witness table for MusicVideo, a1);
    v21 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v22 = &a1[v21[5]];
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 4, 10, v23);
    v24 = Corner.large.unsafeMutableAddressor();
    v25 = *((_BYTE *)v24 + 16);
    v26 = *(__n128 *)v24;
    *(_QWORD *)&a1[v21[6]] = 0x3FFC71C71C71C71CLL;
    v27 = (__n128 *)&a1[v21[7]];
    *v27 = v26;
    v27[1].n128_u8[0] = v25;
    v28 = MusicVideo.title.getter(v26);
    v30 = v29;
    v31 = MusicVideo.artistName.getter(v28);
    v33 = v32;
    v34 = MusicVideo.albumTitle.getter(v31);
    v36 = v35;
    v37 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v38 = (uint64_t *)&a1[v37[5]];
    *v38 = v28;
    v38[1] = v30;
    v39 = (uint64_t *)&a1[v37[6]];
    *v39 = v31;
    v39[1] = v33;
    v40 = (uint64_t *)&a1[v37[7]];
    *v40 = v34;
    v40[1] = v36;
    a1[v37[8]] = 1;
    a1[v37[9]] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v6, v20);
  }
  else
  {
    v17(v44, v45, v11);
    v48 = 0;
    v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease(v49);
    v48 = 0xD000000000000017;
    v49 = 0x8000000100E30D30;
    v41 = sub_100048748((unint64_t *)&unk_1011B6A00, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v11, v41);
    object = v42._object;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v48, v49, "Music/ContextualPreview.swift", 29, 2, 674, 0);
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ContextualPreview.ViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A5698, (uint64_t)&nominal type descriptor for ContextualPreview.ViewController);
}

uint64_t sub_1001D3F58(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_10124CB00);
}

uint64_t sub_1001D3F94()
{
  return type metadata accessor for ContextualPreview.ViewController(0);
}

uint64_t *sub_1001D3F9C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    *(uint64_t *)((char *)a1 + v18[6]) = *(uint64_t *)((char *)a2 + v18[6]);
    v28 = v18[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    v31 = a3[5];
    v32 = a3[6];
    v33 = (uint64_t *)((char *)a1 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (uint64_t *)((char *)a1 + v32);
    v37 = (uint64_t *)((char *)a2 + v32);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = a3[7];
    v40 = a3[8];
    v41 = (uint64_t *)((char *)a1 + v39);
    v42 = (uint64_t *)((char *)a2 + v39);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    *((_BYTE *)a1 + v40) = *((_BYTE *)a2 + v40);
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t type metadata accessor for ContextualPreview.Artwork(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A57E0, (uint64_t)&nominal type descriptor for ContextualPreview.Artwork);
}

double sub_1001D42A8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

char *sub_1001D43F8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
  v26 = v16[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = a3[5];
  v30 = a3[6];
  v31 = &a1[v29];
  v32 = &a2[v29];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = &a1[v30];
  v35 = &a2[v30];
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v36;
  v37 = a3[7];
  v38 = a3[8];
  v39 = &a1[v37];
  v40 = &a2[v37];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  a1[v38] = a2[v38];
  a1[a3[9]] = a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001D46C4(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_27;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)&a2[v30[6]];
  v48 = v30[7];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_OWORD *)v50;
  *(_BYTE *)(v49 + 16) = v50[16];
  *(_OWORD *)v49 = v51;
  v52 = a3[5];
  v53 = (_QWORD *)(a1 + v52);
  v54 = &a2[v52];
  *v53 = *(_QWORD *)v54;
  v55 = v53[1];
  v53[1] = *((_QWORD *)v54 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v55);
  v56 = a3[6];
  v57 = (_QWORD *)(a1 + v56);
  v58 = &a2[v56];
  *v57 = *(_QWORD *)v58;
  v59 = v57[1];
  v57[1] = *((_QWORD *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v59);
  v60 = a3[7];
  v61 = (_QWORD *)(a1 + v60);
  v62 = &a2[v60];
  *v61 = *(_QWORD *)v62;
  v63 = v61[1];
  v61[1] = *((_QWORD *)v62 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v63);
  *(_BYTE *)(a1 + a3[8]) = a2[a3[8]];
  *(_BYTE *)(a1 + a3[9]) = a2[a3[9]];
  return a1;
}

char *sub_1001D4BAC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
  v26 = v16[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v29] = *(_OWORD *)&a2[v29];
  v30 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v30] = a2[v30];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_1001D4E4C(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_27;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)&a2[v30[6]];
  v48 = v30[7];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_BYTE *)(v49 + 16) = v50[16];
  v51 = a3[5];
  v52 = (_QWORD *)(a1 + v51);
  v53 = &a2[v51];
  v55 = *(_QWORD *)v53;
  v54 = *((_QWORD *)v53 + 1);
  v56 = v52[1];
  *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease(v56);
  v57 = a3[6];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  v62 = v58[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease(v62);
  v63 = a3[7];
  v64 = (_QWORD *)(a1 + v63);
  v65 = &a2[v63];
  v67 = *(_QWORD *)v65;
  v66 = *((_QWORD *)v65 + 1);
  v68 = v64[1];
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease(v68);
  v69 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = a2[a3[8]];
  *(_BYTE *)(a1 + v69) = a2[v69];
  return a1;
}

uint64_t sub_1001D5300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D530C);
}

uint64_t sub_1001D530C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for ContextualPreview.Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1001D5398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D53A4);
}

uint64_t sub_1001D53A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ContextualPreview.Artwork(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for ContextualPreview.Data(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5740, (uint64_t)&nominal type descriptor for ContextualPreview.Data);
}

uint64_t sub_1001D5434(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for ContextualPreview.Artwork(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EADDC0;
    v4[2] = &unk_100EADDC0;
    v4[3] = &unk_100EADDC0;
    v4[4] = &unk_100EADDD8;
    v4[5] = &unk_100EADDD8;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1001D54B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = a3[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    v27 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    *(_OWORD *)v28 = *(_OWORD *)v29;
    v28[16] = v29[16];
  }
  return a1;
}

uint64_t sub_1001D573C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10);
  if (!(_DWORD)result)
  {
    v12 = type metadata accessor for Playlist.Variant(0);
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v9, v12);
  }
  return result;
}

char *sub_1001D5868(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  return a1;
}

uint64_t sub_1001D5AC4(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)&a2[a3[6]];
  v47 = a3[7];
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_OWORD *)v49;
  *(_BYTE *)(v48 + 16) = v49[16];
  *(_OWORD *)v48 = v50;
  return a1;
}

char *sub_1001D5F04(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  return a1;
}

uint64_t sub_1001D6160(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)&a2[a3[6]];
  v48 = a1 + v47;
  v49 = &a2[v47];
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_BYTE *)(v48 + 16) = v49[16];
  return a1;
}

uint64_t sub_1001D659C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D65A8);
}

uint64_t sub_1001D65A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for ArtworkImage.Placeholder(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1001D6620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D662C);
}

uint64_t sub_1001D662C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for ArtworkImage.Placeholder(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001D66AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[3] = &unk_100EADDF8;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1001D6760(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;

  v4 = type metadata accessor for ContextualPreview.Data(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    *(uint64_t *)((char *)a1 + v18[6]) = *(uint64_t *)((char *)a2 + v18[6]);
    v28 = v18[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    v31 = v6[5];
    v32 = (uint64_t *)((char *)a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v6[6];
    v36 = (uint64_t *)((char *)a1 + v35);
    v37 = (uint64_t *)((char *)a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = v6[7];
    v40 = (uint64_t *)((char *)a1 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_1001D6A6C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v4 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v14 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v15 = v14[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 10, v18))
  {
    v20 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for Playlist.Variant(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v16, v17, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 10, v18);
  }
  *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
  v24 = v14[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  v27 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v28 = v27[5];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  v33 = v27[6];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v36;
  v37 = v27[7];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  a1[v27[8]] = a2[v27[8]];
  a1[v27[9]] = a2[v27[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001D6D48(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  int *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __int128 v49;
  int *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6((uint64_t)a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v19 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(a1, a2, v19);
      v20 = *(int *)(v4 + 20);
      v21 = (void *)(a1 + v20);
      v22 = &a2[v20];
      v23 = type metadata accessor for Artwork.CropStyle(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
      v26 = v25(v21, 1, v23);
      v27 = v25(v22, 1, v23);
      if (v26)
      {
        if (!v27)
        {
          (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v27)
        {
          (*(void (**)(void *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v17 = v21;
      v18 = v22;
LABEL_8:
      memcpy(v17, v18, v16);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v17 = (void *)a1;
    v18 = a2;
    goto LABEL_8;
  }
  if (v8)
    goto LABEL_7;
  v9 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(v4 + 20);
  v11 = (void *)(a1 + v10);
  v12 = &a2[v10];
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_14:
  v28 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v29 = v28[5];
  v30 = (void *)(a1 + v29);
  v31 = &a2[v29];
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 10, v32);
  v36 = v34(v31, 10, v32);
  if (!v35)
  {
    if (!v36)
    {
      v41 = type metadata accessor for Playlist.Variant(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
      v44 = v43(v30, 1, v41);
      v45 = v43(v31, 1, v41);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v30, v31, v41);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v30, 0, 1, v41);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 24))(v30, v31, v41);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v42 + 8))(v30, v41);
      }
      v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v40 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_27;
  }
  if (v36)
    goto LABEL_20;
  v37 = type metadata accessor for Playlist.Variant(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, v37))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v30, v31, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v30, 0, 1, v37);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 10, v32);
LABEL_27:
  *(_QWORD *)(a1 + v28[6]) = *(_QWORD *)&a2[v28[6]];
  v46 = v28[7];
  v47 = a1 + v46;
  v48 = &a2[v46];
  v49 = *(_OWORD *)v48;
  *(_BYTE *)(v47 + 16) = v48[16];
  *(_OWORD *)v47 = v49;
  v50 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v51 = v50[5];
  v52 = (_QWORD *)(a1 + v51);
  v53 = &a2[v51];
  *v52 = *(_QWORD *)v53;
  v54 = v52[1];
  v52[1] = *((_QWORD *)v53 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v54);
  v55 = v50[6];
  v56 = (_QWORD *)(a1 + v55);
  v57 = &a2[v55];
  *v56 = *(_QWORD *)v57;
  v58 = v56[1];
  v56[1] = *((_QWORD *)v57 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v58);
  v59 = v50[7];
  v60 = (_QWORD *)(a1 + v59);
  v61 = &a2[v59];
  *v60 = *(_QWORD *)v61;
  v62 = v60[1];
  v60[1] = *((_QWORD *)v61 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v62);
  *(_BYTE *)(a1 + v50[8]) = a2[v50[8]];
  *(_BYTE *)(a1 + v50[9]) = a2[v50[9]];
  return a1;
}

char *sub_1001D7238(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(v4 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v14 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v15 = v14[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 10, v18))
  {
    v20 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for Playlist.Variant(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v17, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 10, v18);
  }
  *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
  v24 = v14[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  v27 = (int *)type metadata accessor for ContextualPreview.Data(0);
  *(_OWORD *)&a1[v27[5]] = *(_OWORD *)&a2[v27[5]];
  *(_OWORD *)&a1[v27[6]] = *(_OWORD *)&a2[v27[6]];
  *(_OWORD *)&a1[v27[7]] = *(_OWORD *)&a2[v27[7]];
  a1[v27[8]] = a2[v27[8]];
  a1[v27[9]] = a2[v27[9]];
  return a1;
}

uint64_t sub_1001D74E4(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  int *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int *v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6((uint64_t)a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v19 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(a1, a2, v19);
      v20 = *(int *)(v4 + 20);
      v21 = (void *)(a1 + v20);
      v22 = &a2[v20];
      v23 = type metadata accessor for Artwork.CropStyle(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
      v26 = v25(v21, 1, v23);
      v27 = v25(v22, 1, v23);
      if (v26)
      {
        if (!v27)
        {
          (*(void (**)(void *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v27)
        {
          (*(void (**)(void *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v17 = v21;
      v18 = v22;
LABEL_8:
      memcpy(v17, v18, v16);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v17 = (void *)a1;
    v18 = a2;
    goto LABEL_8;
  }
  if (v8)
    goto LABEL_7;
  v9 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  v10 = *(int *)(v4 + 20);
  v11 = (void *)(a1 + v10);
  v12 = &a2[v10];
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_14:
  v28 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v29 = v28[5];
  v30 = (void *)(a1 + v29);
  v31 = &a2[v29];
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 10, v32);
  v36 = v34(v31, 10, v32);
  if (!v35)
  {
    if (!v36)
    {
      v41 = type metadata accessor for Playlist.Variant(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
      v44 = v43(v30, 1, v41);
      v45 = v43(v31, 1, v41);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 32))(v30, v31, v41);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v30, 0, 1, v41);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 40))(v30, v31, v41);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v42 + 8))(v30, v41);
      }
      v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v40 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_27;
  }
  if (v36)
    goto LABEL_20;
  v37 = type metadata accessor for Playlist.Variant(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, v37))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(v30, v31, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v30, 0, 1, v37);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 10, v32);
LABEL_27:
  *(_QWORD *)(a1 + v28[6]) = *(_QWORD *)&a2[v28[6]];
  v46 = v28[7];
  v47 = a1 + v46;
  v48 = &a2[v46];
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_BYTE *)(v47 + 16) = v48[16];
  v49 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v50 = v49[5];
  v51 = (_QWORD *)(a1 + v50);
  v52 = &a2[v50];
  v54 = *(_QWORD *)v52;
  v53 = *((_QWORD *)v52 + 1);
  v55 = v51[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease(v55);
  v56 = v49[6];
  v57 = (_QWORD *)(a1 + v56);
  v58 = &a2[v56];
  v60 = *(_QWORD *)v58;
  v59 = *((_QWORD *)v58 + 1);
  v61 = v57[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease(v61);
  v62 = v49[7];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  v67 = v63[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease(v67);
  *(_BYTE *)(a1 + v49[8]) = a2[v49[8]];
  *(_BYTE *)(a1 + v49[9]) = a2[v49[9]];
  return a1;
}

uint64_t sub_1001D79A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D79B0);
}

uint64_t sub_1001D79B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextualPreview.Data(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1001D79EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D79F8);
}

uint64_t sub_1001D79F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextualPreview.Data(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ContextualPreview(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5878, (uint64_t)&nominal type descriptor for ContextualPreview);
}

uint64_t sub_1001D7A4C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ContextualPreview.Data(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001D7AB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97BD8, 1);
}

uint64_t type metadata accessor for ContextualPreview.InlinePreview(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5940, (uint64_t)&nominal type descriptor for ContextualPreview.InlinePreview);
}

uint64_t type metadata accessor for ContextualPreview.StackedPreview(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A59D8, (uint64_t)&nominal type descriptor for ContextualPreview.StackedPreview);
}

uint64_t sub_1001D7AF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  double v9;
  uint64_t *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  objc_opt_self(UICollectionViewListCell);
  if (swift_dynamicCastObjCClass(a1))
  {
    v4 = Corner.extraSmall.unsafeMutableAddressor();
    v5 = *v4;
    v6 = v4[1];
    v7 = *((_BYTE *)v4 + 16);
    NSDirectionalEdgeInsets.Edge.all.unsafeMutableAddressor();
    v8 = swift_bridgeObjectRetain();
    v9 = 0.0;
  }
  else
  {
    v10 = Corner.large.unsafeMutableAddressor();
    v5 = *v10;
    v6 = v10[1];
    v7 = *((_BYTE *)v10 + 16);
    if (qword_10119BBA0 != -1)
      swift_once(&qword_10119BBA0, sub_1001CFEE0);
    v11 = qword_10124CAF8;
    NSDirectionalEdgeInsets.Edge.all.unsafeMutableAddressor();
    v8 = swift_bridgeObjectRetain();
    v9 = *(double *)&v11;
  }
  v12 = NSDirectionalEdgeInsets.init(edge:length:)(v8, v9);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  objc_msgSend(a1, "bounds");
  objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection");
  result = CGRect.outset(by:for:)(v12, v14, v16, v18);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = v23;
  return result;
}

uint64_t getEnumTagSinglePayload for ContextualPreview.Highlight(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContextualPreview.Highlight(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ContextualPreview.Highlight()
{
  return &type metadata for ContextualPreview.Highlight;
}

uint64_t *sub_1001D7CAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    *(uint64_t *)((char *)a1 + v18[6]) = *(uint64_t *)((char *)a2 + v18[6]);
    v28 = v18[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    v31 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v32 = v31[5];
    v33 = (uint64_t *)((char *)a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = v31[6];
    v37 = (uint64_t *)((char *)a1 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = v31[7];
    v41 = (uint64_t *)((char *)a1 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    *((_BYTE *)a1 + v31[8]) = *((_BYTE *)a2 + v31[8]);
    *((_BYTE *)a1 + v31[9]) = *((_BYTE *)a2 + v31[9]);
    v44 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    v47 = type metadata accessor for Text.Measurements(0);
    v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v45, v46, v47);
    v49 = a3[7];
    v50 = (uint64_t *)((char *)a1 + v49);
    v51 = (uint64_t *)((char *)a2 + v49);
    v52 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v51, v52) == 1)
    {
      v53 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v50, v51, v53);
      v54 = v50;
      v55 = v52;
      v56 = 1;
    }
    else
    {
      v57 = *v51;
      *v50 = *v51;
      swift_retain(v57);
      v54 = v50;
      v55 = v52;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
  }
  return a1;
}

double sub_1001D806C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  double result;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v13 = (int *)type metadata accessor for ContextualPreview.Data(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v13[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v13[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v13[7] + 8));
  v14 = a1 + *(int *)(a2 + 24);
  v15 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v16).n128_u64[0];
  }
  return result;
}

char *sub_1001D8248(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
  v26 = v16[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v30 = v29[5];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = v29[6];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  v38 = v29[7];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  a1[v29[8]] = a2[v29[8]];
  a1[v29[9]] = a2[v29[9]];
  v42 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = type metadata accessor for Text.Measurements(0);
  v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v43, v44, v45);
  v47 = a3[7];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
  {
    v51 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
    v52 = 1;
  }
  else
  {
    v53 = *(_QWORD *)v49;
    *(_QWORD *)v48 = *(_QWORD *)v49;
    swift_retain(v53);
    v52 = 0;
  }
  swift_storeEnumTagMultiPayload(v48, v50, v52);
  return a1;
}

uint64_t sub_1001D85D4(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  int *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)&a2[v30[6]];
  v48 = v30[7];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_OWORD *)v50;
  *(_BYTE *)(v49 + 16) = v50[16];
  *(_OWORD *)v49 = v51;
  v52 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v53 = v52[5];
  v54 = (_QWORD *)(a1 + v53);
  v55 = &a2[v53];
  *v54 = *(_QWORD *)v55;
  v56 = v54[1];
  v54[1] = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v56);
  v57 = v52[6];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  *v58 = *(_QWORD *)v59;
  v60 = v58[1];
  v58[1] = *((_QWORD *)v59 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v60);
  v61 = v52[7];
  v62 = (_QWORD *)(a1 + v61);
  v63 = &a2[v61];
  *v62 = *(_QWORD *)v63;
  v64 = v62[1];
  v62[1] = *((_QWORD *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v64);
  *(_BYTE *)(a1 + v52[8]) = a2[v52[8]];
  *(_BYTE *)(a1 + v52[9]) = a2[v52[9]];
  *(_BYTE *)(a1 + a3[5]) = a2[a3[5]];
  v65 = a3[6];
  v66 = a1 + v65;
  v67 = &a2[v65];
  v68 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v66, v67, v68);
  if ((char *)a1 != a2)
  {
    v69 = a3[7];
    v70 = (_QWORD *)(a1 + v69);
    v71 = &a2[v69];
    sub_10004FF60(a1 + v69, (uint64_t *)&unk_1011ACE40);
    v72 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v71, v72) == 1)
    {
      v73 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v70, v71, v73);
      v74 = 1;
    }
    else
    {
      v75 = *(_QWORD *)v71;
      *v70 = *(_QWORD *)v71;
      swift_retain(v75);
      v74 = 0;
    }
    swift_storeEnumTagMultiPayload(v70, v72, v74);
  }
  return a1;
}

char *sub_1001D8B8C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
  v26 = v16[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = (int *)type metadata accessor for ContextualPreview.Data(0);
  *(_OWORD *)&a1[v29[5]] = *(_OWORD *)&a2[v29[5]];
  *(_OWORD *)&a1[v29[6]] = *(_OWORD *)&a2[v29[6]];
  *(_OWORD *)&a1[v29[7]] = *(_OWORD *)&a2[v29[7]];
  a1[v29[8]] = a2[v29[8]];
  a1[v29[9]] = a2[v29[9]];
  v30 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  v34 = a3[7];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
  {
    v38 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload(v35, v37, 1);
  }
  else
  {
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001D8EE8(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (v37)
  {
    if (!v38)
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
      {
        v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  if (v38)
  {
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_27;
  }
  v43 = type metadata accessor for Playlist.Variant(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v32, 1, v43);
  v47 = v45(v33, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
      goto LABEL_27;
    }
LABEL_37:
    v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    goto LABEL_21;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
LABEL_27:
  *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)&a2[v30[6]];
  v48 = v30[7];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_BYTE *)(v49 + 16) = v50[16];
  v51 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v52 = v51[5];
  v53 = (_QWORD *)(a1 + v52);
  v54 = &a2[v52];
  v56 = *(_QWORD *)v54;
  v55 = *((_QWORD *)v54 + 1);
  v57 = v53[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease(v57);
  v58 = v51[6];
  v59 = (_QWORD *)(a1 + v58);
  v60 = &a2[v58];
  v62 = *(_QWORD *)v60;
  v61 = *((_QWORD *)v60 + 1);
  v63 = v59[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease(v63);
  v64 = v51[7];
  v65 = (_QWORD *)(a1 + v64);
  v66 = &a2[v64];
  v68 = *(_QWORD *)v66;
  v67 = *((_QWORD *)v66 + 1);
  v69 = v65[1];
  *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease(v69);
  *(_BYTE *)(a1 + v51[8]) = a2[v51[8]];
  *(_BYTE *)(a1 + v51[9]) = a2[v51[9]];
  v70 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = a2[a3[5]];
  v71 = a1 + v70;
  v72 = &a2[v70];
  v73 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 40))(v71, v72, v73);
  if ((char *)a1 != a2)
  {
    v74 = a3[7];
    v75 = (void *)(a1 + v74);
    v76 = &a2[v74];
    sub_10004FF60(a1 + v74, (uint64_t *)&unk_1011ACE40);
    v77 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v76, v77) == 1)
    {
      v78 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v75, v76, v78);
      swift_storeEnumTagMultiPayload(v75, v77, 1);
    }
    else
    {
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001D9470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D947C);
}

uint64_t sub_1001D947C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for ContextualPreview.Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + a3[5]);
    if (v9 >= 2)
      return v9 - 1;
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for Text.Measurements(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = a3[6];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011C6890);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = a3[7];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_1001D9544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D9550);
}

uint64_t sub_1001D9550(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for ContextualPreview.Data(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + a4[5]) = a2 + 1;
      return result;
    }
    v13 = type metadata accessor for Text.Measurements(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001D9618(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v2 = type metadata accessor for ContextualPreview.Data(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100EADDD8;
    v4 = type metadata accessor for Text.Measurements(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

uint64_t *sub_1001D96D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    *(uint64_t *)((char *)a1 + v18[6]) = *(uint64_t *)((char *)a2 + v18[6]);
    v28 = v18[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    v31 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v32 = v31[5];
    v33 = (uint64_t *)((char *)a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v36 = *v34;
    v35 = v34[1];
    *v33 = v36;
    v33[1] = v35;
    v37 = v31[6];
    v38 = (uint64_t *)((char *)a1 + v37);
    v39 = (uint64_t *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = v31[7];
    v42 = (uint64_t *)((char *)a1 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    *((_BYTE *)a1 + v31[8]) = *((_BYTE *)a2 + v31[8]);
    *((_BYTE *)a1 + v31[9]) = *((_BYTE *)a2 + v31[9]);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_1001D99F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  double result;

  v2 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v3 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = a1 + *(int *)(v2 + 20);
    v5 = type metadata accessor for Artwork.CropStyle(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  v7 = a1 + *(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 20);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 10, v8))
  {
    v9 = type metadata accessor for Playlist.Variant(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  }
  v11 = (int *)type metadata accessor for ContextualPreview.Data(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v11[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v11[6] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + v11[7] + 8)).n128_u64[0];
  return result;
}

char *sub_1001D9B40(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
  v26 = v16[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v30 = v29[5];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  v35 = v29[6];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = v29[7];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = v42;
  a1[v29[8]] = a2[v29[8]];
  a1[v29[9]] = a2[v29[9]];
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001D9E2C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  int *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_27;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)&a2[v30[6]];
  v48 = v30[7];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_OWORD *)v50;
  *(_BYTE *)(v49 + 16) = v50[16];
  *(_OWORD *)v49 = v51;
  v52 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v53 = v52[5];
  v54 = (_QWORD *)(a1 + v53);
  v55 = &a2[v53];
  *v54 = *(_QWORD *)v55;
  v56 = v54[1];
  v54[1] = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v56);
  v57 = v52[6];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  *v58 = *(_QWORD *)v59;
  v60 = v58[1];
  v58[1] = *((_QWORD *)v59 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v60);
  v61 = v52[7];
  v62 = (_QWORD *)(a1 + v61);
  v63 = &a2[v61];
  *v62 = *(_QWORD *)v63;
  v64 = v62[1];
  v62[1] = *((_QWORD *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v64);
  *(_BYTE *)(a1 + v52[8]) = a2[v52[8]];
  *(_BYTE *)(a1 + v52[9]) = a2[v52[9]];
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1001DA32C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
  v26 = v16[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = (int *)type metadata accessor for ContextualPreview.Data(0);
  *(_OWORD *)&a1[v29[5]] = *(_OWORD *)&a2[v29[5]];
  *(_OWORD *)&a1[v29[6]] = *(_OWORD *)&a2[v29[6]];
  *(_OWORD *)&a1[v29[7]] = *(_OWORD *)&a2[v29[7]];
  a1[v29[8]] = a2[v29[8]];
  a1[v29[9]] = a2[v29[9]];
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1001DA5E8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_27;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)&a2[v30[6]];
  v48 = v30[7];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_BYTE *)(v49 + 16) = v50[16];
  v51 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v52 = v51[5];
  v53 = (_QWORD *)(a1 + v52);
  v54 = &a2[v52];
  v56 = *(_QWORD *)v54;
  v55 = *((_QWORD *)v54 + 1);
  v57 = v53[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease(v57);
  v58 = v51[6];
  v59 = (_QWORD *)(a1 + v58);
  v60 = &a2[v58];
  v62 = *(_QWORD *)v60;
  v61 = *((_QWORD *)v60 + 1);
  v63 = v59[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease(v63);
  v64 = v51[7];
  v65 = (_QWORD *)(a1 + v64);
  v66 = &a2[v64];
  v68 = *(_QWORD *)v66;
  v67 = *((_QWORD *)v66 + 1);
  v69 = v65[1];
  *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease(v69);
  *(_BYTE *)(a1 + v51[8]) = a2[v51[8]];
  *(_BYTE *)(a1 + v51[9]) = a2[v51[9]];
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1001DAAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DAAC4);
}

uint64_t sub_1001DAAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for ContextualPreview.Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1001DAB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DAB48);
}

uint64_t sub_1001DAB48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ContextualPreview.Data(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1001DABC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ContextualPreview.Data(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EADDD8;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContextualPreview.LayoutStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001DAC7C + 4 * byte_100EADBE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001DACB0 + 4 * byte_100EADBE0[v4]))();
}

uint64_t sub_1001DACB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DACB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DACC0);
  return result;
}

uint64_t sub_1001DACCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DACD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001DACD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DACE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextualPreview.LayoutStyle()
{
  return &type metadata for ContextualPreview.LayoutStyle;
}

unint64_t sub_1001DAD00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5A10;
  if (!qword_1011A5A10)
  {
    v1 = sub_100044B54(&qword_1011A5A18);
    sub_100048748(&qword_1011A58B8, type metadata accessor for ContextualPreview.StackedPreview, (uint64_t)&unk_100EADF94);
    sub_100048748(&qword_1011A58C0, type metadata accessor for ContextualPreview.InlinePreview, (uint64_t)&unk_100EADF44);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5A10);
  }
  return result;
}

unint64_t sub_1001DADA0()
{
  unint64_t result;

  result = qword_1011A5A20;
  if (!qword_1011A5A20)
  {
    result = swift_getWitnessTable(&unk_100EADF1C, &type metadata for ContextualPreview.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1011A5A20);
  }
  return result;
}

uint64_t sub_1001DADE4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97C28, 1);
}

uint64_t sub_1001DADF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97C00, 1);
}

uint64_t sub_1001DAE0C()
{
  return sub_10005610C(&qword_1011A5A60, &qword_1011A2CF0, (void (*)(void))sub_1001DAE30);
}

uint64_t sub_1001DAE30()
{
  return sub_10005610C(&qword_1011A5A68, &qword_1011A5A38, (void (*)(void))sub_1001DAE54);
}

unint64_t sub_1001DAE54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5A70;
  if (!qword_1011A5A70)
  {
    v1 = sub_100044B54(&qword_1011A5A30);
    sub_100049F28(&qword_1011A5A78, &qword_1011A5A28, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5A70);
  }
  return result;
}

unint64_t sub_1001DAEF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C7230;
  if (!qword_1011C7230)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011B57F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C7230);
  }
  return result;
}

uint64_t sub_1001DAF54()
{
  return sub_10005610C(&qword_1011A5B00, &qword_1011A2D10, (void (*)(void))sub_1001DAF78);
}

uint64_t sub_1001DAF78()
{
  return sub_10005610C(&qword_1011A5B08, &qword_1011A5AB0, (void (*)(void))sub_1001DAF9C);
}

unint64_t sub_1001DAF9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5B10;
  if (!qword_1011A5B10)
  {
    v1 = sub_100044B54(&qword_1011A5AA8);
    sub_100049F28(&qword_1011A5B18, &qword_1011A5AA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5B10);
  }
  return result;
}

uint64_t sub_1001DB038()
{
  return sub_10005610C(&qword_1011A5B28, &qword_1011A2D00, (void (*)(void))sub_1001DB05C);
}

uint64_t sub_1001DB05C()
{
  return sub_10005610C(&qword_1011A5B30, &qword_1011A5AD8, (void (*)(void))sub_1001DB080);
}

unint64_t sub_1001DB080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A5B38;
  if (!qword_1011A5B38)
  {
    v1 = sub_100044B54(&qword_1011A5AD0);
    sub_100049F28(&qword_1011A5B40, &qword_1011A5AC8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5B38);
  }
  return result;
}

uint64_t *sub_1001DB11C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = a1[7];
  v3 = a1[8];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  v10 = a1[17];
  v13 = a1[19];
  v14 = a1[18];
  v12 = a1[20];
  v15 = a1[22];
  v16 = a1[21];
  sub_1000E4440(a1[3], a1[4], a1[5], a1[6]);
  swift_retain(v3);
  swift_retain(v2);
  sub_1000E4440(v4, v5, v6, v7);
  swift_retain(v9);
  swift_retain(v8);
  sub_1000E4440(v10, v14, v13, v12);
  swift_retain(v15);
  swift_retain(v16);
  return a1;
}

uint64_t *sub_1001DB1F8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = a1[7];
  v3 = a1[8];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  v10 = a1[17];
  v13 = a1[19];
  v14 = a1[18];
  v12 = a1[20];
  v15 = a1[21];
  v16 = a1[22];
  sub_1000E450C(a1[3], a1[4], a1[5], a1[6]);
  swift_release(v2);
  swift_release(v3);
  sub_1000E450C(v4, v5, v6, v7);
  swift_release(v8);
  swift_release(v9);
  sub_1000E450C(v10, v14, v13, v12);
  swift_release(v15);
  swift_release(v16);
  return a1;
}

uint64_t sub_1001DB2DC()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_100044B54(&qword_1011A5A40);
  v3 = sub_100044B54(&qword_1011A2CF8);
  v4 = sub_100044B54(&qword_1011C92A0);
  v5 = sub_10005610C(&qword_1011A5A58, &qword_1011A2CF8, (void (*)(void))sub_1001DAE0C);
  v6 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  v3 = v0;
  v4 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

unint64_t sub_1001DB3B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = qword_1011A5B98;
  if (!qword_1011A5B98)
  {
    v1 = sub_100044B54(&qword_1011A5BA0);
    v2 = sub_100044B54(&qword_1011A5AE0);
    v6 = sub_100044B54(&qword_1011A2D08);
    v7 = sub_100044B54(&qword_1011C92A0);
    v8 = sub_10005610C(&qword_1011A5B20, &qword_1011A2D08, (void (*)(void))sub_1001DB038);
    v9 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v6 = v2;
    v7 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v4 = sub_100044B54(&qword_1011A2D18);
    v5 = sub_10005610C(&qword_1011A5AF8, &qword_1011A2D18, (void (*)(void))sub_1001DAF54);
    v6 = v4;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A5B98);
  }
  return result;
}

uint64_t sub_1001DB528()
{
  uint64_t v0;

  v0 = type metadata accessor for PlaybackIndicator(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_10058E284();
}

uint64_t sub_1001DB55C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  double v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43[3];

  v41 = a2;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A2A80);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v38 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v13 = *((unsigned __int8 *)a1 + 16);
  v14 = type metadata accessor for PlaybackIndicator(0);
  v15 = sub_100048748(&qword_1011A5BB8, type metadata accessor for PlaybackIndicator, (uint64_t)&unk_100EC2368);
  v16 = StateObject.wrappedValue.getter(v11, v12, v13, v14, v15);
  KeyPath = swift_getKeyPath(&unk_100EAE0D8);
  v18 = swift_getKeyPath(&unk_100EAE100);
  static Published.subscript.getter(v43, v16, KeyPath, v18);
  swift_release(v16);
  swift_release(KeyPath);
  *(_QWORD *)&v19 = swift_release(v18).n128_u64[0];
  v20 = v43[0];
  if (v43[0] && (v21 = objc_msgSend(v43[0], "state", v19), v20, v21 == (id)2))
  {
    v22 = 0x6573756150;
    v23 = 0xE500000000000000;
  }
  else
  {
    v22 = 2036427856;
    v23 = 0xE400000000000000;
  }
  v24 = String.LocalizationValue.init(stringLiteral:)(v22, v23);
  static Locale.current.getter(v24);
  v43[0] = (id)String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
  v43[1] = v25;
  v26 = StateObject.wrappedValue.getter(v11, v12, v13, v14, v15);
  v27 = swift_getKeyPath(&unk_100EAE0D8);
  v28 = swift_getKeyPath(&unk_100EAE100);
  static Published.subscript.getter(&v42, v26, v27, v28);
  swift_release(v26);
  swift_release(v27);
  *(_QWORD *)&v29 = swift_release(v28).n128_u64[0];
  v30 = v42;
  if (v42 && (v31 = objc_msgSend(v42, "state", v29), v30, v31 == (id)2))
  {
    v32 = 0xEA00000000006C6CLL;
    v33 = 0x69662E6573756170;
  }
  else
  {
    v32 = 0xE90000000000006CLL;
    v33 = 0x6C69662E79616C70;
  }
  v34 = sub_100055B68();
  v35 = v38;
  Label<>.init<A>(_:systemImage:)(v43, v33, v32, &type metadata for String, v34);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v41, v35, v40);
}

uint64_t sub_1001DB870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  _OWORD *v20;
  _OWORD v21[2];
  uint64_t v22;
  __int128 v23;
  char v24;

  v1 = type metadata accessor for BorderedProminentButtonStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_1011A5BA8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_OWORD *)(v0 + 16);
  v21[0] = *(_OWORD *)v0;
  v21[1] = v9;
  v22 = *(_QWORD *)(v0 + 32);
  v10 = v22;
  v23 = v21[0];
  v24 = *(_BYTE *)(v0 + 16);
  v11 = swift_allocObject(&unk_1010B54B0, 56, 7);
  v12 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(v0 + 32);
  v20 = v21;
  sub_1001DBCC0((uint64_t *)&v23);
  swift_retain(v10);
  v13 = sub_100007E8C(&qword_1011A2A80);
  v14 = sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v15 = Button.init(action:label:)(sub_1001DBC98, v11, sub_1001DBCB8, v19, v13, v14);
  BorderedProminentButtonStyle.init()(v15);
  v16 = sub_100049F28(&qword_1011A5BB0, &qword_1011A5BA8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v17 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  View.buttonStyle<A>(_:)(v4, v5, v1, v16, v17);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

double _s10PlayButtonVwxx(uint64_t *a1)
{
  double result;

  sub_1000A6174(*a1, a1[1]);
  *(_QWORD *)&result = swift_release(a1[4]).n128_u64[0];
  return result;
}

uint64_t _s10PlayButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain(v7);
  return a1;
}

uint64_t _s10PlayButtonVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  v10 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v11);
  return a1;
}

uint64_t _s10PlayButtonVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1000A6174(v5, v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for QRCode(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QRCode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s10PlayButtonVMa()
{
  return &_s10PlayButtonVN;
}

uint64_t sub_1001DBC58(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97C6C, 1);
}

uint64_t sub_1001DBC68()
{
  uint64_t *v0;

  sub_1000A6174(v0[2], v0[3]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001DBC98()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1001DBCB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001DB55C(*(uint64_t **)(v1 + 16), a1);
}

uint64_t *sub_1001DBCC0(uint64_t *a1)
{
  KeyValueObservationTrigger.keyPath.getter(*a1, a1[1]);
  return a1;
}

uint64_t sub_1001DBCF8()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011A5BA8);
  v1[1] = type metadata accessor for BorderedProminentButtonStyle(255);
  v1[2] = sub_100049F28(&qword_1011A5BB0, &qword_1011A5BA8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v1[3] = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
}

uint64_t sub_1001DBD98(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

int *sub_1001DBDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char v12;
  int *result;
  uint64_t v14;

  v12 = a6 & 1;
  sub_100065228(a1, a7, &qword_1011A5EA0);
  result = (int *)_s7ContextVMa_1(0);
  v14 = a7 + result[5];
  *(_QWORD *)v14 = a2;
  *(_BYTE *)(v14 + 8) = a3;
  *(_QWORD *)(a7 + result[6]) = a4;
  *(_BYTE *)(a7 + result[7]) = a5;
  *(_BYTE *)(a7 + result[8]) = v12;
  return result;
}

uint64_t sub_1001DBE44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_1001DBE5C, 0, 0);
}

uint64_t sub_1001DBE5C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = (void *)v0[2];
  v2 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v3 + 32) = v1;
  v8 = v3;
  specialized Array._endMutation()(v3);
  v0[3] = v8;
  v4 = dword_1011A60F4;
  v5 = v1;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v0[4] = v6;
  *v6 = v0;
  v6[1] = sub_1001DBF08;
  v6[10] = v8;
  return swift_task_switch(sub_1001E0EDC, 0, 0);
}

uint64_t sub_1001DBF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_1001DBF6C, 0, 0);
}

id sub_1001DBF6C()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 40);
  if (!v1)
  {
    v6 = 0;
    return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
  }
  result = objc_msgSend(*(id *)(v0 + 40), "results");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, "allItems");

    v5 = sub_10004A07C(0, &qword_1011A22C0, MPModelPlaylistEntryReaction_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DC020()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1[2] = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UserProfile(0);
  v1[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[6] = v5;
  v1[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[8] = swift_task_alloc(v6);
  v1[9] = swift_task_alloc(v6);
  v1[10] = swift_task_alloc(v6);
  return swift_task_switch(sub_1001DC108, 0, 0);
}

uint64_t sub_1001DC108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  UserProfile.artwork.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 88) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v0 + 96) = v7;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(v1, 1, v6);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 40);
  if (v9 == 1)
  {
    v15 = UserProfile.name.getter();
    v17 = v16;
    static Artwork.monogramArtwork(for:layoutDirection:)(v15, v16, 0, 1, v11);
    v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(uint64_t, uint64_t, __n128))(v13 + 8))(v12, v14, v18);
    sub_10004FF60(v10, &qword_1011A1440);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v13 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v11, v10, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v19 = *(_QWORD *)(v0 + 64);
  sub_10004A160(*(_QWORD *)(v0 + 80), v19, &qword_1011A1440);
  if (v8(v19, 1, v6) == 1)
  {
    v20 = *(_QWORD *)(v0 + 64);
    sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_1011A1440);
    sub_10004FF60(v20, &qword_1011A1440);
    v21 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 64);
    v25 = *(_QWORD *)(v0 + 24);
    v24 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    if (qword_10119BBA8 != -1)
      swift_once(&qword_10119BBA8, sub_1001DF7E0);
    v28 = *(_QWORD *)(v0 + 24);
    v27 = *(_QWORD *)(v0 + 32);
    v29 = *(double *)&qword_1011A5BC0;
    v30 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    objc_msgSend(v30, "displayScale");
    v32 = v31;

    v33 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v27, 1, 1, v33);
    v34 = type metadata accessor for Artwork.ImageFormat(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v28, 1, 1, v34);
    v35 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
    *(_QWORD *)(v0 + 104) = v35;
    *v35 = v0;
    v35[1] = sub_1001DC3EC;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 24), 0, 0, v29, v29, 1.0 / v32);
  }
}

uint64_t sub_1001DC3EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD **)v2;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 104));
  if (v1)
  {
    v6 = v4[3];
    v5 = v4[4];
    swift_errorRelease(v1);
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v5, (uint64_t *)&unk_1011A14A0);
    v7 = sub_1001DC550;
  }
  else
  {
    v8 = v4[11];
    v9 = v4[12];
    v10 = v4[8];
    v11 = v4[3];
    v12 = v4[4];
    v4[14] = a1;
    sub_10004FF60(v11, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v12, (uint64_t *)&unk_1011A14A0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    v7 = sub_1001DC4C8;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001DC4C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 112);
  sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_1011A1440);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1001DC550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_1011A1440);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1001DC5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;

  v2 = v1;
  v47 = a1;
  v3 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A5F88);
  v48 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A5F90);
  v49 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A5F98);
  v13 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  v51 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A5FA0);
  v17 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  v53 = v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = -1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  v20 = v1 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext;
  v21 = _s7ContextVMa_1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = objc_allocWithZone((Class)type metadata accessor for ReactionPickerView(0));
  v23 = (void *)ReactionPickerView.init(reactions:)(v47);
  *(_QWORD *)(v2 + 48) = v23;
  v24 = v23;
  dispatch thunk of ReactionPickerView.$selectedReaction.getter();

  v25 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v54 = (id)static OS_dispatch_queue.main.getter(v25, v26, v27, v28, v29, v30, v31, v32);
  v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v5, 1, 1, v33);
  v34 = sub_100049F28((unint64_t *)&unk_1011A5FB0, &qword_1011A5F88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v35 = sub_10006A92C();
  Publisher.receive<A>(on:options:)(&v54, v5, v6, v25, v34, v35);
  sub_10004FF60((uint64_t)v5, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v6);
  v36 = sub_100049F28(&qword_1011A5FC0, &qword_1011A5F90, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v37 = sub_1000AED54();
  Publisher<>.removeDuplicates()(v9, v36, v37);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v9);
  v38 = sub_100049F28(&qword_1011A5FC8, &qword_1011A5F98, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v39 = v50;
  Publisher.dropFirst(_:)(1, v50, v38);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v39);
  v40 = swift_allocObject(&unk_1010B5640, 24, 7);
  swift_weakInit(v40 + 16, v2);
  v41 = sub_100049F28((unint64_t *)&unk_1011A5FD0, (uint64_t *)&unk_1011A5FA0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v42 = v52;
  v43 = Publisher<>.sink(receiveValue:)(sub_1001E7514, v40, v52, v41);
  v44 = swift_release(v40);
  (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v19, v42, v44);
  v45 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = v43;
  swift_release(v45);
  return v2;
}

void sub_1001DC9C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  BOOL v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  _QWORD *v72;
  uint64_t v73;
  void *v74;
  id v75;
  char *v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint8_t *v104;
  id v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE v128[24];
  char v129[24];
  _QWORD *v130;
  uint64_t v131;
  uint64_t aBlock[5];
  _QWORD *v133;
  char v134[8];
  char v135[8];
  char v136[8];
  char v137[8];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v118 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for DispatchWorkItemFlags(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for DispatchQoS(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for DispatchTime(0);
  v109 = *(_QWORD *)(v119 - 8);
  v8 = __chkstk_darwin(v119);
  v108 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v110 = (char *)&v104 - v10;
  v121 = type metadata accessor for Logger(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = _s7ContextVMa_1(0);
  v124 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v14 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A5FE0);
  v16 = __chkstk_darwin(v15);
  v107 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v106 = (char *)&v104 - v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v104 - v20;
  v22 = sub_100007E8C(&qword_1011A5EA0);
  __chkstk_darwin(v22);
  v24 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s7ContextV6SourceOMa(0);
  v126 = *(_QWORD *)(v25 - 8);
  v26 = *(_QWORD *)(v126 + 64);
  v27 = __chkstk_darwin(v25);
  v117 = (uint64_t)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v122 = (uint64_t)&v104 - v28;
  v125 = *a1;
  v127 = a1[1];
  v29 = a2 + 16;
  swift_beginAccess(v29, v137, 0, 0);
  Strong = swift_weakLoadStrong(v29);
  if (!Strong
    || (v31 = Strong,
        v32 = *(_QWORD *)(Strong + 56),
        v33 = *(_QWORD *)(Strong + 64),
        swift_bridgeObjectRetain(),
        swift_release(v31),
        !v33))
  {
    swift_bridgeObjectRelease(0);
    if (!v127)
      return;
    goto LABEL_11;
  }
  if (!v127)
  {
    swift_bridgeObjectRelease(v33);
    goto LABEL_11;
  }
  if (v32 == v125 && v33 == v127)
  {
    swift_bridgeObjectRelease(v33);
    return;
  }
  v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v125, v127, 0);
  swift_bridgeObjectRelease(v33);
  if ((v34 & 1) == 0)
  {
LABEL_11:
    swift_beginAccess(v29, v136, 0, 0);
    v35 = swift_weakLoadStrong(v29);
    if (!v35)
    {
LABEL_14:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v126 + 56))(v24, 1, 1, v25);
LABEL_15:
      sub_10004FF60((uint64_t)v24, &qword_1011A5EA0);
      return;
    }
    v36 = v35;
    v37 = v35 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext;
    swift_beginAccess(v35 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext, v135, 0, 0);
    sub_10004A160(v37, (uint64_t)v21, &qword_1011A5FE0);
    v38 = swift_release(v36);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v124 + 48))(v21, 1, v123, v38))
    {
      sub_10004FF60((uint64_t)v21, &qword_1011A5FE0);
      goto LABEL_14;
    }
    sub_10005B704((uint64_t)v21, (uint64_t)v14, _s7ContextVMa_1);
    sub_10004FF60((uint64_t)v21, &qword_1011A5FE0);
    sub_10004A160((uint64_t)v14, (uint64_t)v24, &qword_1011A5EA0);
    sub_10005B748((uint64_t)v14, _s7ContextVMa_1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v24, 1, v25) == 1)
      goto LABEL_15;
    v39 = v122;
    sub_10005B6C0((uint64_t)v24, v122, _s7ContextV6SourceOMa);
    swift_beginAccess(v29, v134, 0, 0);
    v40 = swift_weakLoadStrong(v29);
    if (!v40 || (v41 = v40, v42 = *(void **)(v40 + 32), v43 = v42, swift_release(v41), !v42))
    {
      sub_10005B748(v39, _s7ContextV6SourceOMa);
      return;
    }
    v44 = Logger.collaboration.unsafeMutableAddressor();
    v45 = v120;
    v46 = v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v12, v44, v121);
    v47 = v127;
    v48 = swift_bridgeObjectRetain_n(v127, 2);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter();
    v51 = os_log_type_enabled(v49, v50);
    v105 = v43;
    if (v51)
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = swift_slowAlloc(32, -1);
      aBlock[0] = v53;
      *(_DWORD *)v52 = 136315138;
      v104 = v52 + 4;
      swift_bridgeObjectRetain();
      v54 = Optional<A>.description.getter(v125, v127);
      v56 = v55;
      swift_bridgeObjectRelease(v127);
      v130 = (_QWORD *)sub_100322200(v54, v56, aBlock);
      v47 = v127;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, &v131);
      swift_bridgeObjectRelease_n(v47, 2);
      swift_bridgeObjectRelease(v56);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "[Reaction] Did react with=%s", v52, 0xCu);
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      v57 = v53;
      v43 = v105;
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v120 + 8))(v12, v121);
    }
    else
    {

      swift_bridgeObjectRelease_n(v47, 2);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v46);
    }
    v58 = (uint64_t *)Reactions.StackView.model.getter();
    v59 = *v58;
    if (v47)
    {
      v60 = v47;
      (*(void (**)(uint64_t))(v59 + 280))(1);
      swift_release(v58);
      v61 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v121 = static OS_dispatch_queue.main.getter(v61, v62, v63, v64, v65, v66, v67, v68);
      v69 = v108;
      static DispatchTime.now()(v121);
      v70 = v110;
      + infix(_:_:)(v69, 2.0);
      v71 = *(void (**)(char *, uint64_t))(v109 + 8);
      v71(v69, v119);
      v72 = (_QWORD *)swift_allocObject(&unk_1010B5690, 40, 7);
      v73 = v125;
      v72[2] = v43;
      v72[3] = v73;
      v72[4] = v60;
      aBlock[4] = (uint64_t)sub_1001E76E8;
      v133 = v72;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1001DBD98;
      aBlock[3] = (uint64_t)&unk_1010B56A8;
      v74 = _Block_copy(aBlock);
      v75 = v43;
      swift_bridgeObjectRetain();
      v76 = v111;
      static DispatchQoS.unspecified.getter(v77);
      v130 = _swiftEmptyArrayStorage;
      v78 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v79 = sub_100007E8C((uint64_t *)&unk_1011A2120);
      v80 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
      v81 = v114;
      v82 = v79;
      v83 = v116;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v130, v82, v80, v116, v78);
      v84 = (void *)v121;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v70, v76, v81, v74);
      _Block_release(v74);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v81, v83);
      (*(void (**)(char *, uint64_t))(v112 + 8))(v76, v113);
      v71(v70, v119);
      swift_release(v133);
      swift_beginAccess(v29, aBlock, 0, 0);
      v85 = swift_weakLoadStrong(v29);
      if (v85)
      {
        v86 = *(void **)(v85 + 32);
        *(_QWORD *)(v85 + 32) = 0;
        swift_release(v85);

      }
      swift_beginAccess(v29, &v130, 0, 0);
      v87 = swift_weakLoadStrong(v29);
      if (!v87)
        goto LABEL_31;
      v58 = (uint64_t *)v87;
      v88 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56))(v106, 1, 1, v123);
      v89 = (uint64_t)v58 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext;
      swift_beginAccess((char *)v58 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext, v129, 0, 0);
      v90 = v107;
      sub_10004A160(v89, v107, &qword_1011A5FE0);
      swift_beginAccess(v89, v128, 33, 0);
      sub_1001E770C(v88, v89);
      swift_endAccess(v128);
      sub_1001E00BC(v90);
      sub_10004FF60(v88, &qword_1011A5FE0);
      sub_10004FF60(v90, &qword_1011A5FE0);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v59 + 136))(v125, 0);
    }
    swift_release(v58);
LABEL_31:
    v91 = type metadata accessor for TaskPriority(0);
    v92 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v118, 1, 1, v91);
    v93 = v122;
    v94 = v117;
    sub_10005B704(v122, v117, _s7ContextV6SourceOMa);
    type metadata accessor for MainActor(0);
    v95 = v127;
    swift_bridgeObjectRetain();
    v97 = static MainActor.shared.getter(v96);
    v98 = *(unsigned __int8 *)(v126 + 80);
    v99 = (v98 + 32) & ~v98;
    v100 = (v26 + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
    v101 = swift_allocObject(&unk_1010B5668, v100 + 16, v98 | 7);
    *(_QWORD *)(v101 + 16) = v97;
    *(_QWORD *)(v101 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0(v94, v101 + v99, _s7ContextV6SourceOMa);
    v102 = (_QWORD *)(v101 + v100);
    *v102 = v125;
    v102[1] = v95;
    v103 = sub_100166D14(v92, (uint64_t)&unk_1011A5FF0, v101);

    swift_release(v103);
    sub_10005B748(v93, _s7ContextV6SourceOMa);
  }
}

double sub_1001DD598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  double result;

  v5 = Reactions.StackView.model.getter();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v5 + 136);
  swift_bridgeObjectRetain();
  v6(a2, a3);
  swift_release(v5);
  v7 = Reactions.StackView.model.getter();
  (*(void (**)(_QWORD))(*(_QWORD *)v7 + 280))(0);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1001DD624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;

  v9 = type metadata accessor for Logger(0);
  v6[3] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[4] = v10;
  v6[5] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[6] = type metadata accessor for MainActor(0);
  v6[7] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_1011A605C);
  v6[8] = v12;
  *v12 = v6;
  v12[1] = sub_1001DD6C8;
  return sub_1001DD958(a5, a6);
}

uint64_t sub_1001DD6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1001DD788;
  else
    v6 = sub_1001DD750;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1001DD750()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DD788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  v5 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v5, v1);
  swift_errorRetain(v2);
  v6 = swift_errorRetain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 72);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v9);
    v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v0 + 16) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    *v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[Reaction] add reaction error=%@", v10, 0xCu);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    swift_errorRelease(v14);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DD958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MusicCollaborativePlaylist.ReactionRequest(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[10] = swift_task_alloc(v8);
  v3[11] = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist.Entry(0);
  v3[12] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[13] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v11);
  v3[15] = swift_task_alloc(v11);
  v12 = _s7ContextV6SourceOMa(0);
  v3[16] = v12;
  v3[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DDA50, 0, 0);
}

uint64_t sub_1001DDA50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0[16];
  v2 = v0[17];
  sub_10005B704(v0[4], v2, _s7ContextV6SourceOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  v4 = v0[17];
  if (EnumCaseMultiPayload == 1)
  {
    v5 = v0[3];
    v6 = *(void **)v4;
    v0[20] = *(_QWORD *)v4;
    v7 = *(void **)(v4 + 8);
    v0[21] = v7;
    if (v5)
    {
      swift_bridgeObjectRetain();
      v8 = v7;
      v9 = v6;
      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v5);
    }
    else
    {
      v21 = v7;
      v22 = v6;
      v10 = 0;
    }
    v23 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryPlaylistEntryReactionChangeRequest), "initWithPlaylist:playlistEntry:reactionText:", v7, v6, v10);
    v0[22] = v23;

    v24 = swift_task_alloc(32);
    v0[23] = v24;
    *(_QWORD *)(v24 + 16) = v23;
    v25 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v0[24] = v25;
    *v25 = v0;
    v25[1] = sub_1001DDE84;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  else
  {
    v11 = v0[15];
    v13 = v0[12];
    v12 = v0[13];
    v14 = v0[11];
    v26 = v0[10];
    v27 = v0[14];
    v16 = v0[8];
    v15 = v0[9];
    v17 = v0[3];
    v28 = v0[2];
    v18 = v4 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v4, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v18, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v26, v14, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v27, v11, v13);
    swift_bridgeObjectRetain();
    MusicCollaborativePlaylist.ReactionRequest.init(playlist:entry:reaction:)(v26, v27, v28, v17);
    v19 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.ReactionRequest.response()[1]);
    v0[18] = v19;
    *v19 = v0;
    v19[1] = sub_1001DDCB0;
    return MusicCollaborativePlaylist.ReactionRequest.response()();
  }
}

uint64_t sub_1001DDCB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001DDDCC;
  else
    v3 = sub_1001DDD14;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001DDD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DDDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v8 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DDE84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001DDF7C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 184));
    v4 = sub_1001DDEF0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001DDEF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 160);

  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DDF7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 168);

  swift_task_dealloc(v1);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_1001DE010(uint64_t a1, uint64_t a2, char a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void **v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *v25;
  __n128 v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  unint64_t v33;
  char v34;
  __n128 v35;
  uint64_t v36;
  _BYTE v38[16];

  v6 = a3 & 1;
  v7 = type metadata accessor for Playlist.Entry(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A5F78);
  v12 = __chkstk_darwin(v11);
  v14 = (uint64_t *)&v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = (void **)((char *)v14 + *(int *)(v12 + 48));
  *v14 = a2;
  *((_BYTE *)v14 + 8) = v6;
  sub_10005B704(a1, (uint64_t)v15, _s7ContextV6SourceOMa);
  v16 = _s7ContextV6SourceOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v16);
  if ((a3 & 1) == 0)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v28 = *v15;
      v29 = v15[1];
      swift_bridgeObjectRetain_n(a2, 2);

      v30 = v28;
      sub_1001E7338(a2, v30);
      v25 = v31;
      swift_bridgeObjectRelease(a2);

      if (!v25)
      {
        swift_bridgeObjectRelease(a2);

        return v25;
      }
      if (*(_QWORD *)(a2 + 16))
      {
        v32 = v25;
        v33 = sub_10079C248((uint64_t)v32);
        if ((v34 & 1) != 0)
        {
          v25 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v33);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease(a2);

          return v25;
        }
        swift_bridgeObjectRelease(a2);

      }
      else
      {
        swift_bridgeObjectRelease(a2);

      }
      return 0;
    }
LABEL_11:
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A5F78);
    return 0;
  }
  if (EnumCaseMultiPayload == 1)
    goto LABEL_11;
  v18 = (char *)v15 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
  (*(void (**)(_BYTE *, void **, uint64_t))(v8 + 32))(v10, v15, v7);
  v19 = swift_bridgeObjectRetain();
  v20 = Playlist.Entry.id.getter(v19);
  v22 = v21;
  if (!*(_QWORD *)(a2 + 16) || (v23 = sub_10079C1D4(v20, v21), (v24 & 1) == 0))
  {
    v35 = swift_bridgeObjectRelease(v22);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v35);
    v36 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v18, v36);
    swift_bridgeObjectRelease(*v14);
    return 0;
  }
  v25 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  v26 = swift_bridgeObjectRelease(v22);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v26);
  v27 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v18, v27);
  swift_bridgeObjectRelease(*v14);
  return v25;
}

uint64_t sub_1001DE2E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1001DE2FC, 0, 0);
}

uint64_t sub_1001DE2FC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (void *)v0[2];
  if (v1)
  {
    v2 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v3 = swift_allocObject(v2, 40, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v3 + 32) = v1;
    v12 = v3;
    specialized Array._endMutation()(v3);
    v0[4] = v12;
    v4 = dword_1011A60EC;
    v5 = v1;
    v6 = (_QWORD *)swift_task_alloc(v4);
    v0[5] = v6;
    *v6 = v0;
    v6[1] = sub_1001DE3F4;
    return sub_1001E7B08(v12);
  }
  else
  {
    v8 = type metadata accessor for MainActor(0);
    v0[8] = static MainActor.shared.getter(v9);
    v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
    return swift_task_switch(sub_1001DE60C, v10, v11);
  }
}

uint64_t sub_1001DE3F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_1001DE458, 0, 0);
}

uint64_t sub_1001DE458()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  __n128 v8;
  uint64_t v9;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 56) = static MainActor.shared.getter(v2);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
    v5 = v4;
    v6 = sub_1001DE510;
  }
  else
  {

    v7 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 64) = static MainActor.shared.getter(v8);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    v5 = v9;
    v6 = sub_1001DE60C;
  }
  return swift_task_switch(v6, v3, v5);
}

uint64_t sub_1001DE510()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 56));
  v2 = *(_BYTE *)(v1 + 24);
  if ((v2 & 1) != 0)
  {
    v7 = 1;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_10013BC6C(v4, v2);
    sub_1001E54CC(v4, v3);
    v6 = v5;
    swift_bridgeObjectRelease(v3);
    sub_10013BC80(v4, v2);
    v7 = v6 ^ 1;
    v2 = *(_BYTE *)(v1 + 24);
  }
  *(_BYTE *)(v0 + 72) = v7 & 1;
  v8 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(v1 + 24) = 0;
  sub_10013BC80(v8, v2);
  return swift_task_switch(sub_1001DE5D8, 0, 0);
}

uint64_t sub_1001DE5D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_1001DE60C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL8 v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = *(unsigned __int8 *)(v1 + 24);
  v3 = v2 != 255;
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = -1;
  sub_10013BC80(v4, v2);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v3);
}

uint64_t sub_1001DE664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A6088);
  v3[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[15] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v6);
  v3[17] = swift_task_alloc(v6);
  v7 = type metadata accessor for Playlist.Entry(0);
  v3[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[19] = v8;
  v3[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v3[21] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[22] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[23] = swift_task_alloc(v11);
  v3[24] = swift_task_alloc(v11);
  v3[25] = swift_task_alloc(v11);
  v12 = sub_100007E8C(&qword_1011A30F0);
  v3[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A6098);
  v3[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[28] = v14;
  v3[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DE798, 0, 0);
}

uint64_t sub_1001DE798()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  CFAbsoluteTime *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  CFAbsoluteTime **v48;
  uint64_t v49;
  _QWORD *v50;
  CFAbsoluteTime *v51;
  uint64_t v52;

  v1 = v0;
  v2 = v0[26];
  v3 = v0[27];
  v4 = v0[18];
  v5 = v0[12];
  v6 = type metadata accessor for Playlist.Entry.Reaction(0);
  v7 = sub_100048748(&qword_1011A60A0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
  v8 = sub_100048748(&qword_1011A60A8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.Reaction, (uint64_t)&protocol conformance descriptor for Playlist.Entry.Reaction);
  MusicLibrarySectionedRequest.init()(v4, v6, v7, v8);
  KeyPath = swift_getKeyPath(&unk_100EAE2C8);
  v10 = type metadata accessor for Playlist(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v2, v5, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v2, 0, 1, v10);
  v12 = sub_100048748((unint64_t *)&qword_1011A60B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  MusicLibrarySectionedRequest<>.filterSections<A>(matching:equalTo:)(KeyPath, v2, v3, &protocol witness table for Playlist.Entry, v12);
  swift_release();
  sub_10004FF60(v2, &qword_1011A30F0);
  v13 = swift_getKeyPath(&unk_100EAE2F0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v15 = sub_100049F28(&qword_1011A60C0, (uint64_t *)&unk_1011ACC20, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = dispatch thunk of Collection.count.getter(v14, v15);
  if (v16)
  {
    v17 = v16;
    v18 = v1 + 6;
    v52 = v15;
    sub_10035C740(0, v16 & ~(v16 >> 63), 0);
    v19 = v15;
    result = dispatch thunk of Collection.startIndex.getter(v14);
    if (v17 < 0)
    {
      __break(1u);
      return result;
    }
    v21 = (CFAbsoluteTime *)v1;
    v50 = v1 + 2;
    v51 = (CFAbsoluteTime *)v1;
    v49 = v1[19];
    do
    {
      v22 = *((_QWORD *)v21 + 20);
      v23 = *((_QWORD *)v21 + 18);
      v24 = v14;
      v25 = (uint64_t (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v50, v18, v14, v19);
      (*(void (**)(uint64_t))(v49 + 16))(v22);
      v26 = v25(v50, 0);
      v27 = Playlist.Entry.id.getter(v26);
      v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v22, v23);
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_10035C740(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v31 = _swiftEmptyArrayStorage[2];
      v30 = _swiftEmptyArrayStorage[3];
      if (v31 >= v30 >> 1)
        sub_10035C740(v30 > 1, v31 + 1, 1);
      _swiftEmptyArrayStorage[2] = v31 + 1;
      v32 = &_swiftEmptyArrayStorage[2 * v31];
      v21 = v51;
      v32[4] = v27;
      v32[5] = v29;
      v14 = v24;
      v19 = v52;
      dispatch thunk of Collection.formIndex(after:)(v18, v24, v52);
      --v17;
    }
    while (v17);
  }
  else
  {
    v21 = (CFAbsoluteTime *)v1;
  }
  v33 = *((_QWORD *)v21 + 27);
  v34 = *((_QWORD *)v21 + 25);
  v36 = *((_QWORD *)v21 + 21);
  v35 = *((_QWORD *)v21 + 22);
  MusicLibrarySectionedRequest.filterSections<A>(matching:memberOf:)(v13, _swiftEmptyArrayStorage, v33, &protocol witness table for Playlist.Entry, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease();
  swift_release();
  v37 = swift_getKeyPath(&unk_100EAE318);
  MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v37, 0, v33);
  swift_release();
  v38 = Logger.collaboration.unsafeMutableAddressor();
  *((_QWORD *)v21 + 30) = v38;
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  *((_QWORD *)v21 + 31) = v39;
  v40 = v39(v34, v38, v36);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "[Reaction] Will process entry reactions", v43, 2u);
    swift_slowDealloc(v43, -1, -1);
  }
  v44 = *((_QWORD *)v21 + 25);
  v45 = *((_QWORD *)v21 + 21);
  v46 = *((_QWORD *)v21 + 22);

  v47 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  *((_QWORD *)v21 + 32) = v47;
  v47(v44, v45);
  v21[33] = CFAbsoluteTimeGetCurrent();
  v48 = (CFAbsoluteTime **)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
  *((_QWORD *)v21 + 34) = v48;
  *v48 = v21;
  v48[1] = (CFAbsoluteTime *)sub_1001DEC10;
  return MusicLibrarySectionedRequest.response()(*((_QWORD *)v21 + 17), *((_QWORD *)v21 + 27));
}

uint64_t sub_1001DEC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001DF088;
  else
    v3 = sub_1001DEC74;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001DEC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double Current;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 64) = sub_100042A8C((uint64_t)_swiftEmptyArrayStorage);
  v2 = MusicLibrarySectionedResponse.sections.getter(v1);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(sub_100007E8C(&qword_1011A60C8) - 8);
    v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1001DF380(v5, (_QWORD *)(v0 + 64));
      v5 += v6;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  v9 = *(_QWORD *)(v0 + 192);
  v10 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 120);
  Current = CFAbsoluteTimeGetCurrent();
  v8(v9, v7, v10);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = *(double *)(v0 + 264);
    v21 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 128);
    v22 = *(_QWORD *)(v0 + 112);
    v23 = swift_slowAlloc(22, -1);
    *(_DWORD *)v23 = 134218240;
    v24 = MusicLibrarySectionedResponse.totalItemCount.getter(v22);
    v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v25(v20, v22);
    *(_QWORD *)(v0 + 72) = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    *(_WORD *)(v23 + 12) = 2048;
    *(double *)(v0 + 80) = Current - v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Reaction] Mapped %ld reactions in %f seconds", (uint8_t *)v23, 0x16u);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 8);
    v25(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  }
  *(_QWORD *)(v0 + 288) = v25;
  v26 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 168);

  v26(v27, v28);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 64);
  v29 = type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 304) = static MainActor.shared.getter(v30);
  v31 = dispatch thunk of Actor.unownedExecutor.getter(v29, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001DEEE8, v31, v32);
}

uint64_t sub_1001DEEE8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  v2 = *(unsigned __int8 *)(v1 + 24);
  if (v2 == 255 || (v2 & 1) == 0)
  {
    v8 = 1;
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 296);
    v5 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_10013BC6C(v5, v2);
    sub_1001E59A8(v5, v4);
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_10013BC80(v5, v2);
    v8 = v7 ^ 1;
    LOBYTE(v2) = *(_BYTE *)(v1 + 24);
  }
  *(_BYTE *)(v0 + 320) = v8 & 1;
  v9 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 296);
  *(_BYTE *)(v1 + 24) = 1;
  sub_10013BC80(v9, v2);
  return swift_task_switch(sub_1001DEFC0, 0, 0);
}

uint64_t sub_1001DEFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  (*(void (**)(_QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v4 = *(unsigned __int8 *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1001DF088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 280);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 248))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 168));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 280);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 56) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[Reaction] Failed to map reactions with error=%@", v6, 0xCu);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 280);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v12 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 168);

  v11(v12, v13);
  v14 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 312) = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001DF264, v16, v17);
}

uint64_t sub_1001DF264()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  v2 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(v0 + 321) = v2;
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = -1;
  sub_10013BC80(v3, v2);
  return swift_task_switch(sub_1001DF2C0, 0, 0);
}

uint64_t sub_1001DF2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  swift_errorRelease(*(_QWORD *)(v0 + 280));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(unsigned __int8 *)(v0 + 321) != 255;
  v6 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v4);
}

void sub_1001DF380(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(_QWORD *, _QWORD);
  char *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v41[4];
  char v42[8];
  _QWORD *v43;

  v39 = a2;
  v2 = type metadata accessor for Playlist.Entry.Reaction(0);
  v3 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  v34 = v3;
  __chkstk_darwin(v2);
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A60D0);
  v38 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A60C8);
  v13 = MusicLibrarySection.item.getter(v12);
  v36 = Playlist.Entry.id.getter(v13);
  v37 = v14;
  v15 = *(double (**)(char *, uint64_t))(v9 + 8);
  v16 = v7;
  v17 = v8;
  v18 = v5;
  v19.n128_f64[0] = v15(v11, v17);
  MusicLibrarySection.items.getter(v12, v19);
  v20 = sub_100049F28((unint64_t *)&unk_1011A60D8, &qword_1011A60D0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v21 = dispatch thunk of Collection.count.getter(v5, v20);
  v22 = _swiftEmptyArrayStorage;
  if (!v21)
  {
LABEL_7:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v18);
    v31 = v39;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v39);
    v41[0] = *v31;
    *v31 = 0x8000000000000000;
    sub_1005ED65C((uint64_t)v22, v36, v37, isUniquelyReferenced_nonNull_native);
    *v31 = v41[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v23 = v21;
  v43 = _swiftEmptyArrayStorage;
  sub_10035C7FC(0, v21 & ~(v21 >> 63), 0);
  v22 = v43;
  dispatch thunk of Collection.startIndex.getter(v5);
  if ((v23 & 0x8000000000000000) == 0)
  {
    v24 = v33;
    v25 = v34;
    v26 = v35;
    v40 = v20;
    do
    {
      v27 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v41, v42, v18, v20);
      (*(void (**)(char *))(v25 + 16))(v26);
      v27(v41, 0);
      v43 = v22;
      v28 = v16;
      v30 = v22[2];
      v29 = v22[3];
      if (v30 >= v29 >> 1)
      {
        sub_10035C7FC(v29 > 1, v30 + 1, 1);
        v22 = v43;
      }
      v22[2] = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v30, v26, v24);
      v20 = v40;
      dispatch thunk of Collection.formIndex(after:)(v42, v18, v40);
      --v23;
      v16 = v28;
    }
    while (v23);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1001DF694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A5FE0);
  v3 = __chkstk_darwin(v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v13[-v6];
  v8 = *(id *)(v0 + 48);
  dispatch thunk of ReactionPickerView.dismiss()();

  v9 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = 0;

  v10 = _s7ContextVMa_1(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v11 = v1 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext, v14, 0, 0);
  sub_10004A160(v11, (uint64_t)v5, &qword_1011A5FE0);
  swift_beginAccess(v11, v13, 33, 0);
  sub_1001E770C((uint64_t)v7, v11);
  swift_endAccess(v13);
  sub_1001E00BC((uint64_t)v5);
  sub_10004FF60((uint64_t)v7, &qword_1011A5FE0);
  return sub_10004FF60((uint64_t)v5, &qword_1011A5FE0);
}

void sub_1001DF7E0()
{
  qword_1011A5BC0 = Int.seconds.getter(42);
}

void sub_1001DF800()
{
  qword_1011A5BC8 = (uint64_t)&off_1010AA520;
}

uint64_t sub_1001DF814(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E18F4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1001E54CC, (uint64_t (*)(uint64_t, uint64_t))sub_1001E59A8);
}

void sub_1001DF828(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  char *v46;
  char v47[24];
  _BYTE v48[24];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[4];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A5FE0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v40 - v8;
  v10 = sub_100007E8C(&qword_1011A5EA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(a1, "window");
  if (v17)
  {
    v44 = v17;
    v45 = v9;
    v46 = v7;
    v18 = Logger.collaboration.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
    v19 = a1;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v43 = v2;
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v42 = swift_slowAlloc(32, -1);
      v51[0] = v42;
      v41 = v22;
      *(_DWORD *)v22 = 136315138;
      v40 = v22 + 4;
      v23 = (uint64_t)&v19[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context];
      swift_beginAccess(&v19[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context], v47, 0, 0);
      sub_10004A160(v23, (uint64_t)v12, &qword_1011A5EA0);
      v24 = String.init<A>(describing:)(v12, v10);
      v26 = v25;
      v49 = sub_100322200(v24, v25, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);

      v27 = v26;
      v2 = v43;
      swift_bridgeObjectRelease(v27);
      v28 = v21;
      v29 = v41;
      _os_log_impl((void *)&_mh_execute_header, v20, v28, "[Reaction] Will present picker for source=%s", v41, 0xCu);
      v30 = v42;
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v31 = *(void **)(v2 + 32);
    *(_QWORD *)(v2 + 32) = v19;
    v32 = v19;

    v33 = (uint64_t)&v32[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context];
    swift_beginAccess(&v32[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context], v51, 0, 0);
    v34 = (uint64_t)v45;
    sub_10005B704(v33, (uint64_t)v45, _s7ContextVMa_1);
    v35 = _s7ContextVMa_1(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
    v36 = v2 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext;
    swift_beginAccess(v2 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext, &v49, 0, 0);
    v37 = (uint64_t)v46;
    sub_10004A160(v36, (uint64_t)v46, &qword_1011A5FE0);
    swift_beginAccess(v36, v48, 33, 0);
    sub_1001E770C(v34, v36);
    swift_endAccess(v48);
    sub_1001E00BC(v37);
    sub_10004FF60(v34, &qword_1011A5FE0);
    sub_10004FF60(v37, &qword_1011A5FE0);
    v38 = *(id *)(v2 + 48);
    v39 = v44;
    dispatch thunk of ReactionPickerView.present(from:in:animated:)(v32, v44, 1);

  }
}

uint64_t sub_1001DFC0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  char v50[24];
  char v51[24];

  v2 = _s7ContextV6SourceOMa(0);
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  __chkstk_darwin(v2);
  v42 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011A5EA0);
  __chkstk_darwin(v4);
  v45 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A5F68);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A5FE0);
  v10 = __chkstk_darwin(v9);
  v44 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v43 = (uint64_t)&v42 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - v14;
  v16 = _s7ContextVMa_1(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v42 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v42 - v24;
  sub_10004A160(a1, (uint64_t)v15, &qword_1011A5FE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_10004FF60((uint64_t)v15, &qword_1011A5FE0);
  sub_10005B6C0((uint64_t)v15, (uint64_t)v25, _s7ContextVMa_1);
  v27 = v48;
  v28 = *(_QWORD *)(v48 + 32);
  v29 = (uint64_t)v25;
  if (v28)
  {
    v30 = v28 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context;
    swift_beginAccess(v28 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context, v51, 0, 0);
    sub_10005B704(v30, (uint64_t)v20, _s7ContextVMa_1);
    v31 = (uint64_t)v23;
    sub_10005B6C0((uint64_t)v20, (uint64_t)v23, _s7ContextVMa_1);
    v32 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_10004A160(v29, (uint64_t)v8, &qword_1011A5EA0);
    sub_10004A160((uint64_t)v23, v32, &qword_1011A5EA0);
    v33 = v47;
    v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
    if (v34((uint64_t)v8, 1, v47) == 1)
    {
      if (v34(v32, 1, v33) == 1)
      {
        sub_10004FF60((uint64_t)v8, &qword_1011A5EA0);
LABEL_12:
        v39 = v43;
        sub_10005B704(v29, v43, _s7ContextVMa_1);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v39, 0, 1, v16);
        v40 = v27 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext;
        swift_beginAccess(v27 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext, v50, 0, 0);
        v41 = v44;
        sub_10004A160(v40, v44, &qword_1011A5FE0);
        swift_beginAccess(v40, v49, 33, 0);
        sub_1001E770C(v39, v40);
        swift_endAccess(v49);
        sub_1001E00BC(v41);
        sub_10004FF60(v39, &qword_1011A5FE0);
        sub_10004FF60(v41, &qword_1011A5FE0);
        goto LABEL_13;
      }
    }
    else
    {
      v36 = v45;
      sub_10004A160((uint64_t)v8, v45, &qword_1011A5EA0);
      if (v34(v32, 1, v33) != 1)
      {
        v37 = v42;
        sub_10005B6C0(v32, v42, _s7ContextV6SourceOMa);
        v38 = sub_1001E61E8(v36, v37);
        sub_10005B748(v37, _s7ContextV6SourceOMa);
        sub_10005B748(v36, _s7ContextV6SourceOMa);
        sub_10004FF60((uint64_t)v8, &qword_1011A5EA0);
        if ((v38 & 1) != 0)
          goto LABEL_12;
LABEL_13:
        sub_10005B748(v31, _s7ContextVMa_1);
        v35 = v29;
        return sub_10005B748(v35, _s7ContextVMa_1);
      }
      sub_10005B748(v36, _s7ContextV6SourceOMa);
    }
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A5F68);
    goto LABEL_13;
  }
  v35 = (uint64_t)v25;
  return sub_10005B748(v35, _s7ContextVMa_1);
}

void sub_1001E00BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  id v26;
  _BYTE v28[24];

  v2 = v1;
  v4 = _s7ContextVMa_1(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100007E8C(&qword_1011A5FE0);
  __chkstk_darwin(v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A6000);
  __chkstk_darwin(v11);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext;
  swift_beginAccess(v2 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext, v28, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10004A160(a1, (uint64_t)v13, &qword_1011A5FE0);
  sub_10004A160(v14, v15, &qword_1011A5FE0);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v13, &qword_1011A5FE0);
      return;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v13, (uint64_t)v10, &qword_1011A5FE0);
    if (v16(v15, 1, v4) != 1)
    {
      sub_10005B6C0(v15, (uint64_t)v7, _s7ContextVMa_1);
      v17 = sub_1001E678C((uint64_t)v10, (uint64_t)v7);
      sub_10005B748((uint64_t)v7, _s7ContextVMa_1);
      sub_10005B748((uint64_t)v10, _s7ContextVMa_1);
      sub_10004FF60((uint64_t)v13, &qword_1011A5FE0);
      if ((v17 & 1) != 0)
        return;
      goto LABEL_8;
    }
    sub_10005B748((uint64_t)v10, _s7ContextVMa_1);
  }
  sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A6000);
LABEL_8:
  if (v16(v14, 1, v4))
  {
    v18 = 0;
    v19 = 0;
  }
  else
  {
    sub_10005B704(v14, (uint64_t)v7, _s7ContextVMa_1);
    v18 = sub_1001E03E0();
    v19 = v20;
    sub_10005B748((uint64_t)v7, _s7ContextVMa_1);
  }
  v21 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 56) = v18;
  *(_QWORD *)(v2 + 64) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v21);
  v22 = *(id *)(v2 + 48);
  dispatch thunk of ReactionPickerView.selectedReaction.setter(v18, v19);

  v23 = *(void **)(v2 + 48);
  if (v16(v14, 1, v4))
  {
    v24 = v23;
    v25 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10005B704(v14, (uint64_t)v7, _s7ContextVMa_1);
    v26 = v23;
    v25 = sub_1001E07F8();
    sub_10005B748((uint64_t)v7, _s7ContextVMa_1);
  }
  dispatch thunk of ReactionPickerView.history.setter(v25);

}

id sub_1001E03E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  id v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  _BYTE v40[4];
  int v41;
  unint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_BYTE *, unint64_t, uint64_t);
  uint64_t v47;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v2);
  v4 = &v40[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for Playlist.Entry.Reaction(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100007E8C(&qword_1011A6010);
  __chkstk_darwin(v9);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10119B8C8 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v12 = qword_10124C7A0;
  swift_retain(qword_10124C7A0);
  v13 = Collaboration.Manager.participantProfile.getter();
  *(_QWORD *)&v14 = swift_release(v12).n128_u64[0];
  if (!v13)
    return v13;
  v15 = objc_msgSend(v13, "socialProfileID", v14);

  if (!v15)
    return 0;
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = v1 + *(int *)(_s7ContextVMa_1(0) + 20);
  v19 = *(unsigned __int8 *)(v18 + 8);
  if (v19 == 255)
  {
    swift_bridgeObjectRelease(v17);
    return 0;
  }
  v45 = v17;
  v20 = *(_QWORD *)v18;
  if ((v19 & 1) != 0)
  {
    v33 = v45;
    swift_bridgeObjectRetain();
    v34 = sub_1001E711C(v20, v47, v33);
    swift_bridgeObjectRelease_n(v33, 2);
    if (!v34)
      return 0;
    v35 = objc_msgSend(v34, "reactionText");

    if (!v35)
      return 0;
    v13 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v35);

    return v13;
  }
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
    v36 = 1;
    goto LABEL_24;
  }
  v41 = v19;
  v42 = v20;
  v43 = v11;
  v22 = v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v23 = *(_QWORD *)(v6 + 72);
  v46 = *(uint64_t (**)(_BYTE *, unint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v44 = v5;
  while (1)
  {
    v24 = v46(v8, v22, v5);
    Playlist.Entry.Reaction.socialProfile.getter(v24);
    v25 = type metadata accessor for SocialProfile(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v4, 1, v25) == 1)
    {
      sub_10004FF60((uint64_t)v4, &qword_1011C8D50);
      goto LABEL_10;
    }
    v27 = v6;
    v28 = v23;
    v29 = SocialProfile.id.getter();
    v31 = v30;
    (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v4, v25);
    if (v29 == v47 && v31 == v45)
      break;
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v47, v45, 0);
    swift_bridgeObjectRelease(v31);
    v23 = v28;
    v6 = v27;
    v5 = v44;
    if ((v32 & 1) != 0)
      goto LABEL_23;
LABEL_10:
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v22 += v23;
    if (!--v21)
    {
      sub_10013BC80(v42, v41);
      v36 = 1;
      v11 = v43;
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease(v45);
  v6 = v27;
  v5 = v44;
LABEL_23:
  sub_10013BC80(v42, v41);
  v11 = v43;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v43, v8, v5);
  v36 = 0;
LABEL_24:
  v37 = v45;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, v36, 1, v5);
  v38 = swift_bridgeObjectRelease(v37);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 48))(v11, 1, v5, v38) == 1)
  {
    sub_10004FF60((uint64_t)v11, &qword_1011A6010);
    return 0;
  }
  v13 = (id)Playlist.Entry.Reaction.value.getter();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v13;
}

_QWORD *sub_1001E07F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void (*v26)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *result;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  uint64_t ObjCClassFromMetadata;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[4];
  int v67;
  uint64_t v68;
  _BYTE *v69;
  unint64_t v70;
  _BYTE *v71;
  void (*v72)(_BYTE *, unint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD aBlock[5];
  uint64_t v78;

  v1 = sub_100007E8C(&qword_1011A6018);
  v2 = __chkstk_darwin(v1);
  v4 = &v66[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v66[-v5];
  v7 = type metadata accessor for ReactionHistoryEntry(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v74 = (uint64_t)&v66[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __chkstk_darwin(v9);
  v69 = &v66[-v12];
  v13 = __chkstk_darwin(v11);
  v15 = &v66[-v14];
  __chkstk_darwin(v13);
  v71 = &v66[-v16];
  v17 = type metadata accessor for Playlist.Entry.Reaction(0);
  v75 = *(_QWORD **)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = &v66[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = v0 + *(int *)(_s7ContextVMa_1(0) + 20);
  v21 = *(unsigned __int8 *)(v20 + 8);
  if (v21 == 255)
    return _swiftEmptyArrayStorage;
  v22 = *(_QWORD *)v20;
  v73 = *(_QWORD *)v20;
  v76 = v8;
  if ((v21 & 1) != 0)
  {
    v67 = v21;
    if ((unint64_t)v22 >> 62)
    {
      if (v22 >= 0)
        v64 = v22 & 0xFFFFFFFFFFFFFF8;
      else
        v64 = v73;
      swift_bridgeObjectRetain();
      v65 = v64;
      v22 = v73;
      result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v65);
      v32 = (uint64_t)result;
      if (result)
        goto LABEL_16;
    }
    else
    {
      v32 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = (_QWORD *)swift_bridgeObjectRetain();
      if (v32)
      {
LABEL_16:
        if (v32 < 1)
        {
          __break(1u);
          return result;
        }
        v34 = 0;
        v70 = v22 & 0xC000000000000001;
        v75 = _swiftEmptyArrayStorage;
        v71 = (_BYTE *)v32;
        v72 = (void (*)(_BYTE *, unint64_t, uint64_t))v4;
        while (1)
        {
          if (v70)
            v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v22);
          else
            v35 = *(id *)(v22 + 8 * v34 + 32);
          v36 = v35;
          v37 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
          v38 = objc_msgSend(v36, "socialProfile");
          if (v38)
          {
            v39 = v38;
            sub_10004A07C(0, (unint64_t *)&qword_1011A2360, UIImage_ptr);
            ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
            v41 = swift_allocObject(&unk_1010B56E0, 24, 7);
            *(_QWORD *)(v41 + 16) = v39;
            aBlock[4] = sub_1001E7778;
            v78 = v41;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10040BBE4;
            aBlock[3] = &unk_1010B56F8;
            v42 = _Block_copy(aBlock);
            v43 = v78;
            v44 = v39;
            objc_msgSend(v37, "registerObjectOfClass:visibility:loadHandler:", ObjCClassFromMetadata, 0, v42, swift_release(v43).n128_f64[0]);
            _Block_release(v42);

          }
          v45 = objc_msgSend(v36, "socialProfile");
          v46 = v45;
          if (!v45)
            goto LABEL_29;
          v47 = objc_msgSend(v45, "name");

          if (!v47)
            break;
          v46 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
          v49 = v48;

LABEL_30:
          v50 = objc_msgSend(v36, "reactionText");
          if (v50)
          {
            v51 = v50;
            v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
            v54 = v53;

          }
          else
          {
            v52 = 0;
            v54 = 0xE000000000000000;
          }
          v55 = v46;
          v56 = (uint64_t)v72;
          ReactionHistoryEntry.init(displayName:reaction:avatarImageProvider:)(v55, v49, v52, v54, v37);
          v57 = v76;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v56, 0, 1, v7);

          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v56, 1, v7) == 1)
          {
            sub_10004FF60(v56, &qword_1011A6018);
          }
          else
          {
            v58 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 32);
            v59 = v69;
            v58(v69, v56, v7);
            v58((_BYTE *)v74, (uint64_t)v59, v7);
            if ((swift_isUniquelyReferenced_nonNull_native(v75) & 1) != 0)
              v60 = (unint64_t)v75;
            else
              v60 = sub_100431C68(0, v75[2] + 1, 1, (unint64_t)v75);
            v62 = *(_QWORD *)(v60 + 16);
            v61 = *(_QWORD *)(v60 + 24);
            if (v62 >= v61 >> 1)
              v60 = sub_100431C68(v61 > 1, v62 + 1, 1, v60);
            *(_QWORD *)(v60 + 16) = v62 + 1;
            v63 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
            v75 = (_QWORD *)v60;
            v58((_BYTE *)(v60 + v63 + *(_QWORD *)(v57 + 72) * v62), v74, v7);
          }
          v22 = v73;
          if (v71 == (_BYTE *)++v34)
          {
            sub_10013BC80(v73, v67);
            return v75;
          }
        }
        v46 = 0;
LABEL_29:
        v49 = 0xE000000000000000;
        goto LABEL_30;
      }
    }
    sub_10013BC80(v22, v67);
    return _swiftEmptyArrayStorage;
  }
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23)
    return _swiftEmptyArrayStorage;
  v67 = v21;
  v24 = v22 + ((*((unsigned __int8 *)v75 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v75 + 80));
  v74 = v75[9];
  v72 = (void (*)(_BYTE *, unint64_t, uint64_t))v75[2];
  swift_bridgeObjectRetain();
  v25 = _swiftEmptyArrayStorage;
  v70 = (unint64_t)v15;
  v68 = v17;
  do
  {
    v72(v19, v24, v17);
    sub_1001E1AA8((uint64_t)v6);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    ((void (*)(_BYTE *, uint64_t))v75[1])(v19, v17);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10004FF60((uint64_t)v6, &qword_1011A6018);
    }
    else
    {
      v26 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
      v27 = v71;
      v26(v71, v6, v7);
      v26(v15, v27, v7);
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) != 0)
        v28 = (unint64_t)v25;
      else
        v28 = sub_100431C68(0, v25[2] + 1, 1, (unint64_t)v25);
      v30 = *(_QWORD *)(v28 + 16);
      v29 = *(_QWORD *)(v28 + 24);
      if (v30 >= v29 >> 1)
        v28 = sub_100431C68(v29 > 1, v30 + 1, 1, v28);
      *(_QWORD *)(v28 + 16) = v30 + 1;
      v8 = v76;
      v25 = (_QWORD *)v28;
      v31 = v28
          + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
          + *(_QWORD *)(v76 + 72) * v30;
      v15 = (_BYTE *)v70;
      v26((_BYTE *)v31, (_BYTE *)v70, v7);
      v17 = v68;
    }
    v24 += v74;
    --v23;
  }
  while (v23);
  sub_10013BC80(v73, v67);
  return v25;
}

uint64_t sub_1001E0EC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return swift_task_switch(sub_1001E0EDC, 0, 0);
}

uint64_t sub_1001E0EDC()
{
  _QWORD *v0;
  unint64_t v1;
  id v2;
  id v3;
  id v4;
  void *ObjCClassFromMetadata;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Class v24;
  id v25;
  unint64_t v26;
  id v27;
  Class v28;
  Class v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  Class v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;

  v1 = v0[10];
  v2 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
  v0[11] = v2;
  sub_10004A07C(0, (unint64_t *)&unk_10119E4E0, MPModelPlaylistEntry_ptr);
  v3 = v2;
  v4 = static MPModelPlaylistEntry.defaultMusicKind.getter();
  objc_msgSend(v3, "setSectionKind:", v4);

  sub_10004A07C(0, (unint64_t *)&unk_1011A6100, MPModelPlaylistEntryReactionKind_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v6 = v3;
  v7 = objc_msgSend(ObjCClassFromMetadata, "identityKind");
  objc_msgSend(v6, "setItemKind:", v7);

  v8 = v0[10];
  if (v1 >> 62)
  {
    if (v8 < 0)
      v46 = v0[10];
    else
      v46 = v1 & 0xFFFFFFFFFFFFFF8;
    v47 = sub_10004A07C(0, (unint64_t *)&unk_1011A9930, MPModelObject_ptr);
    swift_bridgeObjectRetain();
    v10 = _bridgeCocoaArray<A>(_:)(v46, v47);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    sub_10004A07C(0, (unint64_t *)&unk_1011A9930, MPModelObject_ptr);
    v10 = v0[10];
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A9930, MPModelObject_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setScopedContainers:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = sub_100007E8C((uint64_t *)&unk_1011A6110);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v13 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistEntryReactionText);
  *(_QWORD *)(v13 + 40) = v14;
  v15 = MPModelPropertyPlaylistEntryReactionDate;
  *(_QWORD *)(v13 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistEntryReactionDate);
  *(_QWORD *)(v13 + 56) = v16;
  v17 = sub_100007E8C((uint64_t *)&unk_10119E570);
  inited = swift_initStackObject(v17, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryReactionSocialProfile);
  *(_QWORD *)(inited + 40) = v19;
  v20 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v20 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonName);
  *(_QWORD *)(v20 + 40) = v21;
  *(_QWORD *)(v20 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonArtwork);
  *(_QWORD *)(v20 + 56) = v22;
  v23 = v6;
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  v25 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v24);

  *(_QWORD *)(inited + 48) = v25;
  v26 = sub_1000422C4(inited);
  v27 = objc_allocWithZone((Class)MPPropertySet);
  v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
  v29 = Dictionary._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v27, "initWithProperties:relationships:", v28, v29, swift_bridgeObjectRelease(v26).n128_f64[0]);

  objc_msgSend(v23, "setItemProperties:", v30);
  v31 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100EA7A90;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v34 = v33;
  v35 = objc_allocWithZone((Class)NSSortDescriptor);
  v36 = v23;
  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v35, "initWithKey:ascending:", v37, 0, swift_bridgeObjectRelease(v34).n128_f64[0]);

  *(_QWORD *)(v32 + 32) = v38;
  specialized Array._endMutation()(v39);
  v40 = v32;
  sub_10004A07C(0, &qword_1011A6128, NSSortDescriptor_ptr);
  v41 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v36, "setItemSortDescriptors:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

  v42 = swift_task_alloc(32);
  v0[12] = v42;
  *(_QWORD *)(v42 + 16) = v36;
  v43 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[13] = v43;
  v44 = sub_100007E8C(&qword_1011A6130);
  *v43 = v0;
  v43[1] = sub_1001E1408;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 9, 0, 0, 0xD000000000000018, 0x8000000100E31020, sub_1001E8058, v42, v44);
}

uint64_t sub_1001E1408()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1001E1464, 0, 0);
}

uint64_t sub_1001E1464()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

double sub_1001E1498(uint64_t a1, void *a2, uint64_t a3, _QWORD *a4, void *a5)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  double result;
  uint64_t v15;

  v8 = a2;
  v9 = objc_msgSend(a5, "itemsInSectionAtIndex:", a1);
  v10 = sub_10004A07C(0, &qword_1011A22C0, MPModelPlaylistEntryReaction_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
  v15 = *a4;
  *a4 = 0x8000000000000000;
  sub_1005ED670(v11, v8, isUniquelyReferenced_nonNull_native);
  v13 = *a4;
  *a4 = v15;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

uint64_t sub_1001E1560()
{
  uint64_t v0;

  sub_10013BC80(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  sub_10004FF60(v0 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions10Controller_currentEntryContext, &qword_1011A5FE0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001E15C4()
{
  return _s10ControllerCMa(0);
}

uint64_t _s10ControllerCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A5C00, (uint64_t)&_s10ControllerCMn);
}

void sub_1001E15E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\t";
  v4[1] = &unk_100EAE190;
  v4[2] = &unk_100EAE190;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = &unk_100EAE1A8;
  sub_10015C698(319, (unint64_t *)&unk_1011A5C20, _s7ContextVMa_1);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t _s7ContextVMa_1(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A5F00, (uint64_t)&_s7ContextVMn_1);
}

uint64_t sub_1001E16A0(char *a1, char *a2)
{
  return sub_1005D21BC(*a1, *a2);
}

Swift::Int sub_1001E16AC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x6979616C50776F6ELL;
  if (v1)
    v3 = 0xEE006C6961746544;
  else
    v3 = 0xEA0000000000676ELL;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001E173C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x6979616C50776F6ELL;
  if (*v1)
    v3 = 0xEE006C6961746544;
  else
    v3 = 0xEA0000000000676ELL;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001E17A8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x7473696C79616C70;
  else
    v3 = 0x6979616C50776F6ELL;
  if (v2)
    v4 = 0xEE006C6961746544;
  else
    v4 = 0xEA0000000000676ELL;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1001E1834@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AAC00, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1001E1890(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6979616C50776F6ELL;
  if (*v1)
    v2 = 0x7473696C79616C70;
  v3 = 0xEA0000000000676ELL;
  if (*v1)
    v3 = 0xEE006C6961746544;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1001E18E0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E18F4(a1, a2, a3, a4, sub_1002EC310, sub_1002EC4D0);
}

uint64_t sub_1001E18F4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  int v10;

  v8 = *a1;
  v9 = *a2;
  v10 = *((unsigned __int8 *)a2 + 8);
  if ((a1[1] & 1) != 0)
  {
    a5 = a6;
    if (!v10)
      return 0;
  }
  else if ((v10 & 1) != 0)
  {
    return 0;
  }
  return a5(v8, v9);
}

uint64_t sub_1001E1928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t (*v9)(_QWORD);
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Entry(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s7ContextV6SourceOMa(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v10 = *v8;

    v11 = objc_msgSend(v10, "innermostModelObject");
    v12 = MPModelObject.bestIdentifier(for:)(0, 2u);

  }
  else
  {
    v13 = (*(uint64_t (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    v14 = Playlist.Entry.catalogID.getter(v13);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v16)
      v12 = v14;
    else
      v12 = 0;
    v17 = (char *)v8 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v18 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  return v12;
}

uint64_t sub_1001E1AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v34 = a1;
  v2 = sub_100007E8C(&qword_1011C8D50);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for SocialProfile(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - v13;
  v15 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v33 = v1;
  Playlist.Entry.Reaction.socialProfile.getter(v15);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v16(v7, 1, v8) == 1)
  {
    v17 = sub_10004FF60((uint64_t)v7, &qword_1011C8D50);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v18(v14, v7, v8);
    sub_10004A07C(0, (unint64_t *)&qword_1011A2360, UIImage_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    v19 = *(unsigned __int8 *)(v9 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = swift_allocObject(&unk_1010B5730, v20 + v10, v19 | 7);
    v18((char *)(v21 + v20), v12, v8);
    aBlock[4] = sub_1001E77E0;
    v36 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10040BBE4;
    aBlock[3] = &unk_1010B5748;
    v22 = _Block_copy(aBlock);
    *(_QWORD *)&v23 = swift_release(v36).n128_u64[0];
    objc_msgSend(v15, "registerObjectOfClass:visibility:loadHandler:", ObjCClassFromMetadata, 0, v22, v23);
    _Block_release(v22);
    v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  Playlist.Entry.Reaction.socialProfile.getter(v17);
  if (v16(v5, 1, v8) == 1)
  {
    sub_10004FF60((uint64_t)v5, &qword_1011C8D50);
LABEL_7:
    swift_bridgeObjectRelease(0);
    v24 = 0;
    v26 = 0xE000000000000000;
    goto LABEL_8;
  }
  v24 = SocialProfile.name.getter();
  v26 = v25;
  v27 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v5, v8);
  if (!v26)
    goto LABEL_7;
LABEL_8:
  v28 = Playlist.Entry.Reaction.value.getter(v27);
  return ReactionHistoryEntry.init(displayName:reaction:avatarImageProvider:)(v24, v26, v28, v29, v15);
}

uint64_t sub_1001E1D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for Playlist.Entry.Reaction(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + *(int *)(_s7ContextVMa_1(0) + 20);
  v6 = *(unsigned __int8 *)(v5 + 8);
  if (v6 == 255)
    return 0;
  v7 = *(_QWORD *)v5;
  if ((v6 & 1) == 0)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      v8 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, v7 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v1);
      v9 = Playlist.Entry.Reaction.value.getter(v8);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v9;
    }
    return 0;
  }
  if (!((unint64_t)v7 >> 62))
  {
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_7;
LABEL_16:
    sub_10013BC80(v7, v6);
    return 0;
  }
  if (v7 >= 0)
    v15 = v7 & 0xFFFFFFFFFFFFFF8;
  else
    v15 = *(_QWORD *)v5;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!result)
    goto LABEL_16;
LABEL_7:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_10:
    v13 = v12;
    sub_10013BC80(v7, v6);
    v14 = objc_msgSend(v13, "reactionText");

    if (v14)
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);

      return v9;
    }
    return 0;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v7 + 32);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_1001E1F2C(uint64_t a1, uint64_t a2)
{
  void *v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  int v26;
  uint64_t v27;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v58;
  _QWORD v59[4];
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  objc_super v71;

  v68 = a2;
  v4 = (int *)_s7ContextVMa_1(0);
  v64 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v65 = v5;
  v66 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v62 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v60 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011A6150);
  v61 = *(_QWORD *)(v67 - 8);
  v10 = __chkstk_darwin(v67);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v70 = (char *)&v60 - v13;
  v14 = type metadata accessor for Reactions.StackView(0);
  __chkstk_darwin(v14);
  v69 = (uint64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = v2;
  v17 = sub_1001E1D84();
  v19 = v18;
  v20 = a1;
  v21 = a1 + v4[5];
  v22 = *(unsigned __int8 *)(v21 + 8);
  if (v22 == 255)
  {
    v24 = 0;
  }
  else
  {
    v23 = *(_QWORD *)v21;
    if ((v22 & 1) != 0)
    {
      if ((unint64_t)v23 >> 62)
      {
        if (v23 >= 0)
          v58 = v23 & 0xFFFFFFFFFFFFFF8;
        else
          v58 = *(_QWORD *)v21;
        swift_bridgeObjectRetain();
        v24 = _CocoaArrayWrapper.endIndex.getter(v58);
        sub_10013BC80(v23, v22);
      }
      else
      {
        v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v24 = *(_QWORD *)(v23 + 16);
    }
  }
  v25 = *(void **)(v20 + v4[6]);
  v26 = *(unsigned __int8 *)(v20 + v4[7]);
  v27 = type metadata accessor for Reactions.StackView.Model(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = v25;
  v63 = Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(v17, v19, v24, (uint64_t)v25, v26);
  swift_retain(v63);
  v29 = v69;
  v31 = Reactions.StackView.init(model:)(v30, v69);
  __chkstk_darwin(v31);
  v59[2] = v29;
  v32 = sub_100048748(&qword_1011A6158, type metadata accessor for Reactions.StackView, (uint64_t)&protocol conformance descriptor for Reactions.StackView);
  v33 = UIHostingConfiguration<>.init(content:)(sub_1001E8118, v59, v14, v32);
  v34 = static Edge.Set.all.getter(v33);
  v35 = v67;
  UIHostingConfiguration.margins(_:_:)(v34, v67, 0.0);
  v61 = *(_QWORD *)(v61 + 8);
  ((void (*)(char *, uint64_t))v61)(v12, v35);
  sub_10005B704((uint64_t)v29, (uint64_t)&v16[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_reactionsStackView], type metadata accessor for Reactions.StackView);
  *(_QWORD *)&v16[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_contentView] = UIHostingConfiguration.makeContentView()(v35);
  sub_10005B704(v20, (uint64_t)&v16[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context], _s7ContextVMa_1);
  v36 = v68;
  *(_QWORD *)&v16[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_controller] = v68;
  swift_retain(v36);

  v37 = (objc_class *)_s7ControlCMa(0);
  v71.receiver = v16;
  v71.super_class = v37;
  v38 = (char *)objc_msgSendSuper2(&v71, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v39 = v60;
  v40 = String.LocalizationValue.init(stringLiteral:)(0x6E6F697463616552, 0xEF6E6F7474756220);
  v41 = v62;
  static Locale.current.getter(v40);
  String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, 0, v41, "Accessibility Label", 19, 2);
  v43 = v42;
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setAccessibilityLabel:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

  v45 = OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_contentView;
  v46 = *(void **)&v38[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_contentView];
  objc_msgSend(v46, "setUserInteractionEnabled:", 0);
  v47 = (void *)objc_opt_self(UIColor);
  v48 = v46;
  v49 = objc_msgSend(v47, "clearColor");
  objc_msgSend(v48, "setBackgroundColor:", v49);

  v50 = *(void **)&v38[v45];
  objc_msgSend(v50, "setAutoresizingMask:", 18);
  objc_msgSend(v38, "addSubview:", v50);
  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v51 = swift_allocObject(&unk_1010B58E8, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v38);
  v52 = v66;
  sub_10005B704(v20, v66, _s7ContextVMa_1);
  v53 = *(unsigned __int8 *)(v64 + 80);
  v54 = (v53 + 24) & ~v53;
  v55 = swift_allocObject(&unk_1010B5910, v54 + v65, v53 | 7);
  *(_QWORD *)(v55 + 16) = v51;
  sub_10005B6C0(v52, v55 + v54, _s7ContextVMa_1);
  v56 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1001E8294, v55);
  objc_msgSend(v38, "addAction:forControlEvents:", v56, 64);
  swift_release(v63);
  swift_release(v36);

  sub_10005B748(v20, _s7ContextVMa_1);
  ((void (*)(char *, uint64_t))v61)(v70, v35);
  sub_10005B748((uint64_t)v69, type metadata accessor for Reactions.StackView);
  return v38;
}

uint64_t sub_1001E253C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _BYTE v52[24];
  _BYTE v53[24];
  _BYTE v54[24];

  v5 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100007E8C(&qword_10119E460);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  v14 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s7ContextVMa_1(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A5EA0);
  __chkstk_darwin(v20);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v54, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (!result)
    return result;
  v24 = (char *)result;
  v50 = a3;
  v25 = *(_QWORD *)(result + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_controller);
  swift_retain(v25);
  sub_1001DF828(v24);
  swift_release(v25);
  v26 = (uint64_t)&v24[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context];
  swift_beginAccess(&v24[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context], v53, 0, 0);
  sub_10005B704(v26, (uint64_t)v19, _s7ContextVMa_1);
  sub_10004A160((uint64_t)v19, (uint64_t)v22, &qword_1011A5EA0);
  sub_10005B748((uint64_t)v19, _s7ContextVMa_1);
  v27 = _s7ContextV6SourceOMa(0);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v22, 1, v27);
  v51 = v16;
  if (v28 == 1)
  {
    sub_10004FF60((uint64_t)v22, &qword_1011A5EA0);
LABEL_5:
    swift_bridgeObjectRelease(0);
    v29 = 0;
    v31 = 0xE000000000000000;
    goto LABEL_6;
  }
  v29 = sub_1001E1928();
  v31 = v30;
  sub_10005B748((uint64_t)v22, _s7ContextV6SourceOMa);
  if (!v31)
    goto LABEL_5;
LABEL_6:
  v32 = type metadata accessor for URL(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v33(v13, 1, 1, v32);
  v34 = *(_BYTE *)(v50 + *(int *)(v17 + 32)) == 0;
  if (*(_BYTE *)(v50 + *(int *)(v17 + 32)))
    v35 = 0x7473696C79616C70;
  else
    v35 = 0x6979616C50776F6ELL;
  if (v34)
    v36 = 0xEA0000000000676ELL;
  else
    v36 = 0xEE006C6961746544;
  v33(v11, 1, 1, v32);
  swift_bridgeObjectRetain();
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v29, v31, v35, v36, (uint64_t)v11, 0, 0, 0, v7);
  v37 = (uint64_t)v51;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v29, v31, 5, 28, (uint64_t)v13, 0, 0, 9, (uint64_t)v51, 0, 0, 0xFF00u, v7, 0);
  v38 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v40 = v39;
  v42 = v41;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v43 = qword_10124C790;
  swift_retain(qword_10124C790);
  v44 = GroupActivitiesManager.hasJoined.getter();
  v45 = GroupActivitiesManager.participantsCount.getter();
  v46 = (uint64_t *)(v43 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v43 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v52, 0, 0);
  v47 = *v46;
  v48 = swift_release(v43);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v38) + 0xB8))(v37, v40, v42, v44 & 1, v45, v47, v48);

  swift_bridgeObjectRelease(v42);
  return sub_10005B748(v37, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_1001E2B24(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(void *);
  id v27;
  double v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37[24];

  v3 = sub_100007E8C(&qword_1011A5FE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s7ContextVMa_1(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v34 - v11;
  v13 = (uint64_t)&v1[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context];
  swift_beginAccess(&v1[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context], v37, 0, 0);
  sub_10005B704(v13, (uint64_t)v12, _s7ContextVMa_1);
  LOBYTE(a1) = sub_1001E678C(a1, (uint64_t)v12);
  result = sub_10005B748((uint64_t)v12, _s7ContextVMa_1);
  if ((a1 & 1) == 0)
  {
    v35 = v7;
    v36 = v1;
    v15 = Reactions.StackView.model.getter();
    sub_10005B704(v13, (uint64_t)v12, _s7ContextVMa_1);
    v16 = sub_1001E1D84();
    v18 = v17;
    sub_10005B748((uint64_t)v12, _s7ContextVMa_1);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 136))(v16, v18);
    swift_release(v15);
    v19 = Reactions.StackView.model.getter();
    sub_10005B704(v13, (uint64_t)v10, _s7ContextVMa_1);
    v20 = &v10[*(int *)(v6 + 20)];
    v21 = v20[8];
    if (v21 == 255)
    {
      v23 = 0;
    }
    else
    {
      v22 = *(_QWORD *)v20;
      if ((v21 & 1) != 0)
      {
        if ((unint64_t)v22 >> 62)
        {
          if (v22 >= 0)
            v31 = v22 & 0xFFFFFFFFFFFFFF8;
          else
            v31 = *(_QWORD *)v20;
          swift_bridgeObjectRetain();
          v32 = _CocoaArrayWrapper.endIndex.getter(v31);
          v33 = v21;
          v23 = v32;
          sub_10013BC80(v22, v33);
        }
        else
        {
          v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
      }
      else
      {
        v23 = *(_QWORD *)(v22 + 16);
      }
    }
    sub_10005B748((uint64_t)v10, _s7ContextVMa_1);
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 184))(v23);
    swift_release(v19);
    v24 = Reactions.StackView.model.getter();
    v25 = *(void **)(v13 + *(int *)(v6 + 24));
    v26 = *(void (**)(void *))(*(_QWORD *)v24 + 232);
    v27 = v25;
    v26(v25);
    *(_QWORD *)&v28 = swift_release(v24).n128_u64[0];
    v29 = v36;
    objc_msgSend(v36, "invalidateIntrinsicContentSize", v28);
    v30 = *(_QWORD *)&v29[OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_controller];
    sub_10005B704(v13, (uint64_t)v5, _s7ContextVMa_1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v5, 0, 1, v6);
    swift_retain(v30);
    sub_1001DFC0C((uint64_t)v5);
    swift_release(v30);
    return sub_10004FF60((uint64_t)v5, &qword_1011A5FE0);
  }
  return result;
}

id sub_1001E2E44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s7ControlCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001E2EE0()
{
  return _s7ControlCMa(0);
}

uint64_t _s7ControlCMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5DE0, (uint64_t)&_s7ControlCMn);
}

uint64_t sub_1001E2EFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = _s7ContextVMa_1(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Reactions.StackView(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TrackNumberStyle(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *_s7ContextV9ReactionsOMa()
{
  return &_s7ContextV9ReactionsON;
}

char *sub_1001E2FD0(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_QWORD *)a1 = v7;
      *((_QWORD *)a1 + 1) = v8;
      v9 = v7;
      v10 = v8;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v17 = &a1[v16];
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void sub_1001E30C8(id *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v3 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = (char *)a1 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v5 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
}

_QWORD *sub_1001E3150(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *(void **)a2;
    v7 = *(void **)(a2 + 8);
    *a1 = v6;
    a1[1] = v7;
    v8 = v6;
    v9 = v7;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v14 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v15 = (char *)a1 + v14;
    v16 = a2 + v14;
    v17 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void **sub_1001E321C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s7ContextV6SourceOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      v8 = v6;
      v9 = v7;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      v13 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t _s7ContextV6SourceOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A5E68, (uint64_t)&_s7ContextV6SourceOMn);
}

char *sub_1001E331C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1001E33DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s7ContextV6SourceOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1001E34B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[32];
  _QWORD v8[2];

  v2 = type metadata accessor for Playlist.Entry(319);
  if (v3 <= 0x3F)
  {
    v4 = type metadata accessor for Playlist(319);
    if (v5 > 0x3F)
    {
      return v4;
    }
    else
    {
      swift_getTupleTypeLayout2(v7, *(_QWORD *)(v2 - 8) + 64, *(_QWORD *)(v4 - 8) + 64);
      v8[0] = v7;
      v8[1] = &unk_100EAE1E0;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v8);
      return 0;
    }
  }
  return v2;
}

uint64_t _s10ControllerC3MapOwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t _s10ControllerC3MapOwxx(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *_s7ContextV9ReactionsOwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t *_s10ControllerC3MapOwta(uint64_t *a1, uint64_t *a2)
{
  char v3;
  uint64_t v4;

  v3 = *((_BYTE *)a2 + 8);
  v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001E3698(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1001E36A0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *_s10ControllerC3MapOMa()
{
  return &_s10ControllerC3MapON;
}

char *sub_1001E36BC(char *a1, char **a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v10);
  }
  else
  {
    v7 = _s7ContextV6SourceOMa(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011A5EA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
      {
        v11 = *a2;
        v12 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v12;
        v13 = v11;
        v14 = v12;
        v15 = a1;
        v16 = v7;
        v17 = 1;
      }
      else
      {
        v18 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        v19 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v20 = &a1[v19];
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        v15 = a1;
        v16 = v7;
        v17 = 0;
      }
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v23 = a3[5];
    v24 = &a1[v23];
    v25 = (char *)a2 + v23;
    v26 = v25[8];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    if (v26 == 255)
    {
      v24[8] = v25[8];
    }
    else
    {
      v24[8] = v26 & 1;
      swift_bridgeObjectRetain();
    }
    v27 = a3[6];
    v28 = a3[7];
    v29 = *(char **)((char *)a2 + v27);
    *(_QWORD *)&a1[v27] = v29;
    a1[v28] = *((_BYTE *)a2 + v28);
    a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
    v30 = v29;
  }
  return a1;
}

void sub_1001E388C(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;

  v4 = _s7ContextV6SourceOMa(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
    {

    }
    else
    {
      v5 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      v6 = (char *)a1 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v7 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    }
  }
  v8 = (char *)a1 + *(int *)(a2 + 20);
  if (v8[8] != 255)
    swift_bridgeObjectRelease(*(_QWORD *)v8);

}

void **sub_1001E3974(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;

  v6 = _s7ContextV6SourceOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A5EA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v9 = *a2;
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = v9;
      v12 = v10;
      v13 = a1;
      v14 = v6;
      v15 = 1;
    }
    else
    {
      v16 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v13 = a1;
      v14 = v6;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = a3[5];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = v23[8];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  if (v24 == 255)
  {
    v22[8] = v23[8];
  }
  else
  {
    v22[8] = v24 & 1;
    swift_bridgeObjectRetain();
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = *(void **)((char *)a2 + v25);
  *(void **)((char *)a1 + v25) = v27;
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v28 = v27;
  return a1;
}

void **sub_1001E3B18(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = _s7ContextV6SourceOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
      {
        v11 = *a2;
        *a1 = *a2;
        v12 = a2[1];
        a1[1] = v12;
        v13 = v11;
        v14 = v12;
        v15 = a1;
        v16 = v6;
        v17 = 1;
      }
      else
      {
        v23 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        v24 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        v15 = a1;
        v16 = v6;
        v17 = 0;
      }
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_13;
    }
LABEL_7:
    v18 = sub_100007E8C(&qword_1011A5EA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  if (v10)
  {
    sub_10005B748((uint64_t)a1, _s7ContextV6SourceOMa);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s7ContextV6SourceOMa);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v19 = *a2;
      *a1 = *a2;
      v20 = a2[1];
      a1[1] = v20;
      v21 = v19;
      v22 = v20;
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      v42 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
      v43 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      swift_storeEnumTagMultiPayload(a1, v6, 0);
    }
  }
LABEL_13:
  v28 = a3[5];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *((unsigned __int8 *)a1 + v28 + 8);
  v32 = *((unsigned __int8 *)a2 + v28 + 8);
  if (v31 == 255)
  {
    if (v32 == 255)
    {
      v34 = *(_QWORD *)v30;
      v29[8] = v30[8];
      *(_QWORD *)v29 = v34;
    }
    else
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v32 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v32 == 255)
  {
    sub_1001E3E14(v29);
    v33 = v30[8];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v33;
  }
  else
  {
    v35 = *(_QWORD *)v30;
    v36 = *(_QWORD *)v29;
    *(_QWORD *)v29 = v35;
    v29[8] = v32 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v36);
  }
  v37 = a3[6];
  v38 = *(void **)((char *)a1 + v37);
  v39 = *(void **)((char *)a2 + v37);
  *(void **)((char *)a1 + v37) = v39;
  v40 = v39;

  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1001E3E14(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

char *sub_1001E3E3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = _s7ContextV6SourceOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A5EA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v9 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload(a1, v6, 0);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = a3[5];
  v15 = a3[6];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v18] = a2[v18];
  return a1;
}

char *sub_1001E3FA4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = _s7ContextV6SourceOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)a1, _s7ContextV6SourceOMa);
      if (!swift_getEnumCaseMultiPayload(a2, v6))
      {
        v26 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        v27 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        goto LABEL_14;
      }
      v11 = *(_QWORD *)(v7 + 64);
LABEL_8:
      memcpy(a1, a2, v11);
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)a1, _s7ContextV6SourceOMa);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A5EA0) - 8) + 64);
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(a2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v13 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload(a1, v6, 0);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v17 = a3[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (a1[v17 + 8] != 255)
  {
    v20 = v19[8];
    if (v20 != 255)
    {
      v21 = *(_QWORD *)v18;
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v18[8] = v20 & 1;
      swift_bridgeObjectRelease(v21);
      goto LABEL_19;
    }
    sub_1001E3E14(v18);
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
LABEL_19:
  v22 = a3[6];
  v23 = *(void **)&a1[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];

  v24 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v24] = a2[v24];
  return a1;
}

uint64_t sub_1001E421C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E4228);
}

uint64_t sub_1001E4228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100007E8C(&qword_1011A5EA0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1001E42B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E42C0);
}

uint64_t sub_1001E42C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011A5EA0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

void sub_1001E433C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10015C698(319, (unint64_t *)&unk_1011A5F10, _s7ContextV6SourceOMa);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_100EAE190;
    v4[3] = &unk_100EAE208;
    v4[4] = &unk_100EAE208;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

char *sub_1001E43D4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  id v9;
  uint64_t v11;

  v4 = _s7ContextVMa_1(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704((uint64_t)v2 + *(int *)(a2 + 20), (uint64_t)v6, v7);
  v8 = *v2;
  v9 = objc_allocWithZone((Class)_s7ControlCMa(0));
  swift_retain(v8);
  return sub_1001E1F2C((uint64_t)v6, v8);
}

uint64_t sub_1001E4470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v6 = _s7ContextVMa_1(0);
  __chkstk_darwin(v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v14[-v10];
  sub_10005B704(v3 + *(int *)(a3 + 20), (uint64_t)&v14[-v10], _s7ContextVMa_1);
  v12 = a1 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context;
  swift_beginAccess(a1 + OBJC_IVAR____TtCE5MusicO11MusicCoreUI9Reactions7Control_context, v15, 0, 0);
  sub_10005B704(v12, (uint64_t)v8, _s7ContextVMa_1);
  swift_beginAccess(v12, v14, 33, 0);
  sub_10013BEA8((uint64_t)v11, v12);
  swift_endAccess(v14);
  sub_1001E2B24((uint64_t)v8);
  sub_10005B748((uint64_t)v11, _s7ContextVMa_1);
  return sub_10005B748((uint64_t)v8, _s7ContextVMa_1);
}

uint64_t sub_1001E4590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748((unint64_t *)&unk_1011A6200, _s6ButtonVMa, (uint64_t)&unk_100EAE440);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001E45F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748((unint64_t *)&unk_1011A6200, _s6ButtonVMa, (uint64_t)&unk_100EAE440);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1001E4660(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748((unint64_t *)&unk_1011A6200, _s6ButtonVMa, (uint64_t)&unk_100EAE440);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1001E469C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1[2] = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SocialProfile(0);
  v1[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[6] = v5;
  v1[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[8] = swift_task_alloc(v6);
  v1[9] = swift_task_alloc(v6);
  v1[10] = swift_task_alloc(v6);
  return swift_task_switch(sub_1001E4784, 0, 0);
}

uint64_t sub_1001E4784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  SocialProfile.artwork.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 88) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v0 + 96) = v7;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(v1, 1, v6);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 40);
  if ((_DWORD)v9 == 1)
  {
    v15 = SocialProfile.name.getter(v9);
    v17 = v16;
    static Artwork.monogramArtwork(for:layoutDirection:)(v15, v16, 0, 1, v11);
    v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(uint64_t, uint64_t, __n128))(v13 + 8))(v12, v14, v18);
    sub_10004FF60(v10, &qword_1011A1440);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v13 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v11, v10, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v19 = *(_QWORD *)(v0 + 64);
  sub_10004A160(*(_QWORD *)(v0 + 80), v19, &qword_1011A1440);
  if (v8(v19, 1, v6) == 1)
  {
    v20 = *(_QWORD *)(v0 + 64);
    sub_10004FF60(*(_QWORD *)(v0 + 80), &qword_1011A1440);
    sub_10004FF60(v20, &qword_1011A1440);
    v21 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 64);
    v25 = *(_QWORD *)(v0 + 24);
    v24 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    if (qword_10119BBA8 != -1)
      swift_once(&qword_10119BBA8, sub_1001DF7E0);
    v28 = *(_QWORD *)(v0 + 24);
    v27 = *(_QWORD *)(v0 + 32);
    v29 = *(double *)&qword_1011A5BC0;
    v30 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    objc_msgSend(v30, "displayScale");
    v32 = v31;

    v33 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v27, 1, 1, v33);
    v34 = type metadata accessor for Artwork.ImageFormat(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v28, 1, 1, v34);
    v35 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
    *(_QWORD *)(v0 + 104) = v35;
    *v35 = v0;
    v35[1] = sub_1001E4A68;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 24), 0, 0, v29, v29, 1.0 / v32);
  }
}

uint64_t sub_1001E4A68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD **)v2;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 104));
  if (v1)
  {
    v6 = v4[3];
    v5 = v4[4];
    swift_errorRelease(v1);
    sub_10004FF60(v6, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v5, (uint64_t *)&unk_1011A14A0);
    v7 = sub_1001E91A8;
  }
  else
  {
    v8 = v4[11];
    v9 = v4[12];
    v10 = v4[8];
    v11 = v4[3];
    v12 = v4[4];
    v4[14] = a1;
    sub_10004FF60(v11, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v12, (uint64_t *)&unk_1011A14A0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    v7 = sub_1001E91C0;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001E4B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;

  v6 = type metadata accessor for SocialProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_1010B5780, v16 + 16, v14 | 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v9, v6);
  v18 = (_QWORD *)(v17 + v16);
  *v18 = a1;
  v18[1] = a2;
  swift_retain(a2);
  v19 = sub_100166D14((uint64_t)v12, (uint64_t)&unk_1011A6028, v17);
  swift_release(v19);
  return 0;
}

uint64_t sub_1001E4CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v7 = (_QWORD *)swift_task_alloc(dword_1011A6034);
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_1001E4CF4;
  return sub_1001E469C();
}

uint64_t sub_1001E4CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001E4D50, 0, 0);
}

uint64_t sub_1001E4D50()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, _QWORD);
  id v3;

  v1 = *(void **)(v0 + 40);
  v2 = *(void (**)(void *, _QWORD))(v0 + 16);
  if (v1)
  {
    v3 = v1;
    v2(v1, 0);

  }
  else
  {
    v2(0, 0);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E4DB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject(&unk_1010B57A8, 56, 7);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a3;
  v10[5] = a1;
  v10[6] = a2;
  v11 = a3;
  swift_retain(a2);
  v12 = sub_100166D14((uint64_t)v8, (uint64_t)&unk_1011A6048, (uint64_t)v10);
  swift_release(v12);
  return 0;
}

uint64_t sub_1001E4E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[2] = a5;
  v6[3] = a6;
  v8 = (_QWORD *)swift_task_alloc(dword_1011A6054);
  v6[4] = v8;
  *v8 = v6;
  v8[1] = sub_1001E4EFC;
  v8[5] = a4;
  return swift_task_switch(sub_1001E4F70, 0, 0);
}

uint64_t sub_1001E4EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001E91D8, 0, 0);
}

uint64_t sub_1001E4F58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch(sub_1001E4F70, 0, 0);
}

uint64_t sub_1001E4F70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  _QWORD *v7;

  v1 = MPModelSharedListeningParticipant.preferredArtworkCatalog.getter();
  *(_QWORD *)(v0 + 48) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = (void *)v1;
  v3 = Collaboration.artworkCaching.unsafeMutableAddressor();
  swift_beginAccess(v3, v0 + 16, 0, 0);
  v4 = *v3;
  *(_QWORD *)(v0 + 56) = *v3;
  v5 = *(_QWORD *)(v4 + 24);
  swift_retain(v4);
  swift_bridgeObjectRetain();
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheIdentifier:forCacheReference:", v6, v4, swift_bridgeObjectRelease(v5).n128_f64[0]);

  objc_msgSend(v2, "setFittingSize:", 42.0, 42.0);
  objc_msgSend(v2, "setDestinationScale:", 0.0);
  v7 = (_QWORD *)swift_task_alloc(dword_1011D6E24);
  *(_QWORD *)(v0 + 64) = v7;
  *v7 = v0;
  v7[1] = sub_1001E5088;
  return MPArtworkCatalog.getImage()();
}

uint64_t sub_1001E5088(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t (*v5)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 64));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = sub_1001E513C;
  }
  else
  {
    *(_QWORD *)(v4 + 72) = a1;
    v5 = sub_1001E5100;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001E5100()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1001E513C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1001E5174(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v4 = sub_100007E8C(&qword_1011A6068);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1010B57D0, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1001E7A3C;
  v13 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001E5304;
  aBlock[3] = &unk_1010B57E8;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "performWithResponseHandler:", v11, swift_release(v13).n128_f64[0]);
  _Block_release(v11);
}

uint64_t sub_1001E52A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    v4 = a1;
    swift_errorRetain(a1);
    v1 = sub_100007E8C(&qword_1011A6068);
    return CheckedContinuation.resume(throwing:)(&v4, v1);
  }
  else
  {
    v3 = sub_100007E8C(&qword_1011A6068);
    return CheckedContinuation.resume(returning:)(v3, v3);
  }
}

void sub_1001E5304(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

void sub_1001E5358(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v4 = sub_100007E8C(&qword_1011A6138);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_1010B5898, v8 + v6, v7 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1001E80C8;
  v12 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E2F4;
  aBlock[3] = &unk_1010B58B0;
  v10 = _Block_copy(aBlock);
  objc_msgSend(a2, "performWithResponseHandler:", v10, swift_release(v12).n128_f64[0]);
  _Block_release(v10);
}

uint64_t sub_1001E5488(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;

  v4 = a1;
  v1 = a1;
  v2 = sub_100007E8C(&qword_1011A6138);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

void sub_1001E54CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  id v29;
  void *v30;
  char v31;
  id v32;
  id v33;
  void *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  char v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  unint64_t v50;
  int64_t v51;

  if (a1 == a2)
    return;
  v2 = a2;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v3 = 0;
  v46 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v47 = (unint64_t)(v4 + 63) >> 6;
  v48 = a1;
  while (1)
  {
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      v8 = (v6 - 1) & v6;
      v9 = v7 | (v3 << 6);
    }
    else
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
        goto LABEL_90;
      }
      if (v10 >= v47)
        return;
      v11 = *(_QWORD *)(v46 + 8 * v10);
      ++v3;
      if (!v11)
      {
        v3 = v10 + 1;
        if (v10 + 1 >= v47)
          return;
        v11 = *(_QWORD *)(v46 + 8 * v3);
        if (!v11)
        {
          v3 = v10 + 2;
          if (v10 + 2 >= v47)
            return;
          v11 = *(_QWORD *)(v46 + 8 * v3);
          if (!v11)
          {
            v3 = v10 + 3;
            if (v10 + 3 >= v47)
              return;
            v11 = *(_QWORD *)(v46 + 8 * v3);
            if (!v11)
            {
              v12 = v10 + 4;
              if (v12 >= v47)
                return;
              v11 = *(_QWORD *)(v46 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  v3 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    goto LABEL_92;
                  if (v3 >= v47)
                    return;
                  v11 = *(_QWORD *)(v46 + 8 * v3);
                  ++v12;
                  if (v11)
                    goto LABEL_24;
                }
              }
              v3 = v12;
            }
          }
        }
      }
LABEL_24:
      v8 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v3 << 6);
    }
    v13 = 8 * v9;
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v13);
    v15 = *(id *)(*(_QWORD *)(a1 + 48) + v13);
    swift_bridgeObjectRetain();
    v16 = sub_10079C248((uint64_t)v15);
    v18 = v17;

    if ((v18 & 1) == 0)
    {
      v19 = v14;
      goto LABEL_81;
    }
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v16);
    v51 = v3;
    if ((unint64_t)v19 >> 62)
    {
      v43 = v19 < 0 ? *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v16) : v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v19, 2);
      v20 = _CocoaArrayWrapper.endIndex.getter(v43);
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v50 = v8;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v44 = v14;
      else
        v44 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v45 = _CocoaArrayWrapper.endIndex.getter(v44);
      swift_bridgeObjectRelease(v14);
      if (v20 != v45)
        goto LABEL_80;
    }
    else if (v20 != *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_80;
    }
    if (v20)
    {
      v21 = v19 & 0xFFFFFFFFFFFFFF8;
      v22 = (v19 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v19 < 0)
        v21 = v19;
      if ((unint64_t)v19 >> 62)
        v22 = v21;
      v23 = v14 & 0xFFFFFFFFFFFFFF8;
      v24 = (v14 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v14 < 0)
        v23 = v14;
      if ((unint64_t)v14 >> 62)
        v24 = v23;
      if (v22 != v24)
      {
        if (v20 < 0)
          goto LABEL_87;
        v25 = v19 & 0xC000000000000001;
        if ((v19 & 0xC000000000000001) != 0)
        {
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
        }
        else
        {
          if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_88;
          v26 = *(id *)(v19 + 32);
        }
        v27 = v26;
        v28 = v14 & 0xC000000000000001;
        if ((v14 & 0xC000000000000001) != 0)
        {
          v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
        }
        else
        {
          if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_89;
          v29 = *(id *)(v14 + 32);
        }
        v30 = v29;
        sub_10004A07C(0, &qword_1011A22C0, MPModelPlaylistEntryReaction_ptr);
        v31 = static NSObject.== infix(_:_:)(v27, v30);

        if ((v31 & 1) == 0)
          goto LABEL_80;
        if (v20 != 1)
          break;
      }
    }
LABEL_6:
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v19);
    a1 = v48;
    v2 = a2;
    v6 = v50;
    v3 = v51;
  }
  if (!v25)
  {
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v32 = *(id *)(v19 + 40);
      if (!v28)
        goto LABEL_54;
LABEL_51:
      v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v14);
LABEL_56:
      v34 = v33;
      v35 = static NSObject.== infix(_:_:)(v32, v33);

      if ((v35 & 1) != 0)
      {
        v36 = 2 - v20;
        v37 = 6;
        do
        {
          if (v36 + v37 == 6)
            goto LABEL_6;
          v41 = v37 - 4;
          if (v25)
          {
            v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v19);
            if (v28)
              goto LABEL_58;
          }
          else
          {
            if (v41 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_85:
              __break(1u);
              goto LABEL_86;
            }
            v42 = *(id *)(v19 + 8 * v37);
            if (v28)
            {
LABEL_58:
              v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v14);
              goto LABEL_59;
            }
          }
          if (v41 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_85;
          v38 = *(id *)(v14 + 8 * v37);
LABEL_59:
          v39 = v38;
          v40 = static NSObject.== infix(_:_:)(v42, v38);

          ++v37;
        }
        while ((v40 & 1) != 0);
      }
LABEL_80:
      swift_bridgeObjectRelease(v14);
LABEL_81:
      swift_bridgeObjectRelease(v19);
      return;
    }
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v19);
  if (v28)
    goto LABEL_51;
LABEL_54:
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v33 = *(id *)(v14 + 40);
    goto LABEL_56;
  }
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
}

void sub_1001E59A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;

  v4 = type metadata accessor for Playlist.Entry.Reaction(0);
  v46 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v45 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - v7;
  if (a1 != a2 && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v9 = 0;
    v10 = a1 + 64;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    v12 = -1;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    v13 = v12 & *(_QWORD *)(a1 + 64);
    v39 = a2;
    v40 = (unint64_t)(v11 + 63) >> 6;
    v37 = a1 + 64;
    v38 = a1;
    if (!v13)
      goto LABEL_7;
LABEL_6:
    v41 = (v13 - 1) & v13;
    v42 = v9;
    for (i = __clz(__rbit64(v13)) | (v9 << 6); ; i = __clz(__rbit64(v16)) + (v17 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_10079C1D4(v20, v21);
      v25 = v24;
      swift_bridgeObjectRelease(v21);
      if ((v25 & 1) == 0)
        break;
      v26 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v23);
      v27 = *(_QWORD *)(v26 + 16);
      if (v27 != *(_QWORD *)(v22 + 16))
        break;
      if (v27 && v26 != v22)
      {
        v44 = *(_QWORD *)(v26 + 16);
        v28 = v46;
        v29 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        swift_bridgeObjectRetain();
        v30 = 0;
        v43 = *(_QWORD *)(v28 + 72);
        v31 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
        while (1)
        {
          v31(v8, v26 + v29, v4);
          if (v30 >= *(_QWORD *)(v22 + 16))
            break;
          v32 = v45;
          v31(v45, v22 + v29, v4);
          v33 = sub_100048748(&qword_1011A5F60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.Reaction, (uint64_t)&protocol conformance descriptor for Playlist.Entry.Reaction);
          v34 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v32, v4, v33);
          v35 = *(void (**)(char *, uint64_t))(v46 + 8);
          v35(v32, v4);
          v35(v8, v4);
          if ((v34 & 1) == 0)
          {
            swift_bridgeObjectRelease(v22);
            v36 = v26;
            goto LABEL_38;
          }
          ++v30;
          v29 += v43;
          if (v44 == v30)
          {
            swift_bridgeObjectRelease(v22);
            swift_bridgeObjectRelease(v26);
            a1 = v38;
            a2 = v39;
            v10 = v37;
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      swift_bridgeObjectRelease(v22);
LABEL_33:
      v13 = v41;
      v9 = v42;
      if (v41)
        goto LABEL_6;
LABEL_7:
      v15 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_41;
      if (v15 >= v40)
        return;
      v16 = *(_QWORD *)(v10 + 8 * v15);
      v17 = v9 + 1;
      if (!v16)
      {
        v17 = v9 + 2;
        if (v9 + 2 >= v40)
          return;
        v16 = *(_QWORD *)(v10 + 8 * v17);
        if (!v16)
        {
          v17 = v9 + 3;
          if (v9 + 3 >= v40)
            return;
          v16 = *(_QWORD *)(v10 + 8 * v17);
          if (!v16)
          {
            v17 = v9 + 4;
            if (v9 + 4 >= v40)
              return;
            v16 = *(_QWORD *)(v10 + 8 * v17);
            if (!v16)
            {
              v18 = v9 + 5;
              if (v9 + 5 >= v40)
                return;
              v16 = *(_QWORD *)(v10 + 8 * v18);
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_42;
                  if (v17 >= v40)
                    return;
                  v16 = *(_QWORD *)(v10 + 8 * v17);
                  ++v18;
                  if (v16)
                    goto LABEL_22;
                }
              }
              v17 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      v41 = (v16 - 1) & v16;
      v42 = v17;
    }
    v36 = v22;
LABEL_38:
    swift_bridgeObjectRelease(v36);
  }
}

void sub_1001E5D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int64_t v62;
  _BOOL4 v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v4 = type metadata accessor for VideoArtwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v60 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - v8;
  v10 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  __chkstk_darwin(v10);
  v61 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A6070);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v53 - v17;
  if (a1 == a2)
  {
    v63 = 1;
    return;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v63 = 0;
    return;
  }
  v58 = v14;
  v59 = a2;
  v62 = 0;
  v57 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v55 = v20;
  v56 = (unint64_t)(v22 + 63) >> 6;
  v54 = v56 - 1;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v26 = (v24 - 1) & v24;
      v27 = v25 | (v62 << 6);
LABEL_8:
      v28 = v57;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v65 + 16))(v14, *(_QWORD *)(v57 + 48) + *(_QWORD *)(v65 + 72) * v27, v66, v16);
      v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v5 + 72) * v27;
      v30 = sub_100007E8C(&qword_1011A6078);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(&v14[*(int *)(v30 + 48)], v29, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v14, 0, 1, v30);
      goto LABEL_30;
    }
    v31 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v31 < v56)
    {
      v32 = *(_QWORD *)(v55 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v62 + 2;
      ++v62;
      if (v31 + 1 < v56)
      {
        v32 = *(_QWORD *)(v55 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v62 = v31 + 1;
        if (v31 + 2 < v56)
        {
          v32 = *(_QWORD *)(v55 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v62 = v31 + 2;
          if (v31 + 3 < v56)
          {
            v32 = *(_QWORD *)(v55 + 8 * (v31 + 3));
            if (v32)
            {
              v31 += 3;
              goto LABEL_12;
            }
            v33 = v31 + 4;
            v62 = v31 + 3;
            if (v31 + 4 < v56)
              break;
          }
        }
      }
    }
LABEL_29:
    v34 = sub_100007E8C(&qword_1011A6078);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v14, 1, 1, v34);
    v26 = 0;
LABEL_30:
    sub_100065228((uint64_t)v14, (uint64_t)v18, &qword_1011A6070);
    v35 = sub_100007E8C(&qword_1011A6078);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v18, 1, v35);
    v63 = v36 == 1;
    if (v36 == 1)
      return;
    v64 = v26;
    v37 = &v18[*(int *)(v35 + 48)];
    v39 = v65;
    v38 = v66;
    v40 = v5;
    v41 = (uint64_t)v61;
    v42 = v18;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v61, v18, v66);
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v9, v37, v4);
    v43 = v59;
    v44 = v9;
    v45 = sub_10079C3DC(v41);
    v47 = v46;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
    if ((v47 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v4);
      goto LABEL_36;
    }
    v48 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v40 + 72) * v45;
    v49 = v60;
    (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v60, v48, v4);
    v50 = sub_100048748(&qword_1011A6080, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t)&protocol conformance descriptor for VideoArtwork);
    v51 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v44, v4, v50);
    v52 = *(void (**)(char *, uint64_t))(v40 + 8);
    v52(v49, v4);
    v52(v44, v4);
    v9 = v44;
    v5 = v40;
    v14 = v58;
    v18 = v42;
    v24 = v64;
    if ((v51 & 1) == 0)
      return;
  }
  v32 = *(_QWORD *)(v55 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v26 = (v32 - 1) & v32;
    v27 = __clz(__rbit64(v32)) + (v31 << 6);
    v62 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v56)
    {
      v62 = v54;
      goto LABEL_29;
    }
    v32 = *(_QWORD *)(v55 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_1001E61E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  unsigned int v33;
  id v34;
  id v35;
  unsigned __int8 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(void);
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __n128 v64;
  void (*v65)(char *, char *, uint64_t, __n128);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, __n128);
  void (*v74)(char *, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;

  v84 = (char *)a1;
  v85 = a2;
  v81 = type metadata accessor for Playlist(0);
  v83 = *(_QWORD *)(v81 - 8);
  v2 = __chkstk_darwin(v81);
  v79 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v78 = (char *)&v76 - v5;
  v6 = __chkstk_darwin(v4);
  v80 = (char *)&v76 - v7;
  __chkstk_darwin(v6);
  v82 = (char *)&v76 - v8;
  v9 = type metadata accessor for Playlist.Entry(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v76 - v14;
  v16 = _s7ContextV6SourceOMa(0);
  v17 = __chkstk_darwin(v16);
  v19 = (void **)((char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v21 = (char *)&v76 - v20;
  v22 = sub_100007E8C((uint64_t *)&unk_1011A5F50);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (void **)&v25[*(int *)(v23 + 48)];
  sub_10005B704((uint64_t)v84, (uint64_t)v25, _s7ContextV6SourceOMa);
  sub_10005B704(v85, (uint64_t)v26, _s7ContextV6SourceOMa);
  if (swift_getEnumCaseMultiPayload(v25, v16) != 1)
  {
    v77 = v15;
    v84 = v13;
    v85 = v10;
    v37 = v80;
    v38 = v81;
    v39 = v83;
    sub_10005B704((uint64_t)v25, (uint64_t)v21, _s7ContextV6SourceOMa);
    v40 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v41 = &v21[v40];
    if (swift_getEnumCaseMultiPayload(v26, v16) == 1)
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(&v21[v40], v38);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v21, v9);
      goto LABEL_8;
    }
    v76 = v25;
    v42 = *(void (**)(void))(v85 + 32);
    v43 = v21;
    v44 = v9;
    ((void (*)(char *, char *, uint64_t))v42)(v77, v43, v9);
    v42();
    v45 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v46 = v82;
    v47 = v38;
    v45(v82, v41, v38);
    v48 = v37;
    v49 = ((uint64_t (*)(char *, char *, uint64_t))v45)(v37, (char *)v26 + v40, v47);
    v50 = Playlist.Entry.id.getter(v49);
    v52 = v51;
    v54 = Playlist.Entry.id.getter(v50);
    v55 = v53;
    if (v50 == v54 && v52 == v53)
    {
      swift_bridgeObjectRelease_n(v52, 2);
      v56 = v83;
      v57 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
      v58 = v78;
      v57(v78, v46, v47);
      v59 = v79;
      v60 = ((uint64_t (*)(char *, char *, uint64_t))v57)(v79, v37, v47);
      v61 = v85;
    }
    else
    {
      v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, v54, v53, 0);
      swift_bridgeObjectRelease(v52);
      v64 = swift_bridgeObjectRelease(v55);
      v56 = v83;
      v65 = *(void (**)(char *, char *, uint64_t, __n128))(v83 + 16);
      v58 = v78;
      v65(v78, v46, v47, v64);
      v59 = v79;
      v60 = ((uint64_t (*)(char *, char *, uint64_t))v65)(v79, v37, v47);
      v36 = 0;
      v61 = v85;
      if ((v63 & 1) == 0)
      {
LABEL_20:
        v73 = *(void (**)(char *, uint64_t, __n128))(v56 + 8);
        v73(v59, v47, v66);
        ((void (*)(char *, uint64_t))v73)(v58, v47);
        ((void (*)(char *, uint64_t))v73)(v48, v47);
        ((void (*)(char *, uint64_t))v73)(v82, v47);
        v74 = *(void (**)(char *, uint64_t))(v61 + 8);
        v74(v84, v44);
        v74(v77, v44);
        v62 = (uint64_t)v76;
LABEL_21:
        sub_10005B748(v62, _s7ContextV6SourceOMa);
        return v36 & 1;
      }
    }
    v67 = Playlist.id.getter(v60);
    v69 = v68;
    v71 = Playlist.id.getter(v67);
    v72 = v70;
    if (v67 == v71 && v69 == v70)
    {
      v36 = 1;
      v72 = v69;
    }
    else
    {
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v69, v71, v70, 0);
    }
    swift_bridgeObjectRelease(v69);
    v66 = swift_bridgeObjectRelease(v72);
    goto LABEL_20;
  }
  sub_10005B704((uint64_t)v25, (uint64_t)v19, _s7ContextV6SourceOMa);
  v27 = *v19;
  v28 = v19[1];
  if (swift_getEnumCaseMultiPayload(v26, v16) == 1)
  {
    v29 = *v26;
    v30 = v26[1];
    v31 = objc_msgSend(v27, "identifiers");
    v32 = objc_msgSend(v29, "identifiers");
    v33 = objc_msgSend(v31, "intersectsSet:", v32);

    if (v33)
    {
      v34 = objc_msgSend(v28, "identifiers");
      v35 = objc_msgSend(v30, "identifiers");
      v36 = objc_msgSend(v34, "intersectsSet:", v35);

    }
    else
    {
      v36 = 0;
    }

    v62 = (uint64_t)v25;
    goto LABEL_21;
  }

LABEL_8:
  sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011A5F50);
  v36 = 0;
  return v36 & 1;
}

uint64_t sub_1001E678C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  char v64;
  id v65;
  int *v66;
  int v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  int *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v87 = a2;
  v77 = (int *)_s7ContextVMa_1(0);
  v3 = __chkstk_darwin(v77);
  v79 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v78 = (char *)&v76 - v6;
  v7 = __chkstk_darwin(v5);
  v80 = (char *)&v76 - v8;
  v9 = __chkstk_darwin(v7);
  v86 = (uint64_t)&v76 - v10;
  v11 = __chkstk_darwin(v9);
  v84 = (uint64_t)&v76 - v12;
  v13 = __chkstk_darwin(v11);
  v82 = (uint64_t)&v76 - v14;
  v15 = __chkstk_darwin(v13);
  v85 = (uint64_t)&v76 - v16;
  __chkstk_darwin(v15);
  v83 = (uint64_t)&v76 - v17;
  v18 = _s7ContextV6SourceOMa(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A5F68);
  __chkstk_darwin(v22);
  v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011A5EA0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v76 - v30;
  __chkstk_darwin(v29);
  v33 = (char *)&v76 - v32;
  v81 = a1;
  sub_10004A160(a1, (uint64_t)&v76 - v32, &qword_1011A5EA0);
  sub_10004A160(v87, (uint64_t)v31, &qword_1011A5EA0);
  v34 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_10004A160((uint64_t)v33, (uint64_t)v24, &qword_1011A5EA0);
  sub_10004A160((uint64_t)v31, v34, &qword_1011A5EA0);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v35((uint64_t)v24, 1, v18) != 1)
  {
    sub_10004A160((uint64_t)v24, (uint64_t)v28, &qword_1011A5EA0);
    if (v35(v34, 1, v18) != 1)
    {
      sub_10005B6C0(v34, (uint64_t)v21, _s7ContextV6SourceOMa);
      v44 = sub_1001E61E8((uint64_t)v28, (uint64_t)v21);
      sub_10005B748((uint64_t)v21, _s7ContextV6SourceOMa);
      sub_10004FF60((uint64_t)v31, &qword_1011A5EA0);
      sub_10004FF60((uint64_t)v33, &qword_1011A5EA0);
      sub_10005B748((uint64_t)v28, _s7ContextV6SourceOMa);
      sub_10004FF60((uint64_t)v24, &qword_1011A5EA0);
      v36 = v81;
      v37 = v83;
      sub_10005B704(v81, v83, _s7ContextVMa_1);
      v38 = v87;
      v39 = v85;
      sub_10005B704(v87, v85, _s7ContextVMa_1);
      v40 = (uint64_t)v80;
      v41 = v86;
      v42 = v82;
      v43 = v84;
      if ((v44 & 1) != 0)
        goto LABEL_8;
LABEL_13:
      sub_10005B748(v39, _s7ContextVMa_1);
      sub_10005B748(v37, _s7ContextVMa_1);
      v54 = (uint64_t)v78;
LABEL_19:
      sub_10005B704(v36, v42, _s7ContextVMa_1);
      sub_10005B704(v38, v43, _s7ContextVMa_1);
LABEL_20:
      sub_10005B748(v43, _s7ContextVMa_1);
      sub_10005B748(v42, _s7ContextVMa_1);
      v55 = (uint64_t)v79;
LABEL_21:
      sub_10005B704(v36, v41, _s7ContextVMa_1);
      sub_10005B704(v38, v40, _s7ContextVMa_1);
LABEL_22:
      sub_10005B748(v40, _s7ContextVMa_1);
      sub_10005B748(v41, _s7ContextVMa_1);
      sub_10005B704(v36, v54, _s7ContextVMa_1);
      sub_10005B704(v38, v55, _s7ContextVMa_1);
LABEL_23:
      v56 = 0;
      goto LABEL_24;
    }
    sub_10004FF60((uint64_t)v31, &qword_1011A5EA0);
    sub_10004FF60((uint64_t)v33, &qword_1011A5EA0);
    sub_10005B748((uint64_t)v28, _s7ContextV6SourceOMa);
LABEL_6:
    sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A5F68);
    v36 = v81;
    v37 = v83;
    sub_10005B704(v81, v83, _s7ContextVMa_1);
    v38 = v87;
    v39 = v85;
    sub_10005B704(v87, v85, _s7ContextVMa_1);
    v40 = (uint64_t)v80;
    v41 = v86;
    v42 = v82;
    v43 = v84;
    goto LABEL_13;
  }
  sub_10004FF60((uint64_t)v31, &qword_1011A5EA0);
  sub_10004FF60((uint64_t)v33, &qword_1011A5EA0);
  if (v35(v34, 1, v18) != 1)
    goto LABEL_6;
  sub_10004FF60((uint64_t)v24, &qword_1011A5EA0);
  v36 = v81;
  v37 = v83;
  sub_10005B704(v81, v83, _s7ContextVMa_1);
  v38 = v87;
  v39 = v85;
  sub_10005B704(v87, v85, _s7ContextVMa_1);
  v40 = (uint64_t)v80;
  v41 = v86;
  v42 = v82;
LABEL_8:
  v45 = v77[5];
  v46 = (uint64_t *)(v37 + v45);
  v47 = *(unsigned __int8 *)(v37 + v45 + 8);
  v48 = v39 + v45;
  v49 = *(_QWORD *)v48;
  v50 = v39;
  v51 = *(unsigned __int8 *)(v48 + 8);
  if (v47 == 255)
  {
    sub_10013BC6C(*(_QWORD *)v48, *(_BYTE *)(v48 + 8));
    sub_10005B748(v50, _s7ContextVMa_1);
    sub_10005B748(v37, _s7ContextVMa_1);
    if (v51 == 255)
    {
      sub_10005B704(v36, v42, _s7ContextVMa_1);
      v43 = v84;
      sub_10005B704(v38, v84, _s7ContextVMa_1);
      v54 = (uint64_t)v78;
      goto LABEL_28;
    }
    sub_10013BC80(v49, v51);
    v54 = (uint64_t)v78;
    goto LABEL_18;
  }
  v52 = *v46;
  if (v51 == 255)
    goto LABEL_17;
  if ((v47 & 1) == 0)
  {
    if ((v51 & 1) == 0)
    {
      sub_10013BC6C(*(_QWORD *)v48, *(_BYTE *)(v48 + 8));
      sub_10013BC6C(v52, v47);
      v53 = sub_1002EC310(v52, v49);
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if ((v51 & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    sub_10005B748(v85, _s7ContextVMa_1);
    sub_10005B748(v37, _s7ContextVMa_1);
    sub_10013BC80(v52, v47);
    v54 = (uint64_t)v78;
    v41 = v86;
LABEL_18:
    v43 = v84;
    goto LABEL_19;
  }
  sub_10013BC6C(*(_QWORD *)v48, *(_BYTE *)(v48 + 8));
  sub_10013BC6C(v52, v47);
  v53 = sub_1002EC4D0(v52, v49);
LABEL_27:
  v58 = v53;
  sub_10013BC80(v49, v51);
  sub_10005B748(v85, _s7ContextVMa_1);
  sub_10005B748(v83, _s7ContextVMa_1);
  sub_10013BC80(v52, v47);
  sub_10005B704(v36, v42, _s7ContextVMa_1);
  v43 = v84;
  sub_10005B704(v38, v84, _s7ContextVMa_1);
  v54 = (uint64_t)v78;
  v41 = v86;
  if ((v58 & 1) == 0)
    goto LABEL_20;
LABEL_28:
  v59 = v77[6];
  v60 = *(void **)(v42 + v59);
  v61 = *(void **)(v43 + v59);
  if (!v60)
  {
    v65 = v61;
    sub_10005B748(v43, _s7ContextVMa_1);
    sub_10005B748(v42, _s7ContextVMa_1);
    if (!v61)
    {
      v41 = v86;
      sub_10005B704(v36, v86, _s7ContextVMa_1);
      sub_10005B704(v38, v40, _s7ContextVMa_1);
      v55 = (uint64_t)v79;
      goto LABEL_34;
    }
    goto LABEL_51;
  }
  if (!v61)
  {
    v65 = v60;
    sub_10005B748(v43, _s7ContextVMa_1);
    sub_10005B748(v82, _s7ContextVMa_1);
LABEL_51:

    v55 = (uint64_t)v79;
    v41 = v86;
    goto LABEL_21;
  }
  sub_10004A07C(0, (unint64_t *)&qword_1011A2360, UIImage_ptr);
  v62 = v61;
  v63 = v60;
  v64 = static NSObject.== infix(_:_:)(v63, v62);
  sub_10005B748(v43, _s7ContextVMa_1);
  sub_10005B748(v82, _s7ContextVMa_1);

  v41 = v86;
  sub_10005B704(v36, v86, _s7ContextVMa_1);
  sub_10005B704(v38, v40, _s7ContextVMa_1);
  v55 = (uint64_t)v79;
  if ((v64 & 1) == 0)
    goto LABEL_22;
LABEL_34:
  v66 = v77;
  v67 = *(unsigned __int8 *)(v41 + v77[7]);
  sub_10005B748(v41, _s7ContextVMa_1);
  v68 = *(unsigned __int8 *)(v40 + v66[7]);
  sub_10005B748(v40, _s7ContextVMa_1);
  sub_10005B704(v36, v54, _s7ContextVMa_1);
  sub_10005B704(v38, v55, _s7ContextVMa_1);
  if (v67 != v68)
    goto LABEL_23;
  v69 = v66[8];
  v70 = *(unsigned __int8 *)(v54 + v69);
  v71 = *(unsigned __int8 *)(v55 + v69);
  if (v70)
    v72 = 0x7473696C79616C70;
  else
    v72 = 0x6979616C50776F6ELL;
  if (v70)
    v73 = 0xEE006C6961746544;
  else
    v73 = 0xEA0000000000676ELL;
  if (v71)
    v74 = 0x7473696C79616C70;
  else
    v74 = 0x6979616C50776F6ELL;
  if (v71)
    v75 = 0xEE006C6961746544;
  else
    v75 = 0xEA0000000000676ELL;
  if (v72 == v74 && v73 == v75)
  {
    swift_bridgeObjectRelease_n(v73, 2);
    v56 = 1;
  }
  else
  {
    v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v74, v75, 0);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v75);
  }
LABEL_24:
  sub_10005B748(v55, _s7ContextVMa_1);
  sub_10005B748(v54, _s7ContextVMa_1);
  return v56 & 1;
}

void *sub_1001E711C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char **v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v4 = a1;
  if (a1 >> 62)
    goto LABEL_22;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v5)
  {
    do
    {
      v30 = v4;
      v6 = v4 & 0xC000000000000001;
      v7 = 4;
      v8 = &selRef_setMetricsOverlay_;
      while (1)
      {
        v9 = v6 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v4) : *(id *)(v4 + 8 * v7);
        v10 = v9;
        v11 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        v12 = objc_msgSend(v9, v8[438]);
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v12, "identifiers");

          v15 = objc_msgSend(v14, "universalStore");
          if (v15)
          {
            v16 = objc_msgSend(v15, "socialProfileID");
            swift_unknownObjectRelease(v15);
            if (v16)
            {
              v17 = v5;
              v18 = v6;
              v19 = v8;
              v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
              v22 = v21;

              if (v20 == a2 && v22 == a3)
              {
                swift_bridgeObjectRelease(v30);
                v25 = a3;
                goto LABEL_20;
              }
              v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, a2, a3, 0);
              swift_bridgeObjectRelease(v22);
              v8 = v19;
              v6 = v18;
              v5 = v17;
              v4 = v30;
              if ((v24 & 1) != 0)
              {
                v25 = v30;
LABEL_20:
                swift_bridgeObjectRelease(v25);
                return v10;
              }
            }
          }
        }

        ++v7;
        if (v11 == v5)
          goto LABEL_26;
      }
      __break(1u);
LABEL_22:
      v26 = a3;
      if (v4 < 0)
        v27 = v4;
      else
        v27 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v28 = _CocoaArrayWrapper.endIndex.getter(v27);
      a3 = v26;
      v5 = v28;
    }
    while (v28);
  }
LABEL_26:
  swift_bridgeObjectRelease(v4);
  return 0;
}

void sub_1001E7338(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  id v16;
  unsigned int v17;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * i);
    v16 = objc_msgSend(a2, "identifiers");
    v17 = objc_msgSend(v15, "intersectsSet:", v16);

    if (v17)
    {
LABEL_23:
      swift_release(a1);
      return;
    }

    if (v7)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8)
      goto LABEL_23;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_23;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_23;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_23;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
          {
            v14 = v12 + 4;
            if (v14 >= v8)
              goto LABEL_23;
            v13 = *(_QWORD *)(v4 + 8 * v14);
            v9 = v14;
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_19:
    v7 = (v13 - 1) & v13;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1001E74F0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001E7514(uint64_t *a1)
{
  uint64_t v1;

  sub_1001DC9C0(a1, v1);
}

uint64_t sub_1001E751C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = _s7ContextV6SourceOMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {

  }
  else
  {
    v7 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
    v8 = (char *)v6 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v9 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 16;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v11, v3 | 7);
}

uint64_t sub_1001E7610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(_s7ContextV6SourceOMa(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc(dword_1011A5FEC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10005AEE4;
  return sub_1001DD624(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1001E76BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001E76E8()
{
  uint64_t *v0;

  return sub_1001DD598(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001E76F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001E7704(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001E770C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A5FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E7754()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E7778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001E4DB8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1001E7780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SocialProfile(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001E77E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SocialProfile(0) - 8) + 80);
  return sub_1001E4B44(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1001E782C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for SocialProfile(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1001E78C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t *v6;

  v2 = *(_QWORD *)(type metadata accessor for SocialProfile(0) - 8);
  v3 = (*(_QWORD *)(v2 + 64)
      + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + 7) & 0xFFFFFFFFFFFFF8;
  v4 = swift_task_alloc(dword_1011A6024);
  v5 = *(_OWORD *)(v0 + v3);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10006AEE4;
  *(_OWORD *)(v4 + 16) = v5;
  v6 = (uint64_t *)swift_task_alloc(dword_1011A6034);
  *(_QWORD *)(v4 + 32) = v6;
  *v6 = v4;
  v6[1] = (uint64_t)sub_1001E4CF4;
  return sub_1001E469C();
}

uint64_t sub_1001E7964()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001E7998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t *v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_1011A6044);
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10006AEE4;
  *(_OWORD *)(v3 + 16) = v4;
  v5 = (uint64_t *)swift_task_alloc(dword_1011A6054);
  *(_QWORD *)(v3 + 32) = v5;
  *v5 = v3;
  v5[1] = (uint64_t)sub_1001E4EFC;
  v5[5] = v2;
  return swift_task_switch(sub_1001E4F70, 0, 0);
}

void sub_1001E7A28(uint64_t a1)
{
  uint64_t v1;

  sub_1001E5174(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001E7A30()
{
  return sub_1001E806C(&qword_1011A6068);
}

uint64_t sub_1001E7A3C(uint64_t a1)
{
  sub_100007E8C(&qword_1011A6068);
  return sub_1001E52A4(a1);
}

uint64_t sub_1001E7A80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryPlaylistEntryFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1001E7AC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryPlaylistEntryReactionSortProperties.date.getter(v1, v2);
}

uint64_t sub_1001E7B08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1[11] = a1;
  v2 = type metadata accessor for Logger(0);
  v1[12] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[13] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[14] = swift_task_alloc(v4);
  v1[15] = swift_task_alloc(v4);
  return swift_task_switch(sub_1001E7B78, 0, 0);
}

uint64_t sub_1001E7B78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[15];
  v2 = v0[12];
  v3 = v0[13];
  v4 = Logger.collaboration.unsafeMutableAddressor();
  v0[16] = v4;
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[17] = v5;
  v6 = v5(v1, v4, v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[Reaction] Will process entry reactions", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
  v10 = v0[15];
  v11 = v0[12];
  v12 = v0[13];

  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[18] = v13;
  v13(v10, v11);
  v14 = (_QWORD *)swift_task_alloc(dword_1011A60F4);
  v0[19] = v14;
  *v14 = v0;
  v14[1] = sub_1001E7C90;
  v14[10] = v0[11];
  return swift_task_switch(sub_1001E0EDC, 0, 0);
}

uint64_t sub_1001E7C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001E7CEC, 0, 0);
}

void sub_1001E7CEC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  double Current;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;

  v1 = *(void **)(v0 + 160);
  if (!v1)
    goto LABEL_9;
  v2 = objc_msgSend(*(id *)(v0 + 160), "results");
  v3 = v2;
  if (!v2)
  {

LABEL_12:
    v22 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v22);
    (*(void (**)(void *))(v0 + 8))(v3);
    return;
  }
  if ((uint64_t)objc_msgSend(v2, "totalItemCount") <= 0)
  {

LABEL_9:
    v3 = 0;
    goto LABEL_12;
  }
  Current = CFAbsoluteTimeGetCurrent();
  *(_QWORD *)(v0 + 64) = sub_100042978((uint64_t)_swiftEmptyArrayStorage);
  v5 = swift_allocObject(&unk_1010B5820, 32, 7);
  *(_QWORD *)(v5 + 16) = v0 + 64;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_allocObject(&unk_1010B5848, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1001E8038;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v0 + 48) = sub_1001E8050;
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1002835CC;
  *(_QWORD *)(v0 + 40) = &unk_1010B5860;
  v7 = _Block_copy((const void *)(v0 + 16));
  v8 = *(_QWORD *)(v0 + 56);
  v9 = v3;
  swift_retain(v6);
  objc_msgSend(v9, "enumerateSectionIdentifiersUsingBlock:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v6, "", 91, 216, 49, 1);
  swift_release(v6);
  if ((v7 & 1) == 0)
  {
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 96);
    v14 = CFAbsoluteTimeGetCurrent();
    v11(v12, v10, v13);
    v15 = v9;
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
    v20 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 96);
    if (v18)
    {
      v23 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
      v21 = swift_slowAlloc(22, -1);
      *(_DWORD *)v21 = 134218240;
      *(_QWORD *)(v0 + 72) = objc_msgSend(v15, "totalItemCount");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);

      *(_WORD *)(v21 + 12) = 2048;
      *(double *)(v0 + 80) = v14 - Current;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[Reaction] Mapped %ld reactions in %f seconds", (uint8_t *)v21, 0x16u);
      swift_slowDealloc(v21, -1, -1);

      v23(v20, v24);
    }
    else
    {

      v19(v20, v24);
    }
    v3 = *(void **)(v0 + 64);
    swift_release(v5);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1001E8014()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1001E8038(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001E1498(a1, a2, a3, *(_QWORD **)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1001E8040()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E8050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002835AC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1001E8058(uint64_t a1)
{
  uint64_t v1;

  sub_1001E5358(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001E8060()
{
  return sub_1001E806C(&qword_1011A6138);
}

uint64_t sub_1001E806C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100007E8C(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1001E80C8(void *a1)
{
  sub_100007E8C(&qword_1011A6138);
  return sub_1001E5488(a1);
}

uint64_t sub_1001E8118@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10005B704(*(_QWORD *)(v1 + 16), a1, type metadata accessor for Reactions.StackView);
}

uint64_t sub_1001E813C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1001E8160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v1 = _s7ContextVMa_1(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = _s7ContextV6SourceOMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {
    if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
    {

    }
    else
    {
      v8 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
      v9 = (char *)v6 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v10 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
  }
  v11 = (char *)v6 + *(int *)(v1 + 20);
  if (v11[8] != 255)
    swift_bridgeObjectRelease(*(_QWORD *)v11);

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001E8294(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s7ContextVMa_1(0) - 8) + 80);
  return sub_1001E253C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t _s7ContextV9PlacementOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001E8320 + 4 * byte_100EAE12D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001E8354 + 4 * byte_100EAE128[v4]))();
}

uint64_t sub_1001E8354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E835C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001E8364);
  return result;
}

uint64_t sub_1001E8370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001E8378);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001E837C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E8384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7ContextV9PlacementOMa()
{
  return &_s7ContextV9PlacementON;
}

unint64_t sub_1001E83A4()
{
  unint64_t result;

  result = qword_1011A6160;
  if (!qword_1011A6160)
  {
    result = swift_getWitnessTable(&unk_100EAE3C0, &_s7ContextV9PlacementON);
    atomic_store(result, (unint64_t *)&qword_1011A6160);
  }
  return result;
}

uint64_t *sub_1001E83E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(void **, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  uint64_t v29;
  void *v30;
  id v31;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (void **)((char *)a1 + v6);
    v8 = (void **)((char *)a2 + v6);
    v9 = _s7ContextV6SourceOMa(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(void **, uint64_t, uint64_t, __n128))(v10 + 48);
    v12 = swift_retain(v4);
    if (v11(v8, 1, v9, v12))
    {
      v13 = sub_100007E8C(&qword_1011A5EA0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
      {
        v14 = *v8;
        v15 = v8[1];
        *v7 = *v8;
        v7[1] = v15;
        v16 = v14;
        v17 = v15;
        v18 = 1;
      }
      else
      {
        v19 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v8, v19);
        v20 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v21 = (char *)v7 + v20;
        v22 = (char *)v8 + v20;
        v23 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
        v18 = 0;
      }
      swift_storeEnumTagMultiPayload(v7, v9, v18);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v24 = (int *)_s7ContextVMa_1(0);
    v25 = v24[5];
    v26 = (char *)v7 + v25;
    v27 = (char *)v8 + v25;
    v28 = v27[8];
    *(_QWORD *)v26 = *(_QWORD *)v27;
    if (v28 == 255)
    {
      v26[8] = v27[8];
    }
    else
    {
      v26[8] = v28 & 1;
      swift_bridgeObjectRetain();
    }
    v29 = v24[6];
    v30 = *(void **)((char *)v8 + v29);
    *(void **)((char *)v7 + v29) = v30;
    *((_BYTE *)v7 + v24[7]) = *((_BYTE *)v8 + v24[7]);
    *((_BYTE *)v7 + v24[8]) = *((_BYTE *)v8 + v24[8]);
    v31 = v30;
  }
  return v5;
}

void sub_1001E85D0(_QWORD *a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  swift_release(*a1);
  v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  v5 = _s7ContextV6SourceOMa(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
    {

    }
    else
    {
      v6 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
      v7 = (char *)v4 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v8 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    }
  }
  v9 = _s7ContextVMa_1(0);
  v10 = (char *)v4 + *(int *)(v9 + 20);
  if (v10[8] != 255)
    swift_bridgeObjectRelease(*(_QWORD *)v10);

}

uint64_t *sub_1001E86CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(void **, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  uint64_t v28;
  void *v29;
  id v30;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (void **)((char *)a1 + v5);
  v7 = (void **)((char *)a2 + v5);
  v8 = _s7ContextV6SourceOMa(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(void **, uint64_t, uint64_t, __n128))(v9 + 48);
  v11 = swift_retain(v4);
  if (v10(v7, 1, v8, v11))
  {
    v12 = sub_100007E8C(&qword_1011A5EA0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
    {
      v13 = *v7;
      v14 = v7[1];
      *v6 = *v7;
      v6[1] = v14;
      v15 = v13;
      v16 = v14;
      v17 = 1;
    }
    else
    {
      v18 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v6, v7, v18);
      v19 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v20 = (char *)v6 + v19;
      v21 = (char *)v7 + v19;
      v22 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v8, v17);
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v23 = (int *)_s7ContextVMa_1(0);
  v24 = v23[5];
  v25 = (char *)v6 + v24;
  v26 = (char *)v7 + v24;
  v27 = v26[8];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  if (v27 == 255)
  {
    v25[8] = v26[8];
  }
  else
  {
    v25[8] = v27 & 1;
    swift_bridgeObjectRetain();
  }
  v28 = v23[6];
  v29 = *(void **)((char *)v7 + v28);
  *(void **)((char *)v6 + v28) = v29;
  *((_BYTE *)v6 + v23[7]) = *((_BYTE *)v7 + v23[7]);
  *((_BYTE *)v6 + v23[8]) = *((_BYTE *)v7 + v23[8]);
  v30 = v29;
  return a1;
}

uint64_t *sub_1001E888C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void **, uint64_t, uint64_t);
  int v14;
  int v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (void **)((char *)a1 + v8);
  v10 = (void **)((char *)a2 + v8);
  v11 = _s7ContextV6SourceOMa(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v16 = *v10;
        *v9 = *v10;
        v17 = v10[1];
        v9[1] = v17;
        v18 = v16;
        v19 = v17;
        v20 = 1;
      }
      else
      {
        v26 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v9, v10, v26);
        v27 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v28 = (char *)v9 + v27;
        v29 = (char *)v10 + v27;
        v30 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        v20 = 0;
      }
      swift_storeEnumTagMultiPayload(v9, v11, v20);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_13;
    }
LABEL_7:
    v21 = sub_100007E8C(&qword_1011A5EA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  if (v15)
  {
    sub_10005B748((uint64_t)v9, _s7ContextV6SourceOMa);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005B748((uint64_t)v9, _s7ContextV6SourceOMa);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v22 = *v10;
      *v9 = *v10;
      v23 = v10[1];
      v9[1] = v23;
      v24 = v22;
      v25 = v23;
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      v46 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v9, v10, v46);
      v47 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v48 = (char *)v9 + v47;
      v49 = (char *)v10 + v47;
      v50 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
  }
LABEL_13:
  v31 = (int *)_s7ContextVMa_1(0);
  v32 = v31[5];
  v33 = (char *)v9 + v32;
  v34 = (char *)v10 + v32;
  v35 = *((unsigned __int8 *)v9 + v32 + 8);
  v36 = *((unsigned __int8 *)v10 + v32 + 8);
  if (v35 == 255)
  {
    if (v36 == 255)
    {
      v38 = *(_QWORD *)v34;
      v33[8] = v34[8];
      *(_QWORD *)v33 = v38;
    }
    else
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v36 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 255)
  {
    sub_1001E3E14(v33);
    v37 = v34[8];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v37;
  }
  else
  {
    v39 = *(_QWORD *)v34;
    v40 = *(_QWORD *)v33;
    *(_QWORD *)v33 = v39;
    v33[8] = v36 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
  }
  v41 = v31[6];
  v42 = *(void **)((char *)v9 + v41);
  v43 = *(void **)((char *)v10 + v41);
  *(void **)((char *)v9 + v41) = v43;
  v44 = v43;

  *((_BYTE *)v9 + v31[7]) = *((_BYTE *)v10 + v31[7]);
  *((_BYTE *)v9 + v31[8]) = *((_BYTE *)v10 + v31[8]);
  return a1;
}

_QWORD *sub_1001E8BB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = _s7ContextV6SourceOMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100007E8C(&qword_1011A5EA0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v6, v7))
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    else
    {
      v10 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      v11 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v12 = &v5[v11];
      v13 = &v6[v11];
      v14 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload(v5, v7, 0);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v15 = (int *)_s7ContextVMa_1(0);
  v16 = v15[5];
  v17 = &v5[v16];
  v18 = &v6[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)&v5[v15[6]] = *(_QWORD *)&v6[v15[6]];
  v5[v15[7]] = v6[v15[7]];
  v5[v15[8]] = v6[v15[8]];
  return a1;
}

uint64_t *sub_1001E8D34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = _s7ContextV6SourceOMa(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)v8, _s7ContextV6SourceOMa);
      if (!swift_getEnumCaseMultiPayload(v9, v10))
      {
        v30 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v8, v9, v30);
        v31 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v32 = &v8[v31];
        v33 = &v9[v31];
        v34 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_14;
      }
      v15 = *(_QWORD *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v15);
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v8, _s7ContextV6SourceOMa);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A5EA0) - 8) + 64);
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v9, v10))
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    v16 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v8, v9, v16);
    v17 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v18 = &v8[v17];
    v19 = &v9[v17];
    v20 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  v21 = (int *)_s7ContextVMa_1(0);
  v22 = v21[5];
  v23 = &v8[v22];
  v24 = &v9[v22];
  if (v8[v22 + 8] != 255)
  {
    v25 = v24[8];
    if (v25 != 255)
    {
      v26 = *(_QWORD *)v23;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v25 & 1;
      swift_bridgeObjectRelease(v26);
      goto LABEL_19;
    }
    sub_1001E3E14(v23);
  }
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
LABEL_19:
  v27 = v21[6];
  v28 = *(void **)&v8[v27];
  *(_QWORD *)&v8[v27] = *(_QWORD *)&v9[v27];

  v8[v21[7]] = v9[v21[7]];
  v8[v21[8]] = v9[v21[8]];
  return a1;
}

uint64_t sub_1001E8FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E8FE4);
}

uint64_t sub_1001E8FE4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s7ContextVMa_1(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1001E9060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E906C);
}

char *sub_1001E906C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = _s7ContextVMa_1(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s6ButtonVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A61C0, (uint64_t)&_s6ButtonVMn);
}

uint64_t sub_1001E90F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = _s7ContextVMa_1(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001E916C()
{
  return sub_100048748(&qword_1011A61F8, _s6ButtonVMa, (uint64_t)")v ");
}

double sub_1001E91E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  double result;
  _QWORD v42[2];
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v47 = v9;
  v48 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v42 - v11;
  if (qword_10119B890 != -1)
    swift_once(&qword_10119B890, sub_100084544);
  v13 = type metadata accessor for Logger(0);
  sub_100048B14(v13, (uint64_t)qword_10124C748);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15 = v14(v12, a1, v7);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  v18 = os_log_type_enabled(v16, v17);
  v46 = v8;
  if (v18)
  {
    v19 = swift_slowAlloc(12, -1);
    v44 = a1;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    v43 = v14;
    v22 = v21;
    v50 = v21;
    v45 = v6;
    *(_DWORD *)v20 = 136446210;
    v42[1] = v20 + 4;
    v23 = sub_1001EA210();
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v7, v23);
    v26 = v25;
    v49 = sub_100322200(v24, v25, &v50);
    v6 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v12, v7, v27);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Handling JS segue URL: %{public}s", v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v28 = v22;
    v14 = v43;
    swift_slowDealloc(v28, -1, -1);
    v29 = v20;
    a1 = v44;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

  v30 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v6, 1, 1, v30);
  v31 = v48;
  v14(v48, a1, v7);
  type metadata accessor for MainActor(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v32 = swift_retain();
  v33 = static MainActor.shared.getter(v32);
  v34 = v46;
  v35 = *(unsigned __int8 *)(v46 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = (v47 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject(&unk_1010B5AD8, v37 + 40, v35 | 7);
  *(_QWORD *)(v38 + 16) = v33;
  *(_QWORD *)(v38 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v38 + v36, v31, v7);
  v39 = v38 + v37;
  v40 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v2;
  *(_OWORD *)(v39 + 16) = v40;
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v2 + 32);
  sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011A6218, v38);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001E9558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v5[20] = a4;
  v5[21] = a5;
  v6 = sub_100007E8C(&qword_1011A3CF0);
  v5[22] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[23] = swift_task_alloc(v7);
  v5[24] = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  v5[25] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[26] = v9;
  v5[27] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v5[28] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v5[29] = v12;
  v5[30] = v13;
  return swift_task_switch(sub_1001E9624, v12, v13);
}

uint64_t sub_1001E9624()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v1 = JSBridge.shared.unsafeMutableAddressor();
  v2 = (_QWORD *)*v1;
  *(_QWORD *)(v0 + 248) = *v1;
  v3 = *(int **)((swift_isaMask & *v2) + 0xE0);
  v4 = v3[1];
  v7 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 256) = v5;
  *v5 = v0;
  v5[1] = sub_1001E96BC;
  return v7(v0 + 16);
}

uint64_t sub_1001E96BC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *v0;
  v2 = *(void **)(*v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));

  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 264) = v3;
  v4 = v3;
  return swift_task_switch(sub_1001E971C, 0, 0);
}

uint64_t sub_1001E971C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[33];
  v2 = swift_task_alloc(32);
  v0[34] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[35] = v3;
  *v3 = v0;
  v3[1] = sub_1001E97BC;
  return withCheckedContinuation<A>(isolation:function:_:)(v3, 0, 0, 0x4C726F4674696177, 0xEF292868636E7561, sub_1001EA258, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_1001E97BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 272);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 280));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1001E9818, 0, 0);
}

uint64_t sub_1001E9818()
{
  return swift_task_switch(sub_1001E982C, 0, 0);
}

uint64_t sub_1001E982C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[33];
  v2 = v0[20];
  v3 = (_QWORD *)swift_task_alloc(48);
  v0[36] = v3;
  v3[2] = v1;
  v3[3] = v2;
  v3[4] = 0;
  v3[5] = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[37] = v4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A36A0);
  *v4 = v0;
  v4[1] = sub_1001E98E4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 17, 0, 0, 0xD000000000000041, 0x8000000100E31060, sub_1001EA260, v3, v5);
}

uint64_t sub_1001E98E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 288);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 296));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1001E9940, 0, 0);
}

uint64_t sub_1001E9940()
{
  _QWORD *v0;

  v0[38] = v0[17];
  return swift_task_switch(sub_1001E9958, v0[29], v0[30]);
}

uint64_t sub_1001E9958()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t KeyPath;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  os_log_type_t type;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 224));
  if (v1)
  {
    v2 = *(void **)(v0 + 304);
    if (qword_10119B890 != -1)
      swift_once(&qword_10119B890, sub_100084544);
    v3 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 208);
    v4 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 200);
    v7 = type metadata accessor for Logger(0);
    sub_100048B14(v7, (uint64_t)qword_10124C748);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v6);
    v8 = v2;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v37 = *(_QWORD *)(v0 + 304);
      v38 = *(_QWORD *)(v0 + 216);
      v11 = *(_QWORD *)(v0 + 200);
      v41 = *(_QWORD *)(v0 + 208);
      v12 = swift_slowAlloc(22, -1);
      v39 = (_QWORD *)swift_slowAlloc(8, -1);
      v42 = swift_slowAlloc(32, -1);
      v43 = v42;
      *(_DWORD *)v12 = 138543618;
      type = v10;
      *(_QWORD *)(v0 + 144) = v8;
      v13 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
      *v39 = v37;

      *(_WORD *)(v12 + 12) = 2082;
      v14 = sub_1001EA210();
      v15 = dispatch thunk of CustomStringConvertible.description.getter(v11, v14);
      v17 = v16;
      *(_QWORD *)(v0 + 152) = sub_100322200(v15, v16, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160);
      v18 = swift_bridgeObjectRelease(v17);
      (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v38, v11, v18);
      _os_log_impl((void *)&_mh_execute_header, v9, type, "Setting pending navigation segue: %{public}@ for URL: %{public}s", (uint8_t *)v12, 0x16u);
      v19 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v39, 1, v19);
      swift_slowDealloc(v39, -1, -1);
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 208);
      v20 = *(_QWORD *)(v0 + 216);
      v22 = *(_QWORD *)(v0 + 200);

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }

    v24 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 192);
    v25 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + 8);
    *(_QWORD *)v23 = v8;
    *(_BYTE *)(v23 + 8) = 7;
    *(_OWORD *)(v23 + 16) = xmmword_100EAE4D0;
    v27 = type metadata accessor for NavigationDestinationItem(0);
    swift_storeEnumTagMultiPayload(v23, v27, 7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v23, 0, 1, v27);
    v28 = (_QWORD *)swift_task_alloc(16);
    *v28 = v25;
    KeyPath = swift_getKeyPath(&unk_100EAE4E0);
    swift_task_dealloc(v28);
    v30 = (_QWORD *)swift_task_alloc(16);
    *v30 = v25;
    v31 = swift_getKeyPath(&unk_100EAE518);
    swift_task_dealloc(v30);
    sub_1001EA28C(v23, v24);
    v32 = v8;
    swift_retain(v26);
    static Published.subscript.setter(v24, v26, KeyPath, v31);
    sub_10004FF60(v23, &qword_1011A3CF0);

  }
  v33 = *(_QWORD *)(v0 + 216);
  v35 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 192);

  sub_1000A543C(v0 + 16);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E9D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v6 + 16));
  swift_release(*(_QWORD *)(v0 + v6 + 24));
  swift_release(*(_QWORD *)(v0 + v6 + 32));
  return swift_deallocObject(v0, v6 + 40, v5);
}

uint64_t sub_1001E9DF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_1011A6214);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1001E9558(a1, v6, v7, v8, v9);
}

uint64_t sub_1001E9E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[2];

  v20[0] = a5;
  v20[1] = a2;
  v8 = sub_100007E8C(&qword_1011A6220);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a3, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_1010B5B00, v17 + v10, v16 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  JSApplication.initiateOpenURL(_:sourceApplicationBundleIdentifier:referrerURL:completion:)(a3, a4, v20[0], (uint64_t)v13, (uint64_t)sub_1001EA2E0, v18);
  swift_release(v18);
  return sub_10004FF60((uint64_t)v13, &qword_10119E460);
}

uint64_t sub_1001EA018(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;

  v4 = a1;
  v1 = a1;
  v2 = sub_100007E8C(&qword_1011A6220);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

uint64_t sub_1001EA05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = sub_100007E8C(&qword_1011A6228);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (_BYTE *)(a2 + OBJC_IVAR____TtC11MusicJSCore13JSApplication_isPrivacyDisclaimerPresented);
  v9 = swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicJSCore13JSApplication_isPrivacyDisclaimerPresented, v21, 0, 0);
  if (*v7 != 1)
    return CheckedContinuation.resume(returning:)(v8, v4);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(&v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v4, v9);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_1010B5B28, v11 + v6, v10 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(v12 + v11, &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  v13 = (_QWORD *)(a2 + OBJC_IVAR____TtC11MusicJSCore13JSApplication_pendingPrivacyDisclaimerDismissalCompletionHandlers);
  swift_beginAccess(v13, v20, 33, 0);
  v14 = (_QWORD *)*v13;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v13);
  *v13 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = sub_100431F80(0, v14[2] + 1, 1, v14);
    *v13 = v14;
  }
  v17 = v14[2];
  v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    v14 = sub_100431F80((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
    *v13 = v14;
  }
  v14[2] = v17 + 1;
  v18 = &v14[2 * v17];
  v18[4] = sub_1001EA32C;
  v18[5] = v12;
  return swift_endAccess(v20);
}

unint64_t sub_1001EA210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D0EE0;
  if (!qword_1011D0EE0)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, &qword_1011D0EE0);
  }
  return result;
}

uint64_t sub_1001EA258(uint64_t a1)
{
  uint64_t v1;

  return sub_1001EA05C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001EA260(uint64_t a1)
{
  uint64_t *v1;

  return sub_1001E9E94(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001EA274()
{
  return 8;
}

_QWORD *sub_1001EA280(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1001EA28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A3CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001EA2D4()
{
  return sub_1001E806C(&qword_1011A6220);
}

uint64_t sub_1001EA2E0(void *a1)
{
  sub_100007E8C(&qword_1011A6220);
  return sub_1001EA018(a1);
}

uint64_t sub_1001EA320()
{
  return sub_1001E806C(&qword_1011A6228);
}

uint64_t sub_1001EA32C()
{
  uint64_t v0;

  v0 = sub_100007E8C(&qword_1011A6228);
  return CheckedContinuation.resume(returning:)(v0, v0);
}

uint64_t sub_1001EA36C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 41, 7);
}

uint64_t Alert.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t ArtworkImage.Size.fittingAspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

id sub_1001EA3C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v5 = &v2[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v2[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkMetricsProvider];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v2[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v2[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context];
  v9 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v10 = swift_allocObject(v9, 41, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = 0;
  *(_BYTE *)(v10 + 40) = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference] = v10;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for ArtworkPrefetchingController();
  return objc_msgSendSuper2(&v12, "init");
}

void sub_1001EA480(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(_QWORD *, void *);
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  const void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD aBlock[3];
  void *v58;
  void (*v59)();
  uint64_t v60;
  _BYTE v61[32];
  char v62[24];
  _BYTE v63[40];

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider];
  if (v14)
  {
    v50 = a2;
    v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v52 = v13;
    v53 = v11;
    v54 = v7;
    v55 = v6;
    v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider + 8];
    v16 = *(double (**)(_QWORD *, void *))&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider];
    v49 = a1;
    if (v16)
    {
      v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider + 8];
      v58 = (void *)type metadata accessor for ArtworkPrefetchingController();
      aBlock[0] = v3;
      sub_100048AAC(v14, v15);
      sub_100048AAC((uint64_t)v16, v17);
      v18 = v3;
      v19 = v16(aBlock, a1);
      v21 = v20;
      v23 = v22;
      sub_10004BA30((uint64_t)v16, v17);
      sub_10004FF60((uint64_t)aBlock, &qword_10119DCC0);
    }
    else
    {
      swift_retain(v15);
      v19 = 0.0;
      v21 = 0;
      v23 = 0;
    }
    v24 = v15;
    v48 = v9;
    v25 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference];
    v26 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkMetricsProvider];
    v27 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkMetricsProvider + 8];
    v28 = (uint64_t)&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context], v62, 0, 0);
    sub_10004A160(v28, (uint64_t)v63, &qword_10119DCC0);
    v29 = v25;
    swift_retain(v25);
    sub_100048AAC(v26, v27);
    if (qword_10119BBB8 != -1)
      swift_once(&qword_10119BBB8, sub_1001EAE64);
    v45 = (id)qword_1011A6230;
    sub_10004A160((uint64_t)v63, (uint64_t)v61, &qword_10119DCC0);
    v30 = swift_allocObject(&unk_1010B5BC8, 136, 7);
    *(_QWORD *)(v30 + 16) = v50;
    *(_QWORD *)(v30 + 24) = v26;
    v47 = v26;
    *(_QWORD *)(v30 + 32) = v27;
    sub_1001EBCB4((uint64_t)v61, v30 + 40);
    v31 = v49;
    *(_QWORD *)(v30 + 72) = v49;
    *(double *)(v30 + 80) = v19;
    *(_QWORD *)(v30 + 88) = v21;
    *(_QWORD *)(v30 + 96) = v23;
    *(_BYTE *)(v30 + 104) = v16 == 0;
    *(_QWORD *)(v30 + 112) = v14;
    *(_QWORD *)(v30 + 120) = v24;
    v32 = v29;
    *(_QWORD *)(v30 + 128) = v29;
    v59 = sub_1001EBCFC;
    v60 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    v58 = &unk_1010B5BE0;
    v46 = _Block_copy(aBlock);
    sub_100048AAC(v14, v24);
    swift_retain(v29);
    v33 = v27;
    sub_100048AAC(v26, v27);
    v34 = v45;
    swift_bridgeObjectRetain();
    v35 = v31;
    v36 = v51;
    static DispatchQoS.unspecified.getter(v37);
    v56 = _swiftEmptyArrayStorage;
    v38 = sub_1001EBD80((unint64_t *)&qword_1011A30C0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v39 = sub_100007E8C((uint64_t *)&unk_1011A2120);
    v40 = sub_1001EBC18(&qword_1011A30D0, (uint64_t *)&unk_1011A2120);
    v41 = v48;
    v42 = v39;
    v43 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v56, v42, v40, v55, v38);
    v44 = v46;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v36, v41, v46);
    _Block_release(v44);
    swift_release(v32);

    sub_10004BA30(v14, v24);
    sub_10004BA30(v47, v33);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v43);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v53);
    sub_10004FF60((uint64_t)v63, &qword_10119DCC0);
    swift_release(v60);
  }
}

void sub_1001EA910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;

  v48 = a7;
  v49 = a8;
  v47 = a6;
  v45 = a5;
  v43 = a4;
  v50 = a1;
  v46 = a11;
  v44 = a10;
  v42 = a9;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  __chkstk_darwin(v14);
  v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v17);
  v19 = &v41[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for Artwork(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = &v41[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_100007E8C(&qword_1011A63B0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = &v41[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v52 = a2;
  v53 = a3;
  v54 = v43;
  v55 = v45;
  v56 = v47;
  v57 = v48;
  v58 = v49;
  v59 = v42 & 1;
  v60 = v44;
  v61 = v46;
  v28 = sub_10016C2A4((void (*)(_QWORD))sub_1001EBD44, (uint64_t)v51, v50);
  v30 = v28[2];
  if (v30)
  {
    v50 = a12;
    v31 = (double *)&v27[*(int *)(v24 + 48)];
    v32 = v28;
    v33 = sub_1001EBD80((unint64_t *)&qword_1011A3E20, v29, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
    v48 = v32;
    v49 = v33;
    v34 = (uint64_t)v32 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v35 = *(_QWORD *)(v25 + 72);
    do
    {
      sub_10004A160(v34, (uint64_t)v27, &qword_1011A63B0);
      v36 = *v31;
      v37 = v31[1];
      v38 = v31[2];
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(v23, v27, v20);
      v39 = type metadata accessor for Artwork.CropStyle(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v19, 1, 1, v39);
      v40 = type metadata accessor for Artwork.ImageFormat(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v16, 1, 1, v40);
      static ArtworkImage.prefetch(artwork:pixelLength:width:height:cropStyle:imageFormat:cacheOwner:)(v23, v19, v16, v50, v49, 1.0 / v38, v36, v37);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A63A0);
      sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011A14A0);
      (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
      v34 += v35;
      --v30;
    }
    while (v30);
    v28 = v48;
  }
  swift_bridgeObjectRelease(v28);
}

uint64_t sub_1001EAC24@<X0>(uint64_t a1@<X0>, double (*a2)(uint64_t, uint64_t, uint64_t, __n128)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, double a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, char a9, void (*a10)(uint64_t, uint64_t))
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  double *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[2];
  _QWORD v42[2];

  v40 = a8;
  v37 = a7;
  v16 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for Artwork(0);
  v19 = *(_QWORD *)(v38 - 8);
  v20 = __chkstk_darwin(v38);
  v36 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a3;
  if (a2)
  {
    v22 = a2(a3, a4, a1, v20);
    v24 = v23;
    v26 = v25;
  }
  else
  {
    if ((a9 & 1) != 0)
    {
LABEL_8:
      v29 = sub_100007E8C(&qword_1011A63B0);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v40, 1, 1, v29);
    }
    v22 = a5;
    v24 = a6;
    v26 = v37;
  }
  type metadata accessor for CGSize(0);
  *(double *)v42 = v22;
  v42[1] = v24;
  v41[0] = 0;
  v41[1] = 0;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v42, v41, v27) & 1) == 0)
    goto LABEL_8;
  a10(v39, a1);
  v28 = v38;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v38) == 1)
  {
    sub_10004FF60((uint64_t)v18, &qword_1011A1440);
    goto LABEL_8;
  }
  v31 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v32 = v36;
  v31(v36, v18, v28);
  v33 = sub_100007E8C(&qword_1011A63B0);
  v34 = v40;
  v35 = (double *)&v40[*(int *)(v33 + 48)];
  v31(v40, v32, v28);
  *v35 = v22;
  *((_QWORD *)v35 + 1) = v24;
  *((_QWORD *)v35 + 2) = v26;
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
}

uint64_t sub_1001EAE64(uint64_t a1)
{
  return sub_1001EB5C8(a1, &qword_1011A6230);
}

id sub_1001EAE9C()
{
  return sub_1001EB7B8(type metadata accessor for ArtworkPrefetchingController);
}

uint64_t type metadata accessor for ArtworkPrefetchingController()
{
  return objc_opt_self(_TtC5Music28ArtworkPrefetchingController);
}

uint64_t type metadata accessor for ArtworkPrefetchingController.CacheReference()
{
  return objc_opt_self(_TtCC5Music28ArtworkPrefetchingController14CacheReference);
}

void sub_1001EAF68(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, char *);
  uint64_t v15;
  double (*v16)(char *, void *);
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  double (*v28)(uint64_t, uint64_t, char *);
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  id v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD aBlock[5];
  _QWORD *v59;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v14 = *(uint64_t (**)(uint64_t, char *))&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogProviding];
  if (v14)
  {
    v50 = a2;
    v51 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v52 = v13;
    v53 = v11;
    v54 = v9;
    v55 = v7;
    v56 = v6;
    v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogProviding + 8];
    v16 = *(double (**)(char *, void *))&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_defaultCatalogMetricsProviding];
    if (v16)
    {
      v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_defaultCatalogMetricsProviding + 8];
      sub_100048AAC((uint64_t)v14, *(_QWORD *)&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogProviding + 8]);
      sub_100048AAC((uint64_t)v16, v17);
      v18 = v16(v3, a1);
      v20 = v19;
      v22 = v21;
      sub_10004BA30((uint64_t)v16, v17);
      v48 = *(_QWORD *)&v18;
      v23 = v20;
      v24 = v22;
    }
    else
    {
      swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogProviding + 8]);
      v48 = 0;
      v23 = 0;
      v24 = 0;
    }
    v25 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_cachingReference];
    v26 = v16 == 0;
    v28 = *(double (**)(uint64_t, uint64_t, char *))&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogMetricsProviding];
    v27 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogMetricsProviding + 8];
    sub_100048AAC((uint64_t)v14, v15);
    sub_100048AAC((uint64_t)v28, v27);
    v29 = v3;
    v30 = a1;
    swift_unknownObjectRetain(v25, v31);
    v32 = v50;
    v49 = v27;
    v50 = (uint64_t)v28;
    v33 = sub_1001EB880(v32, v28, v27, (uint64_t)v29, (uint64_t)v30, v48, v23, v24, v26, v14, v15);
    sub_10004BA30((uint64_t)v14, v15);

    if (qword_10119BBC0 != -1)
      swift_once(&qword_10119BBC0, sub_1001EB5BC);
    v34 = (void *)qword_1011A6238;
    v35 = (_QWORD *)swift_allocObject(&unk_1010B5B50, 40, 7);
    v35[2] = v33;
    v35[3] = v29;
    v35[4] = v25;
    aBlock[4] = sub_1001EBBF4;
    v59 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010B5B68;
    v36 = _Block_copy(aBlock);
    v37 = v29;
    swift_unknownObjectRetain(v25, v38);
    v39 = v34;
    v40 = v51;
    static DispatchQoS.unspecified.getter(v41);
    v57 = _swiftEmptyArrayStorage;
    v42 = sub_1001EBD80((unint64_t *)&qword_1011A30C0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v43 = sub_100007E8C((uint64_t *)&unk_1011A2120);
    v44 = sub_1001EBC18(&qword_1011A30D0, (uint64_t *)&unk_1011A2120);
    v45 = v54;
    v46 = v43;
    v47 = v56;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v57, v46, v44, v56, v42);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v40, v45, v36);
    sub_10004BA30(v50, v49);
    sub_10004BA30((uint64_t)v14, v15);
    _Block_release(v36);
    swift_unknownObjectRelease(v25);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v45, v47);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
    swift_release(v59);
  }
}

void sub_1001EB310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  double *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  id v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v6 = a2 + OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_cachingIdentifier;
    v16 = swift_bridgeObjectRetain();
    v7 = (double *)(v16 + 56);
    do
    {
      v8 = (void *)*((_QWORD *)v7 - 3);
      v9 = *(v7 - 2);
      v10 = *(v7 - 1);
      v11 = *v7;
      v7 += 4;
      v12 = v8;
      objc_msgSend(v12, "setFittingSize:", v9, v10);
      objc_msgSend(v12, "setDestinationScale:", v11);
      v13 = *(_QWORD *)(v6 + 8);
      swift_bridgeObjectRetain();
      v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "setCacheIdentifier:forCacheReference:", v14, a3, swift_bridgeObjectRelease(v13).n128_f64[0]);

      aBlock[4] = UIScreen.Dimensions.size.getter;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002E4830;
      aBlock[3] = &unk_1010B5B90;
      v15 = _Block_copy(aBlock);
      objc_msgSend(v12, "setDestination:configurationBlock:", a2, v15);
      _Block_release(v15);

      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v16);
  }
}

uint64_t sub_1001EB48C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v9 = type metadata accessor for IndexPath(0);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v9);
  v11 = a3;
  v12 = a1;
  a5(v11, v10);

  return swift_bridgeObjectRelease(v10);
}

id sub_1001EB504()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v1 = &v0[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_defaultCatalogMetricsProviding];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogMetricsProviding];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_catalogProviding];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_cachingReference;
  v5 = type metadata accessor for Artwork.Caching.Reference();
  *(_QWORD *)&v0[v4] = swift_allocObject(v5, 16, 7);
  v6 = &v0[OBJC_IVAR____TtC5Music32old_ArtworkPrefetchingController_cachingIdentifier];
  v7 = v0;
  v8 = (uint64_t *)Artwork.Caching.Reference.defaultIdentifier.unsafeMutableAddressor();
  v10 = *v8;
  v9 = v8[1];
  *(_QWORD *)v6 = v10;
  *((_QWORD *)v6 + 1) = v9;
  swift_bridgeObjectRetain();

  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for old_ArtworkPrefetchingController();
  return objc_msgSendSuper2(&v12, "init");
}

uint64_t sub_1001EB5BC(uint64_t a1)
{
  return sub_1001EB5C8(a1, &qword_1011A6238);
}

uint64_t sub_1001EB5C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *v16;
  _QWORD *v17;

  v16 = a2;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A9B84();
  static DispatchQoS.userInteractive.getter();
  v17 = _swiftEmptyArrayStorage;
  v12 = sub_1001EBD80((unint64_t *)&qword_1011A6388, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_100007E8C(&qword_1011A6390);
  v14 = sub_1001EBC18((unint64_t *)&qword_1011A6398, &qword_1011A6390);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v13, v14, v6, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000003ALL, 0x8000000100E31270, v11, v8, v5, 0);
  *v16 = result;
  return result;
}

id sub_1001EB7AC()
{
  return sub_1001EB7B8(type metadata accessor for old_ArtworkPrefetchingController);
}

id sub_1001EB7B8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for old_ArtworkPrefetchingController()
{
  return objc_opt_self(_TtC5Music32old_ArtworkPrefetchingController);
}

_QWORD *sub_1001EB880(uint64_t a1, double (*a2)(uint64_t, uint64_t, char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, unsigned __int8 a9, uint64_t (*a10)(uint64_t, char *), uint64_t a11)
{
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  double v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  double v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  double *v42;
  _QWORD *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t (*v52)(uint64_t, char *);
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  double (*v58)(uint64_t, uint64_t, char *);
  _QWORD v59[2];
  _QWORD v60[3];
  uint64_t v61;

  v54 = a3;
  v55 = a8;
  v50 = a5;
  v61 = a4;
  v58 = a2;
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a1 + 16);
  v49 = a1;
  if (v22)
  {
    v48 = v11;
    v52 = a10;
    v53 = a11;
    v51 = a9;
    v23 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v56 = *(_QWORD *)(v16 + 72);
    v57 = v24;
    v25 = *(double *)&a6;
    v26 = a7;
    v27 = v55;
    swift_bridgeObjectRetain();
    v55 = _swiftEmptyArrayStorage;
    v28 = v50;
    while (1)
    {
      v57(v21, v23, v15);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v29(v21, 0, 1, v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1)
        goto LABEL_19;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v21, v15);
      if (v58)
      {
        v30 = v58(v61, v28, v18);
        v32 = v31;
        v34 = v33;
      }
      else
      {
        v30 = v25;
        v32 = v26;
        v34 = v27;
        if ((v51 & 1) != 0)
          goto LABEL_3;
      }
      type metadata accessor for CGSize(0);
      *(double *)v60 = v30;
      v60[1] = v32;
      v59[0] = 0;
      v59[1] = 0;
      if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v60, v59, v35) & 1) != 0)
      {
        v36 = v52(v61, v18);
        if (v36)
        {
          v37 = v36;
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
            v55 = sub_100432210(0, v55[2] + 1, 1, v55);
          v39 = v55[2];
          v38 = v55[3];
          v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            v47 = v39 + 1;
            v43 = sub_100432210((_QWORD *)(v38 > 1), v39 + 1, 1, v55);
            v40 = v47;
            v55 = v43;
          }
          v41 = v55;
          v55[2] = v40;
          v42 = (double *)&v41[4 * v39];
          *((_QWORD *)v42 + 4) = v37;
          v42[5] = v30;
          *((_QWORD *)v42 + 6) = v32;
          *((_QWORD *)v42 + 7) = v34;
          v28 = v50;
          goto LABEL_4;
        }
      }
LABEL_3:
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_4:
      v23 += v56;
      if (!--v22)
      {
        v29(v21, 1, 1, v15);
        goto LABEL_19;
      }
    }
  }
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  swift_bridgeObjectRetain();
  v55 = _swiftEmptyArrayStorage;
  v44(v21, 1, 1, v15);
LABEL_19:
  swift_bridgeObjectRelease(v49);
  return v55;
}

uint64_t sub_1001EBBC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001EBBF4()
{
  uint64_t *v0;

  sub_1001EB310(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001EBC00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001EBC10(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001EBC18(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EBC58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 64))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_1001EBCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119DCC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001EBCFC()
{
  uint64_t v0;

  sub_1001EA910(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_1001EBD44@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1001EAC24(a1, *(double (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 16), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(double *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_BYTE *)(v2 + 72), *(void (**)(uint64_t, uint64_t))(v2 + 80));
}

uint64_t sub_1001EBD80(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1001EBDD0()
{
  _BYTE *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  id v11;
  void *v12;
  int v13;
  void *v14;
  id v15;
  char **v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR____TtC5Music30CarPlayNowPlayingIndicatorView_isPlaying] = 0;
  v0[OBJC_IVAR____TtC5Music30CarPlayNowPlayingIndicatorView_isHighlighted] = 0;
  v2 = OBJC_IVAR____TtC5Music30CarPlayNowPlayingIndicatorView_waveform;
  v3 = qword_10119C278;
  v4 = v0;
  if (v3 != -1)
    swift_once(&qword_10119C278, sub_10058F8BC);
  v5 = (void *)qword_10124D348;
  v6 = objc_allocWithZone((Class)type metadata accessor for WaveformPlayIndicator(0));
  *(_QWORD *)&v4[v2] = WaveformPlayIndicator.init(settings:)(v5);

  v26.receiver = v4;
  v26.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC5Music30CarPlayNowPlayingIndicatorView_waveform;
  v9 = *(void **)&v7[OBJC_IVAR____TtC5Music30CarPlayNowPlayingIndicatorView_waveform];
  v10 = v7;
  v11 = v9;
  WaveformPlayIndicator.mode.setter(1u);

  v12 = *(void **)&v7[v8];
  v13 = v10[OBJC_IVAR____TtC5Music30CarPlayNowPlayingIndicatorView_isHighlighted];
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v12;
  v16 = &selRef__carSystemFocusLabelColor;
  if (!v13)
    v16 = &selRef__carSystemFocusColor;
  v17 = objc_msgSend(v14, *v16);
  v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.2);
  v19 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.2);
  v20 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.2);
  UIScreen.Dimensions.size.getter(v17);
  WaveformPlayIndicator.colorPalette.setter(v21, v22, v23, v24);

  objc_msgSend(v10, "addSubview:", *(_QWORD *)&v7[v8]);
  objc_msgSend(v10, "sizeToFit");

  return v10;
}

void sub_1001EC180(char a1)
{
  uint64_t v1;
  void *v3;
  char **v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music30CarPlayNowPlayingIndicatorView_isHighlighted) = a1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = &selRef__carSystemFocusLabelColor;
  if ((a1 & 1) == 0)
    v4 = &selRef__carSystemFocusColor;
  v5 = objc_msgSend(v3, *v4);
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.2);
  v7 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.2);
  v8 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.2);
  UIScreen.Dimensions.size.getter(v5);
  WaveformPlayIndicator.colorPalette.setter(v9, v10, v11, v12);
}

uint64_t type metadata accessor for CarPlayNowPlayingIndicatorView()
{
  return objc_opt_self(_TtC5Music30CarPlayNowPlayingIndicatorView);
}

uint64_t sub_1001EC360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t (*v16)(_BYTE *, uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v29;
  _BYTE v30[48];

  v2 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __chkstk_darwin(v10);
  v15 = &v30[-v14];
  Playlist.Entry.internalItem.getter(v13);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v8, (uint64_t)&protocol witness table for Playlist.Entry.InternalItem, v7);
  v16 = *(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8);
  v17 = v16(v15, v8);
  Playlist.Entry.internalItem.getter(v17);
  v18 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 88))(v12, v8);
  if (v18 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
    goto LABEL_2;
  if (v18 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
LABEL_4:
    v16(v12, v8);
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 4, 10, v20);
    goto LABEL_9;
  }
  if (v18 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
LABEL_8:
    v16(v12, v8);
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 10, v21);
    goto LABEL_9;
  }
  if (v18 != enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    if (v18 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
    {
      if (v18 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
      {
        v29 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 10, v29);
        v16(v12, v8);
        goto LABEL_9;
      }
      goto LABEL_4;
    }
    goto LABEL_8;
  }
LABEL_2:
  v16(v12, v8);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 5, 10, v19);
LABEL_9:
  v22 = sub_1001EF2CC();
  v23 = Corner.small.unsafeMutableAddressor();
  v24 = *v23;
  v25 = v23[1];
  v26 = *((_BYTE *)v23 + 16);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v30);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v7, (uint64_t)v4, v22, 0, (uint64_t)v30, v24, v25, v26, a1);
  v27 = type metadata accessor for ArtworkImage.Info(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 0, 1, v27);
}

uint64_t sub_1001EC680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[48];

  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for SocialProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v11 = __chkstk_darwin(v10);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v21[-v14];
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v6, (uint64_t)&protocol witness table for SocialProfile, v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v16 = type metadata accessor for ArtworkImage.ViewModel(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
  {
    sub_1001EF680((uint64_t)v15);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    sub_100077A18((uint64_t)v13, (uint64_t)v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  }
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 7, 10, v18);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v21);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v15, (uint64_t)v5, 0x3FF0000000000000, 0, (uint64_t)v21, 0, 0, 1, a1);
  v19 = type metadata accessor for ArtworkImage.Info(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 0, 1, v19);
}

uint64_t sub_1001EC8D4(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t);
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v79)(char *, uint64_t);
  char *v80;
  char *v81;
  int v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154[8];
  uint64_t v155;
  uint64_t v156;

  v141 = a2;
  v145 = a1;
  v3 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v3);
  v140 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for Track(0);
  v136 = *(_QWORD *)(v129 - 8);
  v5 = __chkstk_darwin(v129);
  v139 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v135 = (char *)&v114 - v7;
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v8);
  v137 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v10);
  v148 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C(&qword_1011A6820);
  v127 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v124 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100007E8C((uint64_t *)&unk_1011A64E8);
  v13 = __chkstk_darwin(v123);
  v122 = (uint64_t)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v121 = (char *)&v114 - v15;
  v138 = sub_100007E8C(&qword_1011A6828);
  v120 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v119 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C(&qword_1011A6830);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A6838);
  v149 = *(_QWORD *)(v18 - 8);
  v150 = v18;
  __chkstk_darwin(v18);
  v115 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_10119F090);
  v146 = *(_QWORD *)(v20 - 8);
  v147 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100007E8C(&qword_1011A6840);
  v128 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100007E8C(&qword_1011A6848);
  v25 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v27 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  v144 = v28;
  v29 = __chkstk_darwin(v28);
  v133 = (uint64_t)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v114 - v32;
  __chkstk_darwin(v31);
  v35 = (char *)&v114 - v34;
  *(_BYTE *)(v2 + 16) = 0;
  v36 = v2 + OBJC_IVAR____TtC5Music17PlaylistEntryData__artworkInfo;
  v37 = type metadata accessor for ArtworkImage.Info(0);
  v142 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v143 = v37;
  v142(v35, 1, 1, v37);
  sub_10004A160((uint64_t)v35, (uint64_t)v33, (uint64_t *)&unk_1011C6790);
  Published.init(initialValue:)(v33, v28);
  sub_10004FF60((uint64_t)v35, (uint64_t *)&unk_1011C6790);
  v134 = v25;
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
  v132 = v36;
  v38(v36, v27, v151);
  v39 = v2 + OBJC_IVAR____TtC5Music17PlaylistEntryData__leadingNumberState;
  v155 = 0;
  LOBYTE(v156) = -2;
  v40 = sub_100007E8C(&qword_1011A6498);
  Published.init(initialValue:)(&v155, v40);
  (*(void (**)(uint64_t, char *, uint64_t))(v128 + 32))(v39, v24, v131);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Music17PlaylistEntryData_showVideoIcon) = 0;
  v41 = v2 + OBJC_IVAR____TtC5Music17PlaylistEntryData__artist;
  v42 = v2;
  v155 = 0;
  v156 = 0;
  v43 = sub_100007E8C(&qword_10119DCA0);
  Published.init(initialValue:)(&v155, v43);
  v44 = *(void (**)(uint64_t, char *, uint64_t))(v146 + 32);
  v131 = v41;
  v45 = v147;
  v44(v41, v22, v147);
  v46 = v42 + OBJC_IVAR____TtC5Music17PlaylistEntryData__album;
  v155 = 0;
  v156 = 0;
  v128 = v43;
  Published.init(initialValue:)(&v155, v43);
  v44(v46, v22, v45);
  v47 = v42 + OBJC_IVAR____TtC5Music17PlaylistEntryData__duration;
  v155 = 0;
  LOBYTE(v156) = 1;
  v48 = sub_100007E8C(&qword_1011A64B0);
  v49 = v115;
  v125 = v48;
  Published.init(initialValue:)(&v155, v48);
  v50 = *(void (**)(uint64_t, char *, uint64_t))(v149 + 32);
  v126 = v47;
  v50(v47, v49, v150);
  v51 = v42 + OBJC_IVAR____TtC5Music17PlaylistEntryData__previewID;
  v155 = 0;
  v156 = 0;
  v52 = sub_100007E8C(&qword_1011A64C8);
  v53 = v116;
  Published.init(initialValue:)(&v155, v52);
  (*(void (**)(uint64_t, char *, uint64_t))(v117 + 32))(v51, v53, v118);
  v54 = v42 + OBJC_IVAR____TtC5Music17PlaylistEntryData__socialProfileArtworkInfo;
  v142(v35, 1, 1, v143);
  sub_10004A160((uint64_t)v35, (uint64_t)v33, (uint64_t *)&unk_1011C6790);
  Published.init(initialValue:)(v33, v144);
  sub_10004FF60((uint64_t)v35, (uint64_t *)&unk_1011C6790);
  v38(v54, v27, v151);
  v55 = v129;
  v56 = v42 + OBJC_IVAR____TtC5Music17PlaylistEntryData__contextMenuProvider;
  v155 = 0;
  v156 = 0;
  v57 = sub_100007E8C(&qword_1011A64D8);
  v58 = v119;
  Published.init(initialValue:)(&v155, v57);
  (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v56, v58, v138);
  v138 = v42;
  v59 = v42 + OBJC_IVAR____TtC5Music17PlaylistEntryData__reactionsConfiguration;
  v60 = type metadata accessor for Tracklist.ReactionsConfiguration(0);
  v61 = (uint64_t)v121;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v121, 1, 1, v60);
  v62 = v122;
  sub_10004A160(v61, v122, (uint64_t *)&unk_1011A64E8);
  v63 = v124;
  Published.init(initialValue:)(v62, v123);
  sub_10004FF60(v61, (uint64_t *)&unk_1011A64E8);
  (*(void (**)(uint64_t, char *, uint64_t))(v127 + 32))(v59, v63, v130);
  v64 = v145;
  Track.artworkViewModel.getter(v148);
  v65 = v136;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v136 + 16);
  v67 = v135;
  v66(v135, (uint64_t)v64, v55);
  v68 = v65;
  v69 = *(uint64_t (**)(char *, uint64_t))(v65 + 88);
  v70 = v67;
  v71 = v69(v67, v55);
  v72 = enum case for Track.song(_:);
  if (v71 == enum case for Track.song(_:))
  {
    v73 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v74 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v137, 1, 10, v73);
    v75 = enum case for Track.musicVideo(_:);
  }
  else
  {
    v75 = v71;
    v74 = (uint64_t)v137;
    v76 = enum case for Track.musicVideo(_:);
    v77 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
    if (v75 == v76)
    {
      v78(v74, 4, 10, v77);
    }
    else
    {
      v78(v74, 1, 10, v77);
      v75 = v76;
    }
  }
  v79 = *(void (**)(char *, uint64_t))(v68 + 8);
  v79(v70, v55);
  v80 = v139;
  v81 = v145;
  v66(v139, (uint64_t)v145, v55);
  v82 = v69(v80, v55);
  v83 = v82 == v75;
  v84 = 0x3FF0000000000000;
  if (v83)
    v85 = 0x3FFC71C71C71C71CLL;
  else
    v85 = 0x3FF0000000000000;
  v79(v80, v55);
  if (v82 != v72)
    v84 = v85;
  v86 = Corner.small.unsafeMutableAddressor();
  v87 = *v86;
  v88 = v86[1];
  v89 = *((_BYTE *)v86 + 16);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)&v155);
  v90 = v133;
  v91 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v148, v74, v84, 0, (uint64_t)&v155, v87, v88, v89, v133);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v142)(v90, 0, 1, v143, v91);
  v92 = v132;
  v93 = swift_beginAccess(v132, v154, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v134 + 8))(v92, v151, v93);
  sub_10004A160(v90, (uint64_t)v35, (uint64_t *)&unk_1011C6790);
  Published.init(initialValue:)(v35, v144);
  sub_10004FF60(v90, (uint64_t *)&unk_1011C6790);
  v94 = swift_endAccess(v154);
  v95 = Track.title.getter(v94);
  v97 = v96;
  v98 = v138;
  swift_beginAccess(v138 + OBJC_IVAR____TtC5Music17PlaylistEntryData__title, v154, 33, 0);
  v152 = v95;
  v153 = v97;
  Published.init(initialValue:)(&v152, &type metadata for String);
  v99 = swift_endAccess(v154);
  v100 = Track.artistName.getter(v99);
  v102 = v101;
  v103 = v131;
  v104 = swift_beginAccess(v131, v154, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v146 + 8))(v103, v147, v104);
  v152 = v100;
  v153 = v102;
  Published.init(initialValue:)(&v152, v128);
  v105 = swift_endAccess(v154);
  v106 = Track.duration.getter(v105);
  LOBYTE(v102) = v107;
  v108 = v126;
  v109 = swift_beginAccess(v126, v154, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v149 + 8))(v108, v150, v109);
  v152 = v106;
  LOBYTE(v153) = v102 & 1;
  Published.init(initialValue:)(&v152, v125);
  v110 = swift_endAccess(v154);
  v111 = v140;
  Track.contentRating.getter(v110);
  LOBYTE(v106) = TextBadge.init(for:isPlayable:)(v111, 1);
  swift_beginAccess(v98 + OBJC_IVAR____TtC5Music17PlaylistEntryData__explicitBadge, v154, 33, 0);
  LOBYTE(v152) = v106;
  Published.init(initialValue:)(&v152, &type metadata for TextBadge);
  swift_endAccess(v154);
  v112 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 8))(v141, v112);
  v79(v81, v55);
  return v98;
}

uint64_t sub_1001ED4A8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001ED7F8((uint64_t)&unk_100EAE968, (uint64_t)&unk_100EAE990, a1);
}

uint64_t sub_1001ED4BC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAE920);
  v2 = swift_getKeyPath(&unk_100EAE948);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001ED530()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAE8D8);
  v2 = swift_getKeyPath(&unk_100EAE900);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001ED5A0()
{
  return sub_1001ED6C0((uint64_t)&unk_100EAE890, (uint64_t)&unk_100EAE8B8);
}

uint64_t sub_1001ED5B4()
{
  return sub_1001ED6C0((uint64_t)&unk_100EAE848, (uint64_t)&unk_100EAE870);
}

uint64_t sub_1001ED5C8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAE800);
  v2 = swift_getKeyPath(&unk_100EAE828);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001ED63C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAE7B8);
  v2 = swift_getKeyPath(&unk_100EAE7E0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001ED6AC()
{
  return sub_1001ED6C0((uint64_t)&unk_100EAE770, (uint64_t)&unk_100EAE798);
}

uint64_t sub_1001ED6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_1001ED728@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001ED7F8((uint64_t)&unk_100EAE728, (uint64_t)&unk_100EAE750, a1);
}

uint64_t (*sub_1001ED73C())()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  KeyPath = swift_getKeyPath(&unk_100EAE6E0);
  v2 = swift_getKeyPath(&unk_100EAE708);
  static Published.subscript.getter(v7, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v7[0];
  if (!v7[0])
    return 0;
  v4 = v7[1];
  v5 = swift_allocObject(&unk_1010B5D70, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  return sub_1001EF104;
}

uint64_t sub_1001ED7E4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001ED7F8((uint64_t)&unk_100EAE698, (uint64_t)&unk_100EAE6C0, a1);
}

uint64_t sub_1001ED7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  return swift_release(v7);
}

uint64_t sub_1001ED854@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAE920);
  v5 = swift_getKeyPath(&unk_100EAE948);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1001ED8D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAE920);
  v6 = swift_getKeyPath(&unk_100EAE948);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

uint64_t sub_1001ED958@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAE8D8);
  v5 = swift_getKeyPath(&unk_100EAE900);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_1001ED9D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAE8D8);
  v6 = swift_getKeyPath(&unk_100EAE900);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1001EDA54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAE800);
  v5 = swift_getKeyPath(&unk_100EAE828);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1001EDAD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAE800);
  v6 = swift_getKeyPath(&unk_100EAE828);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

uint64_t sub_1001EDB58@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAE7B8);
  v5 = swift_getKeyPath(&unk_100EAE7E0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001EDBD4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAE7B8);
  v5 = swift_getKeyPath(&unk_100EAE7E0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1001EDC44(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v13[2];

  v8 = *a1;
  v7 = a1[1];
  v9 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v11 = swift_getKeyPath(a6);
  v13[0] = v8;
  v13[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_retain(v9);
  return static Published.subscript.setter(v13, v9, KeyPath, v11);
}

uint64_t sub_1001EDCC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v22;

  v12 = sub_100007E8C(a5);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v22 - v16;
  sub_10004A160(a1, (uint64_t)&v22 - v16, a5);
  v18 = *a2;
  KeyPath = swift_getKeyPath(a6);
  v20 = swift_getKeyPath(a7);
  sub_10004A160((uint64_t)v17, (uint64_t)v14, a5);
  swift_retain(v18);
  static Published.subscript.setter(v14, v18, KeyPath, v20);
  return sub_10004FF60((uint64_t)v17, a5);
}

uint64_t sub_1001EDDBC@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = a2(*a1);
  *a3 = result;
  return result;
}

double sub_1001EDDE8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  __int128 v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  result = *(double *)&v10;
  *a4 = v10;
  return result;
}

uint64_t sub_1001EDE60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  _QWORD v13[2];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1010B5CF8, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1001EF104;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAE6E0);
  v9 = swift_getKeyPath(&unk_100EAE708);
  if (v3)
  {
    v10 = swift_allocObject(&unk_1010B5CD0, 32, 7);
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v10 + 24) = v5;
    v11 = sub_1001EF108;
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v13[0] = v11;
  v13[1] = v10;
  sub_100048AAC(v3, v4);
  swift_retain(v7);
  return static Published.subscript.setter(v13, v7, KeyPath, v9);
}

uint64_t sub_1001EDF54(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3;
  uint64_t v4;

  v4 = a1;
  a2(&v3, &v4);
  return v3;
}

uint64_t sub_1001EDF8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(a4, v6, KeyPath, v8);
  swift_release(KeyPath);
  return swift_release(v8);
}

uint64_t sub_1001EDFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v140;

  v6 = v5;
  v124 = a4;
  v125 = a5;
  v123 = a3;
  v138 = a2;
  v8 = type metadata accessor for Playlist.Entry(0);
  v130 = *(_QWORD *)(v8 - 8);
  v131 = v8;
  __chkstk_darwin(v8);
  v136 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for Playlist(0);
  v129 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v128 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C8D50);
  v12 = __chkstk_darwin(v11);
  v132 = (uint64_t)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v134 = (uint64_t)&v116 - v15;
  __chkstk_darwin(v14);
  v133 = (char *)&v116 - v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011A64E8);
  v18 = __chkstk_darwin(v17);
  v122 = (uint64_t)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v121 = (uint64_t)&v116 - v20;
  v120 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v21 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v23 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for Song(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v25);
  v27 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  v29 = __chkstk_darwin(v28);
  v127 = (uint64_t)&v116 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v116 - v32;
  __chkstk_darwin(v31);
  v35 = (char *)&v116 - v34;
  sub_1001EC360((uint64_t)&v116 - v34);
  KeyPath = swift_getKeyPath(&unk_100EAE968);
  v37 = swift_getKeyPath(&unk_100EAE990);
  sub_10004A160((uint64_t)v35, (uint64_t)v33, (uint64_t *)&unk_1011C6790);
  swift_retain(v6);
  static Published.subscript.setter(v33, v6, KeyPath, v37);
  v126 = v35;
  v38 = sub_10004FF60((uint64_t)v35, (uint64_t *)&unk_1011C6790);
  if ((Playlist.isChart.getter(v38) & 1) != 0)
  {
    result = Playlist.Entry.position.getter();
    v39 = result + 1;
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v40 = 0x80;
  }
  else
  {
    v39 = 0;
    v40 = -2;
  }
  v42 = swift_getKeyPath(&unk_100EAE920);
  v43 = swift_getKeyPath(&unk_100EAE948);
  v139 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))v39;
  LOBYTE(v140) = v40;
  swift_retain(v6);
  v44 = static Published.subscript.setter(&v139, v6, v42, v43);
  v45 = Playlist.Entry.title.getter(v44);
  v47 = v46;
  v48 = swift_getKeyPath(&unk_100EAE8D8);
  v49 = swift_getKeyPath(&unk_100EAE900);
  v139 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))v45;
  v140 = v47;
  swift_retain(v6);
  v50 = static Published.subscript.setter(&v139, v6, v48, v49);
  v51 = Playlist.Entry.artistName.getter(v50);
  v53 = v52;
  v54 = swift_getKeyPath(&unk_100EAE890);
  v55 = swift_getKeyPath(&unk_100EAE8B8);
  v139 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))v51;
  v140 = v53;
  swift_retain(v6);
  v56 = static Published.subscript.setter(&v139, v6, v54, v55);
  if ((Playlist.isChart.getter(v56) & 1) != 0)
  {
    v57 = Playlist.Entry.albumTitle.getter();
    v58 = v59;
  }
  else
  {
    v57 = 0;
    v58 = 0;
  }
  v60 = swift_getKeyPath(&unk_100EAE848);
  v61 = swift_getKeyPath(&unk_100EAE870);
  v139 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))v57;
  v140 = v58;
  swift_retain(v6);
  v62 = static Published.subscript.setter(&v139, v6, v60, v61);
  v63 = Playlist.Entry.duration.getter(v62);
  LOBYTE(v60) = v64;
  v65 = swift_getKeyPath(&unk_100EAE800);
  v66 = swift_getKeyPath(&unk_100EAE828);
  v139 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))v63;
  LOBYTE(v140) = v60 & 1;
  swift_retain(v6);
  v67 = static Published.subscript.setter(&v139, v6, v65, v66);
  Playlist.Entry.contentRating.getter(v67);
  LOBYTE(v63) = TextBadge.init(for:isPlayable:)(v27, 1);
  v68 = swift_getKeyPath(&unk_100EAE7B8);
  v69 = swift_getKeyPath(&unk_100EAE7E0);
  LOBYTE(v139) = v63;
  swift_retain(v6);
  v137 = v6;
  v70 = static Published.subscript.setter(&v139, v6, v68, v69);
  Playlist.Entry.internalItem.getter(v70);
  v71 = v120;
  if ((*(unsigned int (**)(char *, uint64_t))(v21 + 88))(v23, v120) == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v23, v71);
    v72 = v118;
    v73 = v117;
    v74 = v119;
    v75 = (*(uint64_t (**)(char *, char *, uint64_t))(v118 + 32))(v117, v23, v119);
    v76 = Song.id.getter(v75);
    v78 = v77;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v71);
    v76 = 0;
    v78 = 0;
  }
  v79 = v128;
  v80 = swift_getKeyPath(&unk_100EAE770);
  v81 = swift_getKeyPath(&unk_100EAE798);
  v139 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))v76;
  v140 = v78;
  v82 = v137;
  swift_retain(v137);
  static Published.subscript.setter(&v139, v82, v80, v81);
  v83 = v121;
  sub_10004A160(v123, v121, (uint64_t *)&unk_1011A64E8);
  v84 = swift_getKeyPath(&unk_100EAE698);
  v85 = swift_getKeyPath(&unk_100EAE6C0);
  v86 = v122;
  sub_10004A160(v83, v122, (uint64_t *)&unk_1011A64E8);
  swift_retain(v82);
  static Published.subscript.setter(v86, v82, v84, v85);
  sub_10004FF60(v83, (uint64_t *)&unk_1011A64E8);
  v87 = swift_getKeyPath(&unk_100EAE6E0);
  v88 = swift_getKeyPath(&unk_100EAE708);
  v89 = v135;
  v90 = v124;
  v91 = v79;
  if (v124)
  {
    v92 = swift_allocObject(&unk_1010B5D48, 32, 7);
    v93 = v125;
    *(_QWORD *)(v92 + 16) = v90;
    *(_QWORD *)(v92 + 24) = v93;
    v94 = sub_1001F0A40;
    v95 = v134;
  }
  else
  {
    v94 = 0;
    v92 = 0;
    v95 = v134;
    v93 = v125;
  }
  v139 = v94;
  v140 = v92;
  v96 = v137;
  swift_retain(v137);
  sub_100048AAC(v90, v93);
  v97 = static Published.subscript.setter(&v139, v96, v87, v88);
  Playlist.Entry.contributor.getter(v97);
  v98 = v129;
  v99 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v91, v138, v89);
  v100 = v130;
  v101 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v136, a1, v131);
  v102 = type metadata accessor for SocialProfile(0);
  v103 = *(_QWORD *)(v102 - 8);
  v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
  if (v104(v95, 1, v102) == 1)
  {
    v105 = v101;
    v106 = (uint64_t)v133;
    v107 = v136;
    Playlist.contributor(for:)(v136);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v107, v105);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v91, v135);
    sub_10004FF60(v134, &qword_1011C8D50);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v136, v101);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v91, v99);
    v106 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v133, v95, v102);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v103 + 56))(v106, 0, 1, v102);
  }
  v108 = v132;
  sub_10004A160(v106, v132, &qword_1011C8D50);
  v109 = v104(v108, 1, v102);
  v110 = v137;
  if (v109 == 1)
  {
    sub_10004FF60(v108, &qword_1011C8D50);
    v111 = type metadata accessor for ArtworkImage.Info(0);
    v112 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v127, 1, 1, v111);
  }
  else
  {
    v112 = v127;
    sub_1001EC680(v127);
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v108, v102);
  }
  v113 = swift_getKeyPath(&unk_100EAE728);
  v114 = swift_getKeyPath(&unk_100EAE750);
  v115 = (uint64_t)v126;
  sub_10004A160(v112, (uint64_t)v126, (uint64_t *)&unk_1011C6790);
  swift_retain(v110);
  static Published.subscript.setter(v115, v110, v113, v114);
  sub_10004FF60(v112, (uint64_t *)&unk_1011C6790);
  return sub_10004FF60(v106, &qword_1011C8D50);
}

uint64_t sub_1001EE980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__artworkInfo;
  v2 = sub_100007E8C(&qword_1011A6848);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__leadingNumberState;
  v5 = sub_100007E8C(&qword_1011A6840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__title;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__artist;
  v9 = sub_100007E8C(&qword_10119F090);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__album, v9);
  v11 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__duration;
  v12 = sub_100007E8C(&qword_1011A6838);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__explicitBadge;
  v14 = sub_100007E8C(&qword_1011A6858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__previewID;
  v16 = sub_100007E8C(&qword_1011A6830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v3(v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__socialProfileArtworkInfo, v2);
  v17 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__contextMenuProvider;
  v18 = sub_100007E8C(&qword_1011A6828);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData__reactionsConfiguration;
  v20 = sub_100007E8C(&qword_1011A6820);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  return v0;
}

uint64_t sub_1001EEB68()
{
  uint64_t v0;

  sub_1001EE980();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001EEB8C()
{
  return type metadata accessor for PlaylistEntryData(0);
}

uint64_t type metadata accessor for PlaylistEntryData(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A6478;
  if (!qword_1011A6478)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistEntryData);
  return result;
}

void sub_1001EEBD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v21[0] = &unk_100EAE628;
  sub_1000EA54C(319, &qword_1011A6488, (uint64_t *)&unk_1011C6790);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v21[1] = v4;
    sub_1000EA54C(319, &qword_1011A6490, &qword_1011A6498);
    if (v6 <= 0x3F)
    {
      v21[2] = *(_QWORD *)(v5 - 8) + 64;
      v21[3] = &unk_100EAE628;
      sub_1000EA598(319, (unint64_t *)&qword_1011A0A58, (uint64_t)&type metadata for String);
      if (v8 <= 0x3F)
      {
        v21[4] = *(_QWORD *)(v7 - 8) + 64;
        sub_1000EA54C(319, (unint64_t *)&qword_1011A64A0, &qword_10119DCA0);
        if (v10 <= 0x3F)
        {
          v22 = *(_QWORD *)(v9 - 8) + 64;
          v23 = v22;
          sub_1000EA54C(319, &qword_1011A64A8, &qword_1011A64B0);
          if (v12 <= 0x3F)
          {
            v24 = *(_QWORD *)(v11 - 8) + 64;
            sub_1000EA598(319, &qword_1011A64B8, (uint64_t)&type metadata for TextBadge);
            if (v14 <= 0x3F)
            {
              v25 = *(_QWORD *)(v13 - 8) + 64;
              sub_1000EA54C(319, &qword_1011A64C0, &qword_1011A64C8);
              if (v16 <= 0x3F)
              {
                v26 = *(_QWORD *)(v15 - 8) + 64;
                v27 = v4;
                sub_1000EA54C(319, &qword_1011A64D0, &qword_1011A64D8);
                if (v18 <= 0x3F)
                {
                  v28 = *(_QWORD *)(v17 - 8) + 64;
                  sub_1000EA54C(319, &qword_1011A64E0, (uint64_t *)&unk_1011A64E8);
                  if (v20 <= 0x3F)
                  {
                    v29 = *(_QWORD *)(v19 - 8) + 64;
                    swift_updateClassMetadata2(a1, 256, 13, v21, a1 + 80);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t MetricsEvent.ComponentRender.componentType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1001EEDC4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001EEF60((uint64_t)&unk_100EAE968, (uint64_t)&unk_100EAE990, a1);
}

uint64_t sub_1001EEDD8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Music17PlaylistEntryData_showVideoIcon);
}

uint64_t sub_1001EEDE8(uint64_t a1, uint64_t a2)
{
  return sub_1001EEE24(a1, a2, (uint64_t)&unk_100EAE890, (uint64_t)&unk_100EAE8B8);
}

uint64_t sub_1001EEDFC(uint64_t a1, uint64_t a2)
{
  return sub_1001EEE24(a1, a2, (uint64_t)&unk_100EAE848, (uint64_t)&unk_100EAE870);
}

uint64_t sub_1001EEE10(uint64_t a1, uint64_t a2)
{
  return sub_1001EEE24(a1, a2, (uint64_t)&unk_100EAE770, (uint64_t)&unk_100EAE798);
}

uint64_t sub_1001EEE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a3);
  v7 = swift_getKeyPath(a4);
  static Published.subscript.getter(&v9, v4, KeyPath, v7);
  swift_release(KeyPath);
  swift_release(v7);
  return v9;
}

uint64_t sub_1001EEE90@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001EEF60((uint64_t)&unk_100EAE728, (uint64_t)&unk_100EAE750, a1);
}

uint64_t (*sub_1001EEEA4())()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  KeyPath = swift_getKeyPath(&unk_100EAE6E0);
  v2 = swift_getKeyPath(&unk_100EAE708);
  static Published.subscript.getter(v7, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v7[0];
  if (!v7[0])
    return 0;
  v4 = v7[1];
  v5 = swift_allocObject(&unk_1010B5CA8, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  return sub_1001EF104;
}

uint64_t sub_1001EEF4C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001EEF60((uint64_t)&unk_100EAE698, (uint64_t)&unk_100EAE6C0, a1);
}

uint64_t sub_1001EEF60@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  return swift_release(v7);
}

uint64_t sub_1001EEFC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for PlaylistEntryData(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

unint64_t sub_1001EEFFC(uint64_t a1)
{
  unint64_t result;

  result = sub_1001EF020();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001EF020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A6818;
  if (!qword_1011A6818)
  {
    v1 = type metadata accessor for PlaylistEntryData(255);
    result = swift_getWitnessTable(&unk_100EAE640, v1);
    atomic_store(result, (unint64_t *)&qword_1011A6818);
  }
  return result;
}

uint64_t sub_1001EF068@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001EDF8C(a1, (uint64_t)&unk_100EAE698, (uint64_t)&unk_100EAE6C0, a2);
}

uint64_t sub_1001EF08C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDCC0(a1, a2, a3, a4, (uint64_t *)&unk_1011A64E8, (uint64_t)&unk_100EAE698, (uint64_t)&unk_100EAE6C0);
}

double sub_1001EF0B8@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001EDDE8(a1, (uint64_t)&unk_100EAE6E0, (uint64_t)&unk_100EAE708, a2);
}

uint64_t sub_1001EF0E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001EF108@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001EF134@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001EDF8C(a1, (uint64_t)&unk_100EAE728, (uint64_t)&unk_100EAE750, a2);
}

uint64_t sub_1001EF158(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDCC0(a1, a2, a3, a4, (uint64_t *)&unk_1011C6790, (uint64_t)&unk_100EAE728, (uint64_t)&unk_100EAE750);
}

double sub_1001EF184@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001EDDE8(a1, (uint64_t)&unk_100EAE770, (uint64_t)&unk_100EAE798, a2);
}

uint64_t sub_1001EF1A8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDC44(a1, a2, a3, a4, (uint64_t)&unk_100EAE770, (uint64_t)&unk_100EAE798);
}

double sub_1001EF1DC@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001EDDE8(a1, (uint64_t)&unk_100EAE848, (uint64_t)&unk_100EAE870, a2);
}

uint64_t sub_1001EF200(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDC44(a1, a2, a3, a4, (uint64_t)&unk_100EAE848, (uint64_t)&unk_100EAE870);
}

double sub_1001EF224@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001EDDE8(a1, (uint64_t)&unk_100EAE890, (uint64_t)&unk_100EAE8B8, a2);
}

uint64_t sub_1001EF248(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDC44(a1, a2, a3, a4, (uint64_t)&unk_100EAE890, (uint64_t)&unk_100EAE8B8);
}

uint64_t sub_1001EF27C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001EDF8C(a1, (uint64_t)&unk_100EAE968, (uint64_t)&unk_100EAE990, a2);
}

uint64_t sub_1001EF2A0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDCC0(a1, a2, a3, a4, (uint64_t *)&unk_1011C6790, (uint64_t)&unk_100EAE968, (uint64_t)&unk_100EAE990);
}

double sub_1001EF2CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v0 = type metadata accessor for UploadedVideo(0);
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v35 - v7;
  v9 = type metadata accessor for TVEpisode(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v15);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  if (v18 != enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    v36 = v6;
    v21 = v37;
    v20 = v38;
    if (v18 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
    else
    {
      if (v18 == enum case for Playlist.Entry.InternalItem.song(_:))
        goto LABEL_14;
      if (v18 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v14 + 96))(v17, v13);
        v22 = v12;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v17, v9);
        TVEpisode.artworkViewModel.getter(v8);
        v23 = type metadata accessor for ArtworkImage.ViewModel(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v8, 1, v23) == 1)
        {
          sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3E10);
        }
        else
        {
          v29 = ArtworkImage.ViewModel.calculatedAspectRatio.getter();
          v31 = v30;
          sub_1000F73C0((uint64_t)v8);
          if ((v31 & 1) == 0)
          {
            v19 = *(double *)&v29;
            (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
            return v19;
          }
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
        return 1.77777778;
      }
      if (v18 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
        || v18 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
      {
LABEL_14:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
        return 1.0;
      }
      (*(void (**)(char *, uint64_t))(v14 + 96))(v17, v13);
      v24 = v2;
      v25 = v20;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v2, v17, v20);
      v26 = v36;
      ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v20, (uint64_t)&protocol witness table for UploadedVideo, v36);
      v27 = type metadata accessor for ArtworkImage.ViewModel(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27) == 1)
      {
        sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A3E10);
      }
      else
      {
        v32 = ArtworkImage.ViewModel.calculatedAspectRatio.getter();
        v34 = v33;
        sub_1000F73C0((uint64_t)v26);
        if ((v34 & 1) == 0)
        {
          v19 = *(double *)&v32;
          (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v25);
          return v19;
        }
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v25);
    }
    return 1.77777778;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return 0.666666667;
}

uint64_t sub_1001EF680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F09CC();
  v8 = SocialProfile.name.getter();
  v10 = v9;
  v11 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v8, v9, 0, 1);
  swift_bridgeObjectRelease(v10);
  if (v11)
  {
    v12 = v11;
    v13 = Artwork.init(_:)();
    static Artwork.CropStyle.boundedBox.getter(v13);

    v14 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 0, 1, v14);
    ArtworkImage.ViewModel.init(artwork:cropStyle:)((uint64_t)v7, (uint64_t)v4, a1);
    v15 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    v17 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_1001EF7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin();
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for Playlist.Entry.InternalItem.musicMovie(_:)
    || v7 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    goto LABEL_15;
  }
  if (v7 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v9 = type metadata accessor for Song(0);
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v6, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  v12 = v7 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:)
     || v7 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:);
  if (v12 || v7 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v14 = type metadata accessor for Song(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
  else
  {
    v15 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_1001EF9A0(char *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, char *, uint64_t);
  uint64_t v45;
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char **v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t result;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  void (*v93)(uint64_t, uint64_t, __n128);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t KeyPath;
  uint64_t v127;
  char **v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  void (*v201)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char **v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t (*v219)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v220;

  v177 = a5;
  v176 = a4;
  v204 = a3;
  v215 = a2;
  v216 = a1;
  v205 = type metadata accessor for Playlist.Entry(0);
  v182 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v181 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for Playlist(0);
  v180 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin(v214);
  v179 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C8D50);
  v9 = __chkstk_darwin(v8);
  v183 = (uint64_t)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v178 = (char *)&v161 - v12;
  __chkstk_darwin(v11);
  v203 = (uint64_t)&v161 - v13;
  v174 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v172 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v173 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for Song(0);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v161 = (char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v16);
  v171 = (char *)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = (char *)sub_100007E8C(&qword_1011A6820);
  v199 = *((_QWORD *)v200 - 1);
  __chkstk_darwin(v200);
  v198 = (char *)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_100007E8C((uint64_t *)&unk_1011A64E8);
  v19 = __chkstk_darwin(v197);
  v213 = (uint64_t)&v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v212 = (char **)((char *)&v161 - v21);
  v196 = sub_100007E8C(&qword_1011A6828);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v194 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100007E8C(&qword_1011A6830);
  v192 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v191 = (char *)&v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011A6838);
  v210 = *(_QWORD *)(v24 - 8);
  v211 = v24;
  __chkstk_darwin(v24);
  v188 = (char *)&v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_100007E8C(&qword_10119F090);
  v209 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v27 = (char *)&v161 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011A6840);
  v207 = *(_QWORD *)(v28 - 8);
  v208 = v28;
  __chkstk_darwin(v28);
  v30 = (char *)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100007E8C(&qword_1011A6848);
  v190 = *(_QWORD *)(v184 - 8);
  v31 = v190;
  __chkstk_darwin(v184);
  v33 = (char *)&v161 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  v187 = v34;
  v35 = __chkstk_darwin(v34);
  v175 = (uint64_t)&v161 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v161 - v38;
  __chkstk_darwin(v37);
  v41 = (char *)&v161 - v40;
  *(_BYTE *)(v5 + 16) = 0;
  v42 = v5 + OBJC_IVAR____TtC5Music17PlaylistEntryData__artworkInfo;
  v189 = v5 + OBJC_IVAR____TtC5Music17PlaylistEntryData__artworkInfo;
  v43 = type metadata accessor for ArtworkImage.Info(0);
  v201 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v202 = v43;
  v201(v41, 1, 1, v43);
  v186 = v39;
  sub_10004A160((uint64_t)v41, (uint64_t)v39, (uint64_t *)&unk_1011C6790);
  v185 = v33;
  Published.init(initialValue:)(v39, v34);
  sub_10004FF60((uint64_t)v41, (uint64_t *)&unk_1011C6790);
  v44 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 32);
  v45 = v184;
  v44(v42, v33, v184);
  v46 = v44;
  v47 = v5 + OBJC_IVAR____TtC5Music17PlaylistEntryData__leadingNumberState;
  v219 = 0;
  LOBYTE(v220) = -2;
  v164 = sub_100007E8C(&qword_1011A6498);
  Published.init(initialValue:)(&v219, v164);
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v207 + 32);
  v165 = v47;
  v48(v47, v30, v208);
  v49 = v5;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC5Music17PlaylistEntryData_showVideoIcon) = 0;
  v50 = v5 + OBJC_IVAR____TtC5Music17PlaylistEntryData__artist;
  v219 = 0;
  v220 = 0;
  v51 = sub_100007E8C(&qword_10119DCA0);
  Published.init(initialValue:)(&v219, v51);
  v52 = *(void (**)(uint64_t, char *, uint64_t))(v209 + 32);
  v167 = v50;
  v53 = v206;
  v52(v50, v27, v206);
  v54 = v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__album;
  v219 = 0;
  v220 = 0;
  v166 = v51;
  Published.init(initialValue:)(&v219, v51);
  v169 = v54;
  v52(v54, v27, v53);
  v55 = v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__duration;
  v219 = 0;
  LOBYTE(v220) = 1;
  v56 = sub_100007E8C(&qword_1011A64B0);
  v57 = v188;
  v170 = v56;
  Published.init(initialValue:)(&v219, v56);
  v58 = *(void (**)(uint64_t, char *, uint64_t))(v210 + 32);
  v168 = v55;
  v58(v55, v57, v211);
  v59 = v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__previewID;
  v219 = 0;
  v220 = 0;
  v60 = sub_100007E8C(&qword_1011A64C8);
  v61 = v191;
  Published.init(initialValue:)(&v219, v60);
  (*(void (**)(uint64_t, char *, uint64_t))(v192 + 32))(v59, v61, v193);
  v62 = v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__socialProfileArtworkInfo;
  v201(v41, 1, 1, v202);
  v63 = (uint64_t)v186;
  sub_10004A160((uint64_t)v41, (uint64_t)v186, (uint64_t *)&unk_1011C6790);
  v64 = v185;
  v65 = v187;
  Published.init(initialValue:)(v63, v187);
  sub_10004FF60((uint64_t)v41, (uint64_t *)&unk_1011C6790);
  v66 = v45;
  v46(v62, v64, v45);
  v67 = v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__contextMenuProvider;
  v219 = 0;
  v220 = 0;
  v68 = sub_100007E8C(&qword_1011A64D8);
  v69 = v194;
  Published.init(initialValue:)(&v219, v68);
  (*(void (**)(uint64_t, char *, uint64_t))(v195 + 32))(v67, v69, v196);
  v70 = v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__reactionsConfiguration;
  v71 = type metadata accessor for Tracklist.ReactionsConfiguration(0);
  v72 = v212;
  (*(void (**)(char **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v212, 1, 1, v71);
  v73 = v213;
  sub_10004A160((uint64_t)v72, v213, (uint64_t *)&unk_1011A64E8);
  v74 = v198;
  Published.init(initialValue:)(v73, v197);
  sub_10004FF60((uint64_t)v72, (uint64_t *)&unk_1011A64E8);
  (*(void (**)(uint64_t, char *, char *))(v199 + 32))(v70, v74, v200);
  sub_1001EC360((uint64_t)v41);
  v75 = v189;
  v76 = swift_beginAccess(v189, &v219, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v190 + 8))(v75, v66, v76);
  sub_10004A160((uint64_t)v41, v63, (uint64_t *)&unk_1011C6790);
  Published.init(initialValue:)(v63, v65);
  v200 = v41;
  sub_10004FF60((uint64_t)v41, (uint64_t *)&unk_1011C6790);
  v77 = swift_endAccess(&v219);
  if ((Playlist.isChart.getter(v77) & 1) != 0)
  {
    result = Playlist.Entry.position.getter();
    v78 = result + 1;
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v79 = 0x80;
  }
  else
  {
    v78 = 0;
    v79 = -2;
  }
  v81 = v165;
  v82 = swift_beginAccess(v165, &v219, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v207 + 8))(v81, v208, v82);
  v217 = v78;
  LOBYTE(v218) = v79;
  Published.init(initialValue:)(&v217, v164);
  v83 = swift_endAccess(&v219);
  v84 = Playlist.Entry.title.getter(v83);
  v86 = v85;
  swift_beginAccess(v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__title, &v219, 33, 0);
  v217 = v84;
  v218 = v86;
  Published.init(initialValue:)(&v217, &type metadata for String);
  v87 = swift_endAccess(&v219);
  v88 = Playlist.Entry.artistName.getter(v87);
  v90 = v89;
  v91 = v167;
  v92 = swift_beginAccess(v167, &v219, 33, 0);
  v93 = *(void (**)(uint64_t, uint64_t, __n128))(v209 + 8);
  v94 = v206;
  v93(v91, v206, v92);
  v217 = v88;
  v218 = v90;
  v95 = v166;
  Published.init(initialValue:)(&v217, v166);
  v96 = swift_endAccess(&v219);
  v97 = Playlist.isChart.getter(v96);
  v98 = 0;
  v99 = 0;
  v100 = v182;
  v101 = v178;
  v102 = v176;
  if ((v97 & 1) != 0)
  {
    v98 = Playlist.Entry.albumTitle.getter();
    v99 = v103;
  }
  v104 = v169;
  v105 = swift_beginAccess(v169, &v219, 33, 0);
  v93(v104, v94, v105);
  v217 = v98;
  v218 = v99;
  Published.init(initialValue:)(&v217, v95);
  v106 = swift_endAccess(&v219);
  v107 = Playlist.Entry.duration.getter(v106);
  v109 = v108;
  v110 = v168;
  v111 = swift_beginAccess(v168, &v219, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v210 + 8))(v110, v211, v111);
  v217 = v107;
  LOBYTE(v218) = v109 & 1;
  Published.init(initialValue:)(&v217, v170);
  v112 = swift_endAccess(&v219);
  v113 = v171;
  Playlist.Entry.contentRating.getter(v112);
  LOBYTE(v107) = TextBadge.init(for:isPlayable:)(v113, 1);
  swift_beginAccess(v49 + OBJC_IVAR____TtC5Music17PlaylistEntryData__explicitBadge, &v219, 33, 0);
  LOBYTE(v217) = v107;
  Published.init(initialValue:)(&v217, &type metadata for TextBadge);
  v114 = swift_endAccess(&v219);
  v115 = v173;
  Playlist.Entry.internalItem.getter(v114);
  v116 = v172;
  v117 = v174;
  if ((*(unsigned int (**)(char *, uint64_t))(v172 + 88))(v115, v174) == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v116 + 96))(v115, v117);
    v118 = v162;
    v119 = v161;
    v120 = v163;
    v121 = (*(uint64_t (**)(char *, char *, uint64_t))(v162 + 32))(v161, v115, v163);
    v122 = Song.id.getter(v121);
    v124 = v123;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v117);
    v122 = 0;
    v124 = 0;
  }
  v125 = v100;
  KeyPath = swift_getKeyPath(&unk_100EAE770);
  v127 = swift_getKeyPath(&unk_100EAE798);
  v219 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))v122;
  v220 = v124;
  swift_retain(v49);
  static Published.subscript.setter(&v219, v49, KeyPath, v127);
  v128 = v212;
  sub_10004A160(v204, (uint64_t)v212, (uint64_t *)&unk_1011A64E8);
  v129 = swift_getKeyPath(&unk_100EAE698);
  v130 = swift_getKeyPath(&unk_100EAE6C0);
  v131 = v213;
  sub_10004A160((uint64_t)v128, v213, (uint64_t *)&unk_1011A64E8);
  swift_retain(v49);
  static Published.subscript.setter(v131, v49, v129, v130);
  sub_10004FF60((uint64_t)v128, (uint64_t *)&unk_1011A64E8);
  v132 = swift_getKeyPath(&unk_100EAE6E0);
  v133 = swift_getKeyPath(&unk_100EAE708);
  v134 = v177;
  if (v102)
  {
    v135 = swift_allocObject(&unk_1010B5D20, 32, 7);
    *(_QWORD *)(v135 + 16) = v102;
    *(_QWORD *)(v135 + 24) = v134;
    v136 = sub_1001F0A40;
  }
  else
  {
    v136 = 0;
    v135 = 0;
  }
  v137 = v181;
  v138 = v180;
  v139 = v205;
  v219 = v136;
  v220 = v135;
  swift_retain(v49);
  sub_100048AAC(v102, v134);
  v213 = v49;
  v140 = static Published.subscript.setter(&v219, v49, v132, v133);
  v141 = v216;
  Playlist.Entry.contributor.getter(v140);
  v142 = v179;
  v143 = v214;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v179, v215, v214);
  (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v137, v141, v139);
  v144 = type metadata accessor for SocialProfile(0);
  v145 = *(_QWORD *)(v144 - 8);
  v212 = *(char ***)(v145 + 48);
  v146 = ((uint64_t (*)(char *, uint64_t, uint64_t))v212)(v101, 1, v144);
  v147 = (uint64_t)v101;
  v148 = v138;
  if (v146 == 1)
  {
    v149 = v203;
    Playlist.contributor(for:)(v137);
    v150 = v149;
    v151 = *(void (**)(char *, uint64_t))(v125 + 8);
    v151(v137, v139);
    v152 = *(void (**)(char *, uint64_t))(v148 + 8);
    v152(v142, v214);
    sub_10004FF60(v147, &qword_1011C8D50);
  }
  else
  {
    v151 = *(void (**)(char *, uint64_t))(v125 + 8);
    v151(v137, v139);
    v152 = *(void (**)(char *, uint64_t))(v148 + 8);
    v152(v142, v143);
    v150 = v203;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32))(v203, v147, v144);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v145 + 56))(v150, 0, 1, v144);
  }
  v153 = v150;
  v154 = v183;
  sub_10004A160(v153, v183, &qword_1011C8D50);
  v155 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v212)(v154, 1, v144);
  v156 = v175;
  if (v155 == 1)
  {
    sub_10004FF60(v154, &qword_1011C8D50);
    v201((char *)v156, 1, 1, v202);
  }
  else
  {
    sub_1001EC680(v175);
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v154, v144);
  }
  v157 = v213;
  v158 = swift_getKeyPath(&unk_100EAE728);
  v159 = swift_getKeyPath(&unk_100EAE750);
  v160 = (uint64_t)v200;
  sub_10004A160(v156, (uint64_t)v200, (uint64_t *)&unk_1011C6790);
  swift_retain(v157);
  static Published.subscript.setter(v160, v157, v158, v159);
  sub_10004FF60(v156, (uint64_t *)&unk_1011C6790);
  sub_10004FF60(v204, (uint64_t *)&unk_1011A64E8);
  v152(v215, v214);
  v151(v216, v205);
  sub_10004FF60(v203, &qword_1011C8D50);
  return v157;
}

unint64_t sub_1001F09CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A6850;
  if (!qword_1011A6850)
  {
    v1 = objc_opt_self(MPArtworkCatalog);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011A6850);
  }
  return result;
}

uint64_t sub_1001F0A08(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  v5 = a1;
  v2(&v4, &v5);
  return v4;
}

void sub_1001F0A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  void *v41;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
    v5 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v40, v3, v4, v5);
    v1 = v40[0];
    v38 = v40[1];
    v7 = v40[2];
    v8 = v40[3];
    v9 = v40[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v38 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v36 = v7;
  v37 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_41;
    v18 = v17;
    v39 = v17;
    v19 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
    swift_unknownObjectRetain(v18, v20);
    swift_dynamicCast(&v41, &v39, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v21 = v41;
    *(_QWORD *)&v22 = swift_unknownObjectRelease(v18).n128_u64[0];
    v16 = v8;
    v14 = v9;
    if (!v21)
      goto LABEL_41;
LABEL_37:
    v26 = v1;
    v27 = objc_msgSend(v21, "session", v22, v36);
    v28 = objc_msgSend(v27, "role");

    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIWindowSceneSessionRoleApplication);
    v34 = v32;
    if (v29 == v33 && v31 == v32)
    {

      swift_bridgeObjectRelease_n(v31, 2);
      v1 = v26;
    }
    else
    {
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);

      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v34);
      v1 = v26;
      if ((v35 & 1) == 0)
        goto LABEL_13;
    }
    if (objc_msgSend(v21, "activationState") != (id)2)
      goto LABEL_41;
LABEL_13:

    v8 = v16;
    v9 = v14;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_36:
    v21 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v21)
      goto LABEL_41;
    goto LABEL_37;
  }
  v23 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v23 >= v37)
      goto LABEL_41;
    v24 = *(_QWORD *)(v38 + 8 * v23);
    v16 = v8 + 1;
    if (!v24)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v37)
        goto LABEL_41;
      v24 = *(_QWORD *)(v38 + 8 * v16);
      if (!v24)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v37)
          goto LABEL_41;
        v24 = *(_QWORD *)(v38 + 8 * v16);
        if (!v24)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v37)
            goto LABEL_41;
          v24 = *(_QWORD *)(v38 + 8 * v16);
          if (!v24)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v37)
              goto LABEL_41;
            v24 = *(_QWORD *)(v38 + 8 * v16);
            if (!v24)
            {
              v25 = v8 + 6;
              while (v37 != v25)
              {
                v24 = *(_QWORD *)(v38 + 8 * v25++);
                if (v24)
                {
                  v16 = v25 - 1;
                  goto LABEL_35;
                }
              }
LABEL_41:
              sub_10004FA7C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_35:
    v14 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v16 << 6);
    goto LABEL_36;
  }
  __break(1u);
}

uint64_t sub_1001F0E3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t Strong;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  _BYTE v19[8];
  _BYTE v20[8];
  unint64_t v21;

  v21 = (unint64_t)_swiftEmptyArrayStorage;
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    sub_10004A160(*(_QWORD *)(a1 + 56) + 8 * v10, (uint64_t)v20, &qword_1011B8D70);
    sub_100048ACC((uint64_t)v20, (uint64_t)v19);
    sub_10004A160((uint64_t)v19, (uint64_t)v18, &qword_1011B8D70);
    Strong = swift_weakLoadStrong(v18);
    sub_10004FF60((uint64_t)v18, &qword_1011B8D70);
    result = sub_10004FF60((uint64_t)v19, &qword_1011B8D70);
    if (Strong)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(result);
      v16 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v15 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v16 >= v15 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, Strong);
      result = specialized Array._endMutation()(v17);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release(a1);
    return v21;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_1001F1050()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  __n128 v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  void (*v78)(char *, uint64_t, __n128);
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  __n128 v93;
  __n128 v94;
  __n128 v95;
  void (*v96)(char *, uint64_t, __n128);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  _QWORD *v119;
  id v120[4];

  v110 = sub_100007E8C((uint64_t *)&unk_1011A2300);
  v108 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v109 = (char *)&v98 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v111 = *(_QWORD *)(v2 - 8);
  v112 = v2;
  v3 = __chkstk_darwin(v2);
  v118 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v117 = (char *)&v98 - v5;
  v6 = sub_100007E8C(&qword_1011A2318);
  v103 = *(_QWORD *)(v6 - 8);
  v104 = v6;
  __chkstk_darwin(v6);
  v102 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)sub_100007E8C((uint64_t *)&unk_1011A2320);
  v106 = *(v8 - 1);
  v107 = v8;
  __chkstk_darwin(v8);
  v105 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A8EE0);
  v99 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100007E8C(&qword_1011B85B0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = v0;
  v0[3] = &_swiftEmptySetSingleton;
  v18 = v0 + 3;
  v0[2] = 0;
  v0[4] = 0;
  v19 = type metadata accessor for WaveformState.SamplingMode.ValueProvider(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v0[5] = WaveformState.SamplingMode.ValueProvider.init(value:)(0.0, 0.0, 0.0, 0.0, 0.0);
  v0[6] = sub_100041C2C((uint64_t)_swiftEmptyArrayStorage);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v20 = qword_10124C788;
  (*(void (**)(void))(*(_QWORD *)qword_10124C788 + 456))();
  v21 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v113 = v21;
  v120[0] = (id)static OS_dispatch_queue.main.getter(v21, v22, v23, v24, v25, v26, v27, v28);
  v29 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v116 = v29;
  v115(v12, 1, 1, v29);
  v30 = sub_100049F28((unint64_t *)&unk_1011A8F00, (uint64_t *)&unk_1011A8EE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v114 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(v120, v12, v13, v21, v30, v114);
  sub_10004FF60((uint64_t)v12, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v99 + 8))(v15, v13);
  v31 = swift_allocObject(&unk_1010B5E98, 24, 7);
  v32 = v119;
  swift_weakInit(v31 + 16, v119);
  v33 = sub_100049F28((unint64_t *)&unk_1011A8F10, &qword_1011B85B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v34 = v101;
  v35 = Publisher<>.sink(receiveValue:)(sub_1001F53EC, v31, v101, v33);
  v36 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v17, v34, v36);
  v37 = swift_beginAccess(v18, v120, 33, 0);
  AnyCancellable.store(in:)(v18, v37);
  swift_endAccess(v120);
  v38 = swift_release(v35);
  v39 = v102;
  v40 = (*(uint64_t (**)(__n128))(*(_QWORD *)v20 + 504))(v38);
  v41 = v113;
  v120[0] = (id)static OS_dispatch_queue.main.getter(v40, v42, v43, v44, v45, v46, v47, v48);
  v50 = v115;
  v49 = v116;
  v115(v12, 1, 1, v116);
  v51 = sub_100049F28(&qword_1011A2398, &qword_1011A2318, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v52 = v104;
  v53 = v105;
  v54 = v114;
  Publisher.receive<A>(on:options:)(v120, v12, v104, v41, v51, v114);
  sub_10004FF60((uint64_t)v12, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v103 + 8))(v39, v52);
  v55 = swift_allocObject(&unk_1010B5E98, 24, 7);
  swift_weakInit(v55 + 16, v32);
  v56 = sub_100049F28(&qword_1011A23A0, (uint64_t *)&unk_1011A2320, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v57 = v107;
  v58 = Publisher<>.sink(receiveValue:)(sub_1001F53F4, v55, v107, v56);
  v59 = swift_release(v55);
  (*(void (**)(char *, id, __n128))(v106 + 8))(v53, v57, v59);
  v60 = swift_beginAccess(v18, v120, 33, 0);
  AnyCancellable.store(in:)(v18, v60);
  swift_endAccess(v120);
  swift_release(v58);
  v107 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UISceneDidEnterBackgroundNotification, 0);
  v61 = NSNotificationCenter.publisher(for:object:)(UISceneWillEnterForegroundNotification, 0);
  v62 = v113;
  v120[0] = (id)static OS_dispatch_queue.main.getter(v61, v63, v64, v65, v66, v67, v68, v69);
  v50(v12, 1, 1, v49);
  v70 = sub_100048748((unint64_t *)&qword_1011A23B0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v71 = v109;
  v72 = v112;
  Publisher.receive<A>(on:options:)(v120, v12, v112, v62, v70, v54);
  sub_10004FF60((uint64_t)v12, &qword_1011A08F0);

  v73 = swift_allocObject(&unk_1010B5E98, 24, 7);
  swift_weakInit(v73 + 16, v119);
  v74 = sub_100049F28(&qword_1011A23B8, (uint64_t *)&unk_1011A2300, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v75 = v110;
  v76 = Publisher<>.sink(receiveValue:)(sub_1001F53FC, v73, v110, v74);
  v77 = swift_release(v73);
  v78 = *(void (**)(char *, uint64_t, __n128))(v108 + 8);
  v78(v71, v75, v77);
  v79 = swift_beginAccess(v18, v120, 33, 0);
  AnyCancellable.store(in:)(v18, v79);
  swift_endAccess(v120);
  swift_release(v76);
  v120[0] = (id)static OS_dispatch_queue.main.getter(v80, v81, v82, v83, v84, v85, v86, v87);
  v115(v12, 1, 1, v116);
  v88 = v62;
  v89 = v118;
  Publisher.receive<A>(on:options:)(v120, v12, v72, v88, v70, v114);
  sub_10004FF60((uint64_t)v12, &qword_1011A08F0);

  v90 = swift_allocObject(&unk_1010B5E98, 24, 7);
  v91 = v119;
  swift_weakInit(v90 + 16, v119);
  v92 = Publisher<>.sink(receiveValue:)(sub_1001F541C, v90, v75, v74);
  v93 = swift_release(v90);
  v78(v71, v75, v93);
  v94 = swift_beginAccess(v18, v120, 33, 0);
  AnyCancellable.store(in:)(v18, v94);
  swift_endAccess(v120);

  v95 = swift_release(v92);
  v96 = *(void (**)(char *, uint64_t, __n128))(v111 + 8);
  v96(v89, v72, v95);
  ((void (*)(char *, uint64_t))v96)(v117, v72);
  return v91;
}

void sub_1001F18C4(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void **)(Strong + 32);
    *(_QWORD *)(Strong + 32) = v2;
    v7 = v2;
    sub_1001F2CA8(v6);
    swift_release(v5);

  }
}

double sub_1001F1944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_1001F1998();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_1001F1998()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  int v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[64];

  v1 = v0;
  v2 = *(void **)(v0 + 32);
  if (v2
    && (v3 = objc_msgSend(v2, "tracklist"),
        v4 = objc_msgSend(v3, "playingItem"),
        v3,
        v4))
  {
    objc_msgSend(v4, "duration");
    v5 = v16[49];

  }
  else
  {
    v5 = 0;
  }
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v6 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 360))();
  v7 = objc_msgSend(v6, "route");

  if (v7)
  {
    objc_opt_self(MPAVEndpointRoute);
    if (swift_dynamicCastObjCClass(v7))
      v8 = MPAVEndpointRoute.canReceiveAudioSamples.getter();
    else
      v8 = 1;

  }
  else
  {
    v8 = 1;
  }
  swift_beginAccess(v1 + 48, v16, 0, 0);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = swift_bridgeObjectRetain();
  v11 = sub_1001F0E3C(v10);
  swift_bridgeObjectRelease(v9);
  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease(v11);
    return;
  }
  if (v11 < 0)
    v15 = v11;
  else
    v15 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v12 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v11);
  if (!v12)
    goto LABEL_25;
LABEL_15:
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
      }
      else
      {
        v14 = *(_QWORD *)(v11 + 8 * i + 32);
        swift_retain(v14);
      }
      sub_1001F2E78(v14, v5, v8 & 1);
      swift_release(v14);
    }
    goto LABEL_25;
  }
  __break(1u);
}

void sub_1001F1BC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v42[24];

  v1 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v1);
  v3 = &v42[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10119BBD0 != -1)
    swift_once(&qword_10119BBD0, sub_1001F5030);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011A6868);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Updating Waveform subscription…", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = (void *)v0[4];
  if (!v9 || objc_msgSend(v9, "state") != (id)1)
  {
    swift_beginAccess(v0 + 6, v42, 0, 0);
    if (*(_QWORD *)(v0[6] + 16))
    {
      v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v11 = objc_msgSend(v10, "connectedScenes");

      v12 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
      v13 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v11, v12, v13);

      sub_1001F0A58(v14);
      v16 = v15;
      swift_bridgeObjectRelease(v14);

      if (v16)
      {
        if (v0[2])
        {
          v18 = Logger.logObject.getter(v17);
          v19 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v18, v19))
          {
LABEL_25:

            return;
          }
          v20 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v20 = 0;
          v21 = "Already observing waveform";
        }
        else
        {
          if (qword_10119BBC8 != -1)
            swift_once(&qword_10119BBC8, sub_1001F2274);
          v32 = (void *)qword_1011A6860;
          if (qword_10119B8B0 != -1)
            swift_once(&qword_10119B8B0, sub_1000E948C);
          v33 = qword_10124C788;
          v34 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v3, 1, 1, v34);
          v35 = swift_allocObject(&unk_1010B5E98, 24, 7);
          swift_weakInit(v35 + 16, v0);
          v36 = (_QWORD *)swift_allocObject(&unk_1010B5EC0, 56, 7);
          v36[2] = 0;
          v36[3] = 0;
          v36[4] = v33;
          v36[5] = v32;
          v36[6] = v35;
          swift_retain(v33);
          v37 = v32;
          v38 = sub_100166D14((uint64_t)v3, (uint64_t)&unk_1011A6AC0, (uint64_t)v36);
          v39 = v0[2];
          v0[2] = v38;
          swift_release(v39);
          v18 = Logger.logObject.getter(v40);
          v19 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v18, v19))
            goto LABEL_25;
          v20 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v20 = 0;
          v21 = "Waveform task created";
        }
        _os_log_impl((void *)&_mh_execute_header, v18, v19, v21, v20, 2u);
        swift_slowDealloc(v20, -1, -1);
        goto LABEL_25;
      }
    }
  }
  v22 = v0[2];
  if (v22)
  {
    swift_retain(v0[2]);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Shouldn't observe waveform", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    Task.cancel()();
    v27 = v0[2];
    v0[2] = 0;
    swift_release(v27);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Waveform task destroyed", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    swift_release(v22);
  }
}

double sub_1001F20B4(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  _BYTE v13[24];

  v4 = a2 + 16;
  if (qword_10119BBD0 != -1)
    swift_once(&qword_10119BBD0, sub_1001F5030);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048B14(v5, (uint64_t)qword_1011A6868);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a3, v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v4, v13, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v12 = Strong;
    sub_1001F1BC4();
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001F21C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    swift_retain(*(_QWORD *)(v0 + 16));
    Task.cancel()();
    swift_release(v1);
    v2 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(v0 + 16) = 0;
  swift_release(v2);
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t sub_1001F2254()
{
  uint64_t v0;

  sub_1001F21C4();
  return swift_deallocClassInstance(v0, 56, 7);
}

id sub_1001F2274()
{
  id result;

  result = sub_1001F2290();
  qword_1011A6860 = (uint64_t)result;
  return result;
}

id sub_1001F2290()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  NSNumber v3;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  NSNumber v7;
  Class v8;

  v0 = objc_msgSend((id)objc_opt_self(MRUWaveformSettings), "currentSettings");
  v1 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v2 = swift_allocObject(v1, 80, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EAE9B0;
  sub_10004A07C(0, &qword_10119E4D0, NSNumber_ptr);
  *(NSNumber *)(v2 + 32) = NSNumber.init(integerLiteral:)(20);
  *(NSNumber *)(v2 + 40) = NSNumber.init(integerLiteral:)(170);
  *(NSNumber *)(v2 + 48) = NSNumber.init(integerLiteral:)(527);
  *(NSNumber *)(v2 + 56) = NSNumber.init(integerLiteral:)(1500);
  *(NSNumber *)(v2 + 64) = NSNumber.init(integerLiteral:)(4500);
  v3.super.super.isa = NSNumber.init(integerLiteral:)(10000).super.super.isa;
  *(NSNumber *)(v2 + 72) = v3;
  specialized Array._endMutation()(v3.super.super.isa);
  v4 = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "setStops:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v6 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EAE9C0;
  *(NSNumber *)(v6 + 32) = NSNumber.init(integerLiteral:)(0);
  *(NSNumber *)(v6 + 40) = NSNumber.init(floatLiteral:)(3.840823);
  *(NSNumber *)(v6 + 48) = NSNumber.init(floatLiteral:)(-8.182433);
  *(NSNumber *)(v6 + 56) = NSNumber.init(floatLiteral:)(7.772333);
  v7.super.super.isa = NSNumber.init(floatLiteral:)(-2.430722).super.super.isa;
  *(NSNumber *)(v6 + 64) = v7;
  specialized Array._endMutation()(v7.super.super.isa);
  v8 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "setAdjustmentCoefficients:", v8, swift_bridgeObjectRelease(v6).n128_f64[0]);

  return v0;
}

uint64_t sub_1001F246C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  v7 = sub_100007E8C(&qword_1011A6AC8);
  v6[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[14] = v8;
  v6[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A6AD0);
  v6[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[17] = v10;
  v6[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F2500, 0, 0);
}

uint64_t sub_1001F2500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 96) + 16;
  v5 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 80) + 296))();
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 104))(v5);
  v6 = swift_release(v5);
  AsyncStream.makeAsyncIterator()(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess(v4, v0 + 16, 0, 0);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 152) = v7;
  *v7 = v0;
  v7[1] = sub_1001F25F0;
  return AsyncStream.Iterator.next(isolation:)(v0 + 64, 0, 0, *(_QWORD *)(v0 + 128));
}

uint64_t sub_1001F25F0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_1001F2644, 0, 0);
}

void sub_1001F2644()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  double v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD **)(v0 + 64);
  if (v1)
  {
    v2 = v1[2];
    if (v2 >> 31)
    {
      __break(1u);
    }
    else
    {
      v3 = *(id *)(v0 + 88);
      if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
        v1 = sub_10043231C(0, v2, 0, v1);
      *(_QWORD *)(v0 + 160) = v1;
      v4 = *(void **)(v0 + 88);
      v5 = *(_QWORD *)(v0 + 96) + 16;
      v6 = objc_allocWithZone((Class)MRUWaveformData);
      swift_bridgeObjectRetain();
      LODWORD(v7) = 1195081728;
      v8 = objc_msgSend(v6, "initWithFFTSamples:count:sampleRate:settings:", v1 + 4, v2, v4, v7);
      *(_QWORD *)(v0 + 168) = v8;

      v9 = objc_msgSend(v8, "amplitudes", swift_bridgeObjectRelease(v1).n128_f64[0]);
      v10 = sub_10004A07C(0, &qword_10119E4D0, NSNumber_ptr);
      *(_QWORD *)(v0 + 176) = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      Strong = swift_weakLoadStrong(v5);
      swift_weakInit(v0 + 72, Strong);
      swift_release(Strong);
      v12 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v13);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
      swift_task_switch(sub_1001F281C, v14, v15);
    }
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 144);
    v17 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(v16, *(_QWORD *)(v0 + 128));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    (*(void (**)(void))(v0 + 8))();
  }
}

void sub_1001F281C()
{
  _QWORD *v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  uint64_t (*v11)();
  void *v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;

  swift_release(v0[23]);
  swift_beginAccess(v0 + 9, v0 + 5, 0, 0);
  Strong = swift_weakLoadStrong(v0 + 9);
  v2 = v0[22];
  if (!Strong)
  {
    swift_bridgeObjectRelease(v0[20]);
    swift_bridgeObjectRelease(v2);
    swift_weakDestroy(v0 + 9);
    v11 = sub_1001F5774;
LABEL_23:
    swift_task_switch(v11, 0, 0);
    return;
  }
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 40);
  swift_retain(v4);
  swift_release(v3);
  v5 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0[22]);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    v6 = *(id *)(v0[22] + 32);
  }
  v7 = v6;
  objc_msgSend(v6, "doubleValue");
  v9 = v8;

  if (v5)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v0[22]);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v10 = *(id *)(v0[22] + 40);
LABEL_10:
  v12 = v10;
  objc_msgSend(v10, "doubleValue");
  v14 = v13;

  if (v5)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v0[22]);
    goto LABEL_14;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v15 = *(id *)(v0[22] + 48);
LABEL_14:
  v16 = v15;
  objc_msgSend(v15, "doubleValue");
  v18 = v17;

  if (!v5)
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 4uLL)
    {
      v19 = *(id *)(v0[22] + 56);
      goto LABEL_18;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3, v0[22]);
LABEL_18:
  v20 = v19;
  objc_msgSend(v19, "doubleValue");
  v22 = v21;

  if (v5)
  {
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4, v0[22]);
    v24 = v0[22];
LABEL_22:
    v25 = v0[20];
    objc_msgSend(v23, "doubleValue");
    v27 = v26;

    dispatch thunk of WaveformState.SamplingMode.ValueProvider.update(to:)(v9, v14, v18, v22, v27);
    swift_release(v4);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v24);
    swift_weakDestroy(v0 + 9);
    v11 = sub_1001F2A9C;
    goto LABEL_23;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 5uLL)
  {
    v24 = v0[22];
    v23 = *(id *)(v24 + 64);
    goto LABEL_22;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_1001F2A9C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_1001F25F0;
  return AsyncStream.Iterator.next(isolation:)(v0 + 64, 0, 0, *(_QWORD *)(v0 + 128));
}

uint64_t MPAVEndpointRoute.canReceiveAudioSamples.getter()
{
  void *v0;
  uint64_t result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  result = (uint64_t)objc_msgSend(v0, "endpointObject");
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend((id)result, "outputDevices");

    if (v3)
    {
      v4 = sub_10004A07C(0, (unint64_t *)&unk_1011CE750, MRAVOutputDevice_ptr);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

      if ((unint64_t)v5 >> 62)
        goto LABEL_18;
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v11))
      {
        v7 = 4;
        while (1)
        {
          v8 = (v5 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5)
             : *(id *)(v5 + 8 * v7);
          v9 = v8;
          v10 = v7 - 3;
          if (__OFADD__(v7 - 4, 1))
            break;
          if (!objc_msgSend(v8, "isLocalDevice")
            || objc_msgSend(v9, "deviceType") == 3
            || objc_msgSend(v9, "deviceSubtype") == 14)
          {
            swift_bridgeObjectRelease_n(v5, 2);

            return 0;
          }

          ++v7;
          if (v10 == v6)
            goto LABEL_14;
        }
        __break(1u);
LABEL_18:
        if (v5 < 0)
          v11 = v5;
        else
          v11 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
      }
LABEL_14:
      swift_bridgeObjectRelease_n(v5, 2);
    }
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001F2CA8(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  char v13;

  if (a1)
  {
    v2 = objc_msgSend(a1, "tracklist");
    v3 = objc_msgSend(v2, "playingItem");

    if (v3)
    {
      v4 = objc_msgSend(v3, "contentItemIdentifier");

      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v3 = v6;

      v7 = *(void **)(v1 + 32);
      if (!v7)
      {
LABEL_10:
        v11 = 0;
        v9 = 0;
        if (v3)
          goto LABEL_11;
LABEL_16:
        if (!v9)
          return;
LABEL_19:
        swift_bridgeObjectRelease(v9);
LABEL_21:
        sub_1001F1998();
        return;
      }
    }
    else
    {
      v5 = 0;
      v7 = *(void **)(v1 + 32);
      if (!v7)
        goto LABEL_10;
    }
  }
  else
  {
    v5 = 0;
    v3 = 0;
    v7 = *(void **)(v1 + 32);
    if (!v7)
      goto LABEL_10;
  }
  v8 = objc_msgSend(v7, "tracklist");
  v9 = objc_msgSend(v8, "playingItem");

  if (v9)
  {
    v10 = objc_msgSend(v9, "contentItemIdentifier");

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v9 = v12;

    if (v3)
      goto LABEL_11;
    goto LABEL_16;
  }
  v11 = 0;
  if (!v3)
    goto LABEL_16;
LABEL_11:
  if (!v9)
  {
    v9 = v3;
    goto LABEL_19;
  }
  if (v5 == v11 && v3 == v9)
  {
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v9);
    return;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, v11, v9, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v9);
  if ((v13 & 1) == 0)
    goto LABEL_21;
}

uint64_t sub_1001F2E78(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, __n128);
  void *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  int v26;
  uint64_t v27;
  _QWORD v28[3];

  v4 = v3;
  v25 = a2;
  v26 = a3;
  v6 = sub_100007E8C(&qword_1011A6AD8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (_QWORD *)((char *)&v25 - v10);
  KeyPath = swift_getKeyPath(&unk_100EAEB38);
  v28[0] = a1;
  v13 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v28, KeyPath, v13);
  swift_release(KeyPath);
  v15 = *(uint64_t (**)(void *, __n128))(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v16 = *(void **)(v4 + 32);
  v17 = v16;
  v18 = swift_retain(v14);
  v19 = v15(v16, v18);
  LOBYTE(v15) = v20;
  swift_release(v14);

  sub_1001F3178(v19, v15 & 1, v25, v26, v4, v11);
  v21 = swift_getKeyPath(&unk_100EAEB60);
  v28[0] = a1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v28, v21, v13);
  swift_release(v21);
  v22 = a1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
  swift_beginAccess(a1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, v28, 0, 0);
  sub_10004A160(v22, (uint64_t)v9, &qword_1011A6AD8);
  LOBYTE(v22) = sub_1001F3380((uint64_t)v9);
  sub_10004FF60((uint64_t)v9, &qword_1011A6AD8);
  if ((v22 & 1) == 0)
  {
    sub_10004A160((uint64_t)v11, (uint64_t)v9, &qword_1011A6AD8);
    v23 = swift_getKeyPath(&unk_100EAEB60);
    __chkstk_darwin(v23);
    *((_QWORD *)&v25 - 2) = a1;
    *((_QWORD *)&v25 - 1) = v9;
    v27 = a1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v27, v23, sub_1001F5508, &v25 - 8, (char *)&type metadata for () + 8, v13);
    swift_release(v23);
    sub_10004FF60((uint64_t)v9, &qword_1011A6AD8);
  }
  return sub_10004FF60((uint64_t)v11, &qword_1011A6AD8);
}

uint64_t sub_1001F30E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100EAEB38);
  v6 = v0;
  v3 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 48);
  swift_retain(*(_QWORD *)(v1 + 56));
  return v4;
}

uint64_t sub_1001F3178@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((a2 & 1) != 0)
    goto LABEL_7;
  if ((a3 & 1) != 0)
  {
    v7 = (unsigned int *)&enum case for WaveformState.buffering(_:);
    goto LABEL_8;
  }
  if (a1 != 2)
  {
    if (a1 == 4)
    {
      v7 = (unsigned int *)&enum case for WaveformState.paused(_:);
      goto LABEL_8;
    }
LABEL_7:
    v7 = (unsigned int *)&enum case for WaveformState.hidden(_:);
    goto LABEL_8;
  }
  if ((a4 & 1) != 0)
  {
    v11 = *(_QWORD *)(a5 + 40);
    *a6 = v11;
    v12 = enum case for WaveformState.SamplingMode.custom(_:);
    v13 = type metadata accessor for WaveformState.SamplingMode(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a6, v12, v13);
    v14 = enum case for WaveformState.playing(_:);
    v9 = type metadata accessor for WaveformState(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(a6, v14, v9);
    swift_retain(v11);
    goto LABEL_9;
  }
  v15 = enum case for WaveformState.SamplingMode.unavailable(_:);
  v16 = type metadata accessor for WaveformState.SamplingMode(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a6, v15, v16);
  v7 = (unsigned int *)&enum case for WaveformState.playing(_:);
LABEL_8:
  v8 = *v7;
  v9 = type metadata accessor for WaveformState(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(a6, v8, v9);
LABEL_9:
  type metadata accessor for WaveformState(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a6, 0, 1, v9);
}

uint64_t sub_1001F32C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];

  KeyPath = swift_getKeyPath(&unk_100EAEB60);
  v7[0] = v1;
  v4 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v7, KeyPath, v4);
  swift_release(KeyPath);
  v5 = v1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
  swift_beginAccess(v1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, v7, 0, 0);
  return sub_10004A160(v5, a1, &qword_1011A6AD8);
}

uint64_t sub_1001F3380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t (*v24)(char *, uint64_t);
  int v25;
  int v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v2 = v1;
  v34 = a1;
  v3 = sub_100007E8C(&qword_1011A6AE8);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A6AD8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v33 - v10;
  v12 = type metadata accessor for WaveformState(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v33 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v33 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v33 - v19;
  sub_10004A160(v2, (uint64_t)v11, &qword_1011A6AD8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v20, enum case for WaveformState.hidden(_:), v12);
    sub_10004FF60((uint64_t)v11, &qword_1011A6AD8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v11, v12);
  }
  sub_10004A160(v34, (uint64_t)v9, &qword_1011A6AD8);
  if (v21(v9, 1, v12) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v18, enum case for WaveformState.hidden(_:), v12);
    sub_10004FF60((uint64_t)v9, &qword_1011A6AD8);
    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v22(v18, v9, v12);
  }
  v23 = &v5[*(int *)(v3 + 48)];
  v22(v5, v20, v12);
  v22(v23, v18, v12);
  v24 = *(uint64_t (**)(char *, uint64_t))(v13 + 88);
  v25 = v24(v5, v12);
  v26 = v25;
  if (v25 == enum case for WaveformState.playing(_:))
  {
    v27 = v33;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v33, v5, v12);
    v28 = *(void (**)(char *, uint64_t))(v13 + 96);
    v28(v27, v12);
    if (v24(v23, v12) == v26)
    {
      v28(v23, v12);
      v29 = type metadata accessor for WaveformState.SamplingMode(0);
      v30 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
      v30(v23, v29);
      v30(v27, v29);
LABEL_14:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
      return 1;
    }
    v32 = type metadata accessor for WaveformState.SamplingMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v27, v32);
  }
  else if ((v25 == enum case for WaveformState.hidden(_:)
          || v25 == enum case for WaveformState.paused(_:)
          || v25 == enum case for WaveformState.buffering(_:))
         && v24(v23, v12) == v25)
  {
    goto LABEL_14;
  }
  sub_10004FF60((uint64_t)v5, &qword_1011A6AE8);
  return 0;
}

uint64_t sub_1001F3704(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  int v6;
  void *v7;
  id v8;
  char v9;
  unsigned __int8 v11;

  v3 = *(void **)(v1 + 32);
  if (v3
    && (v4 = objc_msgSend(v3, "tracklist"),
        v5 = objc_msgSend(v4, "playingItem"),
        v4,
        v5))
  {
    objc_msgSend(v5, "duration");
    v6 = v11;

  }
  else
  {
    v6 = 0;
  }
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v7 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 360))();
  v8 = objc_msgSend(v7, "route");

  if (v8)
  {
    objc_opt_self(MPAVEndpointRoute);
    if (swift_dynamicCastObjCClass(v8))
      v9 = MPAVEndpointRoute.canReceiveAudioSamples.getter();
    else
      v9 = 1;

  }
  else
  {
    v9 = 1;
  }
  return sub_1001F2E78(a1, v6, v9 & 1);
}

void sub_1001F3848()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  _QWORD v45[4];
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  char v49[32];

  v1 = (uint64_t *)(v0 + 48);
  swift_beginAccess(v0 + 48, v49, 0, 0);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v2 + 64);
  v40 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & v3;
  v41 = (unint64_t)(v4 + 63) >> 6;
  v42 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  v7 = 0;
  if (v6)
    goto LABEL_7;
LABEL_8:
  v9 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v9 < v41)
    {
      v10 = *(_QWORD *)(v40 + 8 * v9);
      ++v7;
      if (v10)
        goto LABEL_25;
      v7 = v9 + 1;
      if (v9 + 1 >= v41)
        goto LABEL_45;
      v10 = *(_QWORD *)(v40 + 8 * v7);
      if (v10)
        goto LABEL_25;
      v7 = v9 + 2;
      if (v9 + 2 >= v41)
        goto LABEL_45;
      v10 = *(_QWORD *)(v40 + 8 * v7);
      if (v10)
        goto LABEL_25;
      v7 = v9 + 3;
      if (v9 + 3 >= v41)
        goto LABEL_45;
      v10 = *(_QWORD *)(v40 + 8 * v7);
      if (v10)
        goto LABEL_25;
      v7 = v9 + 4;
      if (v9 + 4 >= v41)
        goto LABEL_45;
      v10 = *(_QWORD *)(v40 + 8 * v7);
      if (v10)
      {
LABEL_25:
        v44 = (v10 - 1) & v10;
        for (i = __clz(__rbit64(v10)) + (v7 << 6); ; i = __clz(__rbit64(v6)) | (v7 << 6))
        {
          v12 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 32 * i);
          v14 = *v12;
          v13 = v12[1];
          v16 = v12[2];
          v15 = v12[3];
          swift_beginAccess(v1, v45, 32, 0);
          v17 = *v1;
          if (!*(_QWORD *)(*v1 + 16))
            break;
          swift_bridgeObjectRetain_n(v15, 2);
          swift_bridgeObjectRetain_n(v13, 2);
          v18 = sub_10079C32C(v14, v13, v16, v15);
          v20 = v19;
          if ((v19 & 1) != 0)
            sub_10004A160(*(_QWORD *)(v17 + 56) + 8 * v18, (uint64_t)&v47, &qword_1011B8D70);
          else
            v47 = 0;
          v48 = (v20 & 1) == 0;
          swift_bridgeObjectRelease(v15);
          swift_bridgeObjectRelease(v13);
          if (v48)
            goto LABEL_32;
          v39 = swift_weakLoadStrong(&v47);
          sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011D1360);
          swift_endAccess(v45);
          if (v39)
          {
            swift_bridgeObjectRelease(v13);
            swift_release(v39);
            swift_bridgeObjectRelease(v15);
            v6 = v44;
            if (!v44)
              goto LABEL_8;
            goto LABEL_7;
          }
LABEL_33:
          v43 = v7;
          if (qword_10119BBD0 != -1)
            swift_once(&qword_10119BBD0, sub_1001F5030);
          v21 = type metadata accessor for Logger(0);
          sub_100048B14(v21, (uint64_t)qword_1011A6868);
          swift_bridgeObjectRetain_n(v15, 2);
          v22 = swift_bridgeObjectRetain_n(v13, 2);
          v23 = Logger.logObject.getter(v22);
          v24 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v23, v24))
          {
            v25 = swift_slowAlloc(12, -1);
            v26 = swift_slowAlloc(32, -1);
            v47 = v26;
            *(_DWORD *)v25 = 136446210;
            v45[0] = v14;
            v45[1] = v13;
            v45[2] = v16;
            v45[3] = v15;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v27 = String.init<A>(describing:)(v45, &type metadata for WaveformPlayer.ListenerToken.Identifier);
            v29 = v28;
            *(_QWORD *)(v25 + 4) = sub_100322200(v27, v28, &v47);
            swift_bridgeObjectRelease_n(v15, 2);
            swift_bridgeObjectRelease_n(v13, 2);
            swift_bridgeObjectRelease(v29);
            _os_log_impl((void *)&_mh_execute_header, v23, v24, "Removing invalid token with id=%{public}s", (uint8_t *)v25, 0xCu);
            swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v26, -1, -1);
            swift_slowDealloc(v25, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v15, 2);
            swift_bridgeObjectRelease_n(v13, 2);
          }
          swift_beginAccess(v1, v45, 33, 0);
          v30 = *v1;
          swift_bridgeObjectRetain();
          v31 = sub_10079C32C(v14, v13, v16, v15);
          v33 = v32;
          swift_bridgeObjectRelease(v30);
          v7 = v43;
          if ((v33 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
            v35 = *v1;
            v46 = *v1;
            *v1 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1007A7544();
              v35 = v46;
            }
            v36 = *(_QWORD *)(v35 + 48) + 32 * v31;
            v37 = *(_QWORD *)(v36 + 24);
            swift_bridgeObjectRelease(*(_QWORD *)(v36 + 8));
            swift_bridgeObjectRelease(v37);
            sub_100048ACC(*(_QWORD *)(v35 + 56) + 8 * v31, (uint64_t)&v47);
            sub_1007AB404(v31, v35);
            v38 = *v1;
            *v1 = v35;
            swift_bridgeObjectRelease(v38);
          }
          else
          {
            v47 = 0;
          }
          v48 = (v33 & 1) == 0;
          swift_bridgeObjectRelease(v15);
          swift_bridgeObjectRelease(v13);
          sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011D1360);
          swift_endAccess(v45);
          v6 = v44;
          if (!v44)
            goto LABEL_8;
LABEL_7:
          v44 = (v6 - 1) & v6;
        }
        v47 = 0;
        v48 = 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_32:
        sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011D1360);
        swift_endAccess(v45);
        goto LABEL_33;
      }
      v11 = v9 + 5;
      if (v11 < v41)
      {
        v10 = *(_QWORD *)(v40 + 8 * v11);
        if (v10)
        {
          v7 = v11;
          goto LABEL_25;
        }
        while (1)
        {
          v7 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_47;
          if (v7 >= v41)
            break;
          v10 = *(_QWORD *)(v40 + 8 * v7);
          ++v11;
          if (v10)
            goto LABEL_25;
        }
      }
    }
LABEL_45:
    swift_release(v42);
    sub_1001F1BC4();
    return;
  }
  __break(1u);
LABEL_47:
  __break(1u);
}

double sub_1001F3DDC@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAEB38);
  v10 = v3;
  v5 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release(KeyPath);
  v7 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v8 = swift_allocObject(&unk_1010B5F60, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *a2 = sub_1001F56A0;
  a2[1] = v8;
  *(_QWORD *)&result = swift_retain(v6).n128_u64[0];
  return result;
}

double sub_1001F3E90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  _QWORD v10[7];
  uint64_t v11;

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject(&unk_1010B5F38, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAEB38);
  v10[2] = v6;
  v10[3] = sub_1001F5628;
  v10[4] = v5;
  v11 = v6;
  v8 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  swift_retain(v4);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_1001F5664, v10, (char *)&type metadata for () + 8, v8);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1001F3F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100EAEB88);
  v6 = v0;
  v3 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 64);
  swift_retain(*(_QWORD *)(v1 + 72));
  return v4;
}

double sub_1001F4010@<D0>(uint64_t *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAEB88);
  v10 = v3;
  v5 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release(KeyPath);
  v7 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(v3 + 72);
  v8 = swift_allocObject(&unk_1010B5F10, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *a2 = sub_1001F5600;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v8;
  *(_QWORD *)&result = swift_retain(v6).n128_u64[0];
  return result;
}

double sub_1001F40C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  _QWORD v10[7];
  uint64_t v11;

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject(&unk_1010B5EE8, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAEB88);
  v10[2] = v6;
  v10[3] = sub_1001F5594;
  v10[4] = v5;
  v11 = v6;
  v8 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  swift_retain(v4);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_1001F55C4, v10, (char *)&type metadata for () + 8, v8);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_1001F41B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(__n128);
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A6AD8);
  __chkstk_darwin(v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EAEB60);
  v39[0] = v1;
  v8 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v39, KeyPath, v8);
  swift_release(KeyPath);
  v9 = v1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
  swift_beginAccess(v1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, v39, 0, 0);
  sub_10004A160(v9, (uint64_t)v6, &qword_1011A6AD8);
  v10 = sub_1001F3380(a1);
  sub_10004FF60((uint64_t)v6, &qword_1011A6AD8);
  if ((v10 & 1) == 0)
  {
    v11 = sub_1001F45BC();
    v13 = v12;
    v14 = swift_getKeyPath(&unk_100EAEB60);
    v38 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v38, v14, v8);
    swift_release(v14);
    sub_10004A160(v9, (uint64_t)v6, &qword_1011A6AD8);
    v36 = sub_1001F45BC();
    v16 = v15;
    sub_10004FF60((uint64_t)v6, &qword_1011A6AD8);
    if (qword_10119BBD0 != -1)
      swift_once(&qword_10119BBD0, sub_1001F5030);
    v17 = type metadata accessor for Logger(0);
    sub_100048B14(v17, (uint64_t)qword_1011A6868);
    swift_retain_n(v2, 2);
    swift_bridgeObjectRetain();
    v18 = swift_bridgeObjectRetain();
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(32, -1);
      v34 = v11;
      v22 = v21;
      v35 = swift_slowAlloc(96, -1);
      v38 = v35;
      *(_DWORD *)v22 = 136315650;
      v33[1] = v22 + 4;
      v23 = swift_getKeyPath(&unk_100EAEB88);
      v37 = v2;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v37, v23, v8);
      swift_release(v23);
      v25 = *(uint64_t (**)(__n128))(v2 + 64);
      v24 = *(_QWORD *)(v2 + 72);
      v26 = swift_retain(v24);
      v27 = v25(v26);
      v29 = v28;
      swift_release(v24);
      v37 = sub_100322200(v27, v29, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_release_n(v2, 2, v30);
      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      v37 = sub_100322200(v34, v13, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_bridgeObjectRelease_n(v13, 3);
      *(_WORD *)(v22 + 22) = 2080;
      swift_bridgeObjectRetain();
      v37 = sub_100322200(v36, v16, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s changing waveform state %s -> %s", (uint8_t *)v22, 0x20u);
      v31 = v35;
      swift_arrayDestroy(v35, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease_n(v13, 2);
      swift_release_n(v2, 2, v32);
    }
  }
}

uint64_t sub_1001F45BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = 0x6E6564646968;
  v3 = sub_100007E8C(&qword_1011A6AD8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v14 - v7;
  sub_10004A160(v1, (uint64_t)&v14 - v7, &qword_1011A6AD8);
  v9 = type metadata accessor for WaveformState(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    sub_10004A160((uint64_t)v8, (uint64_t)v6, &qword_1011A6AD8);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v6, v9);
    if (v11 == enum case for WaveformState.playing(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v6, v9);
      v12 = type metadata accessor for WaveformState.SamplingMode(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v6, v12);
      v2 = 0x676E6979616C70;
    }
    else if (v11 != enum case for WaveformState.hidden(_:))
    {
      if (v11 == enum case for WaveformState.paused(_:))
      {
        v2 = 0x646573756170;
      }
      else if (v11 == enum case for WaveformState.buffering(_:))
      {
        v2 = 0x6E69726566667562;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
        v2 = 0x6E776F6E6B6E75;
      }
    }
  }
  sub_10004FF60((uint64_t)v8, &qword_1011A6AD8);
  return v2;
}

uint64_t sub_1001F47B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAEB60);
  v8[0] = v3;
  v5 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = v3 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
  swift_beginAccess(v3 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, v8, 0, 0);
  return sub_10004A160(v6, a2, &qword_1011A6AD8);
}

uint64_t sub_1001F4870(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_100007E8C(&qword_1011A6AD8);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10004A160(a1, (uint64_t)v6, &qword_1011A6AD8);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAEB60);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  v9 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_1001F5784, v11, (char *)&type metadata for () + 8, v9);
  swift_release(KeyPath);
  return sub_10004FF60((uint64_t)v6, &qword_1011A6AD8);
}

uint64_t sub_1001F4978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v4 = sub_100007E8C(&qword_1011A6AD8);
  v5 = __chkstk_darwin(v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v12[-v8];
  sub_10004A160(a2, (uint64_t)&v12[-v8], &qword_1011A6AD8);
  v10 = a1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
  swift_beginAccess(a1 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, v13, 0, 0);
  sub_10004A160(v10, (uint64_t)v7, &qword_1011A6AD8);
  swift_beginAccess(v10, v12, 33, 0);
  sub_1001F5520((uint64_t)v9, v10);
  swift_endAccess(v12);
  sub_1001F41B0((uint64_t)v7);
  sub_10004FF60((uint64_t)v9, &qword_1011A6AD8);
  return sub_10004FF60((uint64_t)v7, &qword_1011A6AD8);
}

uint64_t sub_1001F4A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  int v18;
  void (*v19)(char *, uint64_t);
  int v20;
  void (*v21)(char *, uint64_t);
  _QWORD v24[3];

  v1 = sub_100007E8C(&qword_1011A6AD8);
  __chkstk_darwin(v1);
  v3 = (char *)&v24[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WaveformState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24[-1] - v9;
  KeyPath = swift_getKeyPath(&unk_100EAEB60);
  v24[0] = v0;
  v12 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v24, KeyPath, v12);
  swift_release();
  v13 = v0 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
  swift_beginAccess(v13, v24, 0, 0);
  sub_10004A160(v13, (uint64_t)v3, &qword_1011A6AD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v3, &qword_1011A6AD8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v14 == enum case for WaveformState.playing(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v15 = *AccessibilityString.nowPlayingWafeformLabel.unsafeMutableAddressor();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    v16(v10, v4);
    v17 = type metadata accessor for WaveformState.SamplingMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v7, v17);
  }
  else
  {
    v18 = v14;
    if (v14 == enum case for WaveformState.hidden(_:))
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return 0;
    }
    if (v14 != enum case for WaveformState.paused(_:))
    {
      v20 = enum case for WaveformState.buffering(_:);
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v10, v4);
      if (v18 != v20)
        v21(v7, v4);
      return 0;
    }
    v15 = *AccessibilityString.pausedWafeformLabel.unsafeMutableAddressor();
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    v19(v10, v4);
  }
  return v15;
}

Swift::Int sub_1001F4D60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  Hasher.init(_seed:)(v6, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  if (v3)
  {
    swift_bridgeObjectRetain(v3);
    String.hash(into:)(v6, v4, v3);
    swift_bridgeObjectRelease(v3);
  }
  return Hasher._finalize()();
}

uint64_t sub_1001F4DF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  result = swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(a1, v6, v5);
    return swift_bridgeObjectRelease(v5);
  }
  return result;
}

Swift::Int sub_1001F4E78(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v4 = v1[3];
  Hasher.init(_seed:)(v7, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v7, v2, v3);
  swift_bridgeObjectRelease(v3);
  if (v4)
  {
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(v7, v5, v4);
    swift_bridgeObjectRelease(v4);
  }
  return Hasher._finalize()();
}

uint64_t sub_1001F4F04(uint64_t *a1, uint64_t *a2)
{
  return sub_1001F56D4(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1001F4F20()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  v1 = v0[5];
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v1);
  swift_release(v0[7]);
  swift_release(v0[9]);
  sub_10004FF60((uint64_t)v0 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, &qword_1011A6AD8);
  v2 = (char *)v0 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken___observationRegistrar;
  v3 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1001F4FAC(uint64_t result, uint64_t a2)
{
  if (result)
    return MPCPlayerResponse.playState(for:)(a2);
  return result;
}

uint64_t sub_1001F4FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F4FF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&MPCPlayerResponse.playState(for:in:));
}

uint64_t sub_1001F4FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F4FF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&MPCPlayerResponse.playState(for:in:));
}

uint64_t sub_1001F4FF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (result)
    return a4(a2, a3);
  return result;
}

uint64_t sub_1001F5030()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011A6868);
  sub_100048B14(v0, (uint64_t)qword_1011A6868);
  return static Logger.music(_:)(0xD000000000000011, 0x8000000100E315B0);
}

uint64_t type metadata accessor for WaveformPlayer()
{
  return objc_opt_self(_TtC5Music14WaveformPlayer);
}

uint64_t sub_1001F50B0()
{
  return type metadata accessor for WaveformPlayer.ListenerToken(0);
}

uint64_t type metadata accessor for WaveformPlayer.ListenerToken(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A6978;
  if (!qword_1011A6978)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WaveformPlayer.ListenerToken);
  return result;
}

void sub_1001F50F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = " ";
  v6[1] = (char *)&value witness table for () + 64;
  v6[2] = (char *)&value witness table for () + 64;
  sub_1001F5198(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ObservationRegistrar(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

void sub_1001F5198(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A6988)
  {
    v2 = type metadata accessor for WaveformState(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A6988);
  }
}

uint64_t sub_1001F51EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t getEnumTagSinglePayload for Lyrics.AudioAttribute(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Lyrics.AudioAttribute(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for WeakBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakBox);
}

uint64_t destroy for WaveformPlayer.ListenerToken.Identifier(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for WaveformPlayer.ListenerToken.Identifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for WaveformPlayer.ListenerToken.Identifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for WaveformPlayer.ListenerToken.Identifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

ValueMetadata *type metadata accessor for WaveformPlayer.ListenerToken.Identifier()
{
  return &type metadata for WaveformPlayer.ListenerToken.Identifier;
}

unint64_t sub_1001F5384()
{
  unint64_t result;

  result = qword_1011A6AB0;
  if (!qword_1011A6AB0)
  {
    result = swift_getWitnessTable(&unk_100EAEAB4, &type metadata for WaveformPlayer.ListenerToken.Identifier);
    atomic_store(result, &qword_1011A6AB0);
  }
  return result;
}

uint64_t sub_1001F53C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001F53EC(void **a1)
{
  uint64_t v1;

  sub_1001F18C4(a1, v1);
}

double sub_1001F53F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F1944(a1, v1);
}

double sub_1001F53FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F20B4(a1, v1, "Scene did enter background");
}

double sub_1001F541C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F20B4(a1, v1, "Scene will enter foreground");
}

uint64_t sub_1001F543C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001F5478(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011A6ABC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_1001F246C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1001F5508()
{
  uint64_t v0;

  return sub_1001F4978(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001F5520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A6AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F5570()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F5594()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1001F55C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[4];
  v3 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 64) = v0[3];
  *(_QWORD *)(v1 + 72) = v2;
  swift_retain(v2);
  return swift_release(v3);
}

uint64_t sub_1001F5600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001F5628(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_1001F5664()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[4];
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 48) = v0[3];
  *(_QWORD *)(v1 + 56) = v2;
  swift_retain(v2);
  return swift_release(v3);
}

uint64_t sub_1001F56A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1001F56D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a1 == a5 && a2 == a6
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v12 & 1) != 0))
  {
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0) & 1) != 0))
        return 1;
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1001F5784()
{
  return sub_1001F5508();
}

uint64_t sub_1001F579C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t destroy for VerticalLockupGridCell.Headline(uint64_t a1)
{
  return sub_1001F57BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1001F57BC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t _s5Music22VerticalLockupGridCellV8HeadlineOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001F579C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for VerticalLockupGridCell.Headline(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001F579C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1001F57BC(v6, v7, v8);
  return a1;
}

__n128 _s7ContextVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VerticalLockupGridCell.Headline(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1001F57BC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSStaticImageViewModel.ImageResource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSStaticImageViewModel.ImageResource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001F594C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1001F5954(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VerticalLockupGridCell.Headline()
{
  return &type metadata for VerticalLockupGridCell.Headline;
}

uint64_t *sub_1001F5970(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(_QWORD *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t *v66;
  uint64_t *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = a3[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    v27 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v30 = a3[8];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = v32[16];
    if (v33 == 255)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
    }
    else
    {
      v34 = v33 & 1;
      v35 = *(_QWORD *)v32;
      v36 = *((_QWORD *)v32 + 1);
      sub_1001F579C(*(_QWORD *)v32, v36, v33 & 1);
      *(_QWORD *)v31 = v35;
      *((_QWORD *)v31 + 1) = v36;
      v31[16] = v34;
    }
    v37 = a3[9];
    v38 = a3[10];
    v39 = (uint64_t *)((char *)a1 + v37);
    v40 = (uint64_t *)((char *)a2 + v37);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
    v42 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v43 = (uint64_t *)((char *)a1 + v42);
    v44 = (uint64_t *)((char *)a2 + v42);
    v45 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
    v46 = *(_QWORD *)(v45 - 8);
    v47 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48);
    swift_bridgeObjectRetain();
    if (v47(v44, 1, v45))
    {
      v48 = sub_100007E8C(&qword_1011A6AF0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
      {
        v49 = type metadata accessor for AttributedString(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v43, v44, v49);
        v50 = 1;
      }
      else
      {
        v51 = v44[1];
        *v43 = *v44;
        v43[1] = v51;
        swift_bridgeObjectRetain();
        v50 = 0;
      }
      swift_storeEnumTagMultiPayload(v43, v45, v50);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v52 = a3[13];
    v53 = a3[14];
    v54 = (uint64_t *)((char *)a1 + v52);
    v55 = (uint64_t *)((char *)a2 + v52);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = (char *)a1 + v53;
    v58 = (char *)a2 + v53;
    v59 = type metadata accessor for URL(0);
    v60 = *(_QWORD *)(v59 - 8);
    v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    swift_bridgeObjectRetain();
    if (v61(v58, 1, v59))
    {
      v62 = sub_100007E8C(&qword_10119E460);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v63 = a3[15];
    v64 = a3[16];
    v65 = *(void **)((char *)a2 + v63);
    *(uint64_t *)((char *)a1 + v63) = (uint64_t)v65;
    v66 = (uint64_t *)((char *)a1 + v64);
    v67 = (uint64_t *)((char *)a2 + v64);
    v68 = v65;
    v69 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v67, v69) == 1)
    {
      v70 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v66, v67, v70);
      v71 = 1;
    }
    else
    {
      v72 = *v67;
      *v66 = *v67;
      swift_retain(v72);
      v71 = 0;
    }
    swift_storeEnumTagMultiPayload(v66, v69, v71);
    v73 = a3[17];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    v76 = *(_QWORD *)v75;
    v77 = *((_QWORD *)v75 + 1);
    v78 = *((_QWORD *)v75 + 2);
    v79 = *((_QWORD *)v75 + 3);
    v80 = v75[32];
    sub_10006B410(*(_QWORD *)v75, v77, v78, v79, v80);
    *(_QWORD *)v74 = v76;
    *((_QWORD *)v74 + 1) = v77;
    *((_QWORD *)v74 + 2) = v78;
    *((_QWORD *)v74 + 3) = v79;
    v74[32] = v80;
  }
  return a1;
}

uint64_t type metadata accessor for VerticalLockupGridCell.Subtitle(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A6C30, (uint64_t)&nominal type descriptor for VerticalLockupGridCell.Subtitle);
}

uint64_t sub_1001F5EA4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + a2[5];
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v13 = a1 + a2[8];
  v14 = *(unsigned __int8 *)(v13 + 16);
  if (v14 != 255)
    sub_1001F57BC(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), v14 & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
  v15 = a1 + a2[12];
  v16 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
    }
    else
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 8));
    }
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[13] + 8));
  v18 = a1 + a2[14];
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);

  v21 = (_QWORD *)(a1 + a2[16]);
  v22 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    swift_release(*v21);
  }
  v24 = a1 + a2[17];
  return sub_10006B61C(*(_QWORD *)v24, *(_QWORD *)(v24 + 8), *(_QWORD *)(v24 + 16), *(_QWORD *)(v24 + 24), *(_BYTE *)(v24 + 32));
}

char *sub_1001F611C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = a3[8];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = v30[16];
  if (v31 == 255)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
  }
  else
  {
    v32 = v31 & 1;
    v33 = *(_QWORD *)v30;
    v34 = *((_QWORD *)v30 + 1);
    sub_1001F579C(*(_QWORD *)v30, v34, v31 & 1);
    *(_QWORD *)v29 = v33;
    *((_QWORD *)v29 + 1) = v34;
    v29[16] = v32;
  }
  v35 = a3[9];
  v36 = a3[10];
  v37 = &a1[v35];
  v38 = &a2[v35];
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = v39;
  a1[v36] = a2[v36];
  v40 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  swift_bridgeObjectRetain();
  if (v45(v42, 1, v43))
  {
    v46 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v47 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v41, v42, v47);
      v48 = 1;
    }
    else
    {
      v49 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v49;
      swift_bridgeObjectRetain();
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v43, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v50 = a3[13];
  v51 = a3[14];
  v52 = &a1[v50];
  v53 = &a2[v50];
  v54 = *((_QWORD *)v53 + 1);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *((_QWORD *)v52 + 1) = v54;
  v55 = &a1[v51];
  v56 = &a2[v51];
  v57 = type metadata accessor for URL(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
  swift_bridgeObjectRetain();
  if (v59(v56, 1, v57))
  {
    v60 = sub_100007E8C(&qword_10119E460);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v61 = a3[15];
  v62 = a3[16];
  v63 = *(void **)&a2[v61];
  *(_QWORD *)&a1[v61] = v63;
  v64 = &a1[v62];
  v65 = &a2[v62];
  v66 = v63;
  v67 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v65, v67) == 1)
  {
    v68 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v64, v65, v68);
    v69 = 1;
  }
  else
  {
    v70 = *(_QWORD *)v65;
    *(_QWORD *)v64 = *(_QWORD *)v65;
    swift_retain(v70);
    v69 = 0;
  }
  swift_storeEnumTagMultiPayload(v64, v67, v69);
  v71 = a3[17];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(_QWORD *)v73;
  v75 = *((_QWORD *)v73 + 1);
  v76 = *((_QWORD *)v73 + 2);
  v77 = *((_QWORD *)v73 + 3);
  v78 = v73[32];
  sub_10006B410(*(_QWORD *)v73, v75, v76, v77, v78);
  *(_QWORD *)v72 = v74;
  *((_QWORD *)v72 + 1) = v75;
  *((_QWORD *)v72 + 2) = v76;
  *((_QWORD *)v72 + 3) = v77;
  v72[32] = v78;
  return a1;
}

uint64_t sub_1001F6610(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  int v54;
  char v55;
  __int128 v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(void *, uint64_t, uint64_t);
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  void *v97;
  id v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)&a2[a3[6]];
  v47 = a3[7];
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  *(_QWORD *)v48 = v50;
  v51 = a3[8];
  v52 = a1 + v51;
  v53 = &a2[v51];
  LODWORD(v48) = *(unsigned __int8 *)(a1 + v51 + 16);
  v54 = a2[v51 + 16];
  if ((_DWORD)v48 == 255)
  {
    if (v54 == 255)
    {
      v56 = *(_OWORD *)v53;
      *(_BYTE *)(v52 + 16) = v53[16];
      *(_OWORD *)v52 = v56;
    }
    else
    {
      v63 = v54 & 1;
      v64 = *(_QWORD *)v53;
      v65 = *((_QWORD *)v53 + 1);
      sub_1001F579C(v64, v65, v54 & 1);
      *(_QWORD *)v52 = v64;
      *(_QWORD *)(v52 + 8) = v65;
      *(_BYTE *)(v52 + 16) = v63;
    }
  }
  else if (v54 == 255)
  {
    sub_1001F6EA8(v52);
    v55 = v53[16];
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_BYTE *)(v52 + 16) = v55;
  }
  else
  {
    v57 = v54 & 1;
    v58 = *(_QWORD *)v53;
    v59 = *((_QWORD *)v53 + 1);
    sub_1001F579C(v58, v59, v54 & 1);
    v60 = *(_QWORD *)v52;
    v61 = *(_QWORD *)(v52 + 8);
    v62 = *(_BYTE *)(v52 + 16);
    *(_QWORD *)v52 = v58;
    *(_QWORD *)(v52 + 8) = v59;
    *(_BYTE *)(v52 + 16) = v57;
    sub_1001F57BC(v60, v61, v62);
  }
  v66 = a3[9];
  v67 = (_QWORD *)(a1 + v66);
  v68 = &a2[v66];
  *v67 = *(_QWORD *)v68;
  v69 = v67[1];
  v67[1] = *((_QWORD *)v68 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v69);
  *(_BYTE *)(a1 + a3[10]) = a2[a3[10]];
  *(_BYTE *)(a1 + a3[11]) = a2[a3[11]];
  v70 = a3[12];
  v71 = (char *)(a1 + v70);
  v72 = &a2[v70];
  v73 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
  v76 = v75(v71, 1, v73);
  v77 = v75(v72, 1, v73);
  if (v76)
  {
    if (!v77)
    {
      if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
      {
        v78 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v71, v72, v78);
        v79 = 1;
      }
      else
      {
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
        swift_bridgeObjectRetain();
        v79 = 0;
      }
      swift_storeEnumTagMultiPayload(v71, v73, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      goto LABEL_46;
    }
LABEL_40:
    v80 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_46;
  }
  if (v77)
  {
    sub_10005B748((uint64_t)v71, type metadata accessor for VerticalLockupGridCell.Subtitle);
    goto LABEL_40;
  }
  if ((char *)a1 != a2)
  {
    sub_10005B748((uint64_t)v71, type metadata accessor for VerticalLockupGridCell.Subtitle);
    if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
    {
      v81 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v71, v72, v81);
      swift_storeEnumTagMultiPayload(v71, v73, 1);
    }
    else
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(v71, v73, 0);
    }
  }
LABEL_46:
  v82 = a3[13];
  v83 = (_QWORD *)(a1 + v82);
  v84 = &a2[v82];
  *v83 = *(_QWORD *)v84;
  v85 = v83[1];
  v83[1] = *((_QWORD *)v84 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v85);
  v86 = a3[14];
  v87 = (void *)(a1 + v86);
  v88 = &a2[v86];
  v89 = type metadata accessor for URL(0);
  v90 = *(_QWORD *)(v89 - 8);
  v91 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v90 + 48);
  v92 = v91(v87, 1, v89);
  v93 = v91(v88, 1, v89);
  if (v92)
  {
    if (!v93)
    {
      (*(void (**)(void *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v93)
  {
    (*(void (**)(void *, uint64_t))(v90 + 8))(v87, v89);
LABEL_51:
    v94 = sub_100007E8C(&qword_10119E460);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_52;
  }
  (*(void (**)(void *, char *, uint64_t))(v90 + 24))(v87, v88, v89);
LABEL_52:
  v95 = a3[15];
  v96 = *(void **)(a1 + v95);
  v97 = *(void **)&a2[v95];
  *(_QWORD *)(a1 + v95) = v97;
  v98 = v97;

  if ((char *)a1 != a2)
  {
    v99 = a3[16];
    v100 = (_QWORD *)(a1 + v99);
    v101 = &a2[v99];
    sub_10004FF60(a1 + v99, (uint64_t *)&unk_1011ACE40);
    v102 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v101, v102) == 1)
    {
      v103 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v100, v101, v103);
      v104 = 1;
    }
    else
    {
      v105 = *(_QWORD *)v101;
      *v100 = *(_QWORD *)v101;
      swift_retain(v105);
      v104 = 0;
    }
    swift_storeEnumTagMultiPayload(v100, v102, v104);
  }
  v106 = a3[17];
  v107 = a1 + v106;
  v108 = &a2[v106];
  v109 = *(_QWORD *)v108;
  v110 = *((_QWORD *)v108 + 1);
  v111 = *((_QWORD *)v108 + 2);
  v112 = *((_QWORD *)v108 + 3);
  v113 = v108[32];
  sub_10006B410(*(_QWORD *)v108, v110, v111, v112, v113);
  v114 = *(_QWORD *)v107;
  v115 = *(_QWORD *)(v107 + 8);
  v116 = *(_QWORD *)(v107 + 16);
  v117 = *(_QWORD *)(v107 + 24);
  v118 = *(_BYTE *)(v107 + 32);
  *(_QWORD *)v107 = v109;
  *(_QWORD *)(v107 + 8) = v110;
  *(_QWORD *)(v107 + 16) = v111;
  *(_QWORD *)(v107 + 24) = v112;
  *(_BYTE *)(v107 + 32) = v113;
  sub_10006B61C(v114, v115, v116, v117, v118);
  return a1;
}

uint64_t sub_1001F6EA8(uint64_t a1)
{
  sub_1001F57BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

char *sub_1001F6ED8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = a3[8];
  v29 = a3[9];
  v30 = &a1[v28];
  v31 = &a2[v28];
  v30[16] = v31[16];
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)&a1[v29] = *(_OWORD *)&a2[v29];
  v32 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v32] = a2[v32];
  v33 = a3[12];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C(&qword_1011A6AF0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v35, v36) == 1)
    {
      v39 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v34, v35, v39);
      swift_storeEnumTagMultiPayload(v34, v36, 1);
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(v37 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v40 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = type metadata accessor for URL(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = sub_100007E8C(&qword_10119E460);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = a3[16];
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
  {
    v50 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v47, v48, v50);
    swift_storeEnumTagMultiPayload(v47, v49, 1);
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  v51 = a3[17];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = *((_OWORD *)v53 + 1);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *((_OWORD *)v52 + 1) = v54;
  v52[32] = v53[32];
  return a1;
}

uint64_t sub_1001F735C(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(void *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  size_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  __int128 v106;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)&a2[a3[6]];
  v48 = a1 + v47;
  v49 = &a2[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  v50 = a3[8];
  v51 = a1 + v50;
  v52 = &a2[v50];
  v53 = *(unsigned __int8 *)(a1 + v50 + 16);
  if (v53 == 255)
  {
LABEL_30:
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_BYTE *)(v51 + 16) = v52[16];
    goto LABEL_32;
  }
  v54 = v52[16];
  if (v54 == 255)
  {
    sub_1001F6EA8(v51);
    goto LABEL_30;
  }
  v55 = *(_QWORD *)v51;
  v56 = *(_QWORD *)(v51 + 8);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_BYTE *)(v51 + 16) = v54 & 1;
  sub_1001F57BC(v55, v56, v53 & 1);
LABEL_32:
  v57 = a3[9];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  v62 = v58[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease(v62);
  v63 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = a2[a3[10]];
  *(_BYTE *)(a1 + v63) = a2[v63];
  v64 = a3[12];
  v65 = (void *)(a1 + v64);
  v66 = &a2[v64];
  v67 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69(v66, 1, v67);
  if (!v70)
  {
    if (!v71)
    {
      if ((char *)a1 == a2)
        goto LABEL_45;
      sub_10005B748((uint64_t)v65, type metadata accessor for VerticalLockupGridCell.Subtitle);
      if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
      {
        v74 = type metadata accessor for AttributedString(0);
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v65, v66, v74);
        swift_storeEnumTagMultiPayload(v65, v67, 1);
        goto LABEL_45;
      }
      v73 = *(_QWORD *)(v68 + 64);
LABEL_39:
      memcpy(v65, v66, v73);
      goto LABEL_45;
    }
    sub_10005B748((uint64_t)v65, type metadata accessor for VerticalLockupGridCell.Subtitle);
LABEL_38:
    v73 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A6AF0) - 8) + 64);
    goto LABEL_39;
  }
  if (v71)
    goto LABEL_38;
  if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
  {
    v72 = type metadata accessor for AttributedString(0);
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v65, v66, v72);
    swift_storeEnumTagMultiPayload(v65, v67, 1);
  }
  else
  {
    memcpy(v65, v66, *(_QWORD *)(v68 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_45:
  v75 = a3[13];
  v76 = (_QWORD *)(a1 + v75);
  v77 = &a2[v75];
  v79 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  v80 = v76[1];
  *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease(v80);
  v81 = a3[14];
  v82 = (void *)(a1 + v81);
  v83 = &a2[v81];
  v84 = type metadata accessor for URL(0);
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
  v87 = v86(v82, 1, v84);
  v88 = v86(v83, 1, v84);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, char *, uint64_t))(v85 + 32))(v82, v83, v84);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v88)
  {
    (*(void (**)(void *, uint64_t))(v85 + 8))(v82, v84);
LABEL_50:
    v89 = sub_100007E8C(&qword_10119E460);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(void *, char *, uint64_t))(v85 + 40))(v82, v83, v84);
LABEL_51:
  v90 = a3[15];
  v91 = *(void **)(a1 + v90);
  *(_QWORD *)(a1 + v90) = *(_QWORD *)&a2[v90];

  if ((char *)a1 != a2)
  {
    v92 = a3[16];
    v93 = (void *)(a1 + v92);
    v94 = &a2[v92];
    sub_10004FF60(a1 + v92, (uint64_t *)&unk_1011ACE40);
    v95 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v94, v95) == 1)
    {
      v96 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v93, v94, v96);
      swift_storeEnumTagMultiPayload(v93, v95, 1);
    }
    else
    {
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
  }
  v97 = a3[17];
  v98 = a1 + v97;
  v99 = &a2[v97];
  v100 = v99[32];
  v101 = *(_QWORD *)v98;
  v102 = *(_QWORD *)(v98 + 8);
  v103 = *(_QWORD *)(v98 + 16);
  v104 = *(_QWORD *)(v98 + 24);
  v105 = *(_BYTE *)(v98 + 32);
  v106 = *((_OWORD *)v99 + 1);
  *(_OWORD *)v98 = *(_OWORD *)v99;
  *(_OWORD *)(v98 + 16) = v106;
  *(_BYTE *)(v98 + 32) = v100;
  sub_10006B61C(v101, v102, v103, v104, v105);
  return a1;
}

uint64_t sub_1001F7B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F7B40);
}

uint64_t sub_1001F7B40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_14:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = sub_100007E8C(&qword_1011A6AF0);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[12];
    }
    else
    {
      v17 = sub_100007E8C(&qword_10119E460);
      v12 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v17;
        v13 = a3[14];
      }
      else
      {
        v8 = sub_100007E8C(&qword_1011C6890);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[16];
      }
    }
    goto LABEL_14;
  }
  v14 = *(_QWORD *)(a1 + a3[9] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1001F7C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F7C74);
}

uint64_t sub_1001F7C74(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = type metadata accessor for ArtworkImage.Placeholder(0);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[9] + 8) = (a2 - 1);
        return result;
      }
      v16 = sub_100007E8C(&qword_1011A6AF0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[12];
      }
      else
      {
        v17 = sub_100007E8C(&qword_10119E460);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[14];
        }
        else
        {
          v10 = sub_100007E8C(&qword_1011C6890);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[16];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for VerticalLockupGridCell(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A6B50, (uint64_t)&nominal type descriptor for VerticalLockupGridCell);
}

void sub_1001F7DAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[14];

  sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      v12[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v12[3] = "\t";
      v12[4] = &unk_100EAEBF0;
      v12[5] = &unk_100EAEC08;
      v12[6] = &unk_100EAEC20;
      v12[7] = &unk_100EAEC20;
      sub_1000E3A44(319, (unint64_t *)&unk_1011A6B60, type metadata accessor for VerticalLockupGridCell.Subtitle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v12[8] = *(_QWORD *)(v6 - 8) + 64;
        v12[9] = &unk_100EAEC38;
        sub_1000E3A44(319, qword_1011ACF90, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v12[10] = *(_QWORD *)(v8 - 8) + 64;
          v12[11] = &unk_100EAEC50;
          sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
          if (v11 <= 0x3F)
          {
            v12[12] = *(_QWORD *)(v10 - 8) + 64;
            v12[13] = &unk_100EAEC68;
            swift_initStructMetadata(a1, 256, 14, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t *sub_1001F7F34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1001F7FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v3 = type metadata accessor for AttributedString(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *sub_1001F8040(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for AttributedString(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain(v10);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_1001F80D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for VerticalLockupGridCell.Subtitle);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for AttributedString(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_1001F8180(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for AttributedString(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1001F820C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for VerticalLockupGridCell.Subtitle);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for AttributedString(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001F82B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EAEC08;
  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_1001F8320(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F98524, 1);
}

uint64_t sub_1001F8330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  _QWORD *v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t countAndFlagsBits;
  Swift::String v28;
  uint64_t object;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t OpaqueTypeConformance2;
  uint64_t v57;
  __n128 v58;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  char v79[96];
  _QWORD v80[2];

  v2 = v1;
  v77 = a1;
  v74 = type metadata accessor for AccessibilityChildBehavior(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v70 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011A6C68);
  __chkstk_darwin(v71);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A6C70);
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  __chkstk_darwin(v6);
  v73 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for AttributedString(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v61 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v10 = (uint64_t *)((char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100007E8C(&qword_1011A6AF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DynamicTypeSize(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for VerticalLockupGridCell(0);
  v69 = (_QWORD *)(v1 + v18[13]);
  v67 = v69[1];
  v19 = v1 + v18[8];
  v68 = *(unsigned __int8 *)(v19 + 16);
  v20 = sub_1008237B8((uint64_t)v17);
  v66 = DynamicTypeSize.isAccessibilitySize.getter(v20);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v21, v79);
  v23 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EA7BA0;
  v24 = (_QWORD *)(inited + 32);
  v25 = *(unsigned __int8 *)(v19 + 16);
  if (v25 == 255)
  {
    *v24 = 0;
    *(_QWORD *)(inited + 40) = 0;
    v26 = v65;
  }
  else
  {
    countAndFlagsBits = *(_QWORD *)v19;
    if ((v25 & 1) != 0)
    {
      object = swift_bridgeObjectRetain();
    }
    else
    {
      v80[0] = *(_QWORD *)v19;
      sub_1001AA49C();
      v28 = BinaryInteger.formatted()();
      countAndFlagsBits = v28._countAndFlagsBits;
      object = (uint64_t)v28._object;
    }
    v26 = v65;
    v23[4] = countAndFlagsBits;
    v23[5] = object;
  }
  v30 = (_QWORD *)(v2 + v18[9]);
  v31 = v30[1];
  v23[6] = *v30;
  v23[7] = v31;
  sub_10004A160(v2 + v18[12], (uint64_t)v13, &qword_1011A6AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v13, 1, v26) == 1)
  {
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v13, &qword_1011A6AF0);
    v23[8] = 0;
    v23[9] = 0;
  }
  else
  {
    sub_10005B704((uint64_t)v13, (uint64_t)v10, type metadata accessor for VerticalLockupGridCell.Subtitle);
    if (swift_getEnumCaseMultiPayload(v10, v26) == 1)
    {
      v32 = v62;
      v33 = *(void (**)(char *, uint64_t *, uint64_t))(v62 + 32);
      v65 = (uint64_t)v24;
      v34 = v61;
      v35 = v63;
      v33(v61, v10, v63);
      v36 = sub_100048748((unint64_t *)&qword_1011A6C88, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
      swift_bridgeObjectRetain();
      v37 = AttributedStringProtocol.description.getter(v35, v36);
      v39 = v38;
      v40 = v34;
      v24 = (_QWORD *)v65;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v35);
    }
    else
    {
      v37 = *v10;
      v39 = v10[1];
      swift_bridgeObjectRetain();
    }
    sub_10005B748((uint64_t)v13, type metadata accessor for VerticalLockupGridCell.Subtitle);
    v23[8] = v37;
    v23[9] = v39;
  }
  v41 = 3;
  if (v67)
    v41 = 4;
  if (v68 != 255)
    ++v41;
  v42 = v69[1];
  if ((v66 & 1) != 0)
    v43 = v41 + 2;
  else
    v43 = v41;
  v23[10] = *v69;
  v23[11] = v42;
  __chkstk_darwin(v42);
  *(&v60 - 2) = v2;
  swift_bridgeObjectRetain();
  v44 = sub_10016C6A8((void (*)(_QWORD *))sub_1001FB67C, (uint64_t)(&v60 - 4), (uint64_t)v23);
  swift_setDeallocating(v23);
  v45 = v23[2];
  v46 = sub_100007E8C(&qword_10119DCA0);
  swift_arrayDestroy(v24, v45, v46);
  v47 = v44[2];
  swift_bridgeObjectRelease(v44);
  v80[0] = v43;
  v80[1] = v47;
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v48);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v49 = sub_100007E8C(&qword_1011A6C78);
  v50 = sub_1001F89E8(v2, (uint64_t)v80, (uint64_t)&v5[*(int *)(v49 + 44)]);
  v51 = v70;
  static AccessibilityChildBehavior.combine.getter(v50);
  v52 = sub_100049F28(&qword_1011A6C80, &qword_1011A6C68, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v53 = v73;
  v54 = v71;
  View.accessibilityElement(children:)(v51, v71, v52);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v74);
  sub_10004FF60((uint64_t)v5, &qword_1011A6C68);
  v55 = sub_1001FAA7C();
  v78[0] = v54;
  v78[1] = v52;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v78, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v57 = v76;
  View.accessibilityInputLabels(_:)(v55, v76, OpaqueTypeConformance2);
  v58 = swift_bridgeObjectRelease(v55);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v75 + 8))(v53, v57, v58);
}

uint64_t sub_1001F894C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = a1[1];
  if (v4 && ((v4 & 0x2000000000000000) != 0 ? (v5 = HIBYTE(v4) & 0xF) : (v5 = *a1 & 0xFFFFFFFFFFFFLL), v5))
  {
    sub_10005B704(a2, a3, type metadata accessor for VerticalLockupGridCell);
    v6 = type metadata accessor for VerticalLockupGridCell(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 0, 1, v6);
  }
  else
  {
    v8 = type metadata accessor for VerticalLockupGridCell(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a3, 1, 1, v8);
  }
}

uint64_t sub_1001F89E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  int v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  char v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  double *v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE v113[12];
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t *v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  _BYTE v139[48];
  _BYTE *v140;
  unint64_t v141;
  _BYTE *v142;
  unsigned __int8 v143;
  uint64_t v144;
  uint64_t v145;
  _OWORD v146[2];
  char v147;
  char v148[8];

  v132 = a2;
  v138 = a3;
  v4 = sub_100007E8C(&qword_1011A2CB8);
  __chkstk_darwin(v4);
  v135 = (uint64_t *)&v113[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_1011A2CC0);
  __chkstk_darwin(v6);
  v134 = &v113[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v133 = sub_100007E8C(&qword_1011A6CC8);
  __chkstk_darwin(v133);
  v137 = &v113[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v136 = &v113[-v10];
  v11 = type metadata accessor for VerticalLockupGridCell(0);
  __chkstk_darwin(v11);
  v129 = &v113[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v116 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v14 = &v113[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v15);
  v17 = &v113[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v18);
  v20 = &v113[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v118 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v22 = &v113[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v122 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = &v113[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v128 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v126 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v125 = &v113[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v123 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v123);
  v127 = &v113[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = sub_100007E8C(&qword_1011A6CD0);
  __chkstk_darwin(v26);
  v131 = &v113[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  v124 = &v113[-v29];
  __chkstk_darwin(v30);
  v130 = &v113[-v31];
  v32 = type metadata accessor for DynamicTypeSize(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = &v113[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = sub_1008237B8((uint64_t)v35);
  v114 = DynamicTypeSize.isAccessibilitySize.getter(v36);
  v37 = *(void (**)(_BYTE *, uint64_t))(v33 + 8);
  v38 = v11;
  v37(v35, v32);
  sub_10004A160(a1, (uint64_t)v20, (uint64_t *)&unk_1011A3E10);
  sub_10005B704(a1 + *(int *)(v11 + 20), (uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder);
  v39 = a1 + *(int *)(v11 + 68);
  v40 = *(_OWORD *)(v39 + 16);
  v146[0] = *(_OWORD *)v39;
  v146[1] = v40;
  v147 = *(_BYTE *)(v39 + 32);
  sub_100065228((uint64_t)v146, (uint64_t)v148, &qword_10119EAE0);
  sub_10006FDA8((uint64_t)v148, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B410);
  sub_100823BC4();
  v42 = v41;
  v44 = v43;
  sub_10006FDA8((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B61C);
  if (v42)
    swift_bridgeObjectRelease(v42);
  else
    v44 = 0;
  sub_10006FDA8((uint64_t)v148, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B410);
  sub_100823BC4();
  v46 = v45;
  v48 = v47;
  sub_10006FDA8((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B61C);
  v119 = v38;
  if (v46)
  {
    swift_bridgeObjectRelease(v46);
    v49 = *(int *)(v38 + 28);
    v50 = *(unsigned __int8 *)(a1 + v49 + 8);
    v51 = 1.0;
    if (!*(_BYTE *)(a1 + v49 + 8))
      v51 = 1.0 / *(double *)(a1 + v49);
    v52 = v51 * v48;
    v53 = *(_QWORD *)(a1 + v49);
  }
  else
  {
    v52 = 0.0;
    v49 = *(int *)(v38 + 28);
    v53 = *(_QWORD *)(a1 + v49);
    v50 = *(unsigned __int8 *)(a1 + v49 + 8);
  }
  v54 = (uint64_t *)(a1 + v49);
  if (v50)
    v55 = 0x3FF0000000000000;
  else
    v55 = v53;
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v44, v42 == 0, *(uint64_t *)&v52, v46 == 0, v55, 0, 2, (uint64_t)v139);
  v56 = v115;
  v57 = v116;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v115 + 104))(v14, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v116);
  v58 = v22;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v20, (uint64_t)v17, (uint64_t)v139, (uint64_t)v14, (uint64_t)v22);
  (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v14, v57);
  sub_10005B748((uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A3E10);
  v59 = Corner.large.unsafeMutableAddressor();
  v60 = *v59;
  v61 = v59[1];
  v62 = *((_BYTE *)v59 + 16);
  v63 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v64 = sub_1000E4264();
  v140 = (_BYTE *)v63;
  v141 = v64;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v140, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v66 = v120;
  v67 = v117;
  View.corner(_:)(v60, v61, v62, v117, OpaqueTypeConformance2);
  (*(void (**)(_BYTE *, uint64_t))(v118 + 8))(v58, v67);
  v68 = Border.artwork.unsafeMutableAddressor();
  v69 = *v68;
  v70 = *((double *)v68 + 1);
  v71 = *v59;
  v72 = v59[1];
  LOBYTE(v59) = *((_BYTE *)v59 + 16);
  LOBYTE(v58) = *((_BYTE *)v68 + 16);
  swift_retain(*v68);
  v140 = (_BYTE *)v67;
  v141 = OpaqueTypeConformance2;
  v73 = swift_getOpaqueTypeConformance2(&v140, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v74 = v125;
  v75 = (char)v59;
  v76 = v122;
  View.border(_:corner:)(v69, (char)v58, v71, v72, v75, v122, v73, v70);
  v77 = swift_release(v69);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v121 + 8))(v66, v76, v77);
  v78 = *v54;
  LODWORD(v76) = *((unsigned __int8 *)v54 + 8);
  v79 = v129;
  sub_10005B704(a1, (uint64_t)v129, type metadata accessor for VerticalLockupGridCell);
  v80 = v119;
  if ((_DWORD)v76 == 1)
    v78 = *(_QWORD *)&v79[*(int *)(v119 + 24)];
  if ((v114 & 1) != 0)
    v81 = 1.0;
  else
    v81 = 0.0;
  sub_10005B748((uint64_t)v79, type metadata accessor for VerticalLockupGridCell);
  v82 = v126;
  v83 = (uint64_t)v127;
  v84 = v128;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v126 + 16))(v127, v74, v128);
  v85 = v83 + *(int *)(v123 + 36);
  *(_QWORD *)v85 = v78;
  *(_WORD *)(v85 + 8) = 0;
  (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v74, v84);
  v86 = *(void **)(a1 + *(int *)(v80 + 60));
  v87 = (double *)EdgeInsets.zero.unsafeMutableAddressor();
  v88 = (uint64_t)v124;
  sub_10030F5C4(v86, *v87, v87[1], v87[2], v87[3]);
  sub_10004FF60(v83, &qword_1011A0628);
  v89 = v130;
  v90 = sub_100065228(v88, (uint64_t)v130, &qword_1011A6CD0);
  v91 = *(unsigned __int8 *)(a1 + *(int *)(v80 + 32) + 16);
  v92 = 0x4020000000000000;
  if ((v91 & 1) == 0)
    v92 = 0x4008000000000000;
  if (v91 == 255)
    v93 = 0x4014000000000000;
  else
    v93 = v92;
  v94 = static Alignment.center.getter(v90);
  v96 = _FrameLayout.init(width:height:alignment:)(&v140, 0, 1, v93, 0, v94, v95);
  v129 = v140;
  LODWORD(v128) = v141;
  v127 = v142;
  LODWORD(v126) = v143;
  v97 = v144;
  v98 = v145;
  v99 = static HorizontalAlignment.leading.getter(v96);
  v100 = (uint64_t)v135;
  *v135 = v99;
  *(_QWORD *)(v100 + 8) = 0;
  *(_BYTE *)(v100 + 16) = 0;
  v101 = sub_100007E8C(&qword_1011A6CD8);
  sub_1001F9498(a1, v132, v100 + *(int *)(v101 + 44), v81);
  v103 = static Alignment.leading.getter(v102);
  v104 = v134;
  sub_100149F98(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v134, 0.0, 1, 0.0, 1, v103, v105);
  sub_10004FF60(v100, &qword_1011A2CB8);
  v106 = v137;
  sub_10004A160((uint64_t)v104, (uint64_t)v137, &qword_1011A2CC0);
  *(_WORD *)&v106[*(int *)(v133 + 36)] = 256;
  sub_10004FF60((uint64_t)v104, &qword_1011A2CC0);
  v107 = v136;
  sub_100065228((uint64_t)v106, (uint64_t)v136, &qword_1011A6CC8);
  v108 = v131;
  sub_10004A160((uint64_t)v89, (uint64_t)v131, &qword_1011A6CD0);
  sub_10004A160((uint64_t)v107, (uint64_t)v106, &qword_1011A6CC8);
  v109 = v138;
  sub_10004A160((uint64_t)v108, v138, &qword_1011A6CD0);
  v110 = sub_100007E8C(&qword_1011A6CE0);
  v111 = v109 + *(int *)(v110 + 48);
  *(_QWORD *)v111 = 0;
  *(_BYTE *)(v111 + 8) = 1;
  *(_QWORD *)(v111 + 16) = v129;
  *(_BYTE *)(v111 + 24) = v128;
  *(_QWORD *)(v111 + 32) = v127;
  *(_BYTE *)(v111 + 40) = v126;
  *(_QWORD *)(v111 + 48) = v97;
  *(_QWORD *)(v111 + 56) = v98;
  sub_10004A160((uint64_t)v106, v109 + *(int *)(v110 + 64), &qword_1011A6CC8);
  sub_10004FF60((uint64_t)v107, &qword_1011A6CC8);
  sub_10004FF60((uint64_t)v89, &qword_1011A6CD0);
  sub_10004FF60((uint64_t)v106, &qword_1011A6CC8);
  return sub_10004FF60((uint64_t)v108, &qword_1011A6CD0);
}

void sub_1001F9498(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t KeyPath;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  int v99;
  uint64_t *v100;
  void *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  int *v156;
  __n128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char *v185;
  uint64_t v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  unint64_t v206;
  uint64_t v207;
  void *v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  int v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unsigned __int16 v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void *object;
  uint64_t countAndFlagsBits;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  __int128 v316;
  _QWORD v317[4];
  Swift::String v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unsigned __int8 v329;
  char v330;

  v293 = a2;
  v7 = sub_100007E8C(&qword_1011A6CE8);
  v277 = *(_QWORD *)(v7 - 8);
  v278 = v7;
  __chkstk_darwin(v7);
  v282 = (char *)&v258 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v262 = (char *)&v258 - v10;
  v276 = sub_100007E8C(&qword_1011A6CF0);
  __chkstk_darwin(v276);
  v265 = (char *)&v258 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v261 = (char *)&v258 - v13;
  v283 = sub_100007E8C(&qword_1011A6CF8);
  v275 = *(_QWORD *)(v283 - 8);
  __chkstk_darwin(v283);
  v264 = (uint64_t)&v258 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v263 = (uint64_t)&v258 - v16;
  __chkstk_darwin(v17);
  v260 = (uint64_t)&v258 - v18;
  __chkstk_darwin(v19);
  v259 = (uint64_t)&v258 - v20;
  v21 = type metadata accessor for DynamicTypeSize(0);
  v280 = *(_QWORD *)(v21 - 8);
  v281 = v21;
  __chkstk_darwin(v21);
  v279 = (uint64_t)&v258 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011A6AF0);
  __chkstk_darwin(v23);
  v273 = (uint64_t)&v258 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v271 = *(_QWORD *)(v25 - 8);
  v272 = v25;
  __chkstk_darwin(v25);
  v274 = (uint64_t)&v258 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011A6D00);
  __chkstk_darwin(v27);
  v29 = (char *)&v258 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v305 = (uint64_t)&v258 - v31;
  __chkstk_darwin(v32);
  v294 = (uint64_t)&v258 - v33;
  __chkstk_darwin(v34);
  v304 = (uint64_t)&v258 - v35;
  v36 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v36);
  v287 = (uint64_t)&v258 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for VerticalLockupGridCell(0);
  v39 = a1 + *(int *)(v38 + 32);
  v40 = *(unsigned __int8 *)(v39 + 16);
  v307 = a1;
  v308 = (int *)v38;
  v266 = a3;
  v292 = v29;
  v284 = v39;
  if (v40 == 255)
  {
    object = 0;
    countAndFlagsBits = 0;
    v302 = 0;
    v303 = 0;
    v289 = 0;
    v306 = 0;
    v300 = 0;
    v301 = 0;
    v298 = 0;
    v299 = 0;
    v296 = 0;
    v297 = 0;
    v295 = 65280;
  }
  else
  {
    v41 = *(_QWORD *)v39;
    if ((v40 & 1) != 0)
    {
      v61 = *(void **)(v39 + 8);
      v318._countAndFlagsBits = *(_QWORD *)v39;
      v318._object = v61;
      sub_1001F579C(v41, (uint64_t)v61, 1);
      v62 = sub_100055B68();
      v63 = Text.init<A>(_:)(&v318, &type metadata for String, v62);
      v65 = v64;
      v67 = v66;
      v69 = v68 & 1;
      v70 = static Font.footnote.getter(v63);
      v71 = Text.font(_:)(v70, v63, v65, v69, v67);
      v73 = v72;
      v75 = v74;
      v77 = v76;
      swift_release(v70);
      sub_100055BAC(v63, v65, v69);
      swift_bridgeObjectRelease(v67);
      v79 = static Font.Weight.semibold.getter(v78);
      v80 = v77;
      v81 = Text.fontWeight(_:)(*(_QWORD *)&v79, 0, v71, v73, v75 & 1, v77);
      v83 = v82;
      v85 = v84;
      v87 = v86 & 1;
      sub_100055BAC(v71, v73, v75 & 1);
      swift_bridgeObjectRelease(v80);
      v88 = sub_100551E8C(1);
      KeyPath = swift_getKeyPath(&unk_100EAECE0);
      v90 = static HierarchicalShapeStyle.secondary.getter(KeyPath);
      LOBYTE(v73) = static Edge.Set.bottom.getter(v90);
      v91 = EdgeInsets.init(_all:)(1.0);
      v309 = v81;
      v310 = v83;
      v311 = v87;
      v312 = v85;
      v313 = KeyPath;
      v314 = v88;
      v315 = v90 << 32;
      *(_QWORD *)&v316 = v73;
      *((double *)&v316 + 1) = v91;
      v317[0] = v92;
      v317[1] = v93;
      v317[2] = v94;
      LOWORD(v317[3]) = 256;
    }
    else
    {
      v318._countAndFlagsBits = *(_QWORD *)v39;
      sub_1001AA49C();
      v318 = BinaryInteger.formatted()();
      v42 = sub_100055B68();
      v43 = Text.init<A>(_:)(&v318, &type metadata for String, v42);
      v45 = v44;
      v47 = v46;
      v49 = v48 & 1;
      v50 = static Font.title3.getter();
      v51 = Text.font(_:)(v50, v43, v45, v49, v47);
      v53 = v52;
      v55 = v54;
      v306 = v56;
      swift_release(v50);
      sub_100055BAC(v43, v45, v49);
      swift_bridgeObjectRelease(v47);
      v57 = sub_100551E8C(1);
      v58 = swift_getKeyPath(&unk_100EAECE0);
      v60 = static HierarchicalShapeStyle.primary.getter(v59);
      v309 = v51;
      v310 = v53;
      v311 = v55 & 1;
      v312 = v306;
      v313 = v58;
      v314 = v57;
      v315 = v60 << 32;
      v316 = 0u;
      memset(v317, 0, 26);
    }
    v95 = sub_100007E8C(&qword_1011A5628);
    v96 = sub_100007E8C(&qword_1011A6D10);
    v97 = sub_1001CACA4();
    v98 = sub_1001FB7B8();
    _ConditionalContent<>.init(storage:)(&v309, v95, v96, v97, v98);
    object = v318._object;
    countAndFlagsBits = v318._countAndFlagsBits;
    v302 = v320;
    v303 = v319;
    v289 = v321;
    v306 = v322;
    v300 = v324;
    v301 = v323;
    v298 = v326;
    v299 = v325;
    v296 = v328;
    v297 = v327;
    if (v330)
      v99 = 256;
    else
      v99 = 0;
    v295 = v99 | v329;
    a1 = v307;
    v38 = (uint64_t)v308;
  }
  v100 = (uint64_t *)(a1 + *(int *)(v38 + 36));
  v101 = (void *)v100[1];
  v318._countAndFlagsBits = *v100;
  v318._object = v101;
  v102 = sub_100055B68();
  swift_bridgeObjectRetain();
  v103 = Text.init<A>(_:)(&v318, &type metadata for String, v102);
  v105 = v104;
  v107 = v106;
  v109 = v108 & 1;
  v110 = TextBadge.view.getter(*(_BYTE *)(a1 + v308[10]));
  v112 = v111;
  v114 = v113;
  v116 = v115 & 1;
  v117 = static Text.+ infix(_:_:)(v103, v105, v109, v107, v110, v111, v116, v113);
  v269 = v118;
  v270 = v117;
  v120 = v119;
  v268 = v121 & 1;
  sub_100055BAC(v110, v112, v116);
  swift_bridgeObjectRelease(v114);
  sub_100055BAC(v103, v105, v109);
  swift_bridgeObjectRelease(v107);
  v122 = TextBadge.view.getter(*(_BYTE *)(v307 + v308[11]));
  v124 = v123;
  v126 = v125;
  v128 = v127 & 1;
  v130 = v269;
  v129 = v270;
  LOBYTE(v107) = v268;
  v131 = static Text.+ infix(_:_:)(v270, v269, v268, v120, v122, v123, v128, v125);
  v267 = v131;
  v286 = v132;
  v288 = v133;
  LODWORD(v285) = v134 & 1;
  sub_100055BAC(v122, v124, v128);
  swift_bridgeObjectRelease(v126);
  sub_100055BAC(v129, v130, v107);
  swift_bridgeObjectRelease(v120);
  v135 = v287;
  sub_10004A160(v307 + v308[14], v287, &qword_10119E460);
  v136 = type metadata accessor for URL(0);
  LODWORD(v124) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 48))(v135, 1, v136);
  sub_10004FF60(v135, &qword_10119E460);
  if ((_DWORD)v124 == 1)
    v137 = 2;
  else
    v137 = 4;
  v138 = TextBadge.view.getter(v137);
  v140 = v139;
  v142 = v141;
  v144 = v143 & 1;
  v145 = v131;
  v146 = v286;
  v147 = v285;
  v148 = static Text.+ infix(_:_:)(v145, v286, v285, v288, v138, v139, v144, v141);
  v150 = v149;
  v269 = v151;
  v153 = v152 & 1;
  v154 = v144;
  v155 = v307;
  sub_100055BAC(v138, v140, v154);
  swift_bridgeObjectRelease(v142);
  v156 = v308;
  sub_100055BAC(v267, v146, v147);
  v157 = swift_bridgeObjectRelease(v288);
  v158 = static Font.callout.getter(v157);
  v159 = v269;
  v160 = Text.font(_:)(v158, v148, v150, v153, v269);
  v286 = v161;
  v287 = v160;
  LODWORD(v270) = v162;
  v288 = v163;
  swift_release(v158);
  sub_100055BAC(v148, v150, v153);
  swift_bridgeObjectRelease(v159);
  v164 = *(unsigned __int8 *)(v284 + 16);
  if (v164 != 255 && (v164 & 1) != 0 && *(_QWORD *)(v155 + v156[13] + 8))
  {
    v165 = 1;
  }
  else
  {
    v166 = v279;
    v167 = sub_1008237B8(v279);
    v168 = DynamicTypeSize.isAccessibilitySize.getter(v167);
    (*(void (**)(uint64_t, uint64_t))(v280 + 8))(v166, v281);
    if ((v168 & 1) != 0)
      v165 = 4;
    else
      v165 = 2;
  }
  v269 = sub_100551E8C(v165);
  v285 = swift_getKeyPath(&unk_100EAECE0);
  v169 = v273;
  sub_10004A160(v155 + v156[12], v273, &qword_1011A6AF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48))(v169, 1, v272) == 1)
  {
    sub_10004FF60(v169, &qword_1011A6AF0);
    v170 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v275 + 56);
    v171 = v283;
    v170(v304, 1, 1, v283);
  }
  else
  {
    v172 = v169;
    v173 = v274;
    sub_1001FB774(v172, v274);
    v174 = sub_1001FA4A4(v173);
    v176 = v175;
    v178 = v177;
    v180 = v179;
    v181 = static Font.subheadline.getter(v174);
    v182 = swift_getKeyPath(&unk_100EAED10);
    v318._countAndFlagsBits = v174;
    v318._object = v176;
    v319 = v178;
    v320 = v180;
    v321 = v182;
    v322 = v181;
    v183 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
    v184 = sub_1000F59AC();
    v185 = v262;
    v186 = v183;
    v187 = v308;
    View.hyphenationFactor(_:)(v186, v184, a4);
    v188 = (uint64_t)v176;
    v155 = v307;
    sub_1000E450C(v174, v188, v178, v180);
    swift_release(v181);
    swift_release(v182);
    v189 = v279;
    v190 = sub_1008237B8(v279);
    LOBYTE(v173) = DynamicTypeSize.isAccessibilitySize.getter(v190);
    (*(void (**)(uint64_t, uint64_t))(v280 + 8))(v189, v281);
    if ((v173 & 1) != 0)
      v191 = 4;
    else
      v191 = 2;
    v192 = sub_100551E8C(v191);
    v193 = swift_getKeyPath(&unk_100EAECE0);
    v195 = v277;
    v194 = v278;
    v196 = (uint64_t)v261;
    (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v261, v185, v278);
    v197 = v196 + *(int *)(v276 + 36);
    *(_QWORD *)v197 = v193;
    *(_QWORD *)(v197 + 8) = v192;
    *(_BYTE *)(v197 + 16) = 0;
    v198 = (*(uint64_t (**)(char *, uint64_t))(v195 + 8))(v185, v194);
    LODWORD(v192) = static HierarchicalShapeStyle.secondary.getter(v198);
    v199 = v260;
    sub_10004A160(v196, v260, &qword_1011A6CF0);
    v171 = v283;
    *(_DWORD *)(v199 + *(int *)(v283 + 36)) = v192;
    sub_10004FF60(v196, &qword_1011A6CF0);
    sub_10005B748(v274, type metadata accessor for VerticalLockupGridCell.Subtitle);
    v200 = v199;
    v156 = v187;
    v201 = v259;
    sub_100065228(v200, v259, &qword_1011A6CF8);
    v202 = v201;
    v203 = v304;
    sub_100065228(v202, v304, &qword_1011A6CF8);
    v170 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v275 + 56);
    v170(v203, 0, 1, v171);
  }
  v204 = v294;
  v205 = (uint64_t *)(v155 + v156[13]);
  v206 = v205[1];
  if (v206)
  {
    v308 = (int *)v170;
    v207 = sub_1001FA7BC(*v205, v206);
    v209 = v208;
    v211 = v210;
    v213 = v212;
    v214 = static Font.subheadline.getter(v207);
    v215 = swift_getKeyPath(&unk_100EAED10);
    v318._countAndFlagsBits = v207;
    v318._object = v209;
    v319 = v211;
    v320 = v213;
    v321 = v215;
    v322 = v214;
    v216 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
    v217 = sub_1000F59AC();
    View.hyphenationFactor(_:)(v216, v217, a4);
    sub_1000E450C(v207, (uint64_t)v209, v211, v213);
    swift_release(v214);
    swift_release(v215);
    v218 = *(unsigned __int8 *)(v284 + 16);
    if (v218 != 255 && (v218 & 1) != 0 && v205[1])
      v219 = 3;
    else
      v219 = 2;
    v220 = v266;
    v221 = v283;
    v222 = v294;
    v223 = sub_100551E8C(v219);
    v224 = swift_getKeyPath(&unk_100EAECE0);
    v226 = v277;
    v225 = v278;
    v227 = (uint64_t)v265;
    v228 = v282;
    (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v265, v282, v278);
    v229 = v227 + *(int *)(v276 + 36);
    *(_QWORD *)v229 = v224;
    *(_QWORD *)(v229 + 8) = v223;
    *(_BYTE *)(v229 + 16) = 0;
    v230 = (*(uint64_t (**)(char *, uint64_t))(v226 + 8))(v228, v225);
    LODWORD(v223) = static HierarchicalShapeStyle.secondary.getter(v230);
    v231 = v264;
    sub_10004A160(v227, v264, &qword_1011A6CF0);
    *(_DWORD *)(v231 + *(int *)(v221 + 36)) = v223;
    sub_10004FF60(v227, &qword_1011A6CF0);
    v232 = v263;
    sub_100065228(v231, v263, &qword_1011A6CF8);
    sub_100065228(v232, v222, &qword_1011A6CF8);
    v204 = v222;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v308)(v222, 0, 1, v221);
  }
  else
  {
    v220 = v266;
    v170(v294, 1, 1, v171);
  }
  v233 = v270 & 1;
  LOBYTE(v318._countAndFlagsBits) = v270 & 1;
  LODWORD(v308) = v270 & 1;
  sub_10004A160(v304, v305, &qword_1011A6D00);
  v234 = (uint64_t)v292;
  sub_10004A160(v204, (uint64_t)v292, &qword_1011A6D00);
  v235 = object;
  *(_QWORD *)v220 = countAndFlagsBits;
  *(_QWORD *)(v220 + 8) = v235;
  v236 = v302;
  *(_QWORD *)(v220 + 16) = v303;
  *(_QWORD *)(v220 + 24) = v236;
  v237 = v306;
  *(_QWORD *)(v220 + 32) = v289;
  *(_QWORD *)(v220 + 40) = v237;
  v239 = v299;
  v238 = v300;
  *(_QWORD *)(v220 + 48) = v301;
  *(_QWORD *)(v220 + 56) = v238;
  v240 = v297;
  v241 = v298;
  *(_QWORD *)(v220 + 64) = v239;
  *(_QWORD *)(v220 + 72) = v241;
  v298 = v241;
  v299 = v239;
  v242 = v296;
  *(_QWORD *)(v220 + 80) = v240;
  *(_QWORD *)(v220 + 88) = v242;
  v296 = v242;
  v297 = v240;
  v243 = v295;
  *(_WORD *)(v220 + 96) = v295;
  v295 = v243;
  v244 = v286;
  *(_QWORD *)(v220 + 104) = v287;
  *(_QWORD *)(v220 + 112) = v244;
  *(_BYTE *)(v220 + 120) = v233;
  v245 = v285;
  *(_QWORD *)(v220 + 128) = v288;
  *(_QWORD *)(v220 + 136) = v245;
  *(_QWORD *)(v220 + 144) = v269;
  *(_BYTE *)(v220 + 152) = 0;
  v246 = sub_100007E8C(&qword_1011A6D08);
  sub_10004A160(v305, v220 + *(int *)(v246 + 64), &qword_1011A6D00);
  sub_10004A160(v234, v220 + *(int *)(v246 + 80), &qword_1011A6D00);
  v257 = v243;
  v256 = v242;
  v255 = v239;
  v248 = (uint64_t)object;
  v247 = countAndFlagsBits;
  v249 = v289;
  sub_1001FB69C(countAndFlagsBits, (uint64_t)object, v303, v302, v289, v306, v301, v300, v255, v241, v240, v256, v257);
  v251 = v286;
  v250 = v287;
  v252 = (char)v308;
  sub_100055BBC(v287, v286, (char)v308);
  v253 = v288;
  swift_bridgeObjectRetain();
  v254 = v285;
  swift_retain(v285);
  sub_100055BBC(v250, v251, v252);
  swift_bridgeObjectRetain();
  swift_retain(v254);
  sub_10004FF60(v294, &qword_1011A6D00);
  sub_10004FF60(v304, &qword_1011A6D00);
  sub_100055BAC(v250, v251, v252);
  swift_release(v254);
  swift_bridgeObjectRelease(v253);
  sub_10004FF60((uint64_t)v292, &qword_1011A6D00);
  sub_10004FF60(v305, &qword_1011A6D00);
  sub_100055BAC(v250, v251, v318._countAndFlagsBits);
  swift_release(v254);
  swift_bridgeObjectRelease(v253);
  sub_1001FB704(v247, v248, v303, v302, v249, v306, v301, v300, v299, v298, v297, v296, v295);
}

uint64_t sub_1001FA4A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  Swift::Int v32;
  char *v33;
  __n128 v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = type metadata accessor for AttributedString.Index(0);
  v40 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v36 - v7;
  v9 = type metadata accessor for AttributedString.CharacterView(0, v6);
  v39 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for AttributedString(0);
  v38 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  v17 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(a1, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    v37 = v13;
    v21 = v38;
    v22 = v19;
    v23 = v41;
    v24 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v38 + 32))(v16, v22, v41);
    AttributedString.characters.getter(v24);
    v25 = sub_100048748(&qword_1011A6CB0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
    dispatch thunk of Collection.startIndex.getter(v9);
    dispatch thunk of Collection.endIndex.getter(v4, v9, v25);
    v26 = sub_100048748(&qword_1011A6CB8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
    v27 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v4, v2, v26);
    v28 = *(void (**)(char *, uint64_t))(v40 + 8);
    v28(v4, v2);
    v28(v8, v2);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v9);
    if ((v27 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v23);
      return 0;
    }
    else
    {
      v33 = v37;
      v34.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v21 + 16))(v37, v16, v23);
      v29 = Text.init(_:)(v33, v34);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v23);
    }
  }
  else
  {
    v30 = *v19;
    v31 = v19[1];
    v32 = sub_1004872C4((uint64_t)&off_1010AAC50);
    return Text.init(optional:options:)(v30, v31, v32);
  }
  return v29;
}

uint64_t sub_1001FA7BC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];

  v4 = type metadata accessor for AttributedString.Index(0);
  v36 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v33 - v9;
  v11 = type metadata accessor for AttributedString.CharacterView(0, v8);
  v35 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AttributedString(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v33 - v20;
  v22 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v22 = a1 & 0xFFFFFFFFFFFFLL;
  if (v22)
  {
    v34 = v19;
    v37[0] = a1;
    v37[1] = a2;
    v23 = sub_100007E8C(&qword_1011C7580);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    swift_bridgeObjectRetain();
    v24 = MarkupRenderer.init(_:)(v37);
    dispatch thunk of MarkupRenderer.attributedString.getter();
    swift_release(v24);
    AttributedString.characters.getter(v25);
    v26 = sub_100048748(&qword_1011A6CB0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
    dispatch thunk of Collection.startIndex.getter(v11);
    dispatch thunk of Collection.endIndex.getter(v6, v11, v26);
    v27 = sub_100048748(&qword_1011A6CB8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
    LOBYTE(v24) = dispatch thunk of static Equatable.== infix(_:_:)(v10, v6, v4, v27);
    v28 = *(void (**)(char *, uint64_t))(v36 + 8);
    v28(v6, v4);
    v28(v10, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
    if ((v24 & 1) == 0)
    {
      v30 = v34;
      v31.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v15 + 16))(v17, v21, v34);
      v29 = Text.init(_:)(v17, v31);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v30);
      return v29;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v34);
  }
  return 0;
}

_QWORD *sub_1001FAA7C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t *, uint64_t, uint64_t);
  unsigned int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  _QWORD *v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;

  v1 = sub_100007E8C(&qword_1011A6C90);
  v2 = __chkstk_darwin(v1);
  v113 = (uint64_t)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AttributedString.CharacterView(0, v2);
  v111 = *(_QWORD *)(v4 - 8);
  v112 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for AttributedString(0);
  v120 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v118 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A6AF0);
  __chkstk_darwin(v8);
  v116 = (uint64_t)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v110 - v11;
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v110 - v14);
  v16 = (int *)type metadata accessor for VerticalLockupGridCell(0);
  v17 = v16[9];
  v121 = v0;
  v18 = (_QWORD *)(v0 + v17);
  v20 = *v18;
  v19 = v18[1];
  v119 = v18;
  swift_bridgeObjectRetain();
  v21 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_100431480((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v21[2] = v23 + 1;
  v24 = &v21[2 * v23];
  v24[4] = v20;
  v24[5] = v19;
  v25 = v121 + v16[12];
  sub_10004A160(v25, (uint64_t)v15, &qword_1011A6AF0);
  v26 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  v27 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  v28 = v27(v15, 1, v26);
  v114 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v27;
  v115 = v25;
  if (v28 == 1)
  {
    sub_10004FF60((uint64_t)v15, &qword_1011A6AF0);
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload(v15, v26) == 1)
  {
    sub_10005B748((uint64_t)v15, type metadata accessor for VerticalLockupGridCell.Subtitle);
LABEL_7:
    sub_10004A160(v25, (uint64_t)v12, &qword_1011A6AF0);
    if (v27((uint64_t *)v12, 1, v26) == 1)
    {
      sub_10004FF60((uint64_t)v12, &qword_1011A6AF0);
    }
    else if (swift_getEnumCaseMultiPayload(v12, v26) == 1)
    {
      v29 = v12;
      v30 = v117;
      v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v120 + 32))(v118, v29, v117);
      AttributedString.characters.getter(v31);
      v32 = v113;
      sub_1001FB268(v113);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v6, v112);
      v33 = String.init(_:)(v32);
      v35 = v34;
      v37 = v21[2];
      v36 = v21[3];
      if (v37 >= v36 >> 1)
        v21 = sub_100431480((_QWORD *)(v36 > 1), v37 + 1, 1, v21);
      v21[2] = v37 + 1;
      v38 = &v21[2 * v37];
      v38[4] = v33;
      v38[5] = v35;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v118, v30);
    }
    else
    {
      sub_10005B748((uint64_t)v12, type metadata accessor for VerticalLockupGridCell.Subtitle);
    }
    goto LABEL_17;
  }
  v39 = *v15;
  v40 = v15[1];
  v42 = v21[2];
  v41 = v21[3];
  if (v42 >= v41 >> 1)
    v21 = sub_100431480((_QWORD *)(v41 > 1), v42 + 1, 1, v21);
  v21[2] = v42 + 1;
  v43 = &v21[2 * v42];
  v43[4] = v39;
  v43[5] = v40;
LABEL_17:
  v122 = v21;
  swift_bridgeObjectRetain();
  v44 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v117 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v118 = (char *)v44;
  v45 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v44, v117);
  v47 = v46;
  swift_bridgeObjectRelease(v21);
  v122 = (_QWORD *)v45;
  v123 = v47;
  v120 = sub_100055B68();
  v48 = Text.init<A>(_:)(&v122, &type metadata for String, v120);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v55 = sub_100432428(0, 1, 1, _swiftEmptyArrayStorage);
  v57 = v55[2];
  v56 = v55[3];
  if (v57 >= v56 >> 1)
    v55 = sub_100432428((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
  v55[2] = v57 + 1;
  v58 = &v55[4 * v57];
  v58[4] = v48;
  v58[5] = v50;
  *((_BYTE *)v58 + 48) = v52 & 1;
  v58[7] = v54;
  if (*(unsigned __int8 *)(v121 + v16[10]) - 2 >= 3)
  {
    v60 = v119;
    v59 = v120;
    if (qword_10119BE50 != -1)
      swift_once(&qword_10119BE50, sub_1002F406C);
    v62 = qword_10124CD50;
    v61 = *(_QWORD *)algn_10124CD58;
    swift_bridgeObjectRetain_n(*(_QWORD *)algn_10124CD58, 2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    v64 = v115;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_100431480(0, v21[2] + 1, 1, v21);
    v66 = v21[2];
    v65 = v21[3];
    if (v66 >= v65 >> 1)
      v21 = sub_100431480((_QWORD *)(v65 > 1), v66 + 1, 1, v21);
    v21[2] = v66 + 1;
    v67 = &v21[2 * v66];
    v67[4] = v62;
    v67[5] = v61;
    v68 = v116;
    sub_10004A160(v64, v116, &qword_1011A6AF0);
    if (v114(v68, 1, v26) == 1)
    {
      swift_bridgeObjectRelease(v21);
      sub_10004FF60(v68, &qword_1011A6AF0);
    }
    else
    {
      sub_10004FF60(v68, &qword_1011A6AF0);
      v122 = v21;
      v69 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v118, v117);
      v71 = v70;
      swift_bridgeObjectRelease(v21);
      v122 = (_QWORD *)v69;
      v123 = v71;
      v72 = Text.init<A>(_:)(&v122, &type metadata for String, v59);
      v74 = v73;
      v76 = v75;
      v78 = v77;
      v80 = v55[2];
      v79 = v55[3];
      if (v80 >= v79 >> 1)
        v55 = sub_100432428((_QWORD *)(v79 > 1), v80 + 1, 1, v55);
      v55[2] = v80 + 1;
      v81 = &v55[4 * v80];
      v81[4] = v72;
      v81[5] = v74;
      *((_BYTE *)v81 + 48) = v76 & 1;
      v81[7] = v78;
      v59 = v120;
    }
    v82 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v83 = swift_allocObject(v82, 64, 7);
    *(_OWORD *)(v83 + 16) = xmmword_100EA7A80;
    v84 = v60[1];
    *(_QWORD *)(v83 + 32) = *v60;
    *(_QWORD *)(v83 + 40) = v84;
    *(_QWORD *)(v83 + 48) = v62;
    *(_QWORD *)(v83 + 56) = v61;
    v122 = (_QWORD *)v83;
    swift_bridgeObjectRetain();
    v85 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v118, v117);
    v87 = v86;
    swift_bridgeObjectRelease(v83);
    v122 = (_QWORD *)v85;
    v123 = v87;
    v88 = Text.init<A>(_:)(&v122, &type metadata for String, v59);
    v90 = v89;
    v92 = v91;
    v94 = v93;
    v96 = v55[2];
    v95 = v55[3];
    if (v96 >= v95 >> 1)
      v55 = sub_100432428((_QWORD *)(v95 > 1), v96 + 1, 1, v55);
    v55[2] = v96 + 1;
    v97 = &v55[4 * v96];
    v97[4] = v88;
    v97[5] = v90;
    *((_BYTE *)v97 + 48) = v92 & 1;
    v97[7] = v94;
  }
  else
  {
    swift_bridgeObjectRelease(v21);
    v60 = v119;
    v59 = v120;
  }
  v98 = v60[1];
  v122 = (_QWORD *)*v60;
  v123 = v98;
  swift_bridgeObjectRetain();
  v99 = Text.init<A>(_:)(&v122, &type metadata for String, v59);
  v101 = v100;
  v103 = v102;
  v105 = v104;
  v107 = v55[2];
  v106 = v55[3];
  if (v107 >= v106 >> 1)
    v55 = sub_100432428((_QWORD *)(v106 > 1), v107 + 1, 1, v55);
  v55[2] = v107 + 1;
  v108 = &v55[4 * v107];
  v108[4] = v99;
  v108[5] = v101;
  *((_BYTE *)v108 + 48) = v103 & 1;
  v108[7] = v105;
  return v55;
}

uint64_t sub_1001FB268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v48 = sub_100007E8C(&qword_1011A6C98);
  __chkstk_darwin(v48);
  v46 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v43 - v5;
  v7 = type metadata accessor for AttributedString.Index(0);
  v52 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v43 - v11;
  __chkstk_darwin(v13);
  v49 = (char *)v43 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)v43 - v16;
  v47 = sub_100007E8C(&qword_1011A6CA0);
  __chkstk_darwin(v47);
  v45 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v44 = (uint64_t)v43 - v20;
  v21 = sub_100007E8C(&qword_1011A6CA8);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for AttributedString.CharacterView(0, v22);
  v26 = sub_100048748(&qword_1011A6CB0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
  v53 = v1;
  v50 = v26;
  v51 = v25;
  dispatch thunk of Collection.startIndex.getter(v25);
  v27 = sub_100048748(&qword_1011A6CB8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v24, v24, v7, v27);
  if ((result & 1) != 0)
  {
    v43[1] = a1;
    v29 = v52;
    v30 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v30(v17, v24, v7);
    v31 = v49;
    dispatch thunk of Collection.endIndex.getter(v49, v51, v50);
    v43[0] = v17;
    v30(v12, v17, v7);
    v30(v9, v31, v7);
    sub_10004FF60((uint64_t)v24, &qword_1011A6CA8);
    v32 = sub_100048748(&qword_1011A6CC0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
    v33 = dispatch thunk of static Comparable.<= infix(_:_:)(v12, v9, v7, v32);
    v34 = *(void (**)(char *, uint64_t))(v29 + 8);
    v34(v9, v7);
    result = ((uint64_t (*)(char *, uint64_t))v34)(v12, v7);
    if ((v33 & 1) != 0)
    {
      v35 = (uint64_t)v45;
      v36 = v46;
      v37 = v48;
      v38 = &v6[*(int *)(v48 + 48)];
      v39 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      v39(v6, (char *)v43[0], v7);
      v39(v38, v49, v7);
      v40 = &v36[*(int *)(v37 + 48)];
      v30(v36, v6, v7);
      v30(v40, v38, v7);
      v39((char *)v35, v36, v7);
      v34(v40, v7);
      v41 = &v36[*(int *)(v37 + 48)];
      v39(v36, v6, v7);
      v39(v41, v38, v7);
      v39((char *)(v35 + *(int *)(v47 + 36)), v41, v7);
      v34(v36, v7);
      v42 = v44;
      sub_100065228(v35, v44, &qword_1011A6CA0);
      dispatch thunk of Collection.subscript.getter(v42, v51, v50);
      return sub_10004FF60(v42, &qword_1011A6CA0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001FB67C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1001F894C(a1, *(_QWORD *)(v2 + 16), a2);
}

double sub_1001FB69C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int16 a13)
{
  double result;

  if (HIBYTE(a13) <= 0xFEu)
    return sub_1001FB6D0(a1, a2, a3, a4, a5);
  return result;
}

double sub_1001FB6D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  double result;

  sub_100055BBC(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  *(_QWORD *)&result = swift_retain(a5).n128_u64[0];
  return result;
}

double sub_1001FB704(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int16 a13)
{
  double result;

  if (HIBYTE(a13) <= 0xFEu)
    return sub_1001FB738(a1, a2, a3, a4, a5);
  return result;
}

double sub_1001FB738(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  double result;

  sub_100055BAC(a1, a2, a3 & 1);
  swift_release(a5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  return result;
}

uint64_t sub_1001FB774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VerticalLockupGridCell.Subtitle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001FB7B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A6D18;
  if (!qword_1011A6D18)
  {
    v1 = sub_100044B54(&qword_1011A6D10);
    sub_1001CACA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A6D18);
  }
  return result;
}

unint64_t sub_1001FB828()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011A6D20;
  if (!qword_1011A6D20)
  {
    v1 = sub_100044B54(&qword_1011A6D28);
    v2[0] = sub_100044B54(&qword_1011A6C68);
    v2[1] = sub_100049F28(&qword_1011A6C80, &qword_1011A6C68, (uint64_t)&protocol conformance descriptor for VStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A6D20);
  }
  return result;
}

void sub_1001FB8F4()
{
  off_1011A6D30 = _swiftEmptyArrayStorage;
}

uint64_t sub_1001FB908(_QWORD *a1)
{
  return static VideoArtwork.== infix(_:_:)(*a1 + OBJC_IVAR____TtC5Music10MotionData_videoArtwork) & 1;
}

BOOL sub_1001FB940(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC5Music10MotionData_videoArtwork;
  v4 = type metadata accessor for VideoArtwork(0);
  v5 = sub_100048748(&qword_1011A6080, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t)&protocol conformance descriptor for VideoArtwork);
  return (dispatch thunk of static Equatable.== infix(_:_:)(v3, a2, v4, v5) & 1) == 0;
}

uint64_t sub_1001FB9C4()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  result = swift_allocObject(v0, 41, 7);
  *(_QWORD *)(result + 16) = 0xD00000000000001ALL;
  *(_QWORD *)(result + 24) = 0x8000000100E31690;
  *(_QWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 40) = 1;
  qword_1011A6D38 = result;
  return result;
}

uint64_t sub_1001FBA18()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAEDA8);
  v2 = swift_getKeyPath(&unk_100EAEDD0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1001FBA8C(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double bottom;
  void *v31;
  id v32;
  id v33;
  double v34;
  void *v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  id v42;
  id v43;
  double v44;
  double v45;
  char v46;
  id v47;
  double v48;
  double v49;
  id v50;
  double v51;
  double v52;
  id v53;
  double v54;
  double v55;
  id v56;
  double v57;
  double v58;
  uint64_t v59;
  double *v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _BYTE v71[24];
  double v72;
  double v73;
  _QWORD v74[2];
  char v75;
  double v76;
  double v77;

  v70 = a1;
  v4 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v68 - v9;
  v11 = sub_100007E8C((uint64_t *)&unk_1011BCCA0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2 + OBJC_IVAR____TtC5Music10MotionData__keyframeData;
  v74[0] = 0;
  v74[1] = 0;
  v75 = -1;
  v16 = sub_100007E8C((uint64_t *)&unk_1011A6DA0);
  Published.init(initialValue:)(v74, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Music10MotionData_keyframeSize);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music10MotionData_keyframeTask) = 0;
  v18 = v2 + OBJC_IVAR____TtC5Music10MotionData_videoArtwork;
  v19 = type metadata accessor for VideoArtwork(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v70, v19);
  v68 = v2;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v21(v2 + OBJC_IVAR____TtC5Music10MotionData_videoFlavor, (uint64_t)a2, v4);
  v69 = a2;
  v22 = ((uint64_t (*)(char *, char *, uint64_t))v21)(v10, a2, v4);
  static EditorialVideoArtworkFlavor.motionDetailSquare.getter(v22);
  v23 = sub_100048748(&qword_1011A6EE0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
  v24 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10, v4, v23);
  v25 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v26 = v25(v7, v4);
  if ((v24 & 1) != 0)
  {
    v25(v10, v4);
    v27 = sub_1001FF1DC();
    v29 = v28;
    bottom = UIEdgeInsetsZero.bottom;
    v31 = (void *)objc_opt_self(UIDevice);
    v32 = objc_msgSend(v31, "currentDevice");
    v33 = objc_msgSend(v32, "userInterfaceIdiom");

    sub_100139E44(v33 == (id)1, 0, (uint64_t)v71, v27, v29, bottom);
    if (v73 >= v72)
      v34 = v72;
    else
      v34 = v73;
    v35 = (void *)objc_opt_self(UIScreen);
    v36 = objc_msgSend(v35, "mainScreen");
    objc_msgSend(v36, "scale");
    v38 = v37;

    v39 = sub_1001FF1DC();
    v41 = v40;
    v42 = objc_msgSend(v31, "currentDevice");
    v43 = objc_msgSend(v42, "userInterfaceIdiom");

    sub_100139E44(v43 == (id)1, 0, (uint64_t)v74, v39, v41, bottom);
    if (v77 >= v76)
      v44 = v76;
    else
      v44 = v77;
    v45 = v34 * v38;
    goto LABEL_11;
  }
  static EditorialVideoArtworkFlavor.motionDetailTall.getter(v26);
  v46 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10, v4, v23);
  v25(v7, v4);
  v25(v10, v4);
  if ((v46 & 1) != 0)
  {
    v35 = (void *)objc_opt_self(UIScreen);
    v47 = objc_msgSend(v35, "mainScreen");
    objc_msgSend(v47, "bounds");
    v49 = v48;

    v50 = objc_msgSend(v35, "mainScreen");
    objc_msgSend(v50, "scale");
    v52 = v51;

    v45 = v49 * v52;
    v53 = objc_msgSend(v35, "mainScreen");
    objc_msgSend(v53, "bounds");
    v55 = v54;

    v44 = v55 * 4.0 / 3.0;
LABEL_11:
    v56 = objc_msgSend(v35, "mainScreen");
    objc_msgSend(v56, "scale");
    v58 = v57;

    v59 = v68;
    v60 = (double *)(v68 + OBJC_IVAR____TtC5Music10MotionData_keyframeSize);
    *v60 = v45;
    v60[1] = v44 * v58;
    v61 = sub_1001FC074();
    ((void (*)(char *, uint64_t, double))v25)(v69, v4, v61);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v70, v19);
    return v59;
  }
  swift_release(v68);
  if (qword_10119BBE8 != -1)
    swift_once(&qword_10119BBE8, sub_1001FD3A0);
  v62 = type metadata accessor for Logger(0);
  v63 = sub_100048B14(v62, (uint64_t)static Logger.motionInNowPlaying);
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.default.getter(v64);
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v66 = 0;
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "MotionData: MINP unsupported artwork flavor. Use detail square or tall.", v66, 2u);
    swift_slowDealloc(v66, -1, -1);
  }

  v25(v69, v4);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v70, v19);
  return 0;
}

uint64_t Logger.motionInNowPlaying.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_10119BBE8 != -1)
    swift_once(&qword_10119BBE8, sub_1001FD3A0);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.motionInNowPlaying);
}

double sub_1001FC074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  void *v19;
  void *v20;
  unsigned __int8 v21;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Music10MotionData_keyframeTask;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music10MotionData_keyframeTask);
  if (v6)
  {
    swift_retain(v6);
    sub_100007E8C(&qword_1011A14B0);
    Task.cancel()();
    swift_release(v6);
  }
  KeyPath = swift_getKeyPath(&unk_100EAEDA8);
  v8 = swift_getKeyPath(&unk_100EAEDD0);
  static Published.subscript.getter(&v19, v1, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  LODWORD(KeyPath) = v21;
  sub_1001FFA94(v19, v20, v21);
  if ((_DWORD)KeyPath != 255)
  {
    v9 = swift_getKeyPath(&unk_100EAEDA8);
    v10 = swift_getKeyPath(&unk_100EAEDD0);
    v19 = 0;
    v20 = 0;
    v21 = -1;
    swift_retain(v1);
    static Published.subscript.setter(&v19, v1, v9, v10);
  }
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  type metadata accessor for MainActor(0);
  v12 = swift_retain(v1);
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1010B6130, 40, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v1;
  v15 = sub_100980A1C((uint64_t)v4, (uint64_t)&unk_1011A6F10, (uint64_t)v14);
  v16 = *(_QWORD *)(v1 + v5);
  *(_QWORD *)(v1 + v5) = v15;
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_1001FC258()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1011A6D94);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1001FC2BC;
  return sub_1001FC360();
}

uint64_t sub_1001FC2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001FC32C, v2, v3);
}

uint64_t sub_1001FC32C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FC360()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v1[20] = v0;
  v2 = sub_100007E8C(&qword_1011A6EE8);
  v1[21] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[22] = v3;
  v1[23] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NowPlayingArtworkBackgroundTreatment(0);
  v1[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119E460);
  v1[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A6EF0);
  v1[26] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[27] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[28] = swift_task_alloc(v8);
  v1[29] = swift_task_alloc(v8);
  v9 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v1[30] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[31] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[32] = swift_task_alloc(v11);
  v1[33] = swift_task_alloc(v11);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  v1[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  v1[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork(0);
  v1[36] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v1[37] = v15;
  v1[38] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MainActor(0);
  v1[39] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  v1[40] = v18;
  v1[41] = v19;
  return swift_task_switch(sub_1001FC520, v18, v19);
}

uint64_t sub_1001FC520()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = v0[34];
  v2 = v0[35];
  v3 = v0[20];
  VideoArtwork.previewFrame.getter();
  v4 = *(double *)(v3 + OBJC_IVAR____TtC5Music10MotionData_keyframeSize);
  v5 = *(double *)(v3 + OBJC_IVAR____TtC5Music10MotionData_keyframeSize + 8);
  v6 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v6, "displayScale");
  v8 = v7;

  static Artwork.CropStyle.boundedBox.getter(v9);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v2, 0, 1, v10);
  v11 = enum case for Artwork.ImageFormat.heic(_:);
  v12 = type metadata accessor for Artwork.ImageFormat(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(v1, v11, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v1, 0, 1, v12);
  if (qword_10119BBE0 != -1)
    swift_once(&qword_10119BBE0, sub_1001FB9C4);
  v14 = qword_1011A6D38;
  v0[42] = qword_1011A6D38;
  v15 = sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  v16 = async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1];
  swift_retain(v14);
  v17 = (_QWORD *)swift_task_alloc(v16);
  v0[43] = v17;
  *v17 = v0;
  v17[1] = sub_1001FC6E0;
  return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(v0[35], v0[34], v14, v15, v4, v5, 1.0 / v8);
}

uint64_t sub_1001FC6E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();

  v4 = *(_QWORD **)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 336);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 344);
  *(_QWORD *)(*(_QWORD *)v2 + 352) = v1;
  swift_task_dealloc(v5);
  swift_release(v6);
  v8 = v4[37];
  v7 = v4[38];
  v10 = v4[35];
  v9 = v4[36];
  v11 = v4[34];
  if (v1)
  {
    sub_10004FF60(v11, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v10, (uint64_t *)&unk_1011A14A0);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v12 = v4[40];
    v13 = v4[41];
    v14 = sub_1001FCDAC;
  }
  else
  {
    v4[45] = a1;
    sub_10004FF60(v11, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v10, (uint64_t *)&unk_1011A14A0);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v12 = v4[40];
    v13 = v4[41];
    v14 = sub_1001FC7D0;
  }
  return swift_task_switch(v14, v12, v13);
}

uint64_t sub_1001FC7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  __n128 v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  _QWORD *v32;
  __n128 v34;
  void (*v35)(uint64_t, uint64_t, __n128);
  uint64_t v36;
  void *v37;
  uint64_t KeyPath;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 240);
  v2 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC5Music10MotionData_videoFlavor, v1);
  static EditorialVideoArtworkFlavor.motionDetailSquare.getter(v2);
  v3 = sub_100048748(&qword_1011A6EF8, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
  dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v0 + 128), v1, v3);
  dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v0 + 112), v1, v3);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 248);
  if (v4 == v6 && v5 == v7)
  {
    v34 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 136), 2);
    v35 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 8);
    v35(v9, v10, v34);
    ((void (*)(uint64_t, uint64_t))v35)(v8, v10);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, *(_QWORD *)(v0 + 136), v6, *(_QWORD *)(v0 + 120), 0);
    swift_bridgeObjectRelease(v5);
    v14 = swift_bridgeObjectRelease(v7);
    v15 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 8);
    v15(v9, v10, v14);
    ((void (*)(uint64_t, uint64_t))v15)(v8, v10);
    if ((v13 & 1) == 0)
    {
      v16 = *(_QWORD *)(v0 + 224);
      v17 = *(_QWORD *)(v0 + 232);
      v18 = *(_QWORD *)(v0 + 208);
      v19 = *(_QWORD *)(v0 + 216);
      v21 = *(_QWORD *)(v0 + 192);
      v20 = *(_QWORD *)(v0 + 200);
      v22 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 1, 1, v22);
      NowPlayingArtworkBackgroundTreatment.init(contentMode:)(0);
      v23 = swift_task_alloc(32);
      *(_QWORD *)(v23 + 16) = v0 + 152;
      NowPlayingArtworkBackground.init(videoURL:namespace:treatment:staticArt:)(v20, 0, 1, v21, sub_1001FFA8C, v23, &type metadata for Image, &protocol witness table for Image);
      swift_task_dealloc(v23);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v16, v17, v18);
      v24 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011A6F00));
      v25 = (void *)_UIHostingView.init(rootView:)(v16);
      *(_QWORD *)(v0 + 368) = v25;
      v26 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v26, "bounds");
      v28 = v27;
      v30 = v29;

      objc_msgSend(v25, "setFrame:", 0.0, 0.0, v28, v30);
      v31 = objc_msgSend(v25, "layer");
      CALayer.mcui.getter();

      v32 = (_QWORD *)swift_task_alloc(async function pointer to MCUINamespace<A>.snapshot()[1]);
      *(_QWORD *)(v0 + 376) = v32;
      *v32 = v0;
      v32[1] = sub_1001FCB98;
      return MCUINamespace<A>.snapshot()();
    }
  }
  v36 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 312));
  v37 = *(void **)(v0 + 152);
  KeyPath = swift_getKeyPath(&unk_100EAEDA8);
  v39 = swift_getKeyPath(&unk_100EAEDD0);
  *(_QWORD *)(v0 + 16) = v37;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 0;
  v40 = v37;
  swift_retain(v36);
  static Published.subscript.setter(v0 + 16, v36, KeyPath, v39);

  v41 = *(_QWORD *)(v0 + 272);
  v42 = *(_QWORD *)(v0 + 280);
  v44 = *(_QWORD *)(v0 + 256);
  v43 = *(_QWORD *)(v0 + 264);
  v46 = *(_QWORD *)(v0 + 224);
  v45 = *(_QWORD *)(v0 + 232);
  v48 = *(_QWORD *)(v0 + 192);
  v47 = *(_QWORD *)(v0 + 200);
  v49 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v42);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FCB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 376);
  *(_QWORD *)(*(_QWORD *)v2 + 384) = v1;
  swift_task_dealloc(v5);
  v7 = v4[22];
  v6 = v4[23];
  v8 = v4[21];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = v4[40];
    v10 = v4[41];
    v11 = sub_1001FD030;
  }
  else
  {
    v4[49] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = v4[40];
    v10 = v4[41];
    v11 = sub_1001FCC24;
  }
  return swift_task_switch(v11, v9, v10);
}

uint64_t sub_1001FCC24()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 392);
  v2 = *(void **)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 312));
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v1);
  objc_msgSend(v2, "frame");
  objc_msgSend(v5, "setFrame:");

  v6 = *(void **)(v0 + 152);
  KeyPath = swift_getKeyPath(&unk_100EAEDA8);
  v8 = swift_getKeyPath(&unk_100EAEDD0);
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v0 + 72) = v5;
  *(_BYTE *)(v0 + 80) = 1;
  swift_retain(v4);
  v9 = v6;
  static Published.subscript.setter(v0 + 64, v4, KeyPath, v8);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v20);
  v10 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 280);
  v13 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 264);
  v15 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FCDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_release(*(_QWORD *)(v0 + 312));
  if (qword_10119BBE8 != -1)
    swift_once(&qword_10119BBE8, sub_1001FD3A0);
  v1 = *(_QWORD *)(v0 + 352);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)static Logger.motionInNowPlaying);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 352);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 144) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "MotionData: MINP keyframe image download failed with error: %@.", v8, 0xCu);
    v11 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 352));
    swift_errorRelease(v7);
  }

  v12 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 160);
  KeyPath = swift_getKeyPath(&unk_100EAEDA8);
  v15 = swift_getKeyPath(&unk_100EAEDD0);
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = -1;
  swift_retain(v13);
  static Published.subscript.setter(v0 + 40, v13, KeyPath, v15);
  swift_errorRelease(v12);
  v16 = *(_QWORD *)(v0 + 272);
  v17 = *(_QWORD *)(v0 + 280);
  v19 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 264);
  v21 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 192);
  v22 = *(_QWORD *)(v0 + 200);
  v24 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FD030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_release(*(_QWORD *)(v0 + 312));
  if (qword_10119BBE8 != -1)
    swift_once(&qword_10119BBE8, sub_1001FD3A0);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)static Logger.motionInNowPlaying);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "MotionData: MINP full-bleed keyframe snapshot failed.", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(void **)(v0 + 368);
  v8 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 160);

  KeyPath = swift_getKeyPath(&unk_100EAEDA8);
  v13 = swift_getKeyPath(&unk_100EAEDD0);
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 88) = 0;
  *(_BYTE *)(v0 + 104) = -1;
  swift_retain(v11);
  static Published.subscript.setter(v0 + 88, v11, KeyPath, v13);
  swift_errorRelease(v6);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v14 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 224);
  v18 = *(_QWORD *)(v0 + 232);
  v21 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 200);
  v22 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FD218@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Image.init(uiImage:)(*a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  v9 = Image.resizable(capInsets:resizingMode:)(v7, v8, 0.0, 0.0, 0.0, 0.0);
  swift_release(v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v9;
  return result;
}

uint64_t sub_1001FD2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC5Music10MotionData_videoArtwork;
  v2 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Music10MotionData__keyframeData;
  v4 = sub_100007E8C((uint64_t *)&unk_1011BCCA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Music10MotionData_videoFlavor;
  v6 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music10MotionData_keyframeTask));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001FD3A0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.motionInNowPlaying);
  sub_100048B14(v0, (uint64_t)static Logger.motionInNowPlaying);
  return static Logger.music(_:)(0xD000000000000015, 0x8000000100E316B0);
}

uint64_t static Logger.motionInNowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119BBE8 != -1)
    swift_once(&qword_10119BBE8, sub_1001FD3A0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.motionInNowPlaying);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1001FD470()
{
  return type metadata accessor for MotionData(0);
}

uint64_t type metadata accessor for MotionData(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A6D80;
  if (!qword_1011A6D80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MotionData);
  return result;
}

void sub_1001FD4B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v2 = type metadata accessor for VideoArtwork(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001FD568(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for EditorialVideoArtworkFlavor(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_100EAED58;
        v8[4] = &unk_100EAED70;
        swift_updateClassMetadata2(a1, 256, 5, v8, a1 + 80);
      }
    }
  }
}

void sub_1001FD568(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A6D98)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011A6DA0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A6D98);
  }
}

id sub_1001FD5C4(void *a1, void *a2, char a3)
{
  id v4;

  if ((a3 & 1) != 0)
  {
    v4 = a1;
    a1 = a2;
  }
  return a1;
}

void destroy for MotionKeyframeData(uint64_t a1)
{
  sub_1001FD5FC(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1001FD5FC(void *a1, void *a2, char a3)
{

  if ((a3 & 1) != 0)
}

uint64_t _s5Music18MotionKeyframeDataOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001FD5C4(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MotionKeyframeData(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001FD5C4(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1001FD5FC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MotionKeyframeData(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1001FD5FC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for MotionKeyframeData()
{
  return &type metadata for MotionKeyframeData;
}

uint64_t sub_1001FD730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FDE08(a1, a2, a3, (unint64_t *)&qword_10119D470, UIViewController_ptr);
}

uint64_t sub_1001FD744(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  char v28;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_100431A14(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = type metadata accessor for SidebarMenu.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy(v18, v8, v14);
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    v28 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v28, 1046, 0);
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack(v21);
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront(v21);
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    sub_1001FFA40(a3, v18);
  return sub_10004FF60(a3, &qword_1011AE240);
}

uint64_t sub_1001FD910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FE594(a1, a2, a3, (unint64_t *)&qword_10119D470, UIViewController_ptr, (uint64_t (*)(uint64_t))sub_100481BC8);
}

char *sub_1001FD92C(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_100431C34(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  v17 = sub_100007E8C(&qword_1011A08D8);
  result = (char *)swift_arrayDestroy(v16, v9, v17);
  if (!v10)
    goto LABEL_20;
  v19 = v6[2];
  v20 = __OFSUB__(v19, a2);
  v21 = v19 - a2;
  if (v20)
    goto LABEL_26;
  if ((v21 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v22 = &v6[2 * a2 + 4];
    if (v16 + 2 != v22 || result >= (char *)&v22[2 * v21])
      result = (char *)memmove(result, v22, 16 * v21);
    v23 = v6[2];
    v20 = __OFADD__(v23, v10);
    v24 = v23 + v10;
    if (!v20)
    {
      v6[2] = v24;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v25 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v25, 1046, 0);
  __break(1u);
  return result;
}

char *sub_1001FDAB4(uint64_t a1, int64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1004320AC(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = (uint64_t)&v5[13 * a1 + 4];
  result = (char *)swift_arrayDestroy(v14, v8, &type metadata for Lyrics.TextLine);
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_26;
  if ((v18 & 0x8000000000000000) == 0)
  {
    result = (char *)(v14 + 104);
    v19 = (char *)&v5[13 * a2 + 4];
    if ((char *)(v14 + 104) != v19 || result >= &v19[104 * v18])
      result = (char *)memmove(result, v19, 104 * v18);
    v20 = v5[2];
    v17 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      v22 = *(_OWORD *)(a3 + 80);
      *(_OWORD *)(v14 + 64) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(v14 + 80) = v22;
      *(_QWORD *)(v14 + 96) = *(_QWORD *)(a3 + 96);
      v23 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)v14 = *(_OWORD *)a3;
      *(_OWORD *)(v14 + 16) = v23;
      v24 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v14 + 48) = v24;
      *v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v25 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v25, 1046, 0);
  __break(1u);
  return result;
}

char *sub_1001FDC58(uint64_t a1, int64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  char v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_100433120(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = (uint64_t)&v5[7 * a1 + 4];
  result = (char *)swift_arrayDestroy(v14, v8, &type metadata for PlaylistCovers.Cover.Representation);
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_26;
  if ((v18 & 0x8000000000000000) == 0)
  {
    result = (char *)(v14 + 56);
    v19 = (char *)&v5[7 * a2 + 4];
    if ((char *)(v14 + 56) != v19 || result >= &v19[56 * v18])
      result = (char *)memmove(result, v19, 56 * v18);
    v20 = v5[2];
    v17 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      v22 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)v14 = *(_OWORD *)a3;
      *(_OWORD *)(v14 + 16) = v22;
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(a3 + 32);
      *(_QWORD *)(v14 + 48) = *(_QWORD *)(a3 + 48);
      *v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v23 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v23, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FDDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FDE08(a1, a2, a3, &qword_1011A3F70, UIBarButtonItem_ptr);
}

uint64_t sub_1001FDE08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a5;
    v8 = a4;
    v12 = a3;
    v7 = a2;
    v11 = a1;
    v10 = *v6;
    if (!((unint64_t)*v6 >> 62))
    {
      v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v10 < 0)
    v28 = v10;
  else
    v28 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v10);
  if (v13 < v7)
    goto LABEL_34;
LABEL_4:
  v13 = v7 - v11;
  if (__OFSUB__(v7, v11))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v10 = *v6;
  v36 = v8;
  if (!((unint64_t)*v6 >> 62))
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 + v5;
    if (!__OFADD__(v14, v5))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v10 < 0)
      v30 = v10;
    else
      v30 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v10);
    goto LABEL_15;
  }
LABEL_37:
  if (v10 < 0)
    v29 = v10;
  else
    v29 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v14 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v10);
  v15 = v14 + v5;
  if (__OFADD__(v14, v5))
    goto LABEL_42;
LABEL_8:
  v10 = *v6;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v6);
  *v6 = v10;
  v35 = v12;
  v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v17 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v14 = 1;
  }
  if ((unint64_t)v10 >> 62)
    goto LABEL_43;
  v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15)
    v18 = v15;
  swift_bridgeObjectRetain();
  v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v10);
  swift_bridgeObjectRelease(*v6);
  *v6 = v10;
  v17 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v19 = (_QWORD *)(v17 + 32 + 8 * v11);
  v20 = sub_10004A07C(0, v36, v9);
  v21 = (char *)swift_arrayDestroy(v19, v13, v20);
  if (!v5)
  {
LABEL_28:
    *v19 = v35;
    return specialized Array._endMutation()(v21);
  }
  if (!((unint64_t)v10 >> 62))
  {
    v22 = *(_QWORD *)(v17 + 16);
    v23 = v22 - v7;
    if (!__OFSUB__(v22, v7))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v10 < 0)
    v31 = v10;
  else
    v31 = v17;
  swift_bridgeObjectRetain();
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v10);
  v23 = v32 - v7;
  if (__OFSUB__(v32, v7))
    goto LABEL_52;
LABEL_21:
  if ((v23 & 0x8000000000000000) == 0)
  {
    v21 = (char *)(v19 + 1);
    v24 = (char *)(v17 + 32 + 8 * v7);
    if (v19 + 1 != (_QWORD *)v24 || v21 >= &v24[8 * v23])
      v21 = (char *)memmove(v21, v24, 8 * v23);
    if (!((unint64_t)v10 >> 62))
    {
      v25 = *(_QWORD *)(v17 + 16);
      v26 = v25 + v5;
      if (!__OFADD__(v25, v5))
      {
LABEL_27:
        *(_QWORD *)(v17 + 16) = v26;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v10 < 0)
      v33 = v10;
    else
      v33 = v17;
    swift_bridgeObjectRetain();
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v10);
    v26 = v34 + v5;
    if (!__OFADD__(v34, v5))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FE0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FE108(a1, a2, a3, type metadata accessor for PlaylistCreation.Flow);
}

uint64_t sub_1001FE108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v9 = a3;
    v5 = a2;
    v7 = a1;
    v8 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v8 < 0)
    v26 = v8;
  else
    v26 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v11 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v8);
  if (v11 < v5)
    goto LABEL_34;
LABEL_4:
  v11 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v10 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v8 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = v12 + v10;
    if (!__OFADD__(v12, v10))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v8 < 0)
      v28 = v8;
    else
      v28 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v16 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v8);
    goto LABEL_15;
  }
LABEL_37:
  if (v8 < 0)
    v27 = v8;
  else
    v27 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v12 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v8);
  v13 = v12 + v10;
  if (__OFADD__(v12, v10))
    goto LABEL_42;
LABEL_8:
  v8 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v8;
  v33 = v9;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if ((unint64_t)v8 >> 62)
    goto LABEL_43;
  v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13)
    v16 = v13;
  swift_bridgeObjectRetain(v8);
  v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v16, 1, v8);
  swift_bridgeObjectRelease(*v4);
  *v4 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v17 = (_QWORD *)(v15 + 32 + 8 * v7);
  v18 = v6(0);
  v19 = (char *)swift_arrayDestroy(v17, v11, v18);
  if (!v10)
  {
LABEL_28:
    *v17 = v33;
    return specialized Array._endMutation()(v19);
  }
  if (!((unint64_t)v8 >> 62))
  {
    v20 = *(_QWORD *)(v15 + 16);
    v21 = v20 - v5;
    if (!__OFSUB__(v20, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v8 < 0)
    v29 = v8;
  else
    v29 = v15;
  swift_bridgeObjectRetain(v8);
  v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v8);
  v21 = v30 - v5;
  if (__OFSUB__(v30, v5))
    goto LABEL_52;
LABEL_21:
  if ((v21 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v17 + 1);
    v22 = (char *)(v15 + 32 + 8 * v5);
    if (v17 + 1 != (_QWORD *)v22 || v19 >= &v22[8 * v21])
      v19 = (char *)memmove(v19, v22, 8 * v21);
    if (!((unint64_t)v8 >> 62))
    {
      v23 = *(_QWORD *)(v15 + 16);
      v24 = v23 + v10;
      if (!__OFADD__(v23, v10))
      {
LABEL_27:
        *(_QWORD *)(v15 + 16) = v24;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v8 < 0)
      v31 = v8;
    else
      v31 = v15;
    swift_bridgeObjectRetain(v8);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    v19 = (char *)swift_bridgeObjectRelease(v8);
    v24 = v32 + v10;
    if (!__OFADD__(v32, v10))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FE3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FE108(a1, a2, a3, type metadata accessor for PlaylistCreation.LegacyFlow);
}

char *sub_1001FE3F8(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_100431480(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy(v16, v9, &type metadata for String);
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v24 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v24, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FE578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FE594(a1, a2, a3, &qword_1011D10A0, UIMenuElement_ptr, (uint64_t (*)(uint64_t))sub_100481BC8);
}

uint64_t sub_1001FE594(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v48;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a6;
    v9 = a3;
    v10 = a2;
    v11 = a1;
    v8 = *v7;
    if (!((unint64_t)*v7 >> 62))
    {
      v13 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= a2)
        goto LABEL_4;
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
  }
  if (v8 < 0)
    v34 = v8;
  else
    v34 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v8);
  if (v13 < v10)
    goto LABEL_40;
LABEL_4:
  v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v13 = (unint64_t)v9 >> 62;
  if (!((unint64_t)v9 >> 62))
  {
    v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 - v12;
    if (!__OFSUB__(v14, v12))
      goto LABEL_7;
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
LABEL_42:
  if (v9 < 0)
    v8 = v9;
  else
    v8 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v14 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v9);
  v15 = v14 - v12;
  if (__OFSUB__(v14, v12))
    goto LABEL_47;
LABEL_7:
  v8 = *v7;
  v45 = v15;
  v43 = v13;
  if (!((unint64_t)*v7 >> 62))
  {
    v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v16 + v15;
    if (!__OFADD__(v16, v15))
      goto LABEL_9;
LABEL_53:
    __break(1u);
LABEL_54:
    if (v14 < 0)
      v37 = v14;
    else
      v37 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v20 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v14);
    goto LABEL_16;
  }
LABEL_48:
  if (v8 < 0)
    v35 = v8;
  else
    v35 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v8);
  v17 = v36 + v45;
  if (__OFADD__(v36, v45))
    goto LABEL_53;
LABEL_9:
  v48 = v14;
  v42 = v6;
  v14 = *v7;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v7);
  *v7 = v14;
  v44 = v9;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v14 & 0x8000000000000000) == 0
    && (v14 & 0x4000000000000000) == 0)
  {
    v19 = v14 & 0xFFFFFFFFFFFFFF8;
    if (v17 <= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_19;
    v8 = 1;
  }
  if ((unint64_t)v14 >> 62)
    goto LABEL_54;
  v20 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v20 <= v17)
    v20 = v17;
  swift_bridgeObjectRetain();
  v14 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v20, 1, v14);
  swift_bridgeObjectRelease(*v7);
  *v7 = v14;
  v19 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_19:
  v21 = v19 + 32 + 8 * v11;
  v22 = sub_10004A07C(0, a4, a5);
  swift_arrayDestroy(v21, v12, v22);
  v23 = v45;
  if (!v45)
  {
LABEL_29:
    if (v48 < 1)
    {
LABEL_34:
      swift_bridgeObjectRelease(v44);
      return specialized Array._endMutation()(v32);
    }
    if (v43)
    {
      v30 = swift_bridgeObjectRetain();
      v31 = v42(v30);
      swift_bridgeObjectRelease(v44);
      sub_1001FE978(v31 + 32, *(_QWORD *)(v31 + 16), v48, v21, a4, a5);
      swift_release(v31);
      goto LABEL_34;
    }
    if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) == v48)
    {
      swift_arrayInitWithCopy(v21);
      goto LABEL_34;
    }
    goto LABEL_70;
  }
  if (!((unint64_t)v14 >> 62))
  {
    v24 = *(_QWORD *)(v19 + 16);
    v25 = v24 - v10;
    if (!__OFSUB__(v24, v10))
      goto LABEL_22;
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v14 < 0)
    v38 = v14;
  else
    v38 = v19;
  swift_bridgeObjectRetain();
  v39 = _CocoaArrayWrapper.endIndex.getter(v38);
  swift_bridgeObjectRelease(v14);
  v23 = v45;
  v25 = v39 - v10;
  if (__OFSUB__(v39, v10))
    goto LABEL_63;
LABEL_22:
  if ((v25 & 0x8000000000000000) == 0)
  {
    v26 = (char *)(v21 + 8 * v48);
    v27 = (char *)(v19 + 32 + 8 * v10);
    if (v26 != v27 || v26 >= &v27[8 * v25])
    {
      memmove(v26, v27, 8 * v25);
      v23 = v45;
    }
    if (!((unint64_t)v14 >> 62))
    {
      v28 = *(_QWORD *)(v19 + 16);
      v29 = v28 + v23;
      if (!__OFADD__(v28, v23))
      {
LABEL_28:
        *(_QWORD *)(v19 + 16) = v29;
        goto LABEL_29;
      }
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
LABEL_64:
    if (v14 < 0)
      v40 = v14;
    else
      v40 = v19;
    swift_bridgeObjectRetain();
    v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v14);
    v29 = v41 + v45;
    if (!__OFADD__(v41, v45))
      goto LABEL_28;
    goto LABEL_69;
  }
LABEL_71:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FE978(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  if (a2 == a3)
  {
    if (result)
    {
      sub_10004A07C(0, a5, a6);
      return swift_arrayInitWithCopy(a4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001FE9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = type metadata accessor for MotionData(0);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain();
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain();
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1001FECB0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];

  if (qword_10119BBD8 != -1)
    swift_once(&qword_10119BBD8, sub_1001FB8F4);
  swift_beginAccess(&off_1011A6D30, v11, 0, 0);
  v0 = off_1011A6D30;
  if (!((unint64_t)off_1011A6D30 >> 62))
  {
    v1 = *(_QWORD *)(((unint64_t)off_1011A6D30 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v1 < 4)
      return;
LABEL_5:
    swift_beginAccess(&off_1011A6D30, v10, 33, 0);
    v2 = (uint64_t)off_1011A6D30;
    if ((unint64_t)off_1011A6D30 >> 62)
    {
      if ((uint64_t)off_1011A6D30 < 0)
        v5 = off_1011A6D30;
      else
        v5 = (void *)((unint64_t)off_1011A6D30 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      v6 = _CocoaArrayWrapper.endIndex.getter(v5);
      swift_bridgeObjectRelease(v2);
      if (v6)
      {
LABEL_7:
        v1 = (uint64_t)&unk_1011A6000;
        v2 = (uint64_t)off_1011A6D30;
        if (!((unint64_t)off_1011A6D30 >> 62))
        {
          v3 = *(_QWORD *)(((unint64_t)off_1011A6D30 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v3)
            goto LABEL_9;
          goto LABEL_30;
        }
LABEL_26:
        if (v2 < 0)
          v7 = v2;
        else
          v7 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v3 = _CocoaArrayWrapper.endIndex.getter(v7);
        swift_bridgeObjectRelease(v2);
        if (v3)
        {
LABEL_9:
          if ((v2 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_33;
            }
            swift_retain();
LABEL_12:
            v3 = *(_QWORD *)(v1 + 3376);
            if (!((unint64_t)v3 >> 62))
            {
              if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_14:
                sub_1001FE9E4(0, 1);
                swift_endAccess(v10);
                swift_release();
                return;
              }
LABEL_37:
              __break(1u);
              return;
            }
LABEL_33:
            if (v3 < 0)
              v8 = v3;
            else
              v8 = v3 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v9 = _CocoaArrayWrapper.endIndex.getter(v8);
            swift_bridgeObjectRelease(v3);
            if (v9)
              goto LABEL_14;
            goto LABEL_37;
          }
LABEL_31:
          specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
          goto LABEL_12;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    else if (*(_QWORD *)(((unint64_t)off_1011A6D30 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_26;
  }
  if ((uint64_t)off_1011A6D30 < 0)
    v4 = off_1011A6D30;
  else
    v4 = (void *)((unint64_t)off_1011A6D30 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  v1 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v0);
  if (v1 >= 4)
    goto LABEL_5;
}

uint64_t sub_1001FEEB8(uint64_t a1, uint64_t a2)
{
  return sub_1001FEECC(a1, a2, &qword_1011A1480, NSLayoutConstraint_ptr);
}

uint64_t sub_1001FEECC(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = a4;
    v8 = a3;
    v4 = a2;
    v7 = a1;
    v9 = *v5;
    if (!((unint64_t)*v5 >> 62))
    {
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  if (v9 < 0)
    v19 = v9;
  else
    v19 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v9);
  if (v20 < v4)
    goto LABEL_18;
LABEL_4:
  v6 = v4 - v7;
  if (__OFSUB__(v4, v7))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v7 - v4;
  if (__OFSUB__(0, v6))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    if (v9 < 0)
      v21 = v9;
    else
      v21 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v9);
    v13 = v22 + v39;
    if (!__OFADD__(v22, v39))
      goto LABEL_8;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *v5;
  v39 = v7 - v4;
  v40 = v7;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_21;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 - v6;
  if (__OFADD__(v12, v11))
    goto LABEL_26;
LABEL_8:
  v9 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v9;
  v15 = 0;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
    goto LABEL_28;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
  if (v13 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    v17 = v8;
    v18 = v10;
    goto LABEL_33;
  }
LABEL_27:
  v15 = 1;
LABEL_28:
  v17 = v8;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v23 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = v10;
  if (v23 <= v13)
    v23 = v13;
  swift_bridgeObjectRetain();
  v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v15, v23, 1, v9);
  swift_bridgeObjectRelease(*v5);
  *v5 = v9;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_33:
  v24 = (char *)(v16 + 32 + 8 * v40);
  v25 = sub_10004A07C(0, v17, v18);
  v26 = (void *)swift_arrayDestroy(v24, v6, v25);
  v27 = v39;
  if (!v39)
    return specialized Array._endMutation()(v26);
  if (!((unint64_t)v9 >> 62))
  {
    v28 = *(_QWORD *)(v16 + 16);
    v29 = v28 - v4;
    if (!__OFSUB__(v28, v4))
      goto LABEL_36;
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v9 < 0)
    v35 = v9;
  else
    v35 = v16;
  swift_bridgeObjectRetain();
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v9);
  v27 = v39;
  v29 = v36 - v4;
  if (__OFSUB__(v36, v4))
    goto LABEL_53;
LABEL_36:
  if ((v29 & 0x8000000000000000) == 0)
  {
    v30 = (char *)(v16 + 32 + 8 * v4);
    if (v40 != v4 || v24 >= &v30[8 * v29])
    {
      v26 = memmove(v24, v30, 8 * v29);
      v27 = v39;
    }
    if (!((unint64_t)v9 >> 62))
    {
      v31 = *(_QWORD *)(v16 + 16);
      v32 = v31 + v27;
      if (!__OFADD__(v31, v27))
      {
LABEL_42:
        *(_QWORD *)(v16 + 16) = v32;
        return specialized Array._endMutation()(v26);
      }
      goto LABEL_59;
    }
LABEL_54:
    if (v9 < 0)
      v37 = v9;
    else
      v37 = v16;
    swift_bridgeObjectRetain();
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v9);
    v32 = v38 + v39;
    if (!__OFADD__(v38, v39))
      goto LABEL_42;
LABEL_59:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

double sub_1001FF1DC()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;

  v0 = (void *)objc_opt_self(UIScreen);
  v1 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v1, "bounds");
  v3 = v2;

  v4 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v4, "bounds");
  v6 = v5;

  v7 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v7, "bounds");
  v9 = v8;
  v11 = v10;

  if (v6 >= v3)
  {
    v12 = objc_msgSend(v0, "mainScreen");
    objc_msgSend(v12, "bounds");

    return v11;
  }
  return v9;
}

uint64_t sub_1001FF2DC(uint64_t a1, uint64_t a2)
{
  return sub_1001FEECC(a1, a2, (unint64_t *)&qword_10119D470, UIViewController_ptr);
}

uint64_t sub_1001FF2F0(uint64_t a1, uint64_t a2)
{
  return sub_1001FF6F0(a1, a2, (uint64_t (*)(void))sub_100431C54, type metadata accessor for DragDropToQueue);
}

char *sub_1001FF304(uint64_t a1, int64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)(a3 + 16);
  v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v11 = v6 + v10;
  if (__OFADD__(v6, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v5[3] >> 1)
  {
    if (v6 <= v11)
      v13 = v6 + v10;
    else
      v13 = v6;
    v5 = sub_1004320AC(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = (uint64_t)&v5[13 * a1 + 4];
  result = (char *)swift_arrayDestroy(v14, v8, &type metadata for Lyrics.TextLine);
  if (!v10)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_28;
  if (v18 < 0)
  {
LABEL_30:
    v22 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v22, 1046, 0);
    __break(1u);
    return result;
  }
  result = (char *)(v14 + 104 * v9);
  v19 = (char *)&v5[13 * a2 + 4];
  if (result != v19 || result >= &v19[104 * v18])
    result = (char *)memmove(result, v19, 104 * v18);
  v20 = v5[2];
  v17 = __OFADD__(v20, v10);
  v21 = v20 + v10;
  if (v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v5[2] = v21;
LABEL_20:
  if (v9)
    result = (char *)swift_arrayInitWithCopy(v14);
  *v3 = v5;
  return result;
}

double sub_1001FF4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  uint64_t v12;
  char v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _BYTE v24[32];
  _BYTE v25[24];

  v23 = a2;
  v3 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for VideoArtwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10119BBD8 != -1)
    swift_once(&qword_10119BBD8, sub_1001FB8F4);
  swift_beginAccess(&off_1011A6D30, v25, 0, 0);
  v11 = off_1011A6D30;
  __chkstk_darwin(v12);
  *(&v23 - 2) = a1;
  swift_bridgeObjectRetain();
  v13 = sub_1005D2D54((uint64_t (*)(uint64_t *))sub_1001FFA24, (uint64_t)(&v23 - 4), (uint64_t)v11);
  v14 = swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a1, v7, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v23, v3);
    v15 = type metadata accessor for MotionData(0);
    swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    v16 = sub_1001FBA8C((uint64_t)v10, v6);
    if (v16)
    {
      v17 = v16;
      swift_beginAccess(&off_1011A6D30, v24, 33, 0);
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v20 = *(_QWORD *)(((unint64_t)off_1011A6D30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)(((unint64_t)off_1011A6D30 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v20 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
      v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
      specialized Array._endMutation()(v21);
      swift_endAccess(v24);
      sub_1001FECB0();
      v14.n128_u64[0] = swift_release().n128_u64[0];
    }
  }
  return v14.n128_f64[0];
}

uint64_t sub_1001FF6C8(uint64_t a1, uint64_t a2)
{
  return sub_1001FF6F0(a1, a2, (uint64_t (*)(void))sub_100432994, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
}

uint64_t sub_1001FF6DC(uint64_t a1, uint64_t a2)
{
  return sub_1001FF6F0(a1, a2, (uint64_t (*)(void))sub_1004321E8, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
}

uint64_t sub_1001FF6F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native(*v4) || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = a4(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = v6 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v16 * a1;
  v18 = v15 + v16 * a1;
  result = swift_arrayDestroy(v18, v9, v13);
  if (!v9)
    goto LABEL_22;
  v20 = *(_QWORD *)(v6 + 16);
  v21 = v20 - a2;
  if (__OFSUB__(v20, a2))
    goto LABEL_28;
  if ((v21 & 0x8000000000000000) == 0)
  {
    if (v17 < v16 * a2 || v18 >= v15 + v16 * a2 + v21 * v16)
    {
      result = swift_arrayInitWithTakeFrontToBack(v18);
    }
    else if (v17 != v16 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront(v18);
    }
    v23 = *(_QWORD *)(v6 + 16);
    v24 = __OFADD__(v23, v10);
    v25 = v23 - v9;
    if (!v24)
    {
      *(_QWORD *)(v6 + 16) = v25;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v26, 1046, 0);
  __break(1u);
  return result;
}

void *sub_1001FF8A0(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100433608(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = sub_100007E8C(&qword_1011AE330);
  result = (void *)swift_arrayDestroy(&v4[a1 + 4], v7, v12);
  if (!v7)
    goto LABEL_20;
  v14 = v4[2];
  v15 = __OFSUB__(v14, a2);
  v16 = v14 - a2;
  if (v15)
    goto LABEL_26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)&v4[a2 + 4];
    if (a1 != a2 || &v4[a1 + 4] >= (_QWORD *)&v17[8 * v16])
      result = memmove(&v4[a1 + 4], v17, 8 * v16);
    v18 = v4[2];
    v15 = __OFADD__(v18, v8);
    v19 = v18 - v7;
    if (!v15)
    {
      v4[2] = v19;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v20 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v20, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FFA10(uint64_t a1, uint64_t a2)
{
  return sub_1001FEECC(a1, a2, &qword_1011A3AF8, MPCPlayerPath_ptr);
}

BOOL sub_1001FFA24(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001FB940(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001FFA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FFA8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1001FD218(*(id **)(v1 + 16), a1);
}

void sub_1001FFA94(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_1001FD5FC(a1, a2, a3 & 1);
}

uint64_t sub_1001FFAAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001FFAD8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A6F0C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10005AEE4;
  return sub_1001FC258();
}

uint64_t *sub_1001FFB44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A5368);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t type metadata accessor for BaselineSpacer.Configuration.Mode(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A7018, (uint64_t)&nominal type descriptor for BaselineSpacer.Configuration.Mode);
}

char *sub_1001FFC50(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1001FFD18(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(a1, a2, v14);
      goto LABEL_7;
    }
    sub_1001FFE30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v12 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  v11 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1001FFE30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A5368);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1001FFE70(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1001FFF38(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      goto LABEL_7;
    }
    sub_1001FFE30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v12 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  v11 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_100200050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020005C);
}

uint64_t sub_10020005C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for BaselineSpacer.Configuration.Mode);
}

uint64_t sub_100200068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100200074);
}

uint64_t sub_100200074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for BaselineSpacer.Configuration.Mode);
}

uint64_t type metadata accessor for BaselineSpacer.Configuration(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A6F70, (uint64_t)&nominal type descriptor for BaselineSpacer.Configuration);
}

uint64_t sub_100200094(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for BaselineSpacer.Configuration.Mode(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100200108(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A5368);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_1002001E0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100200294(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1001FFE30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_100200398(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10020044C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100007E8C(&qword_1011A5368);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1001FFE30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_100200550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020055C);
}

uint64_t sub_10020055C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100007E8C(&qword_1011A5368);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1002005AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002005B8);
}

uint64_t sub_1002005B8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_100007E8C(&qword_1011A5368);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10020060C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A5368);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_100200648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A5368);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_10020068C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t *sub_1002006E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for BaselineSpacer.Configuration(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = v4;
    v7 = sub_100007E8C(&qword_1011A5368);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  return a1;
}

uint64_t sub_1002007DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_100007E8C(&qword_1011A5368);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Font.TextStyle(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

char *sub_100200844(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_100007E8C(&qword_1011A5368);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v8 = type metadata accessor for BaselineSpacer.Configuration(0);
  *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
  return a1;
}

char *sub_100200908(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_100007E8C(&qword_1011A5368);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v13 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      goto LABEL_7;
    }
    sub_1001FFE30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v11 = type metadata accessor for BaselineSpacer.Configuration(0);
  *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
  return a1;
}

char *sub_100200A1C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_100007E8C(&qword_1011A5368);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v8 = type metadata accessor for BaselineSpacer.Configuration(0);
  *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
  return a1;
}

char *sub_100200AE0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_100007E8C(&qword_1011A5368);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v13 = type metadata accessor for Font.TextStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      goto LABEL_7;
    }
    sub_1001FFE30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v11 = type metadata accessor for BaselineSpacer.Configuration(0);
  *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
  return a1;
}

uint64_t sub_100200BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100200C00);
}

uint64_t sub_100200C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for BaselineSpacer.Configuration);
}

uint64_t sub_100200C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_100200C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100200C54);
}

uint64_t sub_100200C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for BaselineSpacer.Configuration);
}

uint64_t sub_100200C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t type metadata accessor for BaselineSpacer(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A7080, (uint64_t)&nominal type descriptor for BaselineSpacer);
}

uint64_t sub_100200CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201510(a1, a2, a3, type metadata accessor for BaselineSpacer.Configuration);
}

uint64_t sub_100200CC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9870C, 1);
}

uint64_t sub_100200CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = v1;
  v46 = a1;
  v3 = sub_100007E8C(&qword_1011A70B8);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  __chkstk_darwin(v3);
  v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for BaselineSpacer.Scaled(0);
  __chkstk_darwin(v45);
  v43 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - v11;
  __chkstk_darwin(v13);
  v39 = (char *)&v38 - v14;
  v44 = sub_100007E8C(&qword_1011A70C0);
  __chkstk_darwin(v44);
  v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for BaselineSpacer.Configuration(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v2;
  sub_10005B704(v2, (uint64_t)v22, v24);
  sub_100201180((uint64_t)v22, (uint64_t)v19);
  v25 = sub_100007E8C(&qword_1011A5368);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25) == 1)
  {
    *v16 = *(_QWORD *)(v2 + *(int *)(v20 + 20));
    swift_storeEnumTagMultiPayload(v16, v44, 0);
    v26 = sub_100201208();
    v27 = sub_10020124C();
    return _ConditionalContent<>.init(storage:)(v16, &type metadata for BaselineSpacer.Fixed, v45, v26, v27);
  }
  else
  {
    v29 = v39;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v39, v19, v6);
    v30 = *(_QWORD *)(v23 + *(int *)(v20 + 20));
    v31 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v31(v12, v29, v6);
    v47 = v30;
    v31(v9, v12, v6);
    v32 = sub_1002011C4();
    v33 = v40;
    ScaledMetric.init(wrappedValue:relativeTo:)(&v47, v9, &type metadata for Double, v32);
    v34 = *(void (**)(char *, uint64_t))(v7 + 8);
    v34(v12, v6);
    v35 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v43, v33, v42);
    sub_10005B704(v35, (uint64_t)v16, type metadata accessor for BaselineSpacer.Scaled);
    swift_storeEnumTagMultiPayload(v16, v44, 1);
    v36 = sub_100201208();
    v37 = sub_10020124C();
    _ConditionalContent<>.init(storage:)(v16, &type metadata for BaselineSpacer.Fixed, v45, v36, v37);
    sub_100201294(v35);
    return ((uint64_t (*)(char *, uint64_t))v34)(v29, v6);
  }
}

double sub_100201044@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  double result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  v3 = *v1;
  v4 = static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)(&v11, 0, 1, v3, 0, v4, v5);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  v9 = v14;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  result = *(double *)&v15;
  *(_OWORD *)(a1 + 48) = v15;
  return result;
}

double sub_1002010CC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  double result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  __int128 v16;

  v2 = sub_100007E8C(&qword_1011A70B8);
  v3 = ScaledMetric.wrappedValue.getter(&v12, v2);
  v4 = v12;
  v5 = static Alignment.center.getter(v3);
  _FrameLayout.init(width:height:alignment:)(&v12, 0, 1, v4, 0, v5, v6);
  v7 = v12;
  v8 = v13;
  v9 = v14;
  v10 = v15;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  result = *(double *)&v16;
  *(_OWORD *)(a1 + 48) = v16;
  return result;
}

uint64_t type metadata accessor for BaselineSpacer.Scaled(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A7138, (uint64_t)&nominal type descriptor for BaselineSpacer.Scaled);
}

uint64_t sub_100201180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BaselineSpacer.Configuration.Mode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002011C4()
{
  unint64_t result;

  result = qword_1011A70C8;
  if (!qword_1011A70C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_1011A70C8);
  }
  return result;
}

unint64_t sub_100201208()
{
  unint64_t result;

  result = qword_1011A70D0;
  if (!qword_1011A70D0)
  {
    result = swift_getWitnessTable(&unk_100EAEEC4, &type metadata for BaselineSpacer.Fixed);
    atomic_store(result, (unint64_t *)&qword_1011A70D0);
  }
  return result;
}

unint64_t sub_10020124C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A70D8;
  if (!qword_1011A70D8)
  {
    v1 = type metadata accessor for BaselineSpacer.Scaled(255);
    result = swift_getWitnessTable(&unk_100EAEE74, v1);
    atomic_store(result, (unint64_t *)&qword_1011A70D8);
  }
  return result;
}

uint64_t sub_100201294(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BaselineSpacer.Scaled(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002012D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A70B8);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_100201310(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A70B8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100201348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100201390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002013D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100201420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100201468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100201474);
}

uint64_t sub_100201474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A70B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1002014B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002014C0);
}

uint64_t sub_1002014C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A70B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100201504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201510(a1, a2, a3, (uint64_t (*)(uint64_t))sub_100201578);
}

uint64_t sub_100201510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v7, a1 + 16);
    return 0;
  }
  return result;
}

void sub_100201578(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A7148)
  {
    v2 = sub_1002011C4();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A7148);
  }
}

ValueMetadata *type metadata accessor for BaselineSpacer.Fixed()
{
  return &type metadata for BaselineSpacer.Fixed;
}

unint64_t sub_1002015E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7178;
  if (!qword_1011A7178)
  {
    v1 = sub_100044B54(&qword_1011A7180);
    sub_100201208();
    sub_10020124C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7178);
  }
  return result;
}

uint64_t sub_100201650(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9875C, 1);
}

uint64_t sub_100201660(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F98734, 1);
}

unint64_t sub_100201674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7188;
  if (!qword_1011A7188)
  {
    v1 = sub_100044B54(&qword_1011A7190);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7188);
  }
  return result;
}

_UNKNOWN **sub_1002016D8()
{
  return &off_1010B61E8;
}

void *sub_1002016E4()
{
  return &protocol witness table for Track;
}

void *sub_1002016F0()
{
  return &protocol witness table for Track;
}

void *sub_1002016FC()
{
  return &protocol witness table for Track;
}

void *sub_100201708()
{
  return &protocol witness table for Track;
}

uint64_t sub_100201714()
{
  return sub_100048748(&qword_1011B6980, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
}

uint64_t sub_100201740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v7 = type metadata accessor for Library.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v26 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ContainerDetailDataSource.Source(0, a3, a4, v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v11, v11, 0, 0);
  v27 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = __chkstk_darwin(TupleTypeMetadata2);
  v18 = (char *)&v25 - v17;
  v19 = (char *)&v25 + *(int *)(v16 + 48) - v17;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20((char *)&v25 - v17, a1, v11);
  v20(v19, v28, v11);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v21(v18, 1, v7) == 1)
  {
    v22 = 1;
    if (v21(v19, 1, v7) == 1)
      goto LABEL_8;
  }
  else
  {
    v20(v14, (uint64_t)v18, v11);
    if (v21(v19, 1, v7) != 1)
    {
      v23 = v26;
      sub_10005B6C0((uint64_t)v19, v26, type metadata accessor for Library.Context);
      v22 = static Library.Context.__derived_struct_equals(_:_:)(v14, v23);
      sub_10005B748(v23, type metadata accessor for Library.Context);
      sub_10005B748((uint64_t)v14, type metadata accessor for Library.Context);
      goto LABEL_8;
    }
    sub_10005B748((uint64_t)v14, type metadata accessor for Library.Context);
  }
  v22 = 0;
  v12 = v27;
  v11 = TupleTypeMetadata2;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return v22 & 1;
}

uint64_t sub_100201958(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistEntryInternalFilter.playlist.getter);
}

void *sub_100201964()
{
  void *result;

  result = (void *)sub_100046A14(_swiftEmptyArrayStorage);
  off_1011A7198 = result;
  return result;
}

void sub_100201988()
{
  off_1011A71A0 = &off_1010AAC78;
}

uint64_t sub_10020199C(_QWORD *a1, uint8_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (**v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  int EnumCaseMultiPayload;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void (**v129)(char *, char *, uint64_t);
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint8_t *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  char *v150;
  char *v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  _QWORD *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t WitnessTable;
  char *v171;
  void (*v172)(char *, char *, uint64_t);
  char *v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  int v185;
  uint8_t *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t KeyPath;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  NSObject *v210;
  os_log_type_t v211;
  _BOOL4 v212;
  void (**v213)(char *, char *, uint64_t);
  uint8_t *v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  __n128 v219;
  void (*v220)(uint64_t, uint64_t, __n128);
  char *v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, uint64_t);
  void (*v225)(char *, uint64_t);
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(char *, uint64_t);
  void (*v233)(char *, uint64_t);
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  void (**v276)(char *, char *, uint64_t);
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  uint8_t *v289;
  uint64_t v290;
  __int128 v291;
  char v292;
  char v293[8];
  __int128 v294;
  __int128 v295;
  uint64_t v296;
  char v297;

  v288 = a1;
  v3 = *((_QWORD *)a2 + 3);
  v278 = type metadata accessor for MusicItemCollection(0, v3, *(_QWORD *)(*((_QWORD *)a2 + 5) + 8));
  v276 = *(void (***)(char *, char *, uint64_t))(v278 - 8);
  __chkstk_darwin(v278);
  v263 = (char *)&v234 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v275 = (char *)&v234 - v6;
  v7 = sub_100007E8C(&qword_1011B69C0);
  __chkstk_darwin(v7);
  v264 = (char *)&v234 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = type metadata accessor for Playlist.Entry.InternalItem(0);
  __chkstk_darwin(v266);
  v265 = (char *)&v234 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v10);
  v261 = (char *)&v234 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v253 = (char *)&v234 - v13;
  v280 = type metadata accessor for Playlist.Entry(0);
  v277 = *(_QWORD *)(v280 - 8);
  __chkstk_darwin(v280);
  v240 = (char *)&v234 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v242 = (char *)&v234 - v16;
  v284 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v17);
  v255 = (char *)&v234 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v254 = (char *)&v234 - v20;
  __chkstk_darwin(v21);
  v262 = (char *)&v234 - v22;
  __chkstk_darwin(v23);
  v274 = (char *)&v234 - v24;
  __chkstk_darwin(v25);
  v273 = (char *)&v234 - v26;
  __chkstk_darwin(v27);
  v272 = (char *)&v234 - v28;
  v29 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v29);
  v236 = (char *)&v234 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = sub_100007E8C(&qword_10119F498);
  v246 = *(_QWORD *)(v247 - 8);
  __chkstk_darwin(v247);
  v237 = (char *)&v234 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v245 = (char *)&v234 - v33;
  v248 = type metadata accessor for Playlist(0);
  v244 = *(_QWORD *)(v248 - 8);
  __chkstk_darwin(v248);
  v243 = (char *)&v234 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v239 = (char *)&v234 - v36;
  v241 = sub_100007E8C(&qword_10119F2E0);
  v260 = *(_QWORD *)(v241 - 8);
  __chkstk_darwin(v241);
  v259 = (char *)&v234 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v258 = (char *)&v234 - v39;
  v267 = type metadata accessor for Album(0);
  v257 = *(_QWORD *)(v267 - 8);
  __chkstk_darwin(v267);
  v256 = (char *)&v234 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v252 = (char *)&v234 - v42;
  v282 = type metadata accessor for Optional(0, v3);
  v281 = *(_QWORD *)(v282 - 8);
  __chkstk_darwin(v282);
  v250 = (char *)&v234 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v251 = (char *)&v234 - v45;
  __chkstk_darwin(v46);
  v249 = (char *)&v234 - v47;
  __chkstk_darwin(v48);
  v271 = (char *)&v234 - v49;
  __chkstk_darwin(v50);
  v235 = (char *)&v234 - v51;
  __chkstk_darwin(v52);
  v238 = (char *)&v234 - v53;
  __chkstk_darwin(v54);
  v279 = (char *)&v234 - v55;
  v286 = v3;
  v58 = type metadata accessor for PlaybackEnqueueMode(0, v3, v56, v57);
  v287 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v268 = (char *)&v234 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)&v234 - v61;
  __chkstk_darwin(v63);
  v269 = (char *)&v234 - v64;
  v65 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v65);
  v67 = (char **)((char *)&v234 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  v285 = *((_QWORD *)a2 + 2);
  v290 = *(_QWORD *)(v285 - 8);
  __chkstk_darwin(v68);
  v270 = (char *)&v234 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v70);
  v283 = (char *)&v234 - v71;
  __chkstk_darwin(v72);
  v74 = (void (**)(char *, char *, uint64_t))((char *)&v234 - v73);
  __chkstk_darwin(v75);
  v77 = (char *)&v234 - v76;
  __chkstk_darwin(v78);
  v80 = (char *)&v234 - v79;
  __chkstk_darwin(v81);
  v83 = (char *)&v234 - v82;
  v85 = __chkstk_darwin(v84);
  v87 = (char *)&v234 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint8_t *, uint8_t *, __n128))(v88 + 16))(v87, v289, a2, v85);
  v289 = a2;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v87, a2);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v90 = v290;
      v91 = v283;
      v92 = v285;
      (*(void (**)(char *, char *, uint64_t))(v290 + 32))(v283, v87, v285);
      (*(void (**)(char *, _QWORD *, uint64_t))(v287 + 16))(v62, v288, v58);
      if (swift_getEnumCaseMultiPayload(v62, v58) == 1)
      {
        v93 = v284;
        v94 = v262;
        v95 = v286;
        (*(void (**)(char *, char *, uint64_t))(v284 + 32))(v262, v62, v286);
        v96 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
        v97 = v254;
        v96(v254, v94, v95);
        v98 = (uint64_t)v261;
        v99 = v97;
        v100 = v280;
        v101 = swift_dynamicCast(v261, v99, v95, v280, 6);
        v102 = v277;
        v103 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v277 + 56);
        if (v101)
        {
          v103(v98, 0, 1, v100);
          v104 = v240;
          (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v240, v98, v100);
          v105 = sub_1000E3E80();
          v106 = v265;
          Playlist.Entry.internalItem.getter(v105);
          v107 = sub_100048748(&qword_1011A7628, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
          v108 = MPCPlaybackIntent.init<A>(_:)(v106, v266, v107);
          (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v100);
        }
        else
        {
          v103(v98, 1, 1, v100);
          sub_10004FF60(v98, (uint64_t *)&unk_1011B59A0);
          sub_1000E3E80();
          v171 = v274;
          v96(v274, v94, v95);
          v108 = MPCPlaybackIntent.init<A>(_:)(v171, v95, *((_QWORD *)v289 + 6));
        }
        (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
        v172 = *(void (**)(char *, char *, uint64_t))(v290 + 8);
      }
      else
      {
        v138 = v281;
        v139 = v271;
        v140 = v282;
        (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v271, v62, v282);
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v270, v91, v92);
        v141 = v249;
        (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v249, v139, v140);
        v142 = v284;
        v143 = v286;
        v144 = v90;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v141, 1, v286) == 1)
        {
          (*(void (**)(char *, uint64_t))(v138 + 8))(v141, v140);
          v296 = 0;
          v294 = 0u;
          v295 = 0u;
          v145 = v289;
        }
        else
        {
          v145 = v289;
          v174 = *((_QWORD *)v289 + 6);
          *((_QWORD *)&v295 + 1) = v143;
          v296 = v174;
          v175 = sub_100049F68(&v294);
          (*(void (**)(_QWORD *, char *, uint64_t))(v142 + 32))(v175, v141, v143);
        }
        sub_1000E3E80();
        v176 = enum case for MusicPlaybackSource.catalog(_:);
        v177 = type metadata accessor for MusicPlaybackSource(0);
        v178 = *(_QWORD *)(v177 - 8);
        v179 = v264;
        (*(void (**)(char *, uint64_t, uint64_t))(v178 + 104))(v264, v176, v177);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v179, 0, 1, v177);
        v108 = MPCPlaybackIntent.init<A>(container:startingAt:playbackSource:)(v270, &v294, v179, v92, *((_QWORD *)v145 + 4));
        (*(void (**)(char *, uint64_t))(v138 + 8))(v271, v140);
        v172 = *(void (**)(char *, char *, uint64_t))(v144 + 8);
      }
      v180 = v283;
      v181 = v92;
    }
    else
    {
      v129 = v276;
      v130 = v275;
      v131 = v278;
      v276[4](v275, v87, v278);
      v132 = v268;
      (*(void (**)(char *, _QWORD *, uint64_t))(v287 + 16))(v268, v288, v58);
      if (swift_getEnumCaseMultiPayload(v132, v58) == 1)
      {
        v133 = v284;
        v134 = v274;
        v135 = v132;
        v136 = v286;
        (*(void (**)(char *, char *, uint64_t))(v284 + 32))(v274, v135, v286);
        sub_1000E3E80();
        v137 = v255;
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v255, v134, v136);
        v108 = MPCPlaybackIntent.init<A>(_:)(v137, v136, *((_QWORD *)v289 + 6));
        (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v136);
      }
      else
      {
        v165 = v281;
        v166 = v251;
        v167 = v282;
        (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v251, v132, v282);
        sub_1000E3E80();
        v168 = v263;
        v129[2](v263, v130, v131);
        v169 = v250;
        (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v250, v166, v167);
        WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v131);
        v108 = MPCPlaybackIntent.init<A, B>(for:startingAt:)(v168, v169, v131, v286, WitnessTable, *((_QWORD *)v289 + 6));
        (*(void (**)(char *, uint64_t))(v165 + 8))(v166, v167);
      }
      v172 = v129[1];
      v180 = v130;
      v181 = v131;
    }
    ((void (*)(char *, uint64_t))v172)(v180, v181);
  }
  else
  {
    v276 = v74;
    v278 = (uint64_t)v77;
    v109 = v273;
    v110 = v272;
    v283 = v80;
    v111 = v285;
    v112 = (uint64_t)&v87[*(int *)(swift_getTupleTypeMetadata2(0, v285, v65, " context ", 0) + 48)];
    v113 = v290;
    (*(void (**)(char *, char *, uint64_t))(v290 + 32))(v83, v87, v111);
    sub_10005B6C0(v112, (uint64_t)v67, type metadata accessor for Library.Context);
    v114 = v269;
    (*(void (**)(char *, _QWORD *, uint64_t))(v287 + 16))(v269, v288, v58);
    v115 = swift_getEnumCaseMultiPayload(v114, v58);
    v234 = v83;
    if (v115 == 1)
    {
      v116 = v284;
      v117 = v286;
      (*(void (**)(char *, char *, uint64_t))(v284 + 32))(v110, v114, v286);
      v118 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
      v118(v109, v110, v117);
      v119 = (uint64_t)v253;
      v120 = v280;
      v121 = swift_dynamicCast(v253, v109, v117, v280, 6);
      v122 = v277;
      v123 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v277 + 56);
      if (v121)
      {
        v123(v119, 0, 1, v120);
        v124 = v242;
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 32))(v242, v119, v120);
        v125 = sub_1000E3E80();
        v126 = v122;
        v127 = v265;
        Playlist.Entry.internalItem.getter(v125);
        v128 = sub_100048748(&qword_1011A7628, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
        v108 = MPCPlaybackIntent.init<A>(_:)(v127, v266, v128);
        (*(void (**)(char *, uint64_t))(v126 + 8))(v124, v120);
      }
      else
      {
        v123(v119, 1, 1, v120);
        sub_10004FF60(v119, (uint64_t *)&unk_1011B59A0);
        sub_1000E3E80();
        v173 = v274;
        v118(v274, v110, v117);
        v108 = MPCPlaybackIntent.init<A>(_:)(v173, v117, *((_QWORD *)v289 + 6));
      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(v110, v117);
      sub_10005B748((uint64_t)v67, type metadata accessor for Library.Context);
      (*(void (**)(char *, uint64_t))(v290 + 8))(v234, v285);
    }
    else
    {
      v288 = v67;
      v146 = v281;
      v147 = v279;
      v148 = v282;
      (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v279, v114, v282);
      v149 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
      v150 = v283;
      v149(v283, v83, v111);
      v151 = v252;
      v152 = v267;
      v153 = swift_dynamicCast(v252, v150, v111, v267, 0);
      v154 = v284;
      if (v153)
      {
        v155 = v111;
        v156 = (uint64_t)v256;
        (*(void (**)(char *, char *, uint64_t))(v257 + 32))(v256, v151, v152);
        v157 = type metadata accessor for Track(0);
        v158 = v258;
        MusicLibraryRequest.init()(v157, &protocol witness table for Track);
        v159 = v288;
        sub_100203174(v156, v288);
        v160 = v158;
        v161 = v241;
        (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v259, v160, v241);
        v162 = v238;
        (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v238, v147, v148);
        v163 = v286;
        v164 = v148;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v162, 1, v286) == 1)
        {
          (*(void (**)(char *, uint64_t))(v146 + 8))(v162, v148);
          v296 = 0;
          v294 = 0u;
          v295 = 0u;
        }
        else
        {
          v200 = *((_QWORD *)v289 + 6);
          *((_QWORD *)&v295 + 1) = v163;
          v296 = v200;
          v201 = sub_100049F68(&v294);
          (*(void (**)(_QWORD *, char *, uint64_t))(v154 + 32))(v201, v162, v163);
        }
        v202 = v290;
        v297 = 0;
        sub_10004A160((uint64_t)&v294, (uint64_t)&v291, &qword_1011A25B0);
        v203 = v260;
        v204 = v259;
        if ((v292 & 1) != 0)
          sub_100064C48(&v291, (uint64_t)v293);
        else
          sub_100065228((uint64_t)&v291, (uint64_t)v293, &qword_1011A16C8);
        v222 = sub_100049F28((unint64_t *)&unk_1011D0C00, &qword_10119F2E0, (uint64_t)&protocol conformance descriptor for MusicLibraryRequest<A>);
        v223 = v161;
        v108 = MusicPlayableRequest.playbackIntent(withStartingItem:)(v293, v161, v222);
        sub_10004FF60((uint64_t)v293, &qword_1011A16C8);
        v224 = *(void (**)(char *, uint64_t))(v203 + 8);
        v224(v204, v223);
        v224(v258, v223);
        (*(void (**)(char *, uint64_t))(v257 + 8))(v256, v267);
        (*(void (**)(char *, uint64_t))(v146 + 8))(v279, v164);
        sub_10005B748((uint64_t)v159, type metadata accessor for Library.Context);
        v225 = *(void (**)(char *, uint64_t))(v202 + 8);
        v225(v234, v155);
        sub_10004FF60((uint64_t)&v294, &qword_1011A25B0);
        v225(v283, v155);
      }
      else
      {
        v182 = v146;
        v183 = v239;
        v184 = v248;
        v185 = swift_dynamicCast(v239, v150, v111, v248, 0);
        v186 = v289;
        if (v185)
        {
          v187 = v244;
          v188 = v243;
          (*(void (**)(char *, char *, uint64_t))(v244 + 32))(v243, v183, v184);
          v189 = v245;
          MusicLibraryRequest.init()(v280, &protocol witness table for Playlist.Entry);
          KeyPath = swift_getKeyPath(&unk_100EAF218);
          v191 = (uint64_t)v236;
          (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v236, v188, v184);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v187 + 56))(v191, 0, 1, v184);
          v192 = sub_100048748((unint64_t *)&qword_1011A60B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
          v193 = v247;
          MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v191, v247, &protocol witness table for Playlist.Entry, v192);
          swift_release(KeyPath);
          sub_10004FF60(v191, &qword_1011A30F0);
          MusicLibraryRequest.apply(_:)(v288, v193);
          v194 = v237;
          (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v237, v189, v193);
          v195 = v235;
          v196 = v279;
          v197 = v282;
          (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v235, v279, v282);
          v198 = v286;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v195, 1, v286) == 1)
          {
            (*(void (**)(char *, uint64_t))(v182 + 8))(v195, v197);
            v296 = 0;
            v294 = 0u;
            v295 = 0u;
          }
          else
          {
            v226 = *((_QWORD *)v186 + 6);
            *((_QWORD *)&v295 + 1) = v198;
            v296 = v226;
            v227 = sub_100049F68(&v294);
            (*(void (**)(_QWORD *, char *, uint64_t))(v154 + 32))(v227, v195, v198);
          }
          v228 = v290;
          v297 = 0;
          sub_10004A160((uint64_t)&v294, (uint64_t)&v291, &qword_1011A25B0);
          v229 = v247;
          v230 = v246;
          if ((v292 & 1) != 0)
            sub_100064C48(&v291, (uint64_t)v293);
          else
            sub_100065228((uint64_t)&v291, (uint64_t)v293, &qword_1011A16C8);
          v231 = sub_100049F28(&qword_1011A7630, &qword_10119F498, (uint64_t)&protocol conformance descriptor for MusicLibraryRequest<A>);
          v108 = MusicPlayableRequest.playbackIntent(withStartingItem:)(v293, v229, v231);
          sub_10004FF60((uint64_t)v293, &qword_1011A16C8);
          v232 = *(void (**)(char *, uint64_t))(v230 + 8);
          v232(v194, v229);
          v232(v245, v229);
          (*(void (**)(char *, uint64_t))(v244 + 8))(v243, v248);
          (*(void (**)(char *, uint64_t))(v182 + 8))(v196, v197);
          sub_10005B748((uint64_t)v288, type metadata accessor for Library.Context);
          v233 = *(void (**)(char *, uint64_t))(v228 + 8);
          v233(v234, v111);
          sub_10004FF60((uint64_t)&v294, &qword_1011A25B0);
          v233(v283, v111);
        }
        else
        {
          v205 = v182;
          if (qword_10119BC00 != -1)
            swift_once(&qword_10119BC00, sub_10021EB2C);
          v206 = type metadata accessor for Logger(0);
          sub_100048B14(v206, (uint64_t)qword_1011A71A8);
          v207 = v278;
          v208 = v234;
          v209 = ((uint64_t (*)(uint64_t, char *, uint64_t))v149)(v278, v234, v111);
          v210 = Logger.logObject.getter(v209);
          v211 = static os_log_type_t.error.getter();
          v212 = os_log_type_enabled(v210, v211);
          v213 = v276;
          if (v212)
          {
            v214 = (uint8_t *)swift_slowAlloc(12, -1);
            v215 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v294 = v215;
            *(_DWORD *)v214 = 136446210;
            v289 = v214 + 4;
            v149((char *)v213, (char *)v207, v111);
            v216 = String.init<A>(describing:)(v213, v111);
            v218 = v217;
            *(_QWORD *)&v291 = sub_100322200(v216, v217, (uint64_t *)&v294);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v291, (char *)&v291 + 8);
            v219 = swift_bridgeObjectRelease(v218);
            v220 = *(void (**)(uint64_t, uint64_t, __n128))(v290 + 8);
            v220(v207, v111, v219);
            _os_log_impl((void *)&_mh_execute_header, v210, v211, "Attempted to initiate playback on an unsupported container type: %{public}s", v214, 0xCu);
            swift_arrayDestroy(v215, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v215, -1, -1);
            swift_slowDealloc(v214, -1, -1);

            (*(void (**)(char *, uint64_t))(v205 + 8))(v279, v282);
            sub_10005B748((uint64_t)v288, type metadata accessor for Library.Context);
            v221 = v234;
          }
          else
          {

            v220 = *(void (**)(uint64_t, uint64_t, __n128))(v290 + 8);
            ((void (*)(uint64_t, uint64_t))v220)(v207, v111);
            (*(void (**)(char *, uint64_t))(v205 + 8))(v279, v282);
            sub_10005B748((uint64_t)v288, type metadata accessor for Library.Context);
            v221 = v208;
          }
          ((void (*)(char *, uint64_t))v220)(v221, v111);
          ((void (*)(char *, uint64_t))v220)(v283, v111);
          return 0;
        }
      }
    }
  }
  return v108;
}

uint64_t sub_100203174(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  __n128 v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011C7310);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Composer(0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  __chkstk_darwin(v6);
  v31 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Genre(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Library.Context(0);
  sub_10004A160((uint64_t)a2 + *(int *)(v15 + 32), (uint64_t)v10, &qword_10119ED08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_10119ED08);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    KeyPath = swift_getKeyPath(&unk_100EAF2E0);
    v17 = sub_100007E8C(&qword_10119F2E0);
    MusicLibraryRequest.filter<A>(matching:contains:)(KeyPath, v14, v17);
    v18 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v18);
  }
  v19 = a2;
  sub_10004A160((uint64_t)a2 + *(int *)(v15 + 28), (uint64_t)v5, (uint64_t *)&unk_1011C7310);
  v21 = v32;
  v20 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v5, 1, v33) == 1)
  {
    sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011C7310);
  }
  else
  {
    v22 = v31;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v31, v5, v20);
    v23 = swift_getKeyPath(&unk_100EAF2B8);
    v24 = sub_100007E8C(&qword_10119F2E0);
    MusicLibraryRequest<>.filter<A>(matching:contains:)(v23, v22, v24, &protocol witness table for Track);
    v25 = swift_release(v23);
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v22, v20, v25);
  }
  v26 = swift_getKeyPath(&unk_100EAF240);
  v27 = sub_100007E8C(&qword_10119F2E0);
  MusicLibraryRequest.filter<A>(matching:contains:)(v26, v34, v27);
  swift_release(v26);
  v28 = swift_getKeyPath(&unk_100EAF268);
  MusicLibraryRequest.sort<A>(by:ascending:)(v28, 1, v27);
  swift_release(v28);
  v29 = swift_getKeyPath(&unk_100EAF290);
  MusicLibraryRequest.sort<A>(by:ascending:)(v29, 1, v27);
  swift_release(v29);
  return MusicLibraryRequest.apply(_:)(v19, v27);
}

uint64_t sub_100203494(uint64_t a1)
{
  return sub_100203E1C(a1, (uint64_t)&unk_100EAF510, (uint64_t)&unk_100EAF548);
}

uint64_t sub_1002034A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for Library.Context(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v11, v2, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v13 = type metadata accessor for MusicLibrary(0);
    return static MusicLibrary.shared.getter(v13);
  }
  else
  {
    sub_10005B6C0((uint64_t)v11, (uint64_t)v7, type metadata accessor for Library.Context);
    v14 = *v7;
    swift_retain(*v7);
    sub_10005B748((uint64_t)v7, type metadata accessor for Library.Context);
  }
  return v14;
}

void sub_1002035BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = type metadata accessor for Library.Context(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v13, v3, a2, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else
  {
    sub_10005B6C0((uint64_t)v13, (uint64_t)v9, type metadata accessor for Library.Context);
    Hasher._combine(_:)(0);
    Library.Context.hash(into:)(a1);
    sub_10005B748((uint64_t)v9, type metadata accessor for Library.Context);
  }
}

Swift::Int sub_1002036D4(uint64_t a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  sub_1002035BC((uint64_t)v3, a1);
  return Hasher._finalize()();
}

Swift::Int sub_100203720(uint64_t a1, uint64_t a2)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  sub_1002035BC((uint64_t)v4, a2);
  return Hasher._finalize()();
}

uint64_t sub_100203760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201740(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

double sub_10020376C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  double result;
  char *v18;
  __n128 v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v27[24];

  v3 = (_QWORD *)*v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v3[10];
  v8 = v3[11];
  v10 = type metadata accessor for ContainerDetailDataSource.Source(0, v7, v8, v9);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v16 = &v27[-v15 - 8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7) == 1)
  {
    v18 = (char *)v1 + v3[13];
    v19 = swift_beginAccess(v18, v27, 0, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 16))(v16, v18, v10, v19);
    v20 = type metadata accessor for Library.Context(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
    v21 = sub_100201740((uint64_t)v16, (uint64_t)v14, v7, v8);
    v22 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22(v14, v10);
    v22(v16, v10);
    if ((v21 & 1) != 0)
    {
      v23 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
      v24 = (_QWORD *)swift_allocObject(&unk_1010B64D0, 40, 7);
      v24[2] = 0;
      v24[3] = 0;
      v24[4] = v1;
      swift_retain(v1);
      v25 = sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011A7640, (uint64_t)v24);
      *(_QWORD *)&result = swift_release(v25).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10020395C()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A7414);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100206210(v2);
}

uint64_t sub_1002039A4@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204C44((uint64_t)&unk_100EAF360, (uint64_t)&unk_100EAF398, a1);
}

double sub_1002039B8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __n128 v16;
  double result;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  char v23[24];

  v2 = v1;
  v4 = (_QWORD *)*v2;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v4[10];
  v9 = v4[11];
  v11 = type metadata accessor for ContainerDetailDataSource.Source(0, v8, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v23[-v13 - 8];
  v15 = (char *)v2 + v4[13];
  v16 = swift_beginAccess(v15, v23, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 16))(v14, v15, v11, v16);
  LOBYTE(a1) = sub_100201740((uint64_t)v14, a1, v8, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((a1 & 1) == 0)
  {
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
    type metadata accessor for MainActor(0);
    v19 = swift_retain();
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_1010B6640, 40, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v2;
    sub_100166D14((uint64_t)v7, (uint64_t)&unk_1011A7720, (uint64_t)v21);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100203B54()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1011A7424);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100088284;
  return sub_100208680((uint64_t)v2, v3, v4, v5);
}

uint64_t sub_100203BB8()
{
  return sub_100203BF4((uint64_t)&unk_100EAF988, (uint64_t)&unk_100EAF9C0);
}

uint64_t sub_100203BCC(char a1)
{
  return sub_100203C90(a1, (uint64_t)&unk_100EAF988, (uint64_t)&unk_100EAF9C0);
}

uint64_t sub_100203BE0()
{
  return sub_100203BF4((uint64_t)&unk_100EAF930, (uint64_t)&unk_100EAF968);
}

uint64_t sub_100203BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_100203C7C(char a1)
{
  return sub_100203C90(a1, (uint64_t)&unk_100EAF930, (uint64_t)&unk_100EAF968);
}

uint64_t sub_100203C90(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

uint64_t sub_100203D1C()
{
  return sub_100203D80((uint64_t)&unk_100EAF8D8, (uint64_t)&unk_100EAF910);
}

uint64_t sub_100203D30(uint64_t a1)
{
  return sub_100203E1C(a1, (uint64_t)&unk_100EAF8D8, (uint64_t)&unk_100EAF910);
}

uint64_t sub_100203D44()
{
  return sub_100203D80((uint64_t)&unk_100EAF880, (uint64_t)&unk_100EAF8B8);
}

uint64_t sub_100203D58(uint64_t a1)
{
  return sub_100203E1C(a1, (uint64_t)&unk_100EAF880, (uint64_t)&unk_100EAF8B8);
}

uint64_t sub_100203D6C()
{
  return sub_100203D80((uint64_t)&unk_100EAF828, (uint64_t)&unk_100EAF860);
}

uint64_t sub_100203D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_100203E08(uint64_t a1)
{
  return sub_100203E1C(a1, (uint64_t)&unk_100EAF828, (uint64_t)&unk_100EAF860);
}

uint64_t sub_100203E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

uint64_t sub_100203EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  __n128 v26;
  uint64_t result;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;

  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3, v4, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, v4, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v7 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v33 = (char *)&v32 - v9;
  v10 = type metadata accessor for Optional(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v16 = (char *)&v32 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v32 - v15, a1, v10);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v18 = v17(v16, 1, v7);
  v19 = 0;
  v20 = v11;
  v21 = v10;
  v34 = v18;
  if (v18 != 1)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v7);
    v19 = Collection.count.getter(v7, WitnessTable);
    v20 = v8;
    v21 = v7;
  }
  v32 = v19;
  v23 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v21);
  __chkstk_darwin(v23);
  *(&v32 - 2) = v4;
  *(&v32 - 1) = v3;
  KeyPath = swift_getKeyPath(&unk_100EAF3B8);
  __chkstk_darwin(KeyPath);
  *(&v32 - 2) = v4;
  *(&v32 - 1) = v3;
  v25 = swift_getKeyPath(&unk_100EAF3F0);
  static Published.subscript.getter(v14, v35, KeyPath, v25);
  swift_release(v25);
  v26 = swift_release(KeyPath);
  if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v17)(v14, 1, v7, v26))
  {
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v14, v10);
    if (v34 == 1)
      return result;
    return sub_100215488();
  }
  v28 = v33;
  (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 16))(v33, v14, v7);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v14, v10);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v7);
  v30 = Collection.count.getter(v7, v29);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v28, v7);
  if (v34 == 1 || v32 != v30)
    return sub_100215488();
  return result;
}

uint64_t sub_100204190@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAF3B8);
  v4 = swift_getKeyPath(&unk_100EAF3F0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  return swift_release(KeyPath);
}

double sub_100204220()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100EAF7D0);
  v2 = swift_getKeyPath(&unk_100EAF808);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1002042A8(double a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double v6;

  KeyPath = swift_getKeyPath(&unk_100EAF7D0);
  v4 = swift_getKeyPath(&unk_100EAF808);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t sub_100204334@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204C44((uint64_t)&unk_100EAF778, (uint64_t)&unk_100EAF7B0, a1);
}

uint64_t sub_100204348(uint64_t a1)
{
  return sub_100204394(a1, &qword_1011A4150, (uint64_t)&unk_100EAF778, (uint64_t)&unk_100EAF7B0);
}

uint64_t sub_100204364@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204C44((uint64_t)&unk_100EAF720, (uint64_t)&unk_100EAF758, a1);
}

uint64_t sub_100204378(uint64_t a1)
{
  return sub_100204394(a1, &qword_10119F0B8, (uint64_t)&unk_100EAF720, (uint64_t)&unk_100EAF758);
}

uint64_t sub_100204394(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v18[4];

  v9 = *v4;
  v10 = sub_100007E8C(a2);
  __chkstk_darwin(v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88);
  v18[2] = v14;
  v18[3] = v13;
  KeyPath = swift_getKeyPath(a3);
  v18[0] = v14;
  v18[1] = v13;
  v16 = swift_getKeyPath(a4);
  sub_10004A160(a1, (uint64_t)v12, a2);
  swift_retain(v4);
  static Published.subscript.setter(v12, v4, KeyPath, v16);
  return sub_10004FF60(a1, a2);
}

uint64_t sub_100204478()
{
  return sub_100203D80((uint64_t)&unk_100EAF6C8, (uint64_t)&unk_100EAF700);
}

uint64_t sub_10020448C(uint64_t a1)
{
  return sub_100203E1C(a1, (uint64_t)&unk_100EAF6C8, (uint64_t)&unk_100EAF700);
}

uint64_t sub_1002044A0()
{
  return sub_100203D80((uint64_t)&unk_100EAF670, (uint64_t)&unk_100EAF6A8);
}

uint64_t sub_1002044B4(uint64_t a1)
{
  return sub_100203E1C(a1, (uint64_t)&unk_100EAF670, (uint64_t)&unk_100EAF6A8);
}

uint64_t sub_1002044C8()
{
  return sub_100203D80((uint64_t)&unk_100EAF618, (uint64_t)&unk_100EAF650);
}

uint64_t sub_1002044DC(uint64_t a1)
{
  return sub_100203E1C(a1, (uint64_t)&unk_100EAF618, (uint64_t)&unk_100EAF650);
}

uint64_t sub_1002044F0()
{
  return sub_10020452C((uint64_t)&unk_100EAF5C0, (uint64_t)&unk_100EAF5F8);
}

uint64_t sub_100204504(uint64_t a1, uint64_t a2)
{
  return sub_1002045C8(a1, a2, (uint64_t)&unk_100EAF5C0, (uint64_t)&unk_100EAF5F8);
}

uint64_t sub_100204518()
{
  return sub_10020452C((uint64_t)&unk_100EAF568, (uint64_t)&unk_100EAF5A0);
}

uint64_t sub_10020452C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_1002045B4(uint64_t a1, uint64_t a2)
{
  return sub_1002045C8(a1, a2, (uint64_t)&unk_100EAF568, (uint64_t)&unk_100EAF5A0);
}

uint64_t sub_1002045C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v11[2];

  KeyPath = swift_getKeyPath(a3);
  v9 = swift_getKeyPath(a4);
  v11[0] = a1;
  v11[1] = a2;
  swift_retain(v4);
  return static Published.subscript.setter(v11, v4, KeyPath, v9);
}

uint64_t sub_10020465C()
{
  return sub_100203D80((uint64_t)&unk_100EAF510, (uint64_t)&unk_100EAF548);
}

uint64_t sub_100204670()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAF4B8);
  v2 = swift_getKeyPath(&unk_100EAF4F0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1002046F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100EAF4B8);
  v4 = swift_getKeyPath(&unk_100EAF4F0);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = v9;
  v6 = swift_getKeyPath(&unk_100EAF4B8);
  v7 = swift_getKeyPath(&unk_100EAF4F0);
  v9 = a1;
  swift_retain(v1);
  static Published.subscript.setter(&v9, v1, v6, v7);
  result = sub_100204670();
  if (result != v5)
    return sub_100215488();
  return result;
}

uint64_t sub_1002047F4@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54[24];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v53 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v5 = type metadata accessor for ContainerDetailDataSource.Source(0, v3, v4, a1);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - v6;
  v50 = type metadata accessor for Library.Context(0);
  v8 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Optional(0, v3);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v48 - v12);
  v14 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002039A4(v13);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v3) == 1)
  {
    (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v4, v3, &unk_100F98880, &unk_100F98900);
    v19 = *(_QWORD *)(v4 + 64);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
    v21 = swift_getAssociatedConformanceWitness(v4, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
    v55 = v3;
    v56 = AssociatedTypeWitness;
    v57 = v19;
    v58 = AssociatedConformanceWitness;
    v59 = v21;
    v22 = type metadata accessor for ContainerPlaybackSource(0, (uint64_t)&v55);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v53, 1, 1, v22);
  }
  else
  {
    v24 = v53;
    v25 = v13;
    v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v26(v17, (char *)v25, v3);
    v27 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 104);
    v28 = swift_beginAccess(v27, v54, 0, 0);
    v29 = v51;
    v30 = v27;
    v31 = v52;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v51 + 16))(v7, v30, v52, v28);
    v32 = v50;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v50) == 1)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v31);
      v33 = v24;
      v26(v24, v17, v3);
      v34 = swift_getAssociatedTypeWitness(255, v4, v3, &unk_100F98880, &unk_100F98900);
      v35 = *(_QWORD *)(v4 + 64);
      v36 = swift_getAssociatedConformanceWitness(v4, v3, v34, &unk_100F98880, &unk_100F988E0);
      v37 = swift_getAssociatedConformanceWitness(v4, v3, v34, &unk_100F98880, &unk_100F988E8);
      v55 = v3;
      v56 = v34;
      v57 = v35;
      v58 = v36;
      v59 = v37;
      v38 = type metadata accessor for ContainerPlaybackSource(0, (uint64_t)&v55);
      v39 = v33;
      v40 = v38;
      v41 = 1;
    }
    else
    {
      v42 = v49;
      sub_10005B6C0((uint64_t)v7, v49, type metadata accessor for Library.Context);
      v33 = v24;
      v43 = (uint64_t)&v24[*(int *)(swift_getTupleTypeMetadata2(0, v3, v32, " context ", 0) + 48)];
      v26(v24, v17, v3);
      sub_10005B6C0(v42, v43, type metadata accessor for Library.Context);
      v44 = swift_getAssociatedTypeWitness(255, v4, v3, &unk_100F98880, &unk_100F98900);
      v45 = *(_QWORD *)(v4 + 64);
      v46 = swift_getAssociatedConformanceWitness(v4, v3, v44, &unk_100F98880, &unk_100F988E0);
      v47 = swift_getAssociatedConformanceWitness(v4, v3, v44, &unk_100F98880, &unk_100F988E8);
      v55 = v3;
      v56 = v44;
      v57 = v45;
      v58 = v46;
      v59 = v47;
      v38 = type metadata accessor for ContainerPlaybackSource(0, (uint64_t)&v55);
      v39 = v33;
      v40 = v38;
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v39, v40, v41);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 0, 1, v38);
  }
}

uint64_t sub_100204C30@<X0>(_QWORD *a1@<X8>)
{
  return sub_100204C44((uint64_t)&unk_100EAF308, (uint64_t)&unk_100EAF340, a1);
}

uint64_t sub_100204C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(v7);
  return swift_release(KeyPath);
}

uint64_t sub_100204CCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t WitnessTable;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;

  v1 = *v0;
  v2 = sub_100007E8C(&qword_1011A4150);
  __chkstk_darwin(v2);
  v48 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = v1 + 80;
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v6 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5, v4, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v4, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v9 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v49 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v43 = (char *)&v42 - v10;
  v46 = v11;
  v12 = type metadata accessor for Optional(0, v11);
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v42 - v13);
  v15 = type metadata accessor for Optional(0, v4);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v42 - v17);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v0;
  sub_1002039A4(v18);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v4) == 1)
  {
    (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
    return 0;
  }
  else
  {
    v42 = v19;
    v24 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v19 + 32))(v22, v18, v4);
    __chkstk_darwin(v24);
    *(&v42 - 2) = v4;
    *(&v42 - 1) = v5;
    KeyPath = swift_getKeyPath(&unk_100EAF3B8);
    __chkstk_darwin(KeyPath);
    *(&v42 - 2) = v4;
    *(&v42 - 1) = v5;
    v26 = swift_getKeyPath(&unk_100EAF3F0);
    static Published.subscript.getter(v14, v47, KeyPath, v26);
    swift_release();
    v27 = swift_release();
    v28 = v46;
    v29 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v49 + 48))(v14, 1, v46, v27);
    v30 = v5;
    if (v29)
    {
      (*(void (**)(_QWORD *, uint64_t))(v44 + 8))(v14, v45);
      v31 = 0;
    }
    else
    {
      v32 = v49;
      v33 = v43;
      (*(void (**)(char *, _QWORD *, uint64_t))(v49 + 16))(v43, v14, v28);
      (*(void (**)(_QWORD *, uint64_t))(v44 + 8))(v14, v45);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v28);
      v31 = Collection.count.getter(v28, WitnessTable);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v28);
    }
    v35 = sub_100204220();
    v36 = sub_1002044F0();
    v38 = v37;
    v39 = v48;
    sub_100204334(v48);
    v40 = sub_1002044C8();
    v23 = (*(uint64_t (**)(uint64_t, BOOL, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, double))(v30 + 208))(v31, v29 != 0, v36, v38, v39, v40, v4, v30, v35);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v38);
    sub_10004FF60((uint64_t)v39, &qword_1011A4150);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v4);
  }
  return v23;
}

double sub_1002050B4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  __n128 v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];

  v1 = v0;
  v2 = *v0;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v42 = *(_QWORD *)(v2 + 80);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Optional(0, v42);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v40 - v6);
  if (qword_10119BC00 != -1)
    swift_once(&qword_10119BC00, sub_10021EB2C);
  v8 = type metadata accessor for Logger(0);
  sub_100048B14(v8, (uint64_t)qword_1011A71A8);
  v9 = swift_retain_n(v0, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v41 = v2;
    v15 = v14;
    v46[0] = v14;
    *(_DWORD *)v13 = 136446210;
    sub_1002039A4(v7);
    v16 = String.init<A>(describing:)(v7, v5);
    v18 = v17;
    v44 = sub_100322200(v16, v17, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    v19 = swift_bridgeObjectRelease(v18);
    swift_release_n(v1, 2, v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Loading container detail page for: %{public}s", v13, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    v20 = v15;
    v2 = v41;
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_release_n(v0, 2, v12);
  }

  v21 = *(void **)((char *)v1 + *(_QWORD *)(*v1 + 208));
  v22 = v42;
  if (v21)
  {
    v23 = v21;
    v24 = (void *)*JSContainerDetail.NotificationName.storeItemMetadataDidChange.unsafeMutableAddressor();
    v25 = OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail;
    v26 = *(void **)&v23[OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail];
    v27 = swift_allocObject(&unk_1010B64F8, 24, 7);
    swift_weakInit(v27 + 16, v1);
    v28 = (_QWORD *)swift_allocObject(&unk_1010B65C0, 48, 7);
    v28[2] = v22;
    v28[3] = *(_QWORD *)(v2 + 88);
    v28[4] = v27;
    v28[5] = v23;
    v29 = type metadata accessor for NotificationObserver();
    swift_allocObject(v29, 64, 7);
    v30 = v23;
    v31 = v24;
    v32 = v26;
    *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 216)) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v31, (uint64_t)v26, 1, 1, (uint64_t)sub_10021F748, (uint64_t)v28);
    swift_release();
    v33 = &v30[OBJC_IVAR____TtC11MusicJSCore21JSComponentController_delegate];
    swift_beginAccess(&v30[OBJC_IVAR____TtC11MusicJSCore21JSComponentController_delegate], v46, 1, 0);
    *((_QWORD *)v33 + 1) = &off_1010B6478;
    swift_unknownObjectWeakAssign(v33, v1);
    v34 = *(_QWORD *)&v23[v25] + OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_containerDetailDelegate;
    swift_beginAccess(v34, &v44, 1, 0);
    *(_QWORD *)(v34 + 8) = &off_1010B6440;
    swift_unknownObjectWeakAssign(v34, v1);
    JSComponentController.loadIfNeeded()();

  }
  v35 = type metadata accessor for TaskPriority(0);
  v36 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v43, 1, 1, v35);
  v37 = swift_allocObject(&unk_1010B64F8, 24, 7);
  swift_weakInit(v37 + 16, v1);
  v38 = (_QWORD *)swift_allocObject(&unk_1010B6598, 56, 7);
  v38[2] = 0;
  v38[3] = 0;
  v38[4] = v22;
  v38[5] = *(_QWORD *)(v2 + 88);
  v38[6] = v37;
  sub_100166D14(v36, (uint64_t)&unk_1011A7690, (uint64_t)v38);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1002054DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double result;
  id *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    v6 = (id *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail)
              + OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_containerStoreItemMetadata);
    swift_beginAccess(v6, &v21, 0, 0);
    if (*v6)
    {
      v8 = *v6;
      v9 = objc_msgSend(v8, "copyrightText");
      if (v9)
      {
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

      }
      else
      {
        v11 = 0;
        v13 = 0;
      }
      sub_100204504(v11, v13);
      v14 = objc_msgSend(v8, "editorNotes");
      if (v14)
      {
        v15 = v14;
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v18 = v17;

      }
      else
      {
        v16 = 0;
        v18 = 0;
      }
      sub_1002045B4(v16, v18);
      v19 = JSContainerDetail.containerDetailedResponseChildrenStoreIDs.getter();
      if (v19)
      {
        v20 = v19[2];
        swift_bridgeObjectRelease(v19);
      }
      else
      {
        v20 = 0;
      }
      sub_1002046F8(v20);

    }
    sub_100205A18(v7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10020564C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6[8] = a4;
  v6[9] = a5;
  v9 = type metadata accessor for Optional(0, a5);
  v6[10] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[11] = v10;
  v6[12] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContainerDetailDataSource.Source(0, a5, a6, v11);
  v6[13] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[14] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[15] = swift_task_alloc(v14);
  v6[16] = swift_task_alloc(v14);
  return swift_task_switch(sub_1002056F8, 0, 0);
}

uint64_t sub_1002056F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  __n128 v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 136) = Strong;
  if (!Strong)
    goto LABEL_6;
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 104);
  v8 = swift_beginAccess(v7, v0 + 40, 0, 0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  v9(v4, v7, v5, v8);
  v10 = type metadata accessor for Library.Context(0);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v12 = v11(v4, 1, v10);
  v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v13(v4, v5);
  if (v12 == 1
    && (v15 = *(_QWORD *)(v0 + 88),
        v14 = *(_QWORD **)(v0 + 96),
        v16 = *(_QWORD *)(v0 + 72),
        v29 = *(_QWORD *)(v0 + 80),
        sub_1002039A4(v14),
        LODWORD(v16) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16), (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v14, v29), (_DWORD)v16 != 1))
  {
    v27 = (_QWORD *)swift_task_alloc(dword_1011A7414);
    *(_QWORD *)(v0 + 144) = v27;
    *v27 = v0;
    v27[1] = sub_100205924;
    return sub_100206210(v28);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 120);
    ((void (*)(uint64_t, uint64_t, _QWORD))v9)(v17, v7, *(_QWORD *)(v0 + 104));
    v18 = v11(v17, 1, v10);
    v19 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);
    if (v18 == 1)
    {
      v21 = swift_release(v3);
      ((void (*)(uint64_t, uint64_t, __n128))v13)(v19, v20, v21);
LABEL_6:
      v22 = *(_QWORD *)(v0 + 120);
      v23 = *(_QWORD *)(v0 + 96);
      swift_task_dealloc(*(_QWORD *)(v0 + 128));
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v13(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    v25 = (_QWORD *)swift_task_alloc(dword_1011A741C);
    *(_QWORD *)(v0 + 152) = v25;
    *v25 = v0;
    v25[1] = sub_1002059C4;
    return sub_1002071BC(v26);
  }
}

uint64_t sub_100205924()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_task_switch(sub_100205978, 0, 0);
}

uint64_t sub_100205978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002059C4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_10022041C, 0, 0);
}

void sub_100205A18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  int v36;
  void (*v37)(char *, uint64_t);
  void *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint8_t *v54;
  id v55;
  unsigned __int8 *v56;
  id v57;
  char *v58;
  uint64_t v59;
  int v60;
  _BYTE *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  Swift::String v73;
  void *object;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  char *v77;
  char *v78;
  char *v79;
  _BYTE *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _BYTE *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  unint64_t v96;
  char v97[32];

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v88 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v84 = (char *)&v75 - v7;
  __chkstk_darwin(v8);
  v78 = (char *)&v75 - v9;
  v81 = sub_100007E8C(&qword_1011A7680);
  __chkstk_darwin(v81);
  v80 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v11);
  v86 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for GenericMusicItem(0);
  v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v77 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v87 = (char *)&v75 - v15;
  __chkstk_darwin(v16);
  v79 = (char *)&v75 - v17;
  __chkstk_darwin(v18);
  v90 = (char *)&v75 - v19;
  v92 = *(char **)(v2 + 88);
  v21 = type metadata accessor for ContainerDetailDataSource.Source(0, v3, (uint64_t)v92, v20);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v75 - v26;
  v28 = type metadata accessor for Optional(0, v3);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v82 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v75 - v32;
  sub_1002039A4((uint64_t *)((char *)&v75 - v32));
  v85 = v4;
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v35 = v3;
  v36 = v34(v33, 1, v3);
  v37 = *(void (**)(char *, uint64_t))(v29 + 8);
  v83 = v28;
  v37(v33, v28);
  if (v36 == 1)
  {
    v38 = *(void **)(v93 + *(_QWORD *)(*(_QWORD *)v93 + 208));
    if (v38)
    {
      v39 = v93 + *(_QWORD *)(*(_QWORD *)v93 + 104);
      v40 = swift_beginAccess(v39, v97, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16))(v27, v39, v21, v40);
      v41 = type metadata accessor for Library.Context(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v24, 1, 1, v41);
      v42 = v38;
      v43 = v35;
      LOBYTE(v39) = sub_100201740((uint64_t)v27, (uint64_t)v24, v35, (uint64_t)v92);
      v44 = *(void (**)(char *, uint64_t))(v22 + 8);
      v44(v24, v21);
      v44(v27, v21);
      if ((v39 & 1) == 0)
      {

        return;
      }
      v92 = v42;
      if (qword_10119BC00 != -1)
        swift_once(&qword_10119BC00, sub_10021EB2C);
      v45 = type metadata accessor for Logger(0);
      v46 = sub_100048B14(v45, (uint64_t)qword_1011A71A8);
      v47 = Logger.logObject.getter(v46);
      v48 = static os_log_type_t.default.getter(v47);
      v49 = os_log_type_enabled(v47, v48);
      v50 = v91;
      v52 = v88;
      v51 = v89;
      v53 = v87;
      if (v49)
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "Loading container item from component controller.", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }

      v55 = v92;
      v56 = (unsigned __int8 *)*(id *)&v92[OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail];
      v57 = v86;
      sub_10070A4CC((uint64_t)v86);
      if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v51 + 48))(v57, 1, v50) == 1)
      {

        sub_10004FF60((uint64_t)v57, (uint64_t *)&unk_1011A20D0);
        return;
      }
      v76 = (void (*)(uint64_t, uint64_t))v37;
      v58 = v90;
      (*(void (**)(char *, id, uint64_t))(v51 + 32))(v90, v57, v50);
      v59 = OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_itemKind;
      v86 = v56;
      v60 = v56[OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_itemKind];
      v61 = v80;
      v62 = *(int *)(v81 + 48);
      v63 = &v80[v62];
      *v80 = v60;
      v64 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
      v64(&v61[v62], v58, v50);
      if (v60 == 2)
      {
        if ((*(unsigned int (**)(char *, uint64_t))(v51 + 88))(v63, v50) != enum case for GenericMusicItem.album(_:))
        {
LABEL_22:
          v64(v77, v90, v50);
          v95 = 0;
          v96 = 0xE000000000000000;
          _StringGuts.grow(_:)(54);
          v70._object = (void *)0x8000000100E319B0;
          v70._countAndFlagsBits = 0xD000000000000027;
          String.append(_:)(v70);
          v94 = v86[v59];
          _print_unlocked<A, B>(_:_:)(&v94, &v95, &type metadata for JSContainerDetail.Kind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v71._countAndFlagsBits = 0x65746920726F6620;
          v71._object = (void *)0xEB00000000203A6DLL;
          String.append(_:)(v71);
          v72 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
          v73._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v50, v72);
          object = v73._object;
          String.append(_:)(v73);
          swift_bridgeObjectRelease(object);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v95, v96, "Music/ContainerDetailDataSource.swift", 37, 2, 299, 0);
          __break(1u);
          return;
        }
        v53 = v79;
        v64(v79, v63, v50);
        (*(void (**)(char *, uint64_t))(v51 + 96))(v53, v50);
        v65 = type metadata accessor for Album(0);
        v52 = v78;
        if (!swift_dynamicCast(v78, v53, v65, v43, 0))
        {
LABEL_21:
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v79, v65);
          v50 = v91;
          goto LABEL_22;
        }
      }
      else
      {
        if (v60 == 3
          || (*(unsigned int (**)(char *, uint64_t))(v51 + 88))(v63, v50) != enum case for GenericMusicItem.playlist(_:))
        {
          goto LABEL_22;
        }
        v64(v53, v63, v50);
        (*(void (**)(char *, uint64_t))(v51 + 96))(v53, v50);
        v65 = type metadata accessor for Playlist(0);
        if (!swift_dynamicCast(v52, v53, v65, v43, 0))
        {
          v79 = v53;
          goto LABEL_21;
        }
      }
      v67 = v84;
      v66 = v85;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v52, v43);
      v68 = (uint64_t)v82;
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v82, v67, v43);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v68, 0, 1, v43);
      sub_10021EB8C(v68);
      v76(v68, v83);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v43);
      v69 = *(void (**)(char *, uint64_t))(v51 + 8);
      v69(v90, v50);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v53, v65);
      v69(v63, v50);
    }
  }
}

uint64_t sub_100206210(__n128 a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v2[6] = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v2[7] = v4;
  v5 = *(_QWORD *)(v3 + 88);
  v6 = *(_QWORD *)(v5 + 56);
  v2[8] = v6;
  v7 = type metadata accessor for MusicLibraryMapping.Response(255, v4, v6, a1);
  v8 = type metadata accessor for Optional(255, v7);
  v9 = type metadata accessor for Published.Publisher(0, v8);
  v2[9] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[10] = v10;
  v2[11] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContainerDetailDataSource.ContainerLibraryData(255, v4, v5, v11);
  v2[12] = v12;
  v13 = type metadata accessor for Optional(0, v12);
  v2[13] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[14] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[15] = swift_task_alloc(v15);
  v2[16] = swift_task_alloc(v15);
  v16 = type metadata accessor for MusicLibraryMapping.Request(0, v4, v6);
  v2[17] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v2[18] = v17;
  v2[19] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Optional(0, v4);
  v2[20] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v2[21] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[22] = swift_task_alloc(v20);
  v2[23] = swift_task_alloc(v20);
  v21 = *(_QWORD *)(v4 - 8);
  v2[24] = v21;
  v2[25] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MainActor(0);
  v2[26] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002063BC, v24, v25);
}

uint64_t sub_1002063BC()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = (uint64_t *)(v0 + 48);
  v2 = *(_QWORD **)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_1002039A4(v2);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  }
  else
  {
    v63 = v0 + 16;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 32))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 56));
    if (qword_10119BC00 != -1)
      swift_once(&qword_10119BC00, sub_10021EB2C);
    v5 = *v1;
    v6 = type metadata accessor for Logger(0);
    sub_100048B14(v6, (uint64_t)qword_1011A71A8);
    v7 = swift_retain_n(v5, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = *(_QWORD **)(v0 + 176);
      v61 = *(_QWORD *)(v0 + 160);
      v11 = *(_QWORD *)(v0 + 48);
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v65 = v13;
      *(_DWORD *)v12 = 136446210;
      sub_1002039A4(v10);
      v14 = String.init<A>(describing:)(v10, v61);
      v16 = v15;
      *(_QWORD *)(v0 + 40) = sub_100322200(v14, v15, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_release_n(v11, 2, v17);
      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Mapping catalog container item: %{public}s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {
      v18 = *v1;

      swift_release_n(v18, 2, v19);
    }
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 200);
    v58 = v21;
    v22 = *(_QWORD *)(v0 + 152);
    v64 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 128);
    v24 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 96);
    v55 = *(_QWORD *)(v0 + 104);
    v56 = *(_QWORD *)(v0 + 120);
    v57 = *(_QWORD *)(v0 + 88);
    v60 = *(_QWORD *)(v0 + 72);
    v62 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v27 = *(_QWORD *)(v0 + 48);
    v28 = sub_100148540(v26, v26);
    v59 = v20;
    v29 = swift_allocObject(v28, ((*(unsigned __int8 *)(v20 + 80) + (unint64_t)*(unsigned int *)(v28 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72), *(unsigned __int8 *)(v20 + 80) | (unint64_t)*(unsigned __int16 *)(v28 + 52));
    v30 = static Array._adoptStorage(_:count:)(v29, 1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v31, v21, v26);
    v32 = sub_10014273C(v30);
    MusicLibraryMapping.Request.init(mappingItems:)(v32, v26, v53);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v24);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryMapping.Request<A>, v24);
    v34 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v24, WitnessTable);
    v35 = type metadata accessor for MusicAutoupdatingResponse(255, v24, WitnessTable);
    v36 = *(int *)(swift_getTupleTypeMetadata2(0, v24, v35, 0, 0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v23, v22, v24);
    *(_QWORD *)(v23 + v36) = v34;
    swift_storeEnumTagMultiPayload(v23, v25, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 0, 1, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v56, v23, v55);
    v37 = v27 + *(_QWORD *)(*(_QWORD *)v27 + 136);
    swift_beginAccess(v37, v63, 33, 0);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v54 + 40);
    v39 = swift_retain(v34);
    v38(v37, v56, v55, v39);
    swift_endAccess(v63);
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v40);
    swift_retain(v27);
    v41 = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v60);
    v42 = Publisher<>.sink(receiveValue:)(sub_10021F5F4, v27, v60, v41);
    swift_release(v34);
    v43 = swift_release(v27);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v57, v60, v43);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v26);
    v44 = *(_QWORD *)(*(_QWORD *)v27 + 144);
    v45 = *(_QWORD *)(v27 + v44);
    *(_QWORD *)(v27 + v44) = v42;
    swift_release(v45);
  }
  v46 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 184);
  v48 = *(_QWORD *)(v0 + 152);
  v50 = *(_QWORD *)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 128);
  v51 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v47);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002068B8(char *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  NSObject *v44;
  _BOOL4 v45;
  uint8_t *v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_t v51;
  void (*v52)(char *, uint64_t, __n128);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t WitnessTable;
  char *v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  int v90;
  _QWORD *v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  __n128 v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  os_log_t v112;
  char *v113;
  char *v114;
  int v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t AssociatedTypeWitness;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[3];

  v130 = a2;
  v3 = *a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 80);
  v7 = *(_QWORD *)(v3 + 88);
  v10 = type metadata accessor for ContainerDetailDataSource.Source(0, v8, v7, v9);
  v123 = *(_QWORD *)(v10 - 8);
  v124 = v10;
  __chkstk_darwin(v10);
  v122 = (char *)&v108 - v11;
  v119 = type metadata accessor for Optional(0, v8);
  v118 = *(_QWORD *)(v119 - 8);
  v12 = __chkstk_darwin(v119);
  v117 = (char *)&v108 - v13;
  v14 = *(_QWORD *)(v7 + 56);
  v15 = type metadata accessor for MusicLibraryMapping.Response(0, v8, v14, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v108 - v18;
  v129 = type metadata accessor for MusicLibraryMapping.MappedItem(255, v8, v14, v17);
  v20 = type metadata accessor for Optional(0, v129);
  v127 = *(_QWORD *)(v20 - 8);
  v128 = v20;
  __chkstk_darwin(v20);
  v133 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v114 = (char *)&v108 - v23;
  v120 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v14, v8, &protocol requirements base descriptor for MusicLibraryMappingItem, &associated type descriptor for MusicLibraryMappingItem.MusicItemType);
  v135 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v121 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v116 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v134 = (char *)&v108 - v26;
  __chkstk_darwin(v27);
  v126 = (char *)&v108 - v28;
  v136 = v15;
  v29 = type metadata accessor for Optional(0, v15);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v108 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v108 - v37;
  if (qword_10119BC00 != -1)
    swift_once(&qword_10119BC00, sub_10021EB2C);
  v39 = type metadata accessor for Logger(0);
  sub_100048B14(v39, (uint64_t)qword_1011A71A8);
  v40 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v132 = a1;
  v41 = a1;
  v42 = v40;
  v43 = ((uint64_t (*)(char *, char *, uint64_t))v40)(v38, v41, v29);
  v44 = Logger.logObject.getter(v43);
  v115 = static os_log_type_t.default.getter(v44);
  v45 = os_log_type_enabled(v44, (os_log_type_t)v115);
  v125 = v6;
  if (v45)
  {
    v112 = v44;
    v113 = v19;
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    v111 = swift_slowAlloc(32, -1);
    v138[0] = v111;
    *(_DWORD *)v46 = 136446210;
    v42(v35, v38, v29);
    v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v48 = v16;
    v49 = v136;
    if (v47(v35, 1, v136) == 1)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
      v50 = 1;
      v16 = v48;
      v19 = v113;
    }
    else
    {
      v109 = v42;
      v53 = MusicLibraryMapping.Response.mappedItems.getter(v49);
      v110 = v48;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
      v137 = v53;
      v54 = v129;
      v55 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v55);
      v57 = v114;
      Collection.first.getter(v55, WitnessTable);
      v58 = swift_bridgeObjectRelease(v53);
      v59 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v59 + 48))(v57, 1, v54, v58) == 1)
      {
        (*(void (**)(char *, uint64_t))(v127 + 8))(v57, v128);
        v50 = 1;
      }
      else
      {
        MusicLibraryMapping.MappedItem.item.getter(v54);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v54);
        v50 = 0;
      }
      v16 = v110;
      v19 = v113;
      v42 = v109;
    }
    v60 = v126;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v126, v50, 1);
    v61 = String.init<A>(describing:)(v60, v135);
    v63 = v62;
    v137 = sub_100322200(v61, v62, v138);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
    v64 = swift_bridgeObjectRelease(v63);
    v52 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
    v52(v38, v29, v64);
    v51 = v112;
    _os_log_impl((void *)&_mh_execute_header, v112, (os_log_type_t)v115, "Updating mapped container detail page with: %{public}s", v46, 0xCu);
    v65 = v111;
    swift_arrayDestroy(v111, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v46, -1, -1);
  }
  else
  {
    v51 = v44;
    v52 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
    ((void (*)(char *, uint64_t))v52)(v38, v29);
  }

  v42(v32, v132, v29);
  v66 = v136;
  v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v32, 1, v136);
  v68 = v134;
  if (v67 == 1)
    return ((uint64_t (*)(char *, uint64_t))v52)(v32, v29);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v32, v66);
  v70 = MusicLibraryMapping.Response.mappedItems.getter(v66);
  v138[0] = v70;
  v71 = v129;
  v72 = type metadata accessor for Array(0);
  v73 = swift_getWitnessTable(&protocol conformance descriptor for [A], v72);
  v74 = v133;
  Collection.first.getter(v72, v73);
  v75 = v74;
  v76 = v128;
  v77 = swift_bridgeObjectRelease(v70);
  v78 = *(_QWORD *)(v71 - 8);
  v79 = 1;
  v80 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v78 + 48))(v75, 1, v71, v77);
  v81 = v127;
  if (v80 != 1)
  {
    MusicLibraryMapping.MappedItem.item.getter(v71);
    v75 = v133;
    v79 = 0;
    v81 = v78;
    v76 = v71;
  }
  (*(void (**)(char *, uint64_t))(v81 + 8))(v75, v76);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v68, v79, 1);
  v82 = v121;
  v83 = v116;
  v84 = v68;
  v85 = v68;
  v86 = v135;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v116, v84, v135);
  v87 = (uint64_t)v117;
  v88 = v83;
  v89 = v120;
  v90 = swift_dynamicCast(v117, v88, v86, v120, 6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v87, v90 ^ 1u, 1, v89);
  v91 = v130;
  sub_10021EB8C(v87);
  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v87, v119);
  v92 = (uint64_t)v91 + *(_QWORD *)(*v91 + 104);
  v93 = swift_beginAccess(v92, v138, 0, 0);
  v95 = v122;
  v94 = v123;
  v96 = v92;
  v97 = v124;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v123 + 16))(v122, v96, v124, v93);
  v98 = type metadata accessor for Library.Context(0);
  v99 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v95, 1, v98);
  v100 = (uint64_t)v125;
  if (v99 == 1)
  {
    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v97);
    v101 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v100, 1, 1, v101);
    type metadata accessor for MainActor(0);
    v102 = v130;
    v103 = swift_retain(v130);
    v104 = static MainActor.shared.getter(v103);
    v105 = (_QWORD *)swift_allocObject(&unk_1010B6570, 40, 7);
    v105[2] = v104;
    v105[3] = &protocol witness table for MainActor;
    v105[4] = v102;
    v106 = sub_100166D14(v100, (uint64_t)&unk_1011A7678, (uint64_t)v105);
    v107 = swift_release(v106);
    (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v85, v86, v107);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v66);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v86);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v66);
    return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v95, v97);
  }
}

uint64_t sub_1002071BC(__n128 a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;

  v2[9] = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v2[10] = v4;
  v5 = *(_QWORD *)(v3 + 88);
  v2[11] = v5;
  v6 = type metadata accessor for MusicLibraryResponse(255, v4, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8), a1);
  v7 = type metadata accessor for Optional(255, v6);
  v8 = type metadata accessor for Published.Publisher(0, v7);
  v2[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[13] = v9;
  v2[14] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ContainerDetailDataSource.ContainerLibraryData(255, v4, v5, v10);
  v2[15] = v11;
  v12 = type metadata accessor for Optional(0, v11);
  v2[16] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[17] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v14);
  v2[19] = swift_task_alloc(v14);
  v15 = type metadata accessor for MusicLibraryRequest(0, v4, *(_QWORD *)(v5 + 40));
  v2[20] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[21] = v16;
  v2[22] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Optional(0, v4);
  v2[23] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[24] = v18;
  v2[25] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ContainerDetailDataSource.Source(0, v4, v5, v19);
  v2[26] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v2[27] = v21;
  v2[28] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Library.Context(0);
  v2[29] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v2[30] = v23;
  v2[31] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MainActor(0);
  v2[32] = static MainActor.shared.getter(v25);
  v26 = dispatch thunk of Actor.unownedExecutor.getter(v24, &protocol witness table for MainActor);
  return swift_task_switch(sub_100207394, v26, v27);
}

uint64_t sub_100207394()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;

  v1 = (uint64_t *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 256));
  v8 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 104);
  v9 = swift_beginAccess(v8, v0 + 16, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16))(v5, v8, v7, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  }
  else
  {
    v63 = v0 + 40;
    sub_10005B6C0(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 248), type metadata accessor for Library.Context);
    if (qword_10119BC00 != -1)
      swift_once(&qword_10119BC00, sub_10021EB2C);
    v10 = *v1;
    v11 = type metadata accessor for Logger(0);
    sub_100048B14(v11, (uint64_t)qword_1011A71A8);
    v12 = swift_retain_n(v10, 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = *(_QWORD **)(v0 + 200);
      v61 = *(_QWORD *)(v0 + 184);
      v16 = *(_QWORD *)(v0 + 72);
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v65 = v18;
      *(_DWORD *)v17 = 136446210;
      sub_1002039A4(v15);
      v19 = String.init<A>(describing:)(v15, v61);
      v21 = v20;
      *(_QWORD *)(v0 + 64) = sub_100322200(v19, v20, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
      swift_release_n(v16, 2, v22);
      swift_bridgeObjectRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Requesting library container item: %{public}s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {
      v23 = *v1;

      swift_release_n(v23, 2, v24);
    }
    v64 = *(_QWORD **)(v0 + 248);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD **)(v0 + 200);
    v27 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 160);
    v53 = *(_QWORD *)(v0 + 184);
    v54 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 152);
    v57 = *(_QWORD *)(v0 + 128);
    v58 = *(_QWORD *)(v0 + 144);
    v55 = *(_QWORD *)(v0 + 120);
    v56 = *(_QWORD *)(v0 + 136);
    v62 = *(_QWORD *)(v0 + 104);
    v30 = *(_QWORD *)(v0 + 88);
    v59 = *(_QWORD *)(v0 + 112);
    v60 = *(_QWORD *)(v0 + 96);
    v32 = *(_QWORD *)(v0 + 72);
    v31 = *(_QWORD *)(v0 + 80);
    sub_1002039A4(v26);
    sub_100207888((uint64_t)v26, v31, v30, v27);
    (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v26, v53);
    MusicLibraryRequest.apply(_:)(v64, v28);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryRequest<A>, v28);
    v34 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v28, WitnessTable);
    v35 = type metadata accessor for MusicAutoupdatingResponse(255, v28, WitnessTable);
    v36 = *(int *)(swift_getTupleTypeMetadata2(0, v28, v35, 0, 0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v29, v27, v28);
    *(_QWORD *)(v29 + v36) = v34;
    swift_storeEnumTagMultiPayload(v29, v55, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v29, 0, 1, v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v58, v29, v57);
    v37 = v32 + *(_QWORD *)(*(_QWORD *)v32 + 136);
    swift_beginAccess(v37, v63, 33, 0);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v56 + 40);
    v39 = swift_retain(v34);
    v38(v37, v58, v57, v39);
    swift_endAccess(v63);
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v40);
    swift_retain(v32);
    v41 = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v60);
    v42 = Publisher<>.sink(receiveValue:)(sub_10021F574, v32, v60, v41);
    swift_release(v34);
    v43 = swift_release(v32);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v59, v60, v43);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v27, v28);
    sub_10005B748((uint64_t)v64, type metadata accessor for Library.Context);
    v44 = *(_QWORD *)(*(_QWORD *)v32 + 144);
    v45 = *(_QWORD *)(v32 + v44);
    *(_QWORD *)(v32 + v44) = v42;
    swift_release(v45);
  }
  v46 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 200);
  v48 = *(_QWORD *)(v0 + 176);
  v50 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 152);
  v51 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100207888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (**v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  void (**v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v103 = a4;
  v7 = sub_100007E8C(&qword_10119FCA8);
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  __chkstk_darwin(v7);
  v84 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v85 = (char *)&v81 - v10;
  v98 = type metadata accessor for Playlist(0);
  v91 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v92 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v93 = (void (**)(char *, uint64_t))((char *)&v81 - v13);
  v102 = *(_QWORD *)(a3 + 40);
  v99 = type metadata accessor for MusicLibraryRequest(255, a2, v102);
  v14 = type metadata accessor for Optional(0, v99);
  v89 = *(_QWORD *)(v14 - 8);
  v90 = v14;
  __chkstk_darwin(v14);
  v88 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v97 = (char *)&v81 - v17;
  v18 = sub_100007E8C(&qword_10119FD08);
  v95 = *(_QWORD *)(v18 - 8);
  v96 = v18;
  __chkstk_darwin(v18);
  v94 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v81 - v21;
  v100 = type metadata accessor for Album(0);
  v23 = *(void (***)(char *, char *, uint64_t))(v100 - 8);
  __chkstk_darwin(v100);
  v25 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v81 - v27;
  v29 = type metadata accessor for Optional(0, a2);
  __chkstk_darwin(v29);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v81 - v34;
  v101 = v36;
  v37 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v36 + 16);
  v37((char *)&v81 - v34, a1, v29, v33);
  v38 = *(_QWORD *)(a2 - 8);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v35, 1, a2);
  v40 = v102;
  if (v39 == 1)
    goto LABEL_2;
  v82 = v38;
  v83 = v29;
  ((void (*)(char *, char *, uint64_t))v37)(v31, v35, v29);
  v42 = v100;
  if (!swift_dynamicCast(v28, v31, a2, v100, 0))
  {
    v60 = (char *)v93;
    v61 = v98;
    if (swift_dynamicCast(v93, v31, a2, v98, 0))
    {
      v81 = v31;
      (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v92, v60, v61);
      v62 = v85;
      MusicLibraryRequest.init()(v61, &protocol witness table for Playlist);
      KeyPath = swift_getKeyPath(&unk_100EAF468);
      v64 = sub_100007E8C(&qword_1011A3F90);
      v65 = swift_allocObject(v64, 48, 7);
      *(_OWORD *)(v65 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v65 + 32) = Playlist.id.getter(v65);
      *(_QWORD *)(v65 + 40) = v66;
      v67 = v87;
      MusicLibraryRequest.filter<A>(matching:memberOf:)(KeyPath, v65, v87, &protocol witness table for MusicItemID);
      swift_release(KeyPath);
      v68 = swift_bridgeObjectRelease(v65);
      v69 = v86;
      v70 = v84;
      (*(void (**)(char *, char *, uint64_t, __n128))(v86 + 16))(v84, v62, v67, v68);
      v71 = v88;
      v72 = v99;
      v73 = v91;
      v74 = swift_dynamicCast(v88, v70, v67, v99, 6);
      v75 = v71;
      v76 = *(_QWORD *)(v72 - 8);
      v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56);
      v78 = v103;
      if (v74)
      {
        v77(v75, 0, 1, v72);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v67);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v92, v61);
        (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v78, v88, v72);
      }
      else
      {
        v80 = v75;
        v77(v75, 1, 1, v72);
        MusicLibraryRequest.init()(a2, v102);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v67);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v92, v61);
        (*(void (**)(char *, uint64_t))(v89 + 8))(v80, v90);
      }
      (*(void (**)(char *, uint64_t))(v82 + 8))(v81, a2);
      v29 = v83;
      goto LABEL_3;
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v31, a2);
    v40 = v102;
    v29 = v83;
LABEL_2:
    MusicLibraryRequest.init()(a2, v40);
LABEL_3:
    v41 = v101;
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v35, v29);
  }
  v98 = a2;
  v81 = v31;
  v93 = (void (**)(char *, uint64_t))v23;
  v23[4](v25, v28, v42);
  MusicLibraryRequest.init()(v42, &protocol witness table for Album);
  v43 = swift_getKeyPath(&unk_100EAF490);
  v44 = sub_100007E8C(&qword_1011A3F90);
  v45 = swift_allocObject(v44, 48, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v45 + 32) = Album.id.getter(v45);
  *(_QWORD *)(v45 + 40) = v46;
  v47 = v96;
  MusicLibraryRequest.filter<A>(matching:memberOf:)(v43, v45, v96, &protocol witness table for MusicItemID);
  swift_release(v43);
  v48 = v45;
  v49 = v22;
  v50 = swift_bridgeObjectRelease(v48);
  v51 = v94;
  v52 = v95;
  (*(void (**)(char *, char *, uint64_t, __n128))(v95 + 16))(v94, v22, v47, v50);
  v53 = v97;
  v54 = v99;
  v55 = swift_dynamicCast(v97, v51, v47, v99, 6);
  v56 = *(_QWORD *)(v54 - 8);
  v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
  if (v55)
  {
    v57(v53, 0, 1, v54);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v47);
    v93[1](v25, v42);
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v103, v53, v54);
    v29 = v83;
    v41 = v101;
    v58 = v82;
    v59 = v98;
  }
  else
  {
    v57(v53, 1, 1, v54);
    v59 = v98;
    MusicLibraryRequest.init()(v98, v102);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v47);
    v93[1](v25, v42);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v90);
    v29 = v83;
    v41 = v101;
    v58 = v82;
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v81, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v35, v29);
}

uint64_t sub_100207F94(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  NSObject *v35;
  _BOOL4 v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  void (*v41)(char *, uint64_t, __n128);
  char *v42;
  uint64_t v43;
  uint64_t WitnessTable;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  os_log_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  uint64_t (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  os_log_t v75;
  uint64_t v76;
  _QWORD *v77;
  int v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[2];

  v2 = a2;
  v4 = *a2;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v6 = __chkstk_darwin(v5);
  v83 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v4 + 80);
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 88) + 16) + 8);
  v10 = type metadata accessor for MusicLibraryResponse(0, v8, v9, v6);
  v92 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v89 = (char *)&v72 - v11;
  v12 = type metadata accessor for MusicItemCollection(0, v8, v9);
  v85 = *(_QWORD *)(v12 - 8);
  v86 = v12;
  __chkstk_darwin(v12);
  v84 = (char *)&v72 - v13;
  v90 = v8;
  v91 = type metadata accessor for Optional(0, v8);
  v88 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v81 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v80 = (char *)&v72 - v16;
  __chkstk_darwin(v17);
  v82 = (char *)&v72 - v18;
  __chkstk_darwin(v19);
  v79 = (char *)&v72 - v20;
  v21 = v10;
  v22 = type metadata accessor for Optional(0, v10);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v72 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v72 - v30;
  if (qword_10119BC00 != -1)
    swift_once(&qword_10119BC00, sub_10021EB2C);
  v32 = type metadata accessor for Logger(0);
  sub_100048B14(v32, (uint64_t)qword_1011A71A8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v34 = v33(v31, a1, v22);
  v35 = Logger.logObject.getter(v34);
  v78 = static os_log_type_t.default.getter(v35);
  v36 = os_log_type_enabled(v35, (os_log_type_t)v78);
  v87 = (void (*)(char *, uint64_t, uint64_t))v33;
  if (v36)
  {
    v75 = v35;
    v76 = a1;
    v77 = v2;
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v74 = swift_slowAlloc(32, -1);
    v94[0] = v74;
    *(_DWORD *)v37 = 136446210;
    v33(v28, (uint64_t)v31, v22);
    v38 = v92;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v28, 1, v21) == 1)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
      v39 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v79, 1, 1);
    }
    else
    {
      v73 = v25;
      v42 = v84;
      MusicLibraryResponse.items.getter(v21);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v21);
      v43 = v86;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v86);
      v39 = v79;
      Collection.first.getter(v43, WitnessTable);
      v45 = v42;
      v25 = v73;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v45, v43);
    }
    v46 = String.init<A>(describing:)(v39, v91);
    v48 = v47;
    v93 = sub_100322200(v46, v47, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
    v49 = swift_bridgeObjectRelease(v48);
    v41 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
    v41(v31, v22, v49);
    v50 = v75;
    _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v78, "Updating library container detail page with: %{public}s", v37, 0xCu);
    v51 = v74;
    swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v37, -1, -1);

    a1 = v76;
    v2 = v77;
  }
  else
  {
    v40 = v35;
    v41 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
    ((void (*)(char *, uint64_t))v41)(v31, v22);

  }
  v87(v25, a1, v22);
  v52 = v92;
  v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48))(v25, 1, v21);
  v54 = v90;
  if (v53 == 1)
    return ((uint64_t (*)(char *, uint64_t))v41)(v25, v22);
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v89, v25, v21);
  v56 = v84;
  MusicLibraryResponse.items.getter(v21);
  v57 = v86;
  v58 = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v86);
  v59 = v82;
  Collection.first.getter(v57, v58);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v56, v57);
  v60 = v80;
  sub_1002039A4(v80);
  v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48);
  LODWORD(v57) = v61(v60, 1, v54);
  v62 = *(uint64_t (**)(char *, uint64_t))(v88 + 8);
  v62(v60, v91);
  if ((_DWORD)v57 != 1 && v61(v59, 1, v54) == 1)
    sub_100203BCC(1);
  v63 = (uint64_t)v81;
  v64 = v91;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v81, v59, v91);
  sub_10021EB8C(v63);
  v62((char *)v63, v64);
  v65 = type metadata accessor for TaskPriority(0);
  v66 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v83, 1, 1, v65);
  type metadata accessor for MainActor(0);
  v67 = swift_retain(v2);
  v68 = static MainActor.shared.getter(v67);
  v69 = (_QWORD *)swift_allocObject(&unk_1010B6548, 40, 7);
  v69[2] = v68;
  v69[3] = &protocol witness table for MainActor;
  v69[4] = v2;
  v70 = sub_100166D14(v66, (uint64_t)&unk_1011A7668, (uint64_t)v69);
  v71 = swift_release(v70);
  (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v89, v21, v71);
  return v62(v59, v64);
}

uint64_t sub_10020861C()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1011A7424);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100088358;
  return sub_100208680((uint64_t)v2, v3, v4, v5);
}

uint64_t sub_100208680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v5[5] = v4;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  v5[6] = v7;
  v8 = *(_QWORD *)(v6 + 88);
  v9 = type metadata accessor for ContainerDetailDataSource.Source(255, v7, v8, a4);
  v5[7] = v9;
  v10 = type metadata accessor for Optional(0, v9);
  v5[8] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[9] = v11;
  v5[10] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Optional(255, v7);
  v5[11] = v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v8, v7, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v7, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v15 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v16 = type metadata accessor for Optional(255, v15);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v12, v16, "container items ", 0);
  v5[12] = TupleTypeMetadata2;
  v18 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5[13] = v18;
  v5[14] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v12 - 8);
  v5[15] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v20);
  v5[17] = swift_task_alloc(v20);
  v21 = *(_QWORD *)(v7 - 8);
  v5[18] = v21;
  v5[19] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MainActor(0);
  v5[20] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  v5[21] = v24;
  v5[22] = v25;
  return swift_task_switch(sub_100208844, v24, v25);
}

uint64_t sub_100208844()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v29)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v30;

  v1 = *(_QWORD **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 48);
  sub_1002039A4(v1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = swift_release(*(_QWORD *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v9);
    swift_task_dealloc(v8);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    v21 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 32))(v14, *(_QWORD *)(v0 + 136), v20);
    v22 = *(int *)(v17 + 48);
    *(_DWORD *)(v0 + 240) = v22;
    v23 = v16 + v22;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, v14, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v20);
    v24 = *(_QWORD *)(*(_QWORD *)v21 + 104);
    *(_QWORD *)(v0 + 184) = v24;
    v25 = v21 + v24;
    v26 = swift_beginAccess(v21 + v24, v0 + 16, 0, 0);
    v27 = *(_QWORD *)(v19 - 8);
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v27 + 16);
    *(_QWORD *)(v0 + 192) = v28;
    v28(v18, v25, v19, v26);
    v29 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56);
    *(_QWORD *)(v0 + 200) = v29;
    v29(v18, 0, 1, v19);
    v30 = (_QWORD *)swift_task_alloc(dword_1011A742C);
    *(_QWORD *)(v0 + 208) = v30;
    *v30 = v0;
    v30[1] = sub_100208A30;
    return sub_100208D94(*(_QWORD *)(v0 + 112), v23, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 80));
  }
}

uint64_t sub_100208A30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD **)v0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v1[27] = v8;
  v8(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100208AC4, v1[21], v1[22]);
}

uint64_t sub_100208AC4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 200);
  v2 = *(int *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 192))(v4, *(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 184), v5);
  v1(v4, 0, 1, v5);
  v6 = (_QWORD *)swift_task_alloc(dword_1011A743C);
  *(_QWORD *)(v0 + 224) = v6;
  *v6 = v0;
  v6[1] = sub_100208B6C;
  return sub_10020EA94(*(_QWORD *)(v0 + 112), v3 + v2, *(_QWORD *)(v0 + 80));
}

uint64_t sub_100208B6C()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(void (**)(uint64_t, uint64_t))(*v0 + 216);
  v3 = *(_QWORD *)(*v0 + 80);
  v4 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  v2(v3, v4);
  return swift_task_switch(sub_100208BD4, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_100208BD4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 200);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 184);
  sub_10020C5F0(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 112) + *(int *)(v0 + 240));
  v2(v3, v5, v4);
  v1(v3, 0, 1, v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1011A7434);
  *(_QWORD *)(v0 + 232) = v6;
  *v6 = v0;
  v6[1] = sub_100208C84;
  return sub_10020DD00(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80));
}

uint64_t sub_100208C84()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(void (**)(uint64_t, uint64_t))(*v0 + 216);
  v3 = *(_QWORD *)(*v0 + 80);
  v4 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  v2(v3, v4);
  return swift_task_switch(sub_100208CF0, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_100208CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100208D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t TupleTypeMetadata2;
  uint64_t v37;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  v5[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACC20);
  v5[9] = v9;
  v5[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F490) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[11] = swift_task_alloc(v10);
  v5[12] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011A30F0);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119F498);
  v5[14] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[15] = v13;
  v5[16] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v5[17] = v14;
  v5[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F2D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[19] = swift_task_alloc(v15);
  v5[20] = swift_task_alloc(v15);
  v16 = sub_100007E8C(&qword_10119F2E0);
  v5[21] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v5[22] = v17;
  v5[23] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Library.Context(0);
  v5[24] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v5[25] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[26] = swift_task_alloc(v20);
  v5[27] = swift_task_alloc(v20);
  v21 = type metadata accessor for Playlist(0);
  v5[28] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v5[29] = v22;
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[30] = swift_task_alloc(v23);
  v5[31] = swift_task_alloc(v23);
  v5[32] = swift_task_alloc(v23);
  v5[33] = swift_task_alloc(v23);
  v5[34] = swift_task_alloc(v23);
  v24 = type metadata accessor for MusicPropertySource(0);
  v5[35] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v5[36] = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[37] = swift_task_alloc(v26);
  v5[38] = swift_task_alloc(v26);
  v27 = type metadata accessor for Album(0);
  v5[39] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v5[40] = v28;
  v29 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[41] = swift_task_alloc(v29);
  v5[42] = swift_task_alloc(v29);
  v5[43] = swift_task_alloc(v29);
  v5[44] = swift_task_alloc(v29);
  v5[45] = swift_task_alloc(v29);
  v30 = *(_QWORD *)(v6 + 88);
  v5[46] = v30;
  v32 = type metadata accessor for ContainerDetailDataSource.Source(255, v7, v30, v31);
  v5[47] = v32;
  v33 = type metadata accessor for Optional(0, v32);
  v5[48] = v33;
  v34 = *(_QWORD *)(v33 - 8);
  v5[49] = v34;
  v5[50] = swift_task_alloc((*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Optional(255, v7);
  v5[51] = v35;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v33, v35, 0, 0);
  v5[52] = TupleTypeMetadata2;
  v37 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5[53] = v37;
  v5[54] = swift_task_alloc((*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v30, v7, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v30, v7, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v40 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v5[55] = v40;
  v41 = type metadata accessor for Optional(0, v40);
  v5[56] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v5[57] = v42;
  v43 = (*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[58] = swift_task_alloc(v43);
  v5[59] = swift_task_alloc(v43);
  v5[60] = swift_task_alloc(v43);
  v5[61] = swift_task_alloc(v43);
  v44 = *(_QWORD *)(v35 - 8);
  v5[62] = v44;
  v45 = (*(_QWORD *)(v44 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[63] = swift_task_alloc(v45);
  v5[64] = swift_task_alloc(v45);
  v5[65] = swift_task_alloc(v45);
  v5[66] = swift_task_alloc(v45);
  v5[67] = swift_task_alloc(v45);
  return swift_task_switch(sub_1002091F8, 0, 0);
}

uint64_t sub_1002091F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD);
  void (*v86)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 376);
  v130 = *(_QWORD *)(v0 + 392);
  v132 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 496) + 16);
  *(_QWORD *)(v0 + 544) = v10;
  v10(v1, v9, v5);
  v11 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v0 + 552) = v11;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  *(_QWORD *)(v0 + 560) = v12;
  v12(v2, 1, 1, v3);
  v13 = *(int *)(v6 + 48);
  *(_DWORD *)(v0 + 616) = v13;
  v14 = v4 + v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16);
  v15(v4, v8, v132);
  v10(v14, v9, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7) != 1)
  {
    v16 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(_QWORD *)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = *(_QWORD *)(v0 + 56);
    v15(v16, *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
    LODWORD(v16) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v14, 1, v19);
    if ((_DWORD)v16 == 1)
    {
      if (v21 != 1)
      {
        v22 = *(_QWORD *)(v0 + 528);
        v23 = *(_QWORD *)(v0 + 360);
        v24 = *(_QWORD *)(v0 + 312);
        v25 = *(_QWORD *)(v0 + 48);
        v10(v22, v14, *(_QWORD *)(v0 + 408));
        if (swift_dynamicCast(v23, v22, v25, v24, 0))
        {
          v26 = *(_QWORD *)(v0 + 304);
          v27 = *(_QWORD *)(v0 + 280);
          v28 = *(_QWORD *)(v0 + 288);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 32))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 312));
          v29 = sub_100007E8C((uint64_t *)&unk_1011A1470);
          v30 = swift_allocObject(v29, 56, 7);
          *(_OWORD *)(v30 + 16) = xmmword_100EA7AD0;
          sub_100007E8C((uint64_t *)&unk_1011B6AB0);
          *(_QWORD *)(v30 + 32) = static PartialMusicProperty<A>.tracks.getter();
          *(_QWORD *)(v30 + 40) = static PartialMusicProperty<A>.recordLabels.getter();
          v31 = static PartialMusicProperty<A>.tracksPopularity.getter();
          *(_QWORD *)(v30 + 48) = v31;
          specialized Array._endMutation()(v31);
          *(_QWORD *)(v0 + 568) = v30;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v26, enum case for MusicPropertySource.catalog(_:), v27);
          v32 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
          *(_QWORD *)(v0 + 576) = v32;
          v33 = sub_100048748(&qword_10119F200, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
          *v32 = v0;
          v32[1] = sub_100209B78;
          v34 = *(_QWORD *)(v0 + 344);
          v35 = *(_QWORD *)(v0 + 304);
          v36 = *(_QWORD *)(v0 + 312);
          v37 = &protocol witness table for Album;
          v38 = &protocol witness table for Album;
          return MusicItem<>.with(_:preferredSource:)(v34, v30, v35, v36, v37, v38, v33);
        }
        if (swift_dynamicCast(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 224), 0))
        {
          v53 = *(_QWORD *)(v0 + 288);
          v52 = *(_QWORD *)(v0 + 296);
          v54 = *(_QWORD *)(v0 + 280);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 32))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 224));
          v55 = sub_100007E8C((uint64_t *)&unk_1011A1470);
          v30 = swift_allocObject(v55, 40, 7);
          *(_OWORD *)(v30 + 16) = xmmword_100EA7A90;
          sub_100007E8C(&qword_10119F4A8);
          v56 = static PartialMusicProperty<A>.entries.getter();
          *(_QWORD *)(v30 + 32) = v56;
          specialized Array._endMutation()(v56);
          *(_QWORD *)(v0 + 584) = v30;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 104))(v52, enum case for MusicPropertySource.catalog(_:), v54);
          v57 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
          *(_QWORD *)(v0 + 592) = v57;
          v33 = sub_100048748((unint64_t *)&unk_1011D0D80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
          *v57 = v0;
          v57[1] = sub_10020A078;
          v35 = *(_QWORD *)(v0 + 296);
          v34 = *(_QWORD *)(v0 + 256);
          v36 = *(_QWORD *)(v0 + 224);
          v37 = &protocol witness table for Playlist;
          v38 = &protocol witness table for Playlist;
          return MusicItem<>.with(_:preferredSource:)(v34, v30, v35, v36, v37, v38, v33);
        }
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 48));
      }
    }
    else
    {
      if (v21 == 1)
      {
        v39 = *(_QWORD *)(v0 + 400);
      }
      else
      {
        v40 = *(_QWORD *)(v0 + 504);
        v41 = *(_QWORD *)(v0 + 336);
        v42 = *(_QWORD *)(v0 + 312);
        v43 = *(_QWORD *)(v0 + 48);
        v10(v40, v14, *(_QWORD *)(v0 + 408));
        if (swift_dynamicCast(v41, v40, v43, v42, 0))
        {
          v44 = *(_QWORD *)(v0 + 328);
          v45 = *(_QWORD *)(v0 + 336);
          v46 = *(_QWORD *)(v0 + 312);
          v47 = *(_QWORD *)(v0 + 320);
          v48 = *(_QWORD **)(v0 + 216);
          sub_10005B6C0(*(_QWORD *)(v0 + 400), (uint64_t)v48, type metadata accessor for Library.Context);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v44, v45, v46);
          v49 = type metadata accessor for Track(0);
          MusicLibraryRequest.init()(v49, &protocol witness table for Track);
          sub_100203174(v44, v48);
          v50 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
          *(_QWORD *)(v0 + 600) = v50;
          *v50 = v0;
          v50[1] = sub_10020A578;
          return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
        }
        if (swift_dynamicCast(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 224), 0))
        {
          v59 = *(_QWORD *)(v0 + 240);
          v58 = *(_QWORD *)(v0 + 248);
          v60 = *(_QWORD *)(v0 + 224);
          v61 = *(_QWORD *)(v0 + 232);
          v62 = *(_QWORD **)(v0 + 208);
          v64 = *(_QWORD *)(v0 + 104);
          v63 = *(_QWORD *)(v0 + 112);
          sub_10005B6C0(*(_QWORD *)(v0 + 400), (uint64_t)v62, type metadata accessor for Library.Context);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v59, v58, v60);
          v65 = type metadata accessor for Playlist.Entry(0);
          MusicLibraryRequest.init()(v65, &protocol witness table for Playlist.Entry);
          KeyPath = swift_getKeyPath(&unk_100EAF218);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v64, v59, v60);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v64, 0, 1, v60);
          v67 = sub_100048748((unint64_t *)&qword_1011A60B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
          MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v64, v63, &protocol witness table for Playlist.Entry, v67);
          swift_release(KeyPath);
          sub_10004FF60(v64, &qword_1011A30F0);
          MusicLibraryRequest.apply(_:)(v62, v63);
          v68 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
          *(_QWORD *)(v0 + 608) = v68;
          *v68 = v0;
          v68[1] = sub_10020ABB4;
          return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 112));
        }
        v69 = *(_QWORD *)(v0 + 400);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 48));
        v39 = v69;
      }
      sub_10005B748(v39, type metadata accessor for Library.Context);
    }
  }
  v133 = *(_QWORD *)(v0 + 552);
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v71 = *(_QWORD *)(v0 + 536);
  v72 = *(_QWORD *)(v0 + 488);
  v74 = *(_QWORD *)(v0 + 456);
  v73 = *(_QWORD *)(v0 + 464);
  v76 = *(_QWORD *)(v0 + 440);
  v75 = *(_QWORD *)(v0 + 448);
  v77 = *(_QWORD *)(v0 + 408);
  v78 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 416));
  v70(v78, v71, v77);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v73, v72, v75);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v73, 1, v76) == 1)
  {
    v79 = *(_QWORD *)(v0 + 536);
    v80 = *(_QWORD *)(v0 + 48);
    v81 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v83 = *(_QWORD *)(v0 + 440);
      v84 = *(_QWORD *)(v0 + 24);
      v85 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v85(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v82(v84, 1, 1, v83);
      v85(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v91 = *(_QWORD *)(v0 + 488);
      v92 = *(_QWORD *)(v0 + 448);
      v93 = *(_QWORD *)(v0 + 456);
      v94 = *(_QWORD *)(v0 + 368);
      v95 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v95, v79, v80);
      (*(void (**)(uint64_t, uint64_t))(v94 + 176))(v80, v94);
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v95, v80);
      v96 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
      v96(v91, v92);
      v96(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v86 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v87 = *(_QWORD *)(v0 + 552);
    v88 = *(_QWORD *)(v0 + 464);
    v89 = *(_QWORD *)(v0 + 440);
    v90 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v90, v88, v89);
    v86(v90, 0, 1, v89);
  }
  v97 = *(_QWORD *)(v0 + 536);
  v98 = *(_QWORD *)(v0 + 528);
  v99 = *(_QWORD *)(v0 + 520);
  v101 = *(_QWORD *)(v0 + 504);
  v100 = *(_QWORD *)(v0 + 512);
  v102 = *(_QWORD *)(v0 + 488);
  v104 = *(_QWORD *)(v0 + 472);
  v103 = *(_QWORD *)(v0 + 480);
  v105 = *(_QWORD *)(v0 + 464);
  v106 = *(_QWORD *)(v0 + 432);
  v107 = *(_QWORD *)(v0 + 400);
  v108 = *(_QWORD *)(v0 + 360);
  v109 = *(_QWORD *)(v0 + 352);
  v110 = *(_QWORD *)(v0 + 344);
  v111 = *(_QWORD *)(v0 + 336);
  v112 = *(_QWORD *)(v0 + 328);
  v113 = *(_QWORD *)(v0 + 304);
  v114 = *(_QWORD *)(v0 + 296);
  v115 = *(_QWORD *)(v0 + 272);
  v116 = *(_QWORD *)(v0 + 264);
  v117 = *(_QWORD *)(v0 + 256);
  v118 = *(_QWORD *)(v0 + 248);
  v119 = *(_QWORD *)(v0 + 240);
  v120 = *(_QWORD *)(v0 + 216);
  v121 = *(_QWORD *)(v0 + 208);
  v122 = *(_QWORD *)(v0 + 184);
  v123 = *(_QWORD *)(v0 + 160);
  v125 = *(_QWORD *)(v0 + 152);
  v126 = *(_QWORD *)(v0 + 144);
  v124 = *(_QWORD *)(v0 + 128);
  v127 = *(_QWORD *)(v0 + 104);
  v128 = *(_QWORD *)(v0 + 96);
  v129 = *(_QWORD *)(v0 + 88);
  v131 = *(_QWORD *)(v0 + 80);
  v134 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v97, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v124);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v131);
  swift_task_dealloc(v134);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100209B78()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 576));
  v3 = v2[71];
  v4 = v2[38];
  v7 = v2 + 35;
  v5 = v2[35];
  v6 = v7[1];
  if (v0)
  {
    swift_bridgeObjectRelease(v3);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = sub_10020B1F4;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_bridgeObjectRelease(v3);
    v8 = sub_100209C2C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100209C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD);
  void (*v29)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 352), v3);
  v6 = swift_dynamicCast(v1, v2, v3, v4, 6);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(v5 + 56))(*(_QWORD *)(v0 + 520), v6 ^ 1u, 1, *(_QWORD *)(v0 + 48));
  v7 = *(_QWORD *)(v0 + 528);
  v8 = *(_QWORD *)(v0 + 496);
  v9 = *(_QWORD *)(v0 + 408);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v8 + 40))(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 520), v9);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v9);
  v75 = *(_QWORD *)(v0 + 552);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v14 = *(_QWORD *)(v0 + 536);
  v15 = *(_QWORD *)(v0 + 488);
  v17 = *(_QWORD *)(v0 + 456);
  v16 = *(_QWORD *)(v0 + 464);
  v19 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 408);
  v21 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v13(v21, v14, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v16, 1, v19) == 1)
  {
    v22 = *(_QWORD *)(v0 + 536);
    v23 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v26 = *(_QWORD *)(v0 + 440);
      v27 = *(_QWORD *)(v0 + 24);
      v28 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v28(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v25(v27, 1, 1, v26);
      v28(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v34 = *(_QWORD *)(v0 + 488);
      v35 = *(_QWORD *)(v0 + 448);
      v36 = *(_QWORD *)(v0 + 456);
      v37 = *(_QWORD *)(v0 + 368);
      v38 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v38, v22, v23);
      (*(void (**)(uint64_t, uint64_t))(v37 + 176))(v23, v37);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v38, v23);
      v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v39(v34, v35);
      v39(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v29 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v30 = *(_QWORD *)(v0 + 552);
    v31 = *(_QWORD *)(v0 + 464);
    v32 = *(_QWORD *)(v0 + 440);
    v33 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v33, v31, v32);
    v29(v33, 0, 1, v32);
  }
  v40 = *(_QWORD *)(v0 + 536);
  v41 = *(_QWORD *)(v0 + 528);
  v42 = *(_QWORD *)(v0 + 520);
  v44 = *(_QWORD *)(v0 + 504);
  v43 = *(_QWORD *)(v0 + 512);
  v45 = *(_QWORD *)(v0 + 488);
  v47 = *(_QWORD *)(v0 + 472);
  v46 = *(_QWORD *)(v0 + 480);
  v48 = *(_QWORD *)(v0 + 464);
  v50 = *(_QWORD *)(v0 + 432);
  v51 = *(_QWORD *)(v0 + 400);
  v52 = *(_QWORD *)(v0 + 360);
  v53 = *(_QWORD *)(v0 + 352);
  v54 = *(_QWORD *)(v0 + 344);
  v55 = *(_QWORD *)(v0 + 336);
  v56 = *(_QWORD *)(v0 + 328);
  v57 = *(_QWORD *)(v0 + 304);
  v58 = *(_QWORD *)(v0 + 296);
  v59 = *(_QWORD *)(v0 + 272);
  v60 = *(_QWORD *)(v0 + 264);
  v61 = *(_QWORD *)(v0 + 256);
  v62 = *(_QWORD *)(v0 + 248);
  v63 = *(_QWORD *)(v0 + 240);
  v64 = *(_QWORD *)(v0 + 216);
  v65 = *(_QWORD *)(v0 + 208);
  v66 = *(_QWORD *)(v0 + 184);
  v67 = *(_QWORD *)(v0 + 160);
  v69 = *(_QWORD *)(v0 + 152);
  v70 = *(_QWORD *)(v0 + 144);
  v68 = *(_QWORD *)(v0 + 128);
  v71 = *(_QWORD *)(v0 + 104);
  v72 = *(_QWORD *)(v0 + 96);
  v73 = *(_QWORD *)(v0 + 88);
  v74 = *(_QWORD *)(v0 + 80);
  v76 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v40, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v68);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020A078()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 592));
  v3 = v2[73];
  v5 = v2[36];
  v4 = v2[37];
  v6 = v2[35];
  if (v0)
  {
    swift_bridgeObjectRelease(v3);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v7 = sub_10020B620;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_bridgeObjectRelease(v3);
    v7 = sub_10020A12C;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10020A12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD);
  void (*v29)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 264), v3);
  v6 = swift_dynamicCast(v1, v2, v3, v4, 6);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(v5 + 56))(*(_QWORD *)(v0 + 512), v6 ^ 1u, 1, *(_QWORD *)(v0 + 48));
  v7 = *(_QWORD *)(v0 + 528);
  v8 = *(_QWORD *)(v0 + 496);
  v9 = *(_QWORD *)(v0 + 408);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v8 + 40))(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 512), v9);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v9);
  v75 = *(_QWORD *)(v0 + 552);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v14 = *(_QWORD *)(v0 + 536);
  v15 = *(_QWORD *)(v0 + 488);
  v17 = *(_QWORD *)(v0 + 456);
  v16 = *(_QWORD *)(v0 + 464);
  v19 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 408);
  v21 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v13(v21, v14, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v16, 1, v19) == 1)
  {
    v22 = *(_QWORD *)(v0 + 536);
    v23 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v26 = *(_QWORD *)(v0 + 440);
      v27 = *(_QWORD *)(v0 + 24);
      v28 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v28(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v25(v27, 1, 1, v26);
      v28(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v34 = *(_QWORD *)(v0 + 488);
      v35 = *(_QWORD *)(v0 + 448);
      v36 = *(_QWORD *)(v0 + 456);
      v37 = *(_QWORD *)(v0 + 368);
      v38 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v38, v22, v23);
      (*(void (**)(uint64_t, uint64_t))(v37 + 176))(v23, v37);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v38, v23);
      v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v39(v34, v35);
      v39(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v29 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v30 = *(_QWORD *)(v0 + 552);
    v31 = *(_QWORD *)(v0 + 464);
    v32 = *(_QWORD *)(v0 + 440);
    v33 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v33, v31, v32);
    v29(v33, 0, 1, v32);
  }
  v40 = *(_QWORD *)(v0 + 536);
  v41 = *(_QWORD *)(v0 + 528);
  v42 = *(_QWORD *)(v0 + 520);
  v44 = *(_QWORD *)(v0 + 504);
  v43 = *(_QWORD *)(v0 + 512);
  v45 = *(_QWORD *)(v0 + 488);
  v47 = *(_QWORD *)(v0 + 472);
  v46 = *(_QWORD *)(v0 + 480);
  v48 = *(_QWORD *)(v0 + 464);
  v50 = *(_QWORD *)(v0 + 432);
  v51 = *(_QWORD *)(v0 + 400);
  v52 = *(_QWORD *)(v0 + 360);
  v53 = *(_QWORD *)(v0 + 352);
  v54 = *(_QWORD *)(v0 + 344);
  v55 = *(_QWORD *)(v0 + 336);
  v56 = *(_QWORD *)(v0 + 328);
  v57 = *(_QWORD *)(v0 + 304);
  v58 = *(_QWORD *)(v0 + 296);
  v59 = *(_QWORD *)(v0 + 272);
  v60 = *(_QWORD *)(v0 + 264);
  v61 = *(_QWORD *)(v0 + 256);
  v62 = *(_QWORD *)(v0 + 248);
  v63 = *(_QWORD *)(v0 + 240);
  v64 = *(_QWORD *)(v0 + 216);
  v65 = *(_QWORD *)(v0 + 208);
  v66 = *(_QWORD *)(v0 + 184);
  v67 = *(_QWORD *)(v0 + 160);
  v69 = *(_QWORD *)(v0 + 152);
  v70 = *(_QWORD *)(v0 + 144);
  v68 = *(_QWORD *)(v0 + 128);
  v71 = *(_QWORD *)(v0 + 104);
  v72 = *(_QWORD *)(v0 + 96);
  v73 = *(_QWORD *)(v0 + 88);
  v74 = *(_QWORD *)(v0 + 80);
  v76 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v40, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v68);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020A578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 600));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_10020BA4C;
  }
  else
  {
    v2 = sub_10020A5E4;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020A5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD);
  void (*v49)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = sub_100007E8C(&qword_10119F2F0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  v3 = *(_QWORD *)(v0 + 152);
  sub_10004A160(*(_QWORD *)(v0 + 160), v3, &qword_10119F2D8);
  v4 = sub_100007E8C(&qword_10119F2F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v104 = *(_QWORD *)(v0 + 488);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 456);
    v101 = *(_QWORD *)(v0 + 448);
    v9 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 328);
    v10 = *(_QWORD *)(v0 + 312);
    v11 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 152);
    sub_10004FF60(*(_QWORD *)(v0 + 160), &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_10005B748(v11, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v104, v101);
    sub_10004FF60(v15, &qword_10119F2D8);
    v16 = 1;
  }
  else
  {
    v93 = *(_QWORD *)(v0 + 456);
    v95 = *(_QWORD *)(v0 + 448);
    v99 = *(_QWORD *)(v0 + 440);
    v102 = *(_QWORD *)(v0 + 480);
    v17 = *(_QWORD *)(v0 + 320);
    v87 = *(_QWORD *)(v0 + 312);
    v89 = *(_QWORD *)(v0 + 328);
    v91 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 152);
    v97 = *(_QWORD *)(v0 + 136);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v21, &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v89, v87);
    sub_10005B748(v91, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v104, v95);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    v16 = swift_dynamicCast(v102, v22, v97, v99, 6) ^ 1;
  }
  v24 = *(_QWORD *)(v0 + 504);
  v105 = *(_QWORD *)(v0 + 496);
  v26 = *(_QWORD *)(v0 + 480);
  v25 = *(_QWORD *)(v0 + 488);
  v27 = *(_QWORD *)(v0 + 448);
  v28 = *(_QWORD *)(v0 + 456);
  v29 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  v31 = *(_QWORD *)(v0 + 48);
  v32 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 560))(v26, v16, 1, *(_QWORD *)(v0 + 440));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v24, v31);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v30, v29);
  v106 = *(_QWORD *)(v0 + 552);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v34 = *(_QWORD *)(v0 + 536);
  v35 = *(_QWORD *)(v0 + 488);
  v37 = *(_QWORD *)(v0 + 456);
  v36 = *(_QWORD *)(v0 + 464);
  v39 = *(_QWORD *)(v0 + 440);
  v38 = *(_QWORD *)(v0 + 448);
  v40 = *(_QWORD *)(v0 + 408);
  v41 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v33(v41, v34, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v35, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v36, 1, v39) == 1)
  {
    v42 = *(_QWORD *)(v0 + 536);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v46 = *(_QWORD *)(v0 + 440);
      v47 = *(_QWORD *)(v0 + 24);
      v48 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v48(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v45(v47, 1, 1, v46);
      v48(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v54 = *(_QWORD *)(v0 + 488);
      v55 = *(_QWORD *)(v0 + 448);
      v56 = *(_QWORD *)(v0 + 456);
      v57 = *(_QWORD *)(v0 + 368);
      v58 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v58, v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v57 + 176))(v43, v57);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v58, v43);
      v59 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v59(v54, v55);
      v59(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v49 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v50 = *(_QWORD *)(v0 + 552);
    v51 = *(_QWORD *)(v0 + 464);
    v52 = *(_QWORD *)(v0 + 440);
    v53 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v53, v51, v52);
    v49(v53, 0, 1, v52);
  }
  v60 = *(_QWORD *)(v0 + 536);
  v61 = *(_QWORD *)(v0 + 528);
  v62 = *(_QWORD *)(v0 + 520);
  v64 = *(_QWORD *)(v0 + 504);
  v63 = *(_QWORD *)(v0 + 512);
  v65 = *(_QWORD *)(v0 + 488);
  v67 = *(_QWORD *)(v0 + 472);
  v66 = *(_QWORD *)(v0 + 480);
  v68 = *(_QWORD *)(v0 + 464);
  v70 = *(_QWORD *)(v0 + 432);
  v71 = *(_QWORD *)(v0 + 400);
  v72 = *(_QWORD *)(v0 + 360);
  v73 = *(_QWORD *)(v0 + 352);
  v74 = *(_QWORD *)(v0 + 344);
  v75 = *(_QWORD *)(v0 + 336);
  v76 = *(_QWORD *)(v0 + 328);
  v77 = *(_QWORD *)(v0 + 304);
  v78 = *(_QWORD *)(v0 + 296);
  v79 = *(_QWORD *)(v0 + 272);
  v80 = *(_QWORD *)(v0 + 264);
  v81 = *(_QWORD *)(v0 + 256);
  v82 = *(_QWORD *)(v0 + 248);
  v83 = *(_QWORD *)(v0 + 240);
  v84 = *(_QWORD *)(v0 + 216);
  v85 = *(_QWORD *)(v0 + 208);
  v86 = *(_QWORD *)(v0 + 184);
  v88 = *(_QWORD *)(v0 + 160);
  v92 = *(_QWORD *)(v0 + 152);
  v94 = *(_QWORD *)(v0 + 144);
  v90 = *(_QWORD *)(v0 + 128);
  v96 = *(_QWORD *)(v0 + 104);
  v98 = *(_QWORD *)(v0 + 96);
  v100 = *(_QWORD *)(v0 + 88);
  v103 = *(_QWORD *)(v0 + 80);
  v107 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v60, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v90);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v103);
  swift_task_dealloc(v107);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020ABB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 608));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_10020C01C;
  }
  else
  {
    v2 = sub_10020AC20;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020AC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD);
  void (*v49)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  v3 = *(_QWORD *)(v0 + 88);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_10119F490);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v104 = *(_QWORD *)(v0 + 488);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 456);
    v101 = *(_QWORD *)(v0 + 448);
    v9 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 88);
    sub_10004FF60(*(_QWORD *)(v0 + 96), &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_10005B748(v11, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v104, v101);
    sub_10004FF60(v15, &qword_10119F490);
    v16 = 1;
  }
  else
  {
    v93 = *(_QWORD *)(v0 + 456);
    v95 = *(_QWORD *)(v0 + 448);
    v99 = *(_QWORD *)(v0 + 440);
    v102 = *(_QWORD *)(v0 + 472);
    v17 = *(_QWORD *)(v0 + 232);
    v87 = *(_QWORD *)(v0 + 224);
    v89 = *(_QWORD *)(v0 + 240);
    v91 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 80);
    v97 = *(_QWORD *)(v0 + 72);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v22, &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v89, v87);
    sub_10005B748(v91, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v104, v95);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    v16 = swift_dynamicCast(v102, v23, v97, v99, 6) ^ 1;
  }
  v24 = *(_QWORD *)(v0 + 504);
  v105 = *(_QWORD *)(v0 + 496);
  v25 = *(_QWORD *)(v0 + 488);
  v26 = *(_QWORD *)(v0 + 472);
  v27 = *(_QWORD *)(v0 + 448);
  v28 = *(_QWORD *)(v0 + 456);
  v29 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  v31 = *(_QWORD *)(v0 + 48);
  v32 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 560))(v26, v16, 1, *(_QWORD *)(v0 + 440));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v24, v31);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v30, v29);
  v106 = *(_QWORD *)(v0 + 552);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v34 = *(_QWORD *)(v0 + 536);
  v35 = *(_QWORD *)(v0 + 488);
  v37 = *(_QWORD *)(v0 + 456);
  v36 = *(_QWORD *)(v0 + 464);
  v39 = *(_QWORD *)(v0 + 440);
  v38 = *(_QWORD *)(v0 + 448);
  v40 = *(_QWORD *)(v0 + 408);
  v41 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v33(v41, v34, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v35, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v36, 1, v39) == 1)
  {
    v42 = *(_QWORD *)(v0 + 536);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v46 = *(_QWORD *)(v0 + 440);
      v47 = *(_QWORD *)(v0 + 24);
      v48 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v48(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v45(v47, 1, 1, v46);
      v48(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v54 = *(_QWORD *)(v0 + 488);
      v55 = *(_QWORD *)(v0 + 448);
      v56 = *(_QWORD *)(v0 + 456);
      v57 = *(_QWORD *)(v0 + 368);
      v58 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v58, v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v57 + 176))(v43, v57);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v58, v43);
      v59 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v59(v54, v55);
      v59(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v49 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v50 = *(_QWORD *)(v0 + 552);
    v51 = *(_QWORD *)(v0 + 464);
    v52 = *(_QWORD *)(v0 + 440);
    v53 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v53, v51, v52);
    v49(v53, 0, 1, v52);
  }
  v60 = *(_QWORD *)(v0 + 536);
  v61 = *(_QWORD *)(v0 + 528);
  v62 = *(_QWORD *)(v0 + 520);
  v64 = *(_QWORD *)(v0 + 504);
  v63 = *(_QWORD *)(v0 + 512);
  v65 = *(_QWORD *)(v0 + 488);
  v67 = *(_QWORD *)(v0 + 472);
  v66 = *(_QWORD *)(v0 + 480);
  v68 = *(_QWORD *)(v0 + 464);
  v70 = *(_QWORD *)(v0 + 432);
  v71 = *(_QWORD *)(v0 + 400);
  v72 = *(_QWORD *)(v0 + 360);
  v73 = *(_QWORD *)(v0 + 352);
  v74 = *(_QWORD *)(v0 + 344);
  v75 = *(_QWORD *)(v0 + 336);
  v76 = *(_QWORD *)(v0 + 328);
  v77 = *(_QWORD *)(v0 + 304);
  v78 = *(_QWORD *)(v0 + 296);
  v79 = *(_QWORD *)(v0 + 272);
  v80 = *(_QWORD *)(v0 + 264);
  v81 = *(_QWORD *)(v0 + 256);
  v82 = *(_QWORD *)(v0 + 248);
  v83 = *(_QWORD *)(v0 + 240);
  v84 = *(_QWORD *)(v0 + 216);
  v85 = *(_QWORD *)(v0 + 208);
  v86 = *(_QWORD *)(v0 + 184);
  v88 = *(_QWORD *)(v0 + 160);
  v92 = *(_QWORD *)(v0 + 152);
  v94 = *(_QWORD *)(v0 + 144);
  v90 = *(_QWORD *)(v0 + 128);
  v96 = *(_QWORD *)(v0 + 104);
  v98 = *(_QWORD *)(v0 + 96);
  v100 = *(_QWORD *)(v0 + 88);
  v103 = *(_QWORD *)(v0 + 80);
  v107 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v60, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v90);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v103);
  swift_task_dealloc(v107);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020B1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD);
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  v4 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD *)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v5 + 40))(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 520), v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v6);
  v72 = *(_QWORD *)(v0 + 552);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v11 = *(_QWORD *)(v0 + 536);
  v12 = *(_QWORD *)(v0 + 488);
  v14 = *(_QWORD *)(v0 + 456);
  v13 = *(_QWORD *)(v0 + 464);
  v16 = *(_QWORD *)(v0 + 440);
  v15 = *(_QWORD *)(v0 + 448);
  v17 = *(_QWORD *)(v0 + 408);
  v18 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v10(v18, v11, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v12, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v13, 1, v16) == 1)
  {
    v19 = *(_QWORD *)(v0 + 536);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v23 = *(_QWORD *)(v0 + 440);
      v24 = *(_QWORD *)(v0 + 24);
      v25 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v25(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v22(v24, 1, 1, v23);
      v25(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 488);
      v32 = *(_QWORD *)(v0 + 448);
      v33 = *(_QWORD *)(v0 + 456);
      v34 = *(_QWORD *)(v0 + 368);
      v35 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v35, v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v34 + 176))(v20, v34);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v35, v20);
      v36 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v36(v31, v32);
      v36(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v27 = *(_QWORD *)(v0 + 552);
    v28 = *(_QWORD *)(v0 + 464);
    v29 = *(_QWORD *)(v0 + 440);
    v30 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v30, v28, v29);
    v26(v30, 0, 1, v29);
  }
  v37 = *(_QWORD *)(v0 + 536);
  v38 = *(_QWORD *)(v0 + 528);
  v39 = *(_QWORD *)(v0 + 520);
  v41 = *(_QWORD *)(v0 + 504);
  v40 = *(_QWORD *)(v0 + 512);
  v42 = *(_QWORD *)(v0 + 488);
  v44 = *(_QWORD *)(v0 + 472);
  v43 = *(_QWORD *)(v0 + 480);
  v45 = *(_QWORD *)(v0 + 464);
  v47 = *(_QWORD *)(v0 + 432);
  v48 = *(_QWORD *)(v0 + 400);
  v49 = *(_QWORD *)(v0 + 360);
  v50 = *(_QWORD *)(v0 + 352);
  v51 = *(_QWORD *)(v0 + 344);
  v52 = *(_QWORD *)(v0 + 336);
  v53 = *(_QWORD *)(v0 + 328);
  v54 = *(_QWORD *)(v0 + 304);
  v55 = *(_QWORD *)(v0 + 296);
  v56 = *(_QWORD *)(v0 + 272);
  v57 = *(_QWORD *)(v0 + 264);
  v58 = *(_QWORD *)(v0 + 256);
  v59 = *(_QWORD *)(v0 + 248);
  v60 = *(_QWORD *)(v0 + 240);
  v61 = *(_QWORD *)(v0 + 216);
  v62 = *(_QWORD *)(v0 + 208);
  v63 = *(_QWORD *)(v0 + 184);
  v64 = *(_QWORD *)(v0 + 160);
  v66 = *(_QWORD *)(v0 + 152);
  v67 = *(_QWORD *)(v0 + 144);
  v65 = *(_QWORD *)(v0 + 128);
  v68 = *(_QWORD *)(v0 + 104);
  v69 = *(_QWORD *)(v0 + 96);
  v70 = *(_QWORD *)(v0 + 88);
  v71 = *(_QWORD *)(v0 + 80);
  v73 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v37, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v65);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v73);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020B620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD);
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  v4 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD *)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v5 + 40))(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 512), v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v6);
  v72 = *(_QWORD *)(v0 + 552);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v11 = *(_QWORD *)(v0 + 536);
  v12 = *(_QWORD *)(v0 + 488);
  v14 = *(_QWORD *)(v0 + 456);
  v13 = *(_QWORD *)(v0 + 464);
  v16 = *(_QWORD *)(v0 + 440);
  v15 = *(_QWORD *)(v0 + 448);
  v17 = *(_QWORD *)(v0 + 408);
  v18 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v10(v18, v11, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v12, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v13, 1, v16) == 1)
  {
    v19 = *(_QWORD *)(v0 + 536);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v23 = *(_QWORD *)(v0 + 440);
      v24 = *(_QWORD *)(v0 + 24);
      v25 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v25(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v22(v24, 1, 1, v23);
      v25(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 488);
      v32 = *(_QWORD *)(v0 + 448);
      v33 = *(_QWORD *)(v0 + 456);
      v34 = *(_QWORD *)(v0 + 368);
      v35 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v35, v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v34 + 176))(v20, v34);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v35, v20);
      v36 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v36(v31, v32);
      v36(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v27 = *(_QWORD *)(v0 + 552);
    v28 = *(_QWORD *)(v0 + 464);
    v29 = *(_QWORD *)(v0 + 440);
    v30 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v30, v28, v29);
    v26(v30, 0, 1, v29);
  }
  v37 = *(_QWORD *)(v0 + 536);
  v38 = *(_QWORD *)(v0 + 528);
  v39 = *(_QWORD *)(v0 + 520);
  v41 = *(_QWORD *)(v0 + 504);
  v40 = *(_QWORD *)(v0 + 512);
  v42 = *(_QWORD *)(v0 + 488);
  v44 = *(_QWORD *)(v0 + 472);
  v43 = *(_QWORD *)(v0 + 480);
  v45 = *(_QWORD *)(v0 + 464);
  v47 = *(_QWORD *)(v0 + 432);
  v48 = *(_QWORD *)(v0 + 400);
  v49 = *(_QWORD *)(v0 + 360);
  v50 = *(_QWORD *)(v0 + 352);
  v51 = *(_QWORD *)(v0 + 344);
  v52 = *(_QWORD *)(v0 + 336);
  v53 = *(_QWORD *)(v0 + 328);
  v54 = *(_QWORD *)(v0 + 304);
  v55 = *(_QWORD *)(v0 + 296);
  v56 = *(_QWORD *)(v0 + 272);
  v57 = *(_QWORD *)(v0 + 264);
  v58 = *(_QWORD *)(v0 + 256);
  v59 = *(_QWORD *)(v0 + 248);
  v60 = *(_QWORD *)(v0 + 240);
  v61 = *(_QWORD *)(v0 + 216);
  v62 = *(_QWORD *)(v0 + 208);
  v63 = *(_QWORD *)(v0 + 184);
  v64 = *(_QWORD *)(v0 + 160);
  v66 = *(_QWORD *)(v0 + 152);
  v67 = *(_QWORD *)(v0 + 144);
  v65 = *(_QWORD *)(v0 + 128);
  v68 = *(_QWORD *)(v0 + 104);
  v69 = *(_QWORD *)(v0 + 96);
  v70 = *(_QWORD *)(v0 + 88);
  v71 = *(_QWORD *)(v0 + 80);
  v73 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v37, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v65);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v73);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020BA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD);
  void (*v49)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = sub_100007E8C(&qword_10119F2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = *(_QWORD *)(v0 + 152);
  sub_10004A160(*(_QWORD *)(v0 + 160), v3, &qword_10119F2D8);
  v4 = sub_100007E8C(&qword_10119F2F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v104 = *(_QWORD *)(v0 + 488);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 456);
    v101 = *(_QWORD *)(v0 + 448);
    v9 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 328);
    v10 = *(_QWORD *)(v0 + 312);
    v11 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 152);
    sub_10004FF60(*(_QWORD *)(v0 + 160), &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_10005B748(v11, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v104, v101);
    sub_10004FF60(v15, &qword_10119F2D8);
    v16 = 1;
  }
  else
  {
    v93 = *(_QWORD *)(v0 + 456);
    v95 = *(_QWORD *)(v0 + 448);
    v99 = *(_QWORD *)(v0 + 440);
    v102 = *(_QWORD *)(v0 + 480);
    v17 = *(_QWORD *)(v0 + 320);
    v87 = *(_QWORD *)(v0 + 312);
    v89 = *(_QWORD *)(v0 + 328);
    v91 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 152);
    v97 = *(_QWORD *)(v0 + 136);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v21, &qword_10119F2D8);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v89, v87);
    sub_10005B748(v91, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v104, v95);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    v16 = swift_dynamicCast(v102, v22, v97, v99, 6) ^ 1;
  }
  v24 = *(_QWORD *)(v0 + 504);
  v105 = *(_QWORD *)(v0 + 496);
  v26 = *(_QWORD *)(v0 + 480);
  v25 = *(_QWORD *)(v0 + 488);
  v27 = *(_QWORD *)(v0 + 448);
  v28 = *(_QWORD *)(v0 + 456);
  v29 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  v31 = *(_QWORD *)(v0 + 48);
  v32 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 560))(v26, v16, 1, *(_QWORD *)(v0 + 440));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v24, v31);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v30, v29);
  v106 = *(_QWORD *)(v0 + 552);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v34 = *(_QWORD *)(v0 + 536);
  v35 = *(_QWORD *)(v0 + 488);
  v37 = *(_QWORD *)(v0 + 456);
  v36 = *(_QWORD *)(v0 + 464);
  v39 = *(_QWORD *)(v0 + 440);
  v38 = *(_QWORD *)(v0 + 448);
  v40 = *(_QWORD *)(v0 + 408);
  v41 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v33(v41, v34, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v35, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v36, 1, v39) == 1)
  {
    v42 = *(_QWORD *)(v0 + 536);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v46 = *(_QWORD *)(v0 + 440);
      v47 = *(_QWORD *)(v0 + 24);
      v48 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v48(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v45(v47, 1, 1, v46);
      v48(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v54 = *(_QWORD *)(v0 + 488);
      v55 = *(_QWORD *)(v0 + 448);
      v56 = *(_QWORD *)(v0 + 456);
      v57 = *(_QWORD *)(v0 + 368);
      v58 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v58, v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v57 + 176))(v43, v57);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v58, v43);
      v59 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v59(v54, v55);
      v59(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v49 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v50 = *(_QWORD *)(v0 + 552);
    v51 = *(_QWORD *)(v0 + 464);
    v52 = *(_QWORD *)(v0 + 440);
    v53 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v53, v51, v52);
    v49(v53, 0, 1, v52);
  }
  v60 = *(_QWORD *)(v0 + 536);
  v61 = *(_QWORD *)(v0 + 528);
  v62 = *(_QWORD *)(v0 + 520);
  v64 = *(_QWORD *)(v0 + 504);
  v63 = *(_QWORD *)(v0 + 512);
  v65 = *(_QWORD *)(v0 + 488);
  v67 = *(_QWORD *)(v0 + 472);
  v66 = *(_QWORD *)(v0 + 480);
  v68 = *(_QWORD *)(v0 + 464);
  v70 = *(_QWORD *)(v0 + 432);
  v71 = *(_QWORD *)(v0 + 400);
  v72 = *(_QWORD *)(v0 + 360);
  v73 = *(_QWORD *)(v0 + 352);
  v74 = *(_QWORD *)(v0 + 344);
  v75 = *(_QWORD *)(v0 + 336);
  v76 = *(_QWORD *)(v0 + 328);
  v77 = *(_QWORD *)(v0 + 304);
  v78 = *(_QWORD *)(v0 + 296);
  v79 = *(_QWORD *)(v0 + 272);
  v80 = *(_QWORD *)(v0 + 264);
  v81 = *(_QWORD *)(v0 + 256);
  v82 = *(_QWORD *)(v0 + 248);
  v83 = *(_QWORD *)(v0 + 240);
  v84 = *(_QWORD *)(v0 + 216);
  v85 = *(_QWORD *)(v0 + 208);
  v86 = *(_QWORD *)(v0 + 184);
  v88 = *(_QWORD *)(v0 + 160);
  v92 = *(_QWORD *)(v0 + 152);
  v94 = *(_QWORD *)(v0 + 144);
  v90 = *(_QWORD *)(v0 + 128);
  v96 = *(_QWORD *)(v0 + 104);
  v98 = *(_QWORD *)(v0 + 96);
  v100 = *(_QWORD *)(v0 + 88);
  v103 = *(_QWORD *)(v0 + 80);
  v107 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v60, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v90);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v103);
  swift_task_dealloc(v107);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020C01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD);
  void (*v49)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = *(_QWORD *)(v0 + 88);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_10119F490);
  v4 = sub_100007E8C((uint64_t *)&unk_1011C6800);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v104 = *(_QWORD *)(v0 + 488);
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(v0 + 456);
    v101 = *(_QWORD *)(v0 + 448);
    v9 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 88);
    sub_10004FF60(*(_QWORD *)(v0 + 96), &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_10005B748(v11, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v104, v101);
    sub_10004FF60(v15, &qword_10119F490);
    v16 = 1;
  }
  else
  {
    v93 = *(_QWORD *)(v0 + 456);
    v95 = *(_QWORD *)(v0 + 448);
    v99 = *(_QWORD *)(v0 + 440);
    v102 = *(_QWORD *)(v0 + 472);
    v17 = *(_QWORD *)(v0 + 232);
    v87 = *(_QWORD *)(v0 + 224);
    v89 = *(_QWORD *)(v0 + 240);
    v91 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 80);
    v97 = *(_QWORD *)(v0 + 72);
    MusicLibraryResponse.items.getter(v4);
    sub_10004FF60(v22, &qword_10119F490);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v89, v87);
    sub_10005B748(v91, type metadata accessor for Library.Context);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v104, v95);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    v16 = swift_dynamicCast(v102, v23, v97, v99, 6) ^ 1;
  }
  v24 = *(_QWORD *)(v0 + 504);
  v105 = *(_QWORD *)(v0 + 496);
  v25 = *(_QWORD *)(v0 + 488);
  v26 = *(_QWORD *)(v0 + 472);
  v27 = *(_QWORD *)(v0 + 448);
  v28 = *(_QWORD *)(v0 + 456);
  v29 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 616);
  v31 = *(_QWORD *)(v0 + 48);
  v32 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 560))(v26, v16, 1, *(_QWORD *)(v0 + 440));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v24, v31);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v30, v29);
  v106 = *(_QWORD *)(v0 + 552);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  v34 = *(_QWORD *)(v0 + 536);
  v35 = *(_QWORD *)(v0 + 488);
  v37 = *(_QWORD *)(v0 + 456);
  v36 = *(_QWORD *)(v0 + 464);
  v39 = *(_QWORD *)(v0 + 440);
  v38 = *(_QWORD *)(v0 + 448);
  v40 = *(_QWORD *)(v0 + 408);
  v41 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  v33(v41, v34, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v35, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v36, 1, v39) == 1)
  {
    v42 = *(_QWORD *)(v0 + 536);
    v43 = *(_QWORD *)(v0 + 48);
    v44 = *(_QWORD *)(v0 + 56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 560);
      v46 = *(_QWORD *)(v0 + 440);
      v47 = *(_QWORD *)(v0 + 24);
      v48 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8);
      v48(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
      v45(v47, 1, 1, v46);
      v48(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
    else
    {
      v54 = *(_QWORD *)(v0 + 488);
      v55 = *(_QWORD *)(v0 + 448);
      v56 = *(_QWORD *)(v0 + 456);
      v57 = *(_QWORD *)(v0 + 368);
      v58 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v58, v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v57 + 176))(v43, v57);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v58, v43);
      v59 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v59(v54, v55);
      v59(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v49 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v50 = *(_QWORD *)(v0 + 552);
    v51 = *(_QWORD *)(v0 + 464);
    v52 = *(_QWORD *)(v0 + 440);
    v53 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 448));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v53, v51, v52);
    v49(v53, 0, 1, v52);
  }
  v60 = *(_QWORD *)(v0 + 536);
  v61 = *(_QWORD *)(v0 + 528);
  v62 = *(_QWORD *)(v0 + 520);
  v64 = *(_QWORD *)(v0 + 504);
  v63 = *(_QWORD *)(v0 + 512);
  v65 = *(_QWORD *)(v0 + 488);
  v67 = *(_QWORD *)(v0 + 472);
  v66 = *(_QWORD *)(v0 + 480);
  v68 = *(_QWORD *)(v0 + 464);
  v70 = *(_QWORD *)(v0 + 432);
  v71 = *(_QWORD *)(v0 + 400);
  v72 = *(_QWORD *)(v0 + 360);
  v73 = *(_QWORD *)(v0 + 352);
  v74 = *(_QWORD *)(v0 + 344);
  v75 = *(_QWORD *)(v0 + 336);
  v76 = *(_QWORD *)(v0 + 328);
  v77 = *(_QWORD *)(v0 + 304);
  v78 = *(_QWORD *)(v0 + 296);
  v79 = *(_QWORD *)(v0 + 272);
  v80 = *(_QWORD *)(v0 + 264);
  v81 = *(_QWORD *)(v0 + 256);
  v82 = *(_QWORD *)(v0 + 248);
  v83 = *(_QWORD *)(v0 + 240);
  v84 = *(_QWORD *)(v0 + 216);
  v85 = *(_QWORD *)(v0 + 208);
  v86 = *(_QWORD *)(v0 + 184);
  v88 = *(_QWORD *)(v0 + 160);
  v92 = *(_QWORD *)(v0 + 152);
  v94 = *(_QWORD *)(v0 + 144);
  v90 = *(_QWORD *)(v0 + 128);
  v96 = *(_QWORD *)(v0 + 104);
  v98 = *(_QWORD *)(v0 + 96);
  v100 = *(_QWORD *)(v0 + 88);
  v103 = *(_QWORD *)(v0 + 80);
  v107 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(v60, *(_QWORD *)(v0 + 408));
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v90);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v103);
  swift_task_dealloc(v107);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020C5F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t AssociatedTypeWitness;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  int v90;
  char *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t WitnessTable;
  char v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  char v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  char *v125;
  char *v126;
  int v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  void (*v134)(char *, uint64_t, uint64_t);
  char *v135;
  void (*v136)(uint64_t, char *, uint64_t);
  void (*v137)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  unint64_t v148;
  char v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  void (*v156)(char *, char *, uint64_t);
  char *v157;
  void (*v158)(char *, char *, uint64_t);
  uint64_t (*v159)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  _QWORD *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t, uint64_t);
  char *v180;
  uint64_t TupleTypeMetadata2;
  char *v182;
  char *v183;
  char *v184;
  uint64_t (*v185)(char *, uint64_t, uint64_t);
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  _QWORD *v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t AssociatedConformanceWitness;

  v189 = a2;
  v4 = *v2;
  v173 = sub_100007E8C(&qword_10119F208);
  __chkstk_darwin(v173);
  v178 = (uint64_t)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119F0B8);
  __chkstk_darwin(v6);
  v168 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v166 = (uint64_t)&v154 - v9;
  __chkstk_darwin(v10);
  v193 = (uint64_t *)((char *)&v154 - v11);
  __chkstk_darwin(v12);
  v192 = (char *)&v154 - v13;
  __chkstk_darwin(v14);
  v191 = (char *)&v154 - v15;
  v16 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v195 = *(_QWORD **)(v16 - 8);
  v196 = v16;
  __chkstk_darwin(v16);
  v163 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v183 = (char *)&v154 - v19;
  v172 = sub_100007E8C(&qword_10119F210);
  __chkstk_darwin(v172);
  v177 = (uint64_t)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v4 + 80);
  v22 = type metadata accessor for Optional(0, v21);
  v198 = *(_QWORD *)(v22 - 8);
  v199 = v22;
  __chkstk_darwin(v22);
  v190 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v187 = (char *)&v154 - v25;
  v26 = sub_100007E8C(&qword_1011A4150);
  __chkstk_darwin(v26);
  v167 = (char *)&v154 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v165 = (uint64_t)&v154 - v29;
  __chkstk_darwin(v30);
  v175 = (uint64_t *)((char *)&v154 - v31);
  __chkstk_darwin(v32);
  v176 = (uint64_t)&v154 - v33;
  __chkstk_darwin(v34);
  v186 = (char *)&v154 - v35;
  v188 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  v197 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v162 = (char *)&v154 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v182 = (char *)&v154 - v38;
  v39 = *(_QWORD *)(v4 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v39, v21, &unk_100F98880, &unk_100F98900);
  v200 = v21;
  v41 = *(_QWORD *)(swift_getAssociatedConformanceWitness(v39, v21, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8)+ 8);
  v164 = AssociatedTypeWitness;
  v42 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, v41);
  v43 = type metadata accessor for Optional(255, v42);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v43, v43, 0, 0);
  v171 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v180 = (char *)&v154 - v44;
  v45 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v46);
  v174 = (char *)&v154 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v170 = (char *)&v154 - v49;
  __chkstk_darwin(v50);
  v184 = (uint64_t *)((char *)&v154 - v51);
  __chkstk_darwin(v52);
  v54 = (char *)&v154 - v53;
  __chkstk_darwin(v55);
  v57 = (char *)&v154 - v56;
  __chkstk_darwin(v58);
  v60 = (char *)&v154 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  v63 = (char *)&v154 - v62;
  v194 = a1;
  v64 = a1;
  v66 = v65;
  sub_10021EB8C(v64);
  v179 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  v179(v57, v189, v43);
  v185 = (uint64_t (*)(char *, uint64_t, uint64_t))v66[6];
  v67 = v185(v57, 1, v42);
  v189 = v39;
  v201 = v2;
  if (v67 == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v57, v43);
    v68 = v187;
    v69 = v196;
    v70 = v197;
    goto LABEL_13;
  }
  v157 = v60;
  v160 = v45;
  v156 = (void (*)(char *, char *, uint64_t))v66[4];
  v156(v63, v57, v42);
  v71 = (void (*)(char *, char *, uint64_t))v66[2];
  v161 = v63;
  v158 = v71;
  v71(v54, v63, v42);
  v169 = v66;
  v159 = (uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v66[7];
  v72 = v159(v54, 0, 1, v42);
  __chkstk_darwin(v72);
  v73 = v39;
  v74 = v43;
  v75 = v42;
  v76 = v200;
  *(&v154 - 2) = v200;
  *(&v154 - 1) = v73;
  KeyPath = swift_getKeyPath(&unk_100EAF3B8);
  __chkstk_darwin(KeyPath);
  *(&v154 - 2) = v76;
  *(&v154 - 1) = v73;
  v78 = v75;
  v79 = v74;
  v80 = swift_getKeyPath(&unk_100EAF3F0);
  v81 = (char *)v184;
  static Published.subscript.getter((char *)v184, v2, KeyPath, v80);
  swift_release(v80);
  v82 = swift_release(KeyPath);
  v83 = TupleTypeMetadata2;
  v84 = v180;
  v85 = &v180[*(int *)(TupleTypeMetadata2 + 48)];
  v86 = v179;
  ((void (*)(char *, char *, uint64_t, __n128))v179)(v180, v54, v74, v82);
  v86(v85, (uint64_t)v81, v74);
  v87 = v73;
  v88 = v84;
  if (v185(v84, 1, v78) == 1)
  {
    v89 = *(void (**)(char *, uint64_t))(v160 + 8);
    v89(v81, v79);
    v89(v54, v79);
    v90 = v185(v85, 1, v78);
    v68 = v187;
    if (v90 == 1)
    {
      v89(v84, v79);
      v69 = v196;
      v70 = v197;
      ((void (*)(char *, uint64_t))v169[1])(v161, v78);
      goto LABEL_13;
    }
    v94 = v83;
    goto LABEL_9;
  }
  v155 = v54;
  v91 = v170;
  v86(v170, (uint64_t)v84, v79);
  v92 = v185(v85, 1, v78);
  v68 = v187;
  v93 = v160;
  if (v92 == 1)
  {
    v94 = v83;
    v89 = *(void (**)(char *, uint64_t))(v160 + 8);
    v89((char *)v184, v79);
    v89(v155, v79);
    ((void (*)(char *, uint64_t))v169[1])(v91, v78);
LABEL_9:
    v69 = v196;
    v70 = v197;
    v95 = v161;
    (*(void (**)(char *, uint64_t))(v171 + 8))(v88, v94);
    goto LABEL_12;
  }
  v96 = v157;
  v156(v157, v85, v78);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v87, v200, v164, &unk_100F98880, &unk_100F988F8);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> MusicItemCollection<A>, v78);
  v98 = dispatch thunk of static Equatable.== infix(_:_:)(v91, v96, v78, WitnessTable);
  v99 = v88;
  v100 = (void (*)(char *, uint64_t))v169[1];
  v100(v96, v78);
  v89 = *(void (**)(char *, uint64_t))(v93 + 8);
  v89((char *)v184, v79);
  v89(v155, v79);
  v100(v91, v78);
  v89(v99, v79);
  v69 = v196;
  v70 = v197;
  v95 = v161;
  if ((v98 & 1) != 0)
  {
    v100(v161, v78);
    goto LABEL_13;
  }
LABEL_12:
  v101 = (uint64_t)v174;
  v158(v174, v95, v78);
  v159((char *)v101, 0, 1, v78);
  sub_10021ED00(v101);
  v89((char *)v101, v79);
  v102 = sub_100214E34();
  ((void (*)(char *, uint64_t, double))v169[1])(v95, v78, v102);
LABEL_13:
  v104 = v198;
  v103 = v199;
  v105 = v194;
  v187 = *(char **)(v198 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v187)(v68, v194, v199);
  v106 = v200;
  v107 = *(_QWORD *)(v200 - 8);
  v185 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
  if (v185(v68, 1, v200) == 1)
  {
    v108 = v107;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v68, v103);
    v109 = (uint64_t)v186;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v186, 1, 1, v188);
LABEL_16:
    sub_10004FF60(v109, &qword_1011A4150);
    v112 = (uint64_t)v192;
    goto LABEL_27;
  }
  v109 = (uint64_t)v186;
  (*(void (**)(uint64_t))(v189 + 184))(v106);
  v103 = v199;
  v108 = v107;
  (*(void (**)(char *, uint64_t))(v107 + 8))(v68, v106);
  v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  v111 = v188;
  if (v110(v109, 1, v188) == 1)
    goto LABEL_16;
  v113 = v182;
  v184 = *(_QWORD **)(v70 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v184)(v182, v109, v111);
  v114 = v176;
  v186 = *(char **)(v70 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v186)(v176, v113, v111);
  v115 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56);
  v115(v114, 0, 1, v111);
  v116 = v175;
  sub_100204334(v175);
  v117 = v177;
  v118 = v177 + *(int *)(v172 + 48);
  sub_10004A160(v114, v177, &qword_1011A4150);
  sub_10004A160((uint64_t)v116, v118, &qword_1011A4150);
  if (v110(v117, 1, v111) != 1)
  {
    v119 = v165;
    sub_10004A160(v117, v165, &qword_1011A4150);
    if (v110(v118, 1, v111) != 1)
    {
      v120 = v162;
      ((void (*)(char *, uint64_t, uint64_t))v184)(v162, v118, v111);
      v121 = sub_1000A30AC();
      v122 = dispatch thunk of static Equatable.== infix(_:_:)(v119, v120, v111, v121);
      v123 = *(void (**)(char *, uint64_t))(v197 + 8);
      v123(v120, v111);
      sub_10004FF60((uint64_t)v175, &qword_1011A4150);
      sub_10004FF60(v176, &qword_1011A4150);
      v123((char *)v119, v111);
      sub_10004FF60(v117, &qword_1011A4150);
      v69 = v196;
      if ((v122 & 1) != 0)
      {
        v123(v182, v111);
        goto LABEL_26;
      }
LABEL_25:
      v124 = (uint64_t)v167;
      v125 = v182;
      ((void (*)(char *, char *, uint64_t))v186)(v167, v182, v111);
      v115(v124, 0, 1, v111);
      sub_100204348(v124);
      (*(void (**)(char *, uint64_t))(v197 + 8))(v125, v111);
      goto LABEL_26;
    }
    sub_10004FF60((uint64_t)v175, &qword_1011A4150);
    sub_10004FF60(v176, &qword_1011A4150);
    (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v119, v111);
LABEL_22:
    sub_10004FF60(v117, &qword_10119F210);
    v69 = v196;
    goto LABEL_25;
  }
  sub_10004FF60((uint64_t)v116, &qword_1011A4150);
  v117 = v177;
  sub_10004FF60(v114, &qword_1011A4150);
  if (v110(v118, 1, v111) != 1)
    goto LABEL_22;
  sub_10004FF60(v117, &qword_1011A4150);
  v69 = v196;
  (*(void (**)(char *, uint64_t))(v197 + 8))(v182, v111);
LABEL_26:
  v112 = (uint64_t)v192;
  v105 = v194;
  v103 = v199;
  v106 = v200;
LABEL_27:
  v126 = v190;
  ((void (*)(char *, uint64_t, uint64_t))v187)(v190, v105, v103);
  v127 = v185(v126, 1, v106);
  v128 = v195;
  v129 = v193;
  if (v127 != 1)
  {
    v131 = v126;
    v130 = (uint64_t)v191;
    (*(void (**)(uint64_t))(v189 + 192))(v106);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v131, v106);
    v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v128[6];
    if (v132(v130, 1, v69) == 1)
      goto LABEL_30;
    v134 = (void (*)(char *, uint64_t, uint64_t))v128[4];
    v135 = v183;
    v134(v183, v130, v69);
    v136 = (void (*)(uint64_t, char *, uint64_t))v128[2];
    v136(v112, v135, v69);
    v137 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v128[7];
    v137(v112, 0, 1, v69);
    sub_100204364(v129);
    v138 = (uint64_t)v129;
    v139 = v178;
    v140 = v178 + *(int *)(v173 + 48);
    sub_10004A160(v112, v178, &qword_10119F0B8);
    v141 = v139;
    sub_10004A160(v138, v140, &qword_10119F0B8);
    if (v132(v139, 1, v69) == 1)
    {
      sub_10004FF60(v138, &qword_10119F0B8);
      v141 = v178;
      sub_10004FF60(v112, &qword_10119F0B8);
      v142 = v132(v140, 1, v69);
      v143 = v195;
      if (v142 == 1)
      {
        sub_10004FF60(v141, &qword_10119F0B8);
        ((void (*)(char *, uint64_t))v143[1])(v183, v69);
        return sub_10020D6B8();
      }
    }
    else
    {
      v144 = v139;
      v145 = v166;
      sub_10004A160(v144, v166, &qword_10119F0B8);
      if (v132(v140, 1, v69) != 1)
      {
        v147 = v163;
        v134(v163, v140, v69);
        v148 = sub_1000A2FD4();
        v149 = dispatch thunk of static Equatable.== infix(_:_:)(v145, v147, v69, v148);
        v150 = v145;
        v143 = v195;
        v151 = (void (*)(char *, uint64_t))v195[1];
        v151(v147, v69);
        sub_10004FF60((uint64_t)v193, &qword_10119F0B8);
        sub_10004FF60(v112, &qword_10119F0B8);
        v151((char *)v150, v69);
        sub_10004FF60(v178, &qword_10119F0B8);
        if ((v149 & 1) != 0)
        {
          v151(v183, v69);
          return sub_10020D6B8();
        }
LABEL_40:
        v152 = (uint64_t)v168;
        v153 = v183;
        v136((uint64_t)v168, v183, v69);
        v137(v152, 0, 1, v69);
        sub_100204378(v152);
        ((void (*)(char *, uint64_t))v143[1])(v153, v69);
        return sub_10020D6B8();
      }
      sub_10004FF60((uint64_t)v193, &qword_10119F0B8);
      sub_10004FF60(v112, &qword_10119F0B8);
      v146 = v145;
      v143 = v195;
      ((void (*)(uint64_t, uint64_t))v195[1])(v146, v69);
    }
    sub_10004FF60(v141, &qword_10119F208);
    goto LABEL_40;
  }
  (*(void (**)(char *, uint64_t))(v198 + 8))(v126, v103);
  v130 = (uint64_t)v191;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v128[7])(v191, 1, 1, v69);
LABEL_30:
  sub_10004FF60(v130, &qword_10119F0B8);
  return sub_10020D6B8();
}

uint64_t sub_10020D6B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  _QWORD *v66;
  _QWORD *WitnessTable;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v1 = *v0;
  v69 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v75 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v65 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119F0B8);
  __chkstk_darwin(v3);
  v80 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v5);
  v77 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v7, v8, &unk_100F98880, &unk_100F98900);
  v10 = *(_QWORD *)(v7 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v7, v8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v76 = v7;
  v12 = swift_getAssociatedConformanceWitness(v7, v8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v85 = v8;
  v86 = AssociatedTypeWitness;
  v87 = v10;
  v88 = AssociatedConformanceWitness;
  v89 = v12;
  v13 = (char *)type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v85);
  WitnessTable = (_QWORD *)swift_getWitnessTable(&unk_100EAF138, v13);
  v66 = (_QWORD *)type metadata accessor for SourcedPlaybackIntent(255, (uint64_t)v13, (uint64_t)WitnessTable, v14);
  v68 = type metadata accessor for Optional(0, v66);
  v74 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v81 = (uint64_t)&v63 - v15;
  v85 = v8;
  v86 = AssociatedTypeWitness;
  v87 = v10;
  v88 = AssociatedConformanceWitness;
  v89 = v12;
  v71 = type metadata accessor for ContainerDetailHeaderView.ViewModel(255, (uint64_t)&v85);
  v16 = type metadata accessor for Optional(0, v71);
  v72 = *(_QWORD *)(v16 - 8);
  v73 = v16;
  __chkstk_darwin(v16);
  v70 = (char *)&v63 - v17;
  v18 = type metadata accessor for Optional(0, v13);
  v78 = *(char **)(v18 - 8);
  v79 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v63 - v19;
  v82 = *((_QWORD *)v13 - 1);
  __chkstk_darwin(v20);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v63 - v24;
  v26 = type metadata accessor for Optional(0, v8);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char **)((char *)&v63 - v28);
  v30 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v31);
  v33 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002039A4(v29);
  v34 = v30;
  v35 = v8;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48))(v29, 1, v8) == 1)
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v27 + 8))(v29, v26);
  v38 = v78;
  v37 = v79;
  v63 = v22;
  v64 = v25;
  v39 = v80;
  (*(void (**)(char *, _QWORD *, uint64_t))(v34 + 32))(v33, v29, v35);
  v40 = v83;
  v41 = v34;
  v42 = v84;
  sub_1002047F4(v43, v83);
  v44 = v82;
  if ((*(unsigned int (**)(char *, uint64_t, char *))(v82 + 48))(v40, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v35);
    return (*((uint64_t (**)(char *, uint64_t))v38 + 1))(v83, v37);
  }
  else
  {
    v45 = v42;
    v78 = v33;
    v79 = v41;
    v46 = v64;
    (*(void (**)(char *, char *, char *))(v44 + 32))(v64, v83, v13);
    v47 = (uint64_t)v63;
    (*(void (**)(char *, char *, char *))(v44 + 16))(v63, v46, v13);
    v48 = v81;
    v83 = v13;
    SourcedPlaybackIntent.init(source:)(v47, (uint64_t)v13, (uint64_t)WitnessTable, v49, v81);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(v66 - 1) + 56))(v48, 0, 1);
    v66 = *(_QWORD **)(v45 + *(_QWORD *)(*(_QWORD *)v45 + 208));
    WitnessTable = v66;
    sub_100204364(v39);
    v50 = v75;
    v51 = v69;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v75 + 48))(v39, 1, v69))
    {
      sub_10004FF60((uint64_t)v39, &qword_10119F0B8);
      v52 = type metadata accessor for Genre(0);
      v53 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v77, 1, 1, v52);
    }
    else
    {
      v54 = v65;
      (*(void (**)(char *, _QWORD *, uint64_t))(v50 + 16))(v65, v39, v51);
      sub_10004FF60((uint64_t)v39, &qword_10119F0B8);
      v53 = v77;
      sub_10031E308(v77);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v54, v51);
    }
    v55 = v76;
    v56 = v74;
    v57 = (uint64_t)v70;
    v58 = sub_100204518();
    v60 = v59;
    v61 = v81;
    v62 = v78;
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 200))(v81, v66, v53, v58, v59, v35, v55);

    swift_bridgeObjectRelease(v60);
    sub_10004FF60(v53, &qword_10119ED08);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v61, v68);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v57, 0, 1);
    sub_10021EEC4(v57);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v57, v73);
    (*(void (**)(char *, char *))(v82 + 8))(v64, v83);
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v62, v35);
  }
}

uint64_t sub_10020DD00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v3[5] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5, v4, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v4, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v8 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v3[6] = v8;
  v9 = type metadata accessor for Optional(0, v8);
  v3[7] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[8] = v10;
  v3[9] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicPropertySource(0);
  v3[10] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[11] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v13);
  v3[13] = swift_task_alloc(v13);
  v14 = type metadata accessor for Optional(0, v4);
  v3[14] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[15] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v16);
  v3[17] = swift_task_alloc(v16);
  v17 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v17);
  v3[19] = swift_task_alloc(v17);
  v3[20] = swift_task_alloc(v17);
  v18 = type metadata accessor for Album(0);
  v3[21] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[22] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[23] = swift_task_alloc(v20);
  v3[24] = swift_task_alloc(v20);
  v3[25] = swift_task_alloc(v20);
  v3[26] = swift_task_alloc(v20);
  v3[27] = swift_task_alloc(v20);
  v22 = type metadata accessor for ContainerDetailDataSource.Source(255, v4, v5, v21);
  v3[28] = v22;
  v23 = type metadata accessor for Optional(0, v22);
  v3[29] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[30] = v24;
  v3[31] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10020DF24, 0, 0);
}

uint64_t sub_10020DF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 224);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 16))(v1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 232));
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 248);
  if (v4 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
LABEL_8:
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 128);
    v44 = *(_QWORD *)(v0 + 104);
    v45 = *(_QWORD *)(v0 + 96);
    v46 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 248));
    swift_task_dealloc(v19);
    swift_task_dealloc(v18);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 224);
  v7 = type metadata accessor for Library.Context(0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v6);
  if (v8 == 1)
    goto LABEL_8;
  v9 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(v9, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 112));
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v0 + 256) = v11;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  v13 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 160);
  if (v12 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v15, 1, 1, v13);
LABEL_7:
    sub_10004FF60(*(_QWORD *)(v0 + 160), &qword_1011A8FA0);
    goto LABEL_8;
  }
  v16 = swift_dynamicCast(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 168), 6);
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56);
  *(_QWORD *)(v0 + 264) = v17;
  v17(v15, v16 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
    goto LABEL_7;
  v29 = *(_QWORD *)(v0 + 208);
  v28 = *(_QWORD *)(v0 + 216);
  v30 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 176);
  v32 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 104);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
  *(_QWORD *)(v0 + 272) = v35;
  v35(v28, v32, v30);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  *(_QWORD *)(v0 + 280) = v36;
  v36(v29, v28, v30);
  v37 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  *(_QWORD *)(v0 + 288) = v37;
  v38 = swift_allocObject(v37, 40, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v0 + 296) = sub_100007E8C((uint64_t *)&unk_1011B6AB0);
  v39 = static PartialMusicProperty<A>.recordLabels.getter();
  *(_QWORD *)(v38 + 32) = v39;
  specialized Array._endMutation()(v39);
  *(_QWORD *)(v0 + 304) = v38;
  *(_DWORD *)(v0 + 384) = enum case for MusicPropertySource.catalog(_:);
  v40 = *(void (**)(uint64_t))(v34 + 104);
  *(_QWORD *)(v0 + 312) = v40;
  v40(v33);
  v41 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
  *(_QWORD *)(v0 + 320) = v41;
  v42 = sub_100048748(&qword_10119F200, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  *(_QWORD *)(v0 + 328) = v42;
  *v41 = v0;
  v41[1] = sub_10020E2C0;
  return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 152), v38, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 168), &protocol witness table for Album, &protocol witness table for Album, v42);
}

uint64_t sub_10020E2C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)();
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 320));
  v3 = v2[38];
  v4 = v2[13];
  v5 = v2[10];
  v6 = v2[11];
  if (v0)
  {
    swift_bridgeObjectRelease(v2[38]);
    swift_errorRelease(v0);
    v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v2[47] = v7;
    v7(v4, v5);
    v8 = sub_10020E854;
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v2[42] = v9;
    v9(v4, v5);
    swift_bridgeObjectRelease(v3);
    v8 = sub_10020E37C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_10020E37C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 264))(v6, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v1(v2, v6, v4);
  v1(v3, v2, v4);
  *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 336);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 312);
  v8 = *(unsigned int *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = swift_allocObject(*(_QWORD *)(v0 + 288), 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7A90;
  v12 = static PartialMusicProperty<A>.genres.getter();
  *(_QWORD *)(v11 + 32) = v12;
  specialized Array._endMutation()(v12);
  *(_QWORD *)(v0 + 352) = v11;
  v7(v9, v8, v10);
  v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
  *(_QWORD *)(v0 + 360) = v13;
  *v13 = v0;
  v13[1] = sub_10020E4C0;
  return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 144), v11, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 168), &protocol witness table for Album, &protocol witness table for Album, *(_QWORD *)(v0 + 328));
}

uint64_t sub_10020E4C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 360));
  v4 = (void (*)(uint64_t, uint64_t))v2[43];
  v3 = v2[44];
  v5 = v2[12];
  v6 = v2[10];
  if (v0)
  {
    swift_bridgeObjectRelease(v3);
    swift_errorRelease(v0);
    v4(v5, v6);
    v7 = sub_10020E970;
  }
  else
  {
    v4(v5, v6);
    swift_bridgeObjectRelease(v3);
    v7 = sub_10020E56C;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10020E56C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 264))(v6, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  v1(v3, v6, v4);
  v1(v2, v3, v4);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 280))(v8, *(_QWORD *)(v0 + 208), v9);
  v14 = swift_dynamicCast(v10, v8, v9, v13, 6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, v14 ^ 1u, 1, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v15 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 368) = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020E6BC, v17, v18);
}

uint64_t sub_10020E6BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[15];
  v1 = v0[16];
  v3 = v0[14];
  v5 = v0[8];
  v4 = v0[9];
  v6 = v0[7];
  swift_release(v0[46]);
  sub_10020C5F0(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10020E750, 0, 0);
}

uint64_t sub_10020E750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8);
  v3(*(_QWORD *)(v0 + 208), v2);
  v3(v1, v2);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020E854()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 264))(v1, 1, 1, *(_QWORD *)(v0 + 168));
  sub_10004FF60(v1, &qword_1011A8FA0);
  *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 376);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 312);
  v3 = *(unsigned int *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = swift_allocObject(*(_QWORD *)(v0 + 288), 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA7A90;
  v7 = static PartialMusicProperty<A>.genres.getter();
  *(_QWORD *)(v6 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v0 + 352) = v6;
  v2(v4, v3, v5);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:preferredSource:)[1]);
  *(_QWORD *)(v0 + 360) = v8;
  *v8 = v0;
  v8[1] = sub_10020E4C0;
  return MusicItem<>.with(_:preferredSource:)(*(_QWORD *)(v0 + 144), v6, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 168), &protocol witness table for Album, &protocol witness table for Album, *(_QWORD *)(v0 + 328));
}

uint64_t sub_10020E970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 264))(v1, 1, 1, *(_QWORD *)(v0 + 168));
  sub_10004FF60(v1, &qword_1011A8FA0);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 280))(v3, *(_QWORD *)(v0 + 208), v4);
  v9 = swift_dynamicCast(v5, v3, v4, v8, 6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v5, v9 ^ 1u, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 368) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020E6BC, v12, v13);
}

uint64_t sub_10020EA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 88);
  v4[14] = v6;
  v7 = *(_QWORD *)(v5 + 80);
  v4[15] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v7, &unk_100F98880, &unk_100F98900);
  v4[16] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v7, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v4[17] = AssociatedConformanceWitness;
  v10 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v4[18] = v10;
  v11 = type metadata accessor for Optional(0, v10);
  v4[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[20] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[21] = swift_task_alloc(v13);
  v4[22] = swift_task_alloc(v13);
  v14 = *(_QWORD *)(v10 - 8);
  v4[23] = v14;
  v4[24] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Optional(0, v7);
  v4[25] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[26] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[27] = swift_task_alloc(v17);
  v4[28] = swift_task_alloc(v17);
  v18 = *(_QWORD *)(v7 - 8);
  v4[29] = v18;
  v4[30] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MainActor(0);
  v4[31] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v4[32] = v21;
  v4[33] = v22;
  return swift_task_switch(sub_10020EC34, v21, v22);
}

uint64_t sub_10020EC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  void (*v34)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v35)(uint64_t, uint64_t, uint64_t);
  void (*v36)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v37;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 16))(v1, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 200));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    v7 = swift_release(*(_QWORD *)(v0 + 248));
    (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v4, v5, v7);
LABEL_5:
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 192);
    v23 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v20);
    swift_task_dealloc(v19);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 32))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v13, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v8, 1, v12) == 1)
  {
    v14 = *(_QWORD *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 160);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 120));
    v18 = swift_release(v14);
    (*(void (**)(uint64_t, uint64_t, __n128))(v17 + 8))(v15, v16, v18);
    goto LABEL_5;
  }
  v26 = *(_QWORD *)(v0 + 232);
  v25 = *(_QWORD *)(v0 + 240);
  v27 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 184);
  v28 = *(_QWORD *)(v0 + 192);
  v30 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 32))(v28, *(_QWORD *)(v0 + 176), v31);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  *(_QWORD *)(v0 + 272) = v33;
  v33(v30, v28, v31);
  v34 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56);
  *(_QWORD *)(v0 + 280) = v34;
  v34(v30, 0, 1, v31);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  *(_QWORD *)(v0 + 288) = v35;
  v35(v27, v25, v32);
  v36 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
  *(_QWORD *)(v0 + 296) = v36;
  v36(v27, 0, 1, v32);
  v37 = (_QWORD *)swift_task_alloc(dword_1011A7444);
  *(_QWORD *)(v0 + 304) = v37;
  *v37 = v0;
  v37[1] = sub_10020EE6C;
  return sub_10020F268(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 216));
}

uint64_t sub_10020EE6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 312) = a1;
  swift_task_dealloc(v3);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v2[40] = v10;
  v10(v4, v6);
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v2[41] = v11;
  v11(v7, v9);
  return swift_task_switch(sub_10020EF14, v2[32], v2[33]);
}

uint64_t sub_10020EF14()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 288);
  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 296);
  v3 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 280);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 272))(v6, *(_QWORD *)(v0 + 192), v7);
  v3(v6, 0, 1, v7);
  v2(v5, v4, v8);
  v1(v5, 0, 1, v8);
  v9 = (_QWORD *)swift_task_alloc(dword_1011A744C);
  *(_QWORD *)(v0 + 336) = v9;
  *v9 = v0;
  v9[1] = sub_10020EFE4;
  return sub_1002105A8(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 96));
}

uint64_t sub_10020EFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD **)v2;
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 328);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 336);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 320);
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 216);
  v8 = *(_QWORD *)(*(_QWORD *)v2 + 200);
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  v10 = *(_QWORD *)(*(_QWORD *)v2 + 152);
  v3[43] = a1;
  v3[44] = a2;
  swift_task_dealloc(v4);
  v6(v7, v8);
  v5(v9, v10);
  return swift_task_switch(sub_10020F080, v3[32], v3[33]);
}

uint64_t sub_10020F080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 248));
  *(_QWORD *)(v0 + 72) = v1;
  v5 = *(_QWORD *)(v4 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v3, v2, &unk_100F98880, &unk_100F988E0);
  v7 = swift_getAssociatedConformanceWitness(v4, v3, v2, &unk_100F98880, &unk_100F988E8);
  v8 = swift_getAssociatedConformanceWitness(v4, v3, v2, &unk_100F98880, &unk_100F988F0);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v27;
  *(_QWORD *)(v0 + 48) = AssociatedConformanceWitness;
  *(_QWORD *)(v0 + 56) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  type metadata accessor for ContainerHeaderRow.ViewModel(255, v0 + 16);
  v9 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v9);
  v11 = Collection.isEmpty.getter(v9, WitnessTable);
  v12 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 344);
  v14 = *(_QWORD *)(v0 + 312);
  v26 = *(_QWORD *)(v0 + 232);
  v28 = *(_QWORD *)(v0 + 240);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 120);
  if ((v11 & 1) != 0)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v13);
    sub_100203D30(v14);
  }
  else
  {
    swift_bridgeObjectRelease(v14);
    v19 = swift_bridgeObjectRetain();
    sub_100203D58(v19);
    swift_bridgeObjectRelease(v12);
    sub_100203E08(v13);
  }
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v18);
  v20 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 168);
  v23 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020F268(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v3[24] = v5;
  v6 = *(_QWORD *)(v4 + 88);
  v3[25] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &unk_100F98880, &unk_100F98900);
  v3[26] = AssociatedTypeWitness;
  v8 = *(_QWORD *)(v6 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v10 = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v11 = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v12 = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
  v3[2] = v5;
  v3[3] = AssociatedTypeWitness;
  v3[4] = v8;
  v3[5] = AssociatedConformanceWitness;
  v3[6] = v10;
  v3[7] = v11;
  v3[8] = v12;
  v13 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)(v3 + 2));
  v3[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[28] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[29] = swift_task_alloc(v15);
  v3[30] = swift_task_alloc(v15);
  v16 = type metadata accessor for Optional(0, v13);
  v3[31] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[32] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v18);
  v3[34] = swift_task_alloc(v18);
  v3[9] = v5;
  v3[10] = AssociatedTypeWitness;
  v3[11] = v8;
  v3[12] = v10;
  v3[13] = v11;
  v19 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)(v3 + 9));
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v19);
  v22 = type metadata accessor for SourcedPlaybackIntent(255, v19, WitnessTable, v21);
  v23 = type metadata accessor for Optional(0, v22);
  v3[35] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[36] = v24;
  v3[37] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[38] = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[39] = swift_task_alloc(v26);
  v3[40] = swift_task_alloc(v26);
  v27 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v3[41] = v27;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v27);
  v3[42] = v28;
  v29 = type metadata accessor for IndexingIterator(0, v27, v28);
  v3[43] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v3[44] = v30;
  v31 = (*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[45] = swift_task_alloc(v31);
  v3[46] = swift_task_alloc(v31);
  v32 = type metadata accessor for Optional(0, v27);
  v3[47] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v3[48] = v33;
  v3[49] = swift_task_alloc((*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(v27 - 8);
  v3[50] = v34;
  v35 = (*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[51] = swift_task_alloc(v35);
  v3[52] = swift_task_alloc(v35);
  v36 = type metadata accessor for Optional(0, v5);
  v3[53] = v36;
  v37 = *(_QWORD *)(v36 - 8);
  v3[54] = v37;
  v3[55] = swift_task_alloc((*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(_QWORD *)(v5 - 8);
  v3[56] = v38;
  v3[57] = swift_task_alloc((*(_QWORD *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10020F5A8, 0, 0);
}

uint64_t sub_10020F5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, _QWORD);
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 192);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 432) + 16))(v1, *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 424));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = (uint64_t *)(v0 + 440);
    v5 = v0 + 432;
    v6 = (_QWORD *)(v0 + 424);
LABEL_5:
    v13 = *v4;
    v14 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 8))(v13, *v6);
    v64 = static Array._allocateUninitialized(_:)(0, v14);
LABEL_6:
    v15 = *(_QWORD *)(v0 + 440);
    v17 = *(_QWORD *)(v0 + 408);
    v16 = *(_QWORD *)(v0 + 416);
    v18 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 360);
    v19 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 320);
    v23 = *(_QWORD *)(v0 + 296);
    v56 = *(_QWORD *)(v0 + 272);
    v58 = *(_QWORD *)(v0 + 264);
    v60 = *(_QWORD *)(v0 + 240);
    v61 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 456));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v64);
  }
  v7 = *(_QWORD *)(v0 + 392);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 376);
  v10 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 328);
  v12 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 32))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 192));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v7, v12, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v7, 1, v11) == 1)
  {
    v4 = (uint64_t *)(v0 + 392);
    v5 = v0 + 384;
    v6 = (_QWORD *)(v0 + 376);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 192));
    goto LABEL_5;
  }
  v25 = *(_QWORD *)(v0 + 416);
  v26 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 360);
  v27 = *(_QWORD *)(v0 + 368);
  v29 = *(_QWORD *)(v0 + 344);
  v62 = *(_QWORD *)(v0 + 352);
  v31 = *(_QWORD *)(v0 + 328);
  v30 = *(_QWORD *)(v0 + 336);
  v32 = *(_QWORD *)(v0 + 216);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 32))(v25, *(_QWORD *)(v0 + 392), v31);
  *(_QWORD *)(v0 + 144) = static Array._allocateUninitialized(_:)(0, v32);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  *(_QWORD *)(v0 + 464) = v33;
  v33(v28, v25, v31);
  dispatch thunk of Collection.startIndex.getter(v31);
  *(_QWORD *)(v28 + *(int *)(v29 + 36)) = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v27, v28, v29);
  v34 = *(int *)(v29 + 36);
  *(_DWORD *)(v0 + 480) = v34;
  v35 = *(_QWORD *)(v27 + v34);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 160), v31, v30);
  if (v35 == *(_QWORD *)(v0 + 160))
  {
    v37 = *(_QWORD *)(v0 + 448);
    v36 = *(_QWORD *)(v0 + 456);
    v38 = *(_QWORD *)(v0 + 416);
    v39 = *(_QWORD *)(v0 + 400);
    v40 = *(_QWORD *)(v0 + 328);
    v41 = *(_QWORD *)(v0 + 192);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 352) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344));
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v41);
    v64 = *(_QWORD *)(v0 + 144);
    goto LABEL_6;
  }
  v42 = *(_QWORD *)(v0 + 408);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 464);
  v57 = *(_QWORD *)(v0 + 400);
  v43 = *(_QWORD *)(v0 + 368);
  v44 = *(_QWORD *)(v0 + 328);
  v54 = *(_QWORD *)(v0 + 336);
  v45 = *(_QWORD *)(v0 + 320);
  v46 = *(_QWORD *)(v0 + 304);
  v63 = *(_QWORD *)(v0 + 296);
  v65 = *(_QWORD *)(v0 + 456);
  v47 = *(_QWORD *)(v0 + 208);
  v48 = v43 + *(int *)(v0 + 480);
  v59 = *(_QWORD *)(v0 + 312);
  v49 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v0 + 112, v48, v44, v54);
  (*(void (**)(uint64_t))(v46 + 16))(v45);
  v49(v0 + 112, 0);
  v55(v42, v43, v44);
  dispatch thunk of Collection.formIndex(after:)(v48, v44, v54);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v42, v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v59, v45, v47);
  sub_10020FE80(v59, v65, v63);
  v50 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 472) = static MainActor.shared.getter(v51);
  v52 = dispatch thunk of Actor.unownedExecutor.getter(v50, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020F9BC, v52, v53);
}

uint64_t sub_10020F9BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[39];
  v2 = v0[37];
  v3 = v0[34];
  swift_release(v0[59]);
  sub_1002102D0(v1, v2, v4, v3);
  return swift_task_switch(sub_10020FA20, 0, 0);
}

uint64_t sub_10020FA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, _QWORD);
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 200) + 144))(*(_QWORD *)(v0 + 192)) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 208);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 192), v1, &unk_100F98880, &unk_100F988D0);
    v3 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v1, AssociatedConformanceWitness);
    if ((v4 & 1) == 0)
    {
      v5 = v3;
      v6 = *(_QWORD *)(v0 + 272);
      v7 = *(_QWORD *)(v0 + 216);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 48))(v6, 1, v7);
      if (!(_DWORD)result)
      {
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          return result;
        }
        v9 = v6 + *(int *)(v7 + 108);
        *(_QWORD *)v9 = v5 + 1;
        *(_BYTE *)(v9 + 8) = 1;
      }
    }
  }
  v10 = (_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 224);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 16))(v11, *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v11, 1, v13);
  v15 = *(_QWORD *)(v0 + 312);
  v73 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 280);
  v19 = *(_QWORD *)(v0 + 256);
  v20 = *(_QWORD *)(v0 + 264);
  if (v14 == 1)
  {
    v21 = *(_QWORD *)(v0 + 248);
    v22 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(v16 + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v15, v22);
    v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v23(v20, v21);
  }
  else
  {
    v67 = *(_QWORD *)(v0 + 256);
    v25 = *(_QWORD *)(v0 + 232);
    v24 = *(_QWORD *)(v0 + 240);
    v27 = *(_QWORD *)(v0 + 216);
    v26 = *(_QWORD *)(v0 + 224);
    v64 = *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v24, v20, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v25, v24, v27);
    v28 = type metadata accessor for Array(0);
    Array.append(_:)(v25, v28);
    v29 = v27;
    v10 = (_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v29);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v15, v64);
    v23 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
  }
  v30 = *(int *)(v0 + 480);
  v31 = *(_QWORD *)(v0 + 368);
  v33 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 336);
  v23(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
  v34 = *(_QWORD *)(v31 + v30);
  dispatch thunk of Collection.endIndex.getter(v10, v33, v32);
  if (v34 == *(_QWORD *)(v0 + 160))
  {
    v36 = *(_QWORD *)(v0 + 448);
    v35 = *(_QWORD *)(v0 + 456);
    v37 = *(_QWORD *)(v0 + 416);
    v38 = *(_QWORD *)(v0 + 400);
    v39 = *(_QWORD *)(v0 + 328);
    v40 = *(_QWORD *)(v0 + 192);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 352) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344));
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v40);
    v41 = *(_QWORD *)(v0 + 440);
    v43 = *(_QWORD *)(v0 + 408);
    v42 = *(_QWORD *)(v0 + 416);
    v44 = *(_QWORD *)(v0 + 392);
    v46 = *(_QWORD *)(v0 + 360);
    v45 = *(_QWORD *)(v0 + 368);
    v48 = *(_QWORD *)(v0 + 312);
    v47 = *(_QWORD *)(v0 + 320);
    v49 = *(_QWORD *)(v0 + 296);
    v65 = *(_QWORD *)(v0 + 272);
    v68 = *(_QWORD *)(v0 + 264);
    v70 = *(_QWORD *)(v0 + 240);
    v71 = *(_QWORD *)(v0 + 232);
    v74 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 456));
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v65);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v74);
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 408);
    v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 464);
    v66 = *(_QWORD *)(v0 + 400);
    v51 = *(_QWORD *)(v0 + 368);
    v52 = *(_QWORD *)(v0 + 328);
    v62 = *(_QWORD *)(v0 + 336);
    v53 = *(_QWORD *)(v0 + 320);
    v54 = *(_QWORD *)(v0 + 304);
    v72 = *(_QWORD *)(v0 + 296);
    v75 = *(_QWORD *)(v0 + 456);
    v55 = *(_QWORD *)(v0 + 208);
    v56 = v51 + *(int *)(v0 + 480);
    v69 = *(_QWORD *)(v0 + 312);
    v57 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v0 + 112, v56, v52, v62);
    (*(void (**)(uint64_t))(v54 + 16))(v53);
    v57(v0 + 112, 0);
    v63(v50, v51, v52);
    dispatch thunk of Collection.formIndex(after:)(v56, v52, v62);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v50, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v69, v53, v55);
    sub_10020FE80(v69, v75, v72);
    v58 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 472) = static MainActor.shared.getter(v59);
    v60 = dispatch thunk of Actor.unownedExecutor.getter(v58, &protocol witness table for MainActor);
    return swift_task_switch(sub_10020F9BC, v60, v61);
  }
}

uint64_t sub_10020FE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t WitnessTable;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];

  v32 = a2;
  v35 = a1;
  v36 = a3;
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 80);
  v6 = *(_QWORD *)(*v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &unk_100F98880, &unk_100F98900);
  v8 = *(_QWORD *)(v6 + 64);
  v37[0] = v5;
  v37[1] = AssociatedTypeWitness;
  v37[2] = v8;
  v37[3] = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v37[4] = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v9 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v37);
  v10 = type metadata accessor for Optional(0, v9);
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - v11;
  v14 = type metadata accessor for ContainerDetailDataSource.Source(0, v5, v6, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - v19;
  v21 = (uint64_t)v3 + *(_QWORD *)(v4 + 104);
  v22 = swift_beginAccess(v21, v37, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v20, v21, v14, v22);
  v23 = type metadata accessor for Library.Context(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v17, 1, 1, v23);
  LOBYTE(v21) = sub_100201740((uint64_t)v20, (uint64_t)v17, v5, v6);
  v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v17, v14);
  v24(v20, v14);
  if ((v21 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v12, v32, v5);
    swift_storeEnumTagMultiPayload(v12, v9, 1);
    v26 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v12, 0, 1, v9);
    __chkstk_darwin(v26);
    v27 = &v32 - 6;
    *(&v32 - 4) = v5;
    *(&v32 - 3) = v6;
    *(&v32 - 2) = v35;
    WitnessTable = swift_getWitnessTable(&unk_100EAF138, v9);
    v29 = (void (*)(uint64_t))sub_100220420;
  }
  else
  {
    v30 = sub_1002047F4(v25, v12);
    __chkstk_darwin(v30);
    v27 = &v32 - 6;
    *(&v32 - 4) = v5;
    *(&v32 - 3) = v6;
    *(&v32 - 2) = v35;
    WitnessTable = swift_getWitnessTable(&unk_100EAF138, v9);
    v29 = (void (*)(uint64_t))sub_10021F558;
  }
  static SourcedPlaybackIntent.with(_:configurator:)((uint64_t)v12, v29, (uint64_t)v27, v9, WitnessTable, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v34);
}

uint64_t sub_10021017C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4, a3, &unk_100F98880, &unk_100F98900);
  v9 = *(_QWORD *)(a4 + 64);
  v19[0] = a3;
  v19[1] = AssociatedTypeWitness;
  v19[2] = v9;
  v19[3] = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v19[4] = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v10 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v19);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v10);
  v13 = a1 + *(int *)(type metadata accessor for SourcedPlaybackIntent(0, v10, WitnessTable, v12) + 36);
  v16 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v14, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v13, a2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, AssociatedTypeWitness);
  return swift_storeEnumTagMultiPayload(v13, v16, 0);
}

uint64_t sub_1002102D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[7];

  v33 = a1;
  v34 = a2;
  v35 = a4;
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v7 = type metadata accessor for ContainerDetailDataSource.Source(0, v5, v6, a3);
  v32 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - v8;
  v10 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Optional(0, v5);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v31 - v16;
  sub_1002039A4((id *)((char *)&v31 - v16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v17, 1, v5))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &unk_100F98880, &unk_100F98900);
    v19 = *(_QWORD *)(v6 + 64);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
    v21 = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
    v22 = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
    v23 = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
    v36[0] = v5;
    v36[1] = AssociatedTypeWitness;
    v36[2] = v19;
    v36[3] = AssociatedConformanceWitness;
    v36[4] = v21;
    v36[5] = v22;
    v36[6] = v23;
    v24 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)v36);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v35, 1, 1, v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v17, v5);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v26 = *(void **)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 208));
    v27 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 104);
    v28 = swift_beginAccess(v27, v36, 0, 0);
    v29 = v32;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v32 + 16))(v9, v27, v7, v28);
    v31 = v26;
    v30 = sub_1002034A8(v7);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v6 + 216))(v33, v34, v26, v30, v5, v6);
    swift_release(v30);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v5);
  }
}

uint64_t sub_1002105A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t WitnessTable;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t TupleTypeMetadata2;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;

  v4[48] = a3;
  v4[49] = v3;
  v4[46] = a1;
  v4[47] = a2;
  v5 = *v3;
  v6 = type metadata accessor for Logger(0);
  v4[50] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[51] = v7;
  v4[52] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v5 + 80);
  v4[53] = v8;
  v9 = *(_QWORD *)(v5 + 88);
  v4[54] = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9, v8, &unk_100F98880, &unk_100F98900);
  v4[55] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(v9 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v9, v8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v13 = swift_getAssociatedConformanceWitness(v9, v8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v14 = swift_getAssociatedConformanceWitness(v9, v8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v15 = swift_getAssociatedConformanceWitness(v9, v8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
  v4[2] = v8;
  v4[3] = AssociatedTypeWitness;
  v4[4] = v11;
  v4[5] = AssociatedConformanceWitness;
  v4[6] = v13;
  v4[7] = v14;
  v4[8] = v15;
  v16 = type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)(v4 + 2));
  v4[56] = v16;
  v17 = type metadata accessor for Optional(0, v16);
  v4[57] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v4[58] = v18;
  v4[59] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v16 - 8);
  v4[60] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[61] = swift_task_alloc(v20);
  v4[62] = swift_task_alloc(v20);
  v4[9] = v8;
  v4[10] = AssociatedTypeWitness;
  v4[11] = v11;
  v4[12] = AssociatedConformanceWitness;
  v4[13] = v13;
  v4[14] = v14;
  v4[15] = v15;
  v21 = type metadata accessor for ContainerHeaderRow.ViewModel(255, (uint64_t)(v4 + 9));
  v4[63] = v21;
  v22 = type metadata accessor for Optional(0, v21);
  v4[64] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v4[65] = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[66] = swift_task_alloc(v24);
  v4[67] = swift_task_alloc(v24);
  v25 = *(_QWORD *)(v21 - 8);
  v4[68] = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[69] = swift_task_alloc(v26);
  v4[70] = swift_task_alloc(v26);
  v4[71] = swift_task_alloc(v26);
  v28 = type metadata accessor for ContainerDetailDataSource.ClassicalWorkSection(0, v8, v9, v27);
  v4[72] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v4[73] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[74] = swift_task_alloc(v30);
  v4[75] = swift_task_alloc(v30);
  v4[76] = swift_task_alloc(v30);
  v31 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v4[77] = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v4[78] = v32;
  v4[79] = swift_task_alloc((*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[16] = v8;
  v4[17] = AssociatedTypeWitness;
  v4[18] = v11;
  v4[19] = v13;
  v4[20] = v14;
  v33 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)(v4 + 16));
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v33);
  v36 = type metadata accessor for SourcedPlaybackIntent(255, v33, WitnessTable, v35);
  v37 = type metadata accessor for Optional(0, v36);
  v4[80] = v37;
  v38 = *(_QWORD *)(v37 - 8);
  v4[81] = v38;
  v39 = (*(_QWORD *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[82] = swift_task_alloc(v39);
  v4[83] = swift_task_alloc(v39);
  v4[84] = swift_task_alloc(v39);
  v40 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119F278) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[85] = swift_task_alloc(v40);
  v4[86] = swift_task_alloc(v40);
  v41 = sub_100007E8C(&qword_10119F298);
  v4[87] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v4[88] = v42;
  v4[89] = swift_task_alloc((*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100007E8C(&qword_10119F2A0);
  v4[90] = v43;
  v44 = *(_QWORD *)(v43 - 8);
  v4[91] = v44;
  v4[92] = swift_task_alloc((*(_QWORD *)(v44 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ContainerDetailDataSource.Source(0, v8, v9, v45);
  v4[93] = v46;
  v47 = *(_QWORD *)(v46 - 8);
  v4[94] = v47;
  v4[95] = swift_task_alloc((*(_QWORD *)(v47 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for Optional(255, v46);
  v4[96] = v48;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v48, v48, 0, 0);
  v4[97] = TupleTypeMetadata2;
  v50 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v4[98] = v50;
  v4[99] = swift_task_alloc((*(_QWORD *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = *(_QWORD *)(v48 - 8);
  v4[100] = v51;
  v52 = (*(_QWORD *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[101] = swift_task_alloc(v52);
  v4[102] = swift_task_alloc(v52);
  v53 = type metadata accessor for Optional(0, v28);
  v4[103] = v53;
  v54 = *(_QWORD *)(v53 - 8);
  v4[104] = v54;
  v55 = (*(_QWORD *)(v54 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[105] = swift_task_alloc(v55);
  v4[106] = swift_task_alloc(v55);
  v56 = sub_100007E8C(&qword_10119E480);
  v4[107] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v56 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for Song(0);
  v4[108] = v57;
  v58 = *(_QWORD *)(v57 - 8);
  v4[109] = v58;
  v4[110] = swift_task_alloc((*(_QWORD *)(v58 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[111] = v59;
  v60 = (*(_QWORD *)(v59 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[112] = swift_task_alloc(v60);
  v4[113] = swift_task_alloc(v60);
  v61 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v4[114] = v61;
  v62 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, v61);
  v4[115] = v62;
  v63 = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v62);
  v4[116] = v63;
  v64 = type metadata accessor for IndexingIterator(0, v62, v63);
  v4[117] = v64;
  v65 = *(_QWORD *)(v64 - 8);
  v4[118] = v65;
  v66 = (*(_QWORD *)(v65 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[119] = swift_task_alloc(v66);
  v4[120] = swift_task_alloc(v66);
  v67 = type metadata accessor for Optional(0, v62);
  v4[121] = v67;
  v68 = *(_QWORD *)(v67 - 8);
  v4[122] = v68;
  v69 = (*(_QWORD *)(v68 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[123] = swift_task_alloc(v69);
  v4[124] = swift_task_alloc(v69);
  v70 = *(_QWORD *)(v62 - 8);
  v4[125] = v70;
  v71 = (*(_QWORD *)(v70 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[126] = swift_task_alloc(v71);
  v4[127] = swift_task_alloc(v71);
  v72 = type metadata accessor for Album(0);
  v4[128] = v72;
  v73 = *(_QWORD *)(v72 - 8);
  v4[129] = v73;
  v4[130] = swift_task_alloc((*(_QWORD *)(v73 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Optional(0, v8);
  v4[131] = v74;
  v75 = *(_QWORD *)(v74 - 8);
  v4[132] = v75;
  v4[133] = swift_task_alloc((*(_QWORD *)(v75 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = *(_QWORD *)(v8 - 8);
  v4[134] = v76;
  v77 = (*(_QWORD *)(v76 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[135] = swift_task_alloc(v77);
  v4[136] = swift_task_alloc(v77);
  return swift_task_switch(sub_100210C48, 0, 0);
}

uint64_t sub_100210C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD);
  void (*v64)(uint64_t, uint64_t, uint64_t);
  void (*v65)(uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t WitnessTable;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  unsigned int v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  void (*v95)(_QWORD, _QWORD);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t KeyPath;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  void (*v139)(uint64_t, uint64_t);
  void (*v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __n128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t (*v169)();
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __n128 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(uint64_t, uint64_t, uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  void (*v239)(uint64_t, uint64_t, uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unsigned int (*v261)(uint64_t, uint64_t, uint64_t);
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  void (*v274)(uint64_t, uint64_t);
  uint64_t v275;
  uint64_t v276;

  v1 = *(_QWORD *)(v0 + 1072);
  v2 = *(_QWORD *)(v0 + 1064);
  v3 = *(_QWORD *)(v0 + 424);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1056) + 16))(v2, *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 1048));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    v4 = (_QWORD *)(v0 + 1064);
    v5 = v0 + 1056;
    v6 = (_QWORD *)(v0 + 1048);
LABEL_6:
    v19 = *(_QWORD *)(v0 + 504);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v5 + 8))(*v4, *v6);
    v186 = static Array._allocateUninitialized(_:)(0, v19);
    v20 = type metadata accessor for Array(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for String, v20, 0, 0);
    v22 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
    v185 = Dictionary.init(dictionaryLiteral:)(v22, &type metadata for String, v20, &protocol witness table for String);
LABEL_7:
    v23 = *(_QWORD *)(v0 + 1080);
    v24 = *(_QWORD *)(v0 + 1064);
    v25 = *(_QWORD *)(v0 + 1040);
    v26 = *(_QWORD *)(v0 + 1016);
    v27 = *(_QWORD *)(v0 + 1008);
    v28 = *(_QWORD *)(v0 + 992);
    v29 = *(_QWORD *)(v0 + 984);
    v30 = *(_QWORD *)(v0 + 960);
    v31 = *(_QWORD *)(v0 + 952);
    v187 = *(_QWORD *)(v0 + 904);
    v188 = *(_QWORD *)(v0 + 896);
    v189 = *(_QWORD *)(v0 + 880);
    v190 = *(_QWORD *)(v0 + 856);
    v192 = *(_QWORD *)(v0 + 848);
    v193 = *(_QWORD *)(v0 + 840);
    v195 = *(_QWORD *)(v0 + 816);
    v197 = *(_QWORD *)(v0 + 808);
    v200 = *(_QWORD *)(v0 + 792);
    v202 = *(_QWORD *)(v0 + 760);
    v205 = *(_QWORD *)(v0 + 736);
    v207 = *(_QWORD *)(v0 + 712);
    v210 = *(_QWORD *)(v0 + 688);
    v213 = *(_QWORD *)(v0 + 680);
    v216 = *(_QWORD *)(v0 + 672);
    v219 = *(_QWORD *)(v0 + 664);
    v221 = *(_QWORD *)(v0 + 656);
    v222 = *(_QWORD *)(v0 + 632);
    v225 = *(_QWORD *)(v0 + 608);
    v229 = *(_QWORD *)(v0 + 600);
    v231 = *(_QWORD *)(v0 + 592);
    v234 = *(_QWORD *)(v0 + 568);
    v238 = *(_QWORD *)(v0 + 560);
    v242 = *(_QWORD *)(v0 + 552);
    v246 = *(_QWORD *)(v0 + 536);
    v250 = *(_QWORD *)(v0 + 528);
    v254 = *(_QWORD *)(v0 + 496);
    v258 = *(_QWORD *)(v0 + 488);
    v264 = *(_QWORD *)(v0 + 472);
    v270 = *(_QWORD *)(v0 + 416);
    swift_task_dealloc(*(_QWORD *)(v0 + 1088));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v187);
    swift_task_dealloc(v188);
    swift_task_dealloc(v189);
    swift_task_dealloc(v190);
    swift_task_dealloc(v192);
    swift_task_dealloc(v193);
    swift_task_dealloc(v195);
    swift_task_dealloc(v197);
    swift_task_dealloc(v200);
    swift_task_dealloc(v202);
    swift_task_dealloc(v205);
    swift_task_dealloc(v207);
    swift_task_dealloc(v210);
    swift_task_dealloc(v213);
    swift_task_dealloc(v216);
    swift_task_dealloc(v219);
    swift_task_dealloc(v221);
    swift_task_dealloc(v222);
    swift_task_dealloc(v225);
    swift_task_dealloc(v229);
    swift_task_dealloc(v231);
    swift_task_dealloc(v234);
    swift_task_dealloc(v238);
    swift_task_dealloc(v242);
    swift_task_dealloc(v246);
    swift_task_dealloc(v250);
    swift_task_dealloc(v254);
    swift_task_dealloc(v258);
    swift_task_dealloc(v264);
    swift_task_dealloc(v270);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v186, v185);
  }
  v5 = v0 + 1072;
  v6 = (_QWORD *)(v0 + 424);
  v4 = (_QWORD *)(v0 + 1088);
  v7 = *(_QWORD *)(v0 + 1088);
  v8 = *(_QWORD *)(v0 + 1080);
  v9 = *(_QWORD *)(v0 + 1072);
  v10 = *(_QWORD *)(v0 + 1040);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 424);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v7, *(_QWORD *)(v0 + 1064), v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v12);
  if (!swift_dynamicCast(v10, v8, v12, v11, 6))
    goto LABEL_6;
  v13 = *(_QWORD *)(v0 + 1000);
  v14 = *(_QWORD *)(v0 + 992);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 968);
  v17 = *(_QWORD *)(v0 + 920);
  v18 = *(_QWORD *)(v0 + 368);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1032) + 8))(*(_QWORD *)(v0 + 1040), *(_QWORD *)(v0 + 1024));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v18, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v17) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v5 + 8))(*v4, *v6);
    v5 = v0 + 976;
    v6 = (_QWORD *)(v0 + 968);
    v4 = (_QWORD *)(v0 + 992);
    goto LABEL_6;
  }
  v33 = *(_QWORD *)(v0 + 1016);
  v34 = *(_QWORD *)(v0 + 1000);
  v35 = *(_QWORD *)(v0 + 960);
  v36 = *(_QWORD *)(v0 + 952);
  v265 = *(_QWORD *)(v0 + 944);
  v37 = *(_QWORD *)(v0 + 936);
  v259 = *(_QWORD *)(v0 + 928);
  v38 = *(_QWORD *)(v0 + 920);
  v39 = *(_QWORD *)(v0 + 576);
  v40 = *(_QWORD *)(v0 + 504);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 32))(v33, *(_QWORD *)(v0 + 992), v38);
  *(_QWORD *)(v0 + 336) = static Array._allocateUninitialized(_:)(0, v39);
  *(_QWORD *)(v0 + 304) = static Array._allocateUninitialized(_:)(0, v40);
  v41 = type metadata accessor for Array(255);
  *(_QWORD *)(v0 + 1096) = v41;
  v42 = swift_getTupleTypeMetadata2(0, &type metadata for String, v41, 0, 0);
  v43 = static Array._allocateUninitialized(_:)(0, v42);
  *(_QWORD *)(v0 + 296) = Dictionary.init(dictionaryLiteral:)(v43, &type metadata for String, v41, &protocol witness table for String);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  *(_QWORD *)(v0 + 1104) = v44;
  v44(v36, v33, v38);
  dispatch thunk of Collection.startIndex.getter(v38);
  *(_QWORD *)(v36 + *(int *)(v37 + 36)) = *(_QWORD *)(v0 + 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v265 + 32))(v35, v36, v37);
  v45 = *(int *)(v37 + 36);
  *(_DWORD *)(v0 + 1176) = v45;
  v46 = *(_QWORD *)(v35 + v45);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 328), v38, v259);
  if (v46 == *(_QWORD *)(v0 + 328))
  {
LABEL_9:
    v47 = *(_QWORD *)(v0 + 1088);
    v48 = *(_QWORD *)(v0 + 1072);
    v49 = *(_QWORD *)(v0 + 1016);
    v50 = *(_QWORD *)(v0 + 1000);
    v51 = *(_QWORD *)(v0 + 920);
    v52 = *(_QWORD *)(v0 + 424);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 944) + 8))(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 936));
    v53 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 336));
    (*(void (**)(uint64_t, uint64_t, __n128))(v50 + 8))(v49, v51, v53);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v52);
    v185 = *(_QWORD *)(v0 + 296);
    v186 = *(_QWORD *)(v0 + 304);
    goto LABEL_7;
  }
  v226 = v0 + 200;
  while (1)
  {
    v56 = *(_QWORD *)(v0 + 1008);
    v239 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1104);
    v243 = *(_QWORD *)(v0 + 1000);
    v57 = *(_QWORD *)(v0 + 960);
    v235 = *(_QWORD *)(v0 + 928);
    v58 = *(_QWORD *)(v0 + 920);
    v59 = *(_QWORD *)(v0 + 904);
    v60 = *(_QWORD *)(v0 + 888);
    v266 = *(_QWORD *)(v0 + 872);
    v271 = *(_QWORD *)(v0 + 864);
    v255 = *(_QWORD *)(v0 + 896);
    v260 = *(_QWORD *)(v0 + 856);
    v61 = v57 + *(int *)(v0 + 1176);
    v62 = *(_QWORD *)(v0 + 440);
    v247 = *(_QWORD *)(v0 + 432);
    v251 = *(_QWORD *)(v0 + 424);
    v63 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v226, v61, v58, v235);
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
    *(_QWORD *)(v0 + 1112) = v64;
    v232 = v64;
    ((void (*)(uint64_t))v64)(v59);
    v63(v226, 0);
    v239(v56, v57, v58);
    dispatch thunk of Collection.formIndex(after:)(v61, v58, v235);
    v65 = *(void (**)(uint64_t, uint64_t))(v243 + 8);
    v65(v56, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v255, v59, v62);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v247, v251, v62, &unk_100F98880, &unk_100F988D0);
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v62, AssociatedConformanceWitness);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v266 + 48))(v260, 1, v271) != 1)
      break;
    v54 = *(_QWORD *)(v0 + 856);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 888) + 8))(*(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 440));
    sub_10004FF60(v54, &qword_10119E480);
LABEL_12:
    v55 = *(_QWORD *)(*(_QWORD *)(v0 + 960) + *(int *)(v0 + 1176));
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 920), *(_QWORD *)(v0 + 928));
    if (v55 == *(_QWORD *)(v0 + 328))
      goto LABEL_9;
  }
  v67 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 32))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 864));
  v68 = Song.workName.getter(v67);
  *(_QWORD *)(v0 + 1120) = v69;
  if (!v69)
  {
    v70 = *(_QWORD *)(v0 + 896);
    v71 = *(_QWORD *)(v0 + 888);
    v72 = *(_QWORD *)(v0 + 440);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
    goto LABEL_12;
  }
  v73 = v68;
  v74 = v69;
  v75 = *(_QWORD *)(v0 + 848);
  v272 = *(_QWORD *)(v0 + 584);
  v76 = *(_QWORD *)(v0 + 576);
  *(_QWORD *)(v0 + 1128) = v68;
  *(_QWORD *)(v0 + 360) = *(_QWORD *)(v0 + 336);
  v77 = type metadata accessor for Array(0);
  *(_QWORD *)(v0 + 1136) = v77;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v77);
  BidirectionalCollection.last.getter(v77);
  v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48);
  v80 = v79(v75, 1, v76);
  v81 = *(uint64_t **)(v0 + 848);
  if (v80 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 832) + 8))(*(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 824));
    goto LABEL_18;
  }
  v267 = v77;
  v273 = WitnessTable;
  v261 = v79;
  v97 = *(_QWORD *)(v0 + 584);
  v98 = *(_QWORD *)(v0 + 576);
  v100 = *v81;
  v99 = v81[1];
  swift_bridgeObjectRetain();
  v101 = *(void (**)(uint64_t *, uint64_t))(v97 + 8);
  v101(v81, v98);
  if (v100 == v73 && v74 == v99)
  {
    swift_bridgeObjectRelease(v99);
    v103 = v267;
    v102 = v273;
    goto LABEL_29;
  }
  v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v99, v73, v74, 0);
  swift_bridgeObjectRelease(v99);
  v103 = v267;
  v102 = v273;
  if ((v120 & 1) == 0)
  {
LABEL_18:
    v82 = *(_QWORD *)(v0 + 816);
    v83 = *(_QWORD *)(v0 + 800);
    v84 = *(_QWORD *)(v0 + 792);
    v85 = *(_QWORD *)(v0 + 776);
    v86 = *(_QWORD *)(v0 + 768);
    v87 = *(_QWORD *)(v0 + 752);
    v88 = *(_QWORD *)(v0 + 744);
    v89 = *(_QWORD *)(v0 + 384);
    v90 = type metadata accessor for Library.Context(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v82, 1, 1, v90);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v82, 0, 1, v88);
    v91 = v84 + *(int *)(v85 + 48);
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16);
    v92(v84, v89, v86);
    v92(v91, v82, v86);
    v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
    if (v93(v84, 1, v88) == 1)
    {
      v94 = *(_QWORD *)(v0 + 744);
      v95 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 800) + 8);
      v95(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 768));
      if (v93(v91, 1, v94) == 1)
      {
        v96 = ((uint64_t (*)(_QWORD, _QWORD))v95)(*(_QWORD *)(v0 + 792), *(_QWORD *)(v0 + 768));
LABEL_34:
        v141 = Song.composerName.getter(v96);
        v262 = v142;
        v269 = v141;
        v276 = *(_QWORD *)(v0 + 1136);
        v256 = *(_QWORD *)(v0 + 1128);
        v223 = *(_QWORD *)(v0 + 1120);
        v143 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1112);
        v233 = *(_QWORD *)(v0 + 1008);
        v144 = *(_QWORD *)(v0 + 984);
        v217 = *(_QWORD *)(v0 + 976);
        v220 = *(_QWORD *)(v0 + 968);
        v206 = *(_QWORD *)(v0 + 1000);
        v208 = *(_QWORD *)(v0 + 920);
        v145 = *(_QWORD *)(v0 + 912);
        v146 = *(_QWORD *)(v0 + 896);
        v147 = *(_QWORD *)(v0 + 888);
        v203 = *(_QWORD *)(v0 + 672);
        v148 = *(_QWORD *)(v0 + 632);
        v211 = *(_QWORD *)(v0 + 624);
        v214 = *(_QWORD *)(v0 + 616);
        v236 = *(_QWORD **)(v0 + 608);
        v244 = *(_QWORD *)(v0 + 584);
        v248 = *(_QWORD *)(v0 + 600);
        v252 = *(_QWORD *)(v0 + 576);
        v149 = *(_QWORD *)(v0 + 440);
        v227 = *(_QWORD *)(v0 + 432);
        v240 = *(_QWORD *)(v0 + 424);
        v143(v148, v146, v149);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v147 + 56))(v148, 0, 1, v149);
        v150 = sub_100148540(v149, v149);
        v198 = *(_QWORD *)(v147 + 72);
        v151 = *(unsigned __int8 *)(v147 + 80);
        v152 = swift_allocObject(v150, ((v151 + *(unsigned int *)(v150 + 48)) & ~v151) + v198, v151 | *(unsigned __int16 *)(v150 + 52));
        v153 = static Array._adoptStorage(_:count:)(v152, 1);
        v143(v154, v146, v149);
        v155 = sub_10014273C(v153);
        MusicItemCollection.init(arrayLiteral:)(v155, v149, v145);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v206 + 56))(v144, 0, 1, v208);
        sub_100213E08(v148, v144, v203);
        (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v144, v220);
        (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v148, v214);
        v156 = sub_100148540(v149, v149);
        v157 = swift_allocObject(v156, ((*(unsigned int *)(v156 + 48) + v151) & ~v151) + v198, *(unsigned __int16 *)(v156 + 52) | v151);
        swift_bridgeObjectRetain();
        v158 = static Array._adoptStorage(_:count:)(v157, 1);
        v143(v159, v146, v149);
        v160 = sub_10014273C(v158);
        v161 = MusicItemCollection.init(arrayLiteral:)(v160, v149, v145);
        v162 = Song.artistName.getter(v161);
        sub_100213CCC(v256, v223, v233, v269, v262, v162, v163, v240, v236, v227);
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v244 + 16))(v248, v236, v252);
        Array.append(_:)(v248, v276);
        v164 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1160) = static MainActor.shared.getter(v165);
        v166 = dispatch thunk of Actor.unownedExecutor.getter(v164, &protocol witness table for MainActor);
        v168 = v167;
        v169 = sub_1002123B0;
        return swift_task_switch(v169, v166, v168);
      }
    }
    else
    {
      v104 = *(_QWORD *)(v0 + 744);
      v92(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 792), *(_QWORD *)(v0 + 768));
      v105 = v93(v91, 1, v104);
      v106 = *(_QWORD *)(v0 + 816);
      v107 = *(_QWORD *)(v0 + 808);
      v108 = *(_QWORD *)(v0 + 800);
      if (v105 != 1)
      {
        v268 = *(_QWORD *)(v0 + 768);
        v275 = *(_QWORD *)(v0 + 792);
        v133 = *(_QWORD *)(v0 + 760);
        v134 = *(_QWORD *)(v0 + 752);
        v135 = *(_QWORD *)(v0 + 744);
        v137 = *(_QWORD *)(v0 + 424);
        v136 = *(_QWORD *)(v0 + 432);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v133, v91, v135);
        v138 = sub_100201740(v107, v133, v137, v136);
        v139 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
        v139(v133, v135);
        v140 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
        v140(v106, v268);
        v139(v107, v135);
        v96 = ((uint64_t (*)(uint64_t, uint64_t))v140)(v275, v268);
        if ((v138 & 1) != 0)
          goto LABEL_34;
LABEL_27:
        v111 = *(_QWORD *)(v0 + 864);
        v112 = *(_QWORD *)(v0 + 720);
        v113 = type metadata accessor for Composer(0);
        v114 = sub_100048748(&qword_10119F2C0, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
        MusicLibrarySectionedRequest.init()(v113, v111, v114, &protocol witness table for Song);
        KeyPath = swift_getKeyPath(&unk_100EAF410);
        v116 = Song.id.getter(KeyPath);
        v118 = v117;
        *(_QWORD *)(v0 + 280) = v116;
        *(_QWORD *)(v0 + 288) = v117;
        MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v0 + 280, v112, &protocol witness table for MusicItemID);
        swift_bridgeObjectRelease(v118);
        swift_release(KeyPath);
        v119 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
        *(_QWORD *)(v0 + 1144) = v119;
        *v119 = v0;
        v119[1] = sub_100211ECC;
        return MusicLibrarySectionedRequest.response()(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 720));
      }
      v109 = *(_QWORD *)(v0 + 752);
      v110 = *(_QWORD *)(v0 + 744);
      (*(void (**)(_QWORD, _QWORD))(v108 + 8))(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 768));
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v107, v110);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 784) + 8))(*(_QWORD *)(v0 + 792), *(_QWORD *)(v0 + 776));
    goto LABEL_27;
  }
LABEL_29:
  v121 = *(_QWORD *)(v0 + 840);
  v122 = *(_QWORD *)(v0 + 576);
  v123 = swift_getWitnessTable(&protocol conformance descriptor for [A], v103);
  RangeReplaceableCollection<>.popLast()(v103, v102, v123);
  if (v261(v121, 1, v122) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 832) + 8))(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 824));
  }
  else
  {
    v274 = (void (*)(uint64_t, uint64_t))v101;
    v124 = *(_QWORD *)(v0 + 544);
    v125 = *(_QWORD *)(v0 + 528);
    v126 = *(_QWORD *)(v0 + 504);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 584) + 32))(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 576));
    v127 = type metadata accessor for Array(0);
    v128 = swift_getWitnessTable(&protocol conformance descriptor for [A], v127);
    v129 = swift_getWitnessTable(&protocol conformance descriptor for [A], v127);
    RangeReplaceableCollection<>.popLast()(v127, v128, v129);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v125, 1, v126) == 1)
    {
      v130 = *(_QWORD *)(v0 + 528);
      v131 = *(_QWORD *)(v0 + 520);
      v132 = *(_QWORD *)(v0 + 512);
      v274(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 576));
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v130, v132);
    }
    else
    {
      v170 = *(_QWORD *)(v0 + 1008);
      v215 = *(_QWORD *)(v0 + 1000);
      v218 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1104);
      v196 = *(_QWORD *)(v0 + 984);
      v241 = *(_QWORD *)(v0 + 976);
      v245 = *(_QWORD *)(v0 + 968);
      v204 = *(_QWORD *)(v0 + 928);
      v171 = *(_QWORD *)(v0 + 920);
      v172 = *(_QWORD *)(v0 + 912);
      v191 = *(_QWORD *)(v0 + 896);
      v173 = *(_QWORD *)(v0 + 888);
      v224 = *(_QWORD *)(v0 + 664);
      v253 = *(_QWORD *)(v0 + 648);
      v257 = *(_QWORD *)(v0 + 640);
      v201 = *(_QWORD *)(v0 + 632);
      v228 = *(_QWORD *)(v0 + 624);
      v237 = *(_QWORD *)(v0 + 616);
      v199 = *(_QWORD *)(v0 + 600);
      v263 = *(_QWORD *)(v0 + 592);
      v194 = *(_QWORD *)(v0 + 584);
      v174 = *(_QWORD *)(v0 + 576);
      v249 = *(_QWORD *)(v0 + 560);
      v212 = *(_QWORD *)(v0 + 552);
      v230 = *(_QWORD *)(v0 + 544);
      v175 = *(_QWORD *)(v0 + 440);
      v209 = *(_QWORD *)(v0 + 504);
      (*(void (**)(void))(v230 + 32))();
      v176 = sub_100148540(v175, v175);
      v177 = swift_allocObject(v176, ((*(unsigned __int8 *)(v173 + 80) + (unint64_t)*(unsigned int *)(v176 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(_QWORD *)(v173 + 72), *(unsigned __int8 *)(v173 + 80) | (unint64_t)*(unsigned __int16 *)(v176 + 52));
      v178 = static Array._adoptStorage(_:count:)(v177, 1);
      v232(v179, v191, v175);
      v180 = sub_10014273C(v178);
      MusicItemCollection.init(arrayLiteral:)(v180, v175, v172);
      v181 = v263 + *(int *)(v174 + 36);
      static MusicItemCollection.+= infix(_:_:)(v181, v170, v175, v172);
      v65(v170, v171);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 16))(v199, v263, v174);
      Array.append(_:)(v199, v267);
      Collection.first.getter(v171, v204);
      v218(v196, v181, v171);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v215 + 56))(v196, 0, 1, v171);
      sub_100213E08(v201, v196, v224);
      (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v196, v245);
      (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v201, v237);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v253 + 24))(v212 + *(int *)(v209 + 84), v224, v257);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 16))(v249, v212, v209);
      Array.append(_:)(v249, v127);
      (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v224, v257);
      v274(v263, v174);
      (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v212, v209);
    }
  }
  sub_10020FE80(*(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 1088), *(_QWORD *)(v0 + 656));
  v182 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 1168) = static MainActor.shared.getter(v183);
  v166 = dispatch thunk of Actor.unownedExecutor.getter(v182, &protocol witness table for MainActor);
  v168 = v184;
  v169 = sub_1002125F0;
  return swift_task_switch(v169, v166, v168);
}

uint64_t sub_100211ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1144);
  *(_QWORD *)(*(_QWORD *)v1 + 1152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002137E4;
  else
    v3 = sub_100211F30;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100211F30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v1 = MusicLibrarySectionedResponse.sections.getter(v0[87]);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = sub_100007E8C(&qword_10119F2D0);
  v4 = *(_QWORD *)(v3 - 8);
  if (v2)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v4 + 16))(v0[86], v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = v0[86];
  v7 = v0[85];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v6, v5, 1, v3);
  swift_bridgeObjectRelease(v1);
  sub_10004A160(v6, v7, &qword_10119F278);
  v8 = sub_100007E8C(&qword_10119F2D0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  v11 = v0[92];
  v12 = v0[90];
  v13 = v0[89];
  v14 = v0[88];
  v15 = v0[87];
  v16 = v0[86];
  v17 = v0[85];
  if (v10 == 1)
  {
    v18 = v0[91];
    sub_10004FF60(v0[86], &qword_10119F278);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v11, v12);
    sub_10004FF60(v17, &qword_10119F278);
    v48 = 0;
    v49 = 0;
  }
  else
  {
    v65 = v0[91];
    v67 = v0[90];
    KeyPath = swift_getKeyPath(&unk_100EAF438);
    MusicLibrarySection.subscript.getter(KeyPath, v8);
    swift_release(KeyPath);
    sub_10004FF60(v16, &qword_10119F278);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v11, v67);
    v48 = v0[30];
    v49 = v0[29];
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
  }
  v68 = v0[142];
  v66 = v0[141];
  v20 = (void (*)(uint64_t, uint64_t, uint64_t))v0[139];
  v21 = v0[123];
  v55 = v0[122];
  v56 = v0[121];
  v57 = v0[140];
  v51 = v0[125];
  v52 = v0[115];
  v22 = v0[114];
  v23 = v0[112];
  v24 = v0[111];
  v59 = v0[126];
  v50 = v0[84];
  v25 = v0[79];
  v53 = v0[78];
  v54 = v0[77];
  v60 = (_QWORD *)v0[76];
  v62 = v0[73];
  v63 = v0[75];
  v64 = v0[72];
  v26 = v0[55];
  v58 = v0[54];
  v61 = v0[53];
  v20(v25, v23, v26);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, v26);
  v27 = sub_100148540(v26, v26);
  v28 = *(_QWORD *)(v24 + 72);
  v29 = *(unsigned __int8 *)(v24 + 80);
  v30 = swift_allocObject(v27, ((v29 + *(unsigned int *)(v27 + 48)) & ~v29) + v28, v29 | *(unsigned __int16 *)(v27 + 52));
  v31 = static Array._adoptStorage(_:count:)(v30, 1);
  v20(v32, v23, v26);
  v33 = sub_10014273C(v31);
  v34 = v22;
  MusicItemCollection.init(arrayLiteral:)(v33, v26, v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v21, 0, 1, v52);
  sub_100213E08(v25, v21, v50);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v21, v56);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v25, v54);
  v35 = sub_100148540(v26, v26);
  v36 = swift_allocObject(v35, ((*(unsigned int *)(v35 + 48) + v29) & ~v29) + v28, *(unsigned __int16 *)(v35 + 52) | v29);
  swift_bridgeObjectRetain();
  v37 = static Array._adoptStorage(_:count:)(v36, 1);
  v20(v38, v23, v26);
  v39 = sub_10014273C(v37);
  v40 = MusicItemCollection.init(arrayLiteral:)(v39, v26, v34);
  v41 = Song.artistName.getter(v40);
  sub_100213CCC(v66, v57, v59, v49, v48, v41, v42, v61, v60, v58);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v62 + 16))(v63, v60, v64);
  Array.append(_:)(v63, v68);
  v43 = type metadata accessor for MainActor(0);
  v0[145] = static MainActor.shared.getter(v44);
  v45 = dispatch thunk of Actor.unownedExecutor.getter(v43, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002123B0, v45, v46);
}

uint64_t sub_1002123B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = v0[84];
  v2 = (uint64_t *)v0[76];
  v3 = v0[67];
  swift_release(v0[145]);
  sub_100214240(v2, v1, v3);
  return swift_task_switch(sub_100212414, 0, 0);
}

uint64_t sub_100212414()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[68];
  v2 = v0[67];
  v3 = v0[63];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v0[65] + 8))(v2, v0[64]);
  }
  else
  {
    v4 = v0[71];
    v5 = v0[70];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v4, v2, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v5, v4, v3);
    v6 = type metadata accessor for Array(0);
    Array.append(_:)(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v3);
  }
  v7 = v0[141];
  v8 = v0[140];
  v9 = v0[137];
  v20 = v0[81];
  v21 = v0[80];
  v22 = v0[84];
  v10 = v0[76];
  v11 = v0[73];
  v12 = v0[72];
  v13 = v0[56];
  swift_bridgeObjectRetain();
  v0[39] = static Array._allocateUninitialized(_:)(0, v13);
  v0[31] = v7;
  v0[32] = v8;
  v14 = type metadata accessor for Dictionary(0, &type metadata for String, v9, &protocol witness table for String);
  Dictionary.subscript.setter(v0 + 39, v0 + 31, v14);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  sub_10020FE80(v0[112], v0[136], v0[82]);
  v15 = type metadata accessor for MainActor(0);
  v0[146] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002125F0, v17, v18);
}

uint64_t sub_1002125F0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (char *)v0[112];
  v2 = v0[82];
  v3 = v0[59];
  swift_release(v0[146]);
  sub_1002147C8(v1, v2, v3);
  return swift_task_switch(sub_100212654, 0, 0);
}

uint64_t sub_100212654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD);
  void (*v62)(uint64_t, uint64_t, uint64_t);
  void (*v63)(uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  int v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v92)(uint64_t, uint64_t, uint64_t);
  _QWORD *v93;
  uint64_t v94;
  void (*v95)(_QWORD, _QWORD);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t KeyPath;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  void (*v140)(uint64_t, uint64_t);
  void (*v141)(uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)();
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __n128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void (*v235)(uint64_t, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(uint64_t, uint64_t, uint64_t);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t (*v259)(uint64_t, uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t WitnessTable;
  void (*v273)(uint64_t, uint64_t);
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t v281;
  uint64_t v282;

  v231 = (_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 472);
  v1 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 448);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    v262 = *(_QWORD *)(v0 + 888);
    v4 = *(_QWORD *)(v0 + 880);
    v5 = *(_QWORD *)(v0 + 872);
    v6 = *(_QWORD *)(v0 + 864);
    v7 = *(_QWORD *)(v0 + 656);
    v8 = *(_QWORD *)(v0 + 648);
    v9 = *(_QWORD *)(v0 + 640);
    v10 = *(_QWORD *)(v0 + 464);
    v268 = *(_QWORD *)(v0 + 456);
    v276 = *(_QWORD *)(v0 + 896);
    v11 = *(_QWORD *)(v0 + 440);
    v12 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 1120));
    (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v7, v9, v12);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v276, v11);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v268);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 1128);
    v14 = *(_QWORD *)(v0 + 1120);
    v15 = *(_QWORD *)(v0 + 1096);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 32))(*(_QWORD *)(v0 + 496), v2, v3);
    *(_QWORD *)(v0 + 264) = v13;
    *(_QWORD *)(v0 + 272) = v14;
    v16 = type metadata accessor for Dictionary(0, &type metadata for String, v15, &protocol witness table for String);
    v17 = (void (*)(uint64_t, _QWORD))Dictionary.subscript.modify(v0 + 168, v0 + 264, v16);
    if (*v18)
    {
      v19 = *(_QWORD *)(v0 + 1096);
      v20 = *(_QWORD *)(v0 + 488);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 16))(v20, *(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 448));
      Array.append(_:)(v20, v19);
    }
    v17(v0 + 168, 0);
    v269 = *(_QWORD *)(v0 + 888);
    v277 = *(_QWORD *)(v0 + 896);
    v263 = *(_QWORD *)(v0 + 880);
    v21 = *(_QWORD *)(v0 + 872);
    v22 = *(_QWORD *)(v0 + 864);
    v23 = *(_QWORD *)(v0 + 656);
    v24 = *(_QWORD *)(v0 + 648);
    v25 = *(_QWORD *)(v0 + 640);
    v26 = *(_QWORD *)(v0 + 496);
    v27 = *(_QWORD *)(v0 + 480);
    v29 = *(_QWORD *)(v0 + 440);
    v28 = *(_QWORD *)(v0 + 448);
    v30 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 272));
    (*(void (**)(uint64_t, uint64_t, __n128))(v27 + 8))(v26, v28, v30);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v263, v22);
    (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v277, v29);
  }
  v31 = *(_QWORD *)(*(_QWORD *)(v0 + 960) + *(int *)(v0 + 1176));
  dispatch thunk of Collection.endIndex.getter(v231, *(_QWORD *)(v0 + 920), *(_QWORD *)(v0 + 928));
  v32 = v0;
  if (v31 == *(_QWORD *)(v0 + 328))
  {
LABEL_7:
    v33 = *(_QWORD *)(v32 + 1088);
    v34 = *(_QWORD *)(v32 + 1072);
    v35 = *(_QWORD *)(v32 + 1016);
    v36 = *(_QWORD *)(v32 + 1000);
    v37 = *(_QWORD *)(v32 + 920);
    v38 = *(_QWORD *)(v32 + 424);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v32 + 944) + 8))(*(_QWORD *)(v32 + 960), *(_QWORD *)(v32 + 936));
    v39 = swift_bridgeObjectRelease(*(_QWORD *)(v32 + 336));
    (*(void (**)(uint64_t, uint64_t, __n128))(v36 + 8))(v35, v37, v39);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v38);
    v270 = *(_QWORD *)(v32 + 296);
    v278 = *(_QWORD *)(v32 + 304);
    v40 = *(_QWORD *)(v32 + 1088);
    v41 = *(_QWORD *)(v32 + 1080);
    v42 = *(_QWORD *)(v32 + 1064);
    v43 = *(_QWORD *)(v32 + 1040);
    v44 = *(_QWORD *)(v32 + 1016);
    v45 = *(_QWORD *)(v32 + 1008);
    v46 = v32;
    v47 = *(_QWORD *)(v32 + 992);
    v48 = *(_QWORD *)(v46 + 984);
    v49 = *(_QWORD *)(v46 + 960);
    v50 = *(_QWORD *)(v46 + 952);
    v186 = *(_QWORD *)(v46 + 904);
    v187 = *(_QWORD *)(v46 + 896);
    v188 = *(_QWORD *)(v46 + 880);
    v189 = *(_QWORD *)(v46 + 856);
    v190 = *(_QWORD *)(v46 + 848);
    v192 = *(_QWORD *)(v46 + 840);
    v194 = *(_QWORD *)(v46 + 816);
    v195 = *(_QWORD *)(v46 + 808);
    v197 = *(_QWORD *)(v46 + 792);
    v199 = *(_QWORD *)(v46 + 760);
    v201 = *(_QWORD *)(v46 + 736);
    v203 = *(_QWORD *)(v46 + 712);
    v206 = *(_QWORD *)(v46 + 688);
    v209 = *(_QWORD *)(v46 + 680);
    v212 = *(_QWORD *)(v46 + 672);
    v215 = *(_QWORD *)(v46 + 664);
    v218 = *(_QWORD *)(v46 + 656);
    v221 = *(_QWORD *)(v46 + 632);
    v223 = *(_QWORD *)(v46 + 608);
    v224 = *(_QWORD *)(v46 + 600);
    v227 = *(_QWORD *)(v46 + 592);
    v232 = *(_QWORD *)(v46 + 568);
    v234 = *(_QWORD *)(v46 + 560);
    v237 = *(_QWORD *)(v46 + 552);
    v241 = *(_QWORD *)(v46 + 536);
    v245 = *(_QWORD *)(v46 + 528);
    v249 = *(_QWORD *)(v46 + 496);
    v253 = *(_QWORD *)(v46 + 488);
    v257 = *(_QWORD *)(v46 + 472);
    v264 = *(_QWORD *)(v46 + 416);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v186);
    swift_task_dealloc(v187);
    swift_task_dealloc(v188);
    swift_task_dealloc(v189);
    swift_task_dealloc(v190);
    swift_task_dealloc(v192);
    swift_task_dealloc(v194);
    swift_task_dealloc(v195);
    swift_task_dealloc(v197);
    swift_task_dealloc(v199);
    swift_task_dealloc(v201);
    swift_task_dealloc(v203);
    swift_task_dealloc(v206);
    swift_task_dealloc(v209);
    swift_task_dealloc(v212);
    swift_task_dealloc(v215);
    swift_task_dealloc(v218);
    swift_task_dealloc(v221);
    swift_task_dealloc(v223);
    swift_task_dealloc(v224);
    swift_task_dealloc(v227);
    swift_task_dealloc(v232);
    swift_task_dealloc(v234);
    swift_task_dealloc(v237);
    swift_task_dealloc(v241);
    swift_task_dealloc(v245);
    swift_task_dealloc(v249);
    swift_task_dealloc(v253);
    swift_task_dealloc(v257);
    swift_task_dealloc(v264);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v278, v270);
  }
  v228 = v0 + 200;
  while (1)
  {
    v54 = *(_QWORD *)(v32 + 1008);
    v242 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 1104);
    v246 = *(_QWORD *)(v32 + 1000);
    v55 = *(_QWORD *)(v32 + 960);
    v238 = *(_QWORD *)(v32 + 928);
    v56 = *(_QWORD *)(v32 + 920);
    v57 = *(_QWORD *)(v32 + 904);
    v58 = *(_QWORD *)(v32 + 888);
    v271 = *(_QWORD *)(v32 + 872);
    v279 = *(_QWORD *)(v32 + 864);
    v258 = *(_QWORD *)(v32 + 896);
    v265 = *(_QWORD *)(v32 + 856);
    v59 = v55 + *(int *)(v32 + 1176);
    v60 = *(_QWORD *)(v32 + 440);
    v250 = *(_QWORD *)(v32 + 432);
    v254 = *(_QWORD *)(v32 + 424);
    v61 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v228, v59, v56, v238);
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
    *(_QWORD *)(v32 + 1112) = v62;
    v235 = v62;
    ((void (*)(uint64_t))v62)(v57);
    v61(v228, 0);
    v242(v54, v55, v56);
    dispatch thunk of Collection.formIndex(after:)(v59, v56, v238);
    v63 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
    v63(v54, v56);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v258, v57, v60);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v250, v254, v60, &unk_100F98880, &unk_100F988D0);
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v60, AssociatedConformanceWitness);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48))(v265, 1, v279) != 1)
      break;
    v52 = *(_QWORD *)(v32 + 856);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v32 + 888) + 8))(*(_QWORD *)(v32 + 896), *(_QWORD *)(v32 + 440));
    sub_10004FF60(v52, &qword_10119E480);
LABEL_10:
    v53 = *(_QWORD *)(*(_QWORD *)(v32 + 960) + *(int *)(v32 + 1176));
    dispatch thunk of Collection.endIndex.getter(v231, *(_QWORD *)(v32 + 920), *(_QWORD *)(v32 + 928));
    if (v53 == *(_QWORD *)(v32 + 328))
      goto LABEL_7;
  }
  v65 = v63;
  v66 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v32 + 872) + 32))(*(_QWORD *)(v32 + 880), *(_QWORD *)(v32 + 856), *(_QWORD *)(v32 + 864));
  v67 = Song.workName.getter(v66);
  *(_QWORD *)(v32 + 1120) = v68;
  if (!v68)
  {
    v69 = *(_QWORD *)(v32 + 896);
    v70 = *(_QWORD *)(v32 + 888);
    v71 = *(_QWORD *)(v32 + 440);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v32 + 872) + 8))(*(_QWORD *)(v32 + 880), *(_QWORD *)(v32 + 864));
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
    goto LABEL_10;
  }
  v72 = v67;
  v73 = v68;
  v74 = *(_QWORD *)(v32 + 848);
  v75 = *(_QWORD *)(v32 + 584);
  v76 = *(_QWORD *)(v32 + 576);
  *(_QWORD *)(v32 + 1128) = v67;
  *(_QWORD *)(v32 + 360) = *(_QWORD *)(v32 + 336);
  v77 = type metadata accessor for Array(0);
  *(_QWORD *)(v32 + 1136) = v77;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v77);
  BidirectionalCollection.last.getter(v77);
  v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  v79 = v78(v74, 1, v76);
  v80 = *(uint64_t **)(v32 + 848);
  if (v79 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v32 + 832) + 8))(*(_QWORD *)(v32 + 848), *(_QWORD *)(v32 + 824));
    goto LABEL_16;
  }
  v259 = v78;
  v266 = v77;
  v97 = *(_QWORD *)(v32 + 584);
  v280 = (uint64_t *)v32;
  v98 = *(_QWORD *)(v32 + 576);
  v100 = *v80;
  v99 = v80[1];
  swift_bridgeObjectRetain();
  v101 = *(void (**)(uint64_t *, uint64_t))(v97 + 8);
  v101(v80, v98);
  if (v100 == v72 && v73 == v99)
  {
    swift_bridgeObjectRelease(v99);
    v102 = WitnessTable;
    goto LABEL_27;
  }
  v119 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v99, v72, v73, 0);
  swift_bridgeObjectRelease(v99);
  v102 = WitnessTable;
  if ((v119 & 1) == 0)
  {
LABEL_16:
    v81 = *(_QWORD *)(v32 + 816);
    v82 = *(_QWORD *)(v32 + 800);
    v83 = *(_QWORD *)(v32 + 792);
    v84 = *(_QWORD *)(v32 + 776);
    v85 = *(_QWORD *)(v32 + 768);
    v86 = *(_QWORD *)(v32 + 752);
    v87 = *(_QWORD *)(v32 + 744);
    v88 = *(_QWORD *)(v32 + 384);
    v89 = type metadata accessor for Library.Context(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v81, 1, 1, v89);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v81, 0, 1, v87);
    v90 = v83 + *(int *)(v84 + 48);
    v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
    v91(v83, v88, v85);
    v91(v90, v81, v85);
    v92 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
    v93 = (_QWORD *)v32;
    if (v92(v83, 1, v87) == 1)
    {
      v94 = *(_QWORD *)(v32 + 744);
      v95 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v32 + 800) + 8);
      v95(*(_QWORD *)(v32 + 816), *(_QWORD *)(v32 + 768));
      if (v92(v90, 1, v94) == 1)
      {
        v96 = ((uint64_t (*)(_QWORD, _QWORD))v95)(*(_QWORD *)(v32 + 792), *(_QWORD *)(v32 + 768));
LABEL_32:
        v142 = Song.composerName.getter(v96);
        v267 = v143;
        v275 = v142;
        v282 = v93[142];
        v260 = v93[141];
        v225 = v93[140];
        v144 = (void (*)(uint64_t, uint64_t, uint64_t))v93[139];
        v236 = v93[126];
        v145 = v93[123];
        v219 = v93[122];
        v222 = v93[121];
        v207 = v93[125];
        v210 = v93[115];
        v146 = v93[114];
        v147 = v93[112];
        v148 = v93[111];
        v204 = v93[84];
        v149 = v93[79];
        v213 = v93[78];
        v216 = v93[77];
        v239 = (_QWORD *)v93[76];
        v247 = v93[73];
        v251 = v93[75];
        v255 = v93[72];
        v150 = v93[55];
        v229 = v93[54];
        v243 = v93[53];
        v144(v149, v147, v150);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v148 + 56))(v149, 0, 1, v150);
        v151 = sub_100148540(v150, v150);
        v202 = *(_QWORD *)(v148 + 72);
        v152 = *(unsigned __int8 *)(v148 + 80);
        v153 = swift_allocObject(v151, ((v152 + *(unsigned int *)(v151 + 48)) & ~v152) + v202, v152 | *(unsigned __int16 *)(v151 + 52));
        v154 = static Array._adoptStorage(_:count:)(v153, 1);
        v144(v155, v147, v150);
        v156 = sub_10014273C(v154);
        MusicItemCollection.init(arrayLiteral:)(v156, v150, v146);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v207 + 56))(v145, 0, 1, v210);
        sub_100213E08(v149, v145, v204);
        (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v145, v222);
        (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v149, v216);
        v157 = sub_100148540(v150, v150);
        v158 = swift_allocObject(v157, ((*(unsigned int *)(v157 + 48) + v152) & ~v152) + v202, *(unsigned __int16 *)(v157 + 52) | v152);
        swift_bridgeObjectRetain();
        v159 = static Array._adoptStorage(_:count:)(v158, 1);
        v144(v160, v147, v150);
        v161 = sub_10014273C(v159);
        v162 = MusicItemCollection.init(arrayLiteral:)(v161, v150, v146);
        v163 = Song.artistName.getter(v162);
        sub_100213CCC(v260, v225, v236, v275, v267, v163, v164, v243, v239, v229);
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v247 + 16))(v251, v239, v255);
        Array.append(_:)(v251, v282);
        v165 = type metadata accessor for MainActor(0);
        v93[145] = static MainActor.shared.getter(v166);
        v167 = dispatch thunk of Actor.unownedExecutor.getter(v165, &protocol witness table for MainActor);
        v169 = v168;
        v170 = sub_1002123B0;
        return swift_task_switch(v170, v167, v169);
      }
    }
    else
    {
      v103 = *(_QWORD *)(v32 + 744);
      v91(*(_QWORD *)(v32 + 808), *(_QWORD *)(v32 + 792), *(_QWORD *)(v32 + 768));
      v104 = v92(v90, 1, v103);
      v105 = *(_QWORD *)(v32 + 816);
      v106 = *(_QWORD *)(v32 + 808);
      v107 = *(_QWORD *)(v32 + 800);
      if (v104 != 1)
      {
        v274 = v93[96];
        v281 = v93[99];
        v134 = v93[95];
        v135 = v93[94];
        v136 = v93[93];
        v137 = v93[53];
        v138 = v93[54];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 32))(v134, v90, v136);
        v139 = sub_100201740(v106, v134, v137, v138);
        v140 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
        v140(v134, v136);
        v141 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
        v141(v105, v274);
        v140(v106, v136);
        v96 = ((uint64_t (*)(uint64_t, uint64_t))v141)(v281, v274);
        if ((v139 & 1) != 0)
          goto LABEL_32;
LABEL_25:
        v110 = v93[108];
        v111 = v93[90];
        v112 = type metadata accessor for Composer(0);
        v113 = sub_100048748(&qword_10119F2C0, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
        MusicLibrarySectionedRequest.init()(v112, v110, v113, &protocol witness table for Song);
        KeyPath = swift_getKeyPath(&unk_100EAF410);
        v115 = Song.id.getter(KeyPath);
        v117 = v116;
        v93[35] = v115;
        v93[36] = v116;
        MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, v93 + 35, v111, &protocol witness table for MusicItemID);
        swift_bridgeObjectRelease(v117);
        swift_release(KeyPath);
        v118 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
        v93[143] = v118;
        *v118 = v93;
        v118[1] = sub_100211ECC;
        return MusicLibrarySectionedRequest.response()(v93[89], v93[90]);
      }
      v108 = v93[94];
      v109 = v93[93];
      (*(void (**)(_QWORD, _QWORD))(v107 + 8))(v93[102], v93[96]);
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v106, v109);
    }
    (*(void (**)(_QWORD, _QWORD))(v93[98] + 8))(v93[99], v93[97]);
    goto LABEL_25;
  }
LABEL_27:
  v120 = *(_QWORD *)(v32 + 840);
  v121 = *(_QWORD *)(v32 + 576);
  v122 = swift_getWitnessTable(&protocol conformance descriptor for [A], v266);
  RangeReplaceableCollection<>.popLast()(v266, v102, v122);
  v123 = v259(v120, 1, v121);
  v124 = (uint64_t *)v32;
  if (v123 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v32 + 832) + 8))(*(_QWORD *)(v32 + 840), *(_QWORD *)(v32 + 824));
  }
  else
  {
    v273 = (void (*)(uint64_t, uint64_t))v101;
    v125 = *(_QWORD *)(v32 + 544);
    v126 = *(_QWORD *)(v32 + 528);
    v127 = *(_QWORD *)(v32 + 504);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v32 + 584) + 32))(*(_QWORD *)(v32 + 592), *(_QWORD *)(v32 + 840), *(_QWORD *)(v32 + 576));
    v128 = type metadata accessor for Array(0);
    v129 = swift_getWitnessTable(&protocol conformance descriptor for [A], v128);
    v130 = swift_getWitnessTable(&protocol conformance descriptor for [A], v128);
    RangeReplaceableCollection<>.popLast()(v128, v129, v130);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v126, 1, v127) == 1)
    {
      v131 = *(_QWORD *)(v32 + 528);
      v132 = *(_QWORD *)(v32 + 520);
      v133 = *(_QWORD *)(v32 + 512);
      v273(*(_QWORD *)(v32 + 592), *(_QWORD *)(v32 + 576));
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v131, v133);
    }
    else
    {
      v171 = *(_QWORD *)(v32 + 1008);
      v214 = *(_QWORD *)(v32 + 1000);
      v217 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 1104);
      v205 = *(_QWORD *)(v32 + 984);
      v240 = *(_QWORD *)(v32 + 976);
      v244 = *(_QWORD *)(v32 + 968);
      v200 = *(_QWORD *)(v32 + 928);
      v172 = *(_QWORD *)(v32 + 920);
      v191 = *(_QWORD *)(v32 + 896);
      v193 = *(_QWORD *)(v32 + 912);
      v173 = *(_QWORD *)(v32 + 888);
      v220 = *(_QWORD *)(v32 + 664);
      v252 = *(_QWORD *)(v32 + 648);
      v256 = *(_QWORD *)(v32 + 640);
      v198 = *(_QWORD *)(v32 + 632);
      v226 = *(_QWORD *)(v32 + 624);
      v233 = *(_QWORD *)(v32 + 616);
      v196 = *(_QWORD *)(v32 + 600);
      v261 = *(_QWORD *)(v32 + 592);
      v174 = *(_QWORD *)(v32 + 584);
      v175 = *(_QWORD *)(v32 + 576);
      v248 = v280[70];
      v211 = v280[69];
      v230 = v280[68];
      v208 = v280[63];
      v176 = v280[55];
      (*(void (**)(void))(v230 + 32))();
      v177 = sub_100148540(v176, v176);
      v178 = swift_allocObject(v177, ((*(unsigned __int8 *)(v173 + 80) + (unint64_t)*(unsigned int *)(v177 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(_QWORD *)(v173 + 72), *(unsigned __int8 *)(v173 + 80) | (unint64_t)*(unsigned __int16 *)(v177 + 52));
      v179 = static Array._adoptStorage(_:count:)(v178, 1);
      v235(v180, v191, v176);
      v181 = sub_10014273C(v179);
      MusicItemCollection.init(arrayLiteral:)(v181, v176, v193);
      v182 = v261 + *(int *)(v175 + 36);
      static MusicItemCollection.+= infix(_:_:)(v182, v171, v176, v193);
      v65(v171, v172);
      v124 = v280;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v174 + 16))(v196, v261, v175);
      Array.append(_:)(v196, v266);
      Collection.first.getter(v172, v200);
      v217(v205, v182, v172);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v214 + 56))(v205, 0, 1, v172);
      sub_100213E08(v198, v205, v220);
      (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v205, v244);
      (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v198, v233);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v252 + 24))(v211 + *(int *)(v208 + 84), v220, v256);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 16))(v248, v211, v208);
      Array.append(_:)(v248, v128);
      (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v220, v256);
      v273(v261, v175);
      (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v211, v208);
    }
  }
  sub_10020FE80(v124[112], v124[136], v124[82]);
  v183 = type metadata accessor for MainActor(0);
  v124[146] = static MainActor.shared.getter(v184);
  v167 = dispatch thunk of Actor.unownedExecutor.getter(v183, &protocol witness table for MainActor);
  v169 = v185;
  v170 = sub_1002125F0;
  return swift_task_switch(v170, v167, v169);
}

uint64_t sub_1002137E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v1 = v0[144];
  v3 = v0[51];
  v2 = v0[52];
  v4 = v0[50];
  v5 = Logger.musicKit.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = v0[144];
    v71 = v0[90];
    v73 = v0[92];
    v67 = v0[52];
    v69 = v0[91];
    v63 = v0[51];
    v65 = v0[50];
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v74 = v11;
    *(_DWORD *)v10 = 136446210;
    v0[43] = v9;
    swift_errorRetain(v9);
    v12 = sub_100007E8C(&qword_1011A14B0);
    v13 = String.init<A>(describing:)(v0 + 43, v12);
    v15 = v14;
    v0[44] = sub_100322200(v13, v14, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 44, v0 + 45);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to retrieve composer for song: %{public}s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v67, v65);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v73, v71);
  }
  else
  {
    v16 = v0[144];
    v17 = v0[92];
    v18 = v0[91];
    v19 = v0[90];
    v21 = v0[51];
    v20 = v0[52];
    v22 = v0[50];

    swift_errorRelease(v16);
    swift_errorRelease(v16);
    swift_errorRelease(v16);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v72 = v0[142];
  v70 = v0[141];
  v23 = (void (*)(uint64_t, uint64_t, uint64_t))v0[139];
  v24 = v0[123];
  v56 = v0[122];
  v57 = v0[121];
  v58 = v0[140];
  v52 = v0[125];
  v53 = v0[115];
  v25 = v0[114];
  v26 = v0[112];
  v27 = v0[111];
  v60 = v0[126];
  v51 = v0[84];
  v28 = v0[79];
  v54 = v0[78];
  v55 = v0[77];
  v61 = (_QWORD *)v0[76];
  v66 = v0[75];
  v64 = v0[73];
  v68 = v0[72];
  v29 = v0[55];
  v59 = v0[54];
  v62 = v0[53];
  v23(v28, v26, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v29);
  v30 = sub_100148540(v29, v29);
  v31 = *(_QWORD *)(v27 + 72);
  v32 = *(unsigned __int8 *)(v27 + 80);
  v33 = swift_allocObject(v30, ((v32 + *(unsigned int *)(v30 + 48)) & ~v32) + v31, v32 | *(unsigned __int16 *)(v30 + 52));
  v34 = static Array._adoptStorage(_:count:)(v33, 1);
  v23(v35, v26, v29);
  v36 = sub_10014273C(v34);
  v37 = v25;
  MusicItemCollection.init(arrayLiteral:)(v36, v29, v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v24, 0, 1, v53);
  sub_100213E08(v28, v24, v51);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v24, v57);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v28, v55);
  v38 = sub_100148540(v29, v29);
  v39 = swift_allocObject(v38, ((*(unsigned int *)(v38 + 48) + v32) & ~v32) + v31, *(unsigned __int16 *)(v38 + 52) | v32);
  swift_bridgeObjectRetain();
  v40 = static Array._adoptStorage(_:count:)(v39, 1);
  v23(v41, v26, v29);
  v42 = sub_10014273C(v40);
  v43 = MusicItemCollection.init(arrayLiteral:)(v42, v29, v37);
  v44 = Song.artistName.getter(v43);
  sub_100213CCC(v70, v58, v60, 0, 0, v44, v45, v62, v61, v59);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v64 + 16))(v66, v61, v68);
  Array.append(_:)(v66, v72);
  v46 = type metadata accessor for MainActor(0);
  v0[145] = static MainActor.shared.getter(v47);
  v48 = dispatch thunk of Actor.unownedExecutor.getter(v46, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002123B0, v48, v49);
}

uint64_t sub_100213CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v14;
  char *v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  _QWORD *v22;

  v14 = (int *)type metadata accessor for ContainerDetailDataSource.ClassicalWorkSection(0, a8, a10, a4);
  v15 = (char *)a9 + v14[9];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a10, a8, &unk_100F98880, &unk_100F98900);
  v17 = static Array._allocateUninitialized(_:)(0, AssociatedTypeWitness);
  v18 = *(_QWORD *)(swift_getAssociatedConformanceWitness(a10, a8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8)+ 8);
  MusicItemCollection.init(arrayLiteral:)(v17, AssociatedTypeWitness, v18);
  *a9 = a1;
  a9[1] = a2;
  v19 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, v18);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v15, a3, v19);
  v21 = (_QWORD *)((char *)a9 + v14[10]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)((char *)a9 + v14[11]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t sub_100213E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t WitnessTable;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];

  v31 = a1;
  v32 = a2;
  v33 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5, v4, &unk_100F98880, &unk_100F98900);
  v7 = *(_QWORD *)(v5 + 64);
  v34[0] = v4;
  v34[1] = AssociatedTypeWitness;
  v34[2] = v7;
  v34[3] = swift_getAssociatedConformanceWitness(v5, v4, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v34[4] = swift_getAssociatedConformanceWitness(v5, v4, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v8 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v34);
  v9 = type metadata accessor for Optional(0, v8);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v4, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v13 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v14 = type metadata accessor for Optional(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v29 - v16;
  v18 = *(_QWORD *)(v13 - 8);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v29 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v17, v32, v14, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    WitnessTable = swift_getWitnessTable(&unk_100EAF138, v8);
    v25 = type metadata accessor for SourcedPlaybackIntent(0, v8, WitnessTable, v24);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v33, 1, 1, v25);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v17, v13);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v22, v13);
    swift_storeEnumTagMultiPayload(v11, v8, 2);
    v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v11, 0, 1, v8);
    __chkstk_darwin(v27);
    *(&v29 - 4) = v4;
    *(&v29 - 3) = v5;
    *(&v29 - 2) = v31;
    v28 = swift_getWitnessTable(&unk_100EAF138, v8);
    static SourcedPlaybackIntent.with(_:configurator:)((uint64_t)v11, (void (*)(uint64_t))sub_10021F544, (uint64_t)(&v29 - 6), v8, v28, v33);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v13);
  }
}

uint64_t sub_1002140F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4, a3, &unk_100F98880, &unk_100F98900);
  v9 = *(_QWORD *)(a4 + 64);
  v19[0] = a3;
  v19[1] = AssociatedTypeWitness;
  v19[2] = v9;
  v19[3] = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v19[4] = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v10 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v19);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v10);
  v13 = a1 + *(int *)(type metadata accessor for SourcedPlaybackIntent(0, v10, WitnessTable, v12) + 36);
  v16 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v14, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  v17 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, a2, v17);
  return swift_storeEnumTagMultiPayload(v13, v16, 0);
}

uint64_t sub_100214240@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v43 = a2;
  v49 = a3;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 80);
  v48 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Optional(0, v6);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  __chkstk_darwin(v8);
  v45 = (uint64_t *)((char *)&v40 - v9);
  v10 = *(_QWORD *)(v5 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v10, v6, &unk_100F98880, &unk_100F98900);
  v12 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v40 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v17);
  v44 = (char *)&v40 - v18;
  v40 = type metadata accessor for ContainerDetailDataSource.ClassicalWorkSection(0, v6, v10, v19);
  v41 = a1;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v10, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v21 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v21);
  Collection.first.getter(v21, WitnessTable);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v23 = *(_QWORD *)(v10 + 64);
    v24 = swift_getAssociatedConformanceWitness(v10, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
    v25 = swift_getAssociatedConformanceWitness(v10, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
    v26 = swift_getAssociatedConformanceWitness(v10, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
    v50 = v6;
    v51 = AssociatedTypeWitness;
    v52 = v23;
    v53 = AssociatedConformanceWitness;
LABEL_5:
    v54 = v24;
    v55 = v25;
    v56 = v26;
    v32 = type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v49, 1, 1, v32);
  }
  v27 = AssociatedConformanceWitness;
  v28 = v44;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v44, v15, AssociatedTypeWitness);
  v29 = v45;
  sub_1002039A4(v45);
  v30 = v48;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v48 + 48))(v29, 1, v6))
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v28, AssociatedTypeWitness);
    (*(void (**)(_QWORD *, uint64_t))(v46 + 8))(v29, v47);
    v31 = *(_QWORD *)(v10 + 64);
    v24 = swift_getAssociatedConformanceWitness(v10, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
    v25 = swift_getAssociatedConformanceWitness(v10, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
    v26 = swift_getAssociatedConformanceWitness(v10, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
    v50 = v6;
    v51 = AssociatedTypeWitness;
    v52 = v31;
    v53 = v27;
    goto LABEL_5;
  }
  v34 = v42;
  (*(void (**)(char *, _QWORD *, uint64_t))(v30 + 16))(v42, v29, v6);
  (*(void (**)(_QWORD *, uint64_t))(v46 + 8))(v29, v47);
  v35 = *v41;
  v47 = v41[1];
  v36 = sub_100214644(v40);
  v38 = v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 224))(v28, v35, v47, v36, v37, v43, v6, v10);
  v39 = swift_bridgeObjectRelease(v38);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v34, v6, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v28, AssociatedTypeWitness);
}

uint64_t sub_100214644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  Swift::String v16;
  void *object;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(v1 + *(int *)(a1 + 40));
  v9 = *v7;
  v8 = v7[1];
  if (v8)
  {
    v10 = v7[1];
  }
  else
  {
    v11 = String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
    static Locale.current.getter(v11);
    v9 = String.init(localized:table:bundle:locale:comment:)(v6, v9, 0, 0, v4, "Unknown composer name", 21, 2);
    v8 = 0;
  }
  v20 = v9;
  v21 = v10;
  swift_bridgeObjectRetain(v8);
  result = String.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v20 = result;
  v21 = v13;
  v14 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  v15 = (void *)v14[1];
  if (v15)
  {
    v16._countAndFlagsBits = *v14;
    v19._countAndFlagsBits = 0x209380E220;
    v19._object = (void *)0xA500000000000000;
    v16._object = v15;
    String.append(_:)(v16);
    object = v19._object;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(object);
    return v20;
  }
  return result;
}

uint64_t sub_1002147C8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  Swift::String v67;
  Swift::String v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __n128 v74;
  uint64_t v75;
  id v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[8];

  v82 = a2;
  v90 = a1;
  v91 = a3;
  v4 = *v3;
  v5 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v5);
  v84 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  v85 = *(_QWORD *)(v7 - 8);
  v86 = v7;
  __chkstk_darwin(v7);
  v78 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(_QWORD *)(v4 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v10, v9, &unk_100F98880, &unk_100F98900);
  v12 = *(_QWORD *)(v10 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v10, v9, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v14 = swift_getAssociatedConformanceWitness(v10, v9, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v15 = swift_getAssociatedConformanceWitness(v10, v9, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v16 = swift_getAssociatedConformanceWitness(v10, v9, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
  v97[0] = v9;
  v97[1] = AssociatedTypeWitness;
  v97[2] = v12;
  v97[3] = AssociatedConformanceWitness;
  v97[4] = v14;
  v97[5] = v15;
  v97[6] = v16;
  v17 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)v97);
  v88 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v92 = (char *)&v77 - v18;
  v81 = type metadata accessor for ContainerDetailDataSource.Source(0, v9, v10, v19);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v77 - v20;
  v21 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v22);
  v87 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Optional(0, v9);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (id *)((char *)&v77 - v26);
  v89 = v17;
  v28 = type metadata accessor for Optional(0, v17);
  v93 = *(_QWORD *)(v28 - 8);
  v94 = v28;
  __chkstk_darwin(v28);
  v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v77 - v32;
  sub_1002039A4(v27);
  v34 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v27, 1, v9);
  v83 = AssociatedTypeWitness;
  if (v34)
  {
    (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
    v36 = v88;
    v35 = v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v33, 1, 1, v89);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v21 + 16))(v87, v27, v9);
    (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
    v38 = *(void **)((char *)v3 + *(_QWORD *)(*v3 + 208));
    v39 = (uint64_t)v3 + *(_QWORD *)(*v3 + 104);
    v40 = swift_beginAccess(v39, v97, 0, 0);
    v41 = v80;
    v42 = v79;
    v43 = v81;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v80 + 16))(v79, v39, v81, v40);
    v77 = v38;
    v44 = sub_1002034A8(v43);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    v45 = v87;
    (*(void (**)(char *, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v10 + 216))(v90, v82, v38, v44, v9, v10);
    swift_release(v44);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v45, v9);
    v36 = v88;
    v35 = v89;
  }
  v37 = v92;
  v47 = v93;
  v46 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v30, v33, v94);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v30, 1, v35) == 1)
  {
    v48 = *(void (**)(char *, uint64_t))(v47 + 8);
    v48(v33, v46);
    v48(v30, v46);
  }
  else
  {
    v90 = v33;
    v49 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v37, v30, v35);
    v50 = v83;
    v51 = swift_getAssociatedConformanceWitness(v10, v9, v83, &unk_100F98880, &unk_100F988D0);
    v52 = *(void (**)(uint64_t, uint64_t))(v51 + 16);
    v53 = swift_checkMetadataState(0, v50);
    v54 = (uint64_t)v84;
    v52(v53, v51);
    v56 = v85;
    v55 = v86;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v54, 1, v86) == 1)
    {
      (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v94);
      sub_10004FF60(v54, &qword_10119E480);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v49, v35);
    }
    else
    {
      v57 = v78;
      v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 32))(v78, v54, v55);
      v60 = Song.movementName.getter(v58, v59);
      if (v61)
      {
        v62 = v60;
        v63 = v61;
        v64 = Song.movementNumber.getter(v60);
        v95 = sub_1000A36DC(v64, v65 & 1);
        v96 = v66;
        v67._countAndFlagsBits = 32;
        v67._object = (void *)0xE100000000000000;
        String.append(_:)(v67);
        v68._countAndFlagsBits = v62;
        v68._object = v63;
        String.append(_:)(v68);
        v69 = swift_bridgeObjectRelease(v63);
        v70 = v95;
        v71 = v96;
        (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v57, v55, v69);
        (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v94);
        v72 = v92;
        v73 = &v92[*(int *)(v35 + 100)];
        v74 = swift_bridgeObjectRelease(*((_QWORD *)v73 + 1));
        *(_QWORD *)v73 = v70;
        *((_QWORD *)v73 + 1) = v71;
        v75 = v91;
        (*(void (**)(uint64_t, char *, uint64_t, __n128))(v36 + 16))(v91, v72, v35, v74);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v75, 0, 1, v35);
        return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v72, v35);
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v94);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v92, v35);
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v91, 1, 1, v35);
}

double sub_100214E34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v1 = *v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject(&unk_1010B64F8, 24, 7);
  swift_weakInit(v6 + 16, v0);
  type metadata accessor for MainActor(0);
  v7 = swift_retain(v6);
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_1010B6520, 56, 7);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = *(_QWORD *)(v1 + 80);
  v9[5] = *(_QWORD *)(v1 + 88);
  v9[6] = v6;
  swift_release(v6);
  v10 = sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011A7658, (uint64_t)v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_100214F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[7] = v7;
  v4[8] = v8;
  return swift_task_switch(sub_100214FC0, v7, v8);
}

uint64_t sub_100214FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1011A7454);
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_100215050;
    return sub_1002150E8();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100215050(double a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(double *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1002150A0, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1002150A0()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(double *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 48));
  sub_1002042A8(v1);
  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_1002150E8()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[4] = v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 88);
  v1[5] = v3;
  v4 = *(_QWORD *)(v2 + 80);
  v1[6] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3, v4, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, v4, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v7 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v1[7] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[8] = v8;
  v1[9] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Optional(0, v7);
  v1[10] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[11] = v10;
  v1[12] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002151E0, 0, 0);
}

uint64_t sub_1002151E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t KeyPath;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int8x16_t *v19;
  uint64_t WitnessTable;
  uint64_t v21;
  int8x16_t v23;

  v1 = *(_QWORD **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = (_QWORD *)swift_task_alloc(16);
  *v7 = v4;
  v7[1] = v5;
  KeyPath = swift_getKeyPath(&unk_100EAF3B8);
  swift_task_dealloc(v7);
  v9 = (_QWORD *)swift_task_alloc(16);
  *v9 = v4;
  v9[1] = v5;
  v10 = swift_getKeyPath(&unk_100EAF3F0);
  swift_task_dealloc(v9);
  static Published.subscript.getter(v1, v6, KeyPath, v10);
  swift_release(KeyPath);
  v11 = swift_release(v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v1, 1, v2, v11))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    v12 = 0.0;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 64);
    v23 = *(int8x16_t *)(v0 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v13, v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_QWORD *)(v0 + 24) = 0;
    v19 = (int8x16_t *)swift_task_alloc(32);
    v19[1] = vextq_s8(v23, v23, 8uLL);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v17);
    Sequence.reduce<A>(_:_:)(v0 + 24, sub_10021F478, v19, v17, &type metadata for Double, WitnessTable);
    swift_task_dealloc(v19);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v12 = *(double *)(v0 + 16);
  }
  v21 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(double))(v0 + 8))(v12);
}

double sub_1002153BC@<D0>(double *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>)
{
  double v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  double v12;
  char v13;
  double result;

  v7 = *a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3, a2, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D0);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  v11 = swift_checkMetadataState(0, AssociatedTypeWitness);
  v12 = COERCE_DOUBLE(v10(v11, AssociatedConformanceWitness));
  if ((v13 & 1) != 0)
    v12 = 0.0;
  result = v7 + v12;
  *a4 = result;
  return result;
}

uint64_t sub_100215488()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t WitnessTable;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  _QWORD v52[16];

  v1 = v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 80);
  v47 = type metadata accessor for Optional(0, v3);
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v48 = (char **)((char *)&v44 - v4);
  v5 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v8, v3, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v11 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v50 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v45 = (char *)&v44 - v12;
  v49 = type metadata accessor for Optional(0, v11);
  v13 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v15 = (char **)((char *)&v44 - v14);
  v17 = type metadata accessor for ContainerDetailDataSource.Source(0, v3, v8, v16);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v44 - v19;
  static ApplicationCapabilities.shared.getter((uint64_t)v52);
  sub_100065184(v52);
  if ((v52[0] & 0x100) == 0)
    goto LABEL_2;
  v44 = v7;
  v22 = v1;
  v23 = (uint64_t)v1 + *(_QWORD *)(*v1 + 104);
  v24 = swift_beginAccess(v23, v51, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, v23, v17, v24);
  v25 = type metadata accessor for Library.Context(0);
  LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v20, 1, v25);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if ((_DWORD)v23 == 1)
  {
    v21 = 0;
    return sub_100203C7C(v21);
  }
  v26 = sub_100204670();
  __chkstk_darwin(v26);
  *(&v44 - 2) = (char *)v3;
  *(&v44 - 1) = (char *)v8;
  KeyPath = swift_getKeyPath(&unk_100EAF3B8);
  __chkstk_darwin(KeyPath);
  *(&v44 - 2) = (char *)v3;
  *(&v44 - 1) = (char *)v8;
  v28 = swift_getKeyPath(&unk_100EAF3F0);
  static Published.subscript.getter(v15, v22, KeyPath, v28);
  swift_release(v28);
  v29 = swift_release(KeyPath);
  v30 = v50;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v50 + 48))(v15, 1, v11, v29))
  {
    (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v49);
    goto LABEL_8;
  }
  v31 = v26;
  v32 = v45;
  (*(void (**)(char *, _QWORD *, uint64_t))(v30 + 16))(v45, v15, v11);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v49);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v11);
  v34 = Collection.count.getter(v11, WitnessTable);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v11);
  if (v31 != v34)
  {
LABEL_8:
    v35 = v48;
    sub_1002039A4(v48);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v35, 1, v3) == 1)
    {
      (*(void (**)(_QWORD *, uint64_t))(v46 + 8))(v35, v47);
      v36 = type metadata accessor for Album(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
      v39 = (uint64_t)v44;
    }
    else
    {
      v36 = type metadata accessor for Album(0);
      v39 = (uint64_t)v44;
      v40 = swift_dynamicCast(v44, v35, v3, v36, 6);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
      if ((v40 & 1) != 0)
      {
        v41 = v39;
        v42 = 0;
LABEL_13:
        v38(v41, v42, 1, v36);
        type metadata accessor for Album(0);
        v21 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v36) == 0;
        sub_10004FF60(v39, &qword_1011A8FA0);
        return sub_100203C7C(v21);
      }
    }
    v41 = v39;
    v42 = 1;
    goto LABEL_13;
  }
LABEL_2:
  v21 = 0;
  return sub_100203C7C(v21);
}

uint64_t sub_100215944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, __n128);
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char v49;
  void (*v50)(uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[24];
  char v65[24];

  v63 = a2;
  v6 = *(_QWORD *)(v4 + 80);
  v62 = *(_QWORD *)(v4 + 88);
  v7 = type metadata accessor for ContainerDetailDataSource.Source(0, v6, v62, a4);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  __chkstk_darwin(v7);
  v55 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v54 = (char *)&v52 - v10;
  v11 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v12);
  v52 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Optional(255, v6);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v14, v14, 0, 0);
  v59 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v17 = (char *)&v52 - v16;
  v18 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v19);
  v58 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v52 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v52 - v25;
  v53 = a1;
  sub_1002039A4((char **)((char *)&v52 - v25));
  sub_1002039A4(v23);
  v60 = TupleTypeMetadata2;
  v27 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
  v28 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v28(v17, v26, v14);
  v28(v27, v23, v14);
  v61 = v11;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v29(v17, 1, v6) != 1)
  {
    v32 = v58;
    v28(v58, v17, v14);
    if (v29(v27, 1, v6) != 1)
    {
      v34 = v61;
      v35 = v52;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v52, v27, v6);
      v36 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v35, v6, *(_QWORD *)(*(_QWORD *)(v62 + 72) + 8));
      v37 = *(void (**)(char *, uint64_t))(v34 + 8);
      v37(v35, v6);
      v38 = *(void (**)(char *, uint64_t))(v18 + 8);
      v38(v23, v14);
      v38(v26, v14);
      v39 = v32;
      v31 = v62;
      v37(v39, v6);
      v38(v17, v14);
      if ((v36 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v49 = 0;
      return v49 & 1;
    }
    v33 = *(void (**)(char *, uint64_t))(v18 + 8);
    v33(v23, v14);
    v33(v26, v14);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v32, v6);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v60);
    goto LABEL_9;
  }
  v30 = *(void (**)(char *, uint64_t))(v18 + 8);
  v30(v23, v14);
  v30(v26, v14);
  if (v29(v27, 1, v6) != 1)
    goto LABEL_6;
  v30(v17, v14);
  v31 = v62;
LABEL_8:
  v40 = v53 + *(_QWORD *)(*(_QWORD *)v53 + 104);
  v41 = swift_beginAccess(v40, v65, 0, 0);
  v43 = v56;
  v42 = v57;
  v44 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v56 + 16);
  v45 = (uint64_t)v54;
  v44(v54, v40, v57, v41);
  v46 = v63 + *(_QWORD *)(*(_QWORD *)v63 + 104);
  v47 = swift_beginAccess(v46, v64, 0, 0);
  v48 = (uint64_t)v55;
  v44(v55, v46, v42, v47);
  v49 = sub_100201740(v45, v48, v6, v31);
  v50 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v50(v48, v42);
  v50(v45, v42);
  return v49 & 1;
}

uint64_t sub_100215D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v22[24];

  v5 = v4;
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 80);
  v9 = *(_QWORD *)(v7 + 88);
  v10 = type metadata accessor for ContainerDetailDataSource.Source(0, v8, v9, a4);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v22[-v12 - 8];
  v14 = type metadata accessor for Optional(0, v8);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v22[-v16 - 8];
  sub_1002039A4(&v22[-v16 - 8]);
  Optional<A>.hash(into:)(a1, v14, *(_QWORD *)(v9 + 72));
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v18 = (uint64_t)v5 + *(_QWORD *)(*v5 + 104);
  v19 = swift_beginAccess(v18, v22, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v18, v10, v19);
  sub_1002035BC(a1, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t *sub_100215E94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  v4 = type metadata accessor for Optional(255, v3);
  v5 = type metadata accessor for Published(0, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  v6 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  v7 = *(_QWORD *)(v1 + 88);
  v9 = type metadata accessor for ContainerDetailDataSource.Source(0, v3, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112) + 8));
  v10 = (uint64_t)v0 + *(_QWORD *)(*v0 + 120);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12((uint64_t)v0 + *(_QWORD *)(*v0 + 128), v11);
  v13 = (uint64_t)v0 + *(_QWORD *)(*v0 + 136);
  v15 = type metadata accessor for ContainerDetailDataSource.ContainerLibraryData(255, v3, v7, v14);
  v16 = type metadata accessor for Optional(0, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 144)));
  v17 = (uint64_t)v0 + *(_QWORD *)(*v0 + 152);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v7, v3, &unk_100F98880, &unk_100F98900);
  v19 = *(_QWORD *)(v7 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v7, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v21 = swift_getAssociatedConformanceWitness(v7, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v22 = swift_getAssociatedConformanceWitness(v7, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v23 = swift_getAssociatedConformanceWitness(v7, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
  v60 = v3;
  v61 = AssociatedTypeWitness;
  v62 = v19;
  v63 = AssociatedConformanceWitness;
  v64 = v21;
  v65 = v22;
  v66 = v23;
  type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)&v60);
  v24 = type metadata accessor for Array(255);
  v25 = type metadata accessor for Published(0, v24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v17, v25);
  v26 = (uint64_t)v0 + *(_QWORD *)(*v0 + 160);
  v27 = type metadata accessor for Dictionary(255, &type metadata for String, v24, &protocol witness table for String);
  v28 = type metadata accessor for Published(0, v27);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);
  v29 = (uint64_t)v0 + *(_QWORD *)(*v0 + 168);
  v60 = v3;
  v61 = AssociatedTypeWitness;
  v62 = v19;
  v63 = AssociatedConformanceWitness;
  v64 = v21;
  v65 = v22;
  v66 = v23;
  type metadata accessor for ContainerHeaderRow.ViewModel(255, (uint64_t)&v60);
  v30 = type metadata accessor for Array(255);
  v31 = type metadata accessor for Published(0, v30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v29, v31);
  v32 = (uint64_t)v0 + *(_QWORD *)(*v0 + 176);
  v33 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v34 = type metadata accessor for Optional(255, v33);
  v35 = type metadata accessor for Published(0, v34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v32, v35);
  v36 = (uint64_t)v0 + *(_QWORD *)(*v0 + 184);
  v37 = sub_100007E8C(&qword_10119F0C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
  v38 = (uint64_t)v0 + *(_QWORD *)(*v0 + 192);
  v39 = sub_100007E8C((uint64_t *)&unk_1011A4320);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
  v40 = (uint64_t)v0 + *(_QWORD *)(*v0 + 200);
  v41 = sub_100007E8C(&qword_10119F0B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);

  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 216)));
  v42 = (uint64_t)v0 + *(_QWORD *)(*v0 + 224);
  v43 = sub_100007E8C(&qword_10119F0A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  v44 = (uint64_t)v0 + *(_QWORD *)(*v0 + 232);
  v45 = sub_100007E8C(&qword_10119F0A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
  v46 = (uint64_t)v0 + *(_QWORD *)(*v0 + 240);
  v47 = sub_100007E8C(&qword_10119F098);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
  v48 = (uint64_t)v0 + *(_QWORD *)(*v0 + 248);
  v49 = sub_100007E8C(&qword_10119F090);
  v50 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8);
  v50(v48, v49);
  v50((uint64_t)v0 + *(_QWORD *)(*v0 + 256), v49);
  v51 = (uint64_t)v0 + *(_QWORD *)(*v0 + 264);
  v52 = sub_100007E8C(&qword_1011A8F30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
  v53 = (uint64_t)v0 + *(_QWORD *)(*v0 + 272);
  v54 = sub_100007E8C(&qword_10119F088);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
  v55 = (uint64_t)v0 + *(_QWORD *)(*v0 + 280);
  v60 = v3;
  v61 = AssociatedTypeWitness;
  v62 = v19;
  v63 = v21;
  v64 = v22;
  v56 = type metadata accessor for ContainerDetailHeaderView.ViewModel(255, (uint64_t)&v60);
  v57 = type metadata accessor for Optional(255, v56);
  v58 = type metadata accessor for Published(0, v57);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v55, v58);
  return v0;
}

uint64_t sub_1002163E8()
{
  uint64_t v0;

  sub_100215E94();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

Swift::Int sub_10021640C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  sub_100215D4C((uint64_t)v4, v0, v1, v2);
  return Hasher._finalize()();
}

Swift::Int sub_100216448()
{
  return sub_10021640C();
}

uint64_t sub_100216468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100215D4C(a1, a2, a3, a4);
}

Swift::Int sub_100216488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  sub_100215D4C((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1002164C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ContainerDetailDataSource(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a2);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a3 = result;
  return result;
}

uint64_t sub_100216504(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100215944(*a1, *a2, a3, a4);
}

double sub_100216510(uint64_t a1, _QWORD *a2)
{
  return sub_10021F108(a2);
}

void sub_10021651C()
{
  sub_10021F208();
}

uint64_t sub_100216524(uint64_t a1, void *a2)
{
  return sub_10021F2AC(a2);
}

id sub_100216530@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __n128 v60;
  _QWORD *v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  Swift::String v98;
  uint64_t countAndFlagsBits;
  void *object;
  int *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t *v106;
  void *v107;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[4];

  v115 = a5;
  v116 = a4;
  v113 = a3;
  v123 = a2;
  v120 = a6;
  v121 = a1;
  v7 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v7);
  v119 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v9);
  v126 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Album(0);
  v124 = *(_QWORD *)(v11 - 8);
  v125 = v11;
  __chkstk_darwin(v11);
  v114 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v13);
  v112 = (uint64_t)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v118 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v117 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v110 = *(_QWORD *)(v19 - 8);
  v111 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Date.FormatStyle(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v28 = (char *)&v109 - v27;
  v29 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v29);
  v31 = (char *)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = v6;
  Album.releaseDate.getter(v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    v37 = sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011A30A0);
    v38 = 0;
    v39 = 0;
  }
  else
  {
    v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v33 + 32))(v36, v31, v32);
    v41 = static FormatStyle<>.dateTime.getter(v40);
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v41);
    Date.FormatStyle.year(_:)(v21);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v21, v111);
    v42 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42(v26, v22);
    v43 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
    Date.formatted<A>(_:)(v127, v28, v22, v43);
    v42(v28, v22);
    v37 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v36, v32);
    v38 = (char *)v127[0];
    v39 = (char *)v127[1];
  }
  v44 = v122;
  v45 = (uint64_t)v119;
  if ((Album.isPreorder.getter(v37) & 1) != 0)
  {
    swift_bridgeObjectRelease(v39);
    v52 = v117;
    v53 = String.LocalizationValue.init(stringLiteral:)(0x676E696D6F637055, 0xEE006D75626C4120);
    v54 = v118;
    static Locale.current.getter(v53);
    v55 = String.init(localized:table:bundle:locale:comment:)(v52, 0, 0, 0, v54, "Detail page badge for upcoming album", 36, 2);
    v118 = v56;
    v119 = (char *)v55;
    goto LABEL_17;
  }
  v46 = v112;
  sub_10004A160(v113, v112, &qword_10119ED08);
  v47 = type metadata accessor for Genre(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
  {
    sub_10004FF60(v46, &qword_10119ED08);
    v50 = v114;
    v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 16))(v114, v44, v125);
  }
  else
  {
    v57 = Genre.name.getter(v49);
    v59 = v58;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    v50 = v114;
    v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 16))(v114, v44, v125);
    if (v59)
      goto LABEL_11;
  }
  v61 = (_QWORD *)Album.genreNames.getter(v51);
  v62 = v61;
  if (v61[2])
  {
    v57 = v61[4];
    v59 = (char *)v61[5];
    swift_bridgeObjectRetain();
    v60 = swift_bridgeObjectRelease(v62);
LABEL_11:
    v55 = (*(uint64_t (**)(char *, uint64_t, __n128))(v124 + 8))(v50, v125, v60);
    if (v39)
    {
      v63 = v117;
      v64 = String.LocalizationValue.init(stringLiteral:)(0x402520B7C2204025, 0xA800000000000000);
      v65 = v118;
      static Locale.current.getter(v64);
      v66 = String.init(localized:table:bundle:locale:comment:)(v63, 0, 0, 0, v65, 0, 0, 256);
      v68 = v67;
      v69 = sub_100007E8C(&qword_1011E7E30);
      v70 = swift_allocObject(v69, 112, 7);
      *(_OWORD *)(v70 + 16) = xmmword_100EA7A80;
      *(_QWORD *)(v70 + 56) = &type metadata for String;
      v71 = sub_10021F388();
      *(_QWORD *)(v70 + 32) = v57;
      *(_QWORD *)(v70 + 40) = v59;
      *(_QWORD *)(v70 + 96) = &type metadata for String;
      *(_QWORD *)(v70 + 104) = v71;
      *(_QWORD *)(v70 + 64) = v71;
      *(_QWORD *)(v70 + 72) = v38;
      *(_QWORD *)(v70 + 80) = v39;
      v72 = String.init(format:_:)(v66, v68, v70);
      v118 = v73;
      v119 = (char *)v72;
      swift_bridgeObjectRelease(v68);
    }
    else
    {
      v118 = v59;
      v119 = (char *)v57;
    }
    goto LABEL_17;
  }
  v74 = swift_bridgeObjectRelease(v61);
  v55 = (*(uint64_t (**)(char *, uint64_t, __n128))(v124 + 8))(v50, v125, v74);
  if (v39)
  {
    v118 = v39;
    v119 = v38;
  }
  else
  {
    v118 = (char *)0xE000000000000000;
    v119 = 0;
  }
LABEL_17:
  v75 = Album.title.getter(v55);
  v77 = v76;
  v78 = Album.artistName.getter(v75);
  v80 = v79;
  v81 = Album.audioVariants.getter();
  v82 = v126;
  Album.favoriteStatus.getter();
  v83 = type metadata accessor for MusicFavoriteStatus(0);
  v84 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
  Album.editorialNotes.getter(v84);
  v85 = type metadata accessor for EditorialNotes(0);
  v86 = *(_QWORD *)(v85 - 8);
  v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v45, 1, v85);
  v122 = v81;
  v88 = v80;
  v89 = v78;
  if (v87 == 1)
  {
    sub_10004FF60(v45, &qword_1011A58C8);
    v90 = v120;
  }
  else
  {
    EditorialNotes.standard.getter();
    v91 = v45;
    v93 = v92;
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v91, v85);
    v90 = v120;
    if (v93)
    {
      v94 = v77;
      v95 = v75;
      v96 = v93;
      v97 = v121;
      goto LABEL_22;
    }
  }
  v94 = v77;
  v96 = v115;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(0);
  v97 = v121;
  v95 = v75;
  if (!v96)
  {
    object = 0;
    countAndFlagsBits = v116;
    goto LABEL_24;
  }
LABEL_22:
  v98 = String.trim()();
  countAndFlagsBits = v98._countAndFlagsBits;
  object = v98._object;
  swift_bridgeObjectRelease(v96);
LABEL_24:
  v101 = (int *)sub_100007E8C(&qword_10119F128);
  sub_10004A160(v97, (uint64_t)v90 + v101[20], &qword_10119F140);
  v102 = (char *)v90 + v101[22];
  (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v102, v44, v125);
  v103 = enum case for GenericMusicItem.album(_:);
  v104 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 104))(v102, v103, v104);
  *v90 = v95;
  v90[1] = v94;
  v90[2] = v89;
  v90[3] = v88;
  v105 = v118;
  v90[4] = (uint64_t)v119;
  v90[5] = (uint64_t)v105;
  v90[6] = v122;
  sub_100065228(v126, (uint64_t)v90 + v101[18], &qword_1011A19A0);
  v106 = (uint64_t *)((char *)v90 + v101[19]);
  *v106 = countAndFlagsBits;
  v106[1] = (uint64_t)object;
  v107 = v123;
  *(uint64_t *)((char *)v90 + v101[21]) = (uint64_t)v123;
  return v107;
}

void sub_100216D18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v44)(char *, uint64_t);
  unsigned int v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char v87;
  double v88;
  char v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(char *, uint64_t);
  uint64_t v98;
  unsigned int (*v99)(char *, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v108 = a4;
  v109 = a3;
  v104 = a2;
  v5 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v5);
  v107 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119F140);
  __chkstk_darwin(v7);
  v115 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A7648);
  __chkstk_darwin(v9);
  v114 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v11);
  v113 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v13);
  v111 = (uint64_t)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v15);
  v112 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v17);
  v19 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Track(0);
  v25 = *(_QWORD **)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v100 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v110 = (uint64_t)&v92 - v29;
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v92 - v31;
  v33 = __chkstk_darwin(v30);
  v35 = (char *)&v92 - v34;
  v36 = Track.id.getter(v33);
  v101 = v37;
  v102 = v36;
  v38 = (void (*)(char *, uint64_t, uint64_t))v25[2];
  v103 = v35;
  v38(v35, a1, v24);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v105 = v23;
  v40 = v23;
  v41 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
  v39(v40, v116, v20);
  v42 = type metadata accessor for ArtworkImage.ViewModel(0);
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v106 = v19;
  v43(v19, 1, 1, v42);
  v38(v32, a1, v24);
  v44 = (unsigned int (*)(char *, uint64_t))v25[11];
  v45 = v44(v32, v24);
  v99 = v44;
  if (v45 == enum case for Track.song(_:))
  {
    v46 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
LABEL_6:
    v51 = v112;
    v52 = 1;
    goto LABEL_7;
  }
  v48 = v45;
  v49 = enum case for Track.musicVideo(_:);
  v50 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v46 = v50;
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
  if (v48 != v49)
    goto LABEL_6;
  v51 = v112;
  v52 = 4;
LABEL_7:
  v47(v51, v52, 10, v46);
  v53 = v115;
  v54 = v110;
  v97 = (uint64_t (*)(char *, uint64_t))v25[1];
  v55 = v97(v32, v24);
  v110 = Track.title.getter(v55);
  v98 = v56;
  v57 = Track.artistName.getter(v110);
  v59 = v58;
  v61 = Album.artistName.getter(v57);
  v62 = v60;
  if (v57 == v61 && v59 == v60)
  {
    v63 = swift_bridgeObjectRelease_n(v59, 2);
    v64 = 0;
    v95 = 0;
    v66 = v113;
    v65 = v114;
  }
  else
  {
    v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v61, v60, 0);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v62);
    v66 = v113;
    if ((v67 & 1) != 0)
    {
      v64 = 0;
      v95 = 0;
    }
    else
    {
      v63 = Track.artistName.getter(v63);
      v64 = v63;
      v95 = v68;
    }
    v65 = v114;
  }
  v69 = Track.trackNumber.getter(v63);
  v96 = v64;
  if ((v70 & 1) != 0)
  {
    v92 = 0;
  }
  else
  {
    v69 = Track.trackNumber.getter(v69);
    if ((v71 & 1) != 0)
    {
      __break(1u);
      return;
    }
    v92 = v69;
  }
  v94 = Track.duration.getter(v69);
  v73 = v72;
  v74 = Track.contentRating.getter(v94);
  Track.favoriteStatus.getter(v74);
  v75 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v66, 0, 1, v75);
  v41(v54, a1, v24);
  sub_1002174C4(v54, v65);
  sub_10004A160(v104, v53, &qword_10119F140);
  v41(v54, a1, v24);
  v76 = (void (*)(char *, uint64_t, uint64_t))v41;
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  LODWORD(v104) = v73 & 1;
  v77 = Player.state<A>(for:)(v54, v24, (uint64_t)&protocol witness table for Track);
  v78 = sub_100007E8C((uint64_t *)&unk_1011D12F0);
  v79 = sub_100049F28((unint64_t *)&unk_1011A97B0, (uint64_t *)&unk_1011D12F0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
  v93 = ObservedObject.init(wrappedValue:)(v77, v78, v79);
  v81 = v80;
  v82 = (void (*)(char *, uint64_t))v97;
  v97((char *)v54, v24);
  v83 = v109;
  v84 = MusicLibrary.state<A>(for:)(a1, v24, &protocol witness table for Track);
  v85 = v107;
  sub_1001D3BB4(v107);
  v86 = v100;
  v76(v100, a1, v24);
  v87 = v99(v86, v24) == enum case for Track.musicVideo(_:);
  v82(v86, v24);
  v88 = COERCE_DOUBLE(Album.popularity(for:)(a1));
  if ((v89 & 1) != 0)
    v88 = 0.0;
  v90 = v108;
  sub_100217660(v102, v101, (uint64_t)v103, (uint64_t)v105, (uint64_t)v106, 0, v112, v110, v108, 0.0, v98, v96, v95, v92, 0, v94, v104, 0, 0,
    v111,
    v113,
    v114,
    v115,
    v93,
    v81,
    v83,
    v84,
    0,
    (uint64_t)v85,
    v87,
    v88 >= 0.7,
    1,
    &qword_10119F288,
    (uint64_t (*)(_QWORD))&type metadata accessor for Track,
    (uint64_t (*)(_QWORD))&type metadata accessor for Album,
    &qword_10119F140);
  v91 = sub_100007E8C(&qword_10119F288);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 0, 1, v91);
  swift_retain(v83);
}

uint64_t sub_1002174C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Track(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(a1, v8);
  if (v10 == enum case for Track.song(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for Song(0);
    v12 = (unsigned int *)&enum case for GenericMusicItem.song(_:);
LABEL_5:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, a1);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v12, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  if (v10 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for MusicVideo(0);
    v12 = (unsigned int *)&enum case for GenericMusicItem.musicVideo(_:);
    goto LABEL_5;
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
}

uint64_t sub_100217660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,char a31,char a32,uint64_t *a33,uint64_t (*a34)(_QWORD),uint64_t (*a35)(_QWORD),uint64_t *a36)
{
  int *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t result;

  *a9 = a1;
  a9[1] = a2;
  v40 = (int *)sub_100007E8C(a33);
  v41 = (char *)a9 + v40[19];
  v42 = a34(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v41, a3, v42);
  v43 = (char *)a9 + v40[20];
  v44 = a35(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v43, a4, v44);
  sub_100065228(a5, (uint64_t)a9 + v40[21], (uint64_t *)&unk_1011A3E10);
  *((_BYTE *)a9 + v40[22]) = a6;
  *(double *)((char *)a9 + v40[23]) = a10;
  sub_10005B6C0(a7, (uint64_t)a9 + v40[24], type metadata accessor for ArtworkImage.Placeholder);
  v45 = (_QWORD *)((char *)a9 + v40[25]);
  *v45 = a8;
  v45[1] = a11;
  v46 = (_QWORD *)((char *)a9 + v40[26]);
  *v46 = a12;
  v46[1] = a13;
  v47 = (char *)a9 + v40[27];
  *(_QWORD *)v47 = a14;
  v47[8] = a15;
  v48 = (char *)a9 + v40[28];
  *(_QWORD *)v48 = a16;
  v48[8] = a17 & 1;
  v49 = (_QWORD *)((char *)a9 + v40[29]);
  *v49 = a18;
  v49[1] = a19;
  sub_100065228(a20, (uint64_t)a9 + v40[30], &qword_1011B8D50);
  sub_100065228(a21, (uint64_t)a9 + v40[31], &qword_1011A19A0);
  sub_100065228(a22, (uint64_t)a9 + v40[32], &qword_1011A7648);
  sub_100065228(a23, (uint64_t)a9 + v40[33], a36);
  v50 = (_QWORD *)((char *)a9 + v40[34]);
  *v50 = a24;
  v50[1] = a25;
  *(_QWORD *)((char *)a9 + v40[35]) = a26;
  *(_QWORD *)((char *)a9 + v40[36]) = a27;
  *(_QWORD *)((char *)a9 + v40[37]) = a28;
  result = sub_10005B6C0(a29, (uint64_t)a9 + v40[38], type metadata accessor for ContextualPreview.Data);
  *((_BYTE *)a9 + v40[39]) = a30;
  *((_BYTE *)a9 + v40[40]) = a31;
  *((_BYTE *)a9 + v40[41]) = a32;
  return result;
}

uint64_t sub_10021794C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a3;
  v12 = a2 & 1;
  v13 = sub_100007E8C(&qword_1011A4150);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = Album.isAppleDigitalMaster.getter(v17);
  v21 = v20;
  Album.releaseDate.getter(v20);
  sub_10004A160(a5, (uint64_t)v15, &qword_1011A4150);
  v22 = type metadata accessor for TracklistFooter.ViewModel(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1001ABA88(v21, (uint64_t)v19, a1, v12, v25, a4, (uint64_t)v15, a6, a7);
}

uint64_t sub_100217A9C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 56) = sub_100048748((unint64_t *)&unk_1011B6B70, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  result = sub_100048748(&qword_10119EE30, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  *(_QWORD *)(a1 + 72) = result;
  return result;
}

uint64_t sub_100217AF8(uint64_t a1)
{
  return EditorialVideoArtworkVending.editorialVideoArtworks.getter(a1, &protocol witness table for Album);
}

_UNKNOWN **sub_100217B04()
{
  return &off_1010B6210;
}

void *sub_100217B10()
{
  return &protocol witness table for Playlist.Entry;
}

void *sub_100217B1C()
{
  return &protocol witness table for Playlist.Entry;
}

void *sub_100217B28()
{
  return &protocol witness table for Playlist.Entry;
}

void *sub_100217B34()
{
  return &protocol witness table for Playlist.Entry;
}

uint64_t sub_100217B40()
{
  return sub_100048748((unint64_t *)&unk_1011D0D10, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
}

id sub_100217B6C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  uint64_t countAndFlagsBits;
  void *object;
  int *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  void *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  char *v69;

  v6 = v5;
  v60 = a4;
  v61 = a3;
  v67 = a2;
  v65 = a1;
  v8 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v8);
  v69 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v66 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v60 - v14;
  v16 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Date(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.lastModifiedDate.getter(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A30A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v18, v19);
    v68 = Date.lastUpdatedDateString.getter();
    v26 = v25;
    v27 = Playlist.isChart.getter(v68);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    if ((v27 & 1) == 0)
    {
      v62 = v26;
      v28 = v65;
      v29 = v68;
      goto LABEL_7;
    }
    v24 = swift_bridgeObjectRelease(v26);
  }
  v29 = 0;
  v62 = 0;
  v28 = v65;
LABEL_7:
  v30 = Playlist.name.getter(v24);
  v64 = v31;
  v65 = v30;
  v32 = Playlist.curatorName.getter(v30);
  v34 = v33;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v35(v15, v6, v10);
  v68 = v29;
  if (v34)
  {
    v63 = v32;
  }
  else
  {
    v63 = sub_10031E9D4();
    v34 = v36;
  }
  v37 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v38 = v37(v15, v10);
  v39 = v69;
  Playlist.favoriteStatus.getter(v38);
  v40 = type metadata accessor for MusicFavoriteStatus(0);
  v41 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
  Playlist.standardDescription.getter(v41);
  v43 = v42;
  v44 = v66;
  v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v35)(v66, v6, v10);
  if (v43)
  {
    v37(v44, v10);
  }
  else
  {
    Playlist.shortDescription.getter(v45);
    v43 = v46;
    v37(v44, v10);
    if (!v43)
    {
      v43 = v60;
      if (!v60)
      {
        object = 0;
        countAndFlagsBits = v61;
        goto LABEL_16;
      }
      swift_bridgeObjectRetain();
    }
  }
  v47 = String.trim()();
  countAndFlagsBits = v47._countAndFlagsBits;
  object = v47._object;
  swift_bridgeObjectRelease(v43);
LABEL_16:
  v50 = (int *)sub_100007E8C(&qword_10119F368);
  sub_10004A160(v28, (uint64_t)a5 + v50[20], &qword_10119F380);
  v51 = (char *)a5 + v50[22];
  v35(v51, v6, v10);
  v52 = enum case for GenericMusicItem.playlist(_:);
  v53 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v51, v52, v53);
  v54 = v64;
  *a5 = v65;
  a5[1] = v54;
  a5[2] = v63;
  a5[3] = v34;
  v55 = (uint64_t)v69;
  v56 = v62;
  a5[4] = v68;
  a5[5] = v56;
  a5[6] = 0;
  sub_100065228(v55, (uint64_t)a5 + v50[18], &qword_1011A19A0);
  v57 = (uint64_t *)((char *)a5 + v50[19]);
  *v57 = countAndFlagsBits;
  v57[1] = (uint64_t)object;
  v58 = v67;
  *(uint64_t *)((char *)a5 + v50[21]) = (uint64_t)v67;
  return v58;
}

uint64_t sub_100217F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  double v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  char v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;

  v131 = a3;
  v132 = a4;
  v129 = a2;
  v5 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v5);
  v130 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119F380);
  __chkstk_darwin(v7);
  v134 = (uint64_t)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A7648);
  __chkstk_darwin(v9);
  v133 = (uint64_t)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v11);
  v135 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v13);
  v137 = (uint64_t)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v15);
  v138 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v17);
  v136 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v115 = *(_QWORD *)(v113 - 8);
  v19 = __chkstk_darwin(v113);
  v128 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v123 = (char *)&v112 - v22;
  v23 = __chkstk_darwin(v21);
  v121 = (char *)&v112 - v24;
  v25 = __chkstk_darwin(v23);
  v120 = (char *)&v112 - v26;
  v27 = __chkstk_darwin(v25);
  v119 = (uint64_t)&v112 - v28;
  v29 = __chkstk_darwin(v27);
  v117 = (uint64_t)&v112 - v30;
  v31 = __chkstk_darwin(v29);
  v112 = (char *)&v112 - v32;
  v33 = __chkstk_darwin(v31);
  v114 = (uint64_t)&v112 - v34;
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v112 - v36;
  __chkstk_darwin(v35);
  v39 = (char *)&v112 - v38;
  v40 = type metadata accessor for Playlist(0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v43 = (char *)&v112 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Playlist.Entry(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = __chkstk_darwin(v44);
  v48 = (char *)&v112 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v46);
  v51 = (char *)&v112 - v50;
  v52 = Playlist.Entry.id.getter(v49);
  v124 = v53;
  v125 = v52;
  v122 = v45;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  v126 = v51;
  v55 = v51;
  v56 = v44;
  v57 = a1;
  v54(v55, a1, v56);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16);
  v127 = v43;
  v59 = v43;
  v60 = (uint64_t)v48;
  v61 = v113;
  v62 = v58(v59, v116, v40);
  Playlist.Entry.internalItem.getter(v62);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v61, (uint64_t)&protocol witness table for Playlist.Entry.InternalItem, v136);
  v63 = v115;
  v64 = *(uint64_t (**)(char *, uint64_t))(v115 + 8);
  v65 = v39;
  v66 = v112;
  v67 = v64(v65, v61);
  Playlist.Entry.internalItem.getter(v67);
  v68 = sub_1002188B4();
  v69 = v37;
  v70 = v114;
  v71 = v64(v69, v61);
  Playlist.Entry.internalItem.getter(v71);
  v72 = v138;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v66, v70, v61);
  v73 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v66, v61);
  v118 = (void (*)(uint64_t, uint64_t, uint64_t))v54;
  if (v73 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
    goto LABEL_2;
  if (v73 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    goto LABEL_4;
  if (v73 == enum case for Playlist.Entry.InternalItem.song(_:))
    goto LABEL_6;
  if (v73 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
LABEL_2:
    v64(v66, v61);
    v74 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v72, 5, 10, v74);
    goto LABEL_7;
  }
  if (v73 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
  {
LABEL_6:
    v64(v66, v61);
    v76 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v72, 1, 10, v76);
  }
  else
  {
    if (v73 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
    {
LABEL_4:
      v64(v66, v61);
      v75 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v72, 4, 10, v75);
      goto LABEL_7;
    }
    v110 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v72, 1, 10, v110);
    v64(v66, v61);
  }
LABEL_7:
  v77 = v64((char *)v70, v61);
  v78 = v117;
  v79 = Playlist.Entry.internalItem.getter(v77);
  v116 = Playlist.Entry.InternalItem.title.getter(v79);
  v115 = v80;
  v81 = v64((char *)v78, v61);
  v82 = v119;
  v83 = Playlist.Entry.internalItem.getter(v81);
  v117 = Playlist.Entry.InternalItem.subtitle.getter(v83);
  v114 = v84;
  v85 = v64((char *)v82, v61);
  v86 = v120;
  v87 = Playlist.Entry.internalItem.getter(v85);
  v119 = Playlist.Entry.InternalItem.duration.getter(v87);
  v89 = v88;
  v90 = v64(v86, v61);
  v91 = v121;
  Playlist.Entry.internalItem.getter(v90);
  sub_100218C74(v137);
  v92 = v64(v91, v61);
  v93 = v123;
  Playlist.Entry.internalItem.getter(v92);
  sub_100218FD8(v135);
  v64(v93, v61);
  v94 = v118;
  v118(v60, v57, v56);
  sub_100219268(v60, v133);
  sub_10004A160(v129, v134, &qword_10119F380);
  v94(v60, v57, v56);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v95 = v89 & 1;
  v96 = Player.state<A>(for:)(v60, v56, (uint64_t)&protocol witness table for Playlist.Entry);
  v97 = v56;
  v98 = sub_100007E8C((uint64_t *)&unk_1011D0C40);
  v99 = sub_100049F28((unint64_t *)&unk_1011D1350, (uint64_t *)&unk_1011D0C40, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
  v100 = ObservedObject.init(wrappedValue:)(v96, v98, v99);
  v102 = v101;
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v60, v97);
  v103 = v131;
  swift_retain(v131);
  v104 = MusicLibrary.state<A>(for:)(v57, v97, &protocol witness table for Playlist.Entry);
  v105 = v128;
  Playlist.Entry.internalItem.getter(v104);
  v106 = v130;
  sub_1001D2198(v130);
  v64(v105, v61);
  v111 = v100;
  v107 = v132;
  sub_100217660(v125, v124, (uint64_t)v126, (uint64_t)v127, (uint64_t)v136, 1, v138, v116, v132, v68, v115, v117, v114, 0, 2, v119, v95, 0, 0,
    v137,
    v135,
    v133,
    v134,
    v111,
    v102,
    v103,
    v104,
    0,
    (uint64_t)v106,
    0,
    0,
    0,
    &qword_10119F480,
    (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry,
    (uint64_t (*)(_QWORD))&type metadata accessor for Playlist,
    &qword_10119F380);
  v108 = sub_100007E8C(&qword_10119F480);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v107, 0, 1, v108);
}

double sub_1002188B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  double v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char *v36;

  v35 = type metadata accessor for UploadedVideo(0);
  v0 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v35 - v7;
  v9 = type metadata accessor for TVEpisode(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v36, v13);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 != enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    v36 = v6;
    v19 = v35;
    if (v17 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    {
      v20 = *(void (**)(char *, uint64_t))(v14 + 8);
      v21 = v16;
      v22 = v13;
LABEL_5:
      v20(v21, v22);
      return 1.77777778;
    }
    if (v17 != enum case for Playlist.Entry.InternalItem.song(_:))
    {
      if (v17 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
        v19 = v9;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
        v23 = (uint64_t)v8;
        TVEpisode.artworkViewModel.getter(v8);
        v24 = type metadata accessor for ArtworkImage.ViewModel(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v8, 1, v24) == 1)
        {
          sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3E10);
        }
        else
        {
          v29 = ArtworkImage.ViewModel.calculatedAspectRatio.getter();
          v31 = v30;
          sub_10005B748(v23, type metadata accessor for ArtworkImage.ViewModel);
          if ((v31 & 1) == 0)
          {
            v18 = *(double *)&v29;
            (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
            return v18;
          }
        }
        v20 = *(void (**)(char *, uint64_t))(v10 + 8);
        v21 = v12;
        goto LABEL_23;
      }
      if (v17 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
        && v17 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
        v25 = v2;
        (*(void (**)(char *, char *, uint64_t))(v0 + 32))(v2, v16, v19);
        v26 = v36;
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v19, (uint64_t)&protocol witness table for UploadedVideo, v36);
        v27 = type metadata accessor for ArtworkImage.ViewModel(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27) == 1)
        {
          sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A3E10);
        }
        else
        {
          v32 = ArtworkImage.ViewModel.calculatedAspectRatio.getter();
          v34 = v33;
          sub_10005B748((uint64_t)v26, type metadata accessor for ArtworkImage.ViewModel);
          if ((v34 & 1) == 0)
          {
            v18 = *(double *)&v32;
            (*(void (**)(char *, uint64_t))(v0 + 8))(v25, v19);
            return v18;
          }
        }
        v20 = *(void (**)(char *, uint64_t))(v0 + 8);
        v21 = v25;
LABEL_23:
        v22 = v19;
        goto LABEL_5;
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 1.0;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return 0.666666667;
}

uint64_t sub_100218C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v37 = a1;
  v3 = type metadata accessor for UploadedVideo(0);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  __chkstk_darwin();
  v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UploadedAudio(0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  __chkstk_darwin();
  v34 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicVideo(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Song(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v2, v15);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
    goto LABEL_2;
  v22 = v37;
  if (v19 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v18, v7);
    MusicVideo.contentRating.getter(v23);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (v19 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
    Song.contentRating.getter(v24);
    v25 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  }
  else
  {
    if (v19 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
    {
LABEL_2:
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v20 = type metadata accessor for ContentRating(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v37, 1, 1, v20);
    }
    if (v19 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
    {
      (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
      v14 = v34;
      v26 = v35;
      v11 = v36;
      v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v35 + 32))(v34, v18, v36);
      UploadedAudio.contentRating.getter(v27);
    }
    else
    {
      if (v19 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
      {
        v29 = type metadata accessor for ContentRating(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v22, 1, 1, v29);
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
      v14 = v31;
      v26 = v32;
      v11 = v33;
      v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v31, v18, v33);
      UploadedVideo.contentRating.getter(v28);
    }
    v25 = *(uint64_t (**)(char *, uint64_t))(v26 + 8);
  }
  return v25(v14, v11);
}

uint64_t sub_100218FD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = type metadata accessor for MusicVideo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Song(0);
  v8 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin();
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v2, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v16 = type metadata accessor for MusicFavoriteStatus(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    MusicVideo.favoriteStatus.getter(v18);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_7:
    v21 = type metadata accessor for MusicFavoriteStatus(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    v19 = v26;
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v26);
    Song.favoriteStatus.getter(v20);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
    goto LABEL_7;
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:)
    || v15 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    || v15 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    goto LABEL_2;
  }
  v24 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100219268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v4 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GenericMusicItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin();
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v13 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    v14 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v15 = type metadata accessor for MusicMovie(0);
    v16 = (unsigned int *)&enum case for GenericMusicItem.musicMovie(_:);
  }
  else
  {
    v17 = v13;
    if (v13 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    {
      v18 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      v15 = type metadata accessor for MusicVideo(0);
      v16 = (unsigned int *)&enum case for GenericMusicItem.musicVideo(_:);
    }
    else if (v13 == enum case for Playlist.Entry.InternalItem.song(_:))
    {
      v19 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      v15 = type metadata accessor for Song(0);
      v16 = (unsigned int *)&enum case for GenericMusicItem.song(_:);
    }
    else if (v13 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
    {
      v20 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      v15 = type metadata accessor for TVEpisode(0);
      v16 = (unsigned int *)&enum case for GenericMusicItem.tvEpisode(_:);
    }
    else if (v13 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
    {
      v21 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      v15 = type metadata accessor for UploadedAudio(0);
      v16 = (unsigned int *)&enum case for GenericMusicItem.uploadedAudio(_:);
    }
    else
    {
      v22 = enum case for Playlist.Entry.InternalItem.uploadedVideo(_:);
      v23 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
      if (v17 != v22)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v24 = 1;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v24, 1, v8);
      }
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      v15 = type metadata accessor for UploadedVideo(0);
      v16 = (unsigned int *)&enum case for GenericMusicItem.uploadedVideo(_:);
    }
  }
  (*(void (**)(char *, char *))(*(_QWORD *)(v15 - 8) + 32))(v12, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *v16, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v12, v8);
  v24 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v24, 1, v8);
}

uint64_t sub_1002195B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002195D0((uint64_t *)&unk_1011D0B50, a1);
}

uint64_t sub_1002195C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002195D0((uint64_t *)&unk_1011ACAE0, a1);
}

uint64_t sub_1002195D0@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = sub_100007E8C(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_100219610(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v13 = a2 & 1;
  v14 = sub_100007E8C(&qword_1011A4150);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_10004A160(a5, (uint64_t)v16, &qword_1011A4150);
  v21 = type metadata accessor for TracklistFooter.ViewModel(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1001ABA88(2, (uint64_t)v19, a1, v13, a3, a4, (uint64_t)v16, a6, a7);
}

uint64_t sub_100219774(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 56) = sub_100048748(&qword_10119F3E0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  result = sub_100048748(&qword_10119EE28, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  *(_QWORD *)(a1 + 72) = result;
  return result;
}

uint64_t sub_1002197D0(uint64_t a1)
{
  return EditorialVideoArtworkVending.editorialVideoArtworks.getter(a1, &protocol witness table for Playlist);
}

uint64_t sub_1002197DC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackFilter.genres.getter);
}

uint64_t sub_1002197E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackInternalFilter.composers.getter);
}

uint64_t sub_1002197F4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackFilter.albums.getter);
}

uint64_t sub_100219800@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100219818(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackSortProperties.discNumber.getter, a2);
}

uint64_t sub_10021980C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100219818(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackSortProperties.trackNumber.getter, a2);
}

uint64_t sub_100219818@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;

  v5 = a1[3];
  v6 = a1[4];
  sub_100007E68(a1, v5);
  result = a2(v5, v6);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v8 & 1;
  return result;
}

uint64_t sub_100219870()
{
  return Track.duration.getter();
}

uint64_t sub_100219888()
{
  return Track.trackNumber.getter();
}

uint64_t sub_1002198A0()
{
  return Playlist.Entry.duration.getter();
}

uint64_t sub_1002198B8()
{
  return Playlist.Entry.position.getter();
}

void sub_1002198D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = type metadata accessor for Optional(255, v2);
  v4 = type metadata accessor for Published(319, v3);
  if (v6 <= 0x3F)
  {
    v64[0] = *(_QWORD *)(v4 - 8) + 64;
    v7 = *(_QWORD *)(a1 + 88);
    v8 = type metadata accessor for ContainerDetailDataSource.Source(319, v2, v7, v5);
    if (v9 <= 0x3F)
    {
      v64[1] = *(_QWORD *)(v8 - 8) + 64;
      v64[2] = &unk_100EAF000;
      sub_1000EA598(319, (unint64_t *)&qword_1011C4B00, (uint64_t)&type metadata for Bool);
      if (v12 <= 0x3F)
      {
        v65 = *(_QWORD *)(v10 - 8) + 64;
        v66 = v65;
        v13 = type metadata accessor for ContainerDetailDataSource.ContainerLibraryData(255, v2, v7, v11);
        v14 = type metadata accessor for Optional(319, v13);
        if (v15 <= 0x3F)
        {
          v67 = *(_QWORD *)(v14 - 8) + 64;
          v68 = &unk_100EAF018;
          AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v7, v2, &unk_100F98880, &unk_100F98900);
          v17 = *(_QWORD *)(v7 + 64);
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v7, v2, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
          v19 = swift_getAssociatedConformanceWitness(v7, v2, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
          v20 = swift_getAssociatedConformanceWitness(v7, v2, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
          v21 = swift_getAssociatedConformanceWitness(v7, v2, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
          v57 = v2;
          v58 = AssociatedTypeWitness;
          v59 = v17;
          v60 = AssociatedConformanceWitness;
          v61 = v19;
          v62 = v20;
          v63 = v21;
          type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)&v57);
          v22 = type metadata accessor for Array(255);
          v23 = type metadata accessor for Published(319, v22);
          if (v24 <= 0x3F)
          {
            v69 = *(_QWORD *)(v23 - 8) + 64;
            v25 = type metadata accessor for Dictionary(255, &type metadata for String, v22, &protocol witness table for String);
            v26 = type metadata accessor for Published(319, v25);
            if (v27 <= 0x3F)
            {
              v70 = *(_QWORD *)(v26 - 8) + 64;
              v57 = v2;
              v58 = AssociatedTypeWitness;
              v59 = v17;
              v60 = AssociatedConformanceWitness;
              v61 = v19;
              v62 = v20;
              v63 = v21;
              type metadata accessor for ContainerHeaderRow.ViewModel(255, (uint64_t)&v57);
              v28 = type metadata accessor for Array(255);
              v29 = type metadata accessor for Published(319, v28);
              if (v30 <= 0x3F)
              {
                v71 = *(_QWORD *)(v29 - 8) + 64;
                v31 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
                v32 = type metadata accessor for Optional(255, v31);
                v33 = type metadata accessor for Published(319, v32);
                if (v34 <= 0x3F)
                {
                  v72 = *(_QWORD *)(v33 - 8) + 64;
                  sub_1000EA598(319, (unint64_t *)&qword_1011A4140, (uint64_t)&type metadata for Double);
                  if (v36 <= 0x3F)
                  {
                    v73 = *(_QWORD *)(v35 - 8) + 64;
                    sub_1000EA54C(319, &qword_1011A4148, &qword_1011A4150);
                    if (v38 <= 0x3F)
                    {
                      v74 = *(_QWORD *)(v37 - 8) + 64;
                      sub_1000EA54C(319, &qword_1011A7458, &qword_10119F0B8);
                      if (v40 <= 0x3F)
                      {
                        v75 = *(_QWORD *)(v39 - 8) + 64;
                        v76 = &unk_100EAF018;
                        v77 = &unk_100EAF018;
                        sub_1000EA54C(319, &qword_1011A7460, &qword_10119F110);
                        if (v42 <= 0x3F)
                        {
                          v78 = *(_QWORD *)(v41 - 8) + 64;
                          sub_1000EA54C(319, &qword_1011A7468, &qword_10119F118);
                          if (v44 <= 0x3F)
                          {
                            v79 = *(_QWORD *)(v43 - 8) + 64;
                            sub_1000EA54C(319, &qword_1011A4158, (uint64_t *)&unk_1011A4160);
                            if (v46 <= 0x3F)
                            {
                              v80 = *(_QWORD *)(v45 - 8) + 64;
                              sub_1000EA54C(319, (unint64_t *)&qword_1011A64A0, &qword_10119DCA0);
                              if (v48 <= 0x3F)
                              {
                                v81 = *(_QWORD *)(v47 - 8) + 64;
                                v82 = v81;
                                sub_1000EA54C(319, (unint64_t *)&qword_1011A7470, &qword_10119F120);
                                if (v50 <= 0x3F)
                                {
                                  v83 = *(_QWORD *)(v49 - 8) + 64;
                                  sub_1000EA598(319, qword_1011A7478, (uint64_t)&type metadata for Int);
                                  if (v52 <= 0x3F)
                                  {
                                    v84 = *(_QWORD *)(v51 - 8) + 64;
                                    v57 = v2;
                                    v58 = AssociatedTypeWitness;
                                    v59 = v17;
                                    v60 = v19;
                                    v61 = v20;
                                    v53 = type metadata accessor for ContainerDetailHeaderView.ViewModel(255, (uint64_t)&v57);
                                    v54 = type metadata accessor for Optional(255, v53);
                                    v55 = type metadata accessor for Published(319, v54);
                                    if (v56 <= 0x3F)
                                    {
                                      v85 = *(_QWORD *)(v55 - 8) + 64;
                                      swift_initClassMetadata2(a1, 0, 24, v64, a1 + 96);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for ContainerDetailDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContainerDetailDataSource);
}

uint64_t type metadata accessor for ContainerDetailDataSource.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContainerDetailDataSource.Source);
}

uint64_t type metadata accessor for ContainerDetailDataSource.ContainerLibraryData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContainerDetailDataSource.ContainerLibraryData);
}

uint64_t sub_100219DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_100219DB8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE v10[32];
  _QWORD v11[3];

  v2 = swift_checkMetadataState(319, a1[2]);
  if (v3 <= 0x3F)
  {
    v4 = type metadata accessor for Library.Context(319);
    if (v5 > 0x3F)
    {
      return v4;
    }
    else
    {
      v6 = *(_QWORD *)(v2 - 8) + 64;
      swift_getTupleTypeLayout2(v10, v6, *(_QWORD *)(v4 - 8) + 64);
      v11[0] = v10;
      v11[1] = v6;
      v7 = type metadata accessor for MusicItemCollection(319, a1[3], *(_QWORD *)(a1[5] + 8));
      v2 = v7;
      if (v8 <= 0x3F)
      {
        v11[2] = *(_QWORD *)(v7 - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 0, 3, v11);
        return 0;
      }
    }
  }
  return v2;
}

uint64_t *sub_100219E90(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  int *v68;

  v5 = *(_DWORD *)(*(a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = type metadata accessor for MusicItemCollection(0, a3[3], *(_QWORD *)(a3[5] + 8));
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(a3[2] - 8) + 16))(a1, a2);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v13 = a3[2];
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = type metadata accessor for Library.Context(255);
      v15 = *(int *)(swift_getTupleTypeMetadata2(0, v13, v14, " context ", 0) + 48);
      v16 = (uint64_t *)((char *)a1 + v15);
      v17 = (char *)a2 + v15;
      v18 = *(uint64_t *)((char *)a2 + v15);
      *v16 = v18;
      v68 = (int *)v14;
      v19 = *(int *)(v14 + 20);
      v20 = (char *)v16 + v19;
      v21 = &v17[v19];
      v22 = type metadata accessor for Album(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v23 + 48);
      v25 = swift_retain(v18);
      if (v24(v21, 1, v22, v25))
      {
        v26 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v27 = v68[6];
      v28 = (char *)v16 + v27;
      v29 = &v17[v27];
      v30 = type metadata accessor for Artist(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v68[7];
      v34 = (char *)v16 + v33;
      v35 = &v17[v33];
      v36 = type metadata accessor for Composer(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v68[8];
      v40 = (char *)v16 + v39;
      v41 = &v17[v39];
      v42 = type metadata accessor for Genre(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C(&qword_10119ED08);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v68[9];
      v46 = (char *)v16 + v45;
      v47 = &v17[v45];
      v48 = type metadata accessor for Playlist(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v68[10];
      v52 = (char *)v16 + v51;
      v53 = &v17[v51];
      v54 = type metadata accessor for TVShow(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      v57 = v68[11];
      v58 = (char *)v16 + v57;
      v59 = &v17[v57];
      v60 = type metadata accessor for TVSeason(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        v62 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      *((_BYTE *)v16 + v68[12]) = v17[v68[12]];
      *((_BYTE *)v16 + v68[13]) = v17[v68[13]];
      *((_BYTE *)v16 + v68[14]) = v17[v68[14]];
      v63 = v68[15];
      v64 = (_QWORD *)((char *)v16 + v63);
      v65 = &v17[v63];
      v66 = *((_QWORD *)v65 + 1);
      *v64 = *(_QWORD *)v65;
      v64[1] = v66;
      *(_QWORD *)((char *)v16 + v68[16]) = *(_QWORD *)&v17[v68[16]];
      *((_BYTE *)v16 + v68[17]) = v17[v68[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_10021A3FC(uint64_t a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v29 = type metadata accessor for MusicItemCollection(0, a2[3], *(_QWORD *)(a2[5] + 8));
      v30 = *(_QWORD *)(v29 - 8);
LABEL_21:
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(a1, v29);
      return;
    case 1:
      v29 = a2[2];
      v30 = *(_QWORD *)(v29 - 8);
      goto LABEL_21;
    case 0:
      v5 = a2[2];
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      v6 = (int *)type metadata accessor for Library.Context(255);
      v7 = (_QWORD *)(a1 + *(int *)(swift_getTupleTypeMetadata2(0, v5, v6, " context ", 0) + 48));
      swift_release(*v7);
      v8 = (char *)v7 + v6[5];
      v9 = type metadata accessor for Album(0);
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      v11 = (char *)v7 + v6[6];
      v12 = type metadata accessor for Artist(0);
      v13 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      v14 = (char *)v7 + v6[7];
      v15 = type metadata accessor for Composer(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
      v17 = (char *)v7 + v6[8];
      v18 = type metadata accessor for Genre(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = (char *)v7 + v6[9];
      v21 = type metadata accessor for Playlist(0);
      v22 = *(_QWORD *)(v21 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
      v23 = (char *)v7 + v6[10];
      v24 = type metadata accessor for TVShow(0);
      v25 = *(_QWORD *)(v24 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      v26 = (char *)v7 + v6[11];
      v27 = type metadata accessor for TVSeason(0);
      v28 = *(_QWORD *)(v27 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v6[15] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v6[16]));
      break;
  }
}

uint64_t sub_10021A6C4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v66;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for MusicItemCollection(0, a3[3], *(_QWORD *)(a3[5] + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v7 = a1;
    v8 = a3;
    v9 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3[2] - 8) + 16))(a1, a2);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v11 = a3[2];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v12 = (int *)type metadata accessor for Library.Context(255);
    v13 = *(int *)(swift_getTupleTypeMetadata2(0, v11, v12, " context ", 0) + 48);
    v66 = a1;
    v14 = (_QWORD *)(a1 + v13);
    v15 = a2 + v13;
    v16 = *(_QWORD *)(a2 + v13);
    *v14 = v16;
    v17 = v12[5];
    v18 = (char *)v14 + v17;
    v19 = (const void *)(v15 + v17);
    v20 = type metadata accessor for Album(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v21 + 48);
    v23 = swift_retain(v16);
    if (v22(v19, 1, v20, v23))
    {
      v24 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    a1 = v66;
    v25 = v12[6];
    v26 = (char *)v14 + v25;
    v27 = (const void *)(v15 + v25);
    v28 = type metadata accessor for Artist(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = v12[7];
    v32 = (char *)v14 + v31;
    v33 = (const void *)(v15 + v31);
    v34 = type metadata accessor for Composer(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = v12[8];
    v38 = (char *)v14 + v37;
    v39 = (const void *)(v15 + v37);
    v40 = type metadata accessor for Genre(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C(&qword_10119ED08);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v12[9];
    v44 = (char *)v14 + v43;
    v45 = (const void *)(v15 + v43);
    v46 = type metadata accessor for Playlist(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v12[10];
    v50 = (char *)v14 + v49;
    v51 = (const void *)(v15 + v49);
    v52 = type metadata accessor for TVShow(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v55 = v12[11];
    v56 = (char *)v14 + v55;
    v57 = (const void *)(v15 + v55);
    v58 = type metadata accessor for TVSeason(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    *((_BYTE *)v14 + v12[12]) = *(_BYTE *)(v15 + v12[12]);
    *((_BYTE *)v14 + v12[13]) = *(_BYTE *)(v15 + v12[13]);
    *((_BYTE *)v14 + v12[14]) = *(_BYTE *)(v15 + v12[14]);
    v61 = v12[15];
    v62 = (_QWORD *)((char *)v14 + v61);
    v63 = (_QWORD *)(v15 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    *(_QWORD *)((char *)v14 + v12[16]) = *(_QWORD *)(v15 + v12[16]);
    *((_BYTE *)v14 + v12[17]) = *(_BYTE *)(v15 + v12[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = v66;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

uint64_t sub_10021AC04(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  int *v65;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, _QWORD *))(*(a3 - 1) + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for MusicItemCollection(0, a3[3], *(_QWORD *)(a3[5] + 8));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v7 = a1;
      v8 = a3;
      v9 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3[2] - 8) + 16))(a1, a2);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v11 = a3[2];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = type metadata accessor for Library.Context(255);
      v13 = *(int *)(swift_getTupleTypeMetadata2(0, v11, v12, " context ", 0) + 48);
      v14 = (_QWORD *)(a1 + v13);
      v15 = a2 + v13;
      v16 = *(_QWORD *)(a2 + v13);
      *v14 = v16;
      v65 = (int *)v12;
      v17 = *(int *)(v12 + 20);
      v18 = (char *)v14 + v17;
      v19 = (const void *)(v15 + v17);
      v20 = type metadata accessor for Album(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v21 + 48);
      v23 = swift_retain(v16);
      if (v22(v19, 1, v20, v23))
      {
        v24 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v25 = v65[6];
      v26 = (char *)v14 + v25;
      v27 = (const void *)(v15 + v25);
      v28 = type metadata accessor for Artist(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v65[7];
      v32 = (char *)v14 + v31;
      v33 = (const void *)(v15 + v31);
      v34 = type metadata accessor for Composer(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v65[8];
      v38 = (char *)v14 + v37;
      v39 = (const void *)(v15 + v37);
      v40 = type metadata accessor for Genre(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_10119ED08);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v65[9];
      v44 = (char *)v14 + v43;
      v45 = (const void *)(v15 + v43);
      v46 = type metadata accessor for Playlist(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v65[10];
      v50 = (char *)v14 + v49;
      v51 = (const void *)(v15 + v49);
      v52 = type metadata accessor for TVShow(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v65[11];
      v56 = (char *)v14 + v55;
      v57 = (const void *)(v15 + v55);
      v58 = type metadata accessor for TVSeason(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      *((_BYTE *)v14 + v65[12]) = *(_BYTE *)(v15 + v65[12]);
      *((_BYTE *)v14 + v65[13]) = *(_BYTE *)(v15 + v65[13]);
      *((_BYTE *)v14 + v65[14]) = *(_BYTE *)(v15 + v65[14]);
      v61 = v65[15];
      v62 = (_QWORD *)((char *)v14 + v61);
      v63 = (_QWORD *)(v15 + v61);
      *v62 = *v63;
      v62[1] = v63[1];
      *(_QWORD *)((char *)v14 + v65[16]) = *(_QWORD *)(v15 + v65[16]);
      *((_BYTE *)v14 + v65[17]) = *(_BYTE *)(v15 + v65[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_10021B168(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for MusicItemCollection(0, a3[3], *(_QWORD *)(a3[5] + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v7 = a1;
    v8 = a3;
    v9 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3[2] - 8) + 32))(a1, a2);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v11 = a3[2];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    v12 = (int *)type metadata accessor for Library.Context(255);
    v13 = *(int *)(swift_getTupleTypeMetadata2(0, v11, v12, " context ", 0) + 48);
    v14 = (_QWORD *)(a1 + v13);
    v15 = a2 + v13;
    *v14 = *(_QWORD *)(a2 + v13);
    v16 = v12[5];
    v17 = (char *)v14 + v16;
    v18 = (const void *)(v15 + v16);
    v19 = type metadata accessor for Album(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = v12[6];
    v23 = (char *)v14 + v22;
    v24 = (const void *)(v15 + v22);
    v25 = type metadata accessor for Artist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = v12[7];
    v29 = (char *)v14 + v28;
    v30 = (const void *)(v15 + v28);
    v31 = type metadata accessor for Composer(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = v12[8];
    v35 = (char *)v14 + v34;
    v36 = (const void *)(v15 + v34);
    v37 = type metadata accessor for Genre(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = sub_100007E8C(&qword_10119ED08);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = v12[9];
    v41 = (char *)v14 + v40;
    v42 = (const void *)(v15 + v40);
    v43 = type metadata accessor for Playlist(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = v12[10];
    v47 = (char *)v14 + v46;
    v48 = (const void *)(v15 + v46);
    v49 = type metadata accessor for TVShow(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = v12[11];
    v53 = (char *)v14 + v52;
    v54 = (const void *)(v15 + v52);
    v55 = type metadata accessor for TVSeason(0);
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      v57 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    *((_BYTE *)v14 + v12[12]) = *(_BYTE *)(v15 + v12[12]);
    *((_BYTE *)v14 + v12[13]) = *(_BYTE *)(v15 + v12[13]);
    *((_BYTE *)v14 + v12[14]) = *(_BYTE *)(v15 + v12[14]);
    *(_OWORD *)((char *)v14 + v12[15]) = *(_OWORD *)(v15 + v12[15]);
    *(_QWORD *)((char *)v14 + v12[16]) = *(_QWORD *)(v15 + v12[16]);
    *((_BYTE *)v14 + v12[17]) = *(_BYTE *)(v15 + v12[17]);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

uint64_t sub_10021B67C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, _QWORD *))(*(a3 - 1) + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for MusicItemCollection(0, a3[3], *(_QWORD *)(a3[5] + 8));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v7 = a1;
      v8 = a3;
      v9 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3[2] - 8) + 32))(a1, a2);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v11 = a3[2];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = (int *)type metadata accessor for Library.Context(255);
      v13 = *(int *)(swift_getTupleTypeMetadata2(0, v11, v12, " context ", 0) + 48);
      v14 = (_QWORD *)(a1 + v13);
      v15 = a2 + v13;
      *v14 = *(_QWORD *)(a2 + v13);
      v16 = v12[5];
      v17 = (char *)v14 + v16;
      v18 = (const void *)(v15 + v16);
      v19 = type metadata accessor for Album(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v22 = v12[6];
      v23 = (char *)v14 + v22;
      v24 = (const void *)(v15 + v22);
      v25 = type metadata accessor for Artist(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v28 = v12[7];
      v29 = (char *)v14 + v28;
      v30 = (const void *)(v15 + v28);
      v31 = type metadata accessor for Composer(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v34 = v12[8];
      v35 = (char *)v14 + v34;
      v36 = (const void *)(v15 + v34);
      v37 = type metadata accessor for Genre(0);
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        v39 = sub_100007E8C(&qword_10119ED08);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v38 + 32))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v40 = v12[9];
      v41 = (char *)v14 + v40;
      v42 = (const void *)(v15 + v40);
      v43 = type metadata accessor for Playlist(0);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        v45 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v44 + 32))(v41, v42, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      v46 = v12[10];
      v47 = (char *)v14 + v46;
      v48 = (const void *)(v15 + v46);
      v49 = type metadata accessor for TVShow(0);
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v50 + 32))(v47, v48, v49);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      v52 = v12[11];
      v53 = (char *)v14 + v52;
      v54 = (const void *)(v15 + v52);
      v55 = type metadata accessor for TVSeason(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v56 + 32))(v53, v54, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      *((_BYTE *)v14 + v12[12]) = *(_BYTE *)(v15 + v12[12]);
      *((_BYTE *)v14 + v12[13]) = *(_BYTE *)(v15 + v12[13]);
      *((_BYTE *)v14 + v12[14]) = *(_BYTE *)(v15 + v12[14]);
      *(_OWORD *)((char *)v14 + v12[15]) = *(_OWORD *)(v15 + v12[15]);
      *(_QWORD *)((char *)v14 + v12[16]) = *(_QWORD *)(v15 + v12[16]);
      *((_BYTE *)v14 + v12[17]) = *(_BYTE *)(v15 + v12[17]);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t type metadata accessor for ContainerPlaybackSource(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ContainerPlaybackSource);
}

uint64_t sub_10021BBB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  _BYTE v7[32];
  _BYTE v8[32];
  _QWORD v9[2];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  result = type metadata accessor for MusicLibraryRequest(319, v2, *(_QWORD *)(v3 + 40));
  if (v5 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v8, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.NativeObject + 64);
    v9[0] = v8;
    result = type metadata accessor for MusicLibraryMapping.Request(319, v2, *(_QWORD *)(v3 + 56));
    if (v6 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v7, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.NativeObject + 64);
      v9[1] = v7;
      swift_initEnumMetadataMultiPayload(a1, 0, 2, v9);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10021BC88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = *(_QWORD *)(a3 + 16);
    v9 = *(_QWORD *)(a3 + 24);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for MusicLibraryMapping.Request(0, v8, *(_QWORD *)(v9 + 56));
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryMapping.Request<A>, v10);
      v12 = type metadata accessor for MusicAutoupdatingResponse(255, v10, WitnessTable);
      v13 = *(int *)(swift_getTupleTypeMetadata2(0, v10, v12, 0, 0) + 48);
      v14 = *(uint64_t *)((char *)a2 + v13);
      *(uint64_t *)((char *)a1 + v13) = v14;
      swift_retain(v14);
      v15 = a1;
      v16 = a3;
      v17 = 1;
    }
    else
    {
      v19 = type metadata accessor for MusicLibraryRequest(0, v8, *(_QWORD *)(v9 + 40));
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
      v20 = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryRequest<A>, v19);
      v21 = type metadata accessor for MusicAutoupdatingResponse(255, v19, v20);
      v22 = *(int *)(swift_getTupleTypeMetadata2(0, v19, v21, 0, 0) + 48);
      v23 = *(uint64_t *)((char *)a2 + v22);
      *(uint64_t *)((char *)a1 + v22) = v23;
      swift_retain(v23);
      v15 = a1;
      v16 = a3;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_10021BDFC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for MusicLibraryMapping.Request(0, v5, *(_QWORD *)(v6 + 56));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    v8 = &protocol conformance descriptor for MusicLibraryMapping.Request<A>;
  }
  else
  {
    v7 = type metadata accessor for MusicLibraryRequest(0, v5, *(_QWORD *)(v6 + 40));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    v8 = &protocol conformance descriptor for MusicLibraryRequest<A>;
  }
  WitnessTable = swift_getWitnessTable(v8, v7);
  v10 = type metadata accessor for MusicAutoupdatingResponse(255, v7, WitnessTable);
  v11 = *(_QWORD *)(a1 + *(int *)(swift_getTupleTypeMetadata2(0, v7, v10, 0, 0) + 48));
  return swift_release(v11);
}

uint64_t sub_10021BEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for MusicLibraryMapping.Request(0, v7, *(_QWORD *)(v8 + 56));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryMapping.Request<A>, v9);
    v11 = type metadata accessor for MusicAutoupdatingResponse(255, v9, WitnessTable);
    v12 = *(int *)(swift_getTupleTypeMetadata2(0, v9, v11, 0, 0) + 48);
    v13 = *(_QWORD *)(a2 + v12);
    *(_QWORD *)(a1 + v12) = v13;
    v14 = 1;
  }
  else
  {
    v15 = type metadata accessor for MusicLibraryRequest(0, v7, *(_QWORD *)(v8 + 40));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
    v16 = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryRequest<A>, v15);
    v17 = type metadata accessor for MusicAutoupdatingResponse(255, v15, v16);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v15, v17, 0, 0);
    v14 = 0;
    v19 = *(int *)(TupleTypeMetadata2 + 48);
    v13 = *(_QWORD *)(a2 + v19);
    *(_QWORD *)(a1 + v19) = v13;
  }
  swift_retain(v13);
  swift_storeEnumTagMultiPayload(a1, a3, v14);
  return a1;
}

uint64_t sub_10021C000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = *(_QWORD *)(a3 + 16);
    v8 = *(_QWORD *)(a3 + 24);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for MusicLibraryMapping.Request(0, v7, *(_QWORD *)(v8 + 56));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryMapping.Request<A>, v9);
      v11 = type metadata accessor for MusicAutoupdatingResponse(255, v9, WitnessTable);
      v12 = *(int *)(swift_getTupleTypeMetadata2(0, v9, v11, 0, 0) + 48);
      v13 = *(_QWORD *)(a2 + v12);
      *(_QWORD *)(a1 + v12) = v13;
      v14 = 1;
    }
    else
    {
      v15 = type metadata accessor for MusicLibraryRequest(0, v7, *(_QWORD *)(v8 + 40));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryRequest<A>, v15);
      v17 = type metadata accessor for MusicAutoupdatingResponse(255, v15, v16);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v15, v17, 0, 0);
      v14 = 0;
      v19 = *(int *)(TupleTypeMetadata2 + 48);
      v13 = *(_QWORD *)(a2 + v19);
      *(_QWORD *)(a1 + v19) = v13;
    }
    swift_retain(v13);
    swift_storeEnumTagMultiPayload(a1, a3, v14);
  }
  return a1;
}

uint64_t sub_10021C15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for MusicLibraryMapping.Request(0, v7, *(_QWORD *)(v8 + 56));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryMapping.Request<A>, v9);
    v11 = type metadata accessor for MusicAutoupdatingResponse(255, v9, WitnessTable);
    v12 = 1;
  }
  else
  {
    v9 = type metadata accessor for MusicLibraryRequest(0, v7, *(_QWORD *)(v8 + 40));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v13 = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryRequest<A>, v9);
    v11 = type metadata accessor for MusicAutoupdatingResponse(255, v9, v13);
    v12 = 0;
  }
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v9, v11, 0, 0);
  *(_QWORD *)(a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(_QWORD *)(a2 + *(int *)(TupleTypeMetadata2 + 48));
  swift_storeEnumTagMultiPayload(a1, a3, v12);
  return a1;
}

uint64_t sub_10021C280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = *(_QWORD *)(a3 + 16);
    v8 = *(_QWORD *)(a3 + 24);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for MusicLibraryMapping.Request(0, v7, *(_QWORD *)(v8 + 56));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryMapping.Request<A>, v9);
      v11 = type metadata accessor for MusicAutoupdatingResponse(255, v9, WitnessTable);
      v12 = 1;
    }
    else
    {
      v9 = type metadata accessor for MusicLibraryRequest(0, v7, *(_QWORD *)(v8 + 40));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v13 = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryRequest<A>, v9);
      v11 = type metadata accessor for MusicAutoupdatingResponse(255, v9, v13);
      v12 = 0;
    }
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v9, v11, 0, 0);
    *(_QWORD *)(a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(_QWORD *)(a2 + *(int *)(TupleTypeMetadata2 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, v12);
  }
  return a1;
}

uint64_t sub_10021C3C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for Library.Context(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 0, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t *sub_10021C414(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(uint64_t *, _QWORD, uint64_t, int *);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v7[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for Album(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v15 + 48);
      v17 = swift_retain(v10);
      if (v16(v13, 1, v14, v17))
      {
        v18 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v19 = v7[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for Artist(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v25 = v7[7];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for Composer(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v7[8];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = type metadata accessor for Genre(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C(&qword_10119ED08);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v7[9];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = type metadata accessor for Playlist(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v7[10];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = type metadata accessor for TVShow(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v7[11];
      v50 = (char *)a1 + v49;
      v51 = (char *)a2 + v49;
      v52 = type metadata accessor for TVSeason(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      *((_BYTE *)a1 + v7[12]) = *((_BYTE *)a2 + v7[12]);
      *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
      *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
      v55 = v7[15];
      v56 = (uint64_t *)((char *)a1 + v55);
      v57 = (uint64_t *)((char *)a2 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      *(uint64_t *)((char *)a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
      *((_BYTE *)a1 + v7[17]) = *((_BYTE *)a2 + v7[17]);
      v59 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59(a1, 0, 1, v7);
    }
  }
  return a1;
}

double sub_10021C8E0(_QWORD *a1)
{
  int *v2;
  double result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v2 = (int *)type metadata accessor for Library.Context(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v2 - 1) + 48))(a1, 1, v2))
  {
    swift_release(*a1);
    v4 = (char *)a1 + v2[5];
    v5 = type metadata accessor for Album(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v7 = (char *)a1 + v2[6];
    v8 = type metadata accessor for Artist(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    v10 = (char *)a1 + v2[7];
    v11 = type metadata accessor for Composer(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v13 = (char *)a1 + v2[8];
    v14 = type metadata accessor for Genre(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    v16 = (char *)a1 + v2[9];
    v17 = type metadata accessor for Playlist(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    v19 = (char *)a1 + v2[10];
    v20 = type metadata accessor for TVShow(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
    v22 = (char *)a1 + v2[11];
    v23 = type metadata accessor for TVSeason(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
    swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[15] + 8));
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[16])).n128_u64[0];
  }
  return result;
}

uint64_t *sub_10021CB28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(uint64_t *, _QWORD, uint64_t, int *);

  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = *a2;
    *a1 = *a2;
    v9 = v6[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
    v15 = swift_retain(v8);
    if (v14(v11, 1, v12, v15))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = v6[6];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Artist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v6[7];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for Composer(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v6[8];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for Genre(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119ED08);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v6[9];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for Playlist(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v6[10];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    v44 = type metadata accessor for TVShow(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v6[11];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = type metadata accessor for TVSeason(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
    *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    v53 = v6[15];
    v54 = (uint64_t *)((char *)a1 + v53);
    v55 = (uint64_t *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    *(uint64_t *)((char *)a1 + v6[16]) = *(uint64_t *)((char *)a2 + v6[16]);
    *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
    v57 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_10021CFD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  void (*v69)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t, uint64_t);
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(char *, uint64_t, uint64_t);
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(char *, uint64_t, uint64_t);
  int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10005B748((uint64_t)a1, type metadata accessor for Library.Context);
      goto LABEL_7;
    }
    v20 = *a2;
    v21 = *a1;
    *a1 = *a2;
    swift_retain(v20);
    swift_release(v21);
    v22 = v6[5];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for Album(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v23, 1, v25);
    v29 = v27(v24, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_34:
        v71 = v6[6];
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = type metadata accessor for Artist(0);
        v75 = *(_QWORD *)(v74 - 8);
        v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
        v77 = v76(v72, 1, v74);
        v78 = v76(v73, 1, v74);
        if (v77)
        {
          if (!v78)
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v78)
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v72, v73, v74);
LABEL_40:
            v80 = v6[7];
            v81 = (char *)a1 + v80;
            v82 = (char *)a2 + v80;
            v83 = type metadata accessor for Composer(0);
            v84 = *(_QWORD *)(v83 - 8);
            v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
            v86 = v85(v81, 1, v83);
            v87 = v85(v82, 1, v83);
            if (v86)
            {
              if (!v87)
              {
                (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
                goto LABEL_46;
              }
            }
            else
            {
              if (!v87)
              {
                (*(void (**)(char *, char *, uint64_t))(v84 + 24))(v81, v82, v83);
LABEL_46:
                v89 = v6[8];
                v90 = (char *)a1 + v89;
                v91 = (char *)a2 + v89;
                v92 = type metadata accessor for Genre(0);
                v93 = *(_QWORD *)(v92 - 8);
                v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
                v95 = v94(v90, 1, v92);
                v96 = v94(v91, 1, v92);
                if (v95)
                {
                  if (!v96)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
                    goto LABEL_52;
                  }
                }
                else
                {
                  if (!v96)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v93 + 24))(v90, v91, v92);
LABEL_52:
                    v98 = v6[9];
                    v99 = (char *)a1 + v98;
                    v100 = (char *)a2 + v98;
                    v101 = type metadata accessor for Playlist(0);
                    v102 = *(_QWORD *)(v101 - 8);
                    v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
                    v104 = v103(v99, 1, v101);
                    v105 = v103(v100, 1, v101);
                    if (v104)
                    {
                      if (!v105)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v100, v101);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
                        goto LABEL_58;
                      }
                    }
                    else
                    {
                      if (!v105)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v102 + 24))(v99, v100, v101);
LABEL_58:
                        v107 = v6[10];
                        v108 = (char *)a1 + v107;
                        v109 = (char *)a2 + v107;
                        v110 = type metadata accessor for TVShow(0);
                        v111 = *(_QWORD *)(v110 - 8);
                        v112 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v111 + 48);
                        v113 = v112(v108, 1, v110);
                        v114 = v112(v109, 1, v110);
                        if (v113)
                        {
                          if (!v114)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v108, v109, v110);
                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
                            goto LABEL_64;
                          }
                        }
                        else
                        {
                          if (!v114)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v111 + 24))(v108, v109, v110);
LABEL_64:
                            v116 = v6[11];
                            v117 = (char *)a1 + v116;
                            v118 = (char *)a2 + v116;
                            v119 = type metadata accessor for TVSeason(0);
                            v120 = *(_QWORD *)(v119 - 8);
                            v121 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
                            v122 = v121(v117, 1, v119);
                            v123 = v121(v118, 1, v119);
                            if (v122)
                            {
                              if (!v123)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v118, v119);
                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
LABEL_70:
                                *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
                                *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
                                *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
                                v125 = v6[15];
                                v126 = (_QWORD *)((char *)a1 + v125);
                                v127 = (_QWORD *)((char *)a2 + v125);
                                *v126 = *v127;
                                v128 = v126[1];
                                v126[1] = v127[1];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease(v128);
                                v129 = v6[16];
                                v130 = *(_QWORD *)((char *)a1 + v129);
                                *(_QWORD *)((char *)a1 + v129) = *(_QWORD *)((char *)a2 + v129);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease(v130);
                                *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
                                return a1;
                              }
                            }
                            else
                            {
                              if (!v123)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v120 + 24))(v117, v118, v119);
                                goto LABEL_70;
                              }
                              (*(void (**)(char *, uint64_t))(v120 + 8))(v117, v119);
                            }
                            v124 = sub_100007E8C((uint64_t *)&unk_1011C7320);
                            memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
                            goto LABEL_70;
                          }
                          (*(void (**)(char *, uint64_t))(v111 + 8))(v108, v110);
                        }
                        v115 = sub_100007E8C((uint64_t *)&unk_1011D1410);
                        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
                        goto LABEL_64;
                      }
                      (*(void (**)(char *, uint64_t))(v102 + 8))(v99, v101);
                    }
                    v106 = sub_100007E8C(&qword_1011A30F0);
                    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
                    goto LABEL_58;
                  }
                  (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v92);
                }
                v97 = sub_100007E8C(&qword_10119ED08);
                memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
                goto LABEL_52;
              }
              (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
            }
            v88 = sub_100007E8C((uint64_t *)&unk_1011C7310);
            memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
        }
        v79 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    }
    v70 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_34;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = *a2;
  *a1 = *a2;
  v12 = v6[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Album(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
  v18 = swift_retain(v11);
  if (v17(v14, 1, v15, v18))
  {
    v19 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v30 = v6[6];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for Artist(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v36 = v6[7];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = type metadata accessor for Composer(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = v6[8];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Genre(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_100007E8C(&qword_10119ED08);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v48 = v6[9];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = type metadata accessor for Playlist(0);
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v54 = v6[10];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = type metadata accessor for TVShow(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v60 = v6[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for TVSeason(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    v65 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  v66 = v6[15];
  v67 = (_QWORD *)((char *)a1 + v66);
  v68 = (_QWORD *)((char *)a2 + v66);
  *v67 = *v68;
  v67[1] = v68[1];
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  v69 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v69(a1, 0, 1, v6);
  return a1;
}

_QWORD *sub_10021DAB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = v6[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Album(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = v6[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = v6[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for Composer(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = v6[8];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for Genre(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100007E8C(&qword_10119ED08);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v6[9];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = type metadata accessor for Playlist(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v38 = v6[10];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for TVShow(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = v6[11];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    v47 = type metadata accessor for TVSeason(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
    *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    *(_OWORD *)((char *)a1 + v6[15]) = *(_OWORD *)((char *)a2 + v6[15]);
    *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
    *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_10021DF3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t);
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10005B748((uint64_t)a1, type metadata accessor for Library.Context);
      goto LABEL_7;
    }
    v17 = *a1;
    *a1 = *a2;
    swift_release(v17);
    v18 = v6[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for Album(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    v24 = v23(v19, 1, v21);
    v25 = v23(v20, 1, v21);
    if (v24)
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
LABEL_34:
        v63 = v6[6];
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = type metadata accessor for Artist(0);
        v67 = *(_QWORD *)(v66 - 8);
        v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
        v69 = v68(v64, 1, v66);
        v70 = v68(v65, 1, v66);
        if (v69)
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v64, v65, v66);
LABEL_40:
            v72 = v6[7];
            v73 = (char *)a1 + v72;
            v74 = (char *)a2 + v72;
            v75 = type metadata accessor for Composer(0);
            v76 = *(_QWORD *)(v75 - 8);
            v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48);
            v78 = v77(v73, 1, v75);
            v79 = v77(v74, 1, v75);
            if (v78)
            {
              if (!v79)
              {
                (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
                goto LABEL_46;
              }
            }
            else
            {
              if (!v79)
              {
                (*(void (**)(char *, char *, uint64_t))(v76 + 40))(v73, v74, v75);
LABEL_46:
                v81 = v6[8];
                v82 = (char *)a1 + v81;
                v83 = (char *)a2 + v81;
                v84 = type metadata accessor for Genre(0);
                v85 = *(_QWORD *)(v84 - 8);
                v86 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
                v87 = v86(v82, 1, v84);
                v88 = v86(v83, 1, v84);
                if (v87)
                {
                  if (!v88)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v82, v83, v84);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
                    goto LABEL_52;
                  }
                }
                else
                {
                  if (!v88)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v85 + 40))(v82, v83, v84);
LABEL_52:
                    v90 = v6[9];
                    v91 = (char *)a1 + v90;
                    v92 = (char *)a2 + v90;
                    v93 = type metadata accessor for Playlist(0);
                    v94 = *(_QWORD *)(v93 - 8);
                    v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
                    v96 = v95(v91, 1, v93);
                    v97 = v95(v92, 1, v93);
                    if (v96)
                    {
                      if (!v97)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v91, v92, v93);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
                        goto LABEL_58;
                      }
                    }
                    else
                    {
                      if (!v97)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v94 + 40))(v91, v92, v93);
LABEL_58:
                        v99 = v6[10];
                        v100 = (char *)a1 + v99;
                        v101 = (char *)a2 + v99;
                        v102 = type metadata accessor for TVShow(0);
                        v103 = *(_QWORD *)(v102 - 8);
                        v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 48);
                        v105 = v104(v100, 1, v102);
                        v106 = v104(v101, 1, v102);
                        if (v105)
                        {
                          if (!v106)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v100, v101, v102);
                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
                            goto LABEL_64;
                          }
                        }
                        else
                        {
                          if (!v106)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v103 + 40))(v100, v101, v102);
LABEL_64:
                            v108 = v6[11];
                            v109 = (char *)a1 + v108;
                            v110 = (char *)a2 + v108;
                            v111 = type metadata accessor for TVSeason(0);
                            v112 = *(_QWORD *)(v111 - 8);
                            v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
                            v114 = v113(v109, 1, v111);
                            v115 = v113(v110, 1, v111);
                            if (v114)
                            {
                              if (!v115)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v109, v110, v111);
                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
LABEL_70:
                                *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
                                *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
                                *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
                                v117 = v6[15];
                                v118 = (_QWORD *)((char *)a1 + v117);
                                v119 = (_QWORD *)((char *)a2 + v117);
                                v121 = *v119;
                                v120 = v119[1];
                                v122 = v118[1];
                                *v118 = v121;
                                v118[1] = v120;
                                swift_bridgeObjectRelease(v122);
                                v123 = v6[16];
                                v124 = *(_QWORD *)((char *)a1 + v123);
                                *(_QWORD *)((char *)a1 + v123) = *(_QWORD *)((char *)a2 + v123);
                                swift_bridgeObjectRelease(v124);
                                *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
                                return a1;
                              }
                            }
                            else
                            {
                              if (!v115)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v112 + 40))(v109, v110, v111);
                                goto LABEL_70;
                              }
                              (*(void (**)(char *, uint64_t))(v112 + 8))(v109, v111);
                            }
                            v116 = sub_100007E8C((uint64_t *)&unk_1011C7320);
                            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
                            goto LABEL_70;
                          }
                          (*(void (**)(char *, uint64_t))(v103 + 8))(v100, v102);
                        }
                        v107 = sub_100007E8C((uint64_t *)&unk_1011D1410);
                        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
                        goto LABEL_64;
                      }
                      (*(void (**)(char *, uint64_t))(v94 + 8))(v91, v93);
                    }
                    v98 = sub_100007E8C(&qword_1011A30F0);
                    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
                    goto LABEL_58;
                  }
                  (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v84);
                }
                v89 = sub_100007E8C(&qword_10119ED08);
                memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
                goto LABEL_52;
              }
              (*(void (**)(char *, uint64_t))(v76 + 8))(v73, v75);
            }
            v80 = sub_100007E8C((uint64_t *)&unk_1011C7310);
            memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
        }
        v71 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    }
    v62 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_34;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v11 = v6[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Album(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v26 = v6[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Artist(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = v6[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for Composer(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = v6[8];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = type metadata accessor for Genre(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C(&qword_10119ED08);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = v6[9];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for Playlist(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = v6[10];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = type metadata accessor for TVShow(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v56 = v6[11];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = type metadata accessor for TVSeason(0);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  *(_OWORD *)((char *)a1 + v6[15]) = *(_OWORD *)((char *)a2 + v6[15]);
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10021E9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10021E9EC);
}

uint64_t sub_10021E9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for Library.Context(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_10021EA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021EA44);
}

uint64_t sub_10021EA44(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for Library.Context(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10021EA94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Library.Context(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_10021EACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Library.Context(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_10021EB0C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EAF0D0, a1);
}

uint64_t sub_10021EB1C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EAF174, a1);
}

uint64_t sub_10021EB2C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011A71A8);
  sub_100048B14(v0, (uint64_t)qword_1011A71A8);
  return static Logger.music(_:)(0xD000000000000010, 0x8000000100E31910);
}

uint64_t sub_10021EB8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v19 = a1;
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v18 - v9);
  v11 = *(_QWORD *)(v2 + 88);
  v26 = v3;
  v27 = v11;
  KeyPath = swift_getKeyPath(&unk_100EAF360);
  v24 = v3;
  v25 = v11;
  v13 = swift_getKeyPath(&unk_100EAF398);
  static Published.subscript.getter(v10, v1, KeyPath, v13);
  swift_release(v13);
  swift_release(KeyPath);
  v22 = v3;
  v23 = v11;
  v14 = swift_getKeyPath(&unk_100EAF360);
  v20 = v3;
  v21 = v11;
  v15 = swift_getKeyPath(&unk_100EAF398);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v19, v4);
  swift_retain(v1);
  static Published.subscript.setter(v8, v1, v14, v15);
  v16 = sub_10020376C((uint64_t)v10);
  return (*(uint64_t (**)(_QWORD *, uint64_t, double))(v5 + 8))(v10, v4, v16);
}

uint64_t sub_10021ED00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v20 = a1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2, v3, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v6 = type metadata accessor for MusicItemCollection(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v7 = type metadata accessor for Optional(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v19 - v12);
  v27 = v3;
  v28 = v2;
  KeyPath = swift_getKeyPath(&unk_100EAF3B8);
  v25 = v3;
  v26 = v2;
  v15 = swift_getKeyPath(&unk_100EAF3F0);
  static Published.subscript.getter(v13, v1, KeyPath, v15);
  swift_release(v15);
  swift_release(KeyPath);
  v23 = v3;
  v24 = v2;
  v16 = swift_getKeyPath(&unk_100EAF3B8);
  v21 = v3;
  v22 = v2;
  v17 = swift_getKeyPath(&unk_100EAF3F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v20, v7);
  swift_retain(v1);
  static Published.subscript.setter(v11, v1, v16, v17);
  sub_100203EA8((uint64_t)v13);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_10021EEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  _QWORD v15[5];
  _QWORD v16[5];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v4, v3, &unk_100F98880, &unk_100F98900);
  v6 = *(_QWORD *)(v4 + 64);
  v16[0] = v3;
  v16[1] = AssociatedTypeWitness;
  v16[2] = v6;
  v16[3] = swift_getAssociatedConformanceWitness(v4, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v16[4] = swift_getAssociatedConformanceWitness(v4, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v7 = type metadata accessor for ContainerDetailHeaderView.ViewModel(255, (uint64_t)v16);
  v8 = type metadata accessor for Optional(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v15 - v10;
  v15[2] = v3;
  v15[3] = v4;
  KeyPath = swift_getKeyPath(&unk_100EAF308);
  v15[0] = v3;
  v15[1] = v4;
  v13 = swift_getKeyPath(&unk_100EAF340);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_retain(v1);
  return static Published.subscript.setter(v11, v1, KeyPath, v13);
}

uint64_t sub_10021F020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  double v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v6 = *v4;
  v7 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 88), a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v16[-v9];
  v11 = (uint64_t)v4 + *(_QWORD *)(v6 + 104);
  v12 = swift_beginAccess(v11, v17, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v11, v7, v12);
  v13 = swift_beginAccess(v11, v16, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 24))(v11, a1, v7, v13);
  swift_endAccess(v16);
  v14 = sub_1002039B8((uint64_t)v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t, double))(v8 + 8))(v10, v7, v14);
}

double sub_10021F108(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v2 = *v1;
  v3 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1F0))();
  if (v3)
  {
    v4 = (void *)v3;
    v5 = sub_10079B648();

  }
  else
  {
    v5 = 0;
  }
  sub_100203494(v5);
  v7 = type metadata accessor for ContainerDetailDataSource(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v6);
  swift_getWitnessTable(&unk_100EAF19C, v7);
  v8 = ObservableObject<>.objectWillChange.getter(v7);
  ObservableObjectPublisher.send()();
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

double sub_10021F1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v5 = type metadata accessor for ContainerDetailDataSource(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  swift_getWitnessTable(&unk_100EAF19C, v5);
  v6 = ObservableObject<>.objectWillChange.getter(v5);
  ObservableObjectPublisher.send()();
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_10021F208()
{
  id v0;
  _QWORD *v1;
  void *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  id v5;
  _QWORD v6[5];
  char v7;

  v6[0] = _swiftEmptyArrayStorage;
  memset(&v6[1], 0, 24);
  v6[4] = 1;
  v7 = 0;
  v0 = objc_allocWithZone((Class)type metadata accessor for JSVerticalStack(0));
  JSVerticalStack.init(type:)((uint64_t)v6);
  v2 = v1;
  v3 = *(void (**)(uint64_t))((swift_isaMask & *v1) + 0x108);
  v4 = swift_bridgeObjectRetain();
  v3(v4);
  v5 = v2;
  sub_1002044B4((uint64_t)v2);

}

uint64_t sub_10021F2AC(void *a1)
{
  id v2;

  v2 = a1;
  return sub_10020448C((uint64_t)a1);
}

uint64_t sub_10021F2D0(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_recordLabelLinkIdentifierMap, v3, 0, 0);
  v1 = swift_bridgeObjectRetain();
  return sub_1002044DC(v1);
}

uint64_t sub_10021F320(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryPlaylistEntryInternalFilter.playlist.getter);
}

uint64_t sub_10021F32C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackFilter.albums.getter);
}

uint64_t sub_10021F338@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100219818(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackSortProperties.discNumber.getter, a2);
}

uint64_t sub_10021F344@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100219818(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackSortProperties.trackNumber.getter, a2);
}

uint64_t sub_10021F350(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackInternalFilter.composers.getter);
}

uint64_t sub_10021F35C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackFilter.genres.getter);
}

uint64_t sub_10021F370()
{
  return 16;
}

__n128 sub_10021F37C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_10021F388()
{
  unint64_t result;

  result = qword_1011B5830;
  if (!qword_1011B5830)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1011B5830);
  }
  return result;
}

uint64_t sub_10021F3D4()
{
  return 16;
}

__n128 sub_10021F3E0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F3F0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  __n128 v3;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A763C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  v2 = (_QWORD *)swift_task_alloc(dword_1011A7414);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return sub_100206210(v3);
}

uint64_t sub_10021F460()
{
  return 16;
}

__n128 sub_10021F46C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double sub_10021F478@<D0>(double *a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  return sub_1002153BC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10021F490()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021F4B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[6];
  v7 = (_QWORD *)swift_task_alloc(dword_1011A7654);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100214F54(a1, v4, v5, v6);
}

uint64_t type metadata accessor for ContainerDetailDataSource.ClassicalWorkSection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContainerDetailDataSource.ClassicalWorkSection);
}

uint64_t sub_10021F544(uint64_t a1)
{
  uint64_t *v1;

  return sub_1002140F8(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_10021F558(uint64_t a1)
{
  uint64_t *v1;

  return sub_10021017C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_10021F574(uint64_t a1)
{
  _QWORD *v1;

  return sub_100207F94(a1, v1);
}

uint64_t sub_10021F580()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A7664);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10005AEE4;
  return sub_10020861C();
}

uint64_t sub_10021F5F4(char *a1)
{
  _QWORD *v1;

  return sub_1002068B8(a1, v1);
}

uint64_t sub_10021F600()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A7674);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100203B54();
}

uint64_t sub_10021F670()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10021F69C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011A768C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_10020564C(a1, v6, v7, v8, v4, v5);
}

uint64_t sub_10021F71C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double sub_10021F748(uint64_t a1)
{
  uint64_t v1;

  return sub_1002054DC(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_10021F75C()
{
  return 16;
}

__n128 sub_10021F768(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F77C()
{
  return 16;
}

__n128 sub_10021F788(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F79C()
{
  return 16;
}

__n128 sub_10021F7A8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F7B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1002044F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10021F7DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_100204504(v1, v2);
}

uint64_t sub_10021F818()
{
  return 16;
}

__n128 sub_10021F824(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1002044C8();
  *a1 = result;
  return result;
}

uint64_t sub_10021F858()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1002044DC(v0);
}

uint64_t sub_10021F880()
{
  return 16;
}

__n128 sub_10021F88C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1002044A0();
  *a1 = result;
  return result;
}

uint64_t sub_10021F8C0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  return sub_1002044B4((uint64_t)v1);
}

uint64_t sub_10021F8EC()
{
  return 16;
}

__n128 sub_10021F8F8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F904@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100204478();
  *a1 = result;
  return result;
}

uint64_t sub_10021F92C(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  return sub_10020448C((uint64_t)v1);
}

uint64_t sub_10021F958()
{
  return 16;
}

__n128 sub_10021F964(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F978()
{
  return 16;
}

__n128 sub_10021F984(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F998()
{
  return 16;
}

__n128 sub_10021F9A4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F9B8()
{
  return 16;
}

__n128 sub_10021F9C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F9D8()
{
  return 16;
}

__n128 sub_10021F9E4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021F9F8()
{
  return 16;
}

__n128 sub_10021FA04(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021FA18()
{
  return 16;
}

__n128 sub_10021FA24(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021FA38()
{
  return 16;
}

__n128 sub_10021FA44(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021FA50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100203BB8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10021FA7C(char *a1)
{
  return sub_100203BCC(*a1);
}

uint64_t sub_10021FAA0()
{
  return 16;
}

__n128 sub_10021FAAC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10021FAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_10021FAC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = &unk_100EAF9F8;
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2, v3, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v3, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  result = type metadata accessor for MusicItemCollection(319, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  if (v7 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(result - 8) + 64;
    v8[2] = &unk_100EAF000;
    v8[3] = &unk_100EAF000;
    swift_initStructMetadata(a1, 0, 4, v8, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10021FBA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v25);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v12 = *(_QWORD *)(a3 + 16);
    v11 = *(_QWORD *)(a3 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v11, v12, &unk_100F98880, &unk_100F98900);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v11, v12, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
    v15 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v16(v9, v10, v15);
    v17 = *(int *)(a3 + 40);
    v18 = *(int *)(a3 + 44);
    v19 = (uint64_t *)((char *)v4 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (uint64_t *)((char *)v4 + v18);
    v23 = (uint64_t *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v24);
  }
  return v4;
}

uint64_t sub_10021FCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 36);
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5, v6, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v6, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v9 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v4, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 40) + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 44) + 8));
}

_QWORD *sub_10021FDA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v11 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v10, v11, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v10, v11, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v14 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v15(v8, v9, v14);
  v16 = *(int *)(a3 + 40);
  v17 = *(int *)(a3 + 44);
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = (_QWORD *)((char *)a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v23);
  return a1;
}

_QWORD *sub_10021FEAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v12 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v11, v12, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v11, v12, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v15 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v9, v10, v15);
  v16 = *(int *)(a3 + 40);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = *(int *)(a3 + 44);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  return a1;
}

_OWORD *sub_10021FFE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9, v10, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v9, v10, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v13 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
  v14 = *(int *)(a3 + 44);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *sub_1002200C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v12 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v11, v12, &unk_100F98880, &unk_100F98900);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v11, v12, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v15 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v9, v10, v15);
  v16 = *(int *)(a3 + 40);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = *(int *)(a3 + 44);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  v27 = v23[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease(v27);
  return a1;
}

uint64_t sub_1002201D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002201E0);
}

uint64_t sub_1002201E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v9 = *(_QWORD *)(a3 + 16);
    v8 = *(_QWORD *)(a3 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v8, v9, &unk_100F98880, &unk_100F98900);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v9, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
    v12 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v12);
  }
}

uint64_t sub_1002202C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002202D0);
}

uint64_t sub_1002202D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = *(_QWORD *)(a4 + 16);
    v7 = *(_QWORD *)(a4 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v7, v8, &unk_100F98880, &unk_100F98900);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v7, v8, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
    v11 = type metadata accessor for MusicItemCollection(0, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v11);
  }
  return result;
}

uint64_t sub_1002203B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011A771C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100203B54();
}

uint64_t _s11DescriptionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  if (*(_QWORD *)(a1 + 16))
    swift_release(*(_QWORD *)(a1 + 24));
  sub_10006B604(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return sub_10006B604(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t _s11DescriptionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    swift_retain(v7);
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v6;
  }
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_10006B3F8(v8, v9);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_10006B3F8(v10, v11);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  return a1;
}

uint64_t _s11DescriptionVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v5)
    {
      v8 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = v8;
      swift_retain(v8);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release(*(_QWORD *)(a1 + 24));
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain(v6);
  swift_release(v7);
LABEL_8:
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  sub_10006B3F8(v9, v10);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  sub_10006B604(v11, v12);
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_BYTE *)(a2 + 56);
  sub_10006B3F8(v13, v14);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v13;
  *(_BYTE *)(a1 + 56) = v14;
  sub_10006B604(v15, v16);
  return a1;
}

__n128 _s11DescriptionVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s11DescriptionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v9;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release(*(_QWORD *)(a1 + 24));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_release(v8);
LABEL_8:
  v10 = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v10;
  sub_10006B604(v11, v12);
  v13 = *(_BYTE *)(a2 + 56);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v13;
  sub_10006B604(v14, v15);
  return a1;
}

uint64_t _s11DescriptionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11DescriptionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s11DescriptionVMa()
{
  return &_s11DescriptionVN;
}

uint64_t _s11DescriptionV13ConfigurationVwxx(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1[1]);
  if (a1[2])
    return swift_release(a1[3]);
  return result;
}

_QWORD *_s11DescriptionV13ConfigurationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2 + 2;
  v5 = a2[2];
  swift_bridgeObjectRetain(v4);
  if (v5)
  {
    v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain(v7);
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  return a1;
}

_QWORD *_s11DescriptionV13ConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  if (!a1[2])
  {
    if (v6)
    {
      v9 = a2[3];
      a1[2] = v6;
      a1[3] = v9;
      swift_retain(v9);
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v6)
  {
    swift_release(a1[3]);
    goto LABEL_7;
  }
  v7 = a2[3];
  v8 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

_QWORD *_s11DescriptionV13ConfigurationVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  if (!a1[2])
  {
    if (v6)
    {
      v9 = a2[3];
      a1[2] = v6;
      a1[3] = v9;
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v6)
  {
    swift_release(a1[3]);
    goto LABEL_7;
  }
  v7 = a2[3];
  v8 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_release(v8);
  return a1;
}

ValueMetadata *_s11DescriptionV13ConfigurationVMa()
{
  return &_s11DescriptionV13ConfigurationVN;
}

uint64_t sub_10022095C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  float v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  unsigned int *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[2];
  _QWORD v89[2];
  __int128 v90;
  __int128 v91;

  v87 = a1;
  v2 = type metadata accessor for BlendMode(0);
  v85 = *(_QWORD *)(v2 - 8);
  v86 = v2;
  __chkstk_darwin(v2);
  v69 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v83 = (char *)&v68 - v5;
  __chkstk_darwin(v6);
  v84 = (char *)&v68 - v7;
  v8 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v8);
  v76 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Font.TextStyle(0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011A7730);
  __chkstk_darwin(v77);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011A7738);
  __chkstk_darwin(v78);
  v79 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100007E8C(&qword_1011A7740);
  __chkstk_darwin(v81);
  v82 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A7748);
  __chkstk_darwin(v16);
  v80 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = *v1;
  v19 = *((_QWORD *)v1 + 2);
  v18 = *((_QWORD *)v1 + 3);
  v20 = *((_QWORD *)v1 + 4);
  v21 = *((unsigned __int8 *)v1 + 40);
  v22 = *((_QWORD *)v1 + 6);
  v23 = *((_BYTE *)v1 + 56);
  v24 = (_OWORD *)swift_allocObject(&unk_1010B6848, 73, 7);
  v25 = v1[1];
  v26 = *v1;
  v24[1] = *v1;
  v24[2] = v25;
  v24[3] = v1[2];
  *(_OWORD *)((char *)v24 + 57) = *(__int128 *)((char *)v1 + 41);
  v90 = v26;
  v89[0] = 2570;
  v89[1] = 0xE200000000000000;
  v88[0] = 10;
  v88[1] = 0xE100000000000000;
  sub_100055CE4((uint64_t)&v91);
  sub_100048AAC(v19, v18);
  v74 = v20;
  v72 = v21;
  sub_10006B3F8(v20, v21);
  sub_10006B3F8(v22, v23);
  v27 = sub_100055B68();
  v70 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v89, v88, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v27, v27, v27);
  v71 = v28;
  sub_10006B3F8(v22, v23);
  v29 = sub_100824E5C(v22, v23);
  v30 = sub_10006B604(v22, v23);
  if ((v29 & 0xFE) == 2)
  {
    v32 = 1.0;
    v33 = static HierarchicalShapeStyle.secondary.getter(v30);
  }
  else
  {
    v32 = 0.6;
    v33 = static HierarchicalShapeStyle.primary.getter(v31);
  }
  v34 = v33;
  v35 = v73;
  v36 = v75;
  (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v11, enum case for Font.TextStyle.subheadline(_:), v75);
  v37 = type metadata accessor for Font.Design(0);
  v38 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v76, 1, 1, v37);
  v39 = static Font.system(_:design:weight:)(v11, v38, 0, 1);
  sub_10004FF60(v38, &qword_1011C4F30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  KeyPath = swift_getKeyPath(&unk_100EAFAA8);
  v41 = v71;
  *(_QWORD *)v13 = v70;
  *((_QWORD *)v13 + 1) = v41;
  *((_DWORD *)v13 + 4) = v34;
  *((float *)v13 + 5) = v32;
  *((_QWORD *)v13 + 3) = KeyPath;
  *((_QWORD *)v13 + 4) = v39;
  v42 = v77;
  v43 = &v13[*(int *)(v77 + 52)];
  v45 = static Color.primary.getter(v44);
  MoreLabel.init(color:)(v45, v43);
  v46 = (uint64_t (**)())&v13[*(int *)(v42 + 56)];
  *v46 = sub_1002210F0;
  v46[1] = (uint64_t (*)())v24;
  v47 = v74;
  LOBYTE(v35) = v72;
  sub_10006B3F8(v74, v72);
  LOBYTE(v43) = sub_100824E38(v47, v35);
  sub_10006B604(v47, v35);
  if ((v43 & 1) != 0)
    v48 = 3;
  else
    v48 = 2;
  v49 = swift_getKeyPath(&unk_100EAFAD8);
  v50 = v79;
  sub_10004A160((uint64_t)v13, v79, &qword_1011A7730);
  v51 = v50 + *(int *)(v78 + 36);
  *(_QWORD *)v51 = v49;
  *(_QWORD *)(v51 + 8) = v48;
  *(_BYTE *)(v51 + 16) = 0;
  sub_10004FF60((uint64_t)v13, &qword_1011A7730);
  sub_10006B3F8(v22, v23);
  v52 = sub_100824E5C(v22, v23);
  sub_10006B604(v22, v23);
  if ((v52 & 0xFE) == 2)
  {
    v54 = v85;
    v53 = v86;
    v55 = v83;
    (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v83, enum case for BlendMode.normal(_:), v86);
    v56 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  }
  else
  {
    v57 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    v54 = v85;
    v53 = v86;
    if ((v52 & 1) != 0)
      v57 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    v58 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v69, *v57, v86);
    v56 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v55 = v83;
    v56(v83, v58, v53);
  }
  v59 = v84;
  v56(v84, v55, v53);
  v61 = v81;
  v60 = (uint64_t)v82;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(&v82[*(int *)(v81 + 36)], v59, v53);
  sub_10004A160(v50, v60, &qword_1011A7738);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v59, v53);
  sub_10004FF60(v50, &qword_1011A7738);
  v62 = AccessibilityIdentifier.containerDetailHeaderDescription.unsafeMutableAddressor();
  v63 = *v62;
  v64 = v62[1];
  v65 = sub_100221128();
  swift_bridgeObjectRetain();
  v66 = (uint64_t)v80;
  View.accessibilityIdentifier(_:)(v63, v64, v61, v65);
  swift_bridgeObjectRelease(v64);
  sub_10004FF60(v60, &qword_1011A7740);
  return sub_100221230(v66, v87);
}

uint64_t sub_100220FE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for Font.TextStyle.subheadline(_:);
  v3 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

unint64_t sub_10022102C(uint64_t a1)
{
  unint64_t result;

  result = sub_100221050();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100221050()
{
  unint64_t result;

  result = qword_1011A7728;
  if (!qword_1011A7728)
  {
    result = swift_getWitnessTable(&unk_100EAFA58, &_s11DescriptionVN);
    atomic_store(result, (unint64_t *)&qword_1011A7728);
  }
  return result;
}

uint64_t sub_100221094(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F98FE4, 1);
}

uint64_t sub_1002210A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  sub_10006B604(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  sub_10006B604(*(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  return swift_deallocObject(v0, 73, 7);
}

uint64_t sub_1002210F0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 32);
  if (v1)
    return v1();
  return result;
}

unint64_t sub_100221128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7750;
  if (!qword_1011A7750)
  {
    v1 = sub_100044B54(&qword_1011A7740);
    sub_100221194();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7750);
  }
  return result;
}

unint64_t sub_100221194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7758;
  if (!qword_1011A7758)
  {
    v1 = sub_100044B54(&qword_1011A7738);
    sub_100049F28(&qword_1011A7760, &qword_1011A7730, (uint64_t)&protocol conformance descriptor for HeightLimitedButtonTextView<A, B>);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7758);
  }
  return result;
}

uint64_t sub_100221230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A7748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10022127C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7768;
  if (!qword_1011A7768)
  {
    v1 = sub_100044B54(&qword_1011A7748);
    sub_100221128();
    sub_1002212E8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7768);
  }
  return result;
}

unint64_t sub_1002212E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4660;
  if (!qword_1011A4660)
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4660);
  }
  return result;
}

uint64_t sub_100221330(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10022135C + 4 * byte_100EAFB10[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_10022135C()
{
  return 0x69536E6565726373;
}

uint64_t sub_100221378()
{
  return 0x655073746E696F70;
}

uint64_t sub_10022139C()
{
  return 0x6165724165666173;
}

uint64_t sub_1002213B4()
{
  return 0x615272656E726F63;
}

uint64_t sub_1002213D4()
{
  return 0x6D6F696469;
}

unint64_t sub_1002213E8()
{
  return 0xD000000000000013;
}

uint64_t sub_100221408()
{
  return 0x6863746F4E736168;
}

unint64_t sub_100221420()
{
  return 0xD000000000000010;
}

uint64_t sub_10022143C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100221468 + 4 * byte_100EAFB19[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_100221468()
{
  return 0x69536E6565726373;
}

uint64_t sub_100221484()
{
  return 0x655073746E696F70;
}

uint64_t sub_1002214A8()
{
  return 0x6165724165666173;
}

uint64_t sub_1002214C0()
{
  return 0x615272656E726F63;
}

uint64_t sub_1002214E0()
{
  return 0x6D6F696469;
}

unint64_t sub_1002214F4()
{
  return 0xD000000000000013;
}

uint64_t sub_100221514()
{
  return 0x6863746F4E736168;
}

unint64_t sub_10022152C()
{
  return 0xD000000000000010;
}

void sub_100221548(char *a1)
{
  sub_1005D0C5C(*a1);
}

Swift::Int sub_100221554()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  sub_100044830((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_100221598(uint64_t a1)
{
  char *v1;

  sub_100044830(a1, *v1);
}

Swift::Int sub_1002215A0(uint64_t a1)
{
  char *v1;
  char v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  sub_100044830((uint64_t)v4, v2);
  return Hasher._finalize()();
}

unint64_t sub_1002215E0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100228A64(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10022160C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100221330(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100221634()
{
  unsigned __int8 *v0;

  return sub_10022143C(*v0);
}

unint64_t sub_10022163C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100228A64(a1);
  *a2 = result;
  return result;
}

uint64_t variable initialization expression of _NSRange.NSRangeIterator.current()
{
  return 0;
}

void sub_10022166C(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_100221678(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100228E60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002216A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100228E60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002216C8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v27[2];
  char v28;

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011A7808);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100228E60();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MultiDeviceTesterViewController.Device.CodingKeys, &type metadata for MultiDeviceTesterViewController.Device.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v27[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, v27, v5);
  if (!v2)
  {
    v27[0] = *((_OWORD *)v3 + 1);
    v28 = 1;
    type metadata accessor for CGSize(0);
    v15 = v14;
    v16 = sub_100048748(&qword_1011A7810, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v27, &v28, v5, v15, v16);
    *(_QWORD *)&v27[0] = v3[4];
    v28 = 2;
    v17 = sub_100228EE8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v27, &v28, v5, &type metadata for CGFloat, v17);
    v18 = *(_OWORD *)(v3 + 7);
    v27[0] = *(_OWORD *)(v3 + 5);
    v27[1] = v18;
    v28 = 3;
    type metadata accessor for UIEdgeInsets(0);
    v20 = v19;
    v21 = sub_100048748(&qword_1011A7818, (uint64_t (*)(uint64_t))type metadata accessor for UIEdgeInsets, (uint64_t)&protocol conformance descriptor for UIEdgeInsets);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v27, &v28, v5, v20, v21);
    *(_QWORD *)&v27[0] = v3[9];
    v28 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v27, &v28, v5, &type metadata for CGFloat, v17);
    v22 = v3[10];
    LOBYTE(v27[0]) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v22, v27, v5);
    v23 = v3[11];
    LOBYTE(v27[0]) = 6;
    KeyedEncodingContainer.encode(_:forKey:)(v23, v27, v5);
    v24 = *((unsigned __int8 *)v3 + 96);
    LOBYTE(v27[0]) = 7;
    KeyedEncodingContainer.encode(_:forKey:)(v24, v27, v5);
    v25 = *((unsigned __int8 *)v3 + 97);
    LOBYTE(v27[0]) = 8;
    KeyedEncodingContainer.encode(_:forKey:)(v25, v27, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_100221998@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  __int16 v8;

  sub_100228AAC(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_WORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1002219F4(_QWORD *a1)
{
  return sub_1002216C8(a1);
}

void sub_100221A08(void *a1, uint64_t a2, char *a3, uint64_t a4, void *a5, uint64_t a6, double a7)
{
  char *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  objc_class *v35;
  char *v36;
  double v37;
  double v38;
  double v39;
  id v40;
  double v41;
  double v42;
  double v43;
  id v44;
  void *v45;
  double v46;
  double v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  CGFloat b;
  Swift::String v56;
  Swift::String v57;
  void *object;
  Swift::String v59;
  Swift::String v60;
  void *v61;
  Swift::String v62;
  Swift::String v63;
  void *v64;
  Swift::String v65;
  Swift::String v66;
  void *v67;
  CGFloat v68;
  NSString v69;
  double v70;
  uint64_t v71;
  id v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  objc_class *v89;
  id v90;
  char *v91;
  id v92;
  id v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  void *v102;
  id v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  id v107;
  char *v108;
  id v109;
  id v110;
  uint64_t v111;
  void *v112;
  char *v113;
  id v114;
  void *v115;
  CGFloat v116;
  char *v117;
  CGFloat a;
  id v119;
  Class isa;
  id v121;
  id v122;
  void *v123;
  char *v124;
  id v125;
  void *v126;
  id v127;
  id v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;
  id v133;
  CALayerCornerCurve v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  CGFloat v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  uint64_t v188;
  id v189;
  void *v190;
  id v191;
  id v192;
  id v193;
  id v194;
  void *v195;
  id v196;
  id v197;
  id v198;
  char *v199;
  id v200;
  uint64_t v201;
  char *v202;
  void *v203;
  id v204;
  id v205;
  id v206;
  void *v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  void *v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  CALayerCornerCurve v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  uint64_t v234;
  CGFloat v235;
  Class v236;
  double v237;
  uint64_t v238;
  char *v239;
  char *v240;
  id v241;
  _QWORD *v242;
  CALayerCornerCurve v243;
  char *v244;
  id v245;
  id v246;
  uint64_t v247;
  id v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  char *v254;
  id v255;
  CGAffineTransform v256;
  CGAffineTransform v257;
  objc_super v258;

  v251 = a6;
  v250 = a4;
  v254 = a3;
  v12 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v12);
  v249 = (uint64_t *)((char *)&v238 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (char *)&v238 - v15;
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v238 - v18);
  v20 = &v7[OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device];
  v21 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)v20 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v20 + 5) = v21;
  *((_WORD *)v20 + 48) = *(_WORD *)(a2 + 96);
  v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v20 = *(_OWORD *)a2;
  *((_OWORD *)v20 + 1) = v22;
  v23 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v20 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v20 + 3) = v23;
  v24 = OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController] = a1;
  v25 = v7;
  v26 = a1;
  sub_100055CE4(a2);
  objc_msgSend(v26, "_setIgnoresWrapperViewForContentOverlayInsets:", 1);
  objc_msgSend(v26, "setAdditionalSafeAreaInsets:", *(double *)(a2 + 40), *(double *)(a2 + 48), *(double *)(a2 + 56), *(double *)(a2 + 64));
  v27 = objc_msgSend(v26, "view");
  if (!v27)
    goto LABEL_41;
  v28 = v27;
  v245 = v16;
  v246 = a5;
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v29 = objc_msgSend(*(id *)&v7[v24], "view");
  if (!v29)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "layer");

  objc_msgSend(v31, "setCornerRadius:", *(double *)(a2 + 72));
  v32 = objc_msgSend(*(id *)&v7[v24], "view");
  if (!v32)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "layer");

  objc_msgSend(v34, "setCornerCurve:", kCACornerCurveContinuous);
  v35 = (objc_class *)type metadata accessor for MultiDeviceTesterViewController.DeviceView();
  v258.receiver = v25;
  v258.super_class = v35;
  v36 = (char *)objc_msgSendSuper2(&v258, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100228FA4(v26);
  if (*(_QWORD *)(a2 + 80))
  {
    v37 = a7 + -81.0;
    v38 = *(double *)(a2 + 24);
    v39 = 1.0;
    if (v37 < v38)
      v39 = v37 / v38;
  }
  else
  {
    v40 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v40, "_pointsPerInch");
    v42 = v41;

    v38 = *(double *)(a2 + 24);
    v39 = v42 / *(double *)(a2 + 32);
  }
  v43 = *(double *)(a2 + 16);
  v253 = OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController;
  v44 = objc_msgSend(*(id *)&v36[OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController], "view");
  if (!v44)
    goto LABEL_44;
  v45 = v44;
  v46 = v39 * v43;
  v47 = v39 * v38;
  CGAffineTransformMakeTranslation(&v257, (v43 - v39 * v43) * -0.5, (v38 - v39 * v38) * -0.5);
  CGAffineTransformScale(&v256, &v257, v39, v39);
  v257 = v256;
  objc_msgSend(v45, "setTransform:", &v257);

  v48 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v49 = UIView.forAutolayout.getter();

  v252 = (id)objc_opt_self(UIColor);
  v50 = objc_msgSend(v252, "tertiarySystemFillColor");
  objc_msgSend(v49, "setBackgroundColor:", v50);

  v51 = objc_msgSend(v49, "layer");
  objc_msgSend(v51, "setCornerRadius:", 10.0);

  v52 = objc_msgSend(v49, "layer");
  objc_msgSend(v52, "setMaskedCorners:", 3);

  v53 = objc_msgSend(v49, "layer");
  objc_msgSend(v53, "setCornerCurve:", kCACornerCurveContinuous);

  v248 = v49;
  objc_msgSend(v36, "addSubview:", v49);
  v54 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v255 = UIView.forAutolayout.getter();

  v257.a = 0.0;
  v257.b = -2.68156159e154;
  _StringGuts.grow(_:)(26);
  b = v257.b;
  *(_OWORD *)&v257.a = *(_OWORD *)a2;
  sub_100055CE4(a2);
  swift_bridgeObjectRelease(*(_QWORD *)&b);
  v56._countAndFlagsBits = 10;
  v56._object = (void *)0xE100000000000000;
  String.append(_:)(v56);
  if ((~*(_QWORD *)&v43 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v43 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v43 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)&v256.a = (uint64_t)v43;
  v57._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(object);
  v59._countAndFlagsBits = 120;
  v59._object = (void *)0xE100000000000000;
  String.append(_:)(v59);
  if ((~*(_QWORD *)&v38 & 0x7FF0000000000000) == 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v38 >= 9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)&v256.a = (uint64_t)v38;
  v60._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v61 = v60._object;
  String.append(_:)(v60);
  swift_bridgeObjectRelease(v61);
  v62._countAndFlagsBits = 0x657265646E65520ALL;
  v62._object = (void *)0xED00002073612064;
  String.append(_:)(v62);
  if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v46 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v46 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  *(_QWORD *)&v256.a = (uint64_t)v46;
  v63._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v64 = v63._object;
  String.append(_:)(v63);
  swift_bridgeObjectRelease(v64);
  v65._countAndFlagsBits = 120;
  v65._object = (void *)0xE100000000000000;
  String.append(_:)(v65);
  if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) == 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v47 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v47 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v243 = kCACornerCurveContinuous;
  v241 = v26;
  *(_QWORD *)&v256.a = (uint64_t)v47;
  v66._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v67 = v66._object;
  String.append(_:)(v66);
  swift_bridgeObjectRelease(v67);
  v68 = v257.b;
  v69 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v70 = swift_bridgeObjectRelease(*(_QWORD *)&v68).n128_u64[0];
  v71 = a2;
  v72 = v255;
  objc_msgSend(v255, "setText:", v69, v70);

  objc_msgSend(v72, "setNumberOfLines:", 3);
  objc_msgSend(v72, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v72, "setMinimumScaleFactor:", 0.3);
  SymbolButton.Configuration.init()((uint64_t)v19);
  swift_bridgeObjectRelease(v19[1]);
  *v19 = 0xD000000000000013;
  v19[1] = 0x8000000100E2F3F0;
  v73 = SymbolButton.Background.tertiary.unsafeMutableAddressor();
  v74 = v73[3];
  v75 = v19[24];
  v76 = (void *)v19[25];
  v77 = v19[26];
  v78 = v19[27];
  v79 = *(_OWORD *)(v73 + 1);
  v19[24] = *v73;
  *(_OWORD *)(v19 + 25) = v79;
  v19[27] = v74;
  v80 = (void *)v79;
  swift_bridgeObjectRetain();
  v81 = v80;
  sub_10013BA8C(v75, v76, v77, v78);
  v242 = v19;
  v82 = (uint64_t)v245;
  sub_1002291E8((uint64_t)v19, (uint64_t)v245);
  v83 = swift_allocObject(&unk_1010B69B8, 24, 7);
  swift_unknownObjectWeakInit(v83 + 16, v36);
  v84 = swift_allocObject(&unk_1010B69E0, 144, 7);
  v85 = *(_OWORD *)(v71 + 32);
  *(_OWORD *)(v84 + 72) = *(_OWORD *)(v71 + 48);
  v86 = *(_OWORD *)(v71 + 80);
  *(_OWORD *)(v84 + 88) = *(_OWORD *)(v71 + 64);
  *(_OWORD *)(v84 + 104) = v86;
  v87 = *(_OWORD *)(v71 + 16);
  *(_OWORD *)(v84 + 24) = *(_OWORD *)v71;
  *(_OWORD *)(v84 + 40) = v87;
  *(_QWORD *)(v84 + 16) = v83;
  *(_WORD *)(v84 + 120) = *(_WORD *)(v71 + 96);
  *(_OWORD *)(v84 + 56) = v85;
  v88 = v250;
  *(_QWORD *)(v84 + 128) = v254;
  *(_QWORD *)(v84 + 136) = v88;
  v89 = (objc_class *)type metadata accessor for SymbolButton(0);
  v90 = objc_allocWithZone(v89);
  v247 = v71;
  sub_100055CE4(v71);
  swift_retain(v88);
  v91 = SymbolButton.init(configuration:handler:)(v82, (uint64_t)sub_100229260, v84);
  v92 = v252;
  v93 = objc_msgSend(v252, "labelColor");
  objc_msgSend(v91, "setTintColor:", v93);
  v244 = v91;

  v94 = v249;
  SymbolButton.Configuration.init()((uint64_t)v249);
  v95 = v73[3];
  v96 = v94[24];
  v97 = (void *)v94[25];
  v98 = v36;
  v100 = v94[26];
  v99 = v94[27];
  v101 = *(_OWORD *)(v73 + 1);
  v94[24] = *v73;
  *(_OWORD *)(v94 + 25) = v101;
  v94[27] = v95;
  v102 = (void *)v101;
  swift_bridgeObjectRetain();
  v103 = v102;
  sub_10013BA8C(v96, v97, v100, v99);
  swift_bridgeObjectRelease(v94[1]);
  *v94 = 0xD000000000000011;
  v94[1] = 0x8000000100E31AE0;
  sub_1002291E8((uint64_t)v94, v82);
  v104 = swift_allocObject(&unk_1010B69B8, 24, 7);
  swift_unknownObjectWeakInit(v104 + 16, v98);
  v105 = (_QWORD *)swift_allocObject(&unk_1010B6A08, 40, 7);
  v106 = v251;
  v105[2] = v246;
  v105[3] = v106;
  v105[4] = v104;
  v107 = objc_allocWithZone(v89);
  swift_retain(v106);
  v108 = SymbolButton.init(configuration:handler:)(v82, (uint64_t)sub_10022929C, (uint64_t)v105);
  v109 = objc_msgSend(v92, "labelColor");
  objc_msgSend(v108, "setTintColor:", v109);

  v110 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  objc_msgSend(v98, "addLayoutGuide:", v110);
  objc_msgSend(v98, "addSubview:", v255);
  v111 = v253;
  v112 = *(void **)&v98[v253];
  v254 = v98;
  v113 = v98;
  v114 = objc_msgSend(v112, "view");
  if (!v114)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v115 = v114;
  v246 = v110;
  objc_msgSend(v113, "addSubview:", v114);

  v245 = (id)sub_100007E8C((uint64_t *)&unk_1011A1470);
  v116 = COERCE_DOUBLE(swift_allocObject(v245, 48, 7));
  *(_OWORD *)(*(_QWORD *)&v116 + 16) = xmmword_100EA7DB0;
  v117 = v244;
  *(_QWORD *)(*(_QWORD *)&v116 + 32) = v108;
  *(_QWORD *)(*(_QWORD *)&v116 + 40) = v117;
  v257.a = v116;
  specialized Array._endMutation()(*(_QWORD *)&v116);
  a = v257.a;
  v119 = objc_allocWithZone((Class)UIStackView);
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v240 = v117;
  v239 = v108;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v121 = objc_msgSend(v119, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(*(_QWORD *)&a).n128_f64[0]);

  v122 = UIView.forAutolayout.getter();
  objc_msgSend(v122, "setAxis:", 1);
  objc_msgSend(v122, "setSpacing:", 10.0);
  objc_msgSend(v113, "addSubview:", v122);
  v123 = *(void **)&v254[v111];
  v124 = v113;
  v125 = objc_msgSend(v123, "view");
  if (!v125)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v126 = v125;
  objc_msgSend(v124, "addSubview:", v125);

  v127 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v128 = UIView.forAutolayout.getter();

  v129 = v247;
  objc_msgSend(v128, "setHidden:", (*(_BYTE *)(v247 + 96) & 1) == 0);
  v130 = v252;
  v131 = objc_msgSend(v252, "blackColor");
  objc_msgSend(v128, "setBackgroundColor:", v131);

  v132 = objc_msgSend(v128, "layer");
  objc_msgSend(v132, "setMaskedCorners:", 12);

  v133 = objc_msgSend(v128, "layer");
  v134 = v243;
  objc_msgSend(v133, "setCornerCurve:", v243);

  v135 = objc_msgSend(v128, "layer");
  objc_msgSend(v135, "setCornerRadius:", 20.0);

  v244 = (char *)v128;
  objc_msgSend(v124, "addSubview:", v128);
  v136 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v137 = UIView.forAutolayout.getter();

  objc_msgSend(v137, "setHidden:", (*(_BYTE *)(v129 + 97) & 1) == 0);
  v138 = objc_msgSend(v130, "whiteColor");
  objc_msgSend(v137, "setBackgroundColor:", v138);

  v139 = objc_msgSend(v137, "layer");
  objc_msgSend(v139, "setCornerRadius:", 4.0);

  v140 = objc_msgSend(v137, "layer");
  objc_msgSend(v140, "setCornerCurve:", v134);

  v243 = (CALayerCornerCurve)v137;
  objc_msgSend(v124, "addSubview:", v137);
  v141 = COERCE_DOUBLE(swift_allocObject(v245, 248, 7));
  *(_OWORD *)(*(_QWORD *)&v141 + 16) = xmmword_100EAFD00;
  v142 = v248;
  v143 = objc_msgSend(v248, "leadingAnchor");
  v144 = objc_msgSend(v124, "leadingAnchor");
  v145 = objc_msgSend(v143, "constraintEqualToAnchor:", v144);

  *(_QWORD *)(*(_QWORD *)&v141 + 32) = v145;
  v146 = objc_msgSend(v142, "trailingAnchor");
  v147 = objc_msgSend(v124, "trailingAnchor");
  v148 = objc_msgSend(v146, "constraintEqualToAnchor:", v147);

  *(_QWORD *)(*(_QWORD *)&v141 + 40) = v148;
  v149 = objc_msgSend(v142, "topAnchor");
  v150 = objc_msgSend(v124, "topAnchor");
  v151 = objc_msgSend(v149, "constraintEqualToAnchor:", v150);

  *(_QWORD *)(*(_QWORD *)&v141 + 48) = v151;
  v152 = objc_msgSend(v142, "heightAnchor");
  v153 = objc_msgSend(v124, "heightAnchor");
  v154 = objc_msgSend(v152, "constraintEqualToAnchor:multiplier:", v153, 0.5);

  *(_QWORD *)(*(_QWORD *)&v141 + 56) = v154;
  v155 = v255;
  v156 = objc_msgSend(v255, "topAnchor");
  v157 = objc_msgSend(v124, "topAnchor");
  v158 = objc_msgSend(v156, "constraintEqualToAnchor:constant:", v157, 10.0);

  *(_QWORD *)(*(_QWORD *)&v141 + 64) = v158;
  v159 = objc_msgSend(v155, "leadingAnchor");
  v160 = objc_msgSend(v124, "leadingAnchor");
  v161 = objc_msgSend(v159, "constraintEqualToAnchor:constant:", v160, 10.0);

  *(_QWORD *)(*(_QWORD *)&v141 + 72) = v161;
  v162 = objc_msgSend(v155, "bottomAnchor");
  v163 = v246;
  v164 = objc_msgSend(v246, "topAnchor");
  v165 = objc_msgSend(v162, "constraintEqualToAnchor:constant:", v164, -10.0);

  *(_QWORD *)(*(_QWORD *)&v141 + 80) = v165;
  v166 = objc_msgSend(v122, "centerYAnchor");
  v167 = objc_msgSend(v155, "centerYAnchor");
  v168 = objc_msgSend(v166, "constraintEqualToAnchor:", v167);

  *(_QWORD *)(*(_QWORD *)&v141 + 88) = v168;
  v169 = objc_msgSend(v122, "leadingAnchor");
  v170 = objc_msgSend(v155, "trailingAnchor");
  v171 = objc_msgSend(v169, "constraintEqualToAnchor:constant:", v170, 10.0);

  *(_QWORD *)(*(_QWORD *)&v141 + 96) = v171;
  v252 = v122;
  v172 = objc_msgSend(v122, "trailingAnchor");
  v173 = objc_msgSend(v124, "trailingAnchor");
  v174 = objc_msgSend(v172, "constraintEqualToAnchor:constant:", v173, -10.0);

  *(_QWORD *)(*(_QWORD *)&v141 + 104) = v174;
  v175 = objc_msgSend(v163, "leadingAnchor");
  v176 = objc_msgSend(v124, "leadingAnchor");
  v177 = objc_msgSend(v175, "constraintEqualToAnchor:", v176);

  *(_QWORD *)(*(_QWORD *)&v141 + 112) = v177;
  v178 = objc_msgSend(v163, "trailingAnchor");
  v179 = objc_msgSend(v124, "trailingAnchor");
  v180 = objc_msgSend(v178, "constraintEqualToAnchor:", v179);

  *(_QWORD *)(*(_QWORD *)&v141 + 120) = v180;
  v181 = objc_msgSend(v163, "bottomAnchor");
  v182 = objc_msgSend(v124, "bottomAnchor");
  v183 = objc_msgSend(v181, "constraintEqualToAnchor:", v182);

  *(_QWORD *)(*(_QWORD *)&v141 + 128) = v183;
  v184 = objc_msgSend(v163, "widthAnchor");
  v185 = objc_msgSend(v184, "constraintEqualToConstant:", v39 * v43);

  *(_QWORD *)(*(_QWORD *)&v141 + 136) = v185;
  v186 = objc_msgSend(v163, "heightAnchor");
  v187 = objc_msgSend(v186, "constraintEqualToConstant:", v39 * v38);

  *(_QWORD *)(*(_QWORD *)&v141 + 144) = v187;
  v188 = v253;
  v189 = objc_msgSend(*(id *)&v254[v253], "view");
  if (!v189)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v190 = v189;
  v191 = objc_msgSend(v189, "leadingAnchor");

  v192 = objc_msgSend(v163, "leadingAnchor");
  v193 = objc_msgSend(v191, "constraintEqualToAnchor:", v192);

  *(_QWORD *)(*(_QWORD *)&v141 + 152) = v193;
  v194 = objc_msgSend(*(id *)&v254[v188], "view");
  if (!v194)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v195 = v194;
  v245 = v124;
  v196 = objc_msgSend(v194, "topAnchor");

  v197 = objc_msgSend(v163, "topAnchor");
  v198 = objc_msgSend(v196, "constraintEqualToAnchor:", v197);

  *(_QWORD *)(*(_QWORD *)&v141 + 160) = v198;
  v199 = v254;
  v200 = objc_msgSend(*(id *)&v254[v188], "view");
  v201 = v247;
  v202 = v244;
  if (!v200)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v203 = v200;
  v204 = objc_msgSend(v200, "widthAnchor");

  v205 = objc_msgSend(v204, "constraintEqualToConstant:", v43);
  *(_QWORD *)(*(_QWORD *)&v141 + 168) = v205;
  v206 = objc_msgSend(*(id *)&v199[v188], "view");
  if (!v206)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v207 = v206;
  v208 = objc_msgSend(v206, "heightAnchor");

  v209 = objc_msgSend(v208, "constraintEqualToConstant:", v38);
  sub_1001C7464(v201);

  *(_QWORD *)(*(_QWORD *)&v141 + 176) = v209;
  v210 = objc_msgSend(v202, "widthAnchor");
  v211 = objc_msgSend(v210, "constraintEqualToConstant:", v39 * 209.0);

  *(_QWORD *)(*(_QWORD *)&v141 + 184) = v211;
  v212 = objc_msgSend(v202, "heightAnchor");
  v213 = objc_msgSend(v212, "constraintEqualToConstant:", v39 * 30.0);

  *(_QWORD *)(*(_QWORD *)&v141 + 192) = v213;
  v214 = objc_msgSend(v202, "topAnchor");
  v215 = objc_msgSend(*(id *)&v199[v188], "view");
  if (v215)
  {
    v216 = v215;
    v254 = (char *)objc_opt_self(NSLayoutConstraint);
    v217 = objc_msgSend(v216, "topAnchor");

    v218 = objc_msgSend(v214, "constraintEqualToAnchor:", v217);
    *(_QWORD *)(*(_QWORD *)&v141 + 200) = v218;
    v219 = objc_msgSend(v202, "centerXAnchor");
    v220 = v245;
    v221 = objc_msgSend(v245, "centerXAnchor");
    v222 = objc_msgSend(v219, "constraintEqualToAnchor:", v221);

    *(_QWORD *)(*(_QWORD *)&v141 + 208) = v222;
    v223 = v243;
    v224 = -[NSString heightAnchor](v243, "heightAnchor");
    v225 = objc_msgSend(v224, "constraintEqualToConstant:", 5.0);

    *(_QWORD *)(*(_QWORD *)&v141 + 216) = v225;
    v226 = -[NSString widthAnchor](v223, "widthAnchor");
    v227 = objc_msgSend(v226, "constraintEqualToConstant:", 148.0);

    *(_QWORD *)(*(_QWORD *)&v141 + 224) = v227;
    v228 = -[NSString centerXAnchor](v223, "centerXAnchor");
    v229 = objc_msgSend(v220, "centerXAnchor");
    v230 = objc_msgSend(v228, "constraintEqualToAnchor:", v229);

    *(_QWORD *)(*(_QWORD *)&v141 + 232) = v230;
    v231 = -[NSString bottomAnchor](v223, "bottomAnchor");
    v232 = objc_msgSend(v220, "bottomAnchor");
    v233 = objc_msgSend(v231, "constraintEqualToAnchor:constant:", v232, -8.0);

    *(_QWORD *)(*(_QWORD *)&v141 + 240) = v233;
    v257.a = v141;
    specialized Array._endMutation()(v234);
    v235 = v257.a;
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    v236 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v237 = swift_bridgeObjectRelease(*(_QWORD *)&v235).n128_u64[0];
    objc_msgSend(v254, "activateConstraints:", v236, v237);

    swift_release(v250);
    swift_release(v251);
    sub_1002292A8((uint64_t)v249);
    sub_1002292A8((uint64_t)v242);
    return;
  }
LABEL_51:
  __break(1u);
}

void sub_100223430(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  double v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t aBlock;
  uint64_t v32;
  void (*v33)(uint64_t, void *);
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  char v37[32];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    goto LABEL_7;
  v8 = (void *)Strong;
  v9 = *(id *)(Strong + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController);

  v10 = objc_msgSend(v9, "view");
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v10, "transform");
  v11 = aBlock;
  v12 = v32;
  v13 = v33;
  v14 = v34;
  v15 = v35;
  v16 = v36;
  aBlock = 0x3FF0000000000000;
  v32 = 0;
  v33 = 0;
  v34 = 0x3FF0000000000000;
  v35 = 0;
  v36 = 0;
  objc_msgSend(v10, "setTransform:", &aBlock);
  v17 = objc_msgSend(v10, "layer");
  objc_msgSend(v17, "setCornerRadius:", 0.0);

  objc_msgSend(v10, "bounds");
  v20 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v18, v19);
  v21 = swift_allocObject(&unk_1010B6A30, 24, 7);
  *(_QWORD *)(v21 + 16) = v10;
  v22 = swift_allocObject(&unk_1010B6A58, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_100229308;
  *(_QWORD *)(v22 + 24) = v21;
  v35 = sub_100229354;
  v36 = v22;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_10004BF88;
  v34 = (uint64_t)&unk_1010B6A70;
  v23 = _Block_copy(&aBlock);
  v24 = v36;
  swift_retain(v22);
  v25 = v10;
  v26 = objc_msgSend(v20, "imageWithActions:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation(v22, "", 101, 138, 44, 1);
  *(_QWORD *)&v27 = swift_release(v22).n128_u64[0];
  if ((v23 & 1) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  aBlock = v11;
  v32 = v12;
  v33 = v13;
  v34 = v14;
  v35 = v15;
  v36 = v16;
  objc_msgSend(v25, "setTransform:", &aBlock, v27);
  v28 = objc_msgSend(v25, "layer");
  objc_msgSend(v28, "setCornerRadius:", *(double *)(a3 + 72));

  swift_beginAccess(v6, &aBlock, 0, 0);
  v29 = swift_unknownObjectWeakLoadStrong(v6);
  if (v29)
  {
    v30 = (void *)v29;
    a4(v29, v26);
    swift_release(v21);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100223750(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    a2();

  }
  else
  {
    __break(1u);
  }
}

void sub_10022380C(void *a1, objc_method *a2, uint64_t a3)
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  IMP Implementation;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = objc_msgSend(a1, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = v6;
  objc_msgSend(v6, "transform");
  v8 = v19;
  v9 = v20;
  v10 = v21;
  v11 = v22;
  v12 = v23;
  v13 = v24;

  v14 = objc_msgSend(a1, "view");
  if (!v14)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v15 = v14;
  v19 = 0x3FF0000000000000;
  v20 = 0;
  v21 = 0;
  v22 = 0x3FF0000000000000;
  v23 = 0;
  v24 = 0;
  objc_msgSend(v14, "setTransform:", &v19);

  Implementation = method_getImplementation(a2);
  ((void (*)(void *, uint64_t))Implementation)(a1, a3);
  v17 = objc_msgSend(a1, "view");
  if (v17)
  {
    v18 = v17;
    v19 = v8;
    v20 = v9;
    v21 = v10;
    v22 = v11;
    v23 = v12;
    v24 = v13;
    objc_msgSend(v17, "setTransform:", &v19);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_100223938(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

id sub_1002239B4()
{
  return sub_1001EB7B8(type metadata accessor for MultiDeviceTesterViewController.DeviceView);
}

void sub_1002239FC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  Class isa;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  char *v18;
  Class v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  char *v24;
  Class v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  double v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  Class v104;
  id v105;
  _QWORD aBlock[5];
  uint64_t v107;
  objc_super v108;
  UIAction_optional v109;
  UIAction_optional v110;
  UIAction_optional v111;

  v1 = v0;
  v108.receiver = v0;
  v108.super_class = (Class)type metadata accessor for MultiDeviceTesterViewController();
  objc_msgSendSuper2(&v108, "viewDidLoad");
  static LifecyclePatrol.isEnabled = 0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_scrollView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_scrollView], "setContentInset:", 0.0, 20.0, 0.0, 20.0);
  v6 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView], "setAxis:", 0);
  objc_msgSend(*(id *)&v1[v6], "setAlignment:", 1);
  objc_msgSend(*(id *)&v1[v6], "setSpacing:", 10.0);
  objc_msgSend(*(id *)&v1[v5], "addSubview:", *(_QWORD *)&v1[v6]);
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v7;
  objc_msgSend(v7, "addSubview:", *(_QWORD *)&v1[v5]);

  sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v109.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x6976656420646441, 0xEA00000000006563, 0, 0, 0, 0, 0, 0, 0, 0, 0, UIScreen.Dimensions.size.getter, 0);
  isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v109).super.super.super.super.isa;
  v10 = UIView.forAutolayout.getter();

  objc_msgSend(v10, "setShowsMenuAsPrimaryAction:", 1);
  v11 = swift_allocObject(&unk_1010B6B98, 24, 7);
  *(_QWORD *)(v11 + 16) = v1;
  aBlock[4] = sub_1002294E4;
  v107 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100170D48;
  aBlock[3] = &unk_1010B6BB0;
  v12 = _Block_copy(aBlock);
  v13 = v107;
  v14 = v1;
  objc_msgSend(v10, "_setMenuProvider:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  v15 = objc_msgSend(v14, "view");
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v15;
  objc_msgSend(v15, "addSubview:", v10);

  v17 = swift_allocObject(&unk_1010B6BE8, 24, 7);
  *(_QWORD *)(v17 + 16) = v14;
  v18 = v14;
  v110.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x6C412065736F6C43, 0xE90000000000006CLL, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1002294EC, v17);
  v19 = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v110).super.super.super.super.isa;
  v20 = UIView.forAutolayout.getter();

  v21 = objc_msgSend(v18, "view");
  if (!v21)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", v20);

  v23 = swift_allocObject(&unk_1010B6C10, 24, 7);
  *(_QWORD *)(v23 + 16) = v18;
  v24 = v18;
  v111.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x7373696D736944, 0xE700000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10015EBA0, v23);
  v25 = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v111).super.super.super.super.isa;
  v26 = UIView.forAutolayout.getter();

  v27 = objc_msgSend(v24, "view");
  if (!v27)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v28 = v27;
  v105 = v26;
  objc_msgSend(v27, "addSubview:", v26);

  v29 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v30 = swift_allocObject(v29, 152, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EAFD10;
  v31 = objc_msgSend(v10, "topAnchor");
  v32 = objc_msgSend(v24, "view");
  if (!v32)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v33 = v32;
  v34 = v10;
  v35 = objc_msgSend(v32, "layoutMarginsGuide");

  v36 = objc_msgSend(v35, "topAnchor");
  v37 = objc_msgSend(v31, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v30 + 32) = v37;
  v38 = objc_msgSend(v34, "leadingAnchor");
  v39 = objc_msgSend(v24, "view");
  if (!v39)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "layoutMarginsGuide");

  v42 = objc_msgSend(v41, "leadingAnchor");
  v43 = objc_msgSend(v38, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v30 + 40) = v43;
  v44 = objc_msgSend(v20, "topAnchor");
  v45 = objc_msgSend(v24, "view");
  if (!v45)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v46 = v45;
  v47 = objc_msgSend(v45, "layoutMarginsGuide");

  v48 = objc_msgSend(v47, "topAnchor");
  v49 = objc_msgSend(v44, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v30 + 48) = v49;
  v50 = objc_msgSend(v20, "trailingAnchor");
  v51 = objc_msgSend(v105, "leadingAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, -20.0);

  *(_QWORD *)(v30 + 56) = v52;
  v53 = objc_msgSend(v105, "topAnchor");
  v54 = objc_msgSend(v24, "view");
  if (!v54)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v55 = v54;
  v56 = objc_msgSend(v54, "layoutMarginsGuide");

  v57 = objc_msgSend(v56, "topAnchor");
  v58 = objc_msgSend(v53, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v30 + 64) = v58;
  v59 = objc_msgSend(v105, "trailingAnchor");
  v60 = objc_msgSend(v24, "view");
  if (!v60)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v61 = v60;
  v62 = objc_msgSend(v60, "layoutMarginsGuide");

  v63 = objc_msgSend(v62, "trailingAnchor");
  v64 = objc_msgSend(v59, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v30 + 72) = v64;
  v65 = objc_msgSend(*(id *)&v1[v6], "widthAnchor");
  v66 = objc_msgSend(*(id *)&v1[v5], "widthAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  LODWORD(v68) = 1132068864;
  v69 = objc_msgSend(v67, "withPriority:", v68);

  *(_QWORD *)(v30 + 80) = v69;
  v70 = objc_msgSend(*(id *)&v1[v6], "leadingAnchor");
  v71 = objc_msgSend(*(id *)&v1[v5], "leadingAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v30 + 88) = v72;
  v73 = objc_msgSend(*(id *)&v1[v6], "trailingAnchor");
  v74 = objc_msgSend(*(id *)&v1[v5], "trailingAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:", v74);

  *(_QWORD *)(v30 + 96) = v75;
  v76 = objc_msgSend(*(id *)&v1[v6], "topAnchor");
  v77 = objc_msgSend(*(id *)&v1[v5], "topAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v30 + 104) = v78;
  v79 = objc_msgSend(*(id *)&v1[v6], "bottomAnchor");
  v80 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v30 + 112) = v81;
  v82 = objc_msgSend(*(id *)&v1[v5], "topAnchor");
  v83 = objc_msgSend(v34, "bottomAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:constant:", v83, 20.0);

  *(_QWORD *)(v30 + 120) = v84;
  v85 = objc_msgSend(*(id *)&v1[v5], "leadingAnchor");
  v86 = objc_msgSend(v24, "view");
  if (!v86)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v87 = v86;
  v88 = objc_msgSend(v86, "leadingAnchor");

  v89 = objc_msgSend(v85, "constraintEqualToAnchor:", v88);
  *(_QWORD *)(v30 + 128) = v89;
  v90 = objc_msgSend(*(id *)&v1[v5], "trailingAnchor");
  v91 = objc_msgSend(v24, "view");
  if (!v91)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v92 = v91;
  v93 = objc_msgSend(v91, "trailingAnchor");

  v94 = objc_msgSend(v90, "constraintEqualToAnchor:", v93);
  *(_QWORD *)(v30 + 136) = v94;
  v95 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
  v96 = objc_msgSend(v24, "view");
  if (v96)
  {
    v97 = v96;
    v98 = (void *)objc_opt_self(NSLayoutConstraint);
    v99 = objc_msgSend(v97, "safeAreaLayoutGuide");

    v100 = objc_msgSend(v99, "bottomAnchor");
    v101 = objc_msgSend(v95, "constraintEqualToAnchor:", v100);

    *(_QWORD *)(v30 + 144) = v101;
    aBlock[0] = v30;
    specialized Array._endMutation()(v102);
    v103 = aBlock[0];
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    v104 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v98, "activateConstraints:", v104, swift_bridgeObjectRelease(v103).n128_f64[0]);

    return;
  }
LABEL_27:
  __break(1u);
}

void sub_1002246EC(uint64_t a1, uint64_t a2, char *a3)
{
  id v3;
  unint64_t v5;
  uint64_t v6;
  _UNKNOWN **v7;
  void *v8;
  uint64_t v9;
  NSString v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  BOOL v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  id v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  UIMenuElementSize v45;
  uint64_t v46;
  UIMenuElementSize preferredElementSize;
  Swift::String v48;
  objc_class *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  UIMenuElementSize v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  Swift::OpaquePointer v61;
  uint64_t v62;
  void *v63;
  void *v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  void *v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int16 v79;
  UIImage_optional v80;
  UIImage_optional v81;

  v72 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v5 = 0;
  v6 = *(_QWORD *)&a3[OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_devices];
  v62 = v6;
  v63 = a3;
  while (1)
  {
    if (v5 >= 8)
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v7 = &off_1010AAEC8 + 2 * v5;
    v9 = (uint64_t)v7[4];
    v8 = v7[5];
    v71 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    v10 = String._bridgeToObjectiveC()();
    v11 = (_QWORD *)swift_allocObject(&unk_1010B6C38, 40, 7);
    v11[2] = v63;
    v11[3] = v9;
    v11[4] = v8;
    swift_bridgeObjectRetain();
    v12 = v63;
    v3 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x6C6C61206E65704FLL, 0xE800000000000000, 0, 0, 0, 0, v10, 0, 0, 0, 0, sub_1002294FC, v11);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    v14 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v13 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v3);
    specialized Array._endMutation()(v15);
    if (!*(_QWORD *)(v6 + 16))
      goto LABEL_35;
    v64 = v3;
    v65 = v5;
    swift_bridgeObjectRetain();
    v16 = sub_10079C2C4(v9, (uint64_t)v8);
    if ((v17 & 1) == 0)
      break;
    v18 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v8);
    v66 = v18;
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (__int128 *)(v66 + 32);
      v22 = v9 == 0x656E6F685069 && v8 == (void *)0xE600000000000000;
      do
      {
        v23 = *v20;
        v24 = v20[2];
        v74 = v20[1];
        v75 = v24;
        v73 = v23;
        v25 = v20[3];
        v26 = v20[4];
        v27 = v20[5];
        v79 = *((_WORD *)v20 + 48);
        v77 = v26;
        v78 = v27;
        v76 = v25;
        if (v22
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v8, 0x656E6F685069, 0xE600000000000000, 0) & 1) != 0)
        {
          v29 = *((_QWORD *)&v73 + 1);
          v28 = v73;
          sub_100055CE4((uint64_t)&v73);
          sub_100055CE4((uint64_t)&v73);
        }
        else
        {
          v70 = v73;
          v68 = v9;
          v69 = v8;
          swift_bridgeObjectRetain();
          sub_100055CE4((uint64_t)&v73);
          v30._countAndFlagsBits = 32;
          v30._object = (void *)0xE100000000000000;
          String.append(_:)(v30);
          v31 = v69;
          v67[0] = 0;
          v67[1] = 0xE000000000000000;
          sub_100055CE4((uint64_t)&v73);
          v32 = sub_100055B68();
          v28 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v68, v67, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v32, v32, v32);
          v29 = v33;
          swift_bridgeObjectRelease(v31);
          sub_1001C7464((uint64_t)&v73);
        }
        sub_100055CE4((uint64_t)&v73);
        v34 = String._bridgeToObjectiveC()();
        sub_1001C7464((uint64_t)&v73);
        v35 = swift_allocObject(&unk_1010B6C60, 122, 7);
        v36 = v75;
        *(_OWORD *)(v35 + 72) = v76;
        v37 = v78;
        *(_OWORD *)(v35 + 88) = v77;
        *(_OWORD *)(v35 + 104) = v37;
        v38 = v74;
        *(_OWORD *)(v35 + 24) = v73;
        *(_OWORD *)(v35 + 40) = v38;
        *(_QWORD *)(v35 + 16) = v12;
        *(_WORD *)(v35 + 120) = v79;
        *(_OWORD *)(v35 + 56) = v36;
        v39 = v12;
        v40 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v28, v29, 0, 0, 0, 0, v34, 0, 0, 0, 0, sub_100229548, v35);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
        v42 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v41 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v42 >= v41 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
        v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
        specialized Array._endMutation()(v43);

        v20 = (__int128 *)((char *)v20 + 104);
        --v19;
      }
      while (v19);
    }
    swift_bridgeObjectRelease(v66);
    v44 = String._bridgeToObjectiveC()();
    v45 = v71;
    if ((unint64_t)v71 >> 62)
    {
      if (v71 < 0)
        v53 = v71;
      else
        v53 = v71 & 0xFFFFFFFFFFFFFF8;
      v54 = sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
      swift_bridgeObjectRetain();
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v53, v54);
      swift_bridgeObjectRelease(v45);
    }
    else
    {
      v46 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v46);
      sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
      preferredElementSize = v45;
    }
    LOBYTE(v3) = (_BYTE)v64;
    swift_bridgeObjectRelease(v45);
    sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
    v48._countAndFlagsBits = v9;
    v48._object = v8;
    v80.value.super.isa = 0;
    v80.is_nil = v44;
    v49 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v48, (Swift::String_optional)0, v80, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v61).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
    v51 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v50 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v5 = v65 + 1;
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
    specialized Array._endMutation()(v52);

    v6 = v62;
    if (v65 == 7)
    {
      swift_arrayDestroy(&qword_1010AAEE8, 8, &type metadata for String);
      v55 = String._bridgeToObjectiveC()();
      LOBYTE(v3) = v55;
      v6 = v72;
      if (!(v72 >> 62))
      {
        v56 = swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v56);
        sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
        v57 = v6;
LABEL_33:
        swift_bridgeObjectRelease(v6);
        v58._countAndFlagsBits = 0;
        v58._object = (void *)0xE000000000000000;
        v81.value.super.isa = 0;
        v81.is_nil = (char)v3;
        UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v58, (Swift::String_optional)0, v81, 0, 0xFFFFFFFFFFFFFFFFLL, v57, v61);
        return;
      }
LABEL_36:
      if (v6 < 0)
        v59 = v6;
      else
        v59 = v6 & 0xFFFFFFFFFFFFFF8;
      v60 = sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
      swift_bridgeObjectRetain();
      v57 = _bridgeCocoaArray<A>(_:)(v59, v60);
      swift_bridgeObjectRelease(v6);
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRelease(v8);
  __break(1u);
}

void sub_100224D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[6];
  __int16 v27;

  v7 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView), "arrangedSubviews");
  v8 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v14 = v9;
    else
      v14 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v9);
    if (!v10)
      goto LABEL_13;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      goto LABEL_13;
  }
  if (v10 < 1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  for (i = 0; i != v10; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0)
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
    else
      v12 = *(id *)(v9 + 8 * i + 32);
    v13 = v12;
    objc_msgSend(v12, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease(v9);
  v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_devices);
  if (!*(_QWORD *)(v15 + 16))
  {
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v16 = sub_10079C2C4(a3, a4);
  if ((v17 & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease(a4);
    __break(1u);
    return;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(a4);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = 32;
    do
    {
      v21 = *(_OWORD *)(v18 + v20);
      v22 = *(_OWORD *)(v18 + v20 + 32);
      v26[1] = *(_OWORD *)(v18 + v20 + 16);
      v26[2] = v22;
      v26[0] = v21;
      v23 = *(_OWORD *)(v18 + v20 + 48);
      v24 = *(_OWORD *)(v18 + v20 + 64);
      v25 = *(_OWORD *)(v18 + v20 + 80);
      v27 = *(_WORD *)(v18 + v20 + 96);
      v26[4] = v24;
      v26[5] = v25;
      v26[3] = v23;
      sub_100055CE4((uint64_t)v26);
      sub_1002256B8((uint64_t)v26);
      sub_1001C7464((uint64_t)v26);
      v20 += 104;
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease(v18);
  sub_100225C30();
}

void sub_100224F7C(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;

  v2 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView), "arrangedSubviews");
  v3 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v4);
    return;
  }
  if (v4 < 0)
    v9 = v4;
  else
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v4);
  if (!v5)
    goto LABEL_13;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1002250C4(char a1)
{
  void *v1;
  void *v2;
  id v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  objc_super v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int16 v30;

  v2 = v1;
  v23.receiver = v2;
  v23.super_class = (Class)type metadata accessor for MultiDeviceTesterViewController();
  objc_msgSendSuper2(&v23, "viewDidAppear:", a1 & 1);
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v21 = 0xD00000000000001DLL;
  v22 = 0x8000000100E31AC0;
  v5 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)&v21, (uint64_t)&type metadata for String, v5, (uint64_t)&v24);

  if (!*((_QWORD *)&v25 + 1))
    return sub_1002293F8((uint64_t)&v24);
  result = swift_dynamicCast(&v21, &v24, (char *)&type metadata for Any + 8, &type metadata for Data, 6);
  if ((result & 1) != 0)
  {
    v8 = v21;
    v7 = v22;
    v9 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
    v10 = JSONDecoder.init()();
    v11 = sub_100007E8C(&qword_1011A7820);
    v12 = sub_100229438(&qword_1011A7848, (void (*)(void))sub_1002294A0, (uint64_t)&protocol conformance descriptor for <A> [A]);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v24, v11, v8, v7, v11, v12);
    swift_release(v10);
    v13 = v24;
    v14 = *(_QWORD *)(v24 + 16);
    if (v14)
    {
      v15 = 32;
      do
      {
        v16 = *(_OWORD *)(v13 + v15);
        v17 = *(_OWORD *)(v13 + v15 + 32);
        v25 = *(_OWORD *)(v13 + v15 + 16);
        v26 = v17;
        v24 = v16;
        v18 = *(_OWORD *)(v13 + v15 + 48);
        v19 = *(_OWORD *)(v13 + v15 + 64);
        v20 = *(_OWORD *)(v13 + v15 + 80);
        v30 = *(_WORD *)(v13 + v15 + 96);
        v28 = v19;
        v29 = v20;
        v27 = v18;
        sub_100055CE4((uint64_t)&v24);
        sub_1002256B8((uint64_t)&v24);
        sub_1001C7464((uint64_t)&v24);
        v15 += 104;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease(v13);
    return sub_1000652DC(v8, v7);
  }
  return result;
}

void sub_10022537C(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  objc_super v29;

  v2 = v1;
  v29.receiver = v2;
  v29.super_class = (Class)type metadata accessor for MultiDeviceTesterViewController();
  objc_msgSendSuper2(&v29, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView], "arrangedSubviews");
  v5 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease(v6);
    return;
  }
LABEL_12:
  if (v6 < 0)
    v25 = v6;
  else
    v25 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_10;
LABEL_3:
  v27 = v6 & 0xC000000000000001;
  v8 = 4;
  v26 = v6;
  while (1)
  {
    if (v27)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6);
    else
      v9 = *(id *)(v6 + 8 * v8);
    v10 = v9;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    v28 = v8 - 3;
    v11 = type metadata accessor for MultiDeviceTesterViewController.DeviceView();
    v12 = swift_dynamicCastClassUnconditional(v10, v11, 0, 0, 0);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v14 = swift_allocObject(v13, 56, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EA7AD0;
    v15 = v10;
    v16 = objc_msgSend(v2, "view");
    if (!v16)
      break;
    v17 = v16;
    v18 = objc_msgSend(v16, "traitCollection");

    *(_QWORD *)(v14 + 32) = v18;
    v19 = v12 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device;
    v20 = *(_QWORD *)(v12 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 80);
    v21 = (void *)objc_opt_self(UITraitCollection);
    *(_QWORD *)(v14 + 40) = objc_msgSend(v21, "traitCollectionWithUserInterfaceIdiom:", v20);
    v22 = objc_msgSend(v21, "traitCollectionWithHorizontalSizeClass:", *(_QWORD *)(v19 + 88));
    *(_QWORD *)(v14 + 48) = v22;
    specialized Array._endMutation()(v22);
    sub_10004A07C(0, &qword_1011A22E8, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v24 = objc_msgSend(v21, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

    objc_msgSend(v2, "setOverrideTraitCollection:forChildViewController:", v24, *(_QWORD *)(v12 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController));
    ++v8;
    v6 = v26;
    if (v28 == v7)
      goto LABEL_10;
  }
  __break(1u);
}

void sub_1002256B8(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  void *v6;
  double Height;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  Class isa;
  id v24;
  id v25;
  id v26;
  CGRect v27;

  v2 = v1;
  v4 = objc_allocWithZone((Class)type metadata accessor for NowPlayingViewController(0));
  v5 = sub_1005DA0A0(0, 0, 1);
  v6 = *(void **)&v2[OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_scrollView];
  sub_100055CE4(a1);
  objc_msgSend(v6, "frame");
  Height = CGRectGetHeight(v27);
  v8 = swift_allocObject(&unk_1010B6968, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v2);
  v9 = swift_allocObject(&unk_1010B6990, 24, 7);
  *(_QWORD *)(v9 + 16) = v2;
  objc_allocWithZone((Class)type metadata accessor for MultiDeviceTesterViewController.DeviceView());
  v10 = v2;
  sub_100221A08(v5, a1, (char *)sub_100228F94, v8, sub_100228F9C, v9, Height);
  v12 = v11;
  v13 = (char *)UIView.forAutolayout.getter();

  v14 = OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController;
  objc_msgSend(v10, "addChildViewController:", *(_QWORD *)&v13[OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_viewController]);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v16 = swift_allocObject(v15, 56, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EA7AD0;
  v17 = objc_msgSend(v10, "view");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "traitCollection");

    *(_QWORD *)(v16 + 32) = v19;
    v20 = *(_QWORD *)(a1 + 80);
    v21 = (void *)objc_opt_self(UITraitCollection);
    *(_QWORD *)(v16 + 40) = objc_msgSend(v21, "traitCollectionWithUserInterfaceIdiom:", v20);
    v22 = objc_msgSend(v21, "traitCollectionWithHorizontalSizeClass:", *(_QWORD *)(a1 + 88));
    *(_QWORD *)(v16 + 48) = v22;
    specialized Array._endMutation()(v22);
    sub_10004A07C(0, &qword_1011A22E8, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v24 = objc_msgSend(v21, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    objc_msgSend(v10, "setOverrideTraitCollection:forChildViewController:", v24, *(_QWORD *)&v13[v14]);
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView], "addArrangedSubview:", v13);
    v25 = objc_msgSend(v10, "view");
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v25, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100225990(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  id v14;
  void *v15;
  _BYTE v16[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = sub_100007E8C(&qword_10119E430);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v9 + 56) = sub_10004A07C(0, (unint64_t *)&qword_1011A2360, UIImage_ptr);
    *(_QWORD *)(v9 + 32) = a2;
    v10 = objc_allocWithZone((Class)UIActivityViewController);
    v11 = a2;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v10, "initWithActivityItems:applicationActivities:", isa, 0, swift_bridgeObjectRelease(v9).n128_f64[0]);

    v14 = objc_msgSend(v13, "popoverPresentationController");
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, "setSourceView:", a1);

    }
    objc_msgSend(v7, "presentViewController:animated:completion:", v13, 1, 0);

  }
}

void sub_100225AE4(void *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_1010B6AF8, 24, 7);
  *(_QWORD *)(v5 + 16) = a1;
  v18 = sub_10022938C;
  v19 = v5;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_1001DBD98;
  v17 = &unk_1010B6B10;
  v6 = _Block_copy(&v14);
  v7 = v19;
  v8 = a1;
  swift_release(v7);
  v9 = swift_allocObject(&unk_1010B6B48, 32, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a2;
  v18 = sub_1002293CC;
  v19 = v9;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_10012F6FC;
  v17 = &unk_1010B6B60;
  v10 = _Block_copy(&v14);
  v11 = v19;
  v12 = v8;
  v13 = a2;
  swift_release(v11);
  objc_msgSend(v4, "animateWithDuration:animations:completion:", v6, v10, 0.25);
  _Block_release(v10);
  _Block_release(v6);
}

void sub_100225C30()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  unint64_t v37;
  __n128 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  _QWORD v44[6];

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView), "arrangedSubviews");
  v2 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v3);
    v6 = _swiftEmptyArrayStorage;
LABEL_19:
    v29 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v30 = JSONEncoder.init()();
    v44[0] = v6;
    v31 = sub_100007E8C(&qword_1011A7820);
    v32 = sub_100229438(&qword_1011A7828, (void (*)(void))sub_100228F2C, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v33 = dispatch thunk of JSONEncoder.encode<A>(_:)(v44, v31, v32);
    v35 = v34;
    swift_bridgeObjectRelease(v6);
    swift_release(v30);
    v36 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v44[3] = &type metadata for Data;
    v44[0] = v33;
    v44[1] = v35;
    v43[0] = 0xD00000000000001DLL;
    v43[1] = 0x8000000100E31AC0;
    sub_100079DE4(v33, v35);
    v37 = sub_100055B68();
    NSUserDefaults.subscript.setter((uint64_t)v44, (uint64_t)v43, (uint64_t)&type metadata for String, v37);
    sub_1000652DC(v33, v35);

    return;
  }
  if (v3 < 0)
    v28 = v3;
  else
    v28 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_18;
LABEL_3:
  v44[0] = _swiftEmptyArrayStorage;
  sub_10035C828(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = (_QWORD *)v44[0];
    v39 = v3 & 0xC000000000000001;
    v40 = v4;
    v41 = v3;
    do
    {
      if (v39)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v7 = *(id *)(v3 + 8 * v5 + 32);
      v8 = v7;
      v9 = type metadata accessor for MultiDeviceTesterViewController.DeviceView();
      v10 = swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
      v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device);
      v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 8);
      v13 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 16);
      v14 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 24);
      v15 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 32);
      v16 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 40);
      v17 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 48);
      v18 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 56);
      v19 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 64);
      v20 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 72);
      v21 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 80);
      v22 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 88);
      v23 = *(_BYTE *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 96);
      v24 = *(_BYTE *)(v10 + OBJC_IVAR____TtCC5Music31MultiDeviceTesterViewController10DeviceView_device + 97);
      swift_bridgeObjectRetain();

      v44[0] = v6;
      v42 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      {
        sub_10035C828(0, v6[2] + 1, 1);
        v6 = (_QWORD *)v44[0];
      }
      v26 = v6[2];
      v25 = v6[3];
      if (v26 >= v25 >> 1)
      {
        sub_10035C828(v25 > 1, v26 + 1, 1);
        v6 = (_QWORD *)v44[0];
      }
      ++v5;
      v6[2] = v26 + 1;
      v27 = &v6[13 * v26];
      v27[4] = v12;
      v27[5] = v11;
      v27[6] = v13;
      v27[7] = v14;
      v27[8] = v15;
      v27[9] = v16;
      v27[10] = v17;
      v27[11] = v18;
      v27[12] = v19;
      v27[13] = v20;
      v3 = v41;
      v27[14] = v42;
      v27[15] = v22;
      *((_BYTE *)v27 + 128) = v23;
      *((_BYTE *)v27 + 129) = v24;
    }
    while (v40 != v5);
    swift_bridgeObjectRelease(v41);
    goto LABEL_19;
  }
  __break(1u);
  v38 = swift_release(v44);
  swift_unexpectedError(v4, "Music/MultiDeviceTesterViewController.swift", 43, 1, 1220, v38);
  __break(1u);
}

id sub_100225FC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  NSString v21;
  id v22;
  char *v24;
  uint64_t v25;
  int64x2_t v28;
  objc_super v29;

  v25 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_devices;
  v3 = sub_100007E8C(&qword_1011A7838);
  v4 = swift_allocObject(v3, 224, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EAFD20;
  *(_QWORD *)(v4 + 32) = 0x656E6F685069;
  *(_QWORD *)(v4 + 40) = 0xE600000000000000;
  v5 = sub_100007E8C(&qword_1011A7840);
  v6 = swift_allocObject(v5, 1696, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EAFD30;
  *(_QWORD *)(v6 + 32) = 0x5320656E6F685069;
  *(_QWORD *)(v6 + 40) = 0xE900000000000045;
  *(_OWORD *)(v6 + 48) = xmmword_100EAFD40;
  *(_OWORD *)(v6 + 64) = xmmword_100EAFD50;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_QWORD *)(v6 + 112) = 0;
  *(_QWORD *)(v6 + 120) = 1;
  *(_WORD *)(v6 + 128) = 0;
  *(_QWORD *)(v6 + 136) = 0xD00000000000001BLL;
  *(_QWORD *)(v6 + 144) = 0x8000000100E31BD0;
  *(_OWORD *)(v6 + 152) = xmmword_100EAFD60;
  *(_OWORD *)(v6 + 168) = xmmword_100EAFD50;
  *(_OWORD *)(v6 + 184) = 0u;
  *(_OWORD *)(v6 + 200) = 0u;
  *(_QWORD *)(v6 + 216) = 0;
  *(_QWORD *)(v6 + 224) = 1;
  *(_WORD *)(v6 + 232) = 0;
  *(_QWORD *)(v6 + 240) = 0xD000000000000019;
  *(_QWORD *)(v6 + 248) = 0x8000000100E31BF0;
  *(_OWORD *)(v6 + 256) = xmmword_100EAFD70;
  *(_OWORD *)(v6 + 272) = xmmword_100EAFD80;
  *(_OWORD *)(v6 + 288) = 0u;
  *(_OWORD *)(v6 + 304) = 0u;
  *(_QWORD *)(v6 + 320) = 0;
  *(_QWORD *)(v6 + 328) = 1;
  *(_WORD *)(v6 + 336) = 0;
  *(_QWORD *)(v6 + 344) = 0xD000000000000016;
  *(_QWORD *)(v6 + 352) = 0x8000000100E31C10;
  *(_QWORD *)(v6 + 360) = 0x4077700000000000;
  *(_OWORD *)(v6 + 368) = xmmword_100EAFD90;
  *(_OWORD *)(v6 + 384) = xmmword_100EAFDA0;
  *(_OWORD *)(v6 + 400) = xmmword_100EAFDB0;
  *(_QWORD *)(v6 + 416) = 0x4043800000000000;
  *(_QWORD *)(v6 + 424) = 0;
  *(_QWORD *)(v6 + 432) = 1;
  *(_WORD *)(v6 + 440) = 257;
  *(_QWORD *)(v6 + 448) = 0xD000000000000022;
  *(_QWORD *)(v6 + 456) = 0x8000000100E31C30;
  *(_OWORD *)(v6 + 464) = xmmword_100EAFDC0;
  *(_OWORD *)(v6 + 480) = xmmword_100EAFDD0;
  *(_OWORD *)(v6 + 496) = xmmword_100EAFDE0;
  *(_OWORD *)(v6 + 512) = xmmword_100EAFDF0;
  *(_OWORD *)(v6 + 528) = xmmword_100EA85A0;
  *(_WORD *)(v6 + 544) = 257;
  strcpy((char *)(v6 + 552), "iPhone Xr / 11");
  *(_BYTE *)(v6 + 567) = -18;
  *(_QWORD *)(v6 + 568) = 0x4079E00000000000;
  *(_OWORD *)(v6 + 576) = xmmword_100EAFE00;
  *(_OWORD *)(v6 + 592) = xmmword_100EAFDA0;
  *(_OWORD *)(v6 + 608) = xmmword_100EAFDB0;
  *(_QWORD *)(v6 + 624) = 0x4043800000000000;
  *(_QWORD *)(v6 + 632) = 0;
  *(_QWORD *)(v6 + 640) = 1;
  *(_WORD *)(v6 + 648) = 257;
  *(_QWORD *)(v6 + 656) = 0xD00000000000001ALL;
  *(_QWORD *)(v6 + 664) = 0x8000000100E31C60;
  *(_OWORD *)(v6 + 672) = xmmword_100EAFE10;
  *(_OWORD *)(v6 + 688) = xmmword_100EAFE20;
  *(_OWORD *)(v6 + 704) = xmmword_100EAFDE0;
  *(_OWORD *)(v6 + 720) = xmmword_100EAFDF0;
  *(_OWORD *)(v6 + 736) = xmmword_100EA85A0;
  *(_WORD *)(v6 + 752) = 257;
  strcpy((char *)(v6 + 760), "iPhone 12 / 13");
  *(_BYTE *)(v6 + 775) = -18;
  *(_QWORD *)(v6 + 776) = 0x4078600000000000;
  *(_OWORD *)(v6 + 784) = xmmword_100EAFE30;
  *(_OWORD *)(v6 + 800) = xmmword_100EAFDA0;
  *(_OWORD *)(v6 + 816) = xmmword_100EAFDB0;
  *(_QWORD *)(v6 + 832) = 0x4047AA3D70A3D70ALL;
  *(_QWORD *)(v6 + 840) = 0;
  *(_QWORD *)(v6 + 848) = 1;
  *(_WORD *)(v6 + 856) = 257;
  *(_QWORD *)(v6 + 864) = 0xD00000000000001ALL;
  *(_QWORD *)(v6 + 872) = 0x8000000100E31C80;
  *(_OWORD *)(v6 + 880) = xmmword_100EAFDC0;
  *(_OWORD *)(v6 + 896) = xmmword_100EAFE40;
  *(_OWORD *)(v6 + 912) = xmmword_100EAFDE0;
  *(_OWORD *)(v6 + 928) = xmmword_100EAFE50;
  *(_OWORD *)(v6 + 944) = xmmword_100EA85A0;
  *(_WORD *)(v6 + 960) = 257;
  *(_QWORD *)(v6 + 968) = 0xD000000000000013;
  *(_QWORD *)(v6 + 976) = 0x8000000100E31CA0;
  *(_QWORD *)(v6 + 984) = 0x4077700000000000;
  *(_OWORD *)(v6 + 992) = xmmword_100EAFE60;
  *(_OWORD *)(v6 + 1008) = xmmword_100EAFDA0;
  *(_OWORD *)(v6 + 1024) = xmmword_100EAFDB0;
  *(_QWORD *)(v6 + 1040) = 0x4046000000000000;
  *(_QWORD *)(v6 + 1048) = 0;
  *(_QWORD *)(v6 + 1056) = 1;
  *(_WORD *)(v6 + 1064) = 257;
  *(_QWORD *)(v6 + 1072) = 0xD00000000000001FLL;
  *(_QWORD *)(v6 + 1080) = 0x8000000100E31CC0;
  *(_OWORD *)(v6 + 1088) = xmmword_100EAFDC0;
  *(_OWORD *)(v6 + 1104) = xmmword_100EAFE70;
  *(_OWORD *)(v6 + 1120) = xmmword_100EAFDE0;
  *(_OWORD *)(v6 + 1136) = xmmword_100EAFE80;
  *(_OWORD *)(v6 + 1152) = xmmword_100EA85A0;
  *(_WORD *)(v6 + 1168) = 257;
  *(_QWORD *)(v6 + 1176) = 0xD000000000000016;
  *(_QWORD *)(v6 + 1184) = 0x8000000100E31CE0;
  *(_QWORD *)(v6 + 1192) = 0x407AC00000000000;
  *(_OWORD *)(v6 + 1200) = xmmword_100EAFE90;
  *(_OWORD *)(v6 + 1216) = xmmword_100EAFDA0;
  *(_OWORD *)(v6 + 1232) = xmmword_100EAFDB0;
  *(_QWORD *)(v6 + 1248) = 0x404AAA3D70A3D70ALL;
  *(_QWORD *)(v6 + 1256) = 0;
  *(_QWORD *)(v6 + 1264) = 1;
  *(_WORD *)(v6 + 1272) = 257;
  strcpy((char *)(v6 + 1280), "iPhone 14 Pro");
  *(_WORD *)(v6 + 1294) = -4864;
  *(_OWORD *)(v6 + 1296) = xmmword_100EAFEA0;
  *(_OWORD *)(v6 + 1312) = xmmword_100EAFEB0;
  *(_OWORD *)(v6 + 1328) = xmmword_100EAFDE0;
  *(_OWORD *)(v6 + 1344) = xmmword_100EAFEC0;
  *(_OWORD *)(v6 + 1360) = xmmword_100EA85A0;
  *(_WORD *)(v6 + 1376) = 257;
  *(_QWORD *)(v6 + 1384) = 0xD000000000000019;
  *(_QWORD *)(v6 + 1392) = 0x8000000100E31D00;
  *(_QWORD *)(v6 + 1400) = 0x4074000000000000;
  *(_OWORD *)(v6 + 1408) = xmmword_100EAFED0;
  *(_OWORD *)(v6 + 1424) = xmmword_100EAFEE0;
  *(_OWORD *)(v6 + 1440) = xmmword_100EAFEF0;
  *(_QWORD *)(v6 + 1456) = 0x404655C28F5C28F6;
  *(_QWORD *)(v6 + 1464) = 0;
  *(_QWORD *)(v6 + 1472) = 1;
  *(_WORD *)(v6 + 1480) = 257;
  *(_QWORD *)(v6 + 1488) = 0xD000000000000011;
  *(_QWORD *)(v6 + 1496) = 0x8000000100E31D20;
  *(_OWORD *)(v6 + 1504) = xmmword_100EAFF00;
  *(_OWORD *)(v6 + 1520) = xmmword_100EAFEB0;
  *(_OWORD *)(v6 + 1536) = xmmword_100EAFDE0;
  *(_OWORD *)(v6 + 1552) = xmmword_100EAFEC0;
  *(_OWORD *)(v6 + 1568) = xmmword_100EA85A0;
  *(_WORD *)(v6 + 1584) = 257;
  *(_QWORD *)(v6 + 1592) = 0xD00000000000001DLL;
  *(_QWORD *)(v6 + 1600) = 0x8000000100E31D40;
  *(_QWORD *)(v6 + 1608) = 0x4077700000000000;
  *(_OWORD *)(v6 + 1616) = xmmword_100EAFF10;
  *(_OWORD *)(v6 + 1632) = xmmword_100EAFF20;
  *(_OWORD *)(v6 + 1648) = xmmword_100EAFF30;
  *(_QWORD *)(v6 + 1664) = 0x4048000000000000;
  *(_QWORD *)(v6 + 1672) = 0;
  *(_QWORD *)(v6 + 1680) = 1;
  *(_WORD *)(v6 + 1688) = 257;
  *(_QWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 56) = 0xD000000000000012;
  *(_QWORD *)(v4 + 64) = 0x8000000100E2AE40;
  v7 = swift_allocObject(v5, 760, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v7 + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(v7 + 40) = 0x8000000100E31D60;
  *(_OWORD *)(v7 + 48) = xmmword_100EAFF40;
  *(_OWORD *)(v7 + 64) = xmmword_100EAFF50;
  *(_OWORD *)(v7 + 80) = xmmword_100EAFF60;
  *(_OWORD *)(v7 + 96) = xmmword_100EAFF70;
  *(_OWORD *)(v7 + 112) = xmmword_100EA7AA0;
  *(_WORD *)(v7 + 128) = 256;
  *(_QWORD *)(v7 + 136) = 0xD000000000000027;
  *(_QWORD *)(v7 + 144) = 0x8000000100E31D80;
  *(_OWORD *)(v7 + 152) = xmmword_100EAFF80;
  *(_OWORD *)(v7 + 168) = xmmword_100EAFF50;
  *(_OWORD *)(v7 + 184) = xmmword_100EAFF60;
  *(_OWORD *)(v7 + 200) = xmmword_100EAFF70;
  *(_OWORD *)(v7 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v7 + 232) = 256;
  *(_QWORD *)(v7 + 240) = 0xD000000000000027;
  *(_QWORD *)(v7 + 248) = 0x8000000100E31DB0;
  *(_OWORD *)(v7 + 256) = xmmword_100EAFF90;
  *(_OWORD *)(v7 + 272) = xmmword_100EAFF50;
  *(_OWORD *)(v7 + 288) = xmmword_100EAFF60;
  *(_OWORD *)(v7 + 304) = xmmword_100EAFF70;
  *(_OWORD *)(v7 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v7 + 336) = 256;
  *(_QWORD *)(v7 + 344) = 0xD000000000000027;
  *(_QWORD *)(v7 + 352) = 0x8000000100E31DE0;
  *(_QWORD *)(v7 + 360) = 0x4077700000000000;
  *(_OWORD *)(v7 + 368) = xmmword_100EAFFA0;
  *(_OWORD *)(v7 + 384) = xmmword_100EAFFB0;
  *(_OWORD *)(v7 + 400) = xmmword_100EAFFC0;
  *(_QWORD *)(v7 + 416) = 0x4032000000000000;
  *(_QWORD *)(v7 + 424) = 1;
  *(_QWORD *)(v7 + 432) = 1;
  *(_WORD *)(v7 + 440) = 256;
  *(_QWORD *)(v7 + 448) = 0xD00000000000001BLL;
  *(_QWORD *)(v7 + 456) = 0x8000000100E31E10;
  *(_OWORD *)(v7 + 464) = xmmword_100EAFFD0;
  *(_OWORD *)(v7 + 480) = xmmword_100EAFF50;
  *(_OWORD *)(v7 + 496) = xmmword_100EAFF60;
  *(_OWORD *)(v7 + 512) = xmmword_100EAFF70;
  *(_OWORD *)(v7 + 528) = xmmword_100EA7AA0;
  *(_WORD *)(v7 + 544) = 256;
  *(_QWORD *)(v7 + 552) = 0xD000000000000026;
  *(_QWORD *)(v7 + 560) = 0x8000000100E31E30;
  *(_QWORD *)(v7 + 568) = 0x4083F80000000000;
  *(_OWORD *)(v7 + 576) = xmmword_100EAFFE0;
  *(_OWORD *)(v7 + 592) = xmmword_100EAFFB0;
  *(_OWORD *)(v7 + 608) = xmmword_100EAFFC0;
  *(_QWORD *)(v7 + 624) = 0x4032000000000000;
  *(_QWORD *)(v7 + 632) = 1;
  *(_QWORD *)(v7 + 640) = 1;
  *(_WORD *)(v7 + 648) = 256;
  *(_QWORD *)(v7 + 656) = 0xD000000000000026;
  *(_QWORD *)(v7 + 664) = 0x8000000100E31E60;
  *(_OWORD *)(v7 + 672) = xmmword_100EAFFF0;
  *(_OWORD *)(v7 + 688) = xmmword_100EAFF50;
  *(_OWORD *)(v7 + 704) = xmmword_100EAFF60;
  *(_OWORD *)(v7 + 720) = xmmword_100EAFF70;
  v28 = vdupq_n_s64(1uLL);
  *(int64x2_t *)(v7 + 736) = v28;
  *(_WORD *)(v7 + 752) = 256;
  *(_QWORD *)(v4 + 72) = v7;
  *(_QWORD *)(v4 + 80) = 0xD000000000000021;
  *(_QWORD *)(v4 + 88) = 0x8000000100E2AE10;
  v8 = swift_allocObject(v5, 760, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v8 + 32) = 0xD00000000000002BLL;
  *(_QWORD *)(v8 + 40) = 0x8000000100E31E90;
  *(_OWORD *)(v8 + 48) = xmmword_100EAFF40;
  *(_OWORD *)(v8 + 64) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 80) = 0u;
  *(_OWORD *)(v8 + 96) = 0u;
  *(_OWORD *)(v8 + 112) = xmmword_100EA7AA0;
  *(_WORD *)(v8 + 128) = 256;
  *(_QWORD *)(v8 + 136) = 0xD000000000000036;
  *(_QWORD *)(v8 + 144) = 0x8000000100E31EC0;
  *(_OWORD *)(v8 + 152) = xmmword_100EAFF80;
  *(_OWORD *)(v8 + 168) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 184) = 0u;
  *(_OWORD *)(v8 + 200) = 0u;
  *(_OWORD *)(v8 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v8 + 232) = 256;
  *(_QWORD *)(v8 + 240) = 0xD000000000000036;
  *(_QWORD *)(v8 + 248) = 0x8000000100E31F00;
  *(_OWORD *)(v8 + 256) = xmmword_100EAFF90;
  *(_OWORD *)(v8 + 272) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 288) = 0u;
  *(_OWORD *)(v8 + 304) = 0u;
  *(_OWORD *)(v8 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v8 + 336) = 256;
  *(_QWORD *)(v8 + 344) = 0xD000000000000036;
  *(_QWORD *)(v8 + 352) = 0x8000000100E31F40;
  *(_QWORD *)(v8 + 360) = 0x4077700000000000;
  *(_OWORD *)(v8 + 368) = xmmword_100EAFFA0;
  *(_QWORD *)(v8 + 384) = 0x4034000000000000;
  *(_OWORD *)(v8 + 392) = 0u;
  *(_OWORD *)(v8 + 408) = 0u;
  *(_QWORD *)(v8 + 424) = 1;
  *(_QWORD *)(v8 + 432) = 1;
  *(_WORD *)(v8 + 440) = 256;
  *(_QWORD *)(v8 + 448) = 0xD00000000000002ALL;
  *(_QWORD *)(v8 + 456) = 0x8000000100E31F80;
  *(_OWORD *)(v8 + 464) = xmmword_100EAFFD0;
  *(_OWORD *)(v8 + 480) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 496) = 0u;
  *(_OWORD *)(v8 + 512) = 0u;
  *(_OWORD *)(v8 + 528) = xmmword_100EA7AA0;
  *(_WORD *)(v8 + 544) = 256;
  *(_QWORD *)(v8 + 552) = 0xD000000000000035;
  *(_QWORD *)(v8 + 560) = 0x8000000100E31FB0;
  *(_QWORD *)(v8 + 568) = 0x4083F80000000000;
  *(_OWORD *)(v8 + 576) = xmmword_100EAFFE0;
  *(_QWORD *)(v8 + 592) = 0x4034000000000000;
  *(_OWORD *)(v8 + 600) = 0u;
  *(_OWORD *)(v8 + 616) = 0u;
  *(_QWORD *)(v8 + 632) = 1;
  *(_QWORD *)(v8 + 640) = 1;
  *(_WORD *)(v8 + 648) = 256;
  *(_QWORD *)(v8 + 656) = 0xD000000000000035;
  *(_QWORD *)(v8 + 664) = 0x8000000100E31FF0;
  *(_OWORD *)(v8 + 672) = xmmword_100EAFFF0;
  *(_OWORD *)(v8 + 688) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 704) = 0u;
  *(_OWORD *)(v8 + 720) = 0u;
  *(int64x2_t *)(v8 + 736) = v28;
  *(_WORD *)(v8 + 752) = 256;
  *(_QWORD *)(v4 + 96) = v8;
  *(_QWORD *)(v4 + 104) = 0xD000000000000012;
  *(_QWORD *)(v4 + 112) = 0x8000000100E2ADD0;
  v9 = swift_allocObject(v5, 760, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v9 + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(v9 + 40) = 0x8000000100E32030;
  *(_OWORD *)(v9 + 48) = xmmword_100EB0010;
  *(_OWORD *)(v9 + 64) = xmmword_100EB0000;
  *(_OWORD *)(v9 + 80) = 0u;
  *(_OWORD *)(v9 + 96) = 0u;
  *(_OWORD *)(v9 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v9 + 128) = 0;
  *(_BYTE *)(v9 + 129) = 1;
  *(_QWORD *)(v9 + 136) = 0xD000000000000027;
  *(_QWORD *)(v9 + 144) = 0x8000000100E32050;
  *(_OWORD *)(v9 + 152) = xmmword_100EB0020;
  *(_OWORD *)(v9 + 168) = xmmword_100EB0000;
  *(_OWORD *)(v9 + 184) = 0u;
  *(_OWORD *)(v9 + 200) = 0u;
  *(_OWORD *)(v9 + 216) = xmmword_100EA7AA0;
  *(_BYTE *)(v9 + 232) = 0;
  *(_BYTE *)(v9 + 233) = 1;
  *(_QWORD *)(v9 + 240) = 0xD000000000000027;
  *(_QWORD *)(v9 + 248) = 0x8000000100E32080;
  *(_OWORD *)(v9 + 256) = xmmword_100EB0030;
  *(_OWORD *)(v9 + 272) = xmmword_100EB0000;
  *(_OWORD *)(v9 + 288) = 0u;
  *(_OWORD *)(v9 + 304) = 0u;
  *(_OWORD *)(v9 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v9 + 336) = 256;
  *(_QWORD *)(v9 + 344) = 0xD000000000000027;
  *(_QWORD *)(v9 + 352) = 0x8000000100E320B0;
  *(_QWORD *)(v9 + 360) = 0x4074000000000000;
  *(_OWORD *)(v9 + 368) = xmmword_100EB0040;
  *(_QWORD *)(v9 + 384) = 0x4034000000000000;
  *(_OWORD *)(v9 + 392) = 0u;
  *(_OWORD *)(v9 + 408) = 0u;
  *(_QWORD *)(v9 + 424) = 1;
  *(_QWORD *)(v9 + 432) = 1;
  *(_WORD *)(v9 + 440) = 256;
  *(_QWORD *)(v9 + 448) = 0xD00000000000001BLL;
  *(_QWORD *)(v9 + 456) = 0x8000000100E320E0;
  *(_OWORD *)(v9 + 464) = xmmword_100EB0050;
  *(_OWORD *)(v9 + 480) = xmmword_100EB0000;
  *(_OWORD *)(v9 + 496) = 0u;
  *(_OWORD *)(v9 + 512) = 0u;
  *(_OWORD *)(v9 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v9 + 544) = 0;
  *(_BYTE *)(v9 + 545) = 1;
  *(_QWORD *)(v9 + 552) = 0xD000000000000026;
  *(_QWORD *)(v9 + 560) = 0x8000000100E32100;
  *(_QWORD *)(v9 + 568) = 0x407F800000000000;
  *(_OWORD *)(v9 + 576) = xmmword_100EB0060;
  *(_QWORD *)(v9 + 592) = 0x4034000000000000;
  *(_OWORD *)(v9 + 600) = 0u;
  *(_OWORD *)(v9 + 616) = 0u;
  *(_QWORD *)(v9 + 632) = 1;
  *(_QWORD *)(v9 + 640) = 1;
  *(_BYTE *)(v9 + 648) = 0;
  *(_BYTE *)(v9 + 649) = 1;
  *(_QWORD *)(v9 + 656) = 0xD000000000000026;
  *(_QWORD *)(v9 + 664) = 0x8000000100E32130;
  *(_OWORD *)(v9 + 672) = xmmword_100EB0070;
  *(_OWORD *)(v9 + 688) = xmmword_100EB0000;
  *(_OWORD *)(v9 + 704) = 0u;
  *(_OWORD *)(v9 + 720) = 0u;
  *(int64x2_t *)(v9 + 736) = v28;
  *(_BYTE *)(v9 + 752) = 0;
  *(_BYTE *)(v9 + 753) = 1;
  *(_QWORD *)(v4 + 120) = v9;
  strcpy((char *)(v4 + 128), "10.2-inch iPad");
  *(_BYTE *)(v4 + 143) = -18;
  v10 = swift_allocObject(v5, 760, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v10 + 32) = 0xD000000000000018;
  *(_QWORD *)(v10 + 40) = 0x8000000100E32160;
  *(_OWORD *)(v10 + 48) = xmmword_100EB0080;
  *(_OWORD *)(v10 + 64) = xmmword_100EB0000;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_OWORD *)(v10 + 96) = 0u;
  *(_OWORD *)(v10 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v10 + 128) = 0;
  *(_BYTE *)(v10 + 129) = 1;
  *(_QWORD *)(v10 + 136) = 0xD000000000000023;
  *(_QWORD *)(v10 + 144) = 0x8000000100E32180;
  *(_OWORD *)(v10 + 152) = xmmword_100EB0090;
  *(_OWORD *)(v10 + 168) = xmmword_100EB0000;
  *(_OWORD *)(v10 + 184) = 0u;
  *(_OWORD *)(v10 + 200) = 0u;
  *(_OWORD *)(v10 + 216) = xmmword_100EA7AA0;
  *(_BYTE *)(v10 + 232) = 0;
  *(_BYTE *)(v10 + 233) = 1;
  *(_QWORD *)(v10 + 240) = 0xD000000000000023;
  *(_QWORD *)(v10 + 248) = 0x8000000100E321B0;
  *(_OWORD *)(v10 + 256) = xmmword_100EB00A0;
  *(_OWORD *)(v10 + 272) = xmmword_100EB0000;
  *(_OWORD *)(v10 + 288) = 0u;
  *(_OWORD *)(v10 + 304) = 0u;
  *(_OWORD *)(v10 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v10 + 336) = 256;
  *(_QWORD *)(v10 + 344) = 0xD000000000000023;
  *(_QWORD *)(v10 + 352) = 0x8000000100E321E0;
  *(_QWORD *)(v10 + 360) = 0x4074000000000000;
  *(_OWORD *)(v10 + 368) = xmmword_100EB0040;
  *(_QWORD *)(v10 + 384) = 0x4034000000000000;
  *(_OWORD *)(v10 + 392) = 0u;
  *(_OWORD *)(v10 + 408) = 0u;
  *(_QWORD *)(v10 + 424) = 1;
  *(_QWORD *)(v10 + 432) = 1;
  *(_WORD *)(v10 + 440) = 256;
  *(_QWORD *)(v10 + 448) = 0xD000000000000017;
  *(_QWORD *)(v10 + 456) = 0x8000000100E32210;
  *(_OWORD *)(v10 + 464) = xmmword_100EB00B0;
  *(_OWORD *)(v10 + 480) = xmmword_100EB0000;
  *(_OWORD *)(v10 + 496) = 0u;
  *(_OWORD *)(v10 + 512) = 0u;
  *(_OWORD *)(v10 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v10 + 544) = 0;
  *(_BYTE *)(v10 + 545) = 1;
  *(_QWORD *)(v10 + 552) = 0xD000000000000022;
  *(_QWORD *)(v10 + 560) = 0x8000000100E32230;
  *(_QWORD *)(v10 + 568) = 0x407E000000000000;
  *(_OWORD *)(v10 + 576) = xmmword_100EB00C0;
  *(_QWORD *)(v10 + 592) = 0x4034000000000000;
  *(_OWORD *)(v10 + 600) = 0u;
  *(_OWORD *)(v10 + 616) = 0u;
  *(_QWORD *)(v10 + 632) = 1;
  *(_QWORD *)(v10 + 640) = 1;
  *(_BYTE *)(v10 + 648) = 0;
  *(_BYTE *)(v10 + 649) = 1;
  *(_QWORD *)(v10 + 656) = 0xD000000000000022;
  *(_QWORD *)(v10 + 664) = 0x8000000100E32260;
  *(_OWORD *)(v10 + 672) = xmmword_100EB00D0;
  *(_OWORD *)(v10 + 688) = xmmword_100EB0000;
  *(_OWORD *)(v10 + 704) = 0u;
  *(_OWORD *)(v10 + 720) = 0u;
  *(int64x2_t *)(v10 + 736) = v28;
  *(_BYTE *)(v10 + 752) = 0;
  *(_BYTE *)(v10 + 753) = 1;
  *(_QWORD *)(v4 + 144) = v10;
  *(_QWORD *)(v4 + 152) = 0xD000000000000010;
  *(_QWORD *)(v4 + 160) = 0x8000000100E2ADF0;
  v11 = swift_allocObject(v5, 760, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v11 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v11 + 40) = 0x8000000100E32290;
  *(_OWORD *)(v11 + 48) = xmmword_100EB00E0;
  *(_OWORD *)(v11 + 64) = xmmword_100EAFF50;
  *(_OWORD *)(v11 + 80) = xmmword_100EAFF60;
  *(_OWORD *)(v11 + 96) = xmmword_100EAFF70;
  *(_OWORD *)(v11 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v11 + 128) = 0;
  *(_BYTE *)(v11 + 129) = 1;
  *(_QWORD *)(v11 + 136) = 0xD000000000000025;
  *(_QWORD *)(v11 + 144) = 0x8000000100E322B0;
  *(_OWORD *)(v11 + 152) = xmmword_100EB00F0;
  *(_OWORD *)(v11 + 168) = xmmword_100EAFF50;
  *(_OWORD *)(v11 + 184) = xmmword_100EAFF60;
  *(_OWORD *)(v11 + 200) = xmmword_100EAFF70;
  *(_OWORD *)(v11 + 216) = xmmword_100EA7AA0;
  *(_BYTE *)(v11 + 232) = 0;
  *(_BYTE *)(v11 + 233) = 1;
  *(_QWORD *)(v11 + 240) = 0xD000000000000025;
  *(_QWORD *)(v11 + 248) = 0x8000000100E322E0;
  *(_OWORD *)(v11 + 256) = xmmword_100EB0100;
  *(_OWORD *)(v11 + 272) = xmmword_100EAFF50;
  *(_OWORD *)(v11 + 288) = xmmword_100EAFF60;
  *(_OWORD *)(v11 + 304) = xmmword_100EAFF70;
  *(int64x2_t *)(v11 + 320) = v28;
  *(_BYTE *)(v11 + 336) = 0;
  *(_BYTE *)(v11 + 337) = 1;
  *(_QWORD *)(v11 + 344) = 0xD000000000000025;
  *(_QWORD *)(v11 + 352) = 0x8000000100E32310;
  *(_QWORD *)(v11 + 360) = 0x4077700000000000;
  *(_OWORD *)(v11 + 368) = xmmword_100EB0040;
  *(_OWORD *)(v11 + 384) = xmmword_100EAFFB0;
  *(_OWORD *)(v11 + 400) = xmmword_100EAFFC0;
  *(_QWORD *)(v11 + 416) = 0x4032000000000000;
  *(_QWORD *)(v11 + 424) = 1;
  *(_QWORD *)(v11 + 432) = 1;
  *(_BYTE *)(v11 + 440) = 0;
  *(_BYTE *)(v11 + 441) = 1;
  *(_QWORD *)(v11 + 448) = 0xD000000000000019;
  *(_QWORD *)(v11 + 456) = 0x8000000100E32340;
  *(_OWORD *)(v11 + 464) = xmmword_100EB0110;
  *(_OWORD *)(v11 + 480) = xmmword_100EAFF50;
  *(_OWORD *)(v11 + 496) = xmmword_100EAFF60;
  *(_OWORD *)(v11 + 512) = xmmword_100EAFF70;
  *(_OWORD *)(v11 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v11 + 544) = 0;
  *(_BYTE *)(v11 + 545) = 1;
  *(_QWORD *)(v11 + 552) = 0xD000000000000024;
  *(_QWORD *)(v11 + 560) = 0x8000000100E32360;
  *(_QWORD *)(v11 + 568) = 0x407F800000000000;
  *(_OWORD *)(v11 + 576) = xmmword_100EB0120;
  *(_OWORD *)(v11 + 592) = xmmword_100EAFFB0;
  *(_OWORD *)(v11 + 608) = xmmword_100EAFFC0;
  *(_QWORD *)(v11 + 624) = 0x4032000000000000;
  *(_QWORD *)(v11 + 632) = 1;
  *(_QWORD *)(v11 + 640) = 1;
  *(_BYTE *)(v11 + 648) = 0;
  *(_BYTE *)(v11 + 649) = 1;
  *(_QWORD *)(v11 + 656) = 0xD000000000000024;
  *(_QWORD *)(v11 + 664) = 0x8000000100E32390;
  *(_OWORD *)(v11 + 672) = xmmword_100EB0130;
  *(_OWORD *)(v11 + 688) = xmmword_100EAFF50;
  *(_OWORD *)(v11 + 704) = xmmword_100EAFF60;
  *(_OWORD *)(v11 + 720) = xmmword_100EAFF70;
  *(int64x2_t *)(v11 + 736) = v28;
  *(_BYTE *)(v11 + 752) = 0;
  *(_BYTE *)(v11 + 753) = 1;
  *(_QWORD *)(v4 + 168) = v11;
  *(_QWORD *)(v4 + 176) = 0xD000000000000011;
  *(_QWORD *)(v4 + 184) = 0x8000000100E2ADB0;
  v12 = swift_allocObject(v5, 760, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v12 + 32) = 0xD000000000000020;
  *(_QWORD *)(v12 + 40) = 0x8000000100E323C0;
  *(_OWORD *)(v12 + 48) = xmmword_100EB0140;
  *(_OWORD *)(v12 + 64) = xmmword_100EAFF50;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(_OWORD *)(v12 + 112) = xmmword_100EA7AA0;
  *(_WORD *)(v12 + 128) = 0;
  *(_QWORD *)(v12 + 136) = 0xD000000000000026;
  *(_QWORD *)(v12 + 144) = 0x8000000100E323F0;
  *(_OWORD *)(v12 + 152) = xmmword_100EB0150;
  *(_OWORD *)(v12 + 168) = xmmword_100EAFF50;
  *(_OWORD *)(v12 + 184) = 0u;
  *(_OWORD *)(v12 + 200) = 0u;
  *(_OWORD *)(v12 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v12 + 232) = 0;
  *(_QWORD *)(v12 + 240) = 0xD000000000000026;
  *(_QWORD *)(v12 + 248) = 0x8000000100E32420;
  *(_OWORD *)(v12 + 256) = xmmword_100EB0160;
  *(_OWORD *)(v12 + 272) = xmmword_100EAFF50;
  *(_OWORD *)(v12 + 288) = 0u;
  *(_OWORD *)(v12 + 304) = 0u;
  *(int64x2_t *)(v12 + 320) = v28;
  *(_WORD *)(v12 + 336) = 0;
  *(_QWORD *)(v12 + 344) = 0xD000000000000026;
  *(_QWORD *)(v12 + 352) = 0x8000000100E32450;
  *(_QWORD *)(v12 + 360) = 0x4074000000000000;
  *(_OWORD *)(v12 + 368) = xmmword_100EB0170;
  *(_QWORD *)(v12 + 384) = 0x4038000000000000;
  *(_OWORD *)(v12 + 392) = 0u;
  *(_OWORD *)(v12 + 408) = 0u;
  *(_QWORD *)(v12 + 424) = 1;
  *(_QWORD *)(v12 + 432) = 1;
  *(_WORD *)(v12 + 440) = 0;
  *(_QWORD *)(v12 + 448) = 0xD00000000000001ALL;
  *(_QWORD *)(v12 + 456) = 0x8000000100E32480;
  *(_OWORD *)(v12 + 464) = xmmword_100EB0180;
  *(_OWORD *)(v12 + 480) = xmmword_100EAFF50;
  *(_OWORD *)(v12 + 496) = 0u;
  *(_OWORD *)(v12 + 512) = 0u;
  *(_OWORD *)(v12 + 528) = xmmword_100EA7AA0;
  *(_WORD *)(v12 + 544) = 0;
  *(_QWORD *)(v12 + 552) = 0xD000000000000025;
  *(_QWORD *)(v12 + 560) = 0x8000000100E324A0;
  *(_QWORD *)(v12 + 568) = 0x407B600000000000;
  *(_OWORD *)(v12 + 576) = xmmword_100EAFFA0;
  *(_QWORD *)(v12 + 592) = 0x4038000000000000;
  *(_OWORD *)(v12 + 600) = 0u;
  *(_OWORD *)(v12 + 616) = 0u;
  *(_QWORD *)(v12 + 632) = 1;
  *(_QWORD *)(v12 + 640) = 1;
  *(_WORD *)(v12 + 648) = 0;
  *(_QWORD *)(v12 + 656) = 0xD000000000000025;
  *(_QWORD *)(v12 + 664) = 0x8000000100E324D0;
  *(_OWORD *)(v12 + 672) = xmmword_100EB0190;
  *(_OWORD *)(v12 + 688) = xmmword_100EAFF50;
  *(_OWORD *)(v12 + 704) = 0u;
  *(_OWORD *)(v12 + 720) = 0u;
  *(int64x2_t *)(v12 + 736) = v28;
  *(_WORD *)(v12 + 752) = 0;
  *(_QWORD *)(v4 + 192) = v12;
  strcpy((char *)(v4 + 200), "8.3-inch iPad");
  *(_WORD *)(v4 + 214) = -4864;
  v13 = swift_allocObject(v5, 760, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v13 + 32) = 0xD000000000000017;
  *(_QWORD *)(v13 + 40) = 0x8000000100E32500;
  *(_OWORD *)(v13 + 48) = xmmword_100EB01A0;
  *(_OWORD *)(v13 + 64) = xmmword_100EB01B0;
  *(_QWORD *)(v13 + 80) = 0;
  *(_QWORD *)(v13 + 88) = 0;
  *(_QWORD *)(v13 + 96) = 0;
  *(_QWORD *)(v13 + 104) = 0x4032000000000000;
  *(_OWORD *)(v13 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v13 + 128) = 0;
  *(_BYTE *)(v13 + 129) = 1;
  *(_QWORD *)(v13 + 136) = 0xD000000000000022;
  *(_QWORD *)(v13 + 144) = 0x8000000100E32520;
  *(_OWORD *)(v13 + 152) = xmmword_100EB01C0;
  *(_OWORD *)(v13 + 168) = xmmword_100EB01B0;
  *(_QWORD *)(v13 + 184) = 0;
  *(_QWORD *)(v13 + 192) = 0;
  *(_QWORD *)(v13 + 200) = 0;
  *(_QWORD *)(v13 + 208) = 0x4032000000000000;
  *(_OWORD *)(v13 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v13 + 232) = 256;
  *(_QWORD *)(v13 + 240) = 0xD000000000000022;
  *(_QWORD *)(v13 + 248) = 0x8000000100E32550;
  *(_OWORD *)(v13 + 256) = xmmword_100EB01D0;
  *(_OWORD *)(v13 + 272) = xmmword_100EB01B0;
  *(_QWORD *)(v13 + 288) = 0;
  *(_QWORD *)(v13 + 296) = 0;
  *(_QWORD *)(v13 + 304) = 0;
  *(_QWORD *)(v13 + 312) = 0x4032000000000000;
  *(int64x2_t *)(v13 + 320) = v28;
  *(_WORD *)(v13 + 336) = 256;
  *(_QWORD *)(v13 + 344) = 0xD000000000000022;
  *(_QWORD *)(v13 + 352) = 0x8000000100E32580;
  *(_QWORD *)(v13 + 360) = 0x4077700000000000;
  *(_OWORD *)(v13 + 368) = xmmword_100EB01E0;
  *(_QWORD *)(v13 + 400) = 0;
  *(_QWORD *)(v13 + 408) = 0;
  *(_QWORD *)(v13 + 384) = 0x4038000000000000;
  *(_QWORD *)(v13 + 392) = 0;
  *(_QWORD *)(v13 + 416) = 0x4032000000000000;
  *(_QWORD *)(v13 + 424) = 1;
  *(_QWORD *)(v13 + 432) = 1;
  *(_BYTE *)(v13 + 440) = 0;
  *(_BYTE *)(v13 + 441) = 1;
  *(_QWORD *)(v13 + 448) = 0xD000000000000016;
  *(_QWORD *)(v13 + 456) = 0x8000000100E325B0;
  *(_OWORD *)(v13 + 464) = xmmword_100EB01F0;
  *(_OWORD *)(v13 + 480) = xmmword_100EB01B0;
  *(_QWORD *)(v13 + 496) = 0;
  *(_QWORD *)(v13 + 504) = 0;
  *(_QWORD *)(v13 + 512) = 0;
  *(_QWORD *)(v13 + 520) = 0x4032000000000000;
  *(_OWORD *)(v13 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v13 + 544) = 0;
  *(_BYTE *)(v13 + 545) = 1;
  *(_QWORD *)(v13 + 552) = 0xD00000000000001ALL;
  *(_QWORD *)(v13 + 560) = 0x8000000100E325D0;
  *(_QWORD *)(v13 + 568) = 0x4079E00000000000;
  *(_OWORD *)(v13 + 576) = xmmword_100EB0200;
  *(_QWORD *)(v13 + 592) = 0x4038000000000000;
  *(_QWORD *)(v13 + 616) = 0;
  *(_QWORD *)(v13 + 608) = 0;
  *(_QWORD *)(v13 + 600) = 0;
  *(_QWORD *)(v13 + 624) = 0x4032000000000000;
  *(_QWORD *)(v13 + 632) = 1;
  *(_QWORD *)(v13 + 640) = 1;
  *(_BYTE *)(v13 + 648) = 0;
  *(_BYTE *)(v13 + 649) = 1;
  *(_QWORD *)(v13 + 656) = 0xD00000000000001ALL;
  *(_QWORD *)(v13 + 664) = 0x8000000100E325F0;
  *(_OWORD *)(v13 + 672) = xmmword_100EB0210;
  *(_OWORD *)(v13 + 688) = xmmword_100EB01B0;
  *(_QWORD *)(v13 + 704) = 0;
  *(_QWORD *)(v13 + 712) = 0;
  *(_QWORD *)(v13 + 720) = 0;
  *(_QWORD *)(v13 + 728) = 0x4032000000000000;
  *(int64x2_t *)(v13 + 736) = v28;
  *(_BYTE *)(v13 + 752) = 0;
  *(_BYTE *)(v13 + 753) = 1;
  *(_QWORD *)(v4 + 216) = v13;
  v14 = v24;
  *(_QWORD *)&v24[v25] = sub_100042A98(v4);
  v15 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_scrollView;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v17 = UIView.forAutolayout.getter();

  *(_QWORD *)&v14[v15] = v17;
  v18 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView;
  v19 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v20 = UIView.forAutolayout.getter();

  *(_QWORD *)&v14[v18] = v20;
  if (a2)
  {
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v21 = 0;
  }
  v29.receiver = v14;
  v29.super_class = (Class)type metadata accessor for MultiDeviceTesterViewController();
  v22 = objc_msgSendSuper2(&v29, "initWithNibName:bundle:", v21, a3);

  return v22;
}

id sub_1002273DC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  char *v21;
  uint64_t v22;
  int64x2_t v24;
  objc_super v25;

  v22 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_devices;
  v1 = sub_100007E8C(&qword_1011A7838);
  v2 = swift_allocObject(v1, 224, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EAFD20;
  *(_QWORD *)(v2 + 32) = 0x656E6F685069;
  *(_QWORD *)(v2 + 40) = 0xE600000000000000;
  v3 = sub_100007E8C(&qword_1011A7840);
  v4 = swift_allocObject(v3, 1696, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EAFD30;
  *(_QWORD *)(v4 + 32) = 0x5320656E6F685069;
  *(_QWORD *)(v4 + 40) = 0xE900000000000045;
  *(_OWORD *)(v4 + 48) = xmmword_100EAFD40;
  *(_OWORD *)(v4 + 64) = xmmword_100EAFD50;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_QWORD *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 120) = 1;
  *(_WORD *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 136) = 0xD00000000000001BLL;
  *(_QWORD *)(v4 + 144) = 0x8000000100E31BD0;
  *(_OWORD *)(v4 + 152) = xmmword_100EAFD60;
  *(_OWORD *)(v4 + 168) = xmmword_100EAFD50;
  *(_OWORD *)(v4 + 184) = 0u;
  *(_OWORD *)(v4 + 200) = 0u;
  *(_QWORD *)(v4 + 216) = 0;
  *(_QWORD *)(v4 + 224) = 1;
  *(_WORD *)(v4 + 232) = 0;
  *(_QWORD *)(v4 + 240) = 0xD000000000000019;
  *(_QWORD *)(v4 + 248) = 0x8000000100E31BF0;
  *(_OWORD *)(v4 + 256) = xmmword_100EAFD70;
  *(_OWORD *)(v4 + 272) = xmmword_100EAFD80;
  *(_OWORD *)(v4 + 288) = 0u;
  *(_OWORD *)(v4 + 304) = 0u;
  *(_QWORD *)(v4 + 320) = 0;
  *(_QWORD *)(v4 + 328) = 1;
  *(_WORD *)(v4 + 336) = 0;
  *(_QWORD *)(v4 + 344) = 0xD000000000000016;
  *(_QWORD *)(v4 + 352) = 0x8000000100E31C10;
  *(_QWORD *)(v4 + 360) = 0x4077700000000000;
  *(_OWORD *)(v4 + 368) = xmmword_100EAFD90;
  *(_OWORD *)(v4 + 384) = xmmword_100EAFDA0;
  *(_OWORD *)(v4 + 400) = xmmword_100EAFDB0;
  *(_QWORD *)(v4 + 416) = 0x4043800000000000;
  *(_QWORD *)(v4 + 424) = 0;
  *(_QWORD *)(v4 + 432) = 1;
  *(_WORD *)(v4 + 440) = 257;
  *(_QWORD *)(v4 + 448) = 0xD000000000000022;
  *(_QWORD *)(v4 + 456) = 0x8000000100E31C30;
  *(_OWORD *)(v4 + 464) = xmmword_100EAFDC0;
  *(_OWORD *)(v4 + 480) = xmmword_100EAFDD0;
  *(_OWORD *)(v4 + 496) = xmmword_100EAFDE0;
  *(_OWORD *)(v4 + 512) = xmmword_100EAFDF0;
  *(_OWORD *)(v4 + 528) = xmmword_100EA85A0;
  *(_WORD *)(v4 + 544) = 257;
  strcpy((char *)(v4 + 552), "iPhone Xr / 11");
  *(_BYTE *)(v4 + 567) = -18;
  *(_QWORD *)(v4 + 568) = 0x4079E00000000000;
  *(_OWORD *)(v4 + 576) = xmmword_100EAFE00;
  *(_OWORD *)(v4 + 592) = xmmword_100EAFDA0;
  *(_OWORD *)(v4 + 608) = xmmword_100EAFDB0;
  *(_QWORD *)(v4 + 624) = 0x4043800000000000;
  *(_QWORD *)(v4 + 632) = 0;
  *(_QWORD *)(v4 + 640) = 1;
  *(_WORD *)(v4 + 648) = 257;
  *(_QWORD *)(v4 + 656) = 0xD00000000000001ALL;
  *(_QWORD *)(v4 + 664) = 0x8000000100E31C60;
  *(_OWORD *)(v4 + 672) = xmmword_100EAFE10;
  *(_OWORD *)(v4 + 688) = xmmword_100EAFE20;
  *(_OWORD *)(v4 + 704) = xmmword_100EAFDE0;
  *(_OWORD *)(v4 + 720) = xmmword_100EAFDF0;
  *(_OWORD *)(v4 + 736) = xmmword_100EA85A0;
  *(_WORD *)(v4 + 752) = 257;
  strcpy((char *)(v4 + 760), "iPhone 12 / 13");
  *(_BYTE *)(v4 + 775) = -18;
  *(_QWORD *)(v4 + 776) = 0x4078600000000000;
  *(_OWORD *)(v4 + 784) = xmmword_100EAFE30;
  *(_OWORD *)(v4 + 800) = xmmword_100EAFDA0;
  *(_OWORD *)(v4 + 816) = xmmword_100EAFDB0;
  *(_QWORD *)(v4 + 832) = 0x4047AA3D70A3D70ALL;
  *(_QWORD *)(v4 + 840) = 0;
  *(_QWORD *)(v4 + 848) = 1;
  *(_WORD *)(v4 + 856) = 257;
  *(_QWORD *)(v4 + 864) = 0xD00000000000001ALL;
  *(_QWORD *)(v4 + 872) = 0x8000000100E31C80;
  *(_OWORD *)(v4 + 880) = xmmword_100EAFDC0;
  *(_OWORD *)(v4 + 896) = xmmword_100EAFE40;
  *(_OWORD *)(v4 + 912) = xmmword_100EAFDE0;
  *(_OWORD *)(v4 + 928) = xmmword_100EAFE50;
  *(_OWORD *)(v4 + 944) = xmmword_100EA85A0;
  *(_WORD *)(v4 + 960) = 257;
  *(_QWORD *)(v4 + 968) = 0xD000000000000013;
  *(_QWORD *)(v4 + 976) = 0x8000000100E31CA0;
  *(_QWORD *)(v4 + 984) = 0x4077700000000000;
  *(_OWORD *)(v4 + 992) = xmmword_100EAFE60;
  *(_OWORD *)(v4 + 1008) = xmmword_100EAFDA0;
  *(_OWORD *)(v4 + 1024) = xmmword_100EAFDB0;
  *(_QWORD *)(v4 + 1040) = 0x4046000000000000;
  *(_QWORD *)(v4 + 1048) = 0;
  *(_QWORD *)(v4 + 1056) = 1;
  *(_WORD *)(v4 + 1064) = 257;
  *(_QWORD *)(v4 + 1072) = 0xD00000000000001FLL;
  *(_QWORD *)(v4 + 1080) = 0x8000000100E31CC0;
  *(_OWORD *)(v4 + 1088) = xmmword_100EAFDC0;
  *(_OWORD *)(v4 + 1104) = xmmword_100EAFE70;
  *(_OWORD *)(v4 + 1120) = xmmword_100EAFDE0;
  *(_OWORD *)(v4 + 1136) = xmmword_100EAFE80;
  *(_OWORD *)(v4 + 1152) = xmmword_100EA85A0;
  *(_WORD *)(v4 + 1168) = 257;
  *(_QWORD *)(v4 + 1176) = 0xD000000000000016;
  *(_QWORD *)(v4 + 1184) = 0x8000000100E31CE0;
  *(_QWORD *)(v4 + 1192) = 0x407AC00000000000;
  *(_OWORD *)(v4 + 1200) = xmmword_100EAFE90;
  *(_OWORD *)(v4 + 1216) = xmmword_100EAFDA0;
  *(_OWORD *)(v4 + 1232) = xmmword_100EAFDB0;
  *(_QWORD *)(v4 + 1248) = 0x404AAA3D70A3D70ALL;
  *(_QWORD *)(v4 + 1256) = 0;
  *(_QWORD *)(v4 + 1264) = 1;
  *(_WORD *)(v4 + 1272) = 257;
  strcpy((char *)(v4 + 1280), "iPhone 14 Pro");
  *(_WORD *)(v4 + 1294) = -4864;
  *(_OWORD *)(v4 + 1296) = xmmword_100EAFEA0;
  *(_OWORD *)(v4 + 1312) = xmmword_100EAFEB0;
  *(_OWORD *)(v4 + 1328) = xmmword_100EAFDE0;
  *(_OWORD *)(v4 + 1344) = xmmword_100EAFEC0;
  *(_OWORD *)(v4 + 1360) = xmmword_100EA85A0;
  *(_WORD *)(v4 + 1376) = 257;
  *(_QWORD *)(v4 + 1384) = 0xD000000000000019;
  *(_QWORD *)(v4 + 1392) = 0x8000000100E31D00;
  *(_QWORD *)(v4 + 1400) = 0x4074000000000000;
  *(_OWORD *)(v4 + 1408) = xmmword_100EAFED0;
  *(_OWORD *)(v4 + 1424) = xmmword_100EAFEE0;
  *(_OWORD *)(v4 + 1440) = xmmword_100EAFEF0;
  *(_QWORD *)(v4 + 1456) = 0x404655C28F5C28F6;
  *(_QWORD *)(v4 + 1464) = 0;
  *(_QWORD *)(v4 + 1472) = 1;
  *(_WORD *)(v4 + 1480) = 257;
  *(_QWORD *)(v4 + 1488) = 0xD000000000000011;
  *(_QWORD *)(v4 + 1496) = 0x8000000100E31D20;
  *(_OWORD *)(v4 + 1504) = xmmword_100EAFF00;
  *(_OWORD *)(v4 + 1520) = xmmword_100EAFEB0;
  *(_OWORD *)(v4 + 1536) = xmmword_100EAFDE0;
  *(_OWORD *)(v4 + 1552) = xmmword_100EAFEC0;
  *(_OWORD *)(v4 + 1568) = xmmword_100EA85A0;
  *(_WORD *)(v4 + 1584) = 257;
  *(_QWORD *)(v4 + 1592) = 0xD00000000000001DLL;
  *(_QWORD *)(v4 + 1600) = 0x8000000100E31D40;
  *(_QWORD *)(v4 + 1608) = 0x4077700000000000;
  *(_OWORD *)(v4 + 1616) = xmmword_100EAFF10;
  *(_OWORD *)(v4 + 1632) = xmmword_100EAFF20;
  *(_OWORD *)(v4 + 1648) = xmmword_100EAFF30;
  *(_QWORD *)(v4 + 1664) = 0x4048000000000000;
  *(_QWORD *)(v4 + 1672) = 0;
  *(_QWORD *)(v4 + 1680) = 1;
  *(_WORD *)(v4 + 1688) = 257;
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = 0xD000000000000012;
  *(_QWORD *)(v2 + 64) = 0x8000000100E2AE40;
  v5 = swift_allocObject(v3, 760, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v5 + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(v5 + 40) = 0x8000000100E31D60;
  *(_OWORD *)(v5 + 48) = xmmword_100EAFF40;
  *(_OWORD *)(v5 + 64) = xmmword_100EAFF50;
  *(_OWORD *)(v5 + 80) = xmmword_100EAFF60;
  *(_OWORD *)(v5 + 96) = xmmword_100EAFF70;
  *(_OWORD *)(v5 + 112) = xmmword_100EA7AA0;
  *(_WORD *)(v5 + 128) = 256;
  *(_QWORD *)(v5 + 136) = 0xD000000000000027;
  *(_QWORD *)(v5 + 144) = 0x8000000100E31D80;
  *(_OWORD *)(v5 + 152) = xmmword_100EAFF80;
  *(_OWORD *)(v5 + 168) = xmmword_100EAFF50;
  *(_OWORD *)(v5 + 184) = xmmword_100EAFF60;
  *(_OWORD *)(v5 + 200) = xmmword_100EAFF70;
  *(_OWORD *)(v5 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v5 + 232) = 256;
  *(_QWORD *)(v5 + 240) = 0xD000000000000027;
  *(_QWORD *)(v5 + 248) = 0x8000000100E31DB0;
  *(_OWORD *)(v5 + 256) = xmmword_100EAFF90;
  *(_OWORD *)(v5 + 272) = xmmword_100EAFF50;
  *(_OWORD *)(v5 + 288) = xmmword_100EAFF60;
  *(_OWORD *)(v5 + 304) = xmmword_100EAFF70;
  *(_OWORD *)(v5 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v5 + 336) = 256;
  *(_QWORD *)(v5 + 344) = 0xD000000000000027;
  *(_QWORD *)(v5 + 352) = 0x8000000100E31DE0;
  *(_QWORD *)(v5 + 360) = 0x4077700000000000;
  *(_OWORD *)(v5 + 368) = xmmword_100EAFFA0;
  *(_OWORD *)(v5 + 384) = xmmword_100EAFFB0;
  *(_OWORD *)(v5 + 400) = xmmword_100EAFFC0;
  *(_QWORD *)(v5 + 416) = 0x4032000000000000;
  *(_QWORD *)(v5 + 424) = 1;
  *(_QWORD *)(v5 + 432) = 1;
  *(_WORD *)(v5 + 440) = 256;
  *(_QWORD *)(v5 + 448) = 0xD00000000000001BLL;
  *(_QWORD *)(v5 + 456) = 0x8000000100E31E10;
  *(_OWORD *)(v5 + 464) = xmmword_100EAFFD0;
  *(_OWORD *)(v5 + 480) = xmmword_100EAFF50;
  *(_OWORD *)(v5 + 496) = xmmword_100EAFF60;
  *(_OWORD *)(v5 + 512) = xmmword_100EAFF70;
  *(_OWORD *)(v5 + 528) = xmmword_100EA7AA0;
  *(_WORD *)(v5 + 544) = 256;
  *(_QWORD *)(v5 + 552) = 0xD000000000000026;
  *(_QWORD *)(v5 + 560) = 0x8000000100E31E30;
  *(_QWORD *)(v5 + 568) = 0x4083F80000000000;
  *(_OWORD *)(v5 + 576) = xmmword_100EAFFE0;
  *(_OWORD *)(v5 + 592) = xmmword_100EAFFB0;
  *(_OWORD *)(v5 + 608) = xmmword_100EAFFC0;
  *(_QWORD *)(v5 + 624) = 0x4032000000000000;
  *(_QWORD *)(v5 + 632) = 1;
  *(_QWORD *)(v5 + 640) = 1;
  *(_WORD *)(v5 + 648) = 256;
  *(_QWORD *)(v5 + 656) = 0xD000000000000026;
  *(_QWORD *)(v5 + 664) = 0x8000000100E31E60;
  *(_OWORD *)(v5 + 672) = xmmword_100EAFFF0;
  *(_OWORD *)(v5 + 688) = xmmword_100EAFF50;
  *(_OWORD *)(v5 + 704) = xmmword_100EAFF60;
  *(_OWORD *)(v5 + 720) = xmmword_100EAFF70;
  v24 = vdupq_n_s64(1uLL);
  *(int64x2_t *)(v5 + 736) = v24;
  *(_WORD *)(v5 + 752) = 256;
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = 0xD000000000000021;
  *(_QWORD *)(v2 + 88) = 0x8000000100E2AE10;
  v6 = swift_allocObject(v3, 760, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v6 + 32) = 0xD00000000000002BLL;
  *(_QWORD *)(v6 + 40) = 0x8000000100E31E90;
  *(_OWORD *)(v6 + 48) = xmmword_100EAFF40;
  *(_OWORD *)(v6 + 64) = xmmword_100EB0000;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = xmmword_100EA7AA0;
  *(_WORD *)(v6 + 128) = 256;
  *(_QWORD *)(v6 + 136) = 0xD000000000000036;
  *(_QWORD *)(v6 + 144) = 0x8000000100E31EC0;
  *(_OWORD *)(v6 + 152) = xmmword_100EAFF80;
  *(_OWORD *)(v6 + 168) = xmmword_100EB0000;
  *(_OWORD *)(v6 + 184) = 0u;
  *(_OWORD *)(v6 + 200) = 0u;
  *(_OWORD *)(v6 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v6 + 232) = 256;
  *(_QWORD *)(v6 + 240) = 0xD000000000000036;
  *(_QWORD *)(v6 + 248) = 0x8000000100E31F00;
  *(_OWORD *)(v6 + 256) = xmmword_100EAFF90;
  *(_OWORD *)(v6 + 272) = xmmword_100EB0000;
  *(_OWORD *)(v6 + 288) = 0u;
  *(_OWORD *)(v6 + 304) = 0u;
  *(_OWORD *)(v6 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v6 + 336) = 256;
  *(_QWORD *)(v6 + 344) = 0xD000000000000036;
  *(_QWORD *)(v6 + 352) = 0x8000000100E31F40;
  *(_QWORD *)(v6 + 360) = 0x4077700000000000;
  *(_OWORD *)(v6 + 368) = xmmword_100EAFFA0;
  *(_QWORD *)(v6 + 384) = 0x4034000000000000;
  *(_OWORD *)(v6 + 392) = 0u;
  *(_OWORD *)(v6 + 408) = 0u;
  *(_QWORD *)(v6 + 424) = 1;
  *(_QWORD *)(v6 + 432) = 1;
  *(_WORD *)(v6 + 440) = 256;
  *(_QWORD *)(v6 + 448) = 0xD00000000000002ALL;
  *(_QWORD *)(v6 + 456) = 0x8000000100E31F80;
  *(_OWORD *)(v6 + 464) = xmmword_100EAFFD0;
  *(_OWORD *)(v6 + 480) = xmmword_100EB0000;
  *(_OWORD *)(v6 + 496) = 0u;
  *(_OWORD *)(v6 + 512) = 0u;
  *(_OWORD *)(v6 + 528) = xmmword_100EA7AA0;
  *(_WORD *)(v6 + 544) = 256;
  *(_QWORD *)(v6 + 552) = 0xD000000000000035;
  *(_QWORD *)(v6 + 560) = 0x8000000100E31FB0;
  *(_QWORD *)(v6 + 568) = 0x4083F80000000000;
  *(_OWORD *)(v6 + 576) = xmmword_100EAFFE0;
  *(_QWORD *)(v6 + 592) = 0x4034000000000000;
  *(_OWORD *)(v6 + 600) = 0u;
  *(_OWORD *)(v6 + 616) = 0u;
  *(_QWORD *)(v6 + 632) = 1;
  *(_QWORD *)(v6 + 640) = 1;
  *(_WORD *)(v6 + 648) = 256;
  *(_QWORD *)(v6 + 656) = 0xD000000000000035;
  *(_QWORD *)(v6 + 664) = 0x8000000100E31FF0;
  *(_OWORD *)(v6 + 672) = xmmword_100EAFFF0;
  *(_OWORD *)(v6 + 688) = xmmword_100EB0000;
  *(_OWORD *)(v6 + 704) = 0u;
  *(_OWORD *)(v6 + 720) = 0u;
  *(int64x2_t *)(v6 + 736) = v24;
  *(_WORD *)(v6 + 752) = 256;
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = 0xD000000000000012;
  *(_QWORD *)(v2 + 112) = 0x8000000100E2ADD0;
  v7 = swift_allocObject(v3, 760, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v7 + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(v7 + 40) = 0x8000000100E32030;
  *(_OWORD *)(v7 + 48) = xmmword_100EB0010;
  *(_OWORD *)(v7 + 64) = xmmword_100EB0000;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_OWORD *)(v7 + 96) = 0u;
  *(_OWORD *)(v7 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v7 + 128) = 0;
  *(_BYTE *)(v7 + 129) = 1;
  *(_QWORD *)(v7 + 136) = 0xD000000000000027;
  *(_QWORD *)(v7 + 144) = 0x8000000100E32050;
  *(_OWORD *)(v7 + 152) = xmmword_100EB0020;
  *(_OWORD *)(v7 + 168) = xmmword_100EB0000;
  *(_OWORD *)(v7 + 184) = 0u;
  *(_OWORD *)(v7 + 200) = 0u;
  *(_OWORD *)(v7 + 216) = xmmword_100EA7AA0;
  *(_BYTE *)(v7 + 232) = 0;
  *(_BYTE *)(v7 + 233) = 1;
  *(_QWORD *)(v7 + 240) = 0xD000000000000027;
  *(_QWORD *)(v7 + 248) = 0x8000000100E32080;
  *(_OWORD *)(v7 + 256) = xmmword_100EB0030;
  *(_OWORD *)(v7 + 272) = xmmword_100EB0000;
  *(_OWORD *)(v7 + 288) = 0u;
  *(_OWORD *)(v7 + 304) = 0u;
  *(_OWORD *)(v7 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v7 + 336) = 256;
  *(_QWORD *)(v7 + 344) = 0xD000000000000027;
  *(_QWORD *)(v7 + 352) = 0x8000000100E320B0;
  *(_QWORD *)(v7 + 360) = 0x4074000000000000;
  *(_OWORD *)(v7 + 368) = xmmword_100EB0040;
  *(_QWORD *)(v7 + 384) = 0x4034000000000000;
  *(_OWORD *)(v7 + 392) = 0u;
  *(_OWORD *)(v7 + 408) = 0u;
  *(_QWORD *)(v7 + 424) = 1;
  *(_QWORD *)(v7 + 432) = 1;
  *(_WORD *)(v7 + 440) = 256;
  *(_QWORD *)(v7 + 448) = 0xD00000000000001BLL;
  *(_QWORD *)(v7 + 456) = 0x8000000100E320E0;
  *(_OWORD *)(v7 + 464) = xmmword_100EB0050;
  *(_OWORD *)(v7 + 480) = xmmword_100EB0000;
  *(_OWORD *)(v7 + 496) = 0u;
  *(_OWORD *)(v7 + 512) = 0u;
  *(_OWORD *)(v7 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v7 + 544) = 0;
  *(_BYTE *)(v7 + 545) = 1;
  *(_QWORD *)(v7 + 552) = 0xD000000000000026;
  *(_QWORD *)(v7 + 560) = 0x8000000100E32100;
  *(_QWORD *)(v7 + 568) = 0x407F800000000000;
  *(_OWORD *)(v7 + 576) = xmmword_100EB0060;
  *(_QWORD *)(v7 + 592) = 0x4034000000000000;
  *(_OWORD *)(v7 + 600) = 0u;
  *(_OWORD *)(v7 + 616) = 0u;
  *(_QWORD *)(v7 + 632) = 1;
  *(_QWORD *)(v7 + 640) = 1;
  *(_BYTE *)(v7 + 648) = 0;
  *(_BYTE *)(v7 + 649) = 1;
  *(_QWORD *)(v7 + 656) = 0xD000000000000026;
  *(_QWORD *)(v7 + 664) = 0x8000000100E32130;
  *(_OWORD *)(v7 + 672) = xmmword_100EB0070;
  *(_OWORD *)(v7 + 688) = xmmword_100EB0000;
  *(_OWORD *)(v7 + 704) = 0u;
  *(_OWORD *)(v7 + 720) = 0u;
  *(int64x2_t *)(v7 + 736) = v24;
  *(_BYTE *)(v7 + 752) = 0;
  *(_BYTE *)(v7 + 753) = 1;
  *(_QWORD *)(v2 + 120) = v7;
  strcpy((char *)(v2 + 128), "10.2-inch iPad");
  *(_BYTE *)(v2 + 143) = -18;
  v8 = swift_allocObject(v3, 760, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v8 + 32) = 0xD000000000000018;
  *(_QWORD *)(v8 + 40) = 0x8000000100E32160;
  *(_OWORD *)(v8 + 48) = xmmword_100EB0080;
  *(_OWORD *)(v8 + 64) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 80) = 0u;
  *(_OWORD *)(v8 + 96) = 0u;
  *(_OWORD *)(v8 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v8 + 128) = 0;
  *(_BYTE *)(v8 + 129) = 1;
  *(_QWORD *)(v8 + 136) = 0xD000000000000023;
  *(_QWORD *)(v8 + 144) = 0x8000000100E32180;
  *(_OWORD *)(v8 + 152) = xmmword_100EB0090;
  *(_OWORD *)(v8 + 168) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 184) = 0u;
  *(_OWORD *)(v8 + 200) = 0u;
  *(_OWORD *)(v8 + 216) = xmmword_100EA7AA0;
  *(_BYTE *)(v8 + 232) = 0;
  *(_BYTE *)(v8 + 233) = 1;
  *(_QWORD *)(v8 + 240) = 0xD000000000000023;
  *(_QWORD *)(v8 + 248) = 0x8000000100E321B0;
  *(_OWORD *)(v8 + 256) = xmmword_100EB00A0;
  *(_OWORD *)(v8 + 272) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 288) = 0u;
  *(_OWORD *)(v8 + 304) = 0u;
  *(_OWORD *)(v8 + 320) = xmmword_100EA7AA0;
  *(_WORD *)(v8 + 336) = 256;
  *(_QWORD *)(v8 + 344) = 0xD000000000000023;
  *(_QWORD *)(v8 + 352) = 0x8000000100E321E0;
  *(_QWORD *)(v8 + 360) = 0x4074000000000000;
  *(_OWORD *)(v8 + 368) = xmmword_100EB0040;
  *(_QWORD *)(v8 + 384) = 0x4034000000000000;
  *(_OWORD *)(v8 + 392) = 0u;
  *(_OWORD *)(v8 + 408) = 0u;
  *(_QWORD *)(v8 + 424) = 1;
  *(_QWORD *)(v8 + 432) = 1;
  *(_WORD *)(v8 + 440) = 256;
  *(_QWORD *)(v8 + 448) = 0xD000000000000017;
  *(_QWORD *)(v8 + 456) = 0x8000000100E32210;
  *(_OWORD *)(v8 + 464) = xmmword_100EB00B0;
  *(_OWORD *)(v8 + 480) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 496) = 0u;
  *(_OWORD *)(v8 + 512) = 0u;
  *(_OWORD *)(v8 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v8 + 544) = 0;
  *(_BYTE *)(v8 + 545) = 1;
  *(_QWORD *)(v8 + 552) = 0xD000000000000022;
  *(_QWORD *)(v8 + 560) = 0x8000000100E32230;
  *(_QWORD *)(v8 + 568) = 0x407E000000000000;
  *(_OWORD *)(v8 + 576) = xmmword_100EB00C0;
  *(_QWORD *)(v8 + 592) = 0x4034000000000000;
  *(_OWORD *)(v8 + 600) = 0u;
  *(_OWORD *)(v8 + 616) = 0u;
  *(_QWORD *)(v8 + 632) = 1;
  *(_QWORD *)(v8 + 640) = 1;
  *(_BYTE *)(v8 + 648) = 0;
  *(_BYTE *)(v8 + 649) = 1;
  *(_QWORD *)(v8 + 656) = 0xD000000000000022;
  *(_QWORD *)(v8 + 664) = 0x8000000100E32260;
  *(_OWORD *)(v8 + 672) = xmmword_100EB00D0;
  *(_OWORD *)(v8 + 688) = xmmword_100EB0000;
  *(_OWORD *)(v8 + 704) = 0u;
  *(_OWORD *)(v8 + 720) = 0u;
  *(int64x2_t *)(v8 + 736) = v24;
  *(_BYTE *)(v8 + 752) = 0;
  *(_BYTE *)(v8 + 753) = 1;
  *(_QWORD *)(v2 + 144) = v8;
  *(_QWORD *)(v2 + 152) = 0xD000000000000010;
  *(_QWORD *)(v2 + 160) = 0x8000000100E2ADF0;
  v9 = swift_allocObject(v3, 760, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v9 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v9 + 40) = 0x8000000100E32290;
  *(_OWORD *)(v9 + 48) = xmmword_100EB00E0;
  *(_OWORD *)(v9 + 64) = xmmword_100EAFF50;
  *(_OWORD *)(v9 + 80) = xmmword_100EAFF60;
  *(_OWORD *)(v9 + 96) = xmmword_100EAFF70;
  *(_OWORD *)(v9 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v9 + 128) = 0;
  *(_BYTE *)(v9 + 129) = 1;
  *(_QWORD *)(v9 + 136) = 0xD000000000000025;
  *(_QWORD *)(v9 + 144) = 0x8000000100E322B0;
  *(_OWORD *)(v9 + 152) = xmmword_100EB00F0;
  *(_OWORD *)(v9 + 168) = xmmword_100EAFF50;
  *(_OWORD *)(v9 + 184) = xmmword_100EAFF60;
  *(_OWORD *)(v9 + 200) = xmmword_100EAFF70;
  *(_OWORD *)(v9 + 216) = xmmword_100EA7AA0;
  *(_BYTE *)(v9 + 232) = 0;
  *(_BYTE *)(v9 + 233) = 1;
  *(_QWORD *)(v9 + 240) = 0xD000000000000025;
  *(_QWORD *)(v9 + 248) = 0x8000000100E322E0;
  *(_OWORD *)(v9 + 256) = xmmword_100EB0100;
  *(_OWORD *)(v9 + 272) = xmmword_100EAFF50;
  *(_OWORD *)(v9 + 288) = xmmword_100EAFF60;
  *(_OWORD *)(v9 + 304) = xmmword_100EAFF70;
  *(int64x2_t *)(v9 + 320) = v24;
  *(_BYTE *)(v9 + 336) = 0;
  *(_BYTE *)(v9 + 337) = 1;
  *(_QWORD *)(v9 + 344) = 0xD000000000000025;
  *(_QWORD *)(v9 + 352) = 0x8000000100E32310;
  *(_QWORD *)(v9 + 360) = 0x4077700000000000;
  *(_OWORD *)(v9 + 368) = xmmword_100EB0040;
  *(_OWORD *)(v9 + 384) = xmmword_100EAFFB0;
  *(_OWORD *)(v9 + 400) = xmmword_100EAFFC0;
  *(_QWORD *)(v9 + 416) = 0x4032000000000000;
  *(_QWORD *)(v9 + 424) = 1;
  *(_QWORD *)(v9 + 432) = 1;
  *(_BYTE *)(v9 + 440) = 0;
  *(_BYTE *)(v9 + 441) = 1;
  *(_QWORD *)(v9 + 448) = 0xD000000000000019;
  *(_QWORD *)(v9 + 456) = 0x8000000100E32340;
  *(_OWORD *)(v9 + 464) = xmmword_100EB0110;
  *(_OWORD *)(v9 + 480) = xmmword_100EAFF50;
  *(_OWORD *)(v9 + 496) = xmmword_100EAFF60;
  *(_OWORD *)(v9 + 512) = xmmword_100EAFF70;
  *(_OWORD *)(v9 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v9 + 544) = 0;
  *(_BYTE *)(v9 + 545) = 1;
  *(_QWORD *)(v9 + 552) = 0xD000000000000024;
  *(_QWORD *)(v9 + 560) = 0x8000000100E32360;
  *(_QWORD *)(v9 + 568) = 0x407F800000000000;
  *(_OWORD *)(v9 + 576) = xmmword_100EB0120;
  *(_OWORD *)(v9 + 592) = xmmword_100EAFFB0;
  *(_OWORD *)(v9 + 608) = xmmword_100EAFFC0;
  *(_QWORD *)(v9 + 624) = 0x4032000000000000;
  *(_QWORD *)(v9 + 632) = 1;
  *(_QWORD *)(v9 + 640) = 1;
  *(_BYTE *)(v9 + 648) = 0;
  *(_BYTE *)(v9 + 649) = 1;
  *(_QWORD *)(v9 + 656) = 0xD000000000000024;
  *(_QWORD *)(v9 + 664) = 0x8000000100E32390;
  *(_OWORD *)(v9 + 672) = xmmword_100EB0130;
  *(_OWORD *)(v9 + 688) = xmmword_100EAFF50;
  *(_OWORD *)(v9 + 704) = xmmword_100EAFF60;
  *(_OWORD *)(v9 + 720) = xmmword_100EAFF70;
  *(int64x2_t *)(v9 + 736) = v24;
  *(_BYTE *)(v9 + 752) = 0;
  *(_BYTE *)(v9 + 753) = 1;
  *(_QWORD *)(v2 + 168) = v9;
  *(_QWORD *)(v2 + 176) = 0xD000000000000011;
  *(_QWORD *)(v2 + 184) = 0x8000000100E2ADB0;
  v10 = swift_allocObject(v3, 760, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v10 + 32) = 0xD000000000000020;
  *(_QWORD *)(v10 + 40) = 0x8000000100E323C0;
  *(_OWORD *)(v10 + 48) = xmmword_100EB0140;
  *(_OWORD *)(v10 + 64) = xmmword_100EAFF50;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_OWORD *)(v10 + 96) = 0u;
  *(_OWORD *)(v10 + 112) = xmmword_100EA7AA0;
  *(_WORD *)(v10 + 128) = 0;
  *(_QWORD *)(v10 + 136) = 0xD000000000000026;
  *(_QWORD *)(v10 + 144) = 0x8000000100E323F0;
  *(_OWORD *)(v10 + 152) = xmmword_100EB0150;
  *(_OWORD *)(v10 + 168) = xmmword_100EAFF50;
  *(_OWORD *)(v10 + 184) = 0u;
  *(_OWORD *)(v10 + 200) = 0u;
  *(_OWORD *)(v10 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v10 + 232) = 0;
  *(_QWORD *)(v10 + 240) = 0xD000000000000026;
  *(_QWORD *)(v10 + 248) = 0x8000000100E32420;
  *(_OWORD *)(v10 + 256) = xmmword_100EB0160;
  *(_OWORD *)(v10 + 272) = xmmword_100EAFF50;
  *(_OWORD *)(v10 + 288) = 0u;
  *(_OWORD *)(v10 + 304) = 0u;
  *(int64x2_t *)(v10 + 320) = v24;
  *(_WORD *)(v10 + 336) = 0;
  *(_QWORD *)(v10 + 344) = 0xD000000000000026;
  *(_QWORD *)(v10 + 352) = 0x8000000100E32450;
  *(_QWORD *)(v10 + 360) = 0x4074000000000000;
  *(_OWORD *)(v10 + 368) = xmmword_100EB0170;
  *(_QWORD *)(v10 + 384) = 0x4038000000000000;
  *(_OWORD *)(v10 + 392) = 0u;
  *(_OWORD *)(v10 + 408) = 0u;
  *(_QWORD *)(v10 + 424) = 1;
  *(_QWORD *)(v10 + 432) = 1;
  *(_WORD *)(v10 + 440) = 0;
  *(_QWORD *)(v10 + 448) = 0xD00000000000001ALL;
  *(_QWORD *)(v10 + 456) = 0x8000000100E32480;
  *(_OWORD *)(v10 + 464) = xmmword_100EB0180;
  *(_OWORD *)(v10 + 480) = xmmword_100EAFF50;
  *(_OWORD *)(v10 + 496) = 0u;
  *(_OWORD *)(v10 + 512) = 0u;
  *(_OWORD *)(v10 + 528) = xmmword_100EA7AA0;
  *(_WORD *)(v10 + 544) = 0;
  *(_QWORD *)(v10 + 552) = 0xD000000000000025;
  *(_QWORD *)(v10 + 560) = 0x8000000100E324A0;
  *(_QWORD *)(v10 + 568) = 0x407B600000000000;
  *(_OWORD *)(v10 + 576) = xmmword_100EAFFA0;
  *(_QWORD *)(v10 + 592) = 0x4038000000000000;
  *(_OWORD *)(v10 + 600) = 0u;
  *(_OWORD *)(v10 + 616) = 0u;
  *(_QWORD *)(v10 + 632) = 1;
  *(_QWORD *)(v10 + 640) = 1;
  *(_WORD *)(v10 + 648) = 0;
  *(_QWORD *)(v10 + 656) = 0xD000000000000025;
  *(_QWORD *)(v10 + 664) = 0x8000000100E324D0;
  *(_OWORD *)(v10 + 672) = xmmword_100EB0190;
  *(_OWORD *)(v10 + 688) = xmmword_100EAFF50;
  *(_OWORD *)(v10 + 704) = 0u;
  *(_OWORD *)(v10 + 720) = 0u;
  *(int64x2_t *)(v10 + 736) = v24;
  *(_WORD *)(v10 + 752) = 0;
  *(_QWORD *)(v2 + 192) = v10;
  strcpy((char *)(v2 + 200), "8.3-inch iPad");
  *(_WORD *)(v2 + 214) = -4864;
  v11 = swift_allocObject(v3, 760, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA8160;
  *(_QWORD *)(v11 + 32) = 0xD000000000000017;
  *(_QWORD *)(v11 + 40) = 0x8000000100E32500;
  *(_OWORD *)(v11 + 48) = xmmword_100EB01A0;
  *(_OWORD *)(v11 + 64) = xmmword_100EB01B0;
  *(_QWORD *)(v11 + 80) = 0;
  *(_QWORD *)(v11 + 88) = 0;
  *(_QWORD *)(v11 + 96) = 0;
  *(_QWORD *)(v11 + 104) = 0x4032000000000000;
  *(_OWORD *)(v11 + 112) = xmmword_100EA7AA0;
  *(_BYTE *)(v11 + 128) = 0;
  *(_BYTE *)(v11 + 129) = 1;
  *(_QWORD *)(v11 + 136) = 0xD000000000000022;
  *(_QWORD *)(v11 + 144) = 0x8000000100E32520;
  *(_OWORD *)(v11 + 152) = xmmword_100EB01C0;
  *(_OWORD *)(v11 + 168) = xmmword_100EB01B0;
  *(_QWORD *)(v11 + 184) = 0;
  *(_QWORD *)(v11 + 192) = 0;
  *(_QWORD *)(v11 + 200) = 0;
  *(_QWORD *)(v11 + 208) = 0x4032000000000000;
  *(_OWORD *)(v11 + 216) = xmmword_100EA7AA0;
  *(_WORD *)(v11 + 232) = 256;
  *(_QWORD *)(v11 + 240) = 0xD000000000000022;
  *(_QWORD *)(v11 + 248) = 0x8000000100E32550;
  *(_OWORD *)(v11 + 256) = xmmword_100EB01D0;
  *(_OWORD *)(v11 + 272) = xmmword_100EB01B0;
  *(_QWORD *)(v11 + 288) = 0;
  *(_QWORD *)(v11 + 296) = 0;
  *(_QWORD *)(v11 + 304) = 0;
  *(_QWORD *)(v11 + 312) = 0x4032000000000000;
  *(int64x2_t *)(v11 + 320) = v24;
  *(_WORD *)(v11 + 336) = 256;
  *(_QWORD *)(v11 + 344) = 0xD000000000000022;
  *(_QWORD *)(v11 + 352) = 0x8000000100E32580;
  *(_QWORD *)(v11 + 360) = 0x4077700000000000;
  *(_OWORD *)(v11 + 368) = xmmword_100EB01E0;
  *(_QWORD *)(v11 + 400) = 0;
  *(_QWORD *)(v11 + 408) = 0;
  *(_QWORD *)(v11 + 384) = 0x4038000000000000;
  *(_QWORD *)(v11 + 392) = 0;
  *(_QWORD *)(v11 + 416) = 0x4032000000000000;
  *(_QWORD *)(v11 + 424) = 1;
  *(_QWORD *)(v11 + 432) = 1;
  *(_BYTE *)(v11 + 440) = 0;
  *(_BYTE *)(v11 + 441) = 1;
  *(_QWORD *)(v11 + 448) = 0xD000000000000016;
  *(_QWORD *)(v11 + 456) = 0x8000000100E325B0;
  *(_OWORD *)(v11 + 464) = xmmword_100EB01F0;
  *(_OWORD *)(v11 + 480) = xmmword_100EB01B0;
  *(_QWORD *)(v11 + 496) = 0;
  *(_QWORD *)(v11 + 504) = 0;
  *(_QWORD *)(v11 + 512) = 0;
  *(_QWORD *)(v11 + 520) = 0x4032000000000000;
  *(_OWORD *)(v11 + 528) = xmmword_100EA7AA0;
  *(_BYTE *)(v11 + 544) = 0;
  *(_BYTE *)(v11 + 545) = 1;
  *(_QWORD *)(v11 + 552) = 0xD00000000000001ALL;
  *(_QWORD *)(v11 + 560) = 0x8000000100E325D0;
  *(_QWORD *)(v11 + 568) = 0x4079E00000000000;
  *(_OWORD *)(v11 + 576) = xmmword_100EB0200;
  *(_QWORD *)(v11 + 592) = 0x4038000000000000;
  *(_QWORD *)(v11 + 616) = 0;
  *(_QWORD *)(v11 + 608) = 0;
  *(_QWORD *)(v11 + 600) = 0;
  *(_QWORD *)(v11 + 624) = 0x4032000000000000;
  *(_QWORD *)(v11 + 632) = 1;
  *(_QWORD *)(v11 + 640) = 1;
  *(_BYTE *)(v11 + 648) = 0;
  *(_BYTE *)(v11 + 649) = 1;
  *(_QWORD *)(v11 + 656) = 0xD00000000000001ALL;
  *(_QWORD *)(v11 + 664) = 0x8000000100E325F0;
  *(_OWORD *)(v11 + 672) = xmmword_100EB0210;
  *(_OWORD *)(v11 + 688) = xmmword_100EB01B0;
  *(_QWORD *)(v11 + 704) = 0;
  *(_QWORD *)(v11 + 712) = 0;
  *(_QWORD *)(v11 + 720) = 0;
  *(_QWORD *)(v11 + 728) = 0x4032000000000000;
  *(int64x2_t *)(v11 + 736) = v24;
  *(_BYTE *)(v11 + 752) = 0;
  *(_BYTE *)(v11 + 753) = 1;
  *(_QWORD *)(v2 + 216) = v11;
  v12 = v21;
  *(_QWORD *)&v21[v22] = sub_100042A98(v2);
  v13 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_scrollView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v15 = UIView.forAutolayout.getter();

  *(_QWORD *)&v12[v13] = v15;
  v16 = OBJC_IVAR____TtC5Music31MultiDeviceTesterViewController_stackView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v18 = UIView.forAutolayout.getter();

  *(_QWORD *)&v12[v16] = v18;
  v25.receiver = v12;
  v25.super_class = (Class)type metadata accessor for MultiDeviceTesterViewController();
  v19 = objc_msgSendSuper2(&v25, "initWithCoder:", a1);

  return v19;
}

id sub_10022877C()
{
  return sub_1001EB7B8(type metadata accessor for MultiDeviceTesterViewController);
}

uint64_t type metadata accessor for MultiDeviceTesterViewController()
{
  return objc_opt_self(_TtC5Music31MultiDeviceTesterViewController);
}

uint64_t type metadata accessor for MultiDeviceTesterViewController.DeviceView()
{
  return objc_opt_self(_TtCC5Music31MultiDeviceTesterViewController10DeviceView);
}

uint64_t initializeWithCopy for MultiDeviceTesterViewController.Device(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for MultiDeviceTesterViewController.Device(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  return a1;
}

__n128 initializeWithTake for MultiDeviceTesterViewController.Device(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for MultiDeviceTesterViewController.Device(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiDeviceTesterViewController.Device(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 98))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiDeviceTesterViewController.Device(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 98) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 98) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiDeviceTesterViewController.Device()
{
  return &type metadata for MultiDeviceTesterViewController.Device;
}

unint64_t sub_100228A64(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AADD0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 9)
    return 9;
  else
    return v3;
}

void sub_100228AAC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v5 = sub_100007E8C(&qword_1011A77E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100228E60();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MultiDeviceTesterViewController.Device.CodingKeys, &type metadata for MultiDeviceTesterViewController.Device.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    LOBYTE(v35) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
    v14 = v13;
    type metadata accessor for CGSize(0);
    v16 = v15;
    v39 = 1;
    v17 = sub_100048748(&qword_1011A77F8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v35, v16, &v39, v5, v16, v17);
    v34 = v12;
    v18 = v35;
    v19 = v36;
    v39 = 2;
    v20 = sub_100228EA4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v35, &type metadata for CGFloat, &v39, v5, &type metadata for CGFloat, v20);
    v33 = v20;
    v21 = v35;
    type metadata accessor for UIEdgeInsets(0);
    v23 = v22;
    v39 = 3;
    v24 = sub_100048748(&qword_1011A7800, (uint64_t (*)(uint64_t))type metadata accessor for UIEdgeInsets, (uint64_t)&protocol conformance descriptor for UIEdgeInsets);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v35, v23, &v39, v5, v23, v24);
    v25 = v35;
    v26 = v36;
    v27 = v37;
    v28 = v38;
    v39 = 4;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v35, &type metadata for CGFloat, &v39, v5, &type metadata for CGFloat, v33);
    v29 = v35;
    LOBYTE(v35) = 7;
    LOBYTE(v20) = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
    LOBYTE(v35) = 8;
    LODWORD(v33) = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
    LOBYTE(v35) = 5;
    v32 = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
    LOBYTE(v35) = 6;
    v30 = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
    LODWORD(v33) = v33 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
    swift_bridgeObjectRelease(v14);
    *(_QWORD *)a2 = v34;
    *(_QWORD *)(a2 + 8) = v14;
    *(_QWORD *)(a2 + 16) = v18;
    *(_QWORD *)(a2 + 24) = v19;
    *(_QWORD *)(a2 + 32) = v21;
    *(_QWORD *)(a2 + 40) = v25;
    *(_QWORD *)(a2 + 48) = v26;
    *(_QWORD *)(a2 + 56) = v27;
    *(_QWORD *)(a2 + 64) = v28;
    *(_QWORD *)(a2 + 72) = v29;
    *(_QWORD *)(a2 + 80) = v32;
    *(_QWORD *)(a2 + 88) = v30;
    *(_BYTE *)(a2 + 96) = v20 & 1;
    *(_BYTE *)(a2 + 97) = v33;
  }
}

unint64_t sub_100228E60()
{
  unint64_t result;

  result = qword_1011A77F0;
  if (!qword_1011A77F0)
  {
    result = swift_getWitnessTable(&unk_100EAFCB0, &type metadata for MultiDeviceTesterViewController.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011A77F0);
  }
  return result;
}

unint64_t sub_100228EA4()
{
  unint64_t result;

  result = qword_1011AD5A0;
  if (!qword_1011AD5A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1011AD5A0);
  }
  return result;
}

unint64_t sub_100228EE8()
{
  unint64_t result;

  result = qword_1011AD5C0;
  if (!qword_1011AD5C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1011AD5C0);
  }
  return result;
}

unint64_t sub_100228F2C()
{
  unint64_t result;

  result = qword_1011A7830;
  if (!qword_1011A7830)
  {
    result = swift_getWitnessTable(&unk_100EAFB64, &type metadata for MultiDeviceTesterViewController.Device);
    atomic_store(result, (unint64_t *)&qword_1011A7830);
  }
  return result;
}

uint64_t sub_100228F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100228F94(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100225990(a1, a2, v2);
}

void sub_100228F9C(void *a1)
{
  uint64_t v1;

  sub_100225AE4(a1, *(void **)(v1 + 16));
}

void sub_100228FA4(void *a1)
{
  void *v1;
  void (*v2)(void);
  NSString *v4;
  Class v5;
  objc_class *v6;
  Class ClassPair;
  uint64_t ObjCClassMetadata;
  NSString *v9;
  const char *v10;
  NSString *v11;
  const char *v12;
  objc_class *v13;
  Method InstanceMethod;
  uint64_t v15;
  objc_class *v16;
  const char *TypeEncoding;
  const char *v18;
  objc_class *ObjCClassFromMetadata;
  const char *v20;
  const char *v21;
  _QWORD v22[5];
  uint64_t v23;

  v4 = (NSString *)String._bridgeToObjectiveC()();
  v5 = NSClassFromString(v4);

  if (v5)
  {
    swift_getObjCClassMetadata(v5);
LABEL_12:
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    object_setClass(a1, ObjCClassFromMetadata);
    return;
  }
  swift_getObjectType();
  v6 = (objc_class *)swift_getObjCClassFromMetadata();
  ClassPair = objc_allocateClassPair(v6, "DeviceViewTotallyRealViewControllerClassForSure", 0);
  if (ClassPair)
    ObjCClassMetadata = swift_getObjCClassMetadata(ClassPair);
  else
    ObjCClassMetadata = 0;
  v9 = (NSString *)String._bridgeToObjectiveC()();
  v10 = NSSelectorFromString(v9);

  v11 = (NSString *)String._bridgeToObjectiveC()();
  v12 = NSSelectorFromString(v11);

  if (ObjCClassMetadata)
    v13 = (objc_class *)swift_getObjCClassFromMetadata();
  else
    v13 = 0;
  InstanceMethod = class_getInstanceMethod(v13, v10);
  if (InstanceMethod)
  {
    v11 = (NSString *)InstanceMethod;
    v15 = swift_allocObject(&unk_1010B6AA8, 32, 7);
    *(_QWORD *)(v15 + 16) = v11;
    *(_QWORD *)(v15 + 24) = v10;
    v22[4] = sub_100229384;
    v23 = v15;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_100223938;
    v22[3] = &unk_1010B6AC0;
    v1 = _Block_copy(v22);
    swift_release(v23);
    v2 = imp_implementationWithBlock(v1);
    if (ObjCClassMetadata)
    {
      v16 = (objc_class *)swift_getObjCClassFromMetadata();
      TypeEncoding = method_getTypeEncoding((Method)v11);
      class_addMethod(v16, v10, v2, TypeEncoding);
      v18 = method_getTypeEncoding((Method)v11);
      class_replaceMethod(v16, v12, v2, v18);
      _Block_release(v1);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  v20 = method_getTypeEncoding((Method)v11);
  class_addMethod(0, v10, v2, v20);
  v21 = method_getTypeEncoding((Method)v11);
  class_replaceMethod(0, v12, v2, v21);
  _Block_release(v1);
  __break(1u);
}

uint64_t sub_1002291E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022922C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[17]);
  return swift_deallocObject(v0, 144, 7);
}

void sub_100229260(uint64_t a1)
{
  uint64_t v1;

  sub_100223430(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(void (**)(uint64_t, id))(v1 + 128));
}

uint64_t sub_100229270()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10022929C(uint64_t a1)
{
  uint64_t v1;

  sub_100223750(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1002292A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002292E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100229308()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v1, "drawViewHierarchyInRect:afterScreenUpdates:", 1);
}

uint64_t sub_100229344()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100229354(uint64_t a1)
{
  uint64_t v1;

  return sub_10004BF68(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10022935C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10022936C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100229374()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100229384(void *a1)
{
  uint64_t v1;

  sub_10022380C(a1, *(objc_method **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_10022938C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setHidden:", 1);
}

uint64_t sub_1002293A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002293CC()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "removeFromSuperview");
  sub_100225C30();
}

uint64_t sub_1002293F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_10119DCC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100229438(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100044B54(&qword_1011A7820);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002294A0()
{
  unint64_t result;

  result = qword_1011A7850;
  if (!qword_1011A7850)
  {
    result = swift_getWitnessTable(&unk_100EAFB8C, &type metadata for MultiDeviceTesterViewController.Device);
    atomic_store(result, (unint64_t *)&qword_1011A7850);
  }
  return result;
}

void sub_1002294E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002246EC(a1, a2, *(char **)(v2 + 16));
}

void sub_1002294EC(uint64_t a1)
{
  uint64_t v1;

  sub_100224F7C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002294F4()
{
  return sub_100229510(40);
}

void sub_1002294FC(uint64_t a1)
{
  uint64_t *v1;

  sub_100224D7C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100229508()
{
  return sub_100229510(122);
}

uint64_t sub_100229510(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

void sub_100229548()
{
  uint64_t v0;

  sub_1002256B8(v0 + 24);
  sub_100225C30();
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.AnchorPoint(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiDeviceTesterViewController.Device.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100229650 + 4 * byte_100EAFB27[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100229684 + 4 * byte_100EAFB22[v4]))();
}

uint64_t sub_100229684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022968C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100229694);
  return result;
}

uint64_t sub_1002296A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002296A8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1002296AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002296B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultiDeviceTesterViewController.Device.CodingKeys()
{
  return &type metadata for MultiDeviceTesterViewController.Device.CodingKeys;
}

unint64_t sub_1002296D4()
{
  unint64_t result;

  result = qword_1011A7858;
  if (!qword_1011A7858)
  {
    result = swift_getWitnessTable(&unk_100EAFC88, &type metadata for MultiDeviceTesterViewController.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011A7858);
  }
  return result;
}

unint64_t sub_10022971C()
{
  unint64_t result;

  result = qword_1011A7860;
  if (!qword_1011A7860)
  {
    result = swift_getWitnessTable("iq ", &type metadata for MultiDeviceTesterViewController.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011A7860);
  }
  return result;
}

unint64_t sub_100229764()
{
  unint64_t result;

  result = qword_1011A7868;
  if (!qword_1011A7868)
  {
    result = swift_getWitnessTable(&unk_100EAFBE8, &type metadata for MultiDeviceTesterViewController.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011A7868);
  }
  return result;
}

void sub_1002297E0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicJSCore13JSGridSection_uniformCellType;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicJSCore13JSGridSection_uniformCellType, v2, 0, 0);
  __asm { BR              X9 }
}

uint64_t sub_100229840()
{
  return 9;
}

uint64_t sub_1002299E4(uint64_t *a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t result;
  void (*v25)(unint64_t, char *, uint64_t);
  int v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  __n128 v49;
  os_log_type_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  __n128 v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  os_log_t v61;
  uint64_t v62;
  void (*v63)(char *, unint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = type metadata accessor for Logger(0);
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  __chkstk_darwin(v4);
  v66 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GenericMusicItem(0);
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v60 - v14;
  __chkstk_darwin(v16);
  v18 = (unint64_t)v60 - v17;
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v60 - v21;
  v23 = *a2;
  (*(void (**)(__n128))((swift_isaMask & *v23) + 0x250))(v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 48))(v8, 1, v9) == 1)return sub_10022AA98((uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(isUniquelyReferenced_nonNull_native + 32))(v22, v8, v9);
  v25 = *(void (**)(unint64_t, char *, uint64_t))(isUniquelyReferenced_nonNull_native + 16);
  v25(v18, v22, v9);
  v26 = (*(uint64_t (**)(unint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 88))(v18, v9);
  if (v26 == enum case for GenericMusicItem.album(_:))
    goto LABEL_4;
  v63 = (void (*)(char *, unint64_t, uint64_t))v25;
  v27 = 1;
  if (v26 == enum case for GenericMusicItem.artist(_:) || v26 == enum case for GenericMusicItem.curator(_:))
    goto LABEL_5;
  if (v26 == enum case for GenericMusicItem.genre(_:))
    goto LABEL_4;
  v27 = 6;
  if (v26 == enum case for GenericMusicItem.musicMovie(_:))
    goto LABEL_5;
  if (v26 == enum case for GenericMusicItem.musicVideo(_:))
    goto LABEL_5;
  v27 = 0;
  if (v26 == enum case for GenericMusicItem.playlist(_:) || v26 == enum case for GenericMusicItem.radioShow(_:))
    goto LABEL_5;
  if (v26 == enum case for GenericMusicItem.recordLabel(_:))
  {
    v27 = 1;
    goto LABEL_5;
  }
  if (v26 == enum case for GenericMusicItem.song(_:))
  {
LABEL_25:
    v27 = 4;
    goto LABEL_5;
  }
  if (v26 == enum case for GenericMusicItem.station(_:))
  {
    v27 = 2;
    goto LABEL_5;
  }
  v27 = 6;
  if (v26 != enum case for GenericMusicItem.tvEpisode(_:)
    && v26 != enum case for GenericMusicItem.tvSeason(_:)
    && v26 != enum case for GenericMusicItem.tvShow(_:))
  {
    if (v26 != enum case for GenericMusicItem.uploadedAudio(_:))
    {
      if (v26 != enum case for GenericMusicItem.uploadedVideo(_:))
      {
        if (v26 != enum case for GenericMusicItem.other(_:))
          goto LABEL_38;
        v63(v15, v18, v9);
        (*(void (**)(char *, uint64_t))(isUniquelyReferenced_nonNull_native + 96))(v15, v9);
        swift_bridgeObjectRelease(*((_QWORD *)v15 + 1));
        v43 = type metadata accessor for JSGridItemButton(0);
        if (!swift_dynamicCastClass(v23, v43))
          goto LABEL_38;
        v27 = 8;
      }
      goto LABEL_5;
    }
    goto LABEL_25;
  }
  while (1)
  {
LABEL_5:
    v12 = *(char **)(isUniquelyReferenced_nonNull_native + 8);
    ((void (*)(unint64_t, uint64_t))v12)(v18, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v69 = *a1;
    v28 = v69;
    *a1 = 0x8000000000000000;
    v18 = sub_10079C82C(v27);
    v30 = *(_QWORD *)(v28 + 16);
    v31 = (v29 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
    {
      __break(1u);
      goto LABEL_37;
    }
    v33 = v29;
    if (*(_QWORD *)(v28 + 24) < v32)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1007A7738();
      v28 = v69;
    }
LABEL_20:
    v36 = *a1;
    *a1 = v28;
    swift_bridgeObjectRelease(v36);
    v37 = (_QWORD *)*a1;
    swift_bridgeObjectRetain();
    if ((v33 & 1) == 0)
      sub_1005EF770(v18, v27, 0, v37);
    v38 = v37[7];
    v39 = swift_bridgeObjectRelease(v37);
    v40 = *(_QWORD *)(v38 + 8 * v18);
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (!v41)
    {
      *(_QWORD *)(v38 + 8 * v18) = v42;
      return ((uint64_t (*)(char *, uint64_t, __n128))v12)(v22, v9, v39);
    }
LABEL_37:
    __break(1u);
LABEL_38:
    v44 = Logger.musicKit.unsafeMutableAddressor();
    v46 = v64;
    v45 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v66, v44, v65);
    v47 = ((uint64_t (*)(char *, char *, uint64_t))v63)(v12, v22, v9);
    v48 = Logger.logObject.getter(v47);
    v50 = static os_log_type_t.fault.getter(v49);
    LODWORD(v63) = v50;
    if (os_log_type_enabled(v48, v50))
    {
      v51 = swift_slowAlloc(22, -1);
      v62 = swift_slowAlloc(64, -1);
      v69 = v62;
      *(_DWORD *)v51 = 136446466;
      v61 = v48;
      v67 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
      *(_WORD *)(v51 + 12) = 2082;
      v60[1] = v51 + 14;
      v52 = sub_1000FDBCC();
      v53 = dispatch thunk of CustomStringConvertible.description.getter(v9, v52);
      v55 = v54;
      v67 = sub_100322200(v53, v54, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
      v56 = swift_bridgeObjectRelease(v55);
      (*(void (**)(char *, uint64_t, __n128))(isUniquelyReferenced_nonNull_native + 8))(v12, v9, v56);
      v57 = v61;
      _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v63, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v51, 0x16u);
      v58 = v62;
      swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v51, -1, -1);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v65);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(isUniquelyReferenced_nonNull_native + 8))(v12, v9);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v66, v45);
    }
LABEL_4:
    v27 = 0;
  }
  sub_1007A10C4(v32, isUniquelyReferenced_nonNull_native);
  v28 = v69;
  v34 = sub_10079C82C(v27);
  if ((v33 & 1) == (v35 & 1))
  {
    v18 = v34;
    goto LABEL_20;
  }
  v59 = sub_100007E8C(&qword_1011A7870);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v59);
  __break(1u);
  return result;
}

uint64_t sub_10022A068(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = a1 + 64;
  v2 = *(_BYTE *)(a1 + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(a1 + 64);
  if (!v5)
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 > 6)
    {
      v9 = (unint64_t)(v3 + 63) >> 6;
      v22 = *(_QWORD *)(a1 + 72);
      if (v22)
      {
        v6 = 1;
LABEL_32:
        v8 = (v22 - 1) & v22;
        v7 = __clz(__rbit64(v22)) + (v6 << 6);
        goto LABEL_5;
      }
      if (v6 >= 8)
      {
        v22 = *(_QWORD *)(a1 + 80);
        if (v22)
        {
          v6 = 2;
          goto LABEL_32;
        }
        v22 = *(_QWORD *)(a1 + 88);
        if (v22)
        {
          v6 = 3;
          goto LABEL_32;
        }
LABEL_39:
        if (v6 >= 9)
        {
          v22 = *(_QWORD *)(a1 + 96);
          if (v22)
          {
            v6 = 4;
          }
          else
          {
            v22 = *(_QWORD *)(a1 + 104);
            if (!v22)
              goto LABEL_46;
            v6 = 5;
          }
          goto LABEL_32;
        }
      }
    }
    return 10;
  }
  v6 = 0;
  v7 = __clz(__rbit64(v5));
  v8 = (v5 - 1) & v5;
  v9 = (unint64_t)(v3 + 63) >> 6;
LABEL_5:
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(v10 + v7);
  v13 = *(_QWORD *)(v11 + 8 * v7);
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v6 << 6);
      goto LABEL_7;
    }
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v18 >= v9)
      return v12;
    v19 = *(_QWORD *)(v1 + 8 * v18);
    ++v6;
    if (!v19)
    {
      v6 = v18 + 1;
      if (v18 + 1 >= v9)
        return v12;
      v19 = *(_QWORD *)(v1 + 8 * v6);
      if (!v19)
      {
        v6 = v18 + 2;
        if (v18 + 2 >= v9)
          return v12;
        v19 = *(_QWORD *)(v1 + 8 * v6);
        if (!v19)
        {
          v6 = v18 + 3;
          if (v18 + 3 >= v9)
            return v12;
          v19 = *(_QWORD *)(v1 + 8 * v6);
          if (!v19)
            break;
        }
      }
    }
LABEL_27:
    v8 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_7:
    v16 = *(_BYTE *)(v10 + v15);
    v17 = *(_QWORD *)(v11 + 8 * v15);
    if (v13 < v17)
      v12 = v16;
    if (v13 <= v17)
      v13 = v17;
  }
  v20 = v18 + 4;
  if (v20 >= v9)
    return v12;
  v19 = *(_QWORD *)(v1 + 8 * v20);
  if (v19)
  {
    v6 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v6 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v6 >= v9)
      return v12;
    v19 = *(_QWORD *)(v1 + 8 * v6);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
  __break(1u);
LABEL_46:
  v23 = 0;
  v24 = 6;
  if (v9 > 6)
    v24 = v9;
  while (v24 - 6 != v23)
  {
    v22 = *(_QWORD *)(a1 + 112 + 8 * v23++);
    if (v22)
    {
      v6 = v23 + 5;
      goto LABEL_32;
    }
  }
  return 10;
}

void sub_10022A288()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_uniformCellType;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_uniformCellType, v2, 0, 0);
  __asm { BR              X9 }
}

uint64_t sub_10022A2E8()
{
  return 3;
}

uint64_t sub_10022A4A4(uint64_t *a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  void (*v23)(char *, char *, uint64_t);
  int v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t);
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  __n128 v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  __n128 v47;
  os_log_type_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t *v59;
  os_log_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  v64 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v8);
  v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GenericMusicItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v58 - v16;
  v19 = __chkstk_darwin(v18);
  v21 = (char *)v58 - v20;
  (*(void (**)(__n128))((swift_isaMask & **a2) + 0x250))(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_10022AA98((uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v10, v11);
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v23(v17, v21, v11);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v24 == enum case for GenericMusicItem.album(_:))
    goto LABEL_4;
  if (v24 == enum case for GenericMusicItem.artist(_:) || v24 == enum case for GenericMusicItem.curator(_:))
    goto LABEL_10;
  if (v24 == enum case for GenericMusicItem.genre(_:))
    goto LABEL_4;
  LOBYTE(v25) = 6;
  if (v24 == enum case for GenericMusicItem.musicMovie(_:) || v24 == enum case for GenericMusicItem.musicVideo(_:))
    goto LABEL_11;
  if (v24 == enum case for GenericMusicItem.playlist(_:))
  {
    LOBYTE(v25) = 3;
    goto LABEL_11;
  }
  if (v24 == enum case for GenericMusicItem.radioShow(_:))
  {
LABEL_4:
    LOBYTE(v25) = 0;
    goto LABEL_11;
  }
  if (v24 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_10:
    LOBYTE(v25) = 1;
    goto LABEL_11;
  }
  if (v24 == enum case for GenericMusicItem.song(_:))
  {
LABEL_29:
    LOBYTE(v25) = 4;
    goto LABEL_11;
  }
  if (v24 == enum case for GenericMusicItem.station(_:))
  {
    LOBYTE(v25) = 2;
    goto LABEL_11;
  }
  if (v24 != enum case for GenericMusicItem.tvEpisode(_:)
    && v24 != enum case for GenericMusicItem.tvSeason(_:)
    && v24 != enum case for GenericMusicItem.tvShow(_:))
  {
    if (v24 == enum case for GenericMusicItem.uploadedAudio(_:))
      goto LABEL_29;
    if (v24 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      v43 = Logger.musicKit.unsafeMutableAddressor();
      v44 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v7, v43, v63);
      v45 = ((uint64_t (*)(char *, char *, uint64_t))v23)(v14, v21, v11);
      v46 = Logger.logObject.getter(v45);
      v48 = static os_log_type_t.fault.getter(v47);
      v62 = v48;
      if (os_log_type_enabled(v46, v48))
      {
        v49 = swift_slowAlloc(22, -1);
        v61 = swift_slowAlloc(64, -1);
        v67 = v61;
        *(_DWORD *)v49 = 136446466;
        v60 = v46;
        v65 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v67);
        v59 = &v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
        *(_WORD *)(v49 + 12) = 2082;
        v58[1] = v49 + 14;
        v50 = sub_1000FDBCC();
        v51 = dispatch thunk of CustomStringConvertible.description.getter(v11, v50);
        v53 = v52;
        v65 = sub_100322200(v51, v52, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v59);
        v54 = swift_bridgeObjectRelease(v53);
        (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v54);
        v55 = v60;
        _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v62, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v49, 0x16u);
        v56 = v61;
        swift_arrayDestroy(v61, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v49, -1, -1);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v63);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v44);
      }
      goto LABEL_4;
    }
  }
LABEL_11:
  v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27(v17, v11);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  v67 = *a1;
  v29 = v67;
  *a1 = 0x8000000000000000;
  v31 = sub_10079C82C(v25);
  v32 = *(_QWORD *)(v29 + 16);
  v33 = (v30 & 1) == 0;
  v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
    goto LABEL_40;
  }
  LOBYTE(v12) = v30;
  if (*(_QWORD *)(v29 + 24) >= v34)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_41;
  }
  else
  {
    sub_1007A10C4(v34, isUniquelyReferenced_nonNull_native);
    v29 = v67;
    v35 = sub_10079C82C(v25);
    if ((v12 & 1) != (v36 & 1))
    {
      v57 = sub_100007E8C(&qword_1011A7870);
      result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v57);
      __break(1u);
      return result;
    }
    v31 = v35;
  }
  while (1)
  {
    v37 = *a1;
    *a1 = v29;
    swift_bridgeObjectRelease(v37);
    v38 = (_QWORD *)*a1;
    swift_bridgeObjectRetain();
    if ((v12 & 1) == 0)
      sub_1005EF770(v31, v25, 0, v38);
    v25 = v38[7];
    v39 = swift_bridgeObjectRelease(v38);
    v40 = *(_QWORD *)(v25 + 8 * v31);
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (!v41)
      break;
LABEL_40:
    __break(1u);
LABEL_41:
    sub_1007A7738();
    v29 = v67;
  }
  *(_QWORD *)(v25 + 8 * v31) = v42;
  return ((uint64_t (*)(char *, uint64_t, __n128))v27)(v21, v11, v39);
}

uint64_t sub_10022AA98(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s7DisplayOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_10022AB24 + 4 * byte_100EB0225[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_10022AB58 + 4 * byte_100EB0220[v4]))();
}

uint64_t sub_10022AB58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022AB60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10022AB68);
  return result;
}

uint64_t sub_10022AB74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10022AB7CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_10022AB80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022AB88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7DisplayOMa()
{
  return &_s7DisplayON;
}

unint64_t sub_10022ABA8()
{
  unint64_t result;

  result = qword_1011A7878;
  if (!qword_1011A7878)
  {
    result = swift_getWitnessTable(&unk_100EB0274, &_s7DisplayON);
    atomic_store(result, (unint64_t *)&qword_1011A7878);
  }
  return result;
}

id sub_10022ABEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSArray v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  unint64_t v18;
  id v19;
  Class isa;
  Class v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Class v34;
  id v35;
  unint64_t v36;
  id v37;
  Class v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  Class v56;
  _BYTE v57[56];
  _BYTE v58[80];
  _BYTE v59[176];

  v2 = sub_10004A07C(0, (unint64_t *)&unk_1011A92E0, MPModelPlaylist_ptr);
  if (swift_dynamicCastMetatype(a1, v2))
  {
    v3 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v4 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v4 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistLibraryAdded);
    *(_QWORD *)(v4 + 40) = v5;
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    v7 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v6.super.isa);
LABEL_3:
    v8 = v7;
LABEL_4:

    return v8;
  }
  v9 = sub_10004A07C(0, (unint64_t *)&unk_10119E540, MPModelSong_ptr);
  if (swift_dynamicCastMetatype(a1, v9))
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v11 = swift_allocObject(v10, 80, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100EA7AC0;
    *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongLibraryAdded);
    *(_QWORD *)(v11 + 40) = v12;
    *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
    *(_QWORD *)(v11 + 56) = v13;
    *(_QWORD *)(v11 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtistUploadedContent);
    *(_QWORD *)(v11 + 72) = v14;
    v15 = sub_100007E8C((uint64_t *)&unk_10119E570);
    inited = swift_initStackObject(v15, v57);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
    *(_QWORD *)(inited + 40) = v17;
    *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
    v18 = sub_1000422C4(inited);
    v19 = objc_allocWithZone((Class)MPPropertySet);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
    v21 = Dictionary._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v19, "initWithProperties:relationships:", isa, v21, swift_bridgeObjectRelease(v18).n128_f64[0]);

    return v8;
  }
  v23 = sub_10004A07C(0, (unint64_t *)&unk_1011A92F0, MPModelTVEpisode_ptr);
  if (swift_dynamicCastMetatype(a1, v23))
  {
    v24 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v25 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v25 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeLibraryAdded);
    *(_QWORD *)(v25 + 40) = v26;
    v27 = sub_100007E8C((uint64_t *)&unk_10119E570);
    v28 = swift_initStackObject(v27, v58);
    *(_OWORD *)(v28 + 16) = xmmword_100EA7A80;
    *(_QWORD *)(v28 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVEpisodeSeason);
    *(_QWORD *)(v28 + 40) = v29;
    v30 = (void *)objc_opt_self(MPPropertySet);
    *(_QWORD *)(v28 + 48) = objc_msgSend(v30, "emptyPropertySet");
    *(_QWORD *)(v28 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVEpisodeShow);
    *(_QWORD *)(v28 + 64) = v31;
    v32 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v32 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v32 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
    *(_QWORD *)(v32 + 40) = v33;
    v34 = Array._bridgeToObjectiveC()().super.isa;
    v35 = objc_msgSend(v30, "propertySetWithProperties:", v34, swift_bridgeObjectRelease(v32).n128_f64[0]);

    *(_QWORD *)(v28 + 72) = v35;
    v36 = sub_1000422C4(v28);
    v37 = objc_allocWithZone((Class)MPPropertySet);
    v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v25);
    sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
    v6.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v37, "initWithProperties:relationships:", v38, v6.super.isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

    goto LABEL_4;
  }
  v39 = sub_10004A07C(0, (unint64_t *)&unk_10119E520, MPModelMovie_ptr);
  if (swift_dynamicCastMetatype(a1, v39))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v41 = swift_allocObject(v40, 48, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v41 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieLibraryAdded);
    *(_QWORD *)(v41 + 40) = v42;
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v41);
    v7 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v6.super.isa);
    goto LABEL_3;
  }
  v43 = sub_10004A07C(0, &qword_1011A7888, MPModelGenericObject_ptr);
  if (swift_dynamicCastMetatype(a1, v43))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_10119E570);
    v45 = swift_initStackObject(v44, v59);
    *(_OWORD *)(v45 + 16) = xmmword_100EB02A0;
    *(_QWORD *)(v45 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
    *(_QWORD *)(v45 + 40) = v46;
    *(_QWORD *)(v45 + 48) = sub_10022ABEC(v2);
    *(_QWORD *)(v45 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericArtist);
    *(_QWORD *)(v45 + 64) = v47;
    v48 = sub_10004A07C(0, &qword_10119E508, MPModelArtist_ptr);
    *(_QWORD *)(v45 + 72) = sub_10022ABEC(v48);
    *(_QWORD *)(v45 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
    *(_QWORD *)(v45 + 88) = v49;
    v50 = sub_10004A07C(0, &qword_10119E500, MPModelAlbum_ptr);
    *(_QWORD *)(v45 + 96) = sub_10022ABEC(v50);
    *(_QWORD *)(v45 + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
    *(_QWORD *)(v45 + 112) = v51;
    *(_QWORD *)(v45 + 120) = sub_10022ABEC(v9);
    *(_QWORD *)(v45 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericTVEpisode);
    *(_QWORD *)(v45 + 136) = v52;
    *(_QWORD *)(v45 + 144) = sub_10022ABEC(v23);
    *(_QWORD *)(v45 + 152) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericMovie);
    *(_QWORD *)(v45 + 160) = v53;
    *(_QWORD *)(v45 + 168) = sub_10022ABEC(v39);
    v54 = sub_1000422C4(v45);
    v55 = objc_allocWithZone((Class)MPPropertySet);
    v56 = Array._bridgeToObjectiveC()().super.isa;
    sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
    v6.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v55, "initWithProperties:relationships:", v56, v6.super.isa, swift_bridgeObjectRelease(v54).n128_f64[0]);

    goto LABEL_4;
  }
  return objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
}

void sub_10022B2EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint8_t *v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint8_t *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  __n128 v68;
  uint64_t *v69;
  char *v70;
  id v71;
  NSURL *v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  char *v80;
  NSObject *v81;
  os_log_type_t v82;
  BOOL v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t);
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  uint64_t v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  int v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t KeyPath;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  void *v143;
  unint64_t v144;
  uint64_t v145;
  _OWORD *v146;
  void *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  int *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t);
  void (*v174)(char *, uint64_t, uint64_t);
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  void *v180;
  char *v181;
  id v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  void *v187;
  char *v188;
  id v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  int *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  id v231;
  id v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  _QWORD *v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  char *v278;
  char *v279;
  _QWORD v280[2];
  uint64_t v281;
  unint64_t v282;
  __int128 v283;
  __int128 v284;

  v263 = a2;
  v236 = type metadata accessor for Album(0);
  v235 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin(v236);
  v239 = (char *)&v229 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for Song(0);
  v273 = *(_QWORD *)(v243 - 8);
  __chkstk_darwin(v243);
  v244 = (char *)&v229 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011D1410);
  __chkstk_darwin(v7);
  v237 = (char *)&v229 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = type metadata accessor for TVShow(0);
  v240 = *(_QWORD *)(v241 - 8);
  __chkstk_darwin(v241);
  v238 = (char *)&v229 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v229 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v251 = (char *)&v229 - v14;
  v247 = type metadata accessor for Playlist(0);
  v246 = *(_QWORD *)(v247 - 8);
  __chkstk_darwin(v247);
  v245 = (char *)&v229 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v16);
  v262 = (char *)&v229 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v265 = type metadata accessor for Library.Context(0);
  v248 = *(_QWORD *)(v265 - 8);
  __chkstk_darwin(v265);
  v253 = (uint64_t *)((char *)&v229 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v257 = sub_100007E8C(&qword_10119D2D0);
  v256 = *(_QWORD *)(v257 - 8);
  __chkstk_darwin(v257);
  v255 = (char *)&v229 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = sub_100007E8C(&qword_1011A7880);
  v258 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v260 = (uint64_t)&v229 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v259 = v20;
  __chkstk_darwin(v21);
  v261 = (char *)&v229 - v22;
  v270 = type metadata accessor for MusicMovie(0);
  v269 = *(_QWORD *)(v270 - 8);
  __chkstk_darwin(v270);
  v268 = (char *)&v229 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v267);
  v264 = (uint64_t)&v229 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v271 = (uint64_t)&v229 - v26;
  __chkstk_darwin(v27);
  v242 = (char *)&v229 - v28;
  __chkstk_darwin(v29);
  v272 = (uint64_t)&v229 - v30;
  __chkstk_darwin(v31);
  v278 = (char *)&v229 - v32;
  __chkstk_darwin(v33);
  v266 = (uint64_t)&v229 - v34;
  __chkstk_darwin(v35);
  v274 = (uint64_t)&v229 - v36;
  __chkstk_darwin(v37);
  v39 = (char *)&v229 - v38;
  v40 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v40);
  v279 = (char *)&v229 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for URL(0);
  v43 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v45 = (char *)&v229 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119B890 != -1)
    swift_once(&qword_10119B890, sub_100084544);
  v46 = type metadata accessor for Logger(0);
  v47 = sub_100048B14(v46, (uint64_t)qword_10124C748);
  v48 = a1;
  v275 = v47;
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.default.getter(v49);
  v51 = os_log_type_enabled(v49, v50);
  v252 = a3;
  v250 = v12;
  v249 = v10;
  if (v51)
  {
    v52 = swift_slowAlloc(12, -1);
    v276 = v39;
    v53 = (uint8_t *)v52;
    v234 = (char *)swift_slowAlloc(8, -1);
    *(_DWORD *)v53 = 138543362;
    v281 = (uint64_t)v48;
    v54 = v48;
    v277 = v43;
    v55 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v281, &v282);
    v56 = v234;
    *(_QWORD *)v234 = v48;

    v43 = v277;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Received Spotlight Searchable Item User Activity: %{public}@", v53, 0xCu);
    v57 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v56, 1, v57);
    swift_slowDealloc(v56, -1, -1);
    v58 = v53;
    v39 = v276;
    swift_slowDealloc(v58, -1, -1);

  }
  else
  {

  }
  v59 = objc_msgSend(v48, "userInfo");
  if (!v59)
  {
    v283 = 0u;
    v284 = 0u;
LABEL_19:
    v69 = &qword_10119DCC0;
    v70 = (char *)&v283;
    goto LABEL_20;
  }
  v60 = v59;
  v61 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v59, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v280[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActivityIdentifier);
  v280[1] = v62;
  AnyHashable.init<A>(_:)(v280, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v61 + 16) && (v63 = sub_10079C294((uint64_t)&v281), (v64 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v61 + 56) + 32 * v63, (uint64_t)&v283);
  }
  else
  {
    v283 = 0u;
    v284 = 0u;
  }
  sub_10004FF2C((uint64_t)&v281);
  swift_bridgeObjectRelease(v61);
  if (!*((_QWORD *)&v284 + 1))
    goto LABEL_19;
  if ((swift_dynamicCast(&v281, &v283, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    return;
  v65 = v282;
  v66 = HIBYTE(v282) & 0xF;
  if ((v282 & 0x2000000000000000) == 0)
    v66 = v281 & 0xFFFFFFFFFFFFLL;
  if (!v66)
  {
    swift_bridgeObjectRelease(v282);
    return;
  }
  v67 = v279;
  URL.init(string:)(v281, v282);
  v68 = swift_bridgeObjectRelease(v65);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v43 + 48))(v67, 1, v42, v68) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v45, v67, v42);
    v71 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
    if (!v71)
    {
      __break(1u);
      return;
    }
    v73 = v71;
    URL._bridgeToObjectiveC()(v72);
    v75 = v74;
    v76 = objc_msgSend(v73, "entityWithLibraryURL:", v74);

    if (!v76)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v42);
      return;
    }
    v234 = v45;
    v77 = sub_10004A07C(0, &qword_1011A7888, MPModelGenericObject_ptr);
    v231 = sub_10022ABEC(v77);
    v232 = objc_msgSend(v76, "genericModelObjectWithRequestedProperties:");
    v78 = objc_msgSend(v232, "innermostModelObject");
    GenericMusicItem.init(_:)();
    v79 = v274;
    sub_10004A160((uint64_t)v39, v274, (uint64_t *)&unk_1011A20D0);
    v80 = (char *)v78;
    v81 = Logger.logObject.getter(v80);
    v82 = static os_log_type_t.default.getter(v81);
    v83 = os_log_type_enabled(v81, v82);
    v233 = v42;
    v277 = v43;
    v230 = v76;
    v279 = v80;
    if (v83)
    {
      v84 = swift_slowAlloc(22, -1);
      v85 = (_QWORD *)swift_slowAlloc(8, -1);
      v229 = swift_slowAlloc(32, -1);
      v281 = v229;
      *(_DWORD *)v84 = 138543618;
      *(_QWORD *)&v283 = v80;
      v86 = v80;
      v276 = v39;
      v87 = v86;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v283, (char *)&v283 + 8);
      v88 = v85;
      *v85 = v80;

      *(_WORD *)(v84 + 12) = 2082;
      v89 = v274;
      v90 = v266;
      sub_10004A160(v274, v266, (uint64_t *)&unk_1011A20D0);
      v91 = String.init<A>(describing:)(v90, v267);
      v93 = v92;
      *(_QWORD *)&v283 = sub_100322200(v91, v92, &v281);
      v76 = v230;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v283, (char *)&v283 + 8);
      v94 = v93;
      v39 = v276;
      swift_bridgeObjectRelease(v94);
      sub_10004FF60(v89, (uint64_t *)&unk_1011A20D0);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "MPModelObject=%{public}@ -> GenericMusicItem= %{public}s", (uint8_t *)v84, 0x16u);
      v95 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v88, 1, v95);
      swift_slowDealloc(v88, -1, -1);
      v96 = v229;
      swift_arrayDestroy(v229, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v96, -1, -1);
      swift_slowDealloc(v84, -1, -1);
    }
    else
    {

      sub_10004FF60(v79, (uint64_t *)&unk_1011A20D0);
    }

    v97 = v273;
    v98 = (uint64_t)v278;
    sub_10004A160((uint64_t)v39, (uint64_t)v278, (uint64_t *)&unk_1011A20D0);
    v99 = type metadata accessor for GenericMusicItem(0);
    v100 = *(_QWORD *)(v99 - 8);
    v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
    v102 = v101(v98, 1, v99);
    v103 = v272;
    if (v102 == 1)
      goto LABEL_30;
    sub_10004A160((uint64_t)v278, v272, (uint64_t *)&unk_1011A20D0);
    v116 = *(uint64_t (**)(uint64_t, uint64_t))(v100 + 88);
    v117 = v116(v103, v99);
    if (v117 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v100 + 96))(v103, v99);
      v118 = v103;
      v119 = v270;
      (*(void (**)(char *, uint64_t, uint64_t))(v269 + 32))(v268, v118, v270);
      v120 = v253;
      Library.Context.init()(v253);
      v121 = type metadata accessor for TitledSection(0);
      v122 = sub_10022D100();
      v123 = v255;
      MusicLibrarySectionedRequest.init()(v121, v119, &protocol witness table for TitledSection, v122);
      swift_retain();
      v124 = v257;
      MusicLibrarySectionedRequest.library.setter(v125, v257);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v120 + *(int *)(v265 + 48)), v124);
      KeyPath = swift_getKeyPath(&unk_100EB0308);
      v127 = MusicMovie.id.getter(KeyPath);
      v128 = v99;
      v130 = v129;
      v281 = v127;
      v282 = v129;
      MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)(KeyPath, &v281, v124, &protocol witness table for MusicItemID);
      swift_bridgeObjectRelease(v130);
      swift_release();
      sub_10022D14C((uint64_t)v120);
      v131 = v256;
      v132 = (uint64_t)v261;
      (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v261, v123, v124);
      v133 = v254;
      v134 = v132 + *(int *)(v254 + 36);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v134, 1, 1, v128);
      v135 = sub_100007E8C(&qword_10119F7C8);
      swift_storeEnumTagMultiPayload(v134, v135, 0);
      *(_BYTE *)(v132 + *(int *)(v133 + 40)) = 2;
      v136.n128_f64[0] = (*(double (**)(char *, uint64_t))(v131 + 8))(v123, v124);
      v137 = (uint64_t)v262;
      static TaskPriority.userInitiated.getter(v136);
      v138 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v137, 0, 1, v138);
      v139 = v260;
      sub_10004A160(v132, v260, &qword_1011A7880);
      v140 = *(unsigned __int8 *)(v258 + 80);
      v141 = (v140 + 32) & ~v140;
      v142 = (v259 + v141 + 7) & 0xFFFFFFFFFFFFFFF8;
      v143 = v76;
      v144 = (v142 + 39) & 0xFFFFFFFFFFFFFFF8;
      v145 = swift_allocObject(&unk_1010B6EB0, v144 + 8, v140 | 7);
      *(_QWORD *)(v145 + 16) = 0;
      *(_QWORD *)(v145 + 24) = 0;
      sub_10022D2C4(v139, v145 + v141);
      v146 = (_OWORD *)(v145 + v142);
      *v146 = 0u;
      v146[1] = 0u;
      v147 = v263;
      *(_QWORD *)(v145 + v144) = v263;
      v148 = v147;
      sub_1000E8908(v137, (uint64_t)&unk_1011A7890, v145);
      swift_release();
      sub_10004FF60(v137, (uint64_t *)&unk_1011A13B0);

      sub_10004FF60(v132, &qword_1011A7880);
      (*(void (**)(char *, uint64_t))(v269 + 8))(v268, v270);
    }
    else
    {
      if (v117 != enum case for GenericMusicItem.playlist(_:))
      {
        if (v117 == enum case for GenericMusicItem.song(_:))
        {
          v173 = *(void (**)(uint64_t, uint64_t))(v100 + 96);
          v275 = v99;
          v173(v103, v99);
          v174 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 32);
          v175 = v97;
          v176 = v244;
          v177 = v243;
          v174(v244, v103, v243);
          objc_opt_self(MPModelSong);
          v178 = v279;
          v179 = swift_dynamicCastObjCClass(v279);
          if (!v179)
          {

            (*(void (**)(char *, uint64_t))(v175 + 8))(v176, v177);
            goto LABEL_38;
          }
          v180 = (void *)v179;
          v181 = v178;
          v182 = objc_msgSend(v180, "album");
          if (!v182)
          {

            (*(void (**)(char *, uint64_t))(v273 + 8))(v244, v177);
            goto LABEL_38;
          }
          v183 = (char *)v182;
          v184 = (uint64_t)v242;
          GenericMusicItem.init(_:)();
          v99 = v275;
          if (v101(v184, 1, v275) == 1)
          {

            (*(void (**)(char *, uint64_t))(v273 + 8))(v244, v177);
            sub_10004FF60((uint64_t)v39, (uint64_t *)&unk_1011A20D0);
            (*(void (**)(char *, uint64_t))(v277 + 8))(v234, v233);
            sub_10004FF60(v184, (uint64_t *)&unk_1011A20D0);
            goto LABEL_43;
          }
          v279 = v183;
          v276 = v39;
          v195 = v116(v184, v99);
          v196 = v277;
          v197 = v244;
          if (v195 == enum case for GenericMusicItem.album(_:))
          {
            v173(v184, v99);
            v198 = v235;
            v199 = v239;
            v200 = v236;
            (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v239, v184, v236);
            v201 = (int *)sub_100007E8C(&qword_1011C5BA0);
            v202 = (uint64_t)v251;
            v203 = &v251[v201[12]];
            v204 = &v251[v201[16]];
            v205 = v201[20];
            (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v251, v199, v200);
            Library.Context.init()(v203);
            v206 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v203, 0, 1, v265);
            *(_QWORD *)v204 = Song.id.getter(v206);
            *((_QWORD *)v204 + 1) = v207;
            *(_OWORD *)(v202 + v205) = xmmword_100EAE4D0;
            v208 = type metadata accessor for NavigationDestinationItem(0);
            swift_storeEnumTagMultiPayload(v202, v208, 1);
            v209 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 56))(v202, 0, 1, v208);
            __chkstk_darwin(v209);
            v210 = v249;
            *(&v229 - 2) = v249;
            v211 = swift_getKeyPath(&unk_100EB02B0);
            __chkstk_darwin(v211);
            *(&v229 - 2) = v210;
            v212 = swift_getKeyPath(&unk_100EB02E8);
            v213 = v197;
            v214 = (uint64_t)v250;
            sub_10004A160(v202, (uint64_t)v250, &qword_1011A3CF0);
            v215 = v252;
            swift_retain();
            static Published.subscript.setter(v214, v215, v211, v212);
            sub_10004FF60(v202, &qword_1011A3CF0);

            (*(void (**)(char *, uint64_t))(v198 + 8))(v239, v200);
            (*(void (**)(char *, uint64_t))(v273 + 8))(v213, v243);
            v149 = (uint64_t)v276;
            goto LABEL_41;
          }

          (*(void (**)(char *, uint64_t))(v273 + 8))(v197, v177);
          sub_10004FF60((uint64_t)v276, (uint64_t *)&unk_1011A20D0);
          (*(void (**)(char *, uint64_t))(v196 + 8))(v234, v233);
          v170 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
          v171 = v184;
        }
        else
        {
          if (v117 != enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v103, v99);
LABEL_30:
            v104 = v99;
            v105 = v271;
            v106 = sub_10004A160((uint64_t)v39, v271, (uint64_t *)&unk_1011A20D0);
            v107 = Logger.logObject.getter(v106);
            v108 = (uint64_t)v39;
            v109 = static os_log_type_t.default.getter(v107);
            if (os_log_type_enabled(v107, v109))
            {
              v276 = (char *)v108;
              v110 = (uint8_t *)swift_slowAlloc(12, -1);
              v111 = swift_slowAlloc(32, -1);
              v281 = v111;
              *(_DWORD *)v110 = 136446210;
              v112 = v105;
              v113 = v264;
              sub_10004A160(v112, v264, (uint64_t *)&unk_1011A20D0);
              if (v101(v113, 1, v104) == 1)
              {
                sub_10004FF60(v113, (uint64_t *)&unk_1011A20D0);
                v114 = 0;
                v115 = 0;
              }
              else
              {
                v165 = v113;
                v114 = GenericMusicItem.description.getter();
                v115 = v166;
                (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v165, v104);
              }
              v167 = Optional<A>.description.getter(v114, v115);
              v169 = v168;
              swift_bridgeObjectRelease(v115);
              *(_QWORD *)&v283 = sub_100322200(v167, v169, &v281);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v283, (char *)&v283 + 8);
              swift_bridgeObjectRelease(v169);
              sub_10004FF60(v271, (uint64_t *)&unk_1011A20D0);
              _os_log_impl((void *)&_mh_execute_header, v107, v109, "Item not handled: %{public}s", v110, 0xCu);
              swift_arrayDestroy(v111, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v111, -1, -1);
              swift_slowDealloc(v110, -1, -1);

              v149 = (uint64_t)v276;
            }
            else
            {

              sub_10004FF60(v105, (uint64_t *)&unk_1011A20D0);
              v149 = v108;
            }
            goto LABEL_41;
          }
          objc_opt_self(MPModelTVEpisode);
          v185 = v279;
          v186 = swift_dynamicCastObjCClass(v279);
          if (v186)
          {
            v187 = (void *)v186;
            v276 = v39;
            v188 = v185;
            v189 = objc_msgSend(v187, "show");
            v190 = v277;
            if (v189)
            {
              v275 = v99;
              v191 = v189;
              v192 = (uint64_t)v237;
              v193 = v241;
              dispatch thunk of LegacyModelObjectConvertible.init(_:)(v191, v241, &protocol witness table for TVShow);
              v194 = v240;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48))(v192, 1, v193) != 1)
              {
                v216 = v238;
                (*(void (**)(char *, uint64_t, uint64_t))(v194 + 32))(v238, v192, v193);
                v217 = sub_100007E8C(&qword_10119ED38);
                v218 = v194;
                v219 = *(int *)(v217 + 48);
                v220 = (uint64_t)v251;
                (*(void (**)(char *, char *, uint64_t))(v218 + 16))(v251, v216, v193);
                v221 = _s14TVEpisodesViewV10DataSourceOMa(0);
                swift_storeEnumTagMultiPayload(v220, v221, 0);
                *(_OWORD *)(v220 + v219) = xmmword_100EAE4D0;
                v222 = type metadata accessor for NavigationDestinationItem(0);
                swift_storeEnumTagMultiPayload(v220, v222, 6);
                v223 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 56))(v220, 0, 1, v222);
                __chkstk_darwin(v223);
                v224 = v249;
                *(&v229 - 2) = v249;
                v225 = swift_getKeyPath(&unk_100EB02B0);
                __chkstk_darwin(v225);
                *(&v229 - 2) = v224;
                v226 = swift_getKeyPath(&unk_100EB02E8);
                v227 = (uint64_t)v250;
                sub_10004A160(v220, (uint64_t)v250, &qword_1011A3CF0);
                v228 = v252;
                swift_retain();
                static Published.subscript.setter(v227, v228, v225, v226);
                sub_10004FF60(v220, &qword_1011A3CF0);

                (*(void (**)(char *, uint64_t))(v240 + 8))(v238, v241);
                sub_10004FF60((uint64_t)v276, (uint64_t *)&unk_1011A20D0);
                (*(void (**)(char *, uint64_t))(v277 + 8))(v234, v233);
                (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v272, v275);
                goto LABEL_43;
              }

              sub_10004FF60((uint64_t)v276, (uint64_t *)&unk_1011A20D0);
              (*(void (**)(char *, uint64_t))(v190 + 8))(v234, v233);
              sub_10004FF60(v192, (uint64_t *)&unk_1011D1410);
              v99 = v275;
            }
            else
            {

              sub_10004FF60((uint64_t)v276, (uint64_t *)&unk_1011A20D0);
              (*(void (**)(char *, uint64_t))(v190 + 8))(v234, v233);
            }
          }
          else
          {

            sub_10004FF60((uint64_t)v39, (uint64_t *)&unk_1011A20D0);
            (*(void (**)(char *, uint64_t))(v277 + 8))(v234, v233);
          }
          v170 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
          v171 = v272;
        }
        v172 = v99;
        goto LABEL_42;
      }
      (*(void (**)(uint64_t, uint64_t))(v100 + 96))(v103, v99);
      v150 = v246;
      v151 = v245;
      v152 = v247;
      (*(void (**)(char *, uint64_t, uint64_t))(v246 + 32))(v245, v103, v247);
      v153 = (int *)sub_100007E8C(&qword_10119ED18);
      v154 = (uint64_t)v251;
      v155 = &v251[v153[12]];
      v156 = &v251[v153[16]];
      v157 = v153[20];
      (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v251, v151, v152);
      Library.Context.init()(v155);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v155, 0, 1, v265);
      *(_QWORD *)v156 = 0;
      *((_QWORD *)v156 + 1) = 0;
      *(_OWORD *)(v154 + v157) = xmmword_100EAE4D0;
      v158 = type metadata accessor for NavigationDestinationItem(0);
      swift_storeEnumTagMultiPayload(v154, v158, 2);
      v159 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v154, 0, 1, v158);
      __chkstk_darwin(v159);
      v160 = v249;
      *(&v229 - 2) = v249;
      v161 = swift_getKeyPath(&unk_100EB02B0);
      __chkstk_darwin(v161);
      *(&v229 - 2) = v160;
      v162 = swift_getKeyPath(&unk_100EB02E8);
      v163 = (uint64_t)v250;
      sub_10004A160(v154, (uint64_t)v250, &qword_1011A3CF0);
      v164 = v252;
      swift_retain();
      static Published.subscript.setter(v163, v164, v161, v162);
      sub_10004FF60(v154, &qword_1011A3CF0);

      (*(void (**)(char *, uint64_t))(v150 + 8))(v151, v152);
    }
LABEL_38:
    v149 = (uint64_t)v39;
LABEL_41:
    sub_10004FF60(v149, (uint64_t *)&unk_1011A20D0);
    v170 = *(void (**)(uint64_t, uint64_t))(v277 + 8);
    v171 = (uint64_t)v234;
    v172 = v233;
LABEL_42:
    v170(v171, v172);
LABEL_43:
    v69 = (uint64_t *)&unk_1011A20D0;
    v70 = v278;
    goto LABEL_20;
  }
  v69 = &qword_10119E460;
  v70 = v67;
LABEL_20:
  sub_10004FF60((uint64_t)v70, v69);
}

id sub_10022CE98(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v2 = qword_10119C088;
  v3 = (id)qword_10124C798;
  if (v2 != -1)
    swift_once(&qword_10119C088, sub_10046C5FC);
  v4 = qword_10119C368;
  swift_retain();
  if (v4 != -1)
    swift_once(&qword_10119C368, sub_1005F4120);
  v5 = qword_10124D480;
  v6 = qword_10119C370;
  swift_retain();
  if (v6 != -1)
    swift_once(&qword_10119C370, sub_1005F4288);
  v7 = objc_msgSend(a1, "activityType", swift_retain().n128_f64[0]);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
  if (v11 == v8 && v12 == v10)
  {
LABEL_16:
    swift_bridgeObjectRelease(v10);
    goto LABEL_17;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v8, v10, 0);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) == 0)
  {
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSQueryContinuationActionType);
    v18 = v17;
    if (v16 != v8 || v17 != v10)
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v8, v10, 0);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) == 0)
        goto LABEL_19;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_17:
  swift_bridgeObjectRelease(v10);
LABEL_18:
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10022B2EC(a1, v3, v5);
  swift_release();
  swift_release();
  swift_release();
LABEL_19:

  return v3;
}

uint64_t sub_10022D0E8()
{
  return 8;
}

_QWORD *sub_10022D0F4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_10022D100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3AC0;
  if (!qword_1011A3AC0)
  {
    v1 = type metadata accessor for MusicMovie(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicMovie, v1);
    atomic_store(result, (unint64_t *)&qword_1011A3AC0);
  }
  return result;
}

uint64_t sub_10022D14C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10022D188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v1 = sub_100007E8C(&qword_1011A7880);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  v7 = sub_100007E8C(&qword_10119D2D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v6 + *(int *)(v1 + 36);
  v9 = sub_100007E8C(&qword_10119F7C8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  v11 = type metadata accessor for GenericMusicItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (EnumCaseMultiPayload == 1
    || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v11);
  }
  v13 = v0 + v5;
  v14 = *(_QWORD *)(v0 + v5 + 8);
  if (v14)
  {
    swift_bridgeObjectRelease(v14);
    v15 = *(_QWORD *)(v13 + 24);
    if (v15 >> 60 != 15)
      sub_1000652DC(*(_QWORD *)(v13 + 16), v15);
  }
  v16 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  v17 = v16 + 8;

  return swift_deallocObject(v0, v17, v3 | 7);
}

uint64_t sub_10022D2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A7880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022D30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011A7880) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  v14 = (_QWORD *)swift_task_alloc(dword_1011B8AFC);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10005AEE4;
  return sub_1005104B4(a1, v6, v7, v8, v10, v11, v12, v13);
}

uint64_t sub_10022D3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  double *v36;
  uint64_t (**v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t (**v39)@<X0>(void **@<X1>, uint64_t@<X8>);
  uint64_t (**v40)@<X0>(uint64_t@<X8>);
  uint64_t v42;
  uint64_t v43;

  v43 = a2;
  v4 = sub_100007E8C(&qword_1011A7920);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)sub_100007E8C(&qword_1011A7918);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1010B6F00, 24, 7);
  *(_QWORD *)(v10 + 16) = v2;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011A7920);
  v11 = v2;
  v42 = static HorizontalAlignment.leading.getter(v11);
  v12 = swift_allocObject(&unk_1010B6F28, 24, 7);
  *(_QWORD *)(v12 + 16) = v11;
  v13 = swift_allocObject(&unk_1010B6F50, 24, 7);
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject(&unk_1010B6F78, 24, 7);
  *(_QWORD *)(v14 + 16) = v11;
  v15 = static Edge.Set.top.getter(v11);
  v16 = v15;
  v17 = static Edge.Set.bottom.getter(v15);
  v18 = Edge.Set.init(rawValue:)(0);
  v19 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v19 & v16) != v16)
    v18 = Edge.Set.init(rawValue:)(v18 | v16);
  v20 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    v18 = Edge.Set.init(rawValue:)(v18 | v17);
  v21 = EdgeInsets.init(_:length:)(v18, 12.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = static VerticalAlignment.top.getter(v28);
  v30 = &v9[v7[32]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EB0398);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = &v9[v7[33]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100EB03C0);
  v31[8] = 0;
  v32 = &v9[v7[34]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100EB03E8);
  v33 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v9[v7[35]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100EB0418);
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  v34[40] = 0;
  v35 = &v9[v7[36]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100EB0440);
  *((_QWORD *)v35 + 1) = 0;
  *((_QWORD *)v35 + 2) = 0;
  *((_QWORD *)v35 + 3) = 0;
  v35[32] = 0;
  *(_QWORD *)v9 = sub_1000779D8;
  *((_QWORD *)v9 + 1) = v10;
  v9[16] = 0;
  sub_100065228((uint64_t)v6, (uint64_t)&v9[v7[24]], &qword_1011A7920);
  v36 = (double *)&v9[v7[25]];
  *v36 = v21;
  *((_QWORD *)v36 + 1) = v23;
  *((_QWORD *)v36 + 2) = v25;
  *((_QWORD *)v36 + 3) = v27;
  *(_QWORD *)&v9[v7[26]] = v42;
  *(_QWORD *)&v9[v7[27]] = v29;
  v37 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v9[v7[28]];
  *v37 = sub_10022D744;
  v37[1] = 0;
  v38 = &v9[v7[29]];
  *(_QWORD *)v38 = UIScreen.Dimensions.size.getter;
  *((_QWORD *)v38 + 1) = v12;
  v39 = (uint64_t (**)@<X0>(void **@<X1>, uint64_t@<X8>))&v9[v7[30]];
  *v39 = sub_10022E0D8;
  v39[1] = (uint64_t (*)@<X0>(void **@<X1>, uint64_t@<X8>))v13;
  v40 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v9[v7[31]];
  *v40 = sub_10022E0E0;
  v40[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return sub_100065228((uint64_t)v9, v43, &qword_1011A7918);
}

uint64_t sub_10022D744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  double v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  char v22;
  _QWORD v24[2];
  __int128 v25;
  double v26;
  uint64_t v27;
  char v28;
  _BYTE v29[56];

  v6 = *(double *)(a5 + 8);
  if (v6 <= 1439.0)
    v7 = 1;
  else
    v7 = 2;
  if (v6 > 1129.0)
    v8 = v7;
  else
    v8 = 0;
  if (qword_10119BC08 != -1)
    swift_once(&qword_10119BC08, sub_10022E004);
  v9 = off_1011A7898;
  v10 = *((_QWORD *)off_1011A7898 + 2);
  v11 = 0uLL;
  v12 = 0.0;
  if (v10)
  {
    v13 = sub_10079C718(v8);
    if ((v14 & 1) != 0)
    {
      v15 = 0;
      v16 = v9[7] + 48 * v13;
      v10 = *(_QWORD *)v16;
      v17 = *(unsigned __int8 *)(v16 + 8);
      v11 = *(_OWORD *)(v16 + 16);
      v12 = *(double *)(v16 + 32);
      v18 = *(_QWORD *)(v16 + 40);
    }
    else
    {
      v10 = 0;
      v17 = 0;
      v18 = 0;
      v15 = 1;
      v11 = 0uLL;
    }
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v15 = 1;
  }
  v24[0] = v10;
  v24[1] = v17;
  v25 = v11;
  v26 = v12;
  v27 = v18;
  v28 = v15;
  v19 = type metadata accessor for ModuleLayout.Context(0);
  v20 = DynamicTypeSize.isAccessibilitySize.getter(v19);
  if ((v15 & 1) == 0 && (v20 & 1) != 0)
  {
    v21 = v12 + -1.0;
    if (v12 < 1.0)
      v21 = 0.0;
    v26 = v21;
  }
  v22 = *(_BYTE *)a5;
  sub_100065228((uint64_t)v24, (uint64_t)v29, &qword_10119FA68);
  return sub_1000ADCB0(v22, (uint64_t)v29, v6) & 1;
}

uint64_t sub_10022D8B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F991A0, 1);
}

uint64_t sub_10022D8C8@<X0>(void **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Featured(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = (uint64_t)a1 + *(int *)(sub_100007E8C(&qword_1011A7930) + 28);
  sub_10004A160(v14, (uint64_t)v9, (uint64_t *)&unk_1011A20D0);
  v15 = v13;
  sub_10022DD44(v14, (uint64_t)v6);
  sub_1006FD2FC((uint64_t)v15, (uint64_t)v9, (uint64_t)v6, (uint64_t)v12);
  return sub_1006FD060((uint64_t)v12, a2);
}

uint64_t sub_10022DA0C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v2 = (int *)type metadata accessor for Featured(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v7 = &v4[v2[8]];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v10 = &v4[v2[9]];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 10, v11);
  v12 = &v4[v2[10]];
  v13 = &v12[*(int *)(type metadata accessor for Featured.Caption(0) + 24)];
  v14 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v9(&v13[*(int *)(v14 + 20)], 1, 1, v8);
  *v13 = 0;
  *(_QWORD *)&v13[*(int *)(v14 + 24)] = 0x3FF0000000000000;
  *(_QWORD *)v12 = 0xD0000000000000DELL;
  *((_QWORD *)v12 + 1) = 0x8000000100E32630;
  *((_QWORD *)v12 + 2) = 0xD0000000000000DELL;
  *((_QWORD *)v12 + 3) = 0x8000000100E32630;
  v15 = &v4[v2[11]];
  v16 = (int *)type metadata accessor for SegueContext(0);
  v6(&v15[v16[5]], 1, 1, v5);
  *(_QWORD *)v15 = v1;
  v15[v16[6]] = 0;
  v17 = &v15[v16[7]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v4[v2[5]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = &v4[v2[6]];
  *(_QWORD *)v19 = 0xD0000000000000DELL;
  *((_QWORD *)v19 + 1) = 0x8000000100E32630;
  v20 = &v4[v2[7]];
  *(_QWORD *)v20 = 0xD0000000000000DELL;
  *((_QWORD *)v20 + 1) = 0x8000000100E32630;
  v21 = v1;
  return sub_1006FD060((uint64_t)v4, v24);
}

unint64_t sub_10022DBFC(uint64_t a1)
{
  unint64_t result;

  result = sub_10022DC20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10022DC20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A78D8;
  if (!qword_1011A78D8)
  {
    v1 = type metadata accessor for JSFlowcase(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for JSFlowcase, v1);
    atomic_store(result, (unint64_t *)&qword_1011A78D8);
  }
  return result;
}

uint64_t sub_10022DC68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F99178, 1);
}

void sub_10022DC78(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = sub_100812F40(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v10;
}

void *sub_10022DCD0()
{
  return &protocol witness table for EmptyView;
}

ValueMetadata *type metadata accessor for FeaturedReuseType()
{
  return &type metadata for FeaturedReuseType;
}

uint64_t sub_10022DCEC()
{
  return sub_100049F28(&qword_1011A7900, &qword_1011A7908, (uint64_t)&unk_100ED58E0);
}

uint64_t sub_10022DD18()
{
  return sub_100049F28(&qword_1011A7910, &qword_1011A7918, (uint64_t)&unk_100EA8520);
}

uint64_t sub_10022DD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v27[24];

  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v5);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v27[-v9 - 8];
  v11 = type metadata accessor for Artwork.CropStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v15);
  v17 = &v27[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v18 = (id *)(v2 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_backgroundArtwork);
  swift_beginAccess(v18, v27, 0, 0);
  if (*v18)
  {
    v19 = *v18;
    static Artwork.CropStyle.specificRectangle.getter(v19);
    sub_100882874((uint64_t)v14, (uint64_t)v17);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v20 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  sub_10004A160(a1, (uint64_t)v10, (uint64_t *)&unk_1011A20D0);
  v21 = type metadata accessor for ArtworkImage.ViewModel(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21) == 1)
  {
    sub_10004A160((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1011A20D0);
    v23 = type metadata accessor for GenericMusicItem(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v23) == 1)
    {
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(a2, 1, 1, v21);
    }
    else
    {
      sub_1003377CC(a2);
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
    }
    return sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
    sub_100077A18((uint64_t)v17, a2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(a2, 0, 1, v21);
  }
}

void sub_10022E004()
{
  uint64_t v0;
  uint64_t inited;
  void *v7;
  _BYTE v8[200];

  v0 = sub_100007E8C(&qword_1011A7928);
  inited = swift_initStackObject(v0, v8);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 1;
  __asm { FMOV            V0.2D, #28.0 }
  *(_OWORD *)(inited + 56) = _Q0;
  *(_QWORD *)(inited + 72) = 0x4004000000000000;
  *(_QWORD *)(inited + 80) = 1;
  *(_BYTE *)(inited + 88) = 1;
  *(_QWORD *)(inited + 96) = 0;
  *(_BYTE *)(inited + 104) = 1;
  *(_OWORD *)(inited + 112) = _Q0;
  *(_QWORD *)(inited + 128) = 0x4008000000000000;
  *(_QWORD *)(inited + 136) = 1;
  *(_BYTE *)(inited + 144) = 2;
  *(_QWORD *)(inited + 152) = 0;
  *(_BYTE *)(inited + 160) = 1;
  *(_OWORD *)(inited + 168) = _Q0;
  *(_QWORD *)(inited + 184) = 0x400C000000000000;
  *(_QWORD *)(inited + 192) = 1;
  v7 = (void *)sub_100046BF4(inited);
  swift_setDeallocating(inited);
  off_1011A7898 = v7;
}

uint64_t sub_10022E0B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10022E0D8@<X0>(void **a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10022D8C8(a1, a2);
}

uint64_t sub_10022E0E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10022DA0C(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for HostedCatalogComponentController(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for HostedCatalogComponentController(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_retain(v8);
  swift_release(v7);
  return a1;
}

uint64_t assignWithTake for HostedCatalogComponentController(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HostedCatalogComponentController(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HostedCatalogComponentController(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HostedCatalogComponentController()
{
  return &type metadata for HostedCatalogComponentController;
}

ValueMetadata *type metadata accessor for CatalogComponentView()
{
  return &type metadata for CatalogComponentView;
}

uint64_t sub_10022E2D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9924C, 1);
}

void sub_10022E2E0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50;

  if (!a1 || !a2)
  {
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    v46 = 1;
    v29 = sub_100007E8C(&qword_1011A7980);
    v30 = sub_100231674();
    v31 = sub_1000A02C8();
    _ConditionalContent<>.init(storage:)(&v43, v29, &type metadata for LoadingView, v30, v31);
LABEL_20:
    v40 = v48;
    v41 = v49;
    v42 = v50;
    *(_OWORD *)a3 = v47;
    *(_OWORD *)(a3 + 16) = v40;
    *(_QWORD *)(a3 + 32) = v41;
    *(_BYTE *)(a3 + 40) = v42;
    return;
  }
  v6 = type metadata accessor for JSComponentController(0);
  v7 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v8 = a1;
  swift_retain(a2);
  v9 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  v11 = v10;
  v12 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v13 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v14 = static ObservableObject.environmentStore.getter(v12, v13);
  v15 = (void *)objc_opt_self(UIApplication);
  v16 = objc_msgSend(v15, "sharedApplication", swift_retain(a2).n128_f64[0]);
  v17 = objc_msgSend(v16, "connectedScenes");
  v18 = sub_1001B10A4();
  v19 = sub_100048748((unint64_t *)&qword_1011A2190, (uint64_t (*)(uint64_t))sub_1001B10A4, (uint64_t)&protocol conformance descriptor for NSObject);
  v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v17, v18, v19);

  sub_10079470C(v20);
  v22 = v21;
  swift_bridgeObjectRelease(v20);
  if (!((unint64_t)v22 >> 62))
  {
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_17:

    swift_bridgeObjectRelease(v22);
    goto LABEL_18;
  }
  if (v22 < 0)
    v32 = v22;
  else
    v32 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v33 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v22);
  if (!v33)
    goto LABEL_17;
LABEL_5:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
LABEL_8:
    v24 = v23;

    v25 = objc_msgSend(v24, "delegate", swift_bridgeObjectRelease(v22).n128_f64[0]);
    if (v25)
    {
      v26 = type metadata accessor for MainSceneDelegate();
      v27 = swift_dynamicCastClass(v25, v26);
      if (v27)
      {
        v28 = *(_QWORD *)(v27 + OBJC_IVAR____TtC5Music17MainSceneDelegate_environmentManager);
        swift_retain(v28);
        swift_unknownObjectRelease(v25);
LABEL_19:
        *(_QWORD *)&v43 = v9;
        *((_QWORD *)&v43 + 1) = v11;
        *(_QWORD *)&v44 = v14;
        *((_QWORD *)&v44 + 1) = a2;
        v45 = v28;
        v46 = 0;
        swift_retain(a2);
        v35 = v11;
        swift_retain(v14);
        swift_retain(v28);
        v36 = sub_100007E8C(&qword_1011A7980);
        v37 = sub_100231674();
        v38 = sub_1000A02C8();
        _ConditionalContent<>.init(storage:)(&v43, v36, &type metadata for LoadingView, v37, v38);
        swift_release(v28);
        swift_release(v14);

        swift_release_n(a2, 2, v39);
        goto LABEL_20;
      }
      swift_unknownObjectRelease(v25);
    }
LABEL_18:
    v34 = type metadata accessor for EnvironmentObjectsManager();
    v28 = swift_allocObject(v34, 56, 7);
    *(_OWORD *)(v28 + 16) = 0u;
    *(_OWORD *)(v28 + 32) = 0u;
    *(_QWORD *)(v28 + 48) = 0;
    goto LABEL_19;
  }
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(id *)(v22 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10022E688(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10022E2E0(*(void **)v1, *(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_10022E690(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F99224, 1);
}

uint64_t sub_10022E6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A7960);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.navigationBarTrailing.getter(v11);
  v16 = a1;
  v17 = a2;
  v12 = sub_100231630();
  ToolbarItem<>.init(placement:content:)(v6, sub_100231628, v15, &type metadata for JSHeaderItemBarButtonView, v12);
  v13 = sub_100049F28(&qword_1011A7968, &qword_1011A7960, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v10, v7, v13);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10022E7C8@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0);
  v4 = a1;
  v5 = v3();

  v6 = type metadata accessor for JSHeaderItem(0);
  v7 = sub_100048748((unint64_t *)&qword_1011A7978, type metadata accessor for JSHeaderItem, (uint64_t)&protocol conformance descriptor for JSHeaderItem);
  result = ObservedObject.init(wrappedValue:)(v5, v6, v7);
  *a2 = result;
  a2[1] = v9;
  return result;
}

void sub_10022E854(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int v50;
  void *v51;
  unint64_t v52;
  id v53;
  char v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(unint64_t);
  _QWORD *v64;
  unint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  void *v90;
  uint64_t *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(unint64_t);
  _QWORD *v99;
  unint64_t v100;
  void *v101;
  id v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  _OWORD *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  __int128 v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  _OWORD *v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  unint64_t v145;
  uint64_t v146;
  _OWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unsigned int v185;
  unsigned int v186;
  uint64_t v187;
  int v188;
  int v189;
  double v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  double *v207;
  uint64_t (**v208)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (**v209)@<X0>(uint64_t@<X8>);
  uint64_t (**v210)@<X0>(id *@<X1>, uint64_t@<X8>);
  uint64_t (**v211)();
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  double v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  _OWORD *v234;
  uint64_t v235;
  unint64_t v236;
  unint64_t v237;
  uint64_t v238;
  void *v239;
  uint64_t v240;
  _OWORD *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  __int128 v278;
  uint64_t v279;
  __int16 v280;
  __int128 v281;
  uint64_t v282;
  unsigned __int8 v283;
  char v284;

  v277 = a2;
  v3 = sub_100007E8C(&qword_1011A79B0);
  __chkstk_darwin(v3);
  v261 = (uint64_t)&v238 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v260 = (char *)&v238 - v6;
  v251 = sub_100007E8C(&qword_1011A79B8);
  __chkstk_darwin(v251);
  v250 = (char *)&v238 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v249 = (uint64_t)&v238 - v9;
  __chkstk_darwin(v10);
  v253 = (uint64_t)&v238 - v11;
  v264 = sub_100007E8C(&qword_1011A79C0);
  __chkstk_darwin(v264);
  v252 = (uint64_t)&v238 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v254 = (uint64_t)&v238 - v14;
  v262 = sub_100007E8C(&qword_1011A79C8);
  __chkstk_darwin(v262);
  v263 = (uint64_t)&v238 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = sub_100007E8C(&qword_1011A79D0);
  __chkstk_darwin(v276);
  v265 = (char *)&v238 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = type metadata accessor for CatalogStack(0);
  __chkstk_darwin(v273);
  v269 = (uint64_t)&v238 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A79D8);
  __chkstk_darwin(v18);
  v20 = (_OWORD *)((char *)&v238 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v272 = sub_100007E8C(&qword_1011A79E0);
  __chkstk_darwin(v272);
  v275 = (uint64_t)&v238 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = sub_100007E8C(&qword_1011A79E8);
  __chkstk_darwin(v266);
  v267 = (uint64_t)&v238 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = sub_100007E8C(&qword_1011A79F0);
  __chkstk_darwin(v274);
  v270 = (char *)&v238 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011A79F8);
  __chkstk_darwin(v24);
  v271 = (char *)&v238 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = sub_100007E8C(&qword_10119EEB8);
  __chkstk_darwin(v247);
  v243 = (uint64_t)&v238 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = sub_100007E8C(&qword_1011A7A00);
  __chkstk_darwin(v245);
  v246 = (uint64_t *)((char *)&v238 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v255 = sub_100007E8C(&qword_1011A7A08);
  __chkstk_darwin(v255);
  v248 = (char *)&v238 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = sub_100007E8C(&qword_1011A7A10);
  __chkstk_darwin(v258);
  v259 = (uint64_t)&v238 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = sub_100007E8C(&qword_10119EEE8);
  __chkstk_darwin(v244);
  v31 = (char *)&v238 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011A7A18);
  __chkstk_darwin(v32);
  v34 = (uint64_t *)((char *)&v238 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v257 = sub_100007E8C(&qword_1011A7A20);
  __chkstk_darwin(v257);
  v36 = (char *)&v238 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = sub_100007E8C(&qword_1011A7A28);
  __chkstk_darwin(v268);
  v256 = (char *)&v238 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x118);
  v39 = a1;
  v40 = v38();

  if ((~v40 & 0xF000000000000007) == 0)
  {
LABEL_2:
    v278 = 0uLL;
    v279 = 0;
    v280 = 256;
    v41 = sub_100007E8C(&qword_1011A7A30);
    v42 = sub_10023194C();
    v43 = sub_1000A02C8();
    _ConditionalContent<>.init(storage:)(&v278, v41, &type metadata for LoadingView, v42, v43);
    v44 = v282;
    v45 = v283;
    v46 = v284;
    *v20 = v281;
    *((_QWORD *)v20 + 2) = v44;
    *((_BYTE *)v20 + 24) = v45;
    *((_BYTE *)v20 + 25) = v46;
    swift_storeEnumTagMultiPayload(v20, v18, 1);
    v47 = sub_100007E8C(&qword_1011A7A50);
    v48 = sub_100231A40();
    v49 = sub_100231DAC();
    _ConditionalContent<>.init(storage:)(v20, v24, v47, v48, v49);
    return;
  }
  v242 = v18;
  v240 = v24;
  v241 = v20;
  switch((v40 >> 58) & 0x3C | (v40 >> 1) & 3)
  {
    case 0uLL:
      v50 = *(_BYTE *)(v40 + OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_itemKind) & 0xFE;
      v239 = (void *)v40;
      v51 = (void *)(v40 & 0xFFFFFFFFFFFFFF9);
      if (v50 == 2)
      {
        LOBYTE(v281) = 5;
        v52 = sub_10004D63C();
        v53 = v51;
        v54 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v52);
        v55 = v53;
        v56 = v267;
        if ((v54 & 1) != 0)
        {
          v57 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
          v58 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
          v59 = EnvironmentObject.init()(v57, v58);
          *v34 = v239;
          v34[1] = 0x4000000000000000;
          v34[2] = v59;
          v34[3] = v60;
          swift_storeEnumTagMultiPayload(v34, v32, 0);
          v61 = sub_1000A077C();
          v62 = sub_100049F28(&qword_10119EFE0, &qword_10119EEE8, (uint64_t)"ٴ ");
          _ConditionalContent<>.init(storage:)(v34, &type metadata for ContainerDetail.RepresentableView, v244, v61, v62);
        }
        else
        {
          sub_1002301F0(v239, (uint64_t)v31);
          sub_10004A160((uint64_t)v31, (uint64_t)v34, &qword_10119EEE8);
          swift_storeEnumTagMultiPayload(v34, v32, 1);
          v145 = sub_1000A077C();
          v146 = sub_100049F28(&qword_10119EFE0, &qword_10119EEE8, (uint64_t)"ٴ ");
          _ConditionalContent<>.init(storage:)(v34, &type metadata for ContainerDetail.RepresentableView, v244, v145, v146);
          sub_10004FF60((uint64_t)v31, &qword_10119EEE8);
        }
        v147 = v241;
        v148 = (uint64_t)v271;
        v149 = v266;
        v150 = v259;
        sub_10004A160((uint64_t)v36, v259, &qword_1011A7A20);
        swift_storeEnumTagMultiPayload(v150, v258, 0);
        v151 = sub_100231B9C();
        v152 = sub_100231C20();
        v153 = (uint64_t)v256;
        _ConditionalContent<>.init(storage:)(v150, v257, v255, v151, v152);
        sub_10004FF60((uint64_t)v36, &qword_1011A7A20);
        v154 = v240;
        v155 = v272;
      }
      else
      {
        LOBYTE(v281) = 5;
        v131 = sub_10004D63C();
        v132 = v51;
        LOBYTE(v131) = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v131);
        v133 = v132;
        if ((v131 & 1) != 0)
        {
          v134 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
          v135 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
          v136 = EnvironmentObject.init()(v134, v135);
          v137 = v246;
          *v246 = v239;
          v137[1] = 0x8000000000000000;
          v137[2] = v136;
          v137[3] = v138;
          swift_storeEnumTagMultiPayload(v137, v245, 0);
          v139 = sub_1000A077C();
          v140 = sub_100049F28(&qword_10119F010, &qword_10119EEB8, (uint64_t)"ٴ ");
          v141 = (uint64_t)v248;
          _ConditionalContent<>.init(storage:)(v137, &type metadata for ContainerDetail.RepresentableView, v247, v139, v140);
        }
        else
        {
          v156 = v243;
          sub_100230670(v239, v243);
          v157 = v246;
          sub_10004A160(v156, (uint64_t)v246, &qword_10119EEB8);
          swift_storeEnumTagMultiPayload(v157, v245, 1);
          v158 = sub_1000A077C();
          v159 = sub_100049F28(&qword_10119F010, &qword_10119EEB8, (uint64_t)"ٴ ");
          v141 = (uint64_t)v248;
          _ConditionalContent<>.init(storage:)(v157, &type metadata for ContainerDetail.RepresentableView, v247, v158, v159);
          sub_10004FF60(v156, &qword_10119EEB8);
        }
        v154 = v240;
        v148 = (uint64_t)v271;
        v155 = v272;
        v149 = v266;
        v153 = (uint64_t)v256;
        v160 = v255;
        v161 = v259;
        sub_10004A160(v141, v259, &qword_1011A7A08);
        swift_storeEnumTagMultiPayload(v161, v258, 1);
        v162 = sub_100231B9C();
        v163 = sub_100231C20();
        _ConditionalContent<>.init(storage:)(v161, v257, v160, v162, v163);
        sub_10004FF60(v141, &qword_1011A7A08);
        v56 = v267;
        v147 = v241;
      }
      sub_10004A160(v153, v56, &qword_1011A7A28);
      swift_storeEnumTagMultiPayload(v56, v149, 0);
      v164 = sub_100231B30();
      v165 = sub_100048748(&qword_1011A7A80, type metadata accessor for CatalogStack, (uint64_t)&unk_100EC77D0);
      v166 = (uint64_t)v270;
      _ConditionalContent<>.init(storage:)(v56, v268, v273, v164, v165);
      v167 = v275;
      sub_10004A160(v166, v275, &qword_1011A79F0);
      swift_storeEnumTagMultiPayload(v167, v155, 0);
      v168 = sub_100231AAC();
      v169 = sub_100231CA4();
      _ConditionalContent<>.init(storage:)(v167, v274, v276, v168, v169);
      sub_10004FF60(v166, &qword_1011A79F0);
      sub_10004A160(v148, (uint64_t)v147, &qword_1011A79F8);
      swift_storeEnumTagMultiPayload(v147, v242, 0);
      v170 = sub_100007E8C(&qword_1011A7A50);
      v171 = sub_100231A40();
      v172 = sub_100231DAC();
      _ConditionalContent<>.init(storage:)(v147, v154, v170, v171, v172);
      v173 = (uint64_t)v239;
      sub_100231E18((uint64_t)v239);
      sub_100231E18(v173);
      sub_10004FF60(v148, &qword_1011A79F8);
      v174 = v153;
      v175 = &qword_1011A7A28;
      goto LABEL_57;
    case 6uLL:
      v63 = *(uint64_t (**)(unint64_t))((swift_isaMask & *v39) + 0xD0);
      v64 = v39;
      v65 = sub_100231E34(v40);
      v66 = (void *)v63(v65);

      v67 = (id)(v40 & 0xFFFFFFFFFFFFFF9);
      v68 = v269;
      sub_100654E44(v66, (uint64_t)v67, v269);
      v69 = v263;
      sub_100231F20(v68, v263);
      swift_storeEnumTagMultiPayload(v69, v262, 0);
      v70 = sub_100048748(&qword_1011A7A80, type metadata accessor for CatalogStack, (uint64_t)&unk_100EC77D0);
      v71 = sub_100231D28();
      v72 = (uint64_t)v265;
      _ConditionalContent<>.init(storage:)(v69, v273, v264, v70, v71);
      v73 = &qword_1011A79D0;
      v74 = v275;
      sub_10004A160(v72, v275, &qword_1011A79D0);
      v75 = v74;
      v76 = v272;
      v77 = 1;
      goto LABEL_22;
    case 7uLL:
      v78 = (id)(v40 & 0xFFFFFFFFFFFFFF9);
      v79 = JSMenu.sections.getter();
      v80 = v79;
      if ((unint64_t)v79 >> 62)
      {
        if (v79 >= 0)
          v79 &= 0xFFFFFFFFFFFFFF8uLL;
        v81 = _CocoaArrayWrapper.endIndex.getter(v79);
      }
      else
      {
        v81 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v82 = v260;
      swift_bridgeObjectRelease(v80);
      v83 = JSMenu.sections.getter();
      v84 = v83;
      v239 = (void *)v40;
      v85 = (unint64_t)v83 >> 62;
      if (v81 < 2)
      {
        if (v85)
        {
          if (v83 >= 0)
            v83 &= 0xFFFFFFFFFFFFFF8uLL;
          if (_CocoaArrayWrapper.endIndex.getter(v83))
          {
LABEL_29:
            if ((v84 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                JUMPOUT(0x100230160);
              }
              v142 = (char *)*(id *)(v84 + 32);
              goto LABEL_32;
            }
LABEL_59:
            v142 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v84);
LABEL_32:
            v143 = v142;
            swift_bridgeObjectRelease(v84);
            v144 = &v143[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items];
            swift_beginAccess(&v143[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items], &v281, 0, 0);
            v88 = *(_QWORD **)v144;
            swift_bridgeObjectRetain();

            goto LABEL_52;
          }
        }
        else if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_29;
        }
        swift_bridgeObjectRelease(v84);
        goto LABEL_51;
      }
      if (!v85)
      {
        v86 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v86)
          goto LABEL_14;
        goto LABEL_46;
      }
      if (v83 < 0)
        v176 = v83;
      else
        v176 = v83 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v86 = _CocoaArrayWrapper.endIndex.getter(v176);
      if (!v86)
      {
LABEL_46:
        swift_bridgeObjectRelease_n(v84, 2);
LABEL_51:
        v88 = _swiftEmptyArrayStorage;
        goto LABEL_52;
      }
LABEL_14:
      if (v86 < 1)
      {
        __break(1u);
        goto LABEL_59;
      }
      v87 = 0;
      v88 = _swiftEmptyArrayStorage;
      do
      {
        if ((v84 & 0xC000000000000001) != 0)
          v89 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v87, v84);
        else
          v89 = (char *)*(id *)(v84 + 8 * v87 + 32);
        v90 = v89;
        ++v87;
        v91 = (uint64_t *)&v89[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items];
        swift_beginAccess(&v89[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items], &v281, 0, 0);
        v92 = *v91;
        *(_QWORD *)&v278 = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100805EC4(v92);
        swift_bridgeObjectRelease(v88);

        v88 = (_QWORD *)v278;
      }
      while (v86 != v87);
      swift_bridgeObjectRelease_n(v84, 2);
      v82 = v260;
LABEL_52:
      *v82 = v88;
      v177 = sub_100007E8C(&qword_1011A7AA8);
      swift_storeEnumTagMultiPayload(v82, v177, 0);
      v178 = swift_allocObject(&unk_1010B7148, 24, 7);
      *(_QWORD *)(v178 + 16) = v78;
      sub_10004A160((uint64_t)v82, v261, &qword_1011A79B0);
      v179 = v78;
      v180 = static HorizontalAlignment.leading.getter(v179);
      v181 = swift_allocObject(&unk_1010B7170, 24, 7);
      *(_QWORD *)(v181 + 16) = v179;
      v182 = swift_allocObject(&unk_1010B7198, 24, 7);
      *(_QWORD *)(v182 + 16) = v179;
      v183 = swift_allocObject(&unk_1010B71C0, 24, 7);
      *(_QWORD *)(v183 + 16) = v179;
      sub_100231E34((unint64_t)v239);
      v184 = static Edge.Set.top.getter(v179);
      v185 = v184;
      v186 = static Edge.Set.bottom.getter(v184);
      v187 = Edge.Set.init(rawValue:)(0);
      v188 = Edge.Set.init(rawValue:)(v187);
      if (Edge.Set.init(rawValue:)(v188 & v185) != v185)
        v187 = Edge.Set.init(rawValue:)(v187 | v185);
      v189 = Edge.Set.init(rawValue:)(v187);
      if (Edge.Set.init(rawValue:)(v189 & v186) != v186)
        v187 = Edge.Set.init(rawValue:)(v187 | v186);
      v190 = EdgeInsets.init(_:length:)(v187, 12.0);
      v192 = v191;
      v194 = v193;
      v196 = v195;
      v198 = static VerticalAlignment.top.getter(v197);
      v199 = (int *)v251;
      v200 = (uint64_t)v250;
      v201 = &v250[*(int *)(v251 + 128)];
      *(_QWORD *)v201 = swift_getKeyPath(&unk_100EB05B8);
      *((_QWORD *)v201 + 1) = 0;
      v201[16] = 0;
      v202 = v200 + v199[33];
      *(_QWORD *)v202 = swift_getKeyPath(&unk_100EB05E0);
      *(_BYTE *)(v202 + 8) = 0;
      v203 = (_QWORD *)(v200 + v199[34]);
      *v203 = swift_getKeyPath(&unk_100EB0608);
      v204 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
      swift_storeEnumTagMultiPayload(v203, v204, 0);
      v205 = v200 + v199[35];
      *(_QWORD *)v205 = swift_getKeyPath(&unk_100EB0638);
      *(_OWORD *)(v205 + 8) = 0u;
      *(_OWORD *)(v205 + 24) = 0u;
      *(_BYTE *)(v205 + 40) = 0;
      v206 = v200 + v199[36];
      *(_QWORD *)v206 = swift_getKeyPath(&unk_100EB0660);
      *(_QWORD *)(v206 + 8) = 0;
      *(_QWORD *)(v206 + 16) = 0;
      *(_QWORD *)(v206 + 24) = 0;
      *(_BYTE *)(v206 + 32) = 0;
      *(_QWORD *)v200 = sub_1000779D8;
      *(_QWORD *)(v200 + 8) = v178;
      *(_BYTE *)(v200 + 16) = 2;
      sub_100065228(v261, v200 + v199[24], &qword_1011A79B0);
      v207 = (double *)(v200 + v199[25]);
      *v207 = v190;
      *((_QWORD *)v207 + 1) = v192;
      *((_QWORD *)v207 + 2) = v194;
      *((_QWORD *)v207 + 3) = v196;
      *(_QWORD *)(v200 + v199[26]) = v180;
      *(_QWORD *)(v200 + v199[27]) = v198;
      v208 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v200 + v199[28]);
      *v208 = sub_100808BC4;
      v208[1] = 0;
      v209 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v200 + v199[29]);
      *v209 = sub_100231EE0;
      v209[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v181;
      v210 = (uint64_t (**)@<X0>(id *@<X1>, uint64_t@<X8>))(v200 + v199[30]);
      *v210 = sub_100231EE8;
      v210[1] = (uint64_t (*)@<X0>(id *@<X1>, uint64_t@<X8>))v182;
      v211 = (uint64_t (**)())(v200 + v199[31]);
      *v211 = sub_100231EF0;
      v211[1] = (uint64_t (*)())v183;
      v212 = v249;
      sub_100065228(v200, v249, &qword_1011A79B8);
      v213 = v253;
      sub_100065228(v212, v253, &qword_1011A79B8);
      v214 = sub_10004FF60((uint64_t)v82, &qword_1011A79B0);
      LOBYTE(v212) = static Edge.Set.horizontal.getter(v214);
      v215 = EdgeInsets.init(_all:)(*(double *)&qword_1011CCD38);
      v217 = v216;
      v219 = v218;
      v221 = v220;
      v222 = v252;
      sub_10004A160(v213, v252, &qword_1011A79B8);
      v223 = v264;
      v224 = v222 + *(int *)(v264 + 36);
      *(_BYTE *)v224 = v212;
      *(double *)(v224 + 8) = v215;
      *(_QWORD *)(v224 + 16) = v217;
      *(_QWORD *)(v224 + 24) = v219;
      *(_QWORD *)(v224 + 32) = v221;
      *(_BYTE *)(v224 + 40) = 0;
      sub_10004FF60(v213, &qword_1011A79B8);
      v225 = v254;
      sub_100065228(v222, v254, &qword_1011A79C0);
      v226 = v263;
      sub_10004A160(v225, v263, &qword_1011A79C0);
      swift_storeEnumTagMultiPayload(v226, v262, 1);
      v227 = sub_100048748(&qword_1011A7A80, type metadata accessor for CatalogStack, (uint64_t)&unk_100EC77D0);
      v228 = sub_100231D28();
      v229 = (uint64_t)v265;
      _ConditionalContent<>.init(storage:)(v226, v273, v223, v227, v228);
      v230 = v275;
      sub_10004A160(v229, v275, &qword_1011A79D0);
      swift_storeEnumTagMultiPayload(v230, v272, 1);
      v231 = sub_100231AAC();
      v232 = sub_100231CA4();
      v233 = (uint64_t)v271;
      _ConditionalContent<>.init(storage:)(v230, v274, v276, v231, v232);
      sub_10004FF60(v229, &qword_1011A79D0);
      v234 = v241;
      sub_10004A160(v233, (uint64_t)v241, &qword_1011A79F8);
      swift_storeEnumTagMultiPayload(v234, v242, 0);
      v235 = sub_100007E8C(&qword_1011A7A50);
      v236 = sub_100231A40();
      v237 = sub_100231DAC();
      _ConditionalContent<>.init(storage:)(v234, v240, v235, v236, v237);
      sub_100231E18((uint64_t)v239);
      sub_10004FF60(v233, &qword_1011A79F8);
      v174 = v225;
      v175 = &qword_1011A79C0;
LABEL_57:
      sub_10004FF60(v174, v175);
      return;
    case 9uLL:
      v93 = (id)(v40 & 0xFFFFFFFFFFFFFF9);
      v94 = sub_100007E8C(&qword_10119CBF8);
      v95 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v96 = EnvironmentObject.init()(v94, v95);
      *(_QWORD *)&v278 = v40 & 0xFFFFFFFFFFFFFF9;
      *((_QWORD *)&v278 + 1) = v96;
      v279 = v97;
      LOBYTE(v280) = 0;
      goto LABEL_24;
    case 0x19uLL:
      v98 = *(uint64_t (**)(unint64_t))((swift_isaMask & *v39) + 0xD0);
      v99 = v39;
      v100 = sub_100231E34(v40);
      v101 = (void *)v98(v100);

      v102 = (id)(v40 & 0xFFFFFFFFFFFFFF9);
      v68 = v269;
      sub_100654E44(v101, (uint64_t)v102, v269);
      v103 = v267;
      sub_100231F20(v68, v267);
      swift_storeEnumTagMultiPayload(v103, v266, 1);
      v104 = sub_100231B30();
      v105 = sub_100048748(&qword_1011A7A80, type metadata accessor for CatalogStack, (uint64_t)&unk_100EC77D0);
      v72 = (uint64_t)v270;
      _ConditionalContent<>.init(storage:)(v103, v268, v273, v104, v105);
      v73 = &qword_1011A79F0;
      v74 = v275;
      sub_10004A160(v72, v275, &qword_1011A79F0);
      v75 = v74;
      v76 = v272;
      v77 = 0;
LABEL_22:
      swift_storeEnumTagMultiPayload(v75, v76, v77);
      v106 = sub_100231AAC();
      v107 = sub_100231CA4();
      v108 = (uint64_t)v271;
      _ConditionalContent<>.init(storage:)(v74, v274, v276, v106, v107);
      sub_10004FF60(v72, v73);
      v109 = v241;
      sub_10004A160(v108, (uint64_t)v241, &qword_1011A79F8);
      swift_storeEnumTagMultiPayload(v109, v242, 0);
      v110 = sub_100007E8C(&qword_1011A7A50);
      v111 = sub_100231A40();
      v112 = sub_100231DAC();
      _ConditionalContent<>.init(storage:)(v109, v240, v110, v111, v112);
      sub_100231E18(v40);
      sub_100231E18(v40);
      sub_10004FF60(v108, &qword_1011A79F8);
      sub_100231F64(v68);
      return;
    case 0x23uLL:
      v113 = (id)(v40 & 0xFFFFFFFFFFFFFF9);
      v114 = sub_100007E8C(&qword_10119CBF8);
      v115 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v96 = EnvironmentObject.init()(v114, v115);
      *(_QWORD *)&v278 = v40 & 0xFFFFFFFFFFFFFF9;
      *((_QWORD *)&v278 + 1) = v96;
      v279 = v116;
      LOBYTE(v280) = 1;
LABEL_24:
      sub_100231E34(v40);
      v117 = sub_1002319B8();
      v118 = sub_1002319FC();
      swift_retain(v96);
      _ConditionalContent<>.init(storage:)(&v278, &type metadata for CatalogComponentView.MessageView, &type metadata for CatalogComponentView.AlertView, v117, v118);
      v278 = v281;
      v279 = v282;
      v280 = v283;
      v119 = sub_100007E8C(&qword_1011A7A30);
      v120 = sub_10023194C();
      v121 = sub_1000A02C8();
      _ConditionalContent<>.init(storage:)(&v278, v119, &type metadata for LoadingView, v120, v121);
      v122 = v281;
      v123 = v282;
      v124 = v284;
      v125 = v40;
      v126 = v283;
      v127 = v241;
      *v241 = v281;
      *((_QWORD *)v127 + 2) = v123;
      *((_BYTE *)v127 + 24) = v126;
      *((_BYTE *)v127 + 25) = v124;
      swift_storeEnumTagMultiPayload(v127, v242, 1);
      sub_100231E50((void *)v122, *((uint64_t *)&v122 + 1), v123, v126, v124);
      v128 = sub_100007E8C(&qword_1011A7A50);
      v129 = sub_100231A40();
      v130 = sub_100231DAC();
      _ConditionalContent<>.init(storage:)(v127, v240, v128, v129, v130);
      sub_100231E18(v125);
      sub_100231E18(v125);
      sub_100231E88((void *)v122, *((uint64_t *)&v122 + 1), v123, v126, v124);
      sub_100231E18(v125);
      swift_release(v96);
      return;
    default:
      sub_100231E18(v40);
      v20 = v241;
      v24 = v240;
      v18 = v242;
      goto LABEL_2;
  }
}

void sub_1002301F0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  void *v43;
  uint64_t v44;
  id *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[2];
  char v60;
  __int128 v61;
  char v62;
  uint64_t v63;

  v4 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v59[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119ED10);
  __chkstk_darwin(v7);
  v9 = (char *)&v59[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59[0] = 0;
  v10 = sub_100007E8C(&qword_10119F050);
  State.init(wrappedValue:)(v59, v10);
  *(_OWORD *)(a2 + 16) = v61;
  v59[0] = 0;
  v59[1] = 0;
  v60 = 1;
  v11 = sub_100007E8C(&qword_10119F058);
  State.init(wrappedValue:)(v59, v11);
  v12 = v62;
  v13 = v63;
  *(_OWORD *)(a2 + 32) = v61;
  *(_BYTE *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = swift_getKeyPath(&unk_100EB0688);
  *(_BYTE *)(a2 + 72) = 0;
  v14 = (int *)sub_100007E8C(&qword_10119EEE8);
  v15 = (_QWORD *)(a2 + v14[12]);
  *v15 = swift_getKeyPath(&unk_100EB06B0);
  v16 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = (_QWORD *)(a2 + v14[13]);
  v18 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v19 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v17 = EnvironmentObject.init()(v18, v19);
  v17[1] = v20;
  v21 = (_QWORD *)(a2 + v14[14]);
  v22 = type metadata accessor for NoticePresenter(0);
  v23 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v21 = EnvironmentObject.init()(v22, v23);
  v21[1] = v24;
  v25 = a2 + v14[15];
  *(_QWORD *)v25 = sub_1000DEC04;
  *(_QWORD *)(v25 + 8) = 0;
  *(_BYTE *)(v25 + 16) = 0;
  v26 = (_QWORD *)(a2 + v14[16]);
  v27 = type metadata accessor for NavigationPusher();
  v28 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v26 = EnvironmentObject.init()(v27, v28);
  v26[1] = v29;
  v30 = (_QWORD *)(a2 + v14[17]);
  v31 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v32 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v30 = EnvironmentObject.init()(v31, v32);
  v30[1] = v33;
  v34 = (_QWORD *)(a2 + v14[18]);
  v35 = type metadata accessor for TabSelectionManager(0);
  v36 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v34 = EnvironmentObject.init()(v35, v36);
  v34[1] = v37;
  v38 = a2 + v14[19];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_100EB06E0);
  *(_QWORD *)(v38 + 8) = 0;
  *(_BYTE *)(v38 + 16) = 0;
  v39 = a2 + v14[20];
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100EB0708);
  *(_QWORD *)(v39 + 8) = 0;
  *(_BYTE *)(v39 + 16) = 0;
  v40 = type metadata accessor for Library.Context(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 1, 1, v40);
  v41 = objc_allocWithZone((Class)type metadata accessor for JSContainerDetailComponentController(0));
  v42 = a1;
  v43 = (void *)JSContainerDetailComponentController.init(containerDetail:isUsingMediaAPI:headerConfigurationHandler:)(v42, 1, (void (*)(id, __n128))UIScreen.Dimensions.size.getter, 0);
  v44 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v6, 1, 1, v44);
  v45 = (id *)&v42[OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_prominentItemIdentifiers];
  swift_beginAccess(&v42[OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_prominentItemIdentifiers], &v61, 0, 0);
  if (*v45)
  {
    v46 = *v45;
    v47 = MPIdentifierSet.bestStoreIdentifier.getter();
    v49 = v48;

    if (v49)
    {
      v50 = MusicItemID.init(_:)(v47, v49);
      v49 = v51;
    }
    else
    {
      v50 = 0;
    }
  }
  else
  {
    v50 = 0;
    v49 = 0;
  }
  v52 = sub_100007E8C(&qword_10119F068);
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v53 = sub_1000A0B14((uint64_t)v9, v43, (uint64_t)v6, v50, v49);

  v54 = sub_100049F28(&qword_10119F070, &qword_10119F068, (uint64_t)&unk_100EAF19C);
  v55 = ObservedObject.init(wrappedValue:)(v53, v52, v54);
  v57 = v56;

  *(_QWORD *)a2 = v55;
  *(_QWORD *)(a2 + 8) = v57;
}

void sub_100230670(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  void *v43;
  uint64_t v44;
  id *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[2];
  char v60;
  __int128 v61;
  char v62;
  uint64_t v63;

  v4 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v59[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  __chkstk_darwin(v7);
  v9 = (char *)&v59[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59[0] = 0;
  v10 = sub_100007E8C(&qword_10119F2F8);
  State.init(wrappedValue:)(v59, v10);
  *(_OWORD *)(a2 + 16) = v61;
  v59[0] = 0;
  v59[1] = 0;
  v60 = 1;
  v11 = sub_100007E8C(&qword_10119F058);
  State.init(wrappedValue:)(v59, v11);
  v12 = v62;
  v13 = v63;
  *(_OWORD *)(a2 + 32) = v61;
  *(_BYTE *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = swift_getKeyPath(&unk_100EB0688);
  *(_BYTE *)(a2 + 72) = 0;
  v14 = (int *)sub_100007E8C(&qword_10119EEB8);
  v15 = (_QWORD *)(a2 + v14[12]);
  *v15 = swift_getKeyPath(&unk_100EB06B0);
  v16 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = (_QWORD *)(a2 + v14[13]);
  v18 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v19 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v17 = EnvironmentObject.init()(v18, v19);
  v17[1] = v20;
  v21 = (_QWORD *)(a2 + v14[14]);
  v22 = type metadata accessor for NoticePresenter(0);
  v23 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v21 = EnvironmentObject.init()(v22, v23);
  v21[1] = v24;
  v25 = a2 + v14[15];
  *(_QWORD *)v25 = sub_1000DEC04;
  *(_QWORD *)(v25 + 8) = 0;
  *(_BYTE *)(v25 + 16) = 0;
  v26 = (_QWORD *)(a2 + v14[16]);
  v27 = type metadata accessor for NavigationPusher();
  v28 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v26 = EnvironmentObject.init()(v27, v28);
  v26[1] = v29;
  v30 = (_QWORD *)(a2 + v14[17]);
  v31 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v32 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v30 = EnvironmentObject.init()(v31, v32);
  v30[1] = v33;
  v34 = (_QWORD *)(a2 + v14[18]);
  v35 = type metadata accessor for TabSelectionManager(0);
  v36 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v34 = EnvironmentObject.init()(v35, v36);
  v34[1] = v37;
  v38 = a2 + v14[19];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_100EB06E0);
  *(_QWORD *)(v38 + 8) = 0;
  *(_BYTE *)(v38 + 16) = 0;
  v39 = a2 + v14[20];
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100EB0708);
  *(_QWORD *)(v39 + 8) = 0;
  *(_BYTE *)(v39 + 16) = 0;
  v40 = type metadata accessor for Library.Context(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 1, 1, v40);
  v41 = objc_allocWithZone((Class)type metadata accessor for JSContainerDetailComponentController(0));
  v42 = a1;
  v43 = (void *)JSContainerDetailComponentController.init(containerDetail:isUsingMediaAPI:headerConfigurationHandler:)(v42, 1, (void (*)(id, __n128))UIScreen.Dimensions.size.getter, 0);
  v44 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v6, 1, 1, v44);
  v45 = (id *)&v42[OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_prominentItemIdentifiers];
  swift_beginAccess(&v42[OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_prominentItemIdentifiers], &v61, 0, 0);
  if (*v45)
  {
    v46 = *v45;
    v47 = MPIdentifierSet.bestStoreIdentifier.getter();
    v49 = v48;

    if (v49)
    {
      v50 = MusicItemID.init(_:)(v47, v49);
      v49 = v51;
    }
    else
    {
      v50 = 0;
    }
  }
  else
  {
    v50 = 0;
    v49 = 0;
  }
  v52 = sub_100007E8C(&qword_10119F300);
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v53 = sub_1000A1E30((uint64_t)v9, v43, (uint64_t)v6, v50, v49);

  v54 = sub_100049F28(&qword_10119F308, &qword_10119F300, (uint64_t)&unk_100EAF19C);
  v55 = ObservedObject.init(wrappedValue:)(v53, v52, v54);
  v57 = v56;

  *(_QWORD *)a2 = v55;
  *(_QWORD *)(a2 + 8) = v57;
}

void sub_100230AF0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10022E854(*(_QWORD **)(v1 + 8), a1);
}

uint64_t sub_100230AF8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[9];
  uint64_t v24;
  char v25[24];
  char v26[24];
  char v27[24];
  _QWORD v28[16];

  v8 = &a1[OBJC_IVAR____TtC11MusicJSCore18JSMessageViewModel_headerTitle];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicJSCore18JSMessageViewModel_headerTitle], v27, 0, 0);
  v9 = *(_QWORD *)v8;
  v10 = *((_QWORD *)v8 + 1);
  v22 = v9;
  v11 = &a1[OBJC_IVAR____TtC11MusicJSCore18JSMessageViewModel_message];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicJSCore18JSMessageViewModel_message], v26, 0, 0);
  v13 = *(_QWORD *)v11;
  v12 = *((_QWORD *)v11 + 1);
  v14 = &a1[OBJC_IVAR____TtC11MusicJSCore18JSMessageViewModel_accessoryButtonTitle];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicJSCore18JSMessageViewModel_accessoryButtonTitle], v25, 0, 0);
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = (_QWORD *)swift_allocObject(&unk_1010B72E8, 40, 7);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  swift_retain(a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = a1;
  static ApplicationCapabilities.shared.getter((uint64_t)v28);
  sub_100065184(v28);
  v23[0] = BYTE1(v28[0]);
  result = State.init(wrappedValue:)(v23, &type metadata for Bool);
  v20 = v23[1];
  v21 = v24;
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = v22;
  *(_QWORD *)(a4 + 24) = v10;
  *(_QWORD *)(a4 + 32) = v13;
  *(_QWORD *)(a4 + 40) = v12;
  *(_QWORD *)(a4 + 48) = v16;
  *(_QWORD *)(a4 + 56) = v15;
  *(_QWORD *)(a4 + 64) = sub_100232218;
  *(_QWORD *)(a4 + 72) = v17;
  *(_BYTE *)(a4 + 80) = 0;
  *(_QWORD *)(a4 + 88) = sub_1005AF250;
  *(_QWORD *)(a4 + 96) = 0;
  *(_BYTE *)(a4 + 104) = v20;
  *(_QWORD *)(a4 + 112) = v21;
  return result;
}

uint64_t sub_100230C74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t result;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  uint64_t v22;
  __int128 v23;
  _QWORD v24[4];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  v23 = xmmword_100EA93A0;
  v13 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  v14 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  if (a2)
  {
    v24[3] = _s18PerformanceConteXtVMa(0);
    v15 = sub_100049F68(v24);
    swift_retain(a2);
    v16 = v12;
    sub_1005F5640((uint64_t)v21, 0, (uint64_t)v11, (uint64_t)v8, 0, a2, 0, 0, (uint64_t)v15, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
    JSSegueCoordinator.initiateSegue(source:type:snapshotImpressions:pageDetailsProvider:performanceContext:)(a1, 1, 0, 0, (uint64_t)v24);

    return sub_10004FF60((uint64_t)v24, &qword_10119DCC0);
  }
  else
  {
    v18 = v12;
    v19 = sub_100007E8C(&qword_10119CBF8);
    v20 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    result = EnvironmentObject.error()(0, a3, v19, v20);
    __break(1u);
  }
  return result;
}

uint64_t sub_100230E74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100230AF8(*(char **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100230E80@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  char *v26;
  id v27;
  __n128 v28;
  uint64_t v30;
  uint64_t v31;
  char v32[24];
  _QWORD v33[2];
  char v34[24];

  v31 = a5;
  v9 = sub_100007E8C((uint64_t *)&unk_1011C4E20);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100007E8C(&qword_10119DFD8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (char *)*a1;
  v17 = (uint64_t *)((char *)*a1 + OBJC_IVAR____TtC11MusicJSCore13JSAlertAction_title);
  swift_beginAccess(v17, v34, 0, 0);
  v18 = *v17;
  v19 = v17[1];
  v33[0] = v18;
  v33[1] = v19;
  v20 = &v16[OBJC_IVAR____TtC11MusicJSCore13JSAlertAction_alertActionStyle];
  swift_beginAccess(&v16[OBJC_IVAR____TtC11MusicJSCore13JSAlertAction_alertActionStyle], v32, 0, 0);
  if (*v20)
  {
    if (*v20 == 1)
    {
      v21 = swift_bridgeObjectRetain();
      static ButtonRole.cancel.getter(v21);
    }
    else
    {
      swift_bridgeObjectRetain();
      static ButtonRole.destructive.getter(v11);
    }
    v23 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 0, 1, v23);
  }
  else
  {
    v22 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
    swift_bridgeObjectRetain();
  }
  v24 = (_QWORD *)swift_allocObject(&unk_1010B7338, 48, 7);
  v24[2] = v16;
  v24[3] = a2;
  v24[4] = a3;
  v24[5] = a4;
  v25 = sub_100055B68();
  v26 = v16;
  v27 = a2;
  v28 = swift_retain(a3);
  Button<>.init<A>(_:role:action:)(v33, v11, sub_100232294, v24, &type metadata for String, v25, v28);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v31, v15, v12);
}

uint64_t sub_100231094(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t result;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  uint64_t v23;
  __int128 v24;
  _QWORD v25[4];

  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  v23 = 0;
  memset(v22, 0, sizeof(v22));
  v24 = xmmword_100EA93A0;
  v14 = type metadata accessor for OpenURLAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  v15 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
  if (a3)
  {
    v25[3] = _s18PerformanceConteXtVMa(0);
    v16 = sub_100049F68(v25);
    swift_retain(a3);
    v17 = v13;
    sub_1005F5640((uint64_t)v22, 0, (uint64_t)v12, (uint64_t)v9, 0, a3, 0, 0, (uint64_t)v16, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
    JSSegueCoordinator.initiateSegue(source:type:snapshotImpressions:pageDetailsProvider:performanceContext:)(a1, 0, 0, 0, (uint64_t)v25);

    return sub_10004FF60((uint64_t)v25, &qword_10119DCC0);
  }
  else
  {
    v19 = v13;
    v20 = sub_100007E8C(&qword_10119CBF8);
    v21 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    result = EnvironmentObject.error()(0, a4, v20, v21);
    __break(1u);
  }
  return result;
}

uint64_t sub_100231294()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[24];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = (uint64_t *)(*(_QWORD *)v0 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_alertActions);
  swift_beginAccess(v4, v14, 0, 0);
  v13 = *v4;
  v5 = (_QWORD *)swift_allocObject(&unk_1010B7310, 40, 7);
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v3;
  swift_retain(v1);
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = sub_100007E8C(&qword_1011A7AC0);
  v8 = sub_100007E8C(&qword_10119DFD8);
  v9 = sub_100049F28(&qword_1011A7AC8, &qword_1011A7AC0, (uint64_t)&protocol conformance descriptor for [A]);
  v10 = sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v11 = sub_100048748(&qword_1011A7AD0, (uint64_t (*)(uint64_t))type metadata accessor for JSAlertAction, (uint64_t)&protocol conformance descriptor for JSObject);
  return ForEach<>.init(_:content:)(&v13, sub_100232254, v5, v7, &type metadata for String, v8, v9, v10, v11);
}

void sub_1002313E0()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t OpaqueTypeConformance2;
  _QWORD v15[4];
  _QWORD v16[3];
  id v17;
  uint64_t v18;
  id v19;

  v2 = *v0;
  v1 = (void *)v0[1];
  v3 = type metadata accessor for JSComponentController(0);
  v4 = sub_100048748(&qword_10119F048, type metadata accessor for JSComponentController, (uint64_t)&protocol conformance descriptor for JSComponentController);
  v5 = v1;
  v6 = ObservedObject.init(wrappedValue:)(v5, v3, v4);
  v8 = v7;
  v9 = v5;
  v16[2] = v6;
  v17 = v8;
  v18 = ObservedObject.init(wrappedValue:)(v9, v3, v4);
  v19 = v10;
  v15[2] = v2;
  v15[3] = v9;
  v11 = sub_100007E8C(&qword_1011A7938);
  v12 = sub_100007E8C(&qword_1011A7940);
  v13 = sub_100231534();
  v16[0] = sub_100044B54(&qword_1011A7960);
  v16[1] = sub_100049F28(&qword_1011A7968, &qword_1011A7960, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v16, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  View.toolbar<A>(content:)(sub_10023152C, v15, v11, v12, v13, OpaqueTypeConformance2);

}

uint64_t sub_10023152C()
{
  uint64_t v0;

  return sub_10022E6A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100231534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7948;
  if (!qword_1011A7948)
  {
    v1 = sub_100044B54(&qword_1011A7938);
    sub_1002315A0();
    sub_1002315E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7948);
  }
  return result;
}

unint64_t sub_1002315A0()
{
  unint64_t result;

  result = qword_1011A7950;
  if (!qword_1011A7950)
  {
    result = swift_getWitnessTable(&unk_100EB0564, &type metadata for CatalogComponentView.ContentView);
    atomic_store(result, (unint64_t *)&qword_1011A7950);
  }
  return result;
}

unint64_t sub_1002315E4()
{
  unint64_t result;

  result = qword_1011A7958;
  if (!qword_1011A7958)
  {
    result = swift_getWitnessTable(&unk_100EC0748, &type metadata for ComponentControllerLifecycleModifier);
    atomic_store(result, (unint64_t *)&qword_1011A7958);
  }
  return result;
}

uint64_t sub_100231628@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10022E7C8(*(_QWORD **)(v1 + 24), a1);
}

unint64_t sub_100231630()
{
  unint64_t result;

  result = qword_1011A7970;
  if (!qword_1011A7970)
  {
    result = swift_getWitnessTable(&unk_100ED672C, &type metadata for JSHeaderItemBarButtonView);
    atomic_store(result, (unint64_t *)&qword_1011A7970);
  }
  return result;
}

unint64_t sub_100231674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7988;
  if (!qword_1011A7988)
  {
    v1 = sub_100044B54(&qword_1011A7980);
    sub_1002316E0();
    sub_1000A5658();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7988);
  }
  return result;
}

unint64_t sub_1002316E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7990;
  if (!qword_1011A7990)
  {
    v1 = sub_100044B54(&qword_1011A7998);
    sub_1000A05E8();
    sub_100049F28((unint64_t *)&unk_1011B6D80, &qword_1011D1220, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7990);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CatalogComponentView.ContentView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for CatalogComponentView.ContentView(uint64_t a1)
{

}

_QWORD *assignWithCopy for CatalogComponentView.ContentView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for CatalogComponentView.ContentView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for CatalogComponentView.ContentView()
{
  return &type metadata for CatalogComponentView.ContentView;
}

uint64_t sub_100231814()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v0 = sub_100044B54(&qword_1011A7938);
  v1 = sub_100044B54(&qword_1011A7940);
  v2 = sub_100231534();
  v5 = sub_100044B54(&qword_1011A7960);
  v6 = sub_100049F28(&qword_1011A7968, &qword_1011A7960, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v5 = v0;
  v6 = v1;
  v7 = v2;
  v8 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
}

unint64_t sub_1002318D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A79A0;
  if (!qword_1011A79A0)
  {
    v1 = sub_100044B54(&qword_1011A79A8);
    sub_100231674();
    sub_1000A02C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A79A0);
  }
  return result;
}

uint64_t sub_10023193C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F992BC, 1);
}

unint64_t sub_10023194C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A38;
  if (!qword_1011A7A38)
  {
    v1 = sub_100044B54(&qword_1011A7A30);
    sub_1002319B8();
    sub_1002319FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A38);
  }
  return result;
}

unint64_t sub_1002319B8()
{
  unint64_t result;

  result = qword_1011A7A40;
  if (!qword_1011A7A40)
  {
    result = swift_getWitnessTable(&unk_100EB0798, &type metadata for CatalogComponentView.MessageView);
    atomic_store(result, (unint64_t *)&qword_1011A7A40);
  }
  return result;
}

unint64_t sub_1002319FC()
{
  unint64_t result;

  result = qword_1011A7A48;
  if (!qword_1011A7A48)
  {
    result = swift_getWitnessTable("\tl ", &type metadata for CatalogComponentView.AlertView);
    atomic_store(result, (unint64_t *)&qword_1011A7A48);
  }
  return result;
}

unint64_t sub_100231A40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A58;
  if (!qword_1011A7A58)
  {
    v1 = sub_100044B54(&qword_1011A79F8);
    sub_100231AAC();
    sub_100231CA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A58);
  }
  return result;
}

unint64_t sub_100231AAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A60;
  if (!qword_1011A7A60)
  {
    v1 = sub_100044B54(&qword_1011A79F0);
    sub_100231B30();
    sub_100048748(&qword_1011A7A80, type metadata accessor for CatalogStack, (uint64_t)&unk_100EC77D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A60);
  }
  return result;
}

unint64_t sub_100231B30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A68;
  if (!qword_1011A7A68)
  {
    v1 = sub_100044B54(&qword_1011A7A28);
    sub_100231B9C();
    sub_100231C20();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A68);
  }
  return result;
}

unint64_t sub_100231B9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A70;
  if (!qword_1011A7A70)
  {
    v1 = sub_100044B54(&qword_1011A7A20);
    sub_1000A077C();
    sub_100049F28(&qword_10119EFE0, &qword_10119EEE8, (uint64_t)"ٴ ");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A70);
  }
  return result;
}

unint64_t sub_100231C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A78;
  if (!qword_1011A7A78)
  {
    v1 = sub_100044B54(&qword_1011A7A08);
    sub_1000A077C();
    sub_100049F28(&qword_10119F010, &qword_10119EEB8, (uint64_t)"ٴ ");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A78);
  }
  return result;
}

unint64_t sub_100231CA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A88;
  if (!qword_1011A7A88)
  {
    v1 = sub_100044B54(&qword_1011A79D0);
    sub_100048748(&qword_1011A7A80, type metadata accessor for CatalogStack, (uint64_t)&unk_100EC77D0);
    sub_100231D28();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A88);
  }
  return result;
}

unint64_t sub_100231D28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7A90;
  if (!qword_1011A7A90)
  {
    v1 = sub_100044B54(&qword_1011A79C0);
    sub_100049F28(&qword_1011A7A98, &qword_1011A79B8, (uint64_t)&unk_100EA8520);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7A90);
  }
  return result;
}

unint64_t sub_100231DAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7AA0;
  if (!qword_1011A7AA0)
  {
    v1 = sub_100044B54(&qword_1011A7A50);
    sub_10023194C();
    sub_1000A02C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7AA0);
  }
  return result;
}

void sub_100231E18(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)

}

unint64_t sub_100231E34(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return (unint64_t)(id)(result & 0xFFFFFFFFFFFFFF9);
  return result;
}

void *sub_100231E50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    return sub_100231E60(a1, a2);
  return a1;
}

id sub_100231E60(void *a1, uint64_t a2)
{
  swift_retain(a2);
  return a1;
}

void *sub_100231E88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    return (void *)sub_100231E98(a1, a2);
  return a1;
}

uint64_t sub_100231E98(void *a1, uint64_t a2)
{

  return swift_release(a2);
}

uint64_t sub_100231EBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100231EE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100808D38(a1);
}

uint64_t sub_100231EE8@<X0>(id *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1008090CC(a1, a2);
}

uint64_t sub_100231EF0()
{
  uint64_t v0;

  return UIScreen.Dimensions.size.getter(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100231F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogStack(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100231F64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CatalogStack(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for CatalogComponentView.AlertView(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + 8));
}

ValueMetadata *type metadata accessor for CatalogComponentView.AlertView()
{
  return &type metadata for CatalogComponentView.AlertView;
}

_QWORD *_s5Music20CatalogComponentViewV9AlertViewVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_retain(v4);
  return a1;
}

uint64_t _s5Music20CatalogComponentViewV9AlertViewVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_retain(v8);
  swift_release(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t _s5Music20CatalogComponentViewV9AlertViewVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Player.NowPlayingConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Player.NowPlayingConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogComponentView.MessageView()
{
  return &type metadata for CatalogComponentView.MessageView;
}

unint64_t sub_100232188()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7AB0;
  if (!qword_1011A7AB0)
  {
    v1 = sub_100044B54(&qword_1011A7AB8);
    sub_100231A40();
    sub_100231DAC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7AB0);
  }
  return result;
}

uint64_t sub_1002321F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9930C, 1);
}

uint64_t sub_100232204(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F992E4, 1);
}

uint64_t sub_100232218()
{
  uint64_t v0;

  return sub_100230C74(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100232228()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100232254@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100230E80(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_100232260()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100232294()
{
  uint64_t v0;

  return sub_100231094(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1002322A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7AD8;
  if (!qword_1011A7AD8)
  {
    v1 = sub_100044B54(&qword_1011A7AE0);
    sub_100232328();
    sub_100049F28(&qword_1011A7AF0, &qword_1011A7AF8, (uint64_t)&unk_100EC8CF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7AD8);
  }
  return result;
}

unint64_t sub_100232328()
{
  unint64_t result;

  result = qword_1011A7AE8;
  if (!qword_1011A7AE8)
  {
    result = swift_getWitnessTable(&unk_100EBDA2C, &type metadata for NoContentView);
    atomic_store(result, (unint64_t *)&qword_1011A7AE8);
  }
  return result;
}

unint64_t sub_100232370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7B00;
  if (!qword_1011A7B00)
  {
    v1 = sub_100044B54(&qword_1011A7B08);
    sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7B00);
  }
  return result;
}

uint64_t *sub_100232410(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = type metadata accessor for Artist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for Composer(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Genre(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100232538(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for Artist(0);
  }
  else if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Composer(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for Genre(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void *sub_1002325A8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for Artist(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for Composer(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Genre(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1002326A8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s6AlbumsV5ScopeOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for Artist(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Composer(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Genre(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t _s6AlbumsV5ScopeOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A7B80, (uint64_t)&_s6AlbumsV5ScopeOMn);
}

void *sub_1002327D4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for Artist(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for Composer(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Genre(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1002328D4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s6AlbumsV5ScopeOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for Artist(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Composer(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Genre(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1002329EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  result = type metadata accessor for Genre(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Composer(319);
    if (v4 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Artist(319);
      if (v5 <= 0x3F)
      {
        v6[2] = *(_QWORD *)(result - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 3, v6);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100232A88(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a3[6];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = _s6AlbumsV5ScopeOMa(0);
    swift_retain(v4);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = type metadata accessor for Artist(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
      swift_storeEnumTagMultiPayload(v9, v11, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for Composer(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for Genre(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_QWORD *)(v7 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_QWORD *)(v7 + v17) = *(uint64_t *)((char *)a2 + v17);
    *(_WORD *)(v7 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

double sub_100232C24(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  double result;

  swift_release(*a1);
  v4 = (char *)a1 + a2[6];
  v5 = _s6AlbumsV5ScopeOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v7 = type metadata accessor for Artist(0);
      goto LABEL_7;
    case 1:
      v7 = type metadata accessor for Composer(0);
      goto LABEL_7;
    case 0:
      v7 = type metadata accessor for Genre(0);
LABEL_7:
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
      break;
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8])).n128_u64[0];
  return result;
}

uint64_t sub_100232CD0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = _s6AlbumsV5ScopeOMa(0);
  swift_retain(v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 2)
  {
    v13 = type metadata accessor for Artist(0);
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    swift_storeEnumTagMultiPayload(v8, v10, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v14 = type metadata accessor for Composer(0);
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Genre(0);
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (uint64_t *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + v16) = *(uint64_t *)((char *)a2 + v16);
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_100232E44(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_10005B748((uint64_t)a1 + v8, _s6AlbumsV5ScopeOMa);
    v11 = _s6AlbumsV5ScopeOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = type metadata accessor for Artist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
      swift_storeEnumTagMultiPayload(v9, v11, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for Composer(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for Genre(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
  }
  v16 = a3[7];
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v17[1];
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = a3[8];
  v21 = *(uint64_t *)((char *)a1 + v20);
  *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v21);
  v22 = a3[9];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *v23 = *v24;
  v23[1] = v24[1];
  return a1;
}

uint64_t sub_100233000(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = _s6AlbumsV5ScopeOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = type metadata accessor for Artist(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    swift_storeEnumTagMultiPayload(v7, v9, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for Composer(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for Genre(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload(v7, v9, 0);
  }
  v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  return a1;
}

uint64_t *sub_100233150(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  if (a1 != a2)
  {
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_10005B748((uint64_t)a1 + v7, _s6AlbumsV5ScopeOMa);
    v10 = _s6AlbumsV5ScopeOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for Artist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload(v8, v10, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Composer(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v8, v9, v14);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = type metadata accessor for Genre(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
      swift_storeEnumTagMultiPayload(v8, v10, 0);
    }
  }
  v15 = a3[7];
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  v20 = v16[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = *(uint64_t *)((char *)a1 + v21);
  *(uint64_t *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *v24 = *v25;
  v24[1] = v25[1];
  return a1;
}

uint64_t sub_1002332EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002332F8);
}

uint64_t sub_1002332F8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s6AlbumsV5ScopeOMa(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_100233374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100233380);
}

char *sub_100233380(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = _s6AlbumsV5ScopeOMa(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t _s6AlbumsVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A7C10, (uint64_t)&_s6AlbumsVMn);
}

uint64_t sub_100233408(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100EB0828;
  result = _s6AlbumsV5ScopeOMa(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100EB0840;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = &unk_100EB0858;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002334A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_1002334EC(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int16 v24;
  char *v25;
  uint64_t v26;
  _BYTE *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char v34;
  void *v35;
  _QWORD *v36;
  Swift::Int v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;

  v39 = _s6AlbumsV5ScopeOMa(0);
  v6 = __chkstk_darwin(v39);
  v38[1] = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v38[0] = (char *)v38 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v38 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)v38 - v13;
  v15 = type metadata accessor for MusicLibrary(0);
  *(_QWORD *)a3 = static MusicLibrary.shared.getter(v15);
  v16 = (int *)_s6AlbumsVMa(0);
  v17 = (_QWORD *)(a3 + v16[7]);
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  v40 = v16[8];
  *(_QWORD *)(a3 + v40) = &_swiftEmptySetSingleton;
  sub_10005B704(a1, a3 + v16[6], _s6AlbumsV5ScopeOMa);
  *(_BYTE *)(a3 + 8) = a2;
  v18 = (void *)objc_opt_self(NSUserDefaults);
  v19 = objc_msgSend(v18, "standardUserDefaults");
  sub_100234FA0();
  v21 = v20;
  v22 = sub_100049FE4();
  sub_10004A028();
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&_s11ContentSortVN, v22, &v42);

  v23 = a1;
  swift_bridgeObjectRelease(v21);
  v24 = v42;
  sub_10005B704(a1, (uint64_t)v14, _s6AlbumsV5ScopeOMa);
  if ((v24 & 0xFF00) == 0x200)
  {
    sub_10005B704((uint64_t)v14, (uint64_t)v12, _s6AlbumsV5ScopeOMa);
    v25 = (char *)&loc_1002336EC + dword_10023396C[swift_getEnumCaseMultiPayload(v12, v39)];
    __asm { BR              X10 }
  }
  sub_10005B748((uint64_t)v14, _s6AlbumsV5ScopeOMa);
  v26 = v40;
  v27 = (_BYTE *)(a3 + v16[9]);
  *v27 = v24;
  v27[1] = HIBYTE(v24) & 1;
  v28 = objc_msgSend(v18, "standardUserDefaults");
  v29 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
  sub_10023515C();
  v31 = v30;
  v32 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  NSUserDefaults.decodeValue<A>(_:forKey:)(v29, v32, &v41);

  swift_bridgeObjectRelease(v31);
  v33 = v41;
  if (!v41)
  {
    sub_100235300();
    Optional<A>.convertToSet.getter(v34);
    if (v35)
      v33 = v35;
    else
      v33 = &_swiftEmptySetSingleton;
  }
  v36 = sub_100235664();
  v37 = sub_1001A53A0((uint64_t)v36, (uint64_t)v33);
  sub_10005B748(v23, _s6AlbumsV5ScopeOMa);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(*(_QWORD *)(a3 + v26));
  *(_QWORD *)(a3 + v26) = v37;
}

void sub_100233980()
{
  sub_10023515C();
}

uint64_t sub_1002339A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD v19[10];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _OWORD v24[2];
  uint64_t v25;
  _QWORD v26[6];

  v20 = _s6AlbumsVMa(0);
  v2 = __chkstk_darwin(v20);
  v19[8] = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v23 = (char *)v19 - v4;
  v5 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  __chkstk_darwin(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v19[9] = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v19 - v10;
  sub_100235EC8();
  KeyPath = swift_getKeyPath(&unk_100EB0AF0);
  v13 = Album.id.getter(KeyPath);
  v15 = v14;
  v26[0] = v13;
  v26[1] = v14;
  MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)(KeyPath, v26, v6, &protocol witness table for Album, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease(v15);
  swift_release(KeyPath);
  v26[3] = v6;
  v26[4] = sub_1002371E0();
  v16 = sub_100049F68(v26);
  (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v16, v11, v6);
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v26, v24);
  v17 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v6);
}

uint64_t sub_100233F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  _QWORD v25[6];

  v21 = a2;
  v19 = sub_100007E8C(&qword_1011A38D8);
  __chkstk_darwin(v19);
  v20 = _s6AlbumsVMa(0);
  v3 = __chkstk_darwin(v20);
  v17[3] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  __chkstk_darwin(v5);
  v18 = sub_100007E8C(&qword_1011A8FA0);
  v6 = __chkstk_darwin(v18);
  v17[4] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  v10 = (char *)v17 - v9;
  v25[3] = sub_100007E8C((uint64_t *)&unk_1011B69A0);
  v25[4] = sub_1002371E0();
  sub_100049F68(v25);
  sub_100235EC8();
  sub_100237248(a1, (uint64_t)v10);
  v11 = type metadata accessor for Album(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011A8FA0);
    v22 = 0u;
    v23 = 0u;
    v24 = 0;
  }
  else
  {
    *((_QWORD *)&v23 + 1) = v11;
    v24 = &protocol witness table for Album;
    v13 = sub_100049F68(&v22);
    (*(void (**)(_QWORD *, char *, uint64_t))(v12 + 32))(v13, v10, v11);
  }
  v14 = v21;
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(v25, &v22);
  v15 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

void sub_100234580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  _QWORD v10[5];
  uint64_t v11;
  uint64_t v12;

  v12 = a1;
  v2 = type metadata accessor for Artist(0);
  v10[3] = *(_QWORD *)(v2 - 8);
  v10[4] = v2;
  __chkstk_darwin(v2);
  v3 = type metadata accessor for Composer(0);
  v10[1] = *(_QWORD *)(v3 - 8);
  v10[2] = v3;
  __chkstk_darwin(v3);
  v4 = type metadata accessor for Genre(0);
  __chkstk_darwin(v4);
  v5 = _s6AlbumsV5ScopeOMa(0);
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v8 = (char *)v10 - v7;
  v11 = v1 + *(int *)(_s6AlbumsVMa(0) + 24);
  sub_10005B704(v11, (uint64_t)v8, _s6AlbumsV5ScopeOMa);
  v9 = (char *)sub_1002346F4 + 4 * byte_100EB07E8[swift_getEnumCaseMultiPayload(v8, v5)];
  __asm { BR              X10 }
}

void sub_1002346F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  __n128 v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v4);
  KeyPath = swift_getKeyPath(&unk_100EB0AA0);
  v8 = sub_100007E8C(&qword_1011A38D8);
  MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v5, v8);
  v9 = swift_release(KeyPath);
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v5, v4, v9);
  sub_10005B704(*(_QWORD *)(v6 - 104), v1, _s6AlbumsV5ScopeOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v0);
  sub_10005B748(v1, _s6AlbumsV5ScopeOMa);
  if (EnumCaseMultiPayload != 2)
  {
    v11 = swift_getKeyPath(&unk_100EB0A50);
    *(_BYTE *)(v6 - 81) = 1;
    v12 = sub_100007E8C(&qword_1011A38D8);
    ((void (*)(uint64_t, uint64_t, uint64_t, void *, void *))MusicLibrarySectionedRequest<>.includeItems<A>(matching:equalTo:))(v11, v6 - 81, v12, &protocol witness table for Album, &protocol witness table for Bool);
    swift_release(v11);
  }
}

void sub_1002348F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  __n128 v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = _s6AlbumsVMa(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(_BYTE *)(v0 + *(int *)(v2 + 36)))
  {
    case 0:
      KeyPath = swift_getKeyPath(&unk_100EB09D8);
      v6 = sub_100007E8C(&qword_1011A38D8);
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 1, v6);
      goto LABEL_9;
    case 1:
      v17 = swift_getKeyPath(&unk_100EB0A00);
      v18 = sub_100007E8C(&qword_1011A38D8);
      v19 = v17;
      v20 = 0;
      goto LABEL_11;
    case 2:
      KeyPath = swift_getKeyPath(&unk_100EB0988);
      v6 = sub_100007E8C(&qword_1011A38D8);
      MusicLibrarySectionedRequest<>.sortItems<A>(by:ascending:)(KeyPath, 0, v6, &protocol witness table for Album);
LABEL_9:
      swift_release(KeyPath);
      v19 = swift_getKeyPath(&unk_100EB09B0);
      v17 = v19;
      v20 = 1;
      v18 = v6;
      goto LABEL_11;
    case 3:
      v17 = swift_getKeyPath(&unk_100EB09B0);
      v18 = sub_100007E8C(&qword_1011A38D8);
      v19 = v17;
      v20 = 1;
LABEL_11:
      MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v19, v20, v18);
      swift_release(v17);
      break;
    default:
      if (qword_10119C028 != -1)
        swift_once(&qword_10119C028, sub_10046477C);
      v7 = type metadata accessor for Logger(0);
      sub_100048B14(v7, (uint64_t)static Logger.libraryView);
      v8 = sub_10005B704(v0, (uint64_t)v4, _s6AlbumsVMa);
      v9 = Logger.logObject.getter(v8);
      v11 = static os_log_type_t.fault.getter(v10);
      if (os_log_type_enabled(v9, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(12, -1);
        v13 = swift_slowAlloc(32, -1);
        *(_DWORD *)v12 = 136446210;
        v22 = v13;
        LOBYTE(v21) = v4[*(int *)(v1 + 36)];
        v14 = String.init<A>(describing:)(&v21, &_s11ContentSortV6OptionON);
        v16 = v15;
        v21 = sub_100322200(v14, v15, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
        swift_bridgeObjectRelease(v16);
        sub_10005B748((uint64_t)v4, _s6AlbumsVMa);
        _os_log_impl((void *)&_mh_execute_header, v9, v11, "Tried to apply unhandled sortOption=%{public}s to albums request.", v12, 0xCu);
        swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v13, -1, -1);
        swift_slowDealloc(v12, -1, -1);
      }
      else
      {
        sub_10005B748((uint64_t)v4, _s6AlbumsVMa);
      }

      break;
  }
}

void sub_100234C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[9];

  v3 = type metadata accessor for MusicFavoriteStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(int *)(_s6AlbumsVMa(0) + 32);
  v8 = *(_QWORD *)(v1 + v7);
  if (!*(_QWORD *)(v8 + 16)
    || (v30 = a1,
        Hasher.init(_seed:)(v31, *(_QWORD *)(v8 + 40)),
        String.hash(into:)(v31, 0x657469726F766166, 0xE900000000000073),
        v9 = Hasher._finalize()(),
        v10 = -1 << *(_BYTE *)(v8 + 32),
        v11 = v9 & ~v10,
        ((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0))
  {
    if (!*(_QWORD *)(v8 + 16))
      return;
    goto LABEL_13;
  }
  v29 = v1;
  v12 = ~v10;
  while (!*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11))
  {
    v13 = 0xE300000000000000;
    v14 = 7105633;
LABEL_8:
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v13, 0x657469726F766166, 0xE900000000000073, 0);
    swift_bridgeObjectRelease(v13);
    if ((v15 & 1) != 0)
      goto LABEL_23;
    v11 = (v11 + 1) & v12;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    {
      if (!*(_QWORD *)(v8 + 16))
        return;
      goto LABEL_13;
    }
  }
  if (*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11) == 2)
  {
    v13 = 0xE900000000000073;
    v14 = 0x64616F6C6E776F64;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_23:
  KeyPath = swift_getKeyPath(&unk_100EB0960);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for MusicFavoriteStatus.favorited(_:), v3);
  v24 = sub_100007E8C(&qword_1011A38D8);
  v25 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(KeyPath, v6, v24, &protocol witness table for Album, v25);
  v26 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v26);
  v8 = *(_QWORD *)(v29 + v7);
  if (!*(_QWORD *)(v8 + 16))
    return;
LABEL_13:
  Hasher.init(_seed:)(v31, *(_QWORD *)(v8 + 40));
  String.hash(into:)(v31, 0x64616F6C6E776F64, 0xE900000000000073);
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(v8 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v8 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    return;
  v19 = ~v17;
  while (2)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v8 + 48) + v18))
    {
      v20 = 0xE300000000000000;
      v21 = 7105633;
      goto LABEL_19;
    }
    v20 = 0xE900000000000073;
    v21 = 0x657469726F766166;
    if (*(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) == 1)
    {
LABEL_19:
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, 0x64616F6C6E776F64, 0xE900000000000073, 0);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) != 0)
        goto LABEL_25;
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v8 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        return;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_25:
  v27 = sub_100007E8C(&qword_1011A38D8);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(1, v27);
}

void sub_100234FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = v0;
  v2 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v1, (uint64_t)v4, v5);
  v6 = (char *)sub_10023504C + 4 * byte_100EB07F1[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_10023504C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;

  sub_10005B748(v0, _s6AlbumsV5ScopeOMa);
  strcpy((char *)(v1 - 48), "LibraryGenres");
  *(_WORD *)(v1 - 34) = -4864;
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 0x53746E65746E6F43;
  v2._object = (void *)0xEB0000000074726FLL;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(0xED00007365726E65);
  return *(_QWORD *)(v1 - 48);
}

void sub_10023513C()
{
  sub_10023515C();
}

void sub_10023515C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s6AlbumsVMa(0);
  sub_10005B704(v0 + *(int *)(v4 + 24), (uint64_t)v3, _s6AlbumsV5ScopeOMa);
  v5 = (char *)sub_100235220 + 4 * byte_100EB07F6[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100235220()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;

  sub_10005B748(v2, _s6AlbumsV5ScopeOMa);
  strcpy((char *)(v3 - 64), "LibraryGenres");
  *(_WORD *)(v3 - 50) = -4864;
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v1;
  v4._object = v0;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xED00007365726E65);
  return *(_QWORD *)(v3 - 64);
}

void sub_100235300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = _s6AlbumsV5ScopeOMa(0);
  v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - v3;
  v5 = _s6AlbumsVMa(0);
  sub_10005B704(v0 + *(int *)(v5 + 24), (uint64_t)v4, _s6AlbumsV5ScopeOMa);
  v6 = (char *)&loc_1002353AC + dword_10023563C[swift_getEnumCaseMultiPayload(v4, v1)];
  __asm { BR              X10 }
}

uint64_t sub_1002353BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v4 = sub_10010C130(5u);
  sub_10005B748(v2, _s6AlbumsV5ScopeOMa);
  if (v4 == 3)
  {
    sub_10005B704(v1, v0, _s6AlbumsV5ScopeOMa);
    v5 = (char *)&loc_100235444 + *((int *)qword_100235650 + swift_getEnumCaseMultiPayload(v0, v3));
    __asm { BR              X10 }
  }
  return v4;
}

_QWORD *sub_100235664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = _s6AlbumsVMa(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0 + *(int *)(v1 + 24), (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload(v6, v4) - 1 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    sub_10005B704(v0, (uint64_t)v3, _s6AlbumsVMa);
LABEL_6:
    sub_10005B748((uint64_t)v3, _s6AlbumsVMa);
    v8 = &off_1010AA008;
    goto LABEL_10;
  }
  v9 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  sub_10005B704(v0, (uint64_t)v3, _s6AlbumsVMa);
  if (v10 == (id)6)
    goto LABEL_6;
  v18 = *v3;
  v11 = v18;
  v12 = type metadata accessor for MusicLibrary(0);
  swift_retain(v11);
  v14 = static MusicLibrary.shared.getter(v13);
  v17 = v14;
  v15 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  LOBYTE(v12) = dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v17, v12, v15);
  swift_release(v11);
  swift_release(v14);
  sub_10005B748((uint64_t)v3, _s6AlbumsVMa);
  if ((v12 & 1) != 0)
    v8 = &off_1010AA030;
  else
    v8 = &off_1010AA008;
LABEL_10:
  sub_10005B748((uint64_t)v6, _s6AlbumsV5ScopeOMa);
  return v8;
}

void sub_10023587C(__int16 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD v13[6];

  v3 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v3);
  v4 = v1 + *(int *)(_s6AlbumsVMa(0) + 36);
  v5 = *(_BYTE *)v4;
  v6 = *(unsigned __int8 *)(v4 + 1);
  sub_1005CFF5C(*(_BYTE *)v4);
  if ((v7 & 1) == 0 || v6 != (unsigned __int16)(a1 & 0x100) >> 8)
  {
    v8 = (void *)objc_opt_self(NSUserDefaults);
    v9 = objc_msgSend(v8, "standardUserDefaults");
    v13[3] = &_s11ContentSortVN;
    v13[4] = sub_100049FE4();
    v13[5] = sub_10004A028();
    LOBYTE(v13[0]) = v5;
    BYTE1(v13[0]) = v6;
    sub_10023515C();
    v11 = v10;
    NSUserDefaults.encodeValue(_:forKey:)(v13);
    swift_bridgeObjectRelease(v11);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
    v12 = objc_msgSend(v8, "standardUserDefaults", v13[0]);
    __asm { BR              X10 }
  }
}

void sub_100235B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[4];

  v1 = type metadata accessor for Artist(0);
  v10[2] = *(_QWORD *)(v1 - 8);
  v10[3] = v1;
  __chkstk_darwin(v1);
  v10[1] = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Composer(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for Genre(0);
  __chkstk_darwin(v4);
  v5 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v7, v8);
  v9 = (char *)sub_100235C58 + 4 * byte_100EB07FB[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }
}

uint64_t sub_100235C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v3, v4, v2);
  Hasher._combine(_:)(2uLL);
  v5 = sub_100048748(&qword_10119EE10, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
  dispatch thunk of Hashable.hash(into:)(v0, v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
}

Swift::Int sub_100235DA8(uint64_t a1, uint64_t a2)
{
  return sub_100236918(a1, a2, (void (*)(_QWORD *))sub_100235B10);
}

Swift::Int sub_100235DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100236968(a1, a2, a3, (void (*)(_QWORD *))sub_100235B10);
}

uint64_t sub_100235DC8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumFilter.isCompilation.getter(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_100235E0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumFilter.genres.getter);
}

uint64_t sub_100235E18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumInternalFilter.composers.getter);
}

uint64_t sub_100235E24(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumFilter.artists.getter);
}

uint64_t sub_100235E30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumInternalInclusionProperties.isSingleMusicVideo.getter(v3, v4);
  *a2 = result & 1;
  return result;
}

uint64_t sub_100235E78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumSortProperties.title.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100235EBC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumInternalFilter.favoriteStatus.getter);
}

void sub_100235EC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  char *v18;
  _QWORD v19[20];

  v1 = v0;
  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v19[8] = *(_QWORD *)(v2 - 8);
  v19[9] = v2;
  __chkstk_darwin(v2);
  v19[7] = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Artist(0);
  v19[5] = *(_QWORD *)(v4 - 8);
  v19[6] = v4;
  __chkstk_darwin(v4);
  v19[4] = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Composer(0);
  v19[2] = *(_QWORD *)(v6 - 8);
  v19[3] = v6;
  __chkstk_darwin(v6);
  v7 = type metadata accessor for Genre(0);
  v19[0] = *(_QWORD *)(v7 - 8);
  v19[1] = v7;
  __chkstk_darwin(v7);
  v8 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Album(0);
  v12 = type metadata accessor for Track(0);
  MusicLibrarySectionedRequest.init()(v11, v12, &protocol witness table for Album, &protocol witness table for Track);
  v13 = *v1;
  swift_retain(*v1);
  v14 = sub_100007E8C((uint64_t *)&unk_1011B69A0);
  MusicLibrarySectionedRequest.library.setter(v13, v14);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v1 + 8), v14);
  v15 = _s6AlbumsVMa(0);
  MusicLibrarySectionedRequest.filterSections<>(text:)(*(uint64_t *)((char *)v1 + *(int *)(v15 + 28)), *(uint64_t *)((char *)v1 + *(int *)(v15 + 28) + 8), v14, &protocol witness table for Album);
  KeyPath = swift_getKeyPath(&unk_100EB0B18);
  MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 1, v14);
  swift_release(KeyPath);
  v17 = swift_getKeyPath(&unk_100EB0B40);
  MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v17, 1, v14);
  swift_release(v17);
  sub_10005B704((uint64_t)v1 + *(int *)(v15 + 24), (uint64_t)v10, _s6AlbumsV5ScopeOMa);
  v18 = (char *)sub_10023612C + 4 * byte_100EB0800[swift_getEnumCaseMultiPayload(v10, v8)];
  __asm { BR              X10 }
}

void sub_10023612C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  __n128 v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;

  v7 = *(_QWORD *)(v5 - 240);
  v6 = *(_QWORD *)(v5 - 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, v4, v6);
  KeyPath = swift_getKeyPath(&unk_100EB0BB8);
  MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v3, v1);
  v9 = swift_release(KeyPath);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v3, v6, v9);
  v10 = (_BYTE *)(v0 + *(int *)(v2 + 36));
  switch(*v10)
  {
    case 0:
      v11 = swift_getKeyPath(&unk_100EB09D8);
      ((void (*)(uint64_t, _QWORD, uint64_t, void *))MusicLibrarySectionedRequest.sortSections<A>(by:ascending:))(v11, v10[1], v1, &protocol witness table for Album);
      swift_release(v11);
      v12 = swift_getKeyPath(&unk_100EB09B0);
      v13 = v12;
      v14 = 1;
      v15 = v1;
      goto LABEL_7;
    case 1:
      v16 = &unk_100EB0A00;
      goto LABEL_6;
    case 2:
      v17 = swift_getKeyPath(&unk_100EB0988);
      ((void (*)(uint64_t, _QWORD, uint64_t, void *))MusicLibrarySectionedRequest<>.sortSections<A>(by:ascending:))(v17, v10[1], v1, &protocol witness table for Album);
      swift_release(v17);
      v12 = swift_getKeyPath(&unk_100EB09B0);
      v13 = v12;
      v14 = 1;
      v15 = v1;
      goto LABEL_7;
    case 3:
      v16 = &unk_100EB09B0;
LABEL_6:
      v12 = swift_getKeyPath(v16);
      v13 = v12;
      v14 = v10[1];
      v15 = v1;
LABEL_7:
      ((void (*)(uint64_t, uint64_t, uint64_t, void *))MusicLibrarySectionedRequest.sortSections<A>(by:ascending:))(v12, v14, v15, &protocol witness table for Album);
      swift_release(v13);
      break;
    default:
      break;
  }
  v18 = *(int *)(v2 + 32);
  v19 = *(_QWORD *)(v0 + v18);
  if (!*(_QWORD *)(v19 + 16))
    goto LABEL_20;
  Hasher.init(_seed:)((_QWORD *)(v5 - 160), *(_QWORD *)(v19 + 40));
  String.hash(into:)(v5 - 160, 0x657469726F766166, 0xE900000000000073);
  v20 = Hasher._finalize()();
  v21 = -1 << *(_BYTE *)(v19 + 32);
  v22 = v20 & ~v21;
  if (((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
    goto LABEL_20;
  v23 = ~v21;
  while (!*(_BYTE *)(*(_QWORD *)(v19 + 48) + v22))
  {
    v24 = 0xE300000000000000;
    v25 = 7105633;
LABEL_15:
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v24, 0x657469726F766166, 0xE900000000000073, 0);
    swift_bridgeObjectRelease(v24);
    if ((v26 & 1) != 0)
      goto LABEL_19;
    v22 = (v22 + 1) & v23;
    if (((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_20;
  }
  if (*(_BYTE *)(*(_QWORD *)(v19 + 48) + v22) == 2)
  {
    v24 = 0xE900000000000073;
    v25 = 0x64616F6C6E776F64;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_19:
  v27 = swift_getKeyPath(&unk_100EB0960);
  v29 = *(_QWORD *)(v5 - 184);
  v28 = *(_QWORD *)(v5 - 176);
  v30 = *(_QWORD *)(v5 - 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v29, enum case for MusicFavoriteStatus.favorited(_:), v30);
  v31 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  ((void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t))MusicLibrarySectionedRequest<>.filterSections<A>(matching:equalTo:))(v27, v29, v1, &protocol witness table for Album, v31);
  v32 = swift_release(v27);
  (*(void (**)(uint64_t, uint64_t, __n128))(v28 + 8))(v29, v30, v32);
LABEL_20:
  v33 = *(_QWORD *)(v0 + v18);
  if (!*(_QWORD *)(v33 + 16))
    return;
  Hasher.init(_seed:)((_QWORD *)(v5 - 160), *(_QWORD *)(v33 + 40));
  String.hash(into:)(v5 - 160, 0x64616F6C6E776F64, 0xE900000000000073);
  v34 = Hasher._finalize()();
  v35 = -1 << *(_BYTE *)(v33 + 32);
  v36 = v34 & ~v35;
  if (((*(_QWORD *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
    return;
  v37 = ~v35;
  while (2)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v33 + 48) + v36))
    {
      v38 = 0xE300000000000000;
      v39 = 7105633;
      goto LABEL_27;
    }
    v38 = 0xE900000000000073;
    v39 = 0x657469726F766166;
    if (*(_BYTE *)(*(_QWORD *)(v33 + 48) + v36) == 1)
    {
LABEL_27:
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v38, 0x64616F6C6E776F64, 0xE900000000000073, 0);
      swift_bridgeObjectRelease(v38);
      if ((v40 & 1) != 0)
        goto LABEL_30;
      v36 = (v36 + 1) & v37;
      if (((*(_QWORD *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        return;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_30:
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(1, v1);
}

uint64_t sub_100236644(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackFilter.artists.getter);
}

void sub_100236650(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = type metadata accessor for MusicLibrary(0);
  v5 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8));
  v6 = _s6AlbumsVMa(0);
  sub_100235B10();
  v7 = (uint64_t *)(v1 + *(int *)(v6 + 28));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v2 + *(int *)(v6 + 32));
  swift_bridgeObjectRetain();
  sub_100045DAC(a1, v10);
  swift_bridgeObjectRelease(v10);
  __asm { BR              X10 }
}

void sub_10023676C()
{
  uint64_t v0;
  Swift::UInt8 v1;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1);
}

void sub_100236840(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2;
  v6 = type metadata accessor for TitledSection(0);
  v7 = type metadata accessor for Album(0);
  MusicLibrarySectionedRequest.init()(v6, v7, &protocol witness table for TitledSection, &protocol witness table for Album);
  v8 = *v4;
  swift_retain(*v4);
  v9 = sub_100007E8C(&qword_1011A38D8);
  MusicLibrarySectionedRequest.library.setter(v8, v9);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*((unsigned __int8 *)v4 + 8), v9);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)((char *)v4 + *(int *)(a1 + 28)));
  sub_100234580(a2);
  sub_1002348F8();
  sub_100234C2C(a2);
}

Swift::Int sub_10023690C(uint64_t a1, uint64_t a2)
{
  return sub_100236918(a1, a2, (void (*)(_QWORD *))sub_100236650);
}

Swift::Int sub_100236918(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  a3(v5);
  return Hasher._finalize()();
}

Swift::Int sub_10023695C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100236968(a1, a2, a3, (void (*)(_QWORD *))sub_100236650);
}

Swift::Int sub_100236968(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *))
{
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_1002369A8()
{
  return sub_100048748(&qword_1011A7C58, _s6AlbumsVMa, (uint64_t)&unk_100EB0870);
}

void *sub_1002369D4()
{
  return &protocol witness table for Album;
}

uint64_t sub_1002369E0(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011A7D38, _s6AlbumsVMa, (uint64_t)&unk_100EB0898);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100236A1C()
{
  return sub_100048748(&qword_1011A7D40, _s6AlbumsV5ScopeOMa, (uint64_t)&unk_100EB08F4);
}

uint64_t sub_100236A48(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumInternalFilter.favoriteStatus.getter);
}

uint64_t sub_100236A54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumInternalSortProperties.releaseYear.getter(v3, v4);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v6 & 1;
  return result;
}

uint64_t sub_100236AA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumSortProperties.title.getter, a2);
}

uint64_t sub_100236AAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumSortProperties.artistName.getter, a2);
}

uint64_t sub_100236AB8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumSortProperties.libraryAddedDate.getter);
}

uint64_t sub_100236AC4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumFilter.artists.getter);
}

uint64_t sub_100236AD0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumInternalInclusionProperties.isSingleMusicVideo.getter(v3, v4);
  *a2 = result & 1;
  return result;
}

uint64_t sub_100236B18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumInternalFilter.composers.getter);
}

uint64_t sub_100236B24(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAlbumFilter.genres.getter);
}

uint64_t sub_100236B30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumFilter.isCompilation.getter(v3, v4);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_100236B74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _UNKNOWN **v10;
  _UNKNOWN **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s6AlbumsVMa(0);
  sub_10005B704((uint64_t)v0 + *(int *)(v4 + 24), (uint64_t)v3, _s6AlbumsV5ScopeOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    sub_10005B748((uint64_t)v3, _s6AlbumsV5ScopeOMa);
    v12 = type metadata accessor for MusicLibrary(0);
    v13 = *v0;
    v14 = static MusicLibrary.shared.getter(v12);
    v9 = static MusicLibrary.== infix(_:_:)(v13, v14);
    swift_release(v14);
    v10 = &off_1010A9C28;
    v11 = &off_1010A9C00;
  }
  else
  {
    if ((EnumCaseMultiPayload - 3) >= 2)
      sub_10005B748((uint64_t)v3, _s6AlbumsV5ScopeOMa);
    v6 = type metadata accessor for MusicLibrary(0);
    v7 = *v0;
    v8 = static MusicLibrary.shared.getter(v6);
    v9 = static MusicLibrary.== infix(_:_:)(v7, v8);
    swift_release(v8);
    v10 = &off_1010A9BD8;
    v11 = &off_1010A9BB0;
  }
  if ((v9 & 1) != 0)
    return v11;
  else
    return v10;
}

void sub_100236CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[6];
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = a2;
  v2 = type metadata accessor for Artist(0);
  v16[4] = *(_QWORD *)(v2 - 8);
  v16[5] = v2;
  __chkstk_darwin(v2);
  v16[1] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Composer(0);
  v16[2] = *(_QWORD *)(v4 - 8);
  v16[3] = v4;
  __chkstk_darwin(v4);
  v16[0] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Genre(0);
  __chkstk_darwin(v6);
  v7 = _s6AlbumsV5ScopeOMa(0);
  v8 = __chkstk_darwin(v7);
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v10 = sub_100007E8C(&qword_1011A7D48);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10005B704(v17, (uint64_t)v13, _s6AlbumsV5ScopeOMa);
  sub_10005B704(v18, v14, _s6AlbumsV5ScopeOMa);
  v15 = (char *)sub_100236EA8 + 4 * byte_100EB0810[swift_getEnumCaseMultiPayload(v13, v7)];
  __asm { BR              X10 }
}

uint64_t sub_100236EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(uint64_t, uint64_t);

  sub_10005B704(v0, v3, _s6AlbumsV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload(v1, v6))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
    sub_10004FF60(v0, &qword_1011A7D48);
    v7 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v1, v2);
    v7 = ((uint64_t (*)(uint64_t, uint64_t))static Genre.== infix(_:_:))(v3, v4);
    v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v8(v4, v2);
    v8(v3, v2);
    sub_10005B748(v0, _s6AlbumsV5ScopeOMa);
  }
  return v7 & 1;
}

uint64_t sub_1002370AC(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_11;
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    goto LABEL_11;
  v4 = (int *)_s6AlbumsVMa(0);
  sub_100236CD4(a1 + v4[6], a2 + v4[6]);
  if ((v5 & 1) == 0)
    goto LABEL_11;
  v6 = v4[7];
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v9[1];
  v11 = v7 == *v9 && v8 == v10;
  if (v11 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, *v9, v10, 0), v13 = 0, (v12 & 1) != 0))
  {
    if ((sub_10016CD08(*(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a2 + v4[8])) & 1) != 0)
    {
      v14 = v4[9];
      v15 = *(_BYTE *)(a1 + v14 + 1);
      v16 = *(_BYTE *)(a2 + v14 + 1);
      sub_1005CFF5C(*(_BYTE *)(a1 + v14));
      v13 = v17 & (v15 ^ v16 ^ 1);
      return v13 & 1;
    }
LABEL_11:
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_10023719C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryAlbumFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1002371E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A7D50;
  if (!qword_1011A7D50)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011B69A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A7D50);
  }
  return result;
}

uint64_t sub_100237234(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTrackFilter.artists.getter);
}

uint64_t sub_100237248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A8FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100237290(uint64_t result)
{
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v2 = *(void (**)(uint64_t, uint64_t, __n128))(v1 + 72);
  if (v2)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + 80);
    v5 = swift_retain(v4);
    v2(v1, v3, v5);
    return sub_10004BA30((uint64_t)v2, v4);
  }
  return result;
}

uint64_t sub_1002372F0(uint64_t result, char a2)
{
  uint64_t v2;
  void (*v3)(_QWORD, uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v3 = *(void (**)(_QWORD, uint64_t, __n128))(v2 + 88);
  if (v3)
  {
    v5 = result;
    v6 = *(_QWORD *)(v2 + 96);
    v7 = swift_retain(v6);
    v3(a2 & 1, v5, v7);
    return sub_10004BA30((uint64_t)v3, v6);
  }
  return result;
}

uint64_t sub_100237350()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  sub_10004BA30(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_10004BA30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_10004BA30(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for PresentationDonationItem()
{
  return objc_opt_self(_TtC5Music24PresentationDonationItem);
}

uint64_t sub_1002373BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  sub_10004BA30(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_10004BA30(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_10004BA30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_10004BA30(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  sub_10004BA30(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return v0;
}

uint64_t sub_100237408()
{
  uint64_t v0;

  sub_1002373BC();
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for PresentationDonationTarget()
{
  return objc_opt_self(_TtC5Music26PresentationDonationTarget);
}

uint64_t sub_100237448(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  result = (uint64_t)_swiftEmptyArrayStorage;
  v38 = *(_QWORD *)(a1 + 16);
  if (!v38)
    return result;
  v4 = a2 & 1;
  v32 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  v5 = 0;
  v35 = (uint64_t *)(a1 + 40);
  v37 = a1;
  while (1)
  {
    v33 = v5;
    v6 = (_QWORD *)(v32 + 16 * v5);
    v7 = *v6;
    v8 = v6[1];
    ObjectType = swift_getObjectType(*v6);
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    swift_unknownObjectRetain(v7, v11);
    result = v10(ObjectType, v8);
    v34 = result;
    if ((unint64_t)result >> 62)
      break;
    v12 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = v37;
    if (v12)
      goto LABEL_6;
LABEL_3:
    v5 = v33 + 1;
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v34);
    if (v33 + 1 == v38)
    {
      swift_bridgeObjectRelease(v13);
      return (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  if (result >= 0)
    result &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(result);
  v12 = result;
  v13 = v37;
  if (!result)
    goto LABEL_3;
LABEL_6:
  v14 = 0;
  v36 = v12;
LABEL_9:
  if ((v34 & 0xC000000000000001) != 0)
  {
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v34);
    v15 = result;
    v16 = __OFADD__(v14, 1);
    v17 = v14 + 1;
    if (v16)
      goto LABEL_29;
    goto LABEL_15;
  }
  if (v14 >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_30;
  v15 = *(_QWORD *)(v34 + 32 + 8 * v14);
  result = swift_retain(v15);
  v16 = __OFADD__(v14, 1);
  v17 = v14 + 1;
  if (!v16)
  {
LABEL_15:
    v39 = v17;
    swift_bridgeObjectRetain(v13);
    v18 = v35;
    v19 = v38;
    while (1)
    {
      v20 = *(v18 - 1);
      if (v20 != v7)
      {
        v21 = *v18;
        v22 = swift_getObjectType(*(v18 - 1));
        v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16);
        swift_unknownObjectRetain(v20, v24);
        v25 = v23(v15, v4, v22, v21);
        if (v25)
        {
          v26 = v25;
          v13 = v37;
          swift_bridgeObjectRelease(v37);
          v27 = *(_QWORD *)(v26 + 40);
          *(_QWORD *)(v26 + 40) = v15;
          swift_retain(v15);
          swift_release(v27);
          v28 = swift_retain(v26);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
          v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v30 >= v29 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
          v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v26);
          specialized Array._endMutation()(v31);
          swift_unknownObjectRelease(v20);
          swift_release(v26);
          result = swift_release(v15);
LABEL_8:
          v14 = v39;
          if (v39 == v36)
            goto LABEL_3;
          goto LABEL_9;
        }
        swift_unknownObjectRelease(v20);
      }
      v18 += 2;
      if (!--v19)
      {
        swift_release(v15);
        v13 = v37;
        result = swift_bridgeObjectRelease(v37);
        goto LABEL_8;
      }
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t *sub_100237718(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UserProfile(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011A2290);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = v12;
      v17 = v14;
      v18 = 1;
    }
    else
    {
      v19 = *v13;
      *v12 = *v13;
      swift_retain(v19);
      v16 = v12;
      v17 = v14;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

double sub_100237870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = type metadata accessor for UserProfile(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v7 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v6).n128_u64[0];
  }
  return result;
}

char *sub_100237924(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = v10;
    v15 = v12;
    v16 = 1;
  }
  else
  {
    v17 = *(_QWORD *)v11;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    swift_retain(v17);
    v14 = v10;
    v15 = v12;
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v15, v16);
  return a1;
}

char *sub_100237A50(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      if (a1 == a2)
        return a1;
      goto LABEL_8;
    }
LABEL_7:
    v11 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_8;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 == a2)
    return a1;
LABEL_8:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  sub_10004FF60((uint64_t)&a1[v12], (uint64_t *)&unk_1011D0D50);
  v15 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = v13;
    v18 = v15;
    v19 = 1;
  }
  else
  {
    v20 = *(_QWORD *)v14;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    swift_retain(v20);
    v17 = v13;
    v18 = v15;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  return a1;
}

char *sub_100237BF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  return a1;
}

char *sub_100237D18(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UserProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      if (a1 == a2)
        return a1;
      goto LABEL_8;
    }
LABEL_7:
    v11 = sub_100007E8C(&qword_1011A2290);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_8;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 == a2)
    return a1;
LABEL_8:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  sub_10004FF60((uint64_t)&a1[v12], (uint64_t *)&unk_1011D0D50);
  v15 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100237EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100237EC0);
}

uint64_t sub_100237EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_100007E8C(&qword_1011A2290);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A8018);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100237F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100237F48);
}

uint64_t sub_100237F48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_100007E8C(&qword_1011A2290);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011A8018);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for AvatarArtworkView(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A8078;
  if (!qword_1011A8078)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AvatarArtworkView);
  return result;
}

void sub_100238008(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1000E3A44(319, (unint64_t *)&qword_1011A8088, (uint64_t (*)(uint64_t))&type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&unk_1011A8090, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t sub_1002380BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F99570, 1);
}

uint64_t sub_1002380CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t OpaqueTypeConformance2;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _BYTE v67[56];

  v2 = v1;
  v64 = a1;
  v3 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  __chkstk_darwin(v3);
  v61 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v5);
  v56 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AvatarArtworkView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A2290);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  v19 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v53 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v52 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v55 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v54);
  v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v2;
  sub_1000FFEA0(v2, (uint64_t)v12);
  v27 = type metadata accessor for UserProfile(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v12, 1, v27) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_1011A2290);
    v29 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 1, 1, v29);
  }
  else
  {
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v27, (uint64_t)&protocol witness table for UserProfile, v15);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
  }
  sub_1002389AC(v26, (uint64_t)v9);
  v30 = type metadata accessor for ArtworkImage.ViewModel(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v15, 1, v30) == 1)
  {
    sub_100238690((uint64_t)v18);
    sub_10005B748((uint64_t)v9, type metadata accessor for AvatarArtworkView);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    sub_10005B748((uint64_t)v9, type metadata accessor for AvatarArtworkView);
    sub_100077A18((uint64_t)v15, (uint64_t)v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v18, 0, 1, v30);
  }
  v32 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v33 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v56, 7, 10, v32);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v67);
  v35 = (uint64_t)v61;
  v34 = v62;
  v36 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v63);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v18, v33, (uint64_t)v67, v35, (uint64_t)v21);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  sub_10005B748(v33, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A3E10);
  v37 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v38 = sub_1000E4264();
  v65 = v37;
  v66 = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v40 = v52;
  View.corner(_:)(0, 0, 1, v19, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v19);
  v41 = Border.artwork.unsafeMutableAddressor();
  v42 = *v41;
  v43 = *((double *)v41 + 1);
  LOBYTE(v37) = *((_BYTE *)v41 + 16);
  swift_retain(*v41);
  v65 = v19;
  v66 = OpaqueTypeConformance2;
  v44 = swift_getOpaqueTypeConformance2(&v65, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v45 = v55;
  v46 = v59;
  View.border(_:corner:)(v42, v37, 0, 0, 1, v59, v44, v43);
  v47 = swift_release(v42);
  (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v40, v46, v47);
  v48 = v58;
  v49 = v60;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v25, v45, v60);
  v50 = &v25[*(int *)(v54 + 36)];
  *(_QWORD *)v50 = 0x3FF0000000000000;
  *((_WORD *)v50 + 4) = 256;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v49);
  return sub_1002389F0((uint64_t)v25, v64);
}

uint64_t sub_100238690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  id v24;
  NSString v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = sub_100007E8C(&qword_1011A2290);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UserProfile(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FFEA0(v2, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    v36 = a1;
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v19 = UserProfile.name.getter(v18);
    if (v20)
    {
      v21 = v20;
      v35 = v19;
      if ((UserProfile.isOnboarded.getter(v19) & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        swift_bridgeObjectRelease(v21);
        goto LABEL_9;
      }
      type metadata accessor for AvatarArtworkView(0);
      sub_100825054((uint64_t)v10);
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LayoutDirection.rightToLeft(_:), v4);
      v22 = static LayoutDirection.== infix(_:_:)(v10, v7);
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v7, v4);
      v23(v10, v4);
      v24 = objc_allocWithZone((Class)MusicMonogramArtworkToken);
      v25 = String._bridgeToObjectiveC()();
      v26 = objc_msgSend(v24, "initWithFullName:rightToLeft:", v25, v22 & 1, swift_bridgeObjectRelease(v21).n128_f64[0]);

      if (v26)
      {
        v27 = (void *)objc_opt_self(MusicMonogramArtworkDataSource);
        v28 = v26;
        v29 = objc_msgSend(v27, "sharedMonogramArtworkDataSource");
        v30 = objc_allocWithZone((Class)MPArtworkCatalog);
        v31 = v28;
        v32 = objc_msgSend(v30, "initWithToken:dataSource:", v31, v29);

        ArtworkImage.ViewModel.init(_:)(v32, v36);
        return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      }
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_9:
    a1 = v36;
    goto LABEL_10;
  }
  sub_10004FF60((uint64_t)v13, &qword_1011A2290);
LABEL_10:
  v34 = type metadata accessor for ArtworkImage.ViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a1, 1, 1, v34);
}

uint64_t sub_1002389AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AvatarArtworkView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002389F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A0628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100238A3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = qword_1011A80C0;
  if (!qword_1011A80C0)
  {
    v1 = sub_100044B54(&qword_1011A0628);
    v2 = sub_100044B54((uint64_t *)&unk_1011C9250);
    v3 = sub_100044B54((uint64_t *)&unk_1011C4FE0);
    v6 = sub_100044B54((uint64_t *)&unk_1011C5080);
    v7 = sub_1000E4264();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A80C0);
  }
  return result;
}

uint64_t *sub_100238B28(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for MusicFavoriteStatus(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_100007E8C(&qword_1011A19A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = v18[8];
    sub_10006B3F8(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    v17[8] = v20;
    v21 = a3[7];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = v22;
      v27 = v24;
      v28 = 1;
    }
    else
    {
      v29 = *v23;
      *v22 = *v23;
      swift_retain(v29);
      v26 = v22;
      v27 = v24;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return v4;
}

double sub_100238CD4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for MusicFavoriteStatus(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_10006B604(*(_QWORD *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  v7 = (_QWORD *)(a1 + a2[7]);
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v7).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100238DB8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for MusicFavoriteStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = v16[8];
  sub_10006B3F8(*(_QWORD *)v16, v18);
  *(_QWORD *)v15 = v17;
  v15[8] = v18;
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    v25 = *v21;
    *v20 = *v21;
    swift_retain(v25);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  return a1;
}

_QWORD *sub_100238F30(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for MusicFavoriteStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_10006B3F8(*(_QWORD *)v18, v20);
  v21 = *(_QWORD *)v17;
  v22 = v17[8];
  *(_QWORD *)v17 = v19;
  v17[8] = v20;
  sub_10006B604(v21, v22);
  if (a1 != a2)
  {
    v23 = a3[7];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    sub_10004FF60((uint64_t)a1 + v23, (uint64_t *)&unk_1011ACE40);
    v26 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = 1;
    }
    else
    {
      v29 = *v25;
      *v24 = *v25;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v26, v28);
  }
  return a1;
}

_OWORD *sub_100239120(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for MusicFavoriteStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  v18 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10023927C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for MusicFavoriteStatus(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = v19[8];
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v19;
  sub_10006B604(v21, v22);
  if (a1 != a2)
  {
    v23 = a3[7];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    sub_10004FF60((uint64_t)a1 + v23, (uint64_t *)&unk_1011ACE40);
    v26 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload(v24, v26, 1);
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100239454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100239460);
}

uint64_t sub_100239460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A19A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100239508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100239514);
}

uint64_t sub_100239514(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A19A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s5TitleVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A8150, (uint64_t)&_s5TitleVMn);
}

void sub_1002395CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_100EB0D28;
  sub_1000E3A44(319, (unint64_t *)&qword_1011A8160, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100EB0D40;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_100239694@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;

  v148 = a1;
  v144 = type metadata accessor for Image.Scale(0);
  v142 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v141 = (char *)&v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v3);
  v121 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = _s5TitleV5SpecsVMa(0);
  __chkstk_darwin(v147);
  v146 = (uint64_t)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v145 = (uint64_t)&v113 - v7;
  __chkstk_darwin(v8);
  v129 = (uint64_t)&v113 - v9;
  __chkstk_darwin(v10);
  v128 = (uint64_t)&v113 - v11;
  __chkstk_darwin(v12);
  v119 = (uint64_t)&v113 - v13;
  __chkstk_darwin(v14);
  v120 = (uint64_t)&v113 - v15;
  v118 = sub_100007E8C(&qword_1011A81A0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v114 = (uint64_t)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011A81A8);
  __chkstk_darwin(v116);
  v115 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C(&qword_1011A81B0);
  __chkstk_darwin(v124);
  v123 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100007E8C(&qword_1011A81B8);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011A81C0);
  __chkstk_darwin(v122);
  v135 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_100007E8C(&qword_1011A81C8);
  __chkstk_darwin(v134);
  v137 = (uint64_t)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C(&qword_1011A81D0);
  __chkstk_darwin(v136);
  v138 = (uint64_t)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100007E8C(&qword_1011A81D8);
  __chkstk_darwin(v139);
  v143 = (uint64_t)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011A81E0);
  __chkstk_darwin(v24);
  v140 = (char *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v26);
  v28 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _s5TitleVMa(0);
  sub_10004A160((uint64_t)v1 + *(int *)(v29 + 20), (uint64_t)v28, &qword_1011A19A0);
  LOBYTE(v28) = TextBadge.init(for:)(v28);
  sub_10023A208(&v149);
  TextBadge.view(favoriteBadgeConfiguration:)(&v149, (char)v28);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_10023A77C((id *)&v149);
  v113 = v1;
  v38 = *v1;
  v39 = v1[1];
  *(_QWORD *)&v149 = v38;
  *((_QWORD *)&v149 + 1) = v39;
  v40 = sub_100055B68();
  swift_bridgeObjectRetain();
  v41 = Text.init<A>(_:)(&v149, &type metadata for String, v40);
  v43 = v42;
  v45 = v44;
  *(_QWORD *)&v149 = v41;
  *((_QWORD *)&v149 + 1) = v42;
  v47 = v46 & 1;
  LOBYTE(v150) = v46 & 1;
  *((_QWORD *)&v150 + 1) = v44;
  v130 = v35;
  v48 = v35 & 1;
  v49 = v114;
  v132 = v31;
  v131 = v33;
  v133 = v37;
  View.textSuffix(_:)(v31, v33, v48, v37, (uint64_t)&type metadata for Text, (uint64_t)&protocol witness table for Text, v114, v50);
  sub_100055BAC(v41, v43, v47);
  v51 = swift_bridgeObjectRelease(v45);
  LODWORD(v43) = static HierarchicalShapeStyle.primary.getter(v51);
  v52 = v117;
  v53 = v115;
  v54 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v115, v49, v118);
  v55 = (uint64_t)v53;
  *(_DWORD *)&v53[*(int *)(v116 + 36)] = v43;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v49, v54);
  v56 = (char *)v113 + *(int *)(v29 + 24);
  v57 = *(_QWORD *)v56;
  LOBYTE(v54) = v56[8];
  sub_10006B3F8(*(_QWORD *)v56, v54);
  LOBYTE(v52) = sub_100824E38(v57, v54);
  sub_10006B604(v57, v54);
  if ((v52 & 1) != 0)
  {
    if (qword_10119BC18 != -1)
      swift_once(&qword_10119BC18, sub_10023A494);
    v58 = qword_1011A80E0;
  }
  else
  {
    if (qword_10119BC10 != -1)
      swift_once(&qword_10119BC10, sub_10023A3B0);
    v58 = qword_1011A80C8;
  }
  v59 = v147;
  v60 = (uint64_t)v135;
  v61 = v124;
  v62 = (uint64_t)v123;
  v63 = sub_100048B14(v147, (uint64_t)v58);
  v64 = v119;
  sub_10023A7B0(v63, v119);
  v65 = v120;
  sub_10023A7F4(v64, v120);
  v66 = type metadata accessor for Font.Design(0);
  v67 = (uint64_t)v121;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v121, 1, 1, v66);
  v68 = static Font.system(_:design:weight:)(v65, v67, *(_QWORD *)(v65 + *(int *)(v59 + 20)), 0);
  sub_10004FF60(v67, &qword_1011C4F30);
  sub_10023A838(v65);
  KeyPath = swift_getKeyPath(&unk_100EB0DC8);
  sub_10004A160(v55, v62, &qword_1011A81A8);
  v70 = (uint64_t *)(v62 + *(int *)(v61 + 36));
  *v70 = KeyPath;
  v70[1] = v68;
  sub_10004FF60(v55, &qword_1011A81A8);
  v71 = *(_QWORD *)v56;
  LOBYTE(KeyPath) = v56[8];
  sub_10006B3F8(*(_QWORD *)v56, KeyPath);
  LOBYTE(v65) = sub_100824E38(v71, KeyPath);
  sub_10006B604(v71, KeyPath);
  if ((v65 & 1) != 0)
  {
    if (qword_10119BC18 != -1)
      swift_once(&qword_10119BC18, sub_10023A494);
    v72 = qword_1011A80E0;
  }
  else
  {
    if (qword_10119BC10 != -1)
      swift_once(&qword_10119BC10, sub_10023A3B0);
    v72 = qword_1011A80C8;
  }
  v73 = sub_100048B14(v59, (uint64_t)v72);
  v74 = v129;
  sub_10023A7B0(v73, v129);
  v75 = v128;
  sub_10023A7F4(v74, v128);
  v76 = *(_QWORD *)(v75 + *(int *)(v59 + 20));
  sub_10023A838(v75);
  v77 = sub_10023A87C();
  v78 = v125;
  View.fontWeight(_:)(v76, 0, v61, v77);
  sub_10004FF60(v62, &qword_1011A81B0);
  v80 = v141;
  v79 = v142;
  v81 = v144;
  (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v141, enum case for Image.Scale.small(_:), v144);
  v82 = swift_getKeyPath(&unk_100EB0DF8);
  v83 = (uint64_t *)(v60 + *(int *)(v122 + 36));
  v84 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))((char *)v83 + *(int *)(v84 + 28), v80, v81);
  *v83 = v82;
  v85 = v126;
  v86 = v127;
  (*(void (**)(uint64_t, char *, uint64_t))(v126 + 16))(v60, v78, v127);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v78, v86);
  v87 = *(_QWORD *)v56;
  LOBYTE(v85) = v56[8];
  sub_10006B3F8(*(_QWORD *)v56, v85);
  LOBYTE(v81) = sub_100824E38(v87, v85);
  sub_10006B604(v87, v85);
  if ((v81 & 1) != 0)
  {
    if (qword_10119BC18 != -1)
      swift_once(&qword_10119BC18, sub_10023A494);
    v88 = qword_1011A80E0;
  }
  else
  {
    if (qword_10119BC10 != -1)
      swift_once(&qword_10119BC10, sub_10023A3B0);
    v88 = qword_1011A80C8;
  }
  v89 = sub_100048B14(v59, (uint64_t)v88);
  v90 = v146;
  sub_10023A7B0(v89, v146);
  v91 = v90;
  v92 = v145;
  sub_10023A7F4(v91, v145);
  v93 = *(_BYTE *)(v92 + *(int *)(v59 + 24));
  sub_10023A838(v92);
  v94 = swift_getKeyPath(&unk_100EB0E28);
  v95 = v137;
  sub_10004A160(v60, v137, &qword_1011A81C0);
  v96 = v95 + *(int *)(v134 + 36);
  *(_QWORD *)v96 = v94;
  *(_BYTE *)(v96 + 8) = v93;
  v97 = sub_10004FF60(v60, &qword_1011A81C0);
  v98 = static Alignment.leading.getter(v97);
  _FrameLayout.init(width:height:alignment:)(&v149, 0, 1, 0, 1, v98, v99);
  v100 = v138;
  sub_10004A160(v95, v138, &qword_1011A81C8);
  v101 = (_OWORD *)(v100 + *(int *)(v136 + 36));
  v102 = v150;
  *v101 = v149;
  v101[1] = v102;
  v101[2] = v151;
  sub_10004FF60(v95, &qword_1011A81C8);
  v103 = swift_getKeyPath(&unk_100EB0E58);
  v104 = v143;
  sub_10004A160(v100, v143, &qword_1011A81D0);
  v105 = v139;
  v106 = v104 + *(int *)(v139 + 36);
  *(_QWORD *)v106 = v103;
  *(_QWORD *)(v106 + 8) = 2;
  *(_BYTE *)(v106 + 16) = 0;
  sub_10004FF60(v100, &qword_1011A81D0);
  v107 = AccessibilityIdentifier.containerDetailHeaderTitle.unsafeMutableAddressor();
  v108 = *v107;
  v109 = v107[1];
  v110 = sub_10023AA54();
  swift_bridgeObjectRetain();
  v111 = (uint64_t)v140;
  View.accessibilityIdentifier(_:)(v108, v109, v105, v110);
  swift_bridgeObjectRelease(v109);
  sub_100055BAC(v132, v131, v130 & 1);
  swift_bridgeObjectRelease(v133);
  sub_10004FF60(v104, &qword_1011A81D8);
  return sub_10023AC74(v111, v148);
}

uint64_t sub_10023A208@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;
  id v4;
  UIFontTextStyle v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  const UIFontTextStyle *v11;
  void *v12;
  id v13;
  __int128 v15;
  ValueMetadata *v16;
  unint64_t v17;

  v3 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (id)6)
  {
    sub_10023ACBC();
    v5 = UIFontTextStyleTitle2;
    v6 = UIFontWeightSemibold;
  }
  else
  {
    v7 = v1 + *(int *)(_s5TitleVMa(0) + 24);
    v8 = *(_QWORD *)v7;
    v9 = *(_BYTE *)(v7 + 8);
    sub_10006B3F8(*(_QWORD *)v7, v9);
    v10 = sub_100824E38(v8, v9);
    sub_10006B604(v8, v9);
    sub_10023ACBC();
    v6 = UIFontWeightBold;
    if ((v10 & 1) != 0)
      v11 = &UIFontTextStyleBody;
    else
      v11 = &UIFontTextStyleSubheadline;
    v5 = *v11;
  }
  v12 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(v5, v6);
  v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v12, 1);

  v16 = &_s5TitleV23FavoriteBadgeShapeStyleVN;
  v17 = sub_10023ACF8();
  return FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)((uint64_t)v13, &v15, a1);
}

uint64_t sub_10023A36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ShapeStyle._makeView<A>(view:inputs:)(a1, a2, a5, a3, a6, a4);
}

uint64_t sub_10023A38C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10023B1C0();
  *a1 = result;
  return result;
}

uint64_t sub_10023A3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for Font.TextStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s5TitleV5SpecsVMa(0);
  sub_10004FACC(v4, qword_1011A80C8);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011A80C8);
  v6 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.title3(_:), v0);
  v7 = static Font.Weight.semibold.getter(v6);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(double *)(v5 + *(int *)(v4 + 20)) = v7;
  *(_BYTE *)(v5 + *(int *)(v4 + 24)) = 1;
  return result;
}

uint64_t sub_10023A494()
{
  uint64_t v0;
  uint64_t v1;

  v0 = _s5TitleV5SpecsVMa(0);
  sub_10004FACC(v0, qword_1011A80E0);
  v1 = sub_100048B14(v0, (uint64_t)qword_1011A80E0);
  return sub_10023A4DC(v1);
}

uint64_t sub_10023A4DC@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, _QWORD, uint64_t);
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104);
  if (v3 == (id)6)
  {
    v6 = v5(a1, enum case for Font.TextStyle.largeTitle(_:), v4);
    v7 = static Font.Weight.bold.getter(v6);
  }
  else
  {
    v8 = v5(a1, enum case for Font.TextStyle.title(_:), v4);
    v7 = static Font.Weight.semibold.getter(v8);
  }
  v9 = v7;
  result = _s5TitleV5SpecsVMa(0);
  *(double *)(a1 + *(int *)(result + 20)) = v9;
  *(_BYTE *)(a1 + *(int *)(result + 24)) = 0;
  return result;
}

uint64_t sub_10023A5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = _s5TitleV5SpecsVMa(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - v9;
  v11 = v2 + *(int *)(a1 + 24);
  v12 = *(_QWORD *)v11;
  LOBYTE(a1) = *(_BYTE *)(v11 + 8);
  sub_10006B3F8(*(_QWORD *)v11, a1);
  v13 = sub_100824E38(v12, a1);
  sub_10006B604(v12, a1);
  if ((v13 & 1) != 0)
  {
    if (qword_10119BC18 != -1)
      swift_once(&qword_10119BC18, sub_10023A494);
    v14 = qword_1011A80E0;
  }
  else
  {
    if (qword_10119BC10 != -1)
      swift_once(&qword_10119BC10, sub_10023A3B0);
    v14 = qword_1011A80C8;
  }
  v15 = sub_100048B14(v5, (uint64_t)v14);
  sub_10023A7B0(v15, (uint64_t)v7);
  sub_10023A7F4((uint64_t)v7, (uint64_t)v10);
  v16 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a2, v10, v16);
}

uint64_t sub_10023A71C(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011A8198, _s5TitleVMa, (uint64_t)&unk_100EB0D74);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10023A758(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F99614, 1);
}

uint64_t _s5TitleV5SpecsVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A8290, (uint64_t)&_s5TitleV5SpecsVMn);
}

id *sub_10023A77C(id *a1)
{
  destroy for FavoriteBadgeConfiguration(a1);
  return a1;
}

uint64_t sub_10023A7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5TitleV5SpecsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023A7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5TitleV5SpecsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023A838(uint64_t a1)
{
  uint64_t v2;

  v2 = _s5TitleV5SpecsVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10023A87C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A81E8;
  if (!qword_1011A81E8)
  {
    v1 = sub_100044B54(&qword_1011A81B0);
    sub_10023A900();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A81E8);
  }
  return result;
}

unint64_t sub_10023A900()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  result = qword_1011A81F0;
  if (!qword_1011A81F0)
  {
    v1 = sub_100044B54(&qword_1011A81A8);
    v2 = sub_100044B54(&qword_1011A5320);
    v3 = sub_100044B54(&qword_1011A81F8);
    v8 = &type metadata for Text;
    v9 = &protocol witness table for Text;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
    v5 = sub_100044B54(&qword_1011A8200);
    v6 = sub_100049F28(&qword_1011A8208, &qword_1011A8200, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v8 = (void *)v5;
    v9 = (void *)v6;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v8 = (void *)v2;
    v9 = (void *)v3;
    v10 = OpaqueTypeConformance2;
    v11 = v7;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.accessibilityRepresentation<A>(representation:)>>, 1);
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A81F0);
  }
  return result;
}

unint64_t sub_10023AA54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A8210;
  if (!qword_1011A8210)
  {
    v1 = sub_100044B54(&qword_1011A81D8);
    sub_10023AAD8();
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A8210);
  }
  return result;
}

unint64_t sub_10023AAD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A8218;
  if (!qword_1011A8218)
  {
    v1 = sub_100044B54(&qword_1011A81D0);
    sub_10023AB44();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A8218);
  }
  return result;
}

unint64_t sub_10023AB44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A8220;
  if (!qword_1011A8220)
  {
    v1 = sub_100044B54(&qword_1011A81C8);
    sub_10023ABC8();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A8220);
  }
  return result;
}

unint64_t sub_10023ABC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011A8228;
  if (!qword_1011A8228)
  {
    v1 = sub_100044B54(&qword_1011A81C0);
    v2[0] = sub_100044B54(&qword_1011A81B0);
    v2[1] = sub_10023A87C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011C94C0, (uint64_t *)&unk_1011C94A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A8228);
  }
  return result;
}

uint64_t sub_10023AC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A81E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10023ACBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A8E90;
  if (!qword_1011A8E90)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011A8E90);
  }
  return result;
}

unint64_t sub_10023ACF8()
{
  unint64_t result;

  result = qword_1011A8230;
  if (!qword_1011A8230)
  {
    result = swift_getWitnessTable(&unk_100EB0ED0, &_s5TitleV23FavoriteBadgeShapeStyleVN);
    atomic_store(result, (unint64_t *)&qword_1011A8230);
  }
  return result;
}

ValueMetadata *_s5TitleV23FavoriteBadgeShapeStyleVMa()
{
  return &_s5TitleV23FavoriteBadgeShapeStyleVN;
}

_QWORD *sub_10023AD4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  }
  return a1;
}

uint64_t sub_10023ADDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10023AE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10023AE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10023AEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10023AF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10023AFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10023AFB0);
}

uint64_t sub_10023AFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t sub_10023B028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10023B034);
}

uint64_t sub_10023B034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t sub_10023B0AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_100EB0EB0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10023B130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A82D0;
  if (!qword_1011A82D0)
  {
    v1 = sub_100044B54(&qword_1011A81E0);
    sub_10023AA54();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A82D0);
  }
  return result;
}

void *sub_10023B1B4()
{
  return &protocol witness table for AnyShapeStyle;
}

uint64_t sub_10023B1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  void *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v0 = type metadata accessor for BlendMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - v5;
  v7 = sub_10023B3D4();
  EnvironmentValues.subscript.getter(v25, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v7);
  if ((v25[0] & 0xFE) == 2)
  {
    v23 = type metadata accessor for TintShapeStyle(0);
    v24 = &protocol witness table for TintShapeStyle;
    sub_100049F68(&v22);
    TintShapeStyle.init()();
  }
  else
  {
    if ((v25[0] & 1) != 0)
      v8 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    else
      v8 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *v8, v0);
    v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
    v10 = static HierarchicalShapeStyle.secondary.getter(v9);
    v11 = sub_100007E8C(&qword_1011A82E0);
    v23 = v11;
    v24 = (void *)sub_100049F28(&qword_1011A82E8, &qword_1011A82E0, (uint64_t)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
    v12 = (char *)sub_100049F68(&v22);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v12[*(int *)(v11 + 36)], v6, v0);
    *(_DWORD *)v12 = v10;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  sub_100064C48(&v22, (uint64_t)v25);
  v13 = v26;
  v14 = v27;
  v15 = sub_100007E68(v25, v26);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
  v20 = AnyShapeStyle.init<A>(_:)(v18, v13, v14);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v25);
  return v20;
}

unint64_t sub_10023B3D4()
{
  unint64_t result;

  result = qword_1011A82D8;
  if (!qword_1011A82D8)
  {
    result = swift_getWitnessTable(&unk_100EC4D14, &type metadata for HeaderModeKey);
    atomic_store(result, (unint64_t *)&qword_1011A82D8);
  }
  return result;
}

void sub_10023B418()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.08);

  qword_1011A82F0 = (uint64_t)v1;
}

void sub_10023B480()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (id)6)
  {
    v3 = objc_msgSend(v2, "whiteColor");
  }
  else
  {
    v4 = objc_msgSend(v2, "labelColor");
    v3 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.45);

  }
  qword_1011A82F8 = (uint64_t)v3;
}

id sub_10023B544()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  qword_1011A8300 = (uint64_t)result;
  return result;
}

void sub_10023B57C()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[5];
  uint64_t v4;

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_10023B620;
  v4 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100264780;
  v3[3] = &unk_1010B7650;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v4);
  qword_1011A8308 = (uint64_t)v2;
}

id sub_10023B620(void *a1)
{
  id v2;
  id v3;
  double v4;
  id v5;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v3 = objc_msgSend(a1, "accessibilityContrast");
  v4 = 0.08;
  if (v3 == (id)1)
    v4 = 0.15;
  v5 = objc_msgSend(v2, "colorWithAlphaComponent:", v4);

  return v5;
}

void sub_10023B6B0()
{
  qword_1011A8310 = Int.seconds.getter(10);
}

void sub_10023B6D0()
{
  qword_1011A8318 = Int.seconds.getter(5);
}

id sub_10023B6F0(id result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistory);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistory) = (_BYTE)result;
  if (result == 2)
  {
    if (v2 != 2)
    {
LABEL_7:
      v3 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButton;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButton), "setHidden:", result == 2);
      return objc_msgSend(*(id *)(v1 + v3), "setNeedsUpdateConfiguration");
    }
  }
  else if (v2 == 2 || ((((v2 & 1) == 0) ^ result) & 1) == 0)
  {
    goto LABEL_7;
  }
  return result;
}

char *sub_10023B780(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v77;
  id v78;
  void **aBlock;
  uint64_t v80;
  void (*v81)(uint64_t, void *);
  void *v82;
  void *v83;
  uint64_t v84;
  objc_super v85;

  v9 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_contentView;
  v10 = objc_allocWithZone((Class)UIStackView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_backdropView;
  v13 = objc_allocWithZone((Class)type metadata accessor for BackdropView());
  *(_QWORD *)&v11[v12] = sub_10044CE0C();
  v14 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayButton;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v15 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleButton;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v16 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatButton;
  *(_QWORD *)&v11[v16] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v17 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButton;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v18 = &v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleType];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = &v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatType];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayState] = 2;
  v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistory] = 2;
  v20 = &v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayButtonAction];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = &v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleButtonAction];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatButtonAction];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v11[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButtonAction];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;

  v85.receiver = v11;
  v85.super_class = (Class)type metadata accessor for NowPlayingQueueControlsView();
  v24 = (char *)objc_msgSendSuper2(&v85, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v24, "setMaximumContentSizeCategory:", UIContentSizeCategoryExtraExtraExtraLarge);
  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v25 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCallout, UIFontWeightSemibold);
  v26 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v27 = objc_msgSend(v26, "configurationWithFont:", v25);

  v28 = objc_msgSend(v26, "configurationWithScale:", 2);
  v29 = objc_msgSend(v27, "configurationByApplyingConfiguration:", v28);

  v30 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayButton;
  v31 = *(void **)&v24[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayButton];
  v32 = swift_allocObject(&unk_1010B74F8, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v24);
  v33 = swift_allocObject(&unk_1010B7520, 32, 7);
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)(v33 + 24) = v29;
  v83 = sub_10023DCB4;
  v84 = v33;
  aBlock = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100223938;
  v82 = &unk_1010B7538;
  v34 = _Block_copy(&aBlock);
  v35 = v84;
  v36 = v31;
  v37 = v29;
  objc_msgSend(v36, "setConfigurationUpdateHandler:", v34, swift_release(v35).n128_f64[0]);
  _Block_release(v34);

  v38 = *(void **)&v24[v30];
  v39 = swift_allocObject(&unk_1010B74F8, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v24);
  v40 = sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  v41 = v38;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10023DCD4, v39, v40);

  v77 = v30;
  objc_msgSend(*(id *)&v24[v30], "setNeedsUpdateConfiguration", swift_release(v39).n128_f64[0]);
  v42 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleButton;
  v43 = *(void **)&v24[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleButton];
  v44 = swift_allocObject(&unk_1010B74F8, 24, 7);
  swift_unknownObjectWeakInit(v44 + 16, v24);
  v45 = swift_allocObject(&unk_1010B7570, 32, 7);
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v37;
  v83 = sub_10023DCF8;
  v84 = v45;
  aBlock = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100223938;
  v82 = &unk_1010B7588;
  v46 = _Block_copy(&aBlock);
  v47 = v84;
  v48 = v37;
  v49 = v43;
  objc_msgSend(v49, "setConfigurationUpdateHandler:", v46, swift_release(v47).n128_f64[0]);
  _Block_release(v46);

  v50 = *(void **)&v24[v42];
  v51 = swift_allocObject(&unk_1010B74F8, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v24);
  v52 = v50;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10023DD00, v51, v40);

  objc_msgSend(*(id *)&v24[v42], "setNeedsUpdateConfiguration", swift_release(v51).n128_f64[0]);
  v53 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatButton;
  v54 = *(void **)&v24[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatButton];
  v55 = swift_allocObject(&unk_1010B74F8, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, v24);
  v56 = swift_allocObject(&unk_1010B75C0, 32, 7);
  *(_QWORD *)(v56 + 16) = v55;
  *(_QWORD *)(v56 + 24) = v48;
  v83 = sub_10023DD24;
  v84 = v56;
  aBlock = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100223938;
  v82 = &unk_1010B75D8;
  v57 = _Block_copy(&aBlock);
  v58 = v84;
  v78 = v48;
  v59 = v54;
  objc_msgSend(v59, "setConfigurationUpdateHandler:", v57, swift_release(v58).n128_f64[0]);
  _Block_release(v57);

  v60 = *(void **)&v24[v53];
  v61 = swift_allocObject(&unk_1010B74F8, 24, 7);
  swift_unknownObjectWeakInit(v61 + 16, v24);
  v62 = v60;
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10023DD2C, v61, v40);

  objc_msgSend(*(id *)&v24[v53], "setNeedsUpdateConfiguration", swift_release(v61).n128_f64[0]);
  LOBYTE(aBlock) = 8;
  v63 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v63) & 1) != 0)
  {
    v64 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButton;
    objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButton], "setHidden:", 1);
    v65 = *(void **)&v24[v64];
    v66 = swift_allocObject(&unk_1010B74F8, 24, 7);
    swift_unknownObjectWeakInit(v66 + 16, v24);
    v67 = swift_allocObject(&unk_1010B7610, 32, 7);
    *(_QWORD *)(v67 + 16) = v66;
    *(_QWORD *)(v67 + 24) = v78;
    v83 = sub_10023DD50;
    v84 = v67;
    aBlock = _NSConcreteStackBlock;
    v80 = 1107296256;
    v81 = sub_100223938;
    v82 = &unk_1010B7628;
    v68 = _Block_copy(&aBlock);
    v69 = v84;
    v70 = v78;
    v71 = v65;
    objc_msgSend(v71, "setConfigurationUpdateHandler:", v68, swift_release(v69).n128_f64[0]);
    _Block_release(v68);

    v72 = *(void **)&v24[v64];
    v73 = swift_allocObject(&unk_1010B74F8, 24, 7);
    swift_unknownObjectWeakInit(v73 + 16, v24);
    v74 = v72;
    ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_10023DD58, v73, v40);

    objc_msgSend(*(id *)&v24[v64], "setNeedsUpdateConfiguration", swift_release(v73).n128_f64[0]);
  }
  v75 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_contentView;
  objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_contentView], "setSpacing:", 13.0);
  objc_msgSend(*(id *)&v24[v75], "setAxis:", 0);
  objc_msgSend(*(id *)&v24[v75], "setDistribution:", 1);
  objc_msgSend(*(id *)&v24[v75], "addArrangedSubview:", *(_QWORD *)&v24[v42]);
  objc_msgSend(*(id *)&v24[v75], "addArrangedSubview:", *(_QWORD *)&v24[v53]);
  objc_msgSend(*(id *)&v24[v75], "addArrangedSubview:", *(_QWORD *)&v24[v77]);
  LOBYTE(aBlock) = 8;
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v63) & 1) != 0)
    objc_msgSend(*(id *)&v24[v75], "addArrangedSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButton]);
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_backdropView]);
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[v75]);

  return v24;
}

uint64_t sub_10023BFF8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  _BYTE *v20;
  NSString v21;
  id v22;
  id v23;
  double v24;
  void (*v25)(_BYTE *, _QWORD);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  id v29;
  void (*v30)(_BYTE *, _QWORD);
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  id v59;
  _BYTE v60[32];
  char v61[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UIButton.Configuration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v61, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v20 = (_BYTE *)result;
    v58 = v8;
    v59 = a1;
    static UIButton.Configuration.plain()(result);
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v21);

    UIButton.Configuration.image.setter(v22);
    v23 = a3;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(a3);
    if (qword_10119BC40 != -1)
      swift_once(&qword_10119BC40, sub_10023B6B0);
    v24 = *(double *)&qword_1011A8310;
    v25 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v60);
    UIBackgroundConfiguration.cornerRadius.setter(v24);
    v25(v60, 0);
    v26 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayState;
    if ((v20[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayState] & 1) != 0)
    {
      if (qword_10119BC28 != -1)
        swift_once(&qword_10119BC28, sub_10023B480);
      v27 = &qword_1011A82F8;
    }
    else
    {
      if (qword_10119BC20 != -1)
        swift_once(&qword_10119BC20, sub_10023B418);
      v27 = &qword_1011A82F0;
    }
    v28 = *v27;
    v29 = (id)*v27;
    v30 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v60);
    UIBackgroundConfiguration.backgroundColor.setter(v28);
    v30(v60, 0);
    if ((v20[v26] & 1) != 0)
    {
      v36 = objc_msgSend(v20, "traitCollection");
      v37 = objc_msgSend(v36, "userInterfaceIdiom");

      v31 = v59;
      if (v37 != (id)6)
      {
        v38 = objc_msgSend(v59, "imageView");
        if (v38)
        {
          v39 = v38;
          v40 = objc_msgSend(v38, "layer");

          objc_msgSend(v40, "setCompositingFilter:", kCAFilterDestOut);
        }
      }
      v41 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
      UIButton.Configuration.baseForegroundColor.setter(v41);
      v42 = 28239;
      v43 = 0xE200000000000000;
    }
    else
    {
      v31 = v59;
      v32 = objc_msgSend(v59, "imageView");
      if (v32)
      {
        v33 = v32;
        v34 = objc_msgSend(v32, "layer");

        objc_msgSend(v34, "setCompositingFilter:", 0);
      }
      if (v20[v26] == 2)
      {
        if (qword_10119BC38 != -1)
          swift_once(&qword_10119BC38, sub_10023B57C);
        v35 = &qword_1011A8308;
      }
      else
      {
        if (qword_10119BC30 != -1)
          swift_once(&qword_10119BC30, sub_10023B544);
        v35 = &qword_1011A8300;
      }
      v44 = *v35;
      v45 = (id)*v35;
      UIButton.Configuration.baseForegroundColor.setter(v44);
      v42 = 6710863;
      v43 = 0xE300000000000000;
    }
    v46 = String.LocalizationValue.init(stringLiteral:)(v42, v43);
    static Locale.current.getter(v46);
    String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, 0, 0, 256);
    v48 = v47;
    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setAccessibilityValue:", v49, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v50 = String.LocalizationValue.init(stringLiteral:)(0x616C50206F747541, 0xE900000000000079);
    static Locale.current.getter(v50);
    String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, 0, 0, 256);
    v52 = v51;
    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setAccessibilityLabel:", v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

    v54 = AccessibilityIdentifier.nowPlayingAutoPlayButton.unsafeMutableAddressor();
    v55 = *v54;
    v56 = v54[1];
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v55, v56);
    v57 = v58;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v58, v18, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v57, 0, 1, v15);
    UIButton.configuration.setter(v57);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

char *sub_10023C5D8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *result;
  NSString v20;
  id v21;
  id v22;
  double v23;
  void (*v24)(_BYTE *, _QWORD);
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  void (*v37)(_BYTE *, _QWORD);
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  void (*v46)(_BYTE *, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _BYTE v60[32];
  _BYTE v61[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UIButton.Configuration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v61, 0, 0);
  result = (char *)swift_unknownObjectWeakLoadStrong(a2);
  v59 = result;
  if (result)
  {
    static UIButton.Configuration.plain()(result);
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v20);

    UIButton.Configuration.image.setter(v21);
    v22 = a3;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(a3);
    if (qword_10119BC40 != -1)
      swift_once(&qword_10119BC40, sub_10023B6B0);
    v23 = *(double *)&qword_1011A8310;
    v24 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v60);
    UIBackgroundConfiguration.cornerRadius.setter(v23);
    v24(v60, 0);
    if ((v59[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleType + 8] & 1) != 0)
    {
      v25 = objc_msgSend(a1, "imageView");
      if (v25)
      {
        v26 = v25;
        v27 = objc_msgSend(v25, "layer");

        objc_msgSend(v27, "setCompositingFilter:", 0);
      }
      if (qword_10119BC38 != -1)
        swift_once(&qword_10119BC38, sub_10023B57C);
      v28 = (void *)qword_1011A8308;
    }
    else
    {
      if ((unint64_t)(*(_QWORD *)&v59[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleType] - 1) <= 1)
      {
        v29 = objc_msgSend(v59, "traitCollection");
        v30 = objc_msgSend(v29, "userInterfaceIdiom");

        if (v30 != (id)6)
        {
          v31 = objc_msgSend(a1, "imageView");
          if (v31)
          {
            v32 = v31;
            v33 = objc_msgSend(v31, "layer");

            objc_msgSend(v33, "setCompositingFilter:", kCAFilterDestOut);
          }
        }
        v34 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
        UIButton.Configuration.baseForegroundColor.setter(v34);
        if (qword_10119BC28 != -1)
          swift_once(&qword_10119BC28, sub_10023B480);
        v35 = qword_1011A82F8;
        v36 = (id)qword_1011A82F8;
        v37 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v60);
        UIBackgroundConfiguration.backgroundColor.setter(v35);
        v37(v60, 0);
        v38 = 28239;
        v39 = 0xE200000000000000;
        goto LABEL_25;
      }
      v40 = objc_msgSend(a1, "imageView");
      if (v40)
      {
        v41 = v40;
        v42 = objc_msgSend(v40, "layer");

        objc_msgSend(v42, "setCompositingFilter:", 0);
      }
      if (qword_10119BC30 != -1)
        swift_once(&qword_10119BC30, sub_10023B544);
      v28 = (void *)qword_1011A8300;
    }
    v43 = v28;
    UIButton.Configuration.baseForegroundColor.setter(v28);
    if (qword_10119BC20 != -1)
      swift_once(&qword_10119BC20, sub_10023B418);
    v44 = qword_1011A82F0;
    v45 = (id)qword_1011A82F0;
    v46 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v60);
    UIBackgroundConfiguration.backgroundColor.setter(v44);
    v46(v60, 0);
    v38 = 6710863;
    v39 = 0xE300000000000000;
LABEL_25:
    v47 = String.LocalizationValue.init(stringLiteral:)(v38, v39);
    static Locale.current.getter(v47);
    String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, 0, 0, 256);
    v49 = v48;
    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setAccessibilityValue:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

    v51 = String.LocalizationValue.init(stringLiteral:)(0x656C6666756853, 0xE700000000000000);
    static Locale.current.getter(v51);
    String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, 0, 0, 256);
    v53 = v52;
    v54 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setAccessibilityLabel:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

    v55 = AccessibilityIdentifier.nowPlayingShuffleButton.unsafeMutableAddressor();
    v56 = *v55;
    v57 = v55[1];
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v56, v57);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v18, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
    UIButton.configuration.setter(v8);

    return (char *)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_10023CC24(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  _BYTE *v20;
  char *v21;
  char v22;
  unint64_t v23;
  NSString v24;
  id v25;
  id v26;
  double v27;
  void (*v28)(_BYTE *, _QWORD);
  id v29;
  void *v30;
  id v31;
  char *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void (*v42)(_BYTE *, _QWORD);
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  void (*v50)(_BYTE *, _QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  id v66;
  _BYTE v67[32];
  char v68[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UIButton.Configuration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v68, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v20 = (_BYTE *)result;
    v65 = v8;
    static UIButton.Configuration.plain()(result);
    v21 = &v20[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatType];
    v22 = v20[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatType + 8];
    v66 = v20;
    if ((v22 & 1) != 0 || *(_QWORD *)v21 != 1)
      v23 = 0xE600000000000000;
    else
      v23 = 0xE800000000000000;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v24);

    UIButton.Configuration.image.setter(v25);
    v26 = a3;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(a3);
    if (qword_10119BC40 != -1)
      swift_once(&qword_10119BC40, sub_10023B6B0);
    v27 = *(double *)&qword_1011A8310;
    v28 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v67);
    UIBackgroundConfiguration.cornerRadius.setter(v27);
    v28(v67, 0);
    if ((v21[8] & 1) != 0)
    {
      v29 = objc_msgSend(a1, "imageView");
      if (v29)
      {
        v30 = v29;
        v31 = objc_msgSend(v29, "layer");

        objc_msgSend(v31, "setCompositingFilter:", 0);
      }
      v32 = v65;
      if (qword_10119BC38 != -1)
        swift_once(&qword_10119BC38, sub_10023B57C);
      v33 = (void *)qword_1011A8308;
    }
    else
    {
      if ((unint64_t)(*(_QWORD *)v21 - 1) <= 1)
      {
        v34 = objc_msgSend(v66, "traitCollection");
        v35 = objc_msgSend(v34, "userInterfaceIdiom");

        if (v35 != (id)6)
        {
          v36 = objc_msgSend(a1, "imageView");
          if (v36)
          {
            v37 = v36;
            v38 = objc_msgSend(v36, "layer");

            objc_msgSend(v38, "setCompositingFilter:", kCAFilterDestOut);
          }
        }
        v39 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
        UIButton.Configuration.baseForegroundColor.setter(v39);
        if (qword_10119BC28 != -1)
          swift_once(&qword_10119BC28, sub_10023B480);
        v40 = qword_1011A82F8;
        v41 = (id)qword_1011A82F8;
        v42 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v67);
        UIBackgroundConfiguration.backgroundColor.setter(v40);
        v42(v67, 0);
        if ((v21[8] & 1) != 0 || *(_QWORD *)v21 != 1)
          v43 = 7105601;
        else
          v43 = 6647375;
        v56 = String.LocalizationValue.init(stringLiteral:)(v43, 0xE300000000000000);
        static Locale.current.getter(v56);
        v55 = v66;
        String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, 0, 0, 256);
        v53 = v57;
        v54 = String._bridgeToObjectiveC()();
        v32 = v65;
        goto LABEL_33;
      }
      v44 = objc_msgSend(a1, "imageView");
      if (v44)
      {
        v45 = v44;
        v46 = objc_msgSend(v44, "layer");

        objc_msgSend(v46, "setCompositingFilter:", 0);
      }
      v32 = v65;
      if (qword_10119BC30 != -1)
        swift_once(&qword_10119BC30, sub_10023B544);
      v33 = (void *)qword_1011A8300;
    }
    v47 = v33;
    UIButton.Configuration.baseForegroundColor.setter(v33);
    if (qword_10119BC20 != -1)
      swift_once(&qword_10119BC20, sub_10023B418);
    v48 = qword_1011A82F0;
    v49 = (id)qword_1011A82F0;
    v50 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v67);
    UIBackgroundConfiguration.backgroundColor.setter(v48);
    v50(v67, 0);
    v51 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
    static Locale.current.getter(v51);
    String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, 0, 0, 256);
    v53 = v52;
    v54 = String._bridgeToObjectiveC()();
    v55 = v66;
LABEL_33:
    objc_msgSend(a1, "setAccessibilityValue:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

    v58 = String.LocalizationValue.init(stringLiteral:)(0x746165706552, 0xE600000000000000);
    static Locale.current.getter(v58);
    String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v11, 0, 0, 256);
    v60 = v59;
    v61 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setAccessibilityLabel:", v61, swift_bridgeObjectRelease(v60).n128_f64[0]);

    v62 = AccessibilityIdentifier.nowPlayingRepeatButton.unsafeMutableAddressor();
    v63 = *v62;
    v64 = v62[1];
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v63, v64);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v32, v18, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v32, 0, 1, v15);
    UIButton.configuration.setter(v32);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_10023D31C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t result;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  NSString v17;
  id v18;
  id v19;
  double v20;
  void (*v21)(_BYTE *, _QWORD);
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void (*v35)(_BYTE *, _QWORD);
  _BYTE v37[32];
  _BYTE v38[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v6);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v38, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v14 = (_BYTE *)result;
    static UIButton.Configuration.plain()(result);
    v15 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistory;
    if ((v14[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistory] & 1) != 0)
      v16 = 0xE900000000000068;
    else
      v16 = 0xE300000000000000;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

    UIButton.Configuration.image.setter(v18);
    v19 = a3;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(a3);
    if (qword_10119BC40 != -1)
      swift_once(&qword_10119BC40, sub_10023B6B0);
    v20 = *(double *)&qword_1011A8310;
    v21 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v37);
    UIBackgroundConfiguration.cornerRadius.setter(v20);
    v21(v37, 0);
    if ((v14[v15] & 1) != 0)
    {
      v28 = objc_msgSend(v14, "traitCollection");
      v29 = objc_msgSend(v28, "userInterfaceIdiom");

      if (v29 != (id)6)
      {
        v30 = objc_msgSend(a1, "imageView");
        if (v30)
        {
          v31 = v30;
          v32 = objc_msgSend(v30, "layer");

          objc_msgSend(v32, "setCompositingFilter:", kCAFilterDestOut);
        }
      }
      v33 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
      UIButton.Configuration.baseForegroundColor.setter(v33);
      if (qword_10119BC28 != -1)
        swift_once(&qword_10119BC28, sub_10023B480);
      v27 = (void *)qword_1011A82F8;
    }
    else
    {
      v22 = objc_msgSend(a1, "imageView");
      if (v22)
      {
        v23 = v22;
        v24 = objc_msgSend(v22, "layer");

        objc_msgSend(v24, "setCompositingFilter:", 0);
      }
      if (qword_10119BC30 != -1)
        swift_once(&qword_10119BC30, sub_10023B544);
      v25 = qword_1011A8300;
      v26 = (id)qword_1011A8300;
      UIButton.Configuration.baseForegroundColor.setter(v25);
      if (qword_10119BC20 != -1)
        swift_once(&qword_10119BC20, sub_10023B418);
      v27 = (void *)qword_1011A82F0;
    }
    v34 = v27;
    v35 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v37);
    UIBackgroundConfiguration.backgroundColor.setter(v27);
    v35(v37, 0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v8, v12, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    UIButton.configuration.setter(v8);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

void sub_10023D730(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t *v7;
  void (*v8)(void);
  uint64_t v9;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (uint64_t *)(Strong + *a3);
    v8 = (void (*)(void))*v7;
    v9 = v7[1];
    sub_100048AAC(*v7, v9);

    if (v8)
    {
      v8();
      sub_10004BA30((uint64_t)v8, v9);
    }
  }
}

void sub_10023D7F8()
{
  char *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  uint64_t v14;
  id v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for NowPlayingQueueControlsView();
  objc_msgSendSuper2(&v16, "layoutSubviews");
  v1 = *(id *)&v0[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_backdropView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");

  v2 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_contentView;
  v3 = *(id *)&v0[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_contentView];
  v4 = objc_msgSend(v0, "layoutMarginsGuide");
  objc_msgSend(v4, "layoutFrame");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v3, "setFrame:", v6, v8, v10, v12);
  v13 = *(void **)&v0[v2];
  v14 = qword_10119BC48;
  v15 = v13;
  if (v14 != -1)
    swift_once(&qword_10119BC48, sub_10023B6D0);
  objc_msgSend(v15, "frame");
  objc_msgSend(v15, "setFrame:");

}

id sub_10023D9CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingQueueControlsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingQueueControlsView()
{
  return objc_opt_self(_TtC5Music27NowPlayingQueueControlsView);
}

void sub_10023DAE4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_contentView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_backdropView;
  v4 = objc_allocWithZone((Class)type metadata accessor for BackdropView());
  *(_QWORD *)&v1[v3] = sub_10044CE0C();
  v5 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayButton;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v6 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleButton;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v7 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatButton;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v8 = OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButton;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v9 = &v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleType];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatType];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayState] = 2;
  v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistory] = 2;
  v11 = &v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayButtonAction];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleButtonAction];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatButtonAction];
  *v13 = 0;
  v13[1] = 0;
  v14 = &v1[OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButtonAction];
  *v14 = 0;
  v14[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingQueueControlsView.swift", 39, 2, 238, 0);
  __break(1u);
}

uint64_t sub_10023DC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10023DCB4(void *a1)
{
  uint64_t v1;

  return sub_10023BFF8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10023DCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10023DCCC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10023DCD4(uint64_t a1)
{
  uint64_t v1;

  sub_10023D730(a1, v1, &OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_autoPlayButtonAction);
}

char *sub_10023DCF8(void *a1)
{
  uint64_t v1;

  return sub_10023C5D8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10023DD00(uint64_t a1)
{
  uint64_t v1;

  sub_10023D730(a1, v1, &OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_shuffleButtonAction);
}

uint64_t sub_10023DD24(void *a1)
{
  uint64_t v1;

  return sub_10023CC24(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10023DD2C(uint64_t a1)
{
  uint64_t v1;

  sub_10023D730(a1, v1, &OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_repeatButtonAction);
}

uint64_t sub_10023DD50(void *a1)
{
  uint64_t v1;

  return sub_10023D31C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10023DD58(uint64_t a1)
{
  uint64_t v1;

  sub_10023D730(a1, v1, &OBJC_IVAR____TtC5Music27NowPlayingQueueControlsView_useListeningHistoryButtonAction);
}

char *sub_10023DD98(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  Swift::String v16;
  MusicCore::AccessibilityIdentifier v17;
  id v18;
  char *v19;
  Swift::String v20;
  MusicCore::AccessibilityIdentifier v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  id v28;
  Swift::String v29;
  MusicCore::AccessibilityIdentifier v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char v40;
  id v41;
  id v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  Class isa;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  id v81;
  unint64_t v82;
  void *v83;
  uint64_t ObjectType;
  objc_super v85;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC5Music33NowPlayingQueueRemainingSongsCell_text];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  v11 = OBJC_IVAR____TtC5Music33NowPlayingQueueRemainingSongsCell_label;
  v12 = objc_allocWithZone((Class)UILabel);
  v13 = v5;
  v14 = objc_msgSend(v12, "init");
  v15 = UIView.forAutolayout.getter();

  v16._object = (void *)0x8000000100E32A30;
  v16._countAndFlagsBits = 0xD000000000000029;
  v17 = AccessibilityIdentifier.init(name:)(v16);
  v18 = UIView.withAccessibilityIdentifier(_:)(v17.rawValue._countAndFlagsBits, (uint64_t)v17.rawValue._object);

  swift_bridgeObjectRelease(v17.rawValue._object);
  *(_QWORD *)&v5[v11] = v18;

  v85.receiver = v13;
  v85.super_class = (Class)type metadata accessor for NowPlayingQueueRemainingSongsCell();
  v19 = (char *)objc_msgSendSuper2(&v85, "initWithFrame:", a1, a2, a3, a4);
  v20._countAndFlagsBits = 0xD000000000000023;
  v20._object = (void *)0x8000000100E32A90;
  v21 = AccessibilityIdentifier.init(name:)(v20);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v21.rawValue._countAndFlagsBits, (uint64_t)v21.rawValue._object);
  v22 = objc_msgSend(v19, "layer");
  objc_msgSend(v22, "setAllowsGroupBlending:", 0);

  v23 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.45, 1.0);
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v24 = (id)qword_10124D260;
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v25, v24);

  v27 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v26);
  v28 = UIView.forAutolayout.getter();

  v29._object = (void *)0x8000000100E32AE0;
  v29._countAndFlagsBits = 0xD000000000000029;
  v30 = AccessibilityIdentifier.init(name:)(v29);
  v31 = UIView.withAccessibilityIdentifier(_:)(v30.rawValue._countAndFlagsBits, (uint64_t)v30.rawValue._object);

  objc_msgSend(v31, "setTintColor:", v23, swift_bridgeObjectRelease(v30.rawValue._object).n128_f64[0]);
  v32 = OBJC_IVAR____TtC5Music33NowPlayingQueueRemainingSongsCell_label;
  v33 = *(void **)&v19[OBJC_IVAR____TtC5Music33NowPlayingQueueRemainingSongsCell_label];
  v34 = (void *)objc_opt_self(UIFont);
  v35 = v33;
  v36 = objc_msgSend(v34, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v35, "setFont:", v36);

  v83 = v23;
  objc_msgSend(*(id *)&v19[v32], "setTextColor:", v23);
  v37 = objc_msgSend(v19, "contentView");
  objc_msgSend(v37, "addSubview:", v31);

  v38 = objc_msgSend(v19, "contentView");
  objc_msgSend(v38, "addSubview:", *(_QWORD *)&v19[v32]);

  v39 = objc_msgSend(v19, "traitCollection");
  v82 = sub_10013B23C();
  v40 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v82);

  v41 = objc_msgSend(v19, "contentView");
  v42 = objc_msgSend(v41, "layer");

  if ((v40 & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v45 = v44;
    v46 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v43 = swift_bridgeObjectRelease(v45).n128_u64[0];
  }
  else
  {
    v46 = 0;
  }
  objc_msgSend(v42, "setCompositingFilter:", v46, v43);

  swift_unknownObjectRelease(v46);
  v81 = (id)objc_opt_self(NSLayoutConstraint);
  v47 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v48 = swift_allocObject(v47, 88, 7);
  *(_OWORD *)(v48 + 16) = xmmword_100EB0F50;
  v49 = objc_msgSend(v31, "leadingAnchor");
  v50 = objc_msgSend(v19, "layoutMarginsGuide");
  v51 = objc_msgSend(v50, "leadingAnchor");

  v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);
  *(_QWORD *)(v48 + 32) = v52;
  v53 = objc_msgSend(v31, "widthAnchor");
  v54 = objc_msgSend(v31, "heightAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v48 + 40) = v55;
  v56 = objc_msgSend(v31, "heightAnchor");
  if (qword_10119C1B8 != -1)
    swift_once(&qword_10119C1B8, sub_100561E08);
  v57 = objc_msgSend(v56, "constraintEqualToConstant:", *(double *)&qword_10124D238);

  *(_QWORD *)(v48 + 48) = v57;
  v58 = objc_msgSend(v31, "centerYAnchor");
  v59 = objc_msgSend(v19, "contentView");
  v60 = objc_msgSend(v59, "centerYAnchor");

  v61 = objc_msgSend(v58, "constraintEqualToAnchor:", v60);
  *(_QWORD *)(v48 + 56) = v61;
  v62 = objc_msgSend(*(id *)&v19[v32], "centerYAnchor");
  v63 = objc_msgSend(v19, "contentView");
  v64 = objc_msgSend(v63, "centerYAnchor");

  v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);
  *(_QWORD *)(v48 + 64) = v65;
  v66 = objc_msgSend(*(id *)&v19[v32], "leadingAnchor");
  v67 = objc_msgSend(v31, "trailingAnchor");
  if (qword_10119C1C8 != -1)
    swift_once(&qword_10119C1C8, sub_100561E48);
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v67, *(double *)&qword_10124D248);

  *(_QWORD *)(v48 + 72) = v68;
  v69 = objc_msgSend(*(id *)&v19[v32], "trailingAnchor");
  v70 = objc_msgSend(v19, "layoutMarginsGuide");
  v71 = objc_msgSend(v70, "trailingAnchor");

  v72 = objc_msgSend(v69, "constraintEqualToAnchor:", v71);
  *(_QWORD *)(v48 + 80) = v72;
  specialized Array._endMutation()(v73);
  v74 = v48;
  sub_10023E8D4();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v81, "activateConstraints:", isa, swift_bridgeObjectRelease(v74).n128_f64[0]);

  v76 = sub_100007E8C(&qword_1011A1750);
  v77 = swift_allocObject(v76, 48, 7);
  *(_OWORD *)(v77 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v77 + 32) = &type metadata for HasAnimatedBackgroundTrait;
  *(_QWORD *)(v77 + 40) = v82;
  v78 = v19;
  v79 = UIView.registerForTraitChanges<A>(_:handler:)(v77, sub_10023E700, 0, ObjectType);

  swift_unknownObjectRelease(v79);
  swift_bridgeObjectRelease(v77);

  return v78;
}

id sub_10023E674()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingQueueRemainingSongsCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingQueueRemainingSongsCell()
{
  return objc_opt_self(_TtC5Music33NowPlayingQueueRemainingSongsCell);
}

double sub_10023E704(void *a1)
{
  id v2;
  unint64_t v3;
  char v4;
  id v5;
  id v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  double result;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10013B23C();
  v4 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v3);

  v5 = objc_msgSend(a1, "contentView");
  v6 = objc_msgSend(v5, "layer");

  if ((v4 & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v6, "setCompositingFilter:", v10, v7);

  *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  return result;
}

void sub_10023E7E4()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  MusicCore::AccessibilityIdentifier v7;
  id v8;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Music33NowPlayingQueueRemainingSongsCell_text];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;
  v3 = OBJC_IVAR____TtC5Music33NowPlayingQueueRemainingSongsCell_label;
  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = UIView.forAutolayout.getter();

  v6._countAndFlagsBits = 0xD000000000000029;
  v6._object = (void *)0x8000000100E32A30;
  v7 = AccessibilityIdentifier.init(name:)(v6);
  v8 = UIView.withAccessibilityIdentifier(_:)(v7.rawValue._countAndFlagsBits, (uint64_t)v7.rawValue._object);

  swift_bridgeObjectRelease(v7.rawValue._object);
  *(_QWORD *)&v1[v3] = v8;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingQueueRemainingSongsCell.swift", 45, 2, 58, 0);
  __break(1u);
}

unint64_t sub_10023E8D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A1480;
  if (!qword_1011A1480)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1011A1480);
  }
  return result;
}

void sub_10023E910()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  NSString *v9;
  uint64_t v10;
  unint64_t v11;
  NSString v12;
  objc_class *v13;
  uint64_t v14;
  NSString *v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  Swift::OpaquePointer v19;
  Class isa;
  _BYTE v21[72];
  _BYTE v22[72];
  uint64_t v23;
  unint64_t v24;
  UIImage_optional v25;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_label);
  sub_10004A07C(0, &qword_1011A9AA0, NSAttributedString_ptr);
  v23 = 0x6C6F626D79737B7BLL;
  v24 = 0xEB00000000207D7DLL;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_text);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_text + 8);
  v4 = v1;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v2;
  v5._object = v3;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A21B0);
  inited = swift_initStackObject(v6, v22);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v8 = sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v9 = NSFontAttributeName;
  v10 = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleSubheadline, UIFontWeightMedium);
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v11 = sub_100041C10(inited);
  v12 = String._bridgeToObjectiveC()();
  v13 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  v14 = swift_initStackObject(v6, v21);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v14 + 32) = v9;
  v15 = v9;
  v16 = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleSubheadline, UIFontWeightMedium);
  *(_QWORD *)(v14 + 64) = v8;
  *(_QWORD *)(v14 + 40) = v16;
  v25.is_nil = sub_100041C10(v14);
  v17._countAndFlagsBits = 0x6C6F626D79737B7BLL;
  v17._object = (void *)0xEB00000000207D7DLL;
  v18._countAndFlagsBits = 0x6C6F626D79737B7BLL;
  v18._object = (void *)0xEA00000000007D7DLL;
  v25.value.super.isa = v13;
  isa = NSAttributedString.init(string:attributes:replacingPlaceholder:withImage:imageAttributes:)(v17, (Swift::OpaquePointer)v11, v18, v25, v19).super.isa;
  objc_msgSend(v4, "setAttributedText:", isa);

}

char *sub_10023EB48(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  Swift::String v17;
  MusicCore::AccessibilityIdentifier v18;
  id v19;
  char *v20;
  Swift::String v21;
  MusicCore::AccessibilityIdentifier v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  Class isa;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t ObjectType;
  objc_super v50;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_text];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  v11 = OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_label;
  v12 = objc_allocWithZone((Class)UILabel);
  v13 = v5;
  v14 = objc_msgSend(v12, "init");
  v15 = UIView.forAutolayout.getter();

  v16 = UIView.forAutolayout.getter();
  v17._countAndFlagsBits = 0xD00000000000001BLL;
  v17._object = (void *)0x8000000100E32B40;
  v18 = AccessibilityIdentifier.init(name:)(v17);
  v19 = UIView.withAccessibilityIdentifier(_:)(v18.rawValue._countAndFlagsBits, (uint64_t)v18.rawValue._object);

  swift_bridgeObjectRelease(v18.rawValue._object);
  *(_QWORD *)&v5[v11] = v19;

  v50.receiver = v13;
  v50.super_class = (Class)type metadata accessor for NowPlayingQueueRepeatCell();
  v20 = (char *)objc_msgSendSuper2(&v50, "initWithFrame:", a1, a2, a3, a4);
  v21._countAndFlagsBits = 0xD00000000000001BLL;
  v21._object = (void *)0x8000000100E32B40;
  v22 = AccessibilityIdentifier.init(name:)(v21);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v22.rawValue._countAndFlagsBits, (uint64_t)v22.rawValue._object);
  v23 = objc_msgSend(v20, "layer");
  objc_msgSend(v23, "setAllowsGroupBlending:", 0);

  v24 = OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_label;
  objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_label], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v20[v24], "setTextAlignment:", 1);
  v25 = objc_msgSend(v20, "contentView");
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v20[v24]);

  sub_10023EFF4();
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v28 = swift_allocObject(v27, 56, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EA7AD0;
  v29 = objc_msgSend(*(id *)&v20[v24], "leadingAnchor");
  v30 = objc_msgSend(v20, "layoutMarginsGuide");
  v31 = objc_msgSend(v30, "leadingAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:", v31);
  *(_QWORD *)(v28 + 32) = v32;
  v33 = objc_msgSend(*(id *)&v20[v24], "trailingAnchor");
  v34 = objc_msgSend(v20, "layoutMarginsGuide");
  v35 = objc_msgSend(v34, "trailingAnchor");

  v36 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);
  *(_QWORD *)(v28 + 40) = v36;
  v37 = objc_msgSend(*(id *)&v20[v24], "centerYAnchor");
  v38 = objc_msgSend(v20, "contentView");
  v39 = objc_msgSend(v38, "centerYAnchor");

  v40 = objc_msgSend(v37, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v28 + 48) = v40;
  specialized Array._endMutation()(v41);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

  v43 = sub_100007E8C(&qword_1011A1750);
  v44 = swift_allocObject(v43, 48, 7);
  *(_OWORD *)(v44 + 16) = xmmword_100EA7AA0;
  v45 = sub_10013B23C();
  *(_QWORD *)(v44 + 32) = &type metadata for HasAnimatedBackgroundTrait;
  *(_QWORD *)(v44 + 40) = v45;
  v46 = v20;
  v47 = UIView.registerForTraitChanges<A>(_:handler:)(v44, sub_10023F20C, 0, ObjectType);
  swift_unknownObjectRelease(v47);
  swift_bridgeObjectRelease(v44);

  return v46;
}

double sub_10023EFF4()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  char v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  char v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  double result;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10013B23C();
  v4 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v3);

  if ((v4 & 1) != 0)
    v5 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.45, 1.0);
  else
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v6 = v5;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_label], "setTextColor:", v5);
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "layer");

  v9 = objc_msgSend(v1, "traitCollection");
  v10 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v3);

  if ((v10 & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v8, "setCompositingFilter:", v14, v11);

  *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
  return result;
}

id sub_10023F180()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingQueueRepeatCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingQueueRepeatCell()
{
  return objc_opt_self(_TtC5Music25NowPlayingQueueRepeatCell);
}

double sub_10023F20C()
{
  return sub_10023EFF4();
}

void sub_10023F22C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  Swift::String v7;
  MusicCore::AccessibilityIdentifier v8;
  id v9;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_text];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;
  v3 = OBJC_IVAR____TtC5Music25NowPlayingQueueRepeatCell_label;
  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = UIView.forAutolayout.getter();

  v6 = UIView.forAutolayout.getter();
  v7._object = (void *)0x8000000100E32B40;
  v7._countAndFlagsBits = 0xD00000000000001BLL;
  v8 = AccessibilityIdentifier.init(name:)(v7);
  v9 = UIView.withAccessibilityIdentifier(_:)(v8.rawValue._countAndFlagsBits, (uint64_t)v8.rawValue._object);

  swift_bridgeObjectRelease(v8.rawValue._object);
  *(_QWORD *)&v1[v3] = v9;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingQueueRepeatCell.swift", 37, 2, 51, 0);
  __break(1u);
}

id sub_10023F328(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  Swift::String v18;
  MusicCore::AccessibilityIdentifier v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  id v37;
  id v38;
  Swift::String v39;
  MusicCore::AccessibilityIdentifier v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  Swift::String v47;
  MusicCore::AccessibilityIdentifier v48;
  id v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  Class isa;
  double v96;
  uint64_t v98;
  id v99;
  char *v100;
  char *v101;
  uint64_t v102;
  objc_super v103;

  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v101 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v100 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v13);
  v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (objc_class *)type metadata accessor for NowPlayingQueueAddCell();
  v103.receiver = v4;
  v103.super_class = v16;
  v17 = objc_msgSendSuper2(&v103, "initWithFrame:", a1, a2, a3, a4);
  v18._countAndFlagsBits = 0xD000000000000018;
  v18._object = (void *)0x8000000100E32BF0;
  v19 = AccessibilityIdentifier.init(name:)(v18);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v19.rawValue._countAndFlagsBits, (uint64_t)v19.rawValue._object);
  v20 = objc_msgSend(v17, "layer");
  objc_msgSend(v20, "setAllowsGroupBlending:", 0);

  v21 = objc_msgSend(v17, "layer");
  objc_msgSend(v21, "setAllowsGroupOpacity:", 0);

  v22 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = UIView.forAutolayout.getter();

  v24 = (void *)objc_opt_self(UIColor);
  v25 = objc_msgSend(v24, "labelColor");
  v26 = objc_msgSend(v25, "colorWithAlphaComponent:", 0.08);

  objc_msgSend(v23, "setBackgroundColor:", v26);
  v27 = objc_msgSend(v24, "labelColor");
  v28 = objc_msgSend(v27, "colorWithAlphaComponent:", 0.08);

  UIView.Border.init(thickness:color:)();
  UIView.border.setter(v30, v29 & 1, v31);
  v32 = UIView.Corner.small.unsafeMutableAddressor();
  v33 = type metadata accessor for UIView.Corner(0);
  v34 = *(_QWORD *)(v33 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v15, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v15, 0, 1, v33);
  UIView.corner.setter(v15);
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v35);

  v37 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v36);
  v38 = UIView.forAutolayout.getter();

  v39._object = (void *)0x8000000100E32C10;
  v39._countAndFlagsBits = 0xD00000000000001ELL;
  v40 = AccessibilityIdentifier.init(name:)(v39);
  v41 = UIView.withAccessibilityIdentifier(_:)(v40.rawValue._countAndFlagsBits, (uint64_t)v40.rawValue._object);

  v42 = objc_msgSend(v24, "labelColor", swift_bridgeObjectRelease(v40.rawValue._object).n128_f64[0]);
  objc_msgSend(v41, "setTintColor:", v42);

  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v43 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleTitle3, UIFontWeightSemibold);
  v44 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v43);

  objc_msgSend(v41, "setPreferredSymbolConfiguration:", v44);
  v99 = v41;
  objc_msgSend(v23, "addSubview:", v41);
  v45 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v46 = UIView.forAutolayout.getter();

  v47._object = (void *)0x8000000100E32C30;
  v47._countAndFlagsBits = 0xD00000000000001ELL;
  v48 = AccessibilityIdentifier.init(name:)(v47);
  v49 = UIView.withAccessibilityIdentifier(_:)(v48.rawValue._countAndFlagsBits, (uint64_t)v48.rawValue._object);

  swift_bridgeObjectRelease(v48.rawValue._object);
  v50 = v100;
  v51 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E32C50);
  v52 = v101;
  static Locale.current.getter(v51);
  String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, 0, v52, 0, 0, 256);
  v54 = v53;
  v55 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setText:", v55, swift_bridgeObjectRelease(v54).n128_f64[0]);

  v56 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v49, "setFont:", v56);

  v57 = objc_msgSend(v24, "labelColor");
  objc_msgSend(v49, "setTextColor:", v57);

  v58 = objc_msgSend(v17, "contentView");
  objc_msgSend(v58, "addSubview:", v23);

  v59 = objc_msgSend(v17, "contentView");
  objc_msgSend(v59, "addSubview:", v49);

  sub_10023FF50();
  v101 = (char *)objc_opt_self(NSLayoutConstraint);
  v60 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v61 = swift_allocObject(v60, 104, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100EB0FB0;
  v62 = objc_msgSend(v23, "leadingAnchor");
  v63 = objc_msgSend(v17, "layoutMarginsGuide");
  v64 = objc_msgSend(v63, "leadingAnchor");

  v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);
  *(_QWORD *)(v61 + 32) = v65;
  v66 = objc_msgSend(v23, "widthAnchor");
  v67 = objc_msgSend(v23, "heightAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

  *(_QWORD *)(v61 + 40) = v68;
  v69 = objc_msgSend(v23, "heightAnchor");
  if (qword_10119C1B8 != -1)
    swift_once(&qword_10119C1B8, sub_100561E08);
  v70 = objc_msgSend(v69, "constraintEqualToConstant:", *(double *)&qword_10124D238);

  *(_QWORD *)(v61 + 48) = v70;
  v71 = objc_msgSend(v23, "centerYAnchor");
  v72 = objc_msgSend(v17, "contentView");
  v73 = objc_msgSend(v72, "centerYAnchor");

  v74 = objc_msgSend(v71, "constraintEqualToAnchor:", v73);
  *(_QWORD *)(v61 + 56) = v74;
  v75 = v99;
  v76 = objc_msgSend(v99, "centerYAnchor");
  v77 = objc_msgSend(v23, "centerYAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v61 + 64) = v78;
  v79 = objc_msgSend(v75, "centerXAnchor");
  v80 = objc_msgSend(v23, "centerXAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v61 + 72) = v81;
  v82 = objc_msgSend(v49, "centerYAnchor");
  v83 = objc_msgSend(v17, "contentView");
  v84 = objc_msgSend(v83, "centerYAnchor");

  v85 = objc_msgSend(v82, "constraintEqualToAnchor:", v84);
  *(_QWORD *)(v61 + 80) = v85;
  v86 = objc_msgSend(v49, "leadingAnchor");
  v87 = objc_msgSend(v23, "trailingAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v87, 12.0);

  *(_QWORD *)(v61 + 88) = v88;
  v89 = objc_msgSend(v49, "trailingAnchor");
  v90 = objc_msgSend(v17, "layoutMarginsGuide");
  v91 = objc_msgSend(v90, "trailingAnchor");

  v92 = objc_msgSend(v89, "constraintEqualToAnchor:", v91);
  *(_QWORD *)(v61 + 96) = v92;
  v102 = v61;
  specialized Array._endMutation()(v93);
  v94 = v102;
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v96 = swift_bridgeObjectRelease(v94).n128_u64[0];
  objc_msgSend(v101, "activateConstraints:", isa, v96);

  return v17;
}

double sub_10023FE30(uint64_t a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  char v5;
  double result;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for NowPlayingQueueAddCell();
  objc_msgSendSuper2(&v7, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = sub_10013B23C();
  v5 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4);

  if (!a1
    || (UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4) & 1) != (v5 & 1))
  {
    return sub_10023FF50();
  }
  return result;
}

double sub_10023FF50()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  unint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  double result;

  v1 = objc_msgSend(v0, "contentView");
  v2 = objc_msgSend(v1, "layer");

  v3 = objc_msgSend(v0, "traitCollection");
  v4 = sub_10013B23C();
  LOBYTE(v1) = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4);

  if ((v1 & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v7 = v6;
    v8 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v2, "setCompositingFilter:", v8, v5);

  *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  return result;
}

id sub_100240030()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingQueueAddCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingQueueAddCell()
{
  return objc_opt_self(_TtC5Music22NowPlayingQueueAddCell);
}

uint64_t sub_100240080()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TypeDisplayRepresentation(0, v5);
  sub_10004FACC(v8, qword_10124CB48);
  sub_100048B14(v8, (uint64_t)qword_10124CB48);
  LocalizedStringResource.init(stringLiteral:)(0x5320686372616553, 0xED0000656372756FLL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v7, v2);
}

uint64_t sub_100240198(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005D05B8(*a1, *a2);
}

unint64_t sub_1002401A8()
{
  unint64_t result;

  result = qword_1011A8450;
  if (!qword_1011A8450)
  {
    result = swift_getWitnessTable(&unk_100EB0FF4, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8450);
  }
  return result;
}

Swift::Int sub_1002401EC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 0x7972617262696CLL;
  else
    v2 = 0x676F6C61746163;
  String.hash(into:)(v4, v2, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100240260(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 0x7972617262696CLL;
  else
    v2 = 0x676F6C61746163;
  String.hash(into:)(a1, v2, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

Swift::Int sub_1002402A8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 0x7972617262696CLL;
  else
    v3 = 0x676F6C61746163;
  String.hash(into:)(v5, v3, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100240318@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AAF68, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100240374(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x676F6C61746163;
  if (*v1)
    v2 = 0x7972617262696CLL;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1002403B0()
{
  unint64_t result;

  result = qword_1011A8458;
  if (!qword_1011A8458)
  {
    result = swift_getWitnessTable(&unk_100EB10D4, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8458);
  }
  return result;
}

unint64_t sub_1002403F8()
{
  unint64_t result;

  result = qword_1011A8460;
  if (!qword_1011A8460)
  {
    result = swift_getWitnessTable(&unk_100EB110C, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8460);
  }
  return result;
}

unint64_t sub_100240440()
{
  unint64_t result;

  result = qword_1011A8468;
  if (!qword_1011A8468)
  {
    result = swift_getWitnessTable(&unk_100EB105C, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8468);
  }
  return result;
}

void *sub_100240484()
{
  return &protocol witness table for String;
}

unint64_t sub_100240494()
{
  unint64_t result;

  result = qword_1011A8470;
  if (!qword_1011A8470)
  {
    result = swift_getWitnessTable(&unk_100EB113C, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8470);
  }
  return result;
}

unint64_t sub_1002404DC()
{
  unint64_t result;

  result = qword_1011A8478;
  if (!qword_1011A8478)
  {
    result = swift_getWitnessTable(&unk_100EB1164, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8478);
  }
  return result;
}

unint64_t sub_100240524()
{
  unint64_t result;

  result = qword_1011A8480;
  if (!qword_1011A8480)
  {
    result = swift_getWitnessTable(&unk_100EB118C, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8480);
  }
  return result;
}

unint64_t sub_10024056C()
{
  unint64_t result;

  result = qword_1011A8488;
  if (!qword_1011A8488)
  {
    result = swift_getWitnessTable(&unk_100EB11E4, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8488);
  }
  return result;
}

uint64_t sub_1002405B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100241C6C(&qword_10119BC50, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10124CB48, (uint64_t)sub_100240080, a1);
}

uint64_t sub_1002405DC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10024061C();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_10024061C()
{
  unint64_t result;

  result = qword_1011A8490;
  if (!qword_1011A8490)
  {
    result = swift_getWitnessTable(&unk_100EB1094, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8490);
  }
  return result;
}

uint64_t sub_100240664(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024061C();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002406A0()
{
  unint64_t result;

  result = qword_1011A8498;
  if (!qword_1011A8498)
  {
    result = swift_getWitnessTable(&unk_100EB1224, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A8498);
  }
  return result;
}

unint64_t sub_1002406E8()
{
  unint64_t result;

  result = qword_1011A84A0;
  if (!qword_1011A84A0)
  {
    result = swift_getWitnessTable(&unk_100EB124C, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A84A0);
  }
  return result;
}

unint64_t sub_100240730()
{
  unint64_t result;

  result = qword_1011A84A8;
  if (!qword_1011A84A8)
  {
    result = swift_getWitnessTable(&unk_100EB101C, &type metadata for SearchSourceEntity);
    atomic_store(result, (unint64_t *)&qword_1011A84A8);
  }
  return result;
}

uint64_t sub_100240778(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024056C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1002407B0()
{
  return sub_100049F28(&qword_1011A84B0, &qword_1011A84B8, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1002407DC(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AAFB8;
}

unint64_t sub_1002407F0()
{
  unint64_t result;

  result = qword_1011A84C0;
  if (!qword_1011A84C0)
  {
    result = swift_getWitnessTable(&unk_100EB12DC, &type metadata for SearchMusicAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A84C0);
  }
  return result;
}

unint64_t sub_100240838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A84C8;
  if (!qword_1011A84C8)
  {
    v1 = type metadata accessor for StringSearchCriteria(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for StringSearchCriteria, v1);
    atomic_store(result, (unint64_t *)&qword_1011A84C8);
  }
  return result;
}

uint64_t sub_100240880()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124CB60);
  sub_100048B14(v0, (uint64_t)qword_10124CB60);
  return LocalizedStringResource.init(stringLiteral:)(0x4D20686372616553, 0xEC00000063697375);
}

uint64_t sub_1002408E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_100007E8C(&qword_1011A8530);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011A8538);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100241B54();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 2, &type metadata for SearchMusicAppIntent, v6);
  v7._countAndFlagsBits = 0x6620686372616553;
  v7._object = (void *)0xEB0000000020726FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("\bh4");
  v9 = sub_100007E8C(&qword_1011A8540);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544106784;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100EB1440);
  v12 = sub_100007E8C(&qword_1011A8548);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for SearchMusicAppIntent, v6);
}

uint64_t sub_100240A98()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100240AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = sub_100007E8C(&qword_1011A8550);
  v1 = type metadata accessor for StringSearchScope(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject(v0, v4 + *(_QWORD *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5 + v4, enum case for StringSearchScope.general(_:), v1);
  qword_10124CB78 = v5;
  return result;
}

_QWORD *sub_100240B4C@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100240B6C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100240B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v4 = type metadata accessor for SearchScope(0);
  v3[15] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[16] = v5;
  v3[17] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AppInterfaceContext.Activity(0);
  v3[18] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[19] = swift_task_alloc(v7);
  v3[20] = swift_task_alloc(v7);
  v8 = type metadata accessor for StringSearchCriteria(0);
  v3[21] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[22] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[23] = swift_task_alloc(v10);
  v3[24] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v3[25] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v3[26] = v13;
  v3[27] = v14;
  return swift_task_switch(sub_100240CA0, v13, v14);
}

uint64_t sub_100240CA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  __n128 v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t type;
  uint64_t v54;
  char *v55;
  uint64_t v56[2];

  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v1 = v0[13];
  v2 = v0[14];
  v3 = type metadata accessor for Logger(0);
  v0[28] = sub_100048B14(v3, (uint64_t)qword_10124CEC8);
  swift_retain_n(v1, 4);
  v4 = swift_retain_n(v2, 4);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    type = v6;
    v8 = (_QWORD *)v0[24];
    v50 = v0[22];
    v51 = v0[21];
    v9 = v0[13];
    v52 = v0[14];
    v10 = swift_slowAlloc(32, -1);
    v54 = swift_slowAlloc(96, -1);
    v56[0] = v54;
    *(_DWORD *)v10 = 136315650;
    v0[10] = &type metadata for SearchMusicAppIntent;
    v11 = sub_100007E8C(&qword_1011A8520);
    v12 = String.init<A>(describing:)(v0 + 10, v11);
    v14 = v13;
    v0[11] = sub_100322200(v12, v13, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 11, v0 + 12);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v10 + 12) = 2082;
    v15 = IntentParameter.wrappedValue.getter(v8);
    v16 = StringSearchCriteria.term.getter(v15);
    v18 = v17;
    (*(void (**)(_QWORD *, uint64_t))(v50 + 8))(v8, v51);
    v0[9] = sub_100322200(v16, v18, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 9, v0 + 10);
    v19 = swift_bridgeObjectRelease(v18);
    swift_release_n(v9, 2, v19);
    swift_release_n(v52, 2, v20);
    *(_WORD *)(v10 + 22) = 2082;
    IntentParameter.wrappedValue.getter((_QWORD *)((char *)v0 + 257));
    v21 = sub_100007E8C(&qword_1011A8528);
    v22 = String.init<A>(describing:)((char *)v0 + 257, v21);
    v24 = v23;
    v0[5] = sub_100322200(v22, v23, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6);
    v25 = swift_bridgeObjectRelease(v24);
    swift_release_n(v9, 2, v25);
    swift_release_n(v52, 2, v26);
    _os_log_impl((void *)&_mh_execute_header, v5, type, "%s searching for \"%{public}s\" in %{public}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy(v54, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v27 = v0[14];
    swift_release_n(v0[13], 4, v7);
    swift_release_n(v27, 4, v28);
  }

  v29 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100794B44();
  v0[29] = v30;
  v32 = v0[22];
  v31 = (_QWORD *)v0[23];
  v33 = v0[21];
  v34 = (uint64_t *)v0[19];

  v55 = (char *)v34 + *(int *)(sub_100007E8C(&qword_1011BC3D0) + 48);
  v35 = IntentParameter.wrappedValue.getter(v31);
  v36 = StringSearchCriteria.term.getter(v35);
  v38 = v37;
  (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v31, v33);
  *v34 = v36;
  v34[1] = v38;
  IntentParameter.wrappedValue.getter(v0 + 32);
  v39 = *((unsigned __int8 *)v0 + 256);
  if (v39 == 2)
  {
    v40 = 1;
    v41 = v55;
  }
  else
  {
    v43 = v0[16];
    v42 = v0[17];
    v44 = v0[15];
    if ((v39 & 1) != 0)
      v45 = (unsigned int *)&enum case for SearchScope.library(_:);
    else
      v45 = (unsigned int *)&enum case for SearchScope.catalog(_:);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v43 + 104))(v0[17], *v45, v0[15]);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v55, v42, v44);
    v40 = 0;
    v41 = v55;
  }
  v47 = v0[18];
  v46 = v0[19];
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD))(v0[16] + 56))(v41, v40, 1, v0[15]);
  swift_storeEnumTagMultiPayload(v46, v47, 1);
  v48 = (_QWORD *)swift_task_alloc(dword_1011C791C);
  v0[30] = v48;
  *v48 = v0;
  v48[1] = sub_1002414D4;
  return sub_100771208(v0[20], v0[19]);
}

uint64_t sub_1002414D4()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = (*v1)[30];
  (*v1)[31] = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_100242458(v2[19]);
    v4 = v2[26];
    v5 = v2[27];
    v6 = sub_1002415E8;
  }
  else
  {
    v7 = v2[20];
    sub_100242458(v2[19]);
    sub_100242458(v7);
    v4 = v2[26];
    v5 = v2[27];
    v6 = sub_100241550;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100241550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 200));
  v7 = swift_release(v1);
  static IntentResult.result<>()(v7);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002415E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  __n128 v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  os_log_type_t type;
  uint64_t v49;
  uint64_t v50[2];

  v1 = v0;
  v2 = v0[29];
  swift_release(v0[25]);
  swift_release(v2);
  v3 = v0[31];
  v5 = v0[13];
  v4 = v0[14];
  swift_retain_n(v5, 3);
  swift_retain_n(v4, 3);
  swift_errorRetain(v3);
  swift_retain(v5);
  swift_retain(v4);
  v6 = swift_errorRetain(v3);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v46 = (_QWORD *)((char *)v0 + 258);
    v47 = v0 + 7;
    v10 = (_QWORD *)v0[24];
    v43 = v0[22];
    v44 = v0[21];
    v11 = v0[13];
    v45 = v0[14];
    v12 = swift_slowAlloc(42, -1);
    v49 = swift_slowAlloc(128, -1);
    v50[0] = v49;
    *(_DWORD *)v12 = 136315906;
    type = v8;
    v0[2] = &type metadata for SearchMusicAppIntent;
    v13 = sub_100007E8C(&qword_1011A8520);
    v14 = String.init<A>(describing:)(v0 + 2, v13);
    v16 = v15;
    v1[3] = sub_100322200(v14, v15, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 3, v1 + 4);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v12 + 12) = 2082;
    v17 = IntentParameter.wrappedValue.getter(v10);
    v18 = StringSearchCriteria.term.getter(v17);
    v20 = v19;
    (*(void (**)(_QWORD *, uint64_t))(v43 + 8))(v10, v44);
    v1[4] = sub_100322200(v18, v20, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 4, v1 + 5);
    v21 = swift_bridgeObjectRelease(v20);
    swift_release_n(v11, 2, v21);
    swift_release_n(v45, 2, v22);
    *(_WORD *)(v12 + 22) = 2082;
    IntentParameter.wrappedValue.getter(v46);
    v23 = sub_100007E8C(&qword_1011A8528);
    v24 = String.init<A>(describing:)(v46, v23);
    v26 = v25;
    v1[6] = sub_100322200(v24, v25, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 6, v47);
    v27 = swift_bridgeObjectRelease(v26);
    swift_release_n(v11, 2, v27);
    swift_release_n(v45, 2, v28);
    *(_WORD *)(v12 + 32) = 2082;
    v1[7] = v3;
    swift_errorRetain(v3);
    v29 = sub_100007E8C(&qword_1011A14B0);
    v30 = String.init<A>(describing:)(v47, v29);
    v32 = v31;
    v1[8] = sub_100322200(v30, v31, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 8, v1 + 9);
    swift_bridgeObjectRelease(v32);
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v7, type, "%s search failed, phrase: \"%{public}s\", source: %{public}s, error: %{public}s", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy(v49, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    v33 = v0[14];
    swift_release_n(v0[13], 4, v9);
    swift_release_n(v33, 4, v34);
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }

  v36 = v1[23];
  v35 = v1[24];
  v38 = v1[19];
  v37 = v1[20];
  v39 = v1[17];
  v40 = sub_100242414();
  swift_allocError(&type metadata for SearchMusicIntentError, v40, 0, 0);
  swift_willThrow(v41);
  swift_errorRelease(v3);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1002419D0@<X0>(_QWORD *a1@<X8>)
{
  if (qword_10119BC60 != -1)
    swift_once(&qword_10119BC60, sub_100240AB8);
  *a1 = qword_10124CB78;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_100241A20@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100241A40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for StringSearchCriteria(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_100241AD8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100241B20;
}

void sub_100241B20(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_100241B54()
{
  unint64_t result;

  result = qword_1011A84D0;
  if (!qword_1011A84D0)
  {
    result = swift_getWitnessTable(&unk_100EB1304, &type metadata for SearchMusicAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A84D0);
  }
  return result;
}

unint64_t sub_100241B9C()
{
  unint64_t result;

  result = qword_1011A84D8;
  if (!qword_1011A84D8)
  {
    result = swift_getWitnessTable(&unk_100EB1394, &type metadata for SearchMusicAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A84D8);
  }
  return result;
}

unint64_t sub_100241BE4()
{
  unint64_t result;

  result = qword_1011A84E0;
  if (!qword_1011A84E0)
  {
    result = swift_getWitnessTable(&unk_100EB13BC, &type metadata for SearchMusicAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011A84E0);
  }
  return result;
}

uint64_t sub_100241C28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9993C, 1);
}

uint64_t sub_100241C38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F99914, 1);
}

uint64_t sub_100241C48@<X0>(uint64_t a1@<X8>)
{
  return sub_100241C6C(&qword_10119BC58, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10124CB60, (uint64_t)sub_100240880, a1);
}

uint64_t sub_100241C6C@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_100048B14(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_100241CE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1011A8514);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10005AEE4;
  return sub_100240B9C(a1, v5, v4);
}

uint64_t sub_100241D48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100242128();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100241D6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100241B54();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SearchMusicAppIntent()
{
  return &type metadata for SearchMusicAppIntent;
}

uint64_t storeEnumTagSinglePayload for SearchSourceEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100241DF0 + 4 * byte_100EB0FE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100241E24 + 4 * byte_100EB0FE0[v4]))();
}

uint64_t sub_100241E24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100241E2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100241E34);
  return result;
}

uint64_t sub_100241E40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100241E48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100241E4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100241E54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchSourceEntity()
{
  return &type metadata for SearchSourceEntity;
}

uint64_t sub_100241E70()
{
  return sub_100049F28(&qword_1011A84F0, &qword_1011A84F8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100241E9C()
{
  return sub_100049F28(&qword_1011A16A0, &qword_1011A16A8, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100241EC8()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x8000000100E32CB0);
}

unint64_t sub_100241EE4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v0 = sub_100007E8C(&qword_1011A8558);
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A8560);
  v11 = sub_100007E8C(&qword_10119D5F0);
  v12 = *(_QWORD *)(v11 - 8);
  v22 = *(_QWORD *)(v12 + 72);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v22, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA7A80;
  v16 = v15 + v14;
  v21 = v15 + v14 + *(int *)(v11 + 48);
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x754D20656C707041, 0xEB00000000636973);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v17(v5, 1, 1, v6);
  v18 = type metadata accessor for DisplayRepresentation.Image(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v2, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + v22) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
  v17(v5, 1, 1, v6);
  v19(v2, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  return sub_100042BB8(v15);
}

uint64_t sub_100242128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  char *v20;
  unint64_t v21;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v28 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v3);
  v29 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - v6;
  v8 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011A8500);
  LocalizedStringResource.init(stringLiteral:)(0x657361726850, 0xE600000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x8000000100E32C70);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v24(v10, 0, 1, v11);
  v15 = type metadata accessor for IntentDialog(0);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v7, 1, 1, v15);
  v17 = enum case for InputConnectionBehavior.default(_:);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v19 = v28;
  v18(v28, enum case for InputConnectionBehavior.default(_:), v0);
  v27 = IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)(v14, v10, v7, v19);
  v26 = sub_100007E8C(&qword_1011A8508);
  LocalizedStringResource.init(stringLiteral:)(0x656372756F53, 0xE600000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x8000000100E32C90);
  v24(v10, 0, 1, v25);
  v30 = 2;
  v16(v7, 1, 1, v15);
  v20 = v29;
  v16(v29, 1, 1, v15);
  v18(v19, v17, v0);
  v21 = sub_10024061C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v14, v10, &v30, v7, v20, v19, &off_1010AAFE0, v21);
  return v27;
}

unint64_t sub_100242414()
{
  unint64_t result;

  result = qword_1011A8518;
  if (!qword_1011A8518)
  {
    result = swift_getWitnessTable(&unk_100EB1518, &type metadata for SearchMusicIntentError);
    atomic_store(result, (unint64_t *)&qword_1011A8518);
  }
  return result;
}

uint64_t sub_100242458(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppInterfaceContext.Activity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100242494@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002424BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchMusicIntentError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100242524 + 4 * byte_100EB0FEA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100242544 + 4 * byte_100EB0FEF[v4]))();
}

_BYTE *sub_100242524(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100242544(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10024254C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100242554(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10024255C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100242564(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchMusicIntentError()
{
  return &type metadata for SearchMusicIntentError;
}

unint64_t sub_100242584()
{
  unint64_t result;

  result = qword_1011A8568;
  if (!qword_1011A8568)
  {
    result = swift_getWitnessTable(&unk_100EB14F0, &type metadata for SearchMusicIntentError);
    atomic_store(result, (unint64_t *)&qword_1011A8568);
  }
  return result;
}

void sub_1002425C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  Swift::String v8;
  __n128 v9;
  Swift::String v10;
  Swift::Bool v11;
  char v12;

  v2 = static Locale.preferredLanguages.getter(a1);
  if (!*(_QWORD *)(v2 + 16))
  {
    __break(1u);
    return;
  }
  v3 = v2;
  v4 = 0x736E61482D687ALL;
  v5 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v3);
  v6 = (_QWORD *)v1[10];
  if ((sub_100413E70(0x736E61482D687ALL, 0xE700000000000000, v6) & 1) != 0)
    v7 = 1;
  else
    v7 = sub_100413E70(0x746E61482D687ALL, 0xE700000000000000, v6);
  v8._countAndFlagsBits = 0x736E61482D687ALL;
  v8._object = (void *)0xE700000000000000;
  if (String.hasPrefix(_:)(v8))
  {
    v9 = swift_bridgeObjectRelease(v5);
    if ((v7 & 1) == 0)
      return;
LABEL_9:
    (*(void (**)(uint64_t, unint64_t, __n128))(*v1 + 200))(v4, 0xE700000000000000, v9);
    return;
  }
  v10._countAndFlagsBits = 0x746E61482D687ALL;
  v10._object = (void *)0xE700000000000000;
  v11 = String.hasPrefix(_:)(v10);
  v9 = swift_bridgeObjectRelease(v5);
  v12 = v11 & v7;
  v4 = 0x746E61482D687ALL;
  if ((v12 & 1) != 0)
    goto LABEL_9;
}

void sub_100242780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  _QWORD *v32;
  _UNKNOWN **v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _UNKNOWN **v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR___MusicNowPlayingLyricsViewController_nowPlaying);
  if (!v5)
    goto LABEL_14;
  v6 = v5;
  v7 = objc_msgSend(v6, "tracklist");
  v8 = objc_msgSend(v7, "playingItem");

  if (!v8)
  {

LABEL_14:
    *(_QWORD *)&v42 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_song);
    v30 = (void *)v42;
    *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_song) = 0;
    sub_1002467BC(v30);

    return;
  }
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  *((_QWORD *)&v44 + 1) = &type metadata for Player.VocalsCommand.Prepare;
  v45 = &protocol witness table for Player.VocalsCommand.Prepare;
  v9 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)qword_10124C788 + 760))(&v43);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v43);
  if ((v9 & 1) != 0)
  {
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    type metadata accessor for MainActor(0);
    v12 = static MainActor.shared.getter(v11);
    v13 = swift_allocObject(&unk_1010B7C50, 32, 7);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
    v14 = sub_100980B50((uint64_t)v4, (uint64_t)&unk_1011A8738, v13);
    swift_release(v14);
  }
  sub_1002498AC();
  sub_10024C010();
  v15 = objc_msgSend(v8, "metadataObject");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v15 = (id)swift_dynamicCastObjCClass(v17);
    if (!v15)
    {

      v15 = 0;
    }
  }
  v18 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_song);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_song) = v15;
  v19 = v15;
  sub_1002467BC(v18);

  v20 = objc_msgSend(v6, "tracklist");
  MPCPlayerResponseTracklist.currentPlayEvent.getter();
  v22 = v21;

  v23 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_modelPlayEvent);
  *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_modelPlayEvent) = v22;

  v24 = OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController;
  v25 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController);
  if (!v25)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  v26 = v25;
  v27 = objc_msgSend(v8, "nowPlayingAudioFormat");
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "isSpatialized");

  }
  else
  {
    v29 = 0;
  }
  (*(void (**)(id))((swift_isaMask & *v26) + 0x120))(v29);

  v31 = *(void **)(v1 + v24);
  if (!v31)
    goto LABEL_22;
  v32 = v31;
  if (objc_msgSend(v6, "state") == (id)5)
  {
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
  }
  else
  {
    objc_msgSend(v8, "duration");
    v41 = v44;
    v42 = v43;
    v33 = v45;
    v34 = v47;
    v35 = v48;
    v36 = v49;
    type metadata accessor for MPCPlayerItemDurationSnapshot(0);
    v37 = v46;
    *((_QWORD *)&v44 + 1) = v38;
    v45 = &protocol witness table for MPCPlayerItemDurationSnapshot;
    v39 = swift_allocObject(&unk_1010B7C28, 72, 7);
    *(_QWORD *)&v43 = v39;
    v40 = v41;
    *(_OWORD *)(v39 + 16) = v42;
    *(_OWORD *)(v39 + 32) = v40;
    *(_QWORD *)(v39 + 48) = v33;
    *(_QWORD *)(v39 + 56) = v37;
    *(_BYTE *)(v39 + 64) = v34;
    *(_BYTE *)(v39 + 65) = v35;
    *(_BYTE *)(v39 + 66) = v36;
  }
  (*(void (**)(__int128 *))((swift_isaMask & *v32) + 0x1E0))(&v43);

}

uint64_t sub_100242B8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[7] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[8] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[9] = v4;
  v1[10] = v5;
  return swift_task_switch(sub_100242BF8, v4, v5);
}

uint64_t sub_100242BF8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v1 = (void *)qword_10124C798;
  v0[11] = qword_10124C798;
  v0[5] = &type metadata for Player.VocalsCommand.Prepare;
  v0[6] = &protocol witness table for Player.VocalsCommand.Prepare;
  v2 = dword_1011D86AC;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_10012D3AC;
  return PlaybackController.perform(_:options:route:intent:)((uint64_t)(v0 + 2), 0, 0, 0);
}

double sub_100242CBC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  double result;
  uint64_t v15;
  uint64_t v16;

  v2 = OBJC_IVAR___MusicNowPlayingLyricsViewController_layout;
  if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_layout)) & 1) == 0)
  {
    v3 = v1;
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationSliderConstraints);
    swift_bridgeObjectRetain();
    v4 = swift_bridgeObjectRetain();
    sub_100804E18(v4);
    v5 = v15;
    v16 = *(_QWORD *)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationSliderSplitViewConstraints);
    swift_bridgeObjectRetain();
    v6 = swift_bridgeObjectRetain();
    sub_100804E18(v6);
    v7 = *(unsigned __int8 *)(v1 + v2);
    v8 = v16;
    v9 = OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationToggleSlider;
    v10 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationToggleSlider);
    if (v7 == 1)
    {
      if (v10)
      {
        v11 = v10;
        VerticalToggleSlider.growAnchorPoint.setter(2);

        if (*(_QWORD *)(v3 + v9))
          VerticalToggleSlider.interactionScaleFactor.setter(0x3FF8000000000000, 0);
      }
      v12 = v5;
    }
    else
    {
      if (v10)
      {
        v13 = v10;
        VerticalToggleSlider.growAnchorPoint.setter(8);

        if (*(_QWORD *)(v3 + v9))
          VerticalToggleSlider.interactionScaleFactor.setter(0, 1);
      }
      v12 = v16;
      v8 = v5;
    }
    Array<A>.deactivate()(v12);
    swift_bridgeObjectRelease(v12);
    Array<A>.activate()(v8);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_100242E2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;

  v3 = v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsCompositingFilter;
  swift_beginAccess(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsCompositingFilter, v13, 33, 0);
  sub_10024E7C8(a1, v3);
  swift_endAccess(v13);
  v4 = *(void **)(v1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_container);
  if (v4)
  {
    v5 = objc_msgSend(v4, "layer");
    sub_10004A160(v3, (uint64_t)v13, &qword_10119DCC0);
    v6 = v14;
    if (v14)
    {
      v7 = sub_100007E68(v13, v14);
      v8 = *(_QWORD *)(v6 - 8);
      __chkstk_darwin(v7);
      v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v8 + 16))(v10);
      v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v6);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v5, "setCompositingFilter:", v11);

    swift_unknownObjectRelease(v11);
  }
  return sub_10004FF60(a1, &qword_10119DCC0);
}

BOOL sub_100242F94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return ((v3 ^ v2) & 1) == 0;
  return result;
}

BOOL sub_100242FC8(uint64_t a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *((unsigned __int8 *)a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
    return v2 == 0;
  v3 = *a2;
  if (*(_BYTE *)(a1 + 8) != 1)
    return v2 == 2 && v3 == 0;
  v4 = *(_QWORD *)a1;
  v5 = v4 == 2;
  if (*a2 != 2)
    v5 = 0;
  v6 = ((*(_QWORD *)a1 ^ v3) & 1) == 0;
  if (v4 == 2 || *a2 == 2)
    v6 = v5;
  return v2 == 1 && v6;
}

void sub_10024303C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  _BYTE *v5;
  double v6;
  void *v7;
  id v8;
  double v9;
  void *v10;
  id v11;

  v2 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_staticLyricsViewController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = objc_msgSend(v2, "view");
  if (!v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v4 = v3;
  v5 = (_BYTE *)(a1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_state);
  v6 = 0.0;
  if (*(_BYTE *)(a1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_state + 8) == 1 && *v5 == 2)
    v6 = 1.0;
  objc_msgSend(v3, "setAlpha:", v6);

  if (v5[8] != 1 || *v5 == 2)
  {
    v7 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController);
    if (v7)
    {
      v8 = objc_msgSend(v7, "view");
      if (v8)
      {
        v9 = 0.0;
LABEL_14:
        v11 = v8;
        objc_msgSend(v8, "setAlpha:", v9);

        return;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v10 = *(void **)(a1 + OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController);
  if (!v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = objc_msgSend(v10, "view");
  if (v8)
  {
    v9 = 1.0;
    goto LABEL_14;
  }
LABEL_20:
  __break(1u);
}

void sub_100243214(char a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  id v7;
  _BYTE *v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  void *v14;
  _BYTE *v15;
  Class isa;
  void *v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[5];
  uint64_t v21;

  v3 = v2;
  v3[OBJC_IVAR___MusicNowPlayingLyricsViewController_areControlsHidden] = a1;
  v6 = swift_allocObject(&unk_1010B8088, 32, 7);
  *(_BYTE *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v3;
  if ((a2 & 1) != 0)
  {
    v7 = objc_allocWithZone((Class)UISpringTimingParameters);
    v8 = v3;
    v9 = 0.0;
    v10 = objc_msgSend(v7, "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
    v11 = v10;
    if ((a1 & 1) != 0)
    {
      v12 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 986.0, 62.0, 0.0, 0.0);
    }
    else
    {
      v12 = v10;
      v9 = 0.15;
    }
    sub_10004A07C(0, &qword_1011A22E0, UIViewPropertyAnimator_ptr);
    isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v12).super.isa;
    v20[4] = sub_10024E7BC;
    v21 = v6;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_1001DBD98;
    v20[3] = &unk_1010B80A0;
    v17 = _Block_copy(v20);
    v18 = v21;
    swift_retain(v6);
    -[objc_class addAnimations:](isa, "addAnimations:", v17, swift_release(v18).n128_f64[0]);
    _Block_release(v17);
    -[objc_class startAnimationAfterDelay:](isa, "startAnimationAfterDelay:", v9);

  }
  else
  {
    if ((a1 & 1) != 0)
      v13 = 0.0;
    else
      v13 = 1.0;
    v14 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationToggleSlider];
    v15 = v3;
    if (v14)
      objc_msgSend(v14, "setAlpha:", v13);
    v19 = *(void **)&v3[OBJC_IVAR___MusicNowPlayingLyricsViewController_tapToRadarButton];
    if (v19)
      objc_msgSend(v19, "setAlpha:", v13);
  }
  sub_100248B68();
  swift_release(v6);
}

id sub_100243450(char a1, uint64_t a2)
{
  double v3;
  void *v4;
  id result;

  if ((a1 & 1) != 0)
    v3 = 0.0;
  else
    v3 = 1.0;
  v4 = *(void **)(a2 + OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationToggleSlider);
  if (v4)
    objc_msgSend(v4, "setAlpha:", v3);
  result = *(id *)(a2 + OBJC_IVAR___MusicNowPlayingLyricsViewController_tapToRadarButton);
  if (result)
    return objc_msgSend(result, "setAlpha:", v3);
  return result;
}

id sub_1002434CC()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
  objc_msgSend(v1, "unregisterObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for NowPlayingLyricsViewController(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1002437AC()
{
  return type metadata accessor for NowPlayingLyricsViewController(0);
}

uint64_t type metadata accessor for NowPlayingLyricsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A86A0;
  if (!qword_1011A86A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingLyricsViewController);
  return result;
}

void sub_1002437F0()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(void (*)(__int128 *), uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  void *v47;
  id v48;
  void *v49;
  _QWORD *v50;
  id v51;
  _QWORD *v52;
  id v53;
  id v54;
  _QWORD *v55;
  void *v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  void *v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  char *v76;
  id v77;
  char v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  void *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  char *v97;
  void *v98;
  char *v99;
  id v100;
  void *v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  id v117;
  Class isa;
  id v119;
  void *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  id v147;
  unint64_t v148;
  id v149;
  uint64_t v150;
  char v151[24];
  _QWORD v152[3];
  uint64_t v153;
  objc_super v154;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v154.receiver = v0;
  v154.super_class = (Class)type metadata accessor for NowPlayingLyricsViewController(0);
  objc_msgSendSuper2(&v154, "viewDidLoad");
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_53;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "layer");

  objc_msgSend(v5, "setAllowsGroupBlending:", 0);
  objc_msgSend(v1, "setViewRespectsSystemMinimumLayoutMargins:", 0);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v7 = OBJC_IVAR___MusicNowPlayingLyricsViewController_activityIndicator;
  v8 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_activityIndicator];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_activityIndicator] = v6;

  v9 = *(void **)&v1[v7];
  if (!v9)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = *(void **)&v1[v7];
  if (!v10)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v11 = qword_10119C318;
  v12 = v10;
  if (v11 != -1)
    swift_once(&qword_10119C318, sub_1005D2F9C);
  objc_msgSend(v12, "setColor:", qword_10124D3F8);

  v13 = *(void **)&v1[v7];
  if (!v13)
    goto LABEL_55;
  objc_msgSend(v13, "setHidesWhenStopped:", 1);
  v14 = objc_msgSend(v1, "view");
  if (!v14)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (!*(_QWORD *)&v1[v7])
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v15 = v14;
  objc_msgSend(v14, "addSubview:");

  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v17 = v16;
  objc_msgSend(v16, "bounds");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v26 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v19, v21, v23, v25);
  v27 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_container];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_container] = v26;
  v28 = v26;

  v29 = objc_msgSend(v1, "view");
  if (!v29)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v30 = v29;
  UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v28);

  objc_msgSend(v28, "setPreservesSuperviewLayoutMargins:", 1);
  v31 = objc_msgSend(v28, "layer");
  v32 = (uint64_t)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsCompositingFilter];
  swift_beginAccess(&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsCompositingFilter], v151, 0, 0);
  sub_10004A160(v32, (uint64_t)v152, &qword_10119DCC0);
  v33 = v153;
  if (v153)
  {
    v34 = sub_100007E68(v152, v153);
    v35 = *(_QWORD *)(v33 - 8);
    v36 = __chkstk_darwin(v34);
    v38 = (char *)&v146 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v35 + 16))(v38, v36);
    v39 = _bridgeAnythingToObjectiveC<A>(_:)(v38, v33);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v33);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v152);
  }
  else
  {
    v39 = 0;
  }
  objc_msgSend(v31, "setCompositingFilter:", v39);
  swift_unknownObjectRelease(v39);

  type metadata accessor for SyncedLyricsViewController();
  v40 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v41 = swift_allocObject(&unk_1010B7D18, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16, v1);
  v42 = *(void (**)(void (*)(__int128 *), uint64_t, __n128))((swift_isaMask & *v40) + 0x1F8);
  v43 = swift_retain(v41);
  v42(sub_10024E810, v41, v43);
  swift_release(v41);
  v44 = OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController;
  v45 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController] = v40;
  v46 = v40;

  v47 = *(void **)&v1[v44];
  if (!v47)
    goto LABEL_60;
  v150 = ObjectType;
  v48 = objc_msgSend(v47, "view");
  if (!v48)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v49 = v48;
  objc_msgSend(v48, "setAlpha:", 0.0);

  v50 = *(_QWORD **)&v1[v44];
  if (!v50)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v51 = *(id *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_nowPlaying];
  if (v51)
  {
    v52 = v50;
    v53 = objc_msgSend(v51, "tracklist");
    v51 = objc_msgSend(v53, "playingItem");

    if (v51)
    {
      v54 = objc_msgSend(v51, "nowPlayingAudioFormat");

      if (v54)
      {
        v51 = objc_msgSend(v54, "isSpatialized");

      }
      else
      {
        v51 = 0;
      }
    }
  }
  else
  {
    v55 = v50;
  }
  (*(void (**)(id))((swift_isaMask & *v50) + 0x120))(v51);

  v56 = *(void **)&v1[v44];
  if (!v56)
    goto LABEL_63;
  v57 = objc_msgSend(v56, "view");
  if (!v57)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v58 = v57;
  UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v57);

  if (!*(_QWORD *)&v1[v44])
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  objc_msgSend(v1, "addChildViewController:");
  v59 = *(void **)&v1[v44];
  if (!v59)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  objc_msgSend(v59, "didMoveToParentViewController:", v1);
  v60 = *(void **)&v1[v44];
  if (!v60)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v149 = v46;
  v61 = objc_msgSend(v60, "view");
  if (!v61)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v62 = v61;
  v63 = AccessibilityIdentifier.lyricsSyncedView.unsafeMutableAddressor();
  v64 = *v63;
  v65 = v63[1];
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v64, v65);

  type metadata accessor for StaticLyricsContentViewController();
  v66 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v67 = OBJC_IVAR___MusicNowPlayingLyricsViewController_staticLyricsViewController;
  v68 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_staticLyricsViewController];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_staticLyricsViewController] = v66;

  v69 = *(void **)&v1[v67];
  if (!v69)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v70 = objc_msgSend(v69, "view");
  if (!v70)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v71 = v70;
  objc_msgSend(v70, "setAlpha:", 0.0);

  v72 = *(void **)&v1[v67];
  if (!v72)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v73 = objc_msgSend(v72, "view");
  if (!v73)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v74 = v73;
  objc_msgSend(v73, "setPreservesSuperviewLayoutMargins:", 1);

  v75 = *(void **)&v1[v67];
  if (!v75)
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v76 = v75;
  v77 = objc_msgSend(v1, "traitCollection");
  v148 = sub_10013B23C();
  v78 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v148);

  if ((v78 & 1) != 0)
  {
    if (qword_10119C300 != -1)
      swift_once(&qword_10119C300, sub_1005D2ED0);
    v79 = (id)qword_10124D3E0;
  }
  else
  {
    v79 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  v80 = *(void **)&v76[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_textColor];
  *(_QWORD *)&v76[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_textColor] = v79;
  v81 = v79;

  sub_100802400();
  v82 = *(void **)&v1[v67];
  if (!v82)
    goto LABEL_74;
  v83 = objc_msgSend(v82, "view");
  if (!v83)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v84 = v83;
  UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v83);

  if (!*(_QWORD *)&v1[v67])
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  objc_msgSend(v1, "addChildViewController:");
  v85 = *(void **)&v1[v67];
  if (!v85)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  objc_msgSend(v85, "didMoveToParentViewController:", v1);
  v86 = *(void **)&v1[v67];
  if (!v86)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v87 = objc_msgSend(v86, "view");
  if (!v87)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v88 = v87;
  v89 = AccessibilityIdentifier.lyricsStaticView.unsafeMutableAddressor();
  v90 = *v89;
  v91 = v89[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v90, v91);

  v92 = sub_100249324();
  v93 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationToggleSlider];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_vocalAttenuationToggleSlider] = v92;
  v94 = v92;

  v95 = objc_msgSend(v1, "view");
  if (!v95)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v96 = v95;
  objc_msgSend(v95, "addSubview:", v94);

  if (*DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() != 1)
    goto LABEL_49;
  v97 = sub_10024AF84();
  v98 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_tapToRadarButton];
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_tapToRadarButton] = v97;
  v99 = v97;

  sub_10024C010();
  v100 = objc_msgSend(v1, "view");
  if (v100)
  {
    v101 = v100;
    objc_msgSend(v100, "addSubview:", v99);

LABEL_49:
    v102 = (void *)objc_opt_self(UIColor);
    v103 = objc_msgSend(v102, "clearColor");
    v104 = objc_msgSend(v103, "cgColor");
    v105 = v103;
    if (v104)
    {
      v147 = v94;
      v106 = v104;
      v107 = objc_msgSend(v102, "whiteColor");
      v108 = objc_msgSend(v107, "cgColor");
      v109 = v107;
      if (v108)
      {
        v110 = v108;
        v111 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
        objc_msgSend(v28, "bounds");
        objc_msgSend(v111, "setFrame:");
        v112 = sub_100007E8C(&qword_10119E430);
        v113 = swift_allocObject(v112, 160, 7);
        *(_OWORD *)(v113 + 16) = xmmword_100EA7BA0;
        type metadata accessor for CGColor(0);
        *(_QWORD *)(v113 + 32) = v106;
        *(_QWORD *)(v113 + 56) = v114;
        *(_QWORD *)(v113 + 64) = v110;
        *(_QWORD *)(v113 + 88) = v114;
        *(_QWORD *)(v113 + 96) = v110;
        *(_QWORD *)(v113 + 152) = v114;
        *(_QWORD *)(v113 + 120) = v114;
        *(_QWORD *)(v113 + 128) = v106;
        v115 = v106;
        v116 = v110;
        v117 = v115;
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v111, "setColors:", isa, swift_bridgeObjectRelease(v113).n128_f64[0]);

        v119 = objc_msgSend(v28, "layer");
        objc_msgSend(v119, "setMask:", v111);

        v120 = *(void **)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_gradientMaskLayer];
        *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_gradientMaskLayer] = v111;
        v121 = v111;

        sub_1002453CC();
        sub_100245F38();
        v122 = sub_100007E8C(&qword_1011A1750);
        v123 = swift_allocObject(v122, 48, 7);
        *(_OWORD *)(v123 + 16) = xmmword_100EA7AA0;
        v124 = v148;
        *(_QWORD *)(v123 + 32) = &type metadata for HasAnimatedBackgroundTrait;
        *(_QWORD *)(v123 + 40) = v124;
        v125 = v150;
        v126 = UIViewController.registerForTraitChanges<A>(_:handler:)(v123, sub_10024D774, 0, v150);
        swift_bridgeObjectRelease(v123);
        swift_unknownObjectRelease(v126);
        v127 = swift_allocObject(v122, 64, 7);
        *(_OWORD *)(v127 + 16) = xmmword_100EA7A80;
        v128 = sub_10013B424();
        *(_QWORD *)(v127 + 32) = &type metadata for NowPlayingLayoutTypeTrait;
        *(_QWORD *)(v127 + 40) = v128;
        *(_QWORD *)(v127 + 48) = type metadata accessor for UITraitUserInterfaceIdiom(0);
        *(_QWORD *)(v127 + 56) = &protocol witness table for UITraitUserInterfaceIdiom;
        v129 = UIViewController.registerForTraitChanges<A>(_:handler:)(v127, sub_10024D778, 0, v125);
        swift_bridgeObjectRelease(v127);
        swift_unknownObjectRelease(v129);
        v130 = swift_allocObject(&unk_1010B7D18, 24, 7);
        swift_unknownObjectWeakInit(v130 + 16, v1);
        v131 = type metadata accessor for NotificationObserver();
        swift_allocObject(v131, 64, 7);
        v132 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UISceneWillDeactivateNotification, 0, 1, 1, (uint64_t)sub_10024E818, v130);
        v133 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_backgroundObserver];
        *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_backgroundObserver] = v132;
        swift_release(v133);
        v134 = swift_allocObject(&unk_1010B7D18, 24, 7);
        swift_unknownObjectWeakInit(v134 + 16, v1);
        swift_allocObject(v131, 64, 7);
        v135 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UISceneDidActivateNotification, 0, 1, 1, (uint64_t)sub_10024E820, v134);
        v136 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_foregroundObserver];
        *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_foregroundObserver] = v135;
        swift_release(v136);
        v137 = (void *)UIPresentationControllerPresentationTransitionDidEndNotification;
        v138 = swift_allocObject(&unk_1010B7D18, 24, 7);
        swift_unknownObjectWeakInit(v138 + 16, v1);
        swift_allocObject(v131, 64, 7);
        v139 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v137, 0, 1, 1, (uint64_t)sub_10024E828, v138);
        v140 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_presentationObserver];
        *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_presentationObserver] = v139;
        swift_release(v140);
        v141 = (void *)UIPresentationControllerDismissalTransitionDidEndNotification;
        v142 = swift_allocObject(&unk_1010B7D18, 24, 7);
        swift_unknownObjectWeakInit(v142 + 16, v1);
        swift_allocObject(v131, 64, 7);
        v143 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v141, 0, 1, 1, (uint64_t)sub_10024E830, v142);
        v144 = *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_dismissalObserver];
        *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingLyricsViewController_dismissalObserver] = v143;
        swift_release(v144);
        v145 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
        objc_msgSend(v145, "registerObserver:", v1);

        return;
      }
      goto LABEL_82;
    }
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
  }
  __break(1u);
}

void sub_100244618(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100247688(a1);

  }
}

void sub_100244670(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  _QWORD v23[4];
  _BYTE v24[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    Notification.object.getter(v23);
    if (v23[3])
    {
      v9 = sub_10004A07C(0, &qword_1011A8810, UIWindowScene_ptr);
      if ((swift_dynamicCast(&v22, v23, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
      {
        v10 = v22;
        v11 = objc_msgSend(v8, "view");
        if (v11)
        {
          v12 = v11;
          v13 = objc_msgSend(v11, "window");

          v14 = objc_msgSend(v13, "windowScene");
          if (v14)
          {
            v15 = v10;
            v16 = static NSObject.== infix(_:_:)(v15, v14);

            if ((v16 & 1) != 0)
            {
              v17 = Logger.lyrics.unsafeMutableAddressor();
              v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v17, v3);
              v19 = Logger.logObject.getter(v18);
              v20 = static os_log_type_t.default.getter(v19);
              if (os_log_type_enabled(v19, v20))
              {
                v21 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v21 = 0;
                _os_log_impl((void *)&_mh_execute_header, v19, v20, "UI got backgrounded", v21, 2u);
                swift_slowDealloc(v21, -1, -1);
              }

              (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
              *((_BYTE *)v8 + OBJC_IVAR___MusicNowPlayingLyricsViewController_isBackgrounded) = 1;
              sub_10024C134();
            }

          }
          else
          {

          }
        }
        else
        {

          __break(1u);
        }
      }
      else
      {

      }
    }
    else
    {

      sub_10004FF60((uint64_t)v23, &qword_10119DCC0);
    }
  }
}

void sub_1002448E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  NSObject *v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint8_t *v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  uint64_t (*v42)(id);
  id v43;
  _QWORD *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSObject *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  void *v67;
  _QWORD v68[4];
  char v69[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v63 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v63 - v17;
  a2 += 16;
  swift_beginAccess(a2, v69, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v20 = (char *)Strong;
    Notification.object.getter(v68);
    if (!v68[3])
    {

      sub_10004FF60((uint64_t)v68, &qword_10119DCC0);
      return;
    }
    v21 = sub_10004A07C(0, &qword_1011A8810, UIWindowScene_ptr);
    if ((swift_dynamicCast(&v67, v68, (char *)&type metadata for Any + 8, v21, 6) & 1) == 0)
      goto LABEL_14;
    v64 = v5;
    v65 = v9;
    v66 = v67;
    v22 = objc_msgSend(v20, "view");
    if (!v22)
    {

      __break(1u);
      return;
    }
    v23 = v22;
    v24 = objc_msgSend(v22, "window");

    v25 = objc_msgSend(v24, "windowScene");
    if (!v25)
    {

      goto LABEL_14;
    }
    v26 = v66;
    v27 = static NSObject.== infix(_:_:)(v26, v25);

    if ((v27 & 1) == 0)
      goto LABEL_11;
    v28 = Logger.lyrics.unsafeMutableAddressor();
    v29 = *(void **)(v10 + 16);
    v63 = v28;
    v30 = v65;
    v66 = v29;
    v31 = ((uint64_t (*)(char *))v29)(v18);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "UI got foregrounded", v34, 2u);
      v35 = v34;
      v30 = v65;
      swift_slowDealloc(v35, -1, -1);
    }

    v36 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v37 = v36(v18, v30);
    v20[OBJC_IVAR___MusicNowPlayingLyricsViewController_isBackgrounded] = 0;
    Date.init()(v37);
    v38 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v8, 0, 1, v38);
    v39 = (uint64_t)&v20[OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsVisibilityStart];
    swift_beginAccess(&v20[OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsVisibilityStart], v68, 33, 0);
    sub_1000A5508((uint64_t)v8, v39, (uint64_t *)&unk_1011A30A0);
    swift_endAccess(v68);
    v40 = *(void **)&v20[OBJC_IVAR___MusicNowPlayingLyricsViewController_song];
    if (!v40 || v20[OBJC_IVAR___MusicNowPlayingLyricsViewController_state + 8] < 2u)
    {
LABEL_11:

LABEL_14:
      return;
    }
    v41 = *(_QWORD **)&v20[OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsLoader];
    v42 = *(uint64_t (**)(id))((swift_isaMask & *v41) + 0xD8);
    v43 = v40;
    v44 = v41;
    LOBYTE(v42) = v42(v43);

    if ((v42 & 1) != 0)
    {
      v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v66)(v12, v63, v65);
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.default.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Lyrics request for this song already in progress", v48, 2u);
        swift_slowDealloc(v48, -1, -1);
        v49 = v26;
        v50 = v20;
      }
      else
      {
        v49 = v46;
        v50 = v43;
        v46 = v26;
        v43 = v20;
      }

      v36(v12, v65);
    }
    else
    {
      v51 = v65;
      v52 = ((uint64_t (*)(char *, uint64_t, uint64_t))v66)(v15, v63, v65);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.default.getter(v53);
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v55 = 0;
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Making new lyrics request", v55, 2u);
        v51 = v65;
        swift_slowDealloc(v55, -1, -1);
      }

      v36(v15, v51);
      v56 = type metadata accessor for TaskPriority(0);
      v57 = (uint64_t)v64;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v64, 1, 1, v56);
      type metadata accessor for MainActor(0);
      v58 = v20;
      v60 = static MainActor.shared.getter(v59);
      v61 = (_QWORD *)swift_allocObject(&unk_1010B80D8, 40, 7);
      v61[2] = v60;
      v61[3] = &protocol witness table for MainActor;
      v61[4] = v58;
      v62 = sub_100166D14(v57, (uint64_t)&unk_1011A8820, (uint64_t)v61);

      swift_release(v62);
    }
  }
}

uint64_t sub_100244EC0()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1011A86B4);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100088358;
  return sub_100246AC0();
}

void sub_100244F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  _QWORD v12[4];
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    Notification.object.getter(v12);
    if (v12[3])
    {
      v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
      {
        v6 = v11;
        v7 = objc_msgSend(v4, "parentViewController");
        if (v7)
        {
          v8 = v7;
          v9 = v6;
          v10 = static NSObject.== infix(_:_:)(v9, v8);

          if ((v10 & 1) != 0)
          {

            return;
          }
        }
        else
        {

        }
        sub_10024C134();

      }
      else
      {

      }
    }
    else
    {

      sub_10004FF60((uint64_t)v12, &qword_10119DCC0);
    }
  }
}

void sub_100245060(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v12[3];
  _QWORD v13[4];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter(v13);
  if (v13[3])
  {
    v6 = type metadata accessor for NowPlayingViewController(0);
    if ((swift_dynamicCast(v12, v13, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
    {

      return;
    }
  }
  else
  {
    sub_10004FF60((uint64_t)v13, &qword_10119DCC0);
  }
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v8 = (char *)Strong;
    Date.init()(Strong);
    v9 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
    v10 = (uint64_t)&v8[OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsVisibilityStart];
    swift_beginAccess(&v8[OBJC_IVAR___MusicNowPlayingLyricsViewController_lyricsVisibilityStart], v12, 33, 0);
    sub_1000A5508((uint64_t)v5, v10, (uint64_t *)&unk_1011A30A0);
    swift_endAccess(v12);

  }
}

void sub_1002453CC()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  _OWORD __dst[34];

  v1 = *(void **)&v0[OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController];
  if (v1)
  {
    v2 = v0;
    v67 = v1;
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = sub_10013B424();
    v5 = sub_10013B468();
    UITraitCollection.subscript.getter(__dst, &type metadata for NowPlayingLayoutTypeTrait, &type metadata for NowPlayingLayoutTypeTrait, v4, v5);

    v6 = LOBYTE(__dst[0]);
    v7 = objc_msgSend(v2, "traitCollection");
    v8 = objc_msgSend(v7, "userInterfaceIdiom");

    if (v6)
    {
      v9 = SyncedLyricsViewController.Specs.iPad.unsafeMutableAddressor();
      memcpy(__dst, v9, 0x219uLL);
      v66 = BYTE8(__dst[33]);
      v65 = *(_QWORD *)&__dst[33];
      v64 = __dst[32];
      v63 = __dst[31];
      v62 = __dst[30];
      v61 = __dst[29];
      v60 = *((_QWORD *)&__dst[28] + 1);
      v58 = *(_QWORD *)&__dst[26];
      v59 = *((_QWORD *)&__dst[25] + 1);
      v56 = *(_QWORD *)&__dst[27];
      v57 = *((_QWORD *)&__dst[26] + 1);
      v54 = *((_QWORD *)&__dst[27] + 1);
      v55 = *(_QWORD *)&__dst[28];
      v53 = *(_QWORD *)&__dst[25];
      v52 = __dst[24];
      v51 = __dst[23];
      v50 = __dst[22];
      v49 = __dst[21];
      v48 = *((_QWORD *)&__dst[20] + 1);
      v46 = *(_QWORD *)&__dst[18];
      v47 = *((_QWORD *)&__dst[17] + 1);
      v44 = *(_QWORD *)&__dst[19];
      v45 = *((_QWORD *)&__dst[18] + 1);
      v42 = *(_QWORD *)&__dst[20];
      v43 = *((_QWORD *)&__dst[19] + 1);
      v40 = *((_QWORD *)&__dst[16] + 1);
      v41 = *(_QWORD *)&__dst[17];
      v38 = *(_OWORD *)((char *)&__dst[14] + 8);
      v39 = *(_OWORD *)((char *)&__dst[15] + 8);
      v36 = *(_QWORD *)&__dst[14];
      v37 = *((_QWORD *)&__dst[13] + 1);
      v35 = *(_QWORD *)&__dst[13];
      v34 = __dst[12];
      v31 = BYTE8(__dst[11]);
      v33 = *(_QWORD *)&__dst[11];
      v32 = __dst[10];
      v10 = *(_QWORD *)&__dst[4];
      v11 = BYTE8(__dst[4]);
      v12 = *(_QWORD *)&__dst[3];
      v13 = BYTE8(__dst[3]);
      if (v6 == 1)
      {
        v30 = __dst[9];
        v14 = *((_QWORD *)&__dst[6] + 1);
        v29 = *(_QWORD *)&__dst[6];
        v16 = *((_QWORD *)&__dst[7] + 1);
        v15 = *(_QWORD *)&__dst[7];
        v18 = *((_QWORD *)&__dst[8] + 1);
        v17 = *(_QWORD *)&__dst[8];
        v19 = *((_QWORD *)&__dst[5] + 1);
        v20 = *(_QWORD *)&__dst[5];
        v21 = *(_QWORD *)&__dst[0];
        sub_10024E6C8((uint64_t)__dst);
        v22 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        v26 = 0x4034000000000000;
      }
      else
      {
        v28 = &v2[OBJC_IVAR___MusicNowPlayingLyricsViewController_artworkFrame];
        v26 = *(_QWORD *)&v2[OBJC_IVAR___MusicNowPlayingLyricsViewController_artworkFrame];
        v22 = *((_QWORD *)v28 + 1);
        v23 = *((_QWORD *)v28 + 2);
        v24 = *((_QWORD *)v28 + 3);
        v30 = __dst[9];
        v14 = *((_QWORD *)&__dst[6] + 1);
        v29 = *(_QWORD *)&__dst[6];
        v16 = *((_QWORD *)&__dst[7] + 1);
        v15 = *(_QWORD *)&__dst[7];
        v18 = *((_QWORD *)&__dst[8] + 1);
        v17 = *(_QWORD *)&__dst[8];
        v19 = *((_QWORD *)&__dst[5] + 1);
        v20 = *(_QWORD *)&__dst[5];
        v21 = *(_QWORD *)&__dst[0];
        sub_10024E6C8((uint64_t)__dst);
        v25 = 0x80;
      }
    }
    else
    {
      if ((unint64_t)v8 > 1)
        v27 = SyncedLyricsViewController.Specs.alternative.unsafeMutableAddressor();
      else
        v27 = SyncedLyricsViewController.Specs.default.unsafeMutableAddressor();
      memcpy(__dst, v27, 0x219uLL);
      v66 = BYTE8(__dst[33]);
      v65 = *(_QWORD *)&__dst[33];
      v64 = __dst[32];
      v63 = __dst[31];
      v62 = __dst[30];
      v61 = __dst[29];
      v60 = *((_QWORD *)&__dst[28] + 1);
      v58 = *(_QWORD *)&__dst[26];
      v59 = *((_QWORD *)&__dst[25] + 1);
      v56 = *(_QWORD *)&__dst[27];
      v57 = *((_QWORD *)&__dst[26] + 1);
      v54 = *((_QWORD *)&__dst[27] + 1);
      v55 = *(_QWORD *)&__dst[28];
      v53 = *(_QWORD *)&__dst[25];
      v52 = __dst[24];
      v51 = __dst[23];
      v50 = __dst[22];
      v49 = __dst[21];
      v48 = *((_QWORD *)&__dst[20] + 1);
      v46 = *(_QWORD *)&__dst[18];
      v47 = *((_QWORD *)&__dst[17] + 1);
      v44 = *(_QWORD *)&__dst[19];
      v45 = *((_QWORD *)&__dst[18] + 1);
      v42 = *(_QWORD *)&__dst[20];
      v43 = *((_QWORD *)&__dst[19] + 1);
      v40 = *((_QWORD *)&__dst[16] + 1);
      v41 = *(_QWORD *)&__dst[17];
      v38 = *(_OWORD *)((char *)&__dst[14] + 8);
      v39 = *(_OWORD *)((char *)&__dst[15] + 8);
      v36 = *(_QWORD *)&__dst[14];
      v37 = *((_QWORD *)&__dst[13] + 1);
      v35 = *(_QWORD *)&__dst[13];
      v34 = __dst[12];
      v31 = BYTE8(__dst[11]);
      v33 = *(_QWORD *)&__dst[11];
      v32 = __dst[10];
      v10 = *(_QWORD *)&__dst[4];
      v11 = BYTE8(__dst[4]);
      v12 = *(_QWORD *)&__dst[3];
      v13 = BYTE8(__dst[3]);
      v26 = *((_QWORD *)&__dst[0] + 1);
      v23 = *((_QWORD *)&__dst[1] + 1);
      v22 = *(_QWORD *)&__dst[1];
      v24 = *(_QWORD *)&__dst[2];
      v25 = BYTE8(__dst[2]);
      v30 = __dst[9];
      v14 = *((_QWORD *)&__dst[6] + 1);
      v29 = *(_QWORD *)&__dst[6];
      v16 = *((_QWORD *)&__dst[7] + 1);
      v15 = *(_QWORD *)&__dst[7];
      v18 = *((_QWORD *)&__dst[8] + 1);
      v17 = *(_QWORD *)&__dst[8];
      v19 = *((_QWORD *)&__dst[5] + 1);
      v20 = *(_QWORD *)&__dst[5];
      v21 = *(_QWORD *)&__dst[0];
      sub_10024E6C8((uint64_t)__dst);
    }
    *(_QWORD *)&__dst[0] = v21;
    *(_QWORD *)&__dst[5] = v20;
    *((_QWORD *)&__dst[5] + 1) = v19;
    *(_QWORD *)&__dst[6] = v29;
    *((_QWORD *)&__dst[6] + 1) = v14;
    *(_QWORD *)&__dst[7] = v15;
    *((_QWORD *)&__dst[7] + 1) = v16;
    *(_QWORD *)&__dst[8] = v17;
    *((_QWORD *)&__dst[8] + 1) = v18;
    __dst[9] = v30;
    *((_QWORD *)&__dst[0] + 1) = v26;
    *(_QWORD *)&__dst[1] = v22;
    *((_QWORD *)&__dst[1] + 1) = v23;
    *(_QWORD *)&__dst[2] = v24;
    BYTE8(__dst[2]) = v25;
    *(_QWORD *)&__dst[3] = v12;
    BYTE8(__dst[3]) = v13;
    *(_QWORD *)&__dst[4] = v10;
    BYTE8(__dst[4]) = v11;
    __dst[10] = v32;
    *(_QWORD *)&__dst[11] = v33;
    BYTE8(__dst[11]) = v31;
    __dst[12] = v34;
    *(_QWORD *)&__dst[13] = v35;
    *((_QWORD *)&__dst[13] + 1) = v37;
    *(_QWORD *)&__dst[14] = v36;
    *(_OWORD *)((char *)&__dst[14] + 8) = v38;
    *(_OWORD *)((char *)&__dst[15] + 8) = v39;
    *((_QWORD *)&__dst[16] + 1) = v40;
    *(_QWORD *)&__dst[17] = v41;
    *((_QWORD *)&__dst[17] + 1) = v47;
    *(_QWORD *)&__dst[18] = v46;
    *((_QWORD *)&__dst[18] + 1) = v45;
    *(_QWORD *)&__dst[19] = v44;
    *((_QWORD *)&__dst[19] + 1) = v43;
    *(_QWORD *)&__dst[20] = v42;
    *((_QWORD *)&__dst[20] + 1) = v48;
    __dst[21] = v49;
    __dst[22] = v50;
    __dst[23] = v51;
    __dst[24] = v52;
    *(_QWORD *)&__dst[25] = v53;
    *((_QWORD *)&__dst[25] + 1) = v59;
    *(_QWORD *)&__dst[26] = v58;
    *((_QWORD *)&__dst[26] + 1) = v57;
    *(_QWORD *)&__dst[27] = v56;
    *((_QWORD *)&__dst[27] + 1) = v54;
    *(_QWORD *)&__dst[28] = v55;
    *((_QWORD *)&__dst[28] + 1) = v60;
    __dst[29] = v61;
    __dst[30] = v62;
    __dst[31] = v63;
    __dst[32] = v64;
    *(_QWORD *)&__dst[33] = v65;
    BYTE8(__dst[33]) = v66;
    (*(void (**)(_OWORD *))((swift_isaMask & *v67) + 0x180))(__dst);

  }
  else
  {
    __break(1u);
  }
}

