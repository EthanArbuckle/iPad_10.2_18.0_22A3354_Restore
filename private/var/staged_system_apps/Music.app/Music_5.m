_QWORD *sub_1002D1DA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v66;
  uint64_t v67;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 44);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v13);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
  {
    v16 = type metadata accessor for Optional(0, v14);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = (int *)type metadata accessor for Library.Context(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v18 + 48))(v12, 1, v17))
    {
      memcpy(v11, v12, *(_QWORD *)(v15 + 64));
    }
    else
    {
      v66 = v18;
      v67 = v15;
      *v11 = *v12;
      v19 = v17[5];
      __dst = (char *)v11 + v19;
      v20 = (char *)v12 + v19;
      v21 = type metadata accessor for Album(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      v24 = v17[6];
      __dsta = (char *)v11 + v24;
      v25 = (char *)v12 + v24;
      v26 = type metadata accessor for Artist(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(__dsta, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dsta, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dsta, 0, 1, v26);
      }
      v29 = v17[7];
      __dstb = (char *)v11 + v29;
      v30 = (char *)v12 + v29;
      v31 = type metadata accessor for Composer(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(__dstb, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dstb, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dstb, 0, 1, v31);
      }
      v34 = v17[8];
      __dstc = (char *)v11 + v34;
      v35 = (char *)v12 + v34;
      v36 = type metadata accessor for Genre(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_10119ED08);
        memcpy(__dstc, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(__dstc, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dstc, 0, 1, v36);
      }
      v39 = v17[9];
      __dstd = (char *)v11 + v39;
      v40 = (char *)v12 + v39;
      v41 = type metadata accessor for Playlist(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_1011A30F0);
        memcpy(__dstd, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(__dstd, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dstd, 0, 1, v41);
      }
      v44 = v17[10];
      __dste = (char *)v11 + v44;
      v45 = (char *)v12 + v44;
      v46 = type metadata accessor for TVShow(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(__dste, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(__dste, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dste, 0, 1, v46);
      }
      v49 = v17[11];
      __dstf = (char *)v11 + v49;
      v50 = (char *)v12 + v49;
      v51 = type metadata accessor for TVSeason(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(__dstf, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(__dstf, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dstf, 0, 1, v51);
      }
      *((_BYTE *)v11 + v17[12]) = *((_BYTE *)v12 + v17[12]);
      *((_BYTE *)v11 + v17[13]) = *((_BYTE *)v12 + v17[13]);
      *((_BYTE *)v11 + v17[14]) = *((_BYTE *)v12 + v17[14]);
      *(_OWORD *)((char *)v11 + v17[15]) = *(_OWORD *)((char *)v12 + v17[15]);
      *(_QWORD *)((char *)v11 + v17[16]) = *(_QWORD *)((char *)v12 + v17[16]);
      *((_BYTE *)v11 + v17[17]) = *((_BYTE *)v12 + v17[17]);
      v15 = v67;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v66 + 56))(v11, 0, 1, v17);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  v54 = *(int *)(a3 + 48);
  v55 = *(int *)(a3 + 52);
  v56 = (char *)a1 + v54;
  v57 = (char *)a2 + v54;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  v56[8] = v57[8];
  v58 = (char *)a1 + v55;
  v59 = (char *)a2 + v55;
  v60 = *((_OWORD *)v59 + 1);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *((_OWORD *)v58 + 1) = v60;
  v58[32] = v59[32];
  v61 = *(int *)(a3 + 60);
  *((_BYTE *)a1 + *(int *)(a3 + 56)) = *((_BYTE *)a2 + *(int *)(a3 + 56));
  *((_BYTE *)a1 + v61) = *((_BYTE *)a2 + v61);
  v62 = *(int *)(a3 + 64);
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v63[16] = v64[16];
  *(_OWORD *)v63 = *(_OWORD *)v64;
  return a1;
}

_QWORD *sub_1002D236C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD *, uint64_t, uint64_t);
  int v24;
  int v25;
  int *v26;
  uint64_t v27;
  size_t v28;
  int *v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD *, uint64_t, int *);
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  size_t v96;
  void *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(char *, uint64_t, uint64_t);
  int v140;
  size_t v141;
  void *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(char *, uint64_t, uint64_t);
  int v149;
  size_t v150;
  void *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t (*v157)(char *, uint64_t, uint64_t);
  int v158;
  size_t v159;
  void *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(char *, uint64_t, uint64_t);
  int v167;
  size_t v168;
  void *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(char *, uint64_t, uint64_t);
  int v176;
  size_t v177;
  void *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t (*v184)(char *, uint64_t, uint64_t);
  int v185;
  size_t v186;
  void *v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  _QWORD *v211;
  _QWORD *v212;
  _QWORD *v213;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 40);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  v17 = *(int *)(a3 + 44);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v20);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v18, 1, v21);
  v25 = v23(v19, 1, v21);
  if (!v24)
  {
    if (v25)
    {
      (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v18, v21);
      goto LABEL_7;
    }
    v29 = (int *)type metadata accessor for Library.Context(0);
    v30 = *((_QWORD *)v29 - 1);
    v31 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v30 + 48);
    v32 = v31(v18, 1, v29);
    v33 = v31(v19, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        *v18 = *v19;
        v34 = v29[5];
        v35 = (char *)v18 + v34;
        v211 = v19;
        v36 = (char *)v19 + v34;
        v37 = type metadata accessor for Album(0);
        v38 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
        {
          v39 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        }
        v98 = v29[6];
        v99 = (char *)v18 + v98;
        v100 = (char *)v211 + v98;
        v101 = type metadata accessor for Artist(0);
        v102 = *(_QWORD *)(v101 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
        {
          v103 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v99, v100, v101);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
        }
        v104 = v29[7];
        v105 = (char *)v18 + v104;
        v106 = (char *)v211 + v104;
        v107 = type metadata accessor for Composer(0);
        v108 = *(_QWORD *)(v107 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
        {
          v109 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v105, v106, v107);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
        }
        v110 = v29[8];
        v111 = (char *)v18 + v110;
        v112 = (char *)v211 + v110;
        v113 = type metadata accessor for Genre(0);
        v114 = *(_QWORD *)(v113 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
        {
          v115 = sub_100007E8C(&qword_10119ED08);
          memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v111, v112, v113);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
        }
        v116 = v29[9];
        v117 = (char *)v18 + v116;
        v118 = (char *)v211 + v116;
        v119 = type metadata accessor for Playlist(0);
        v120 = *(_QWORD *)(v119 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
        {
          v121 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v117, v118, v119);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
        }
        v122 = v29[10];
        v123 = (char *)v18 + v122;
        v124 = (char *)v211 + v122;
        v125 = type metadata accessor for TVShow(0);
        v126 = *(_QWORD *)(v125 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
        {
          v127 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v123, v124, v125);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
        }
        v128 = v29[11];
        v129 = (char *)v18 + v128;
        v130 = (char *)v211 + v128;
        v131 = type metadata accessor for TVSeason(0);
        v132 = *(_QWORD *)(v131 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v130, 1, v131))
        {
          v133 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v129, v130, v131);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
        }
        *((_BYTE *)v18 + v29[12]) = *((_BYTE *)v211 + v29[12]);
        *((_BYTE *)v18 + v29[13]) = *((_BYTE *)v211 + v29[13]);
        *((_BYTE *)v18 + v29[14]) = *((_BYTE *)v211 + v29[14]);
        *(_OWORD *)((char *)v18 + v29[15]) = *(_OWORD *)((char *)v211 + v29[15]);
        *(_QWORD *)((char *)v18 + v29[16]) = *(_QWORD *)((char *)v211 + v29[16]);
        *((_BYTE *)v18 + v29[17]) = *((_BYTE *)v211 + v29[17]);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v30 + 56))(v18, 0, 1, v29);
        goto LABEL_39;
      }
      goto LABEL_17;
    }
    if (v33)
    {
      sub_10005B748((uint64_t)v18, type metadata accessor for Library.Context);
LABEL_17:
      v28 = *(_QWORD *)(v22 + 64);
      goto LABEL_8;
    }
    *v18 = *v19;
    swift_release();
    v89 = v29[5];
    v90 = (char *)v18 + v89;
    v213 = v19;
    v91 = (char *)v19 + v89;
    v92 = type metadata accessor for Album(0);
    v93 = *(_QWORD *)(v92 - 8);
    v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
    v197 = v90;
    LODWORD(v90) = v94(v90, 1, v92);
    v95 = v94(v91, 1, v92);
    if ((_DWORD)v90)
    {
      if (v95)
      {
        v96 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64);
        v97 = v197;
LABEL_65:
        memcpy(v97, v91, v96);
        goto LABEL_68;
      }
      (*(void (**)(void *, char *, uint64_t))(v93 + 32))(v197, v91, v92);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v197, 0, 1, v92);
    }
    else
    {
      if (v95)
      {
        (*(void (**)(void *, uint64_t))(v93 + 8))(v197, v92);
        v96 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64);
        v97 = v197;
        goto LABEL_65;
      }
      (*(void (**)(void *, char *, uint64_t))(v93 + 40))(v197, v91, v92);
    }
LABEL_68:
    v134 = v29[6];
    v135 = (char *)v18 + v134;
    v136 = (char *)v213 + v134;
    v137 = type metadata accessor for Artist(0);
    v138 = *(_QWORD *)(v137 - 8);
    v139 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 48);
    v198 = v135;
    LODWORD(v135) = v139(v135, 1, v137);
    v140 = v139(v136, 1, v137);
    if ((_DWORD)v135)
    {
      if (v140)
      {
        v141 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8) + 64);
        v142 = v198;
LABEL_73:
        memcpy(v142, v136, v141);
        goto LABEL_76;
      }
      (*(void (**)(void *, char *, uint64_t))(v138 + 32))(v198, v136, v137);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v198, 0, 1, v137);
    }
    else
    {
      if (v140)
      {
        (*(void (**)(void *, uint64_t))(v138 + 8))(v198, v137);
        v141 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8) + 64);
        v142 = v198;
        goto LABEL_73;
      }
      (*(void (**)(void *, char *, uint64_t))(v138 + 40))(v198, v136, v137);
    }
LABEL_76:
    v143 = v29[7];
    v144 = (char *)v18 + v143;
    v145 = (char *)v213 + v143;
    v146 = type metadata accessor for Composer(0);
    v147 = *(_QWORD *)(v146 - 8);
    v148 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v147 + 48);
    v199 = v144;
    LODWORD(v144) = v148(v144, 1, v146);
    v149 = v148(v145, 1, v146);
    if ((_DWORD)v144)
    {
      if (v149)
      {
        v150 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7310) - 8) + 64);
        v151 = v199;
LABEL_81:
        memcpy(v151, v145, v150);
        goto LABEL_84;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 32))(v199, v145, v146);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v199, 0, 1, v146);
    }
    else
    {
      if (v149)
      {
        (*(void (**)(void *, uint64_t))(v147 + 8))(v199, v146);
        v150 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7310) - 8) + 64);
        v151 = v199;
        goto LABEL_81;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 40))(v199, v145, v146);
    }
LABEL_84:
    v152 = v29[8];
    v153 = (char *)v18 + v152;
    v154 = (char *)v213 + v152;
    v155 = type metadata accessor for Genre(0);
    v156 = *(_QWORD *)(v155 - 8);
    v157 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v156 + 48);
    v200 = v153;
    LODWORD(v153) = v157(v153, 1, v155);
    v158 = v157(v154, 1, v155);
    if ((_DWORD)v153)
    {
      if (v158)
      {
        v159 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119ED08) - 8) + 64);
        v160 = v200;
LABEL_89:
        memcpy(v160, v154, v159);
        goto LABEL_92;
      }
      (*(void (**)(void *, char *, uint64_t))(v156 + 32))(v200, v154, v155);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v200, 0, 1, v155);
    }
    else
    {
      if (v158)
      {
        (*(void (**)(void *, uint64_t))(v156 + 8))(v200, v155);
        v159 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119ED08) - 8) + 64);
        v160 = v200;
        goto LABEL_89;
      }
      (*(void (**)(void *, char *, uint64_t))(v156 + 40))(v200, v154, v155);
    }
LABEL_92:
    v161 = v29[9];
    v162 = (char *)v18 + v161;
    v163 = (char *)v213 + v161;
    v164 = type metadata accessor for Playlist(0);
    v165 = *(_QWORD *)(v164 - 8);
    v166 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v165 + 48);
    v201 = v162;
    LODWORD(v162) = v166(v162, 1, v164);
    v167 = v166(v163, 1, v164);
    if ((_DWORD)v162)
    {
      if (v167)
      {
        v168 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64);
        v169 = v201;
LABEL_97:
        memcpy(v169, v163, v168);
        goto LABEL_100;
      }
      (*(void (**)(void *, char *, uint64_t))(v165 + 32))(v201, v163, v164);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v201, 0, 1, v164);
    }
    else
    {
      if (v167)
      {
        (*(void (**)(void *, uint64_t))(v165 + 8))(v201, v164);
        v168 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64);
        v169 = v201;
        goto LABEL_97;
      }
      (*(void (**)(void *, char *, uint64_t))(v165 + 40))(v201, v163, v164);
    }
LABEL_100:
    v170 = v29[10];
    v171 = (char *)v18 + v170;
    v172 = (char *)v213 + v170;
    v173 = type metadata accessor for TVShow(0);
    v174 = *(_QWORD *)(v173 - 8);
    v175 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v174 + 48);
    v202 = v171;
    LODWORD(v171) = v175(v171, 1, v173);
    v176 = v175(v172, 1, v173);
    if ((_DWORD)v171)
    {
      if (v176)
      {
        v177 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D1410) - 8) + 64);
        v178 = v202;
LABEL_105:
        memcpy(v178, v172, v177);
        goto LABEL_108;
      }
      (*(void (**)(void *, char *, uint64_t))(v174 + 32))(v202, v172, v173);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v202, 0, 1, v173);
    }
    else
    {
      if (v176)
      {
        (*(void (**)(void *, uint64_t))(v174 + 8))(v202, v173);
        v177 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D1410) - 8) + 64);
        v178 = v202;
        goto LABEL_105;
      }
      (*(void (**)(void *, char *, uint64_t))(v174 + 40))(v202, v172, v173);
    }
LABEL_108:
    v179 = v29[11];
    v180 = (char *)v18 + v179;
    v181 = (char *)v213 + v179;
    v182 = type metadata accessor for TVSeason(0);
    v183 = *(_QWORD *)(v182 - 8);
    v184 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v183 + 48);
    v203 = v180;
    LODWORD(v180) = v184(v180, 1, v182);
    v185 = v184(v181, 1, v182);
    if ((_DWORD)v180)
    {
      if (!v185)
      {
        (*(void (**)(void *, char *, uint64_t))(v183 + 32))(v203, v181, v182);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v183 + 56))(v203, 0, 1, v182);
        goto LABEL_116;
      }
      v186 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7320) - 8) + 64);
      v187 = v203;
    }
    else
    {
      if (!v185)
      {
        (*(void (**)(void *, char *, uint64_t))(v183 + 40))(v203, v181, v182);
        goto LABEL_116;
      }
      (*(void (**)(void *, uint64_t))(v183 + 8))(v203, v182);
      v186 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7320) - 8) + 64);
      v187 = v203;
    }
    memcpy(v187, v181, v186);
LABEL_116:
    *((_BYTE *)v18 + v29[12]) = *((_BYTE *)v213 + v29[12]);
    *((_BYTE *)v18 + v29[13]) = *((_BYTE *)v213 + v29[13]);
    *((_BYTE *)v18 + v29[14]) = *((_BYTE *)v213 + v29[14]);
    v188 = v29[15];
    v189 = (_QWORD *)((char *)v18 + v188);
    v190 = (_QWORD *)((char *)v213 + v188);
    v192 = *v190;
    v191 = v190[1];
    v193 = v189[1];
    *v189 = v192;
    v189[1] = v191;
    swift_bridgeObjectRelease(v193);
    v194 = v29[16];
    v195 = *(_QWORD *)((char *)v18 + v194);
    *(_QWORD *)((char *)v18 + v194) = *(_QWORD *)((char *)v213 + v194);
    swift_bridgeObjectRelease(v195);
    *((_BYTE *)v18 + v29[17]) = *((_BYTE *)v213 + v29[17]);
    goto LABEL_39;
  }
  if (v25)
  {
LABEL_7:
    v28 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v21) - 8) + 64);
LABEL_8:
    memcpy(v18, v19, v28);
    goto LABEL_39;
  }
  v26 = (int *)type metadata accessor for Library.Context(0);
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v27 + 48))(v19, 1, v26))
  {
    memcpy(v18, v19, *(_QWORD *)(v22 + 64));
  }
  else
  {
    *v18 = *v19;
    v40 = v26[5];
    v196 = v27;
    __dst = (char *)v18 + v40;
    v212 = v19;
    v41 = (char *)v19 + v40;
    v42 = type metadata accessor for Album(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(__dst, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
    }
    v45 = v26[6];
    __dsta = (char *)v18 + v45;
    v46 = (char *)v212 + v45;
    v47 = type metadata accessor for Artist(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(__dsta, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(__dsta, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dsta, 0, 1, v47);
    }
    v50 = v26[7];
    __dstb = (char *)v18 + v50;
    v51 = (char *)v212 + v50;
    v52 = type metadata accessor for Composer(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(__dstb, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(__dstb, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(__dstb, 0, 1, v52);
    }
    v55 = v26[8];
    __dstc = (char *)v18 + v55;
    v56 = (char *)v212 + v55;
    v57 = type metadata accessor for Genre(0);
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      v59 = sub_100007E8C(&qword_10119ED08);
      memcpy(__dstc, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(__dstc, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dstc, 0, 1, v57);
    }
    v60 = v26[9];
    __dstd = (char *)v18 + v60;
    v61 = (char *)v212 + v60;
    v62 = type metadata accessor for Playlist(0);
    v63 = *(_QWORD *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
    {
      v64 = sub_100007E8C(&qword_1011A30F0);
      memcpy(__dstd, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(__dstd, v61, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dstd, 0, 1, v62);
    }
    v65 = v26[10];
    __dste = (char *)v18 + v65;
    v66 = (char *)v212 + v65;
    v67 = type metadata accessor for TVShow(0);
    v68 = *(_QWORD *)(v67 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      v69 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(__dste, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(__dste, v66, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(__dste, 0, 1, v67);
    }
    v70 = v26[11];
    __dstf = (char *)v18 + v70;
    v71 = (char *)v212 + v70;
    v72 = type metadata accessor for TVSeason(0);
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      v74 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(__dstf, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(__dstf, v71, v72);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dstf, 0, 1, v72);
    }
    *((_BYTE *)v18 + v26[12]) = *((_BYTE *)v212 + v26[12]);
    *((_BYTE *)v18 + v26[13]) = *((_BYTE *)v212 + v26[13]);
    *((_BYTE *)v18 + v26[14]) = *((_BYTE *)v212 + v26[14]);
    *(_OWORD *)((char *)v18 + v26[15]) = *(_OWORD *)((char *)v212 + v26[15]);
    *(_QWORD *)((char *)v18 + v26[16]) = *(_QWORD *)((char *)v212 + v26[16]);
    *((_BYTE *)v18 + v26[17]) = *((_BYTE *)v212 + v26[17]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v196 + 56))(v18, 0, 1, v26);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
LABEL_39:
  v75 = *(int *)(a3 + 48);
  v76 = *(int *)(a3 + 52);
  v77 = (char *)a1 + v75;
  v78 = (char *)a2 + v75;
  *(_QWORD *)v77 = *(_QWORD *)v78;
  v77[8] = v78[8];
  v79 = (char *)a1 + v76;
  v80 = (char *)a2 + v76;
  *(_QWORD *)((char *)a1 + v76) = *(_QWORD *)((char *)a2 + v76);
  swift_release();
  *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
  swift_release();
  v79[32] = v80[32];
  *((_OWORD *)v79 + 1) = *((_OWORD *)v80 + 1);
  v81 = *(int *)(a3 + 60);
  *((_BYTE *)a1 + *(int *)(a3 + 56)) = *((_BYTE *)a2 + *(int *)(a3 + 56));
  *((_BYTE *)a1 + v81) = *((_BYTE *)a2 + v81);
  v82 = *(int *)(a3 + 64);
  v83 = (char *)a1 + v82;
  v84 = (char *)a2 + v82;
  v85 = v84[16];
  v86 = *(_QWORD *)v83;
  v87 = *((_QWORD *)v83 + 1);
  *(_OWORD *)v83 = *(_OWORD *)v84;
  v83[16] = v85;
  sub_1000A6174(v86, v87);
  return a1;
}

uint64_t sub_1002D353C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D3548);
}

uint64_t sub_1002D3548(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ScrollViewProxy(0);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v8;
      v12 = *(int *)(a3 + 36);
    }
    else
    {
      v13 = type metadata accessor for ContainerDetailDataSource.Source(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v9);
      v11 = type metadata accessor for Optional(0, v13);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t sub_1002D35F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D3604);
}

char *sub_1002D3604(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for ScrollViewProxy(0);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v8;
      v12 = *(int *)(a4 + 36);
    }
    else
    {
      v13 = type metadata accessor for ContainerDetailDataSource.Source(255, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v9);
      v11 = type metadata accessor for Optional(0, v13);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 44);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v5[v12], a2, a2, v11);
  }
  return result;
}

uint64_t sub_1002D36B0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[7];

  v7[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v7[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ScrollViewProxy(319);
  if (v4 <= 0x3F)
  {
    v7[2] = *(_QWORD *)(result - 8) + 64;
    v7[3] = &unk_100EB2AA0;
    v5 = type metadata accessor for ContainerDetailDataSource.Source(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v3);
    result = type metadata accessor for Optional(319, v5);
    if (v6 <= 0x3F)
    {
      v7[4] = *(_QWORD *)(result - 8) + 64;
      v7[5] = "!";
      v7[6] = &unk_100EB32C8;
      swift_initStructMetadata(a1, 0, 7, v7, a1 + 32);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1002D3770(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(_QWORD *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  void (*v73)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  char *__dst;
  uint64_t v82;
  uint64_t v83;
  int *v84;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 40);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ScrollViewProxy(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 44);
    v14 = *(int *)(a3 + 48);
    v15 = (_QWORD *)((char *)v7 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v7 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v21 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v20);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    if (v23(v19, 1, v21))
    {
      v24 = type metadata accessor for Optional(0, v21);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Library.Context(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v25))
      {
        memcpy(v18, v19, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v82 = v26;
        v83 = v22;
        *v18 = *v19;
        v84 = (int *)v25;
        v27 = *(int *)(v25 + 20);
        __dst = (char *)v18 + v27;
        v28 = (char *)v19 + v27;
        v29 = type metadata accessor for Album(0);
        v80 = *(_QWORD *)(v29 - 8);
        v30 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v80 + 48);
        v31 = swift_retain();
        if (v30(v28, 1, v29, v31))
        {
          v32 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(__dst, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(__dst, 0, 1, v29);
        }
        v33 = v84[6];
        v34 = (char *)v18 + v33;
        v35 = (char *)v19 + v33;
        v36 = type metadata accessor for Artist(0);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          v38 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        v39 = v84[7];
        v40 = (char *)v18 + v39;
        v41 = (char *)v19 + v39;
        v42 = type metadata accessor for Composer(0);
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
        {
          v44 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        v45 = v84[8];
        v46 = (char *)v18 + v45;
        v47 = (char *)v19 + v45;
        v48 = type metadata accessor for Genre(0);
        v49 = *(_QWORD *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
        {
          v50 = sub_100007E8C(&qword_10119ED08);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        v51 = v84[9];
        v52 = (char *)v18 + v51;
        v53 = (char *)v19 + v51;
        v54 = type metadata accessor for Playlist(0);
        v55 = *(_QWORD *)(v54 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
        {
          v56 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        v57 = v84[10];
        v58 = (char *)v18 + v57;
        v59 = (char *)v19 + v57;
        v60 = type metadata accessor for TVShow(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
        {
          v62 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        v63 = v84[11];
        v64 = (char *)v18 + v63;
        v65 = (char *)v19 + v63;
        v66 = type metadata accessor for TVSeason(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        v22 = v83;
        *((_BYTE *)v18 + v84[12]) = *((_BYTE *)v19 + v84[12]);
        *((_BYTE *)v18 + v84[13]) = *((_BYTE *)v19 + v84[13]);
        *((_BYTE *)v18 + v84[14]) = *((_BYTE *)v19 + v84[14]);
        v69 = v84[15];
        v70 = (_QWORD *)((char *)v18 + v69);
        v71 = (_QWORD *)((char *)v19 + v69);
        v72 = v71[1];
        *v70 = *v71;
        v70[1] = v72;
        *(_QWORD *)((char *)v18 + v84[16]) = *(_QWORD *)((char *)v19 + v84[16]);
        *((_BYTE *)v18 + v84[17]) = *((_BYTE *)v19 + v84[17]);
        v73 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v82 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v73(v18, 0, 1, v84);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    }
    v74 = *(int *)(a3 + 52);
    v75 = *(int *)(a3 + 56);
    v76 = (char *)v7 + v74;
    v77 = (char *)a2 + v74;
    v78 = *((_QWORD *)v77 + 1);
    *(_QWORD *)v76 = *(_QWORD *)v77;
    *((_QWORD *)v76 + 1) = v78;
    *((_OWORD *)v76 + 1) = *((_OWORD *)v77 + 1);
    v76[32] = v77[32];
    *((_BYTE *)v7 + v75) = *((_BYTE *)a2 + v75);
    swift_retain();
  }
  swift_retain();
  return v7;
}

double sub_1002D3D8C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  double result;

  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  v4 = (char *)a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 44) + 8));
  v6 = (char *)a1 + *(int *)(a2 + 48);
  v8 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v7);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
  {
    v9 = (int *)type metadata accessor for Library.Context(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v6, 1, v9))
    {
      swift_release();
      v10 = &v6[v9[5]];
      v11 = type metadata accessor for Album(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      v13 = &v6[v9[6]];
      v14 = type metadata accessor for Artist(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
      v16 = &v6[v9[7]];
      v17 = type metadata accessor for Composer(0);
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
      v19 = &v6[v9[8]];
      v20 = type metadata accessor for Genre(0);
      v21 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
      v22 = &v6[v9[9]];
      v23 = type metadata accessor for Playlist(0);
      v24 = *(_QWORD *)(v23 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
      v25 = &v6[v9[10]];
      v26 = type metadata accessor for TVShow(0);
      v27 = *(_QWORD *)(v26 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
      v28 = &v6[v9[11]];
      v29 = type metadata accessor for TVSeason(0);
      v30 = *(_QWORD *)(v29 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
      swift_bridgeObjectRelease(*(_QWORD *)&v6[v9[15] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v6[v9[16]]);
    }
  }
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_1002D4058(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  void (*v73)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  char *__dst;
  uint64_t v82;
  uint64_t v83;
  int *v84;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 40);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ScrollViewProxy(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 44);
  v13 = *(int *)(a3 + 48);
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v20 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v19);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v18, 1, v20))
  {
    v23 = type metadata accessor for Optional(0, v20);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for Library.Context(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v24))
    {
      memcpy(v17, v18, *(_QWORD *)(v21 + 64));
    }
    else
    {
      v82 = v25;
      v83 = v21;
      *v17 = *v18;
      v84 = (int *)v24;
      v26 = *(int *)(v24 + 20);
      v80 = v20;
      __dst = (char *)v17 + v26;
      v27 = (char *)v18 + v26;
      v28 = type metadata accessor for Album(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48);
      v31 = swift_retain();
      if (v30(v27, 1, v28, v31))
      {
        v32 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
      }
      v33 = v84[6];
      v34 = (char *)v17 + v33;
      v35 = (char *)v18 + v33;
      v36 = type metadata accessor for Artist(0);
      v37 = *(_QWORD *)(v36 - 8);
      v20 = v80;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v84[7];
      v40 = (char *)v17 + v39;
      v41 = (char *)v18 + v39;
      v42 = type metadata accessor for Composer(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v84[8];
      v46 = (char *)v17 + v45;
      v47 = (char *)v18 + v45;
      v48 = type metadata accessor for Genre(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C(&qword_10119ED08);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v84[9];
      v52 = (char *)v17 + v51;
      v53 = (char *)v18 + v51;
      v54 = type metadata accessor for Playlist(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      v57 = v84[10];
      v58 = (char *)v17 + v57;
      v59 = (char *)v18 + v57;
      v60 = type metadata accessor for TVShow(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        v62 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      v63 = v84[11];
      v64 = (char *)v17 + v63;
      v65 = (char *)v18 + v63;
      v66 = type metadata accessor for TVSeason(0);
      v67 = *(_QWORD *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        v68 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
      *((_BYTE *)v17 + v84[12]) = *((_BYTE *)v18 + v84[12]);
      *((_BYTE *)v17 + v84[13]) = *((_BYTE *)v18 + v84[13]);
      *((_BYTE *)v17 + v84[14]) = *((_BYTE *)v18 + v84[14]);
      v69 = v84[15];
      v70 = (_QWORD *)((char *)v17 + v69);
      v71 = (_QWORD *)((char *)v18 + v69);
      v72 = v71[1];
      *v70 = *v71;
      v70[1] = v72;
      *(_QWORD *)((char *)v17 + v84[16]) = *(_QWORD *)((char *)v18 + v84[16]);
      *((_BYTE *)v17 + v84[17]) = *((_BYTE *)v18 + v84[17]);
      v73 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v82 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v73(v17, 0, 1, v84);
      v21 = v83;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
  }
  v74 = *(int *)(a3 + 52);
  v75 = *(int *)(a3 + 56);
  v76 = (char *)a1 + v74;
  v77 = (char *)a2 + v74;
  v78 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *((_QWORD *)v76 + 1) = v78;
  *((_OWORD *)v76 + 1) = *((_OWORD *)v77 + 1);
  v76[32] = v77[32];
  *((_BYTE *)a1 + v75) = *((_BYTE *)a2 + v75);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1002D4648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  int *v28;
  _QWORD *v29;
  uint64_t (*v30)(_QWORD *, uint64_t, int *);
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t, __n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  void (*v87)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v88;
  char *v89;
  char *v90;
  __int128 v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  int v99;
  int v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  void (*v140)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(char *, uint64_t, uint64_t);
  int v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(char *, uint64_t, uint64_t);
  int v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(char *, uint64_t, uint64_t);
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(char *, uint64_t, uint64_t);
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t (*v183)(char *, uint64_t, uint64_t);
  int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t (*v192)(char *, uint64_t, uint64_t);
  int v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int *v203;
  _QWORD *__dst;
  char *__dsta;
  _QWORD *v206;
  _QWORD *v207;
  _QWORD *v208;
  _QWORD *v209;
  _QWORD *v210;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 40);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(a3 + 44);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v13[1];
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = *(int *)(a3 + 48);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v19);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v17, 1, v20);
  v24 = v22(v18, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      (*(void (**)(_QWORD *, uint64_t))(v21 + 8))(v17, v20);
      goto LABEL_7;
    }
    v28 = (int *)type metadata accessor for Library.Context(0);
    v29 = (_QWORD *)*((_QWORD *)v28 - 1);
    v30 = (uint64_t (*)(_QWORD *, uint64_t, int *))v29[6];
    v31 = v30(v17, 1, v28);
    v32 = v30(v18, 1, v28);
    if (v31)
    {
      if (!v32)
      {
        *v17 = *v18;
        v33 = v28[5];
        v208 = v17;
        v34 = (char *)v17 + v33;
        __dst = v29;
        v35 = (char *)v18 + v33;
        v36 = type metadata accessor for Album(0);
        v37 = *(_QWORD *)(v36 - 8);
        v38 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v37 + 48);
        v39 = swift_retain();
        if (v38(v35, 1, v36, v39))
        {
          v40 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        v101 = v28[6];
        v102 = (char *)v208 + v101;
        v103 = (char *)v18 + v101;
        v104 = type metadata accessor for Artist(0);
        v105 = *(_QWORD *)(v104 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
        {
          v106 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
        }
        v107 = v28[7];
        v108 = (char *)v208 + v107;
        v109 = (char *)v18 + v107;
        v110 = type metadata accessor for Composer(0);
        v111 = *(_QWORD *)(v110 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
        {
          v112 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v108, v109, v110);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
        }
        v113 = v28[8];
        v114 = (char *)v208 + v113;
        v115 = (char *)v18 + v113;
        v116 = type metadata accessor for Genre(0);
        v117 = *(_QWORD *)(v116 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
        {
          v118 = sub_100007E8C(&qword_10119ED08);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v114, v115, v116);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
        }
        v119 = v28[9];
        v120 = (char *)v208 + v119;
        v121 = (char *)v18 + v119;
        v122 = type metadata accessor for Playlist(0);
        v123 = *(_QWORD *)(v122 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
        {
          v124 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v120, v121, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
        }
        v125 = v28[10];
        v126 = (char *)v208 + v125;
        v127 = (char *)v18 + v125;
        v128 = type metadata accessor for TVShow(0);
        v129 = *(_QWORD *)(v128 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
        {
          v130 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v126, v127, v128);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
        }
        v131 = v28[11];
        v132 = (char *)v208 + v131;
        v133 = (char *)v18 + v131;
        v134 = type metadata accessor for TVSeason(0);
        v135 = *(_QWORD *)(v134 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134))
        {
          v136 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v132, v133, v134);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
        }
        *((_BYTE *)v208 + v28[12]) = *((_BYTE *)v18 + v28[12]);
        *((_BYTE *)v208 + v28[13]) = *((_BYTE *)v18 + v28[13]);
        *((_BYTE *)v208 + v28[14]) = *((_BYTE *)v18 + v28[14]);
        v137 = v28[15];
        v138 = (_QWORD *)((char *)v208 + v137);
        v139 = (_QWORD *)((char *)v18 + v137);
        *v138 = *v139;
        v138[1] = v139[1];
        *(_QWORD *)((char *)v208 + v28[16]) = *(_QWORD *)((char *)v18 + v28[16]);
        *((_BYTE *)v208 + v28[17]) = *((_BYTE *)v18 + v28[17]);
        v140 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dst[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v140(v208, 0, 1, v28);
        goto LABEL_39;
      }
      goto LABEL_17;
    }
    if (v32)
    {
      sub_10005B748((uint64_t)v17, type metadata accessor for Library.Context);
LABEL_17:
      v27 = *(_QWORD *)(v21 + 64);
      goto LABEL_8;
    }
    *v17 = *v18;
    swift_retain();
    swift_release();
    v93 = v28[5];
    v207 = v18;
    v210 = v17;
    v94 = (char *)v17 + v93;
    v95 = (char *)v18 + v93;
    v96 = type metadata accessor for Album(0);
    v97 = *(_QWORD *)(v96 - 8);
    v98 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
    v99 = v98(v94, 1, v96);
    v100 = v98(v95, 1, v96);
    if (v99)
    {
      if (!v100)
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v95, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
        goto LABEL_66;
      }
    }
    else
    {
      if (!v100)
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v94, v95, v96);
LABEL_66:
        v142 = v28[6];
        v143 = (char *)v210 + v142;
        v144 = (char *)v207 + v142;
        v145 = type metadata accessor for Artist(0);
        v146 = *(_QWORD *)(v145 - 8);
        v147 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v146 + 48);
        v148 = v147(v143, 1, v145);
        v149 = v147(v144, 1, v145);
        if (v148)
        {
          if (!v149)
          {
            (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v143, v144, v145);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
            goto LABEL_72;
          }
        }
        else
        {
          if (!v149)
          {
            (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v143, v144, v145);
LABEL_72:
            v151 = v28[7];
            v152 = (char *)v210 + v151;
            v153 = (char *)v207 + v151;
            v154 = type metadata accessor for Composer(0);
            v155 = *(_QWORD *)(v154 - 8);
            v156 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
            v157 = v156(v152, 1, v154);
            v158 = v156(v153, 1, v154);
            if (v157)
            {
              if (!v158)
              {
                (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v152, v153, v154);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v152, 0, 1, v154);
                goto LABEL_78;
              }
            }
            else
            {
              if (!v158)
              {
                (*(void (**)(char *, char *, uint64_t))(v155 + 24))(v152, v153, v154);
LABEL_78:
                v160 = v28[8];
                v161 = (char *)v210 + v160;
                v162 = (char *)v207 + v160;
                v163 = type metadata accessor for Genre(0);
                v164 = *(_QWORD *)(v163 - 8);
                v165 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v164 + 48);
                v166 = v165(v161, 1, v163);
                v167 = v165(v162, 1, v163);
                if (v166)
                {
                  if (!v167)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v161, v162, v163);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
                    goto LABEL_84;
                  }
                }
                else
                {
                  if (!v167)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v164 + 24))(v161, v162, v163);
LABEL_84:
                    v169 = v28[9];
                    v170 = (char *)v210 + v169;
                    v171 = (char *)v207 + v169;
                    v172 = type metadata accessor for Playlist(0);
                    v173 = *(_QWORD *)(v172 - 8);
                    v174 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v173 + 48);
                    v175 = v174(v170, 1, v172);
                    v176 = v174(v171, 1, v172);
                    if (v175)
                    {
                      if (!v176)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v170, v171, v172);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
                        goto LABEL_90;
                      }
                    }
                    else
                    {
                      if (!v176)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v173 + 24))(v170, v171, v172);
LABEL_90:
                        v178 = v28[10];
                        v179 = (char *)v210 + v178;
                        v180 = (char *)v207 + v178;
                        v181 = type metadata accessor for TVShow(0);
                        v182 = *(_QWORD *)(v181 - 8);
                        v183 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v182 + 48);
                        v184 = v183(v179, 1, v181);
                        v185 = v183(v180, 1, v181);
                        if (v184)
                        {
                          if (!v185)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v179, v180, v181);
                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
                            goto LABEL_96;
                          }
                        }
                        else
                        {
                          if (!v185)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v182 + 24))(v179, v180, v181);
LABEL_96:
                            v187 = v28[11];
                            v188 = (char *)v210 + v187;
                            v189 = (char *)v207 + v187;
                            v190 = type metadata accessor for TVSeason(0);
                            v191 = *(_QWORD *)(v190 - 8);
                            v192 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v191 + 48);
                            v193 = v192(v188, 1, v190);
                            v194 = v192(v189, 1, v190);
                            if (v193)
                            {
                              if (!v194)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v188, v189, v190);
                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
LABEL_102:
                                *((_BYTE *)v210 + v28[12]) = *((_BYTE *)v207 + v28[12]);
                                *((_BYTE *)v210 + v28[13]) = *((_BYTE *)v207 + v28[13]);
                                *((_BYTE *)v210 + v28[14]) = *((_BYTE *)v207 + v28[14]);
                                v196 = v28[15];
                                v197 = (_QWORD *)((char *)v210 + v196);
                                v198 = (_QWORD *)((char *)v207 + v196);
                                *v197 = *v198;
                                v199 = v197[1];
                                v197[1] = v198[1];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease(v199);
                                v200 = v28[16];
                                v201 = *(_QWORD *)((char *)v210 + v200);
                                *(_QWORD *)((char *)v210 + v200) = *(_QWORD *)((char *)v207 + v200);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease(v201);
                                *((_BYTE *)v210 + v28[17]) = *((_BYTE *)v207 + v28[17]);
                                goto LABEL_39;
                              }
                            }
                            else
                            {
                              if (!v194)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v191 + 24))(v188, v189, v190);
                                goto LABEL_102;
                              }
                              (*(void (**)(char *, uint64_t))(v191 + 8))(v188, v190);
                            }
                            v195 = sub_100007E8C((uint64_t *)&unk_1011C7320);
                            memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
                            goto LABEL_102;
                          }
                          (*(void (**)(char *, uint64_t))(v182 + 8))(v179, v181);
                        }
                        v186 = sub_100007E8C((uint64_t *)&unk_1011D1410);
                        memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
                        goto LABEL_96;
                      }
                      (*(void (**)(char *, uint64_t))(v173 + 8))(v170, v172);
                    }
                    v177 = sub_100007E8C(&qword_1011A30F0);
                    memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
                    goto LABEL_90;
                  }
                  (*(void (**)(char *, uint64_t))(v164 + 8))(v161, v163);
                }
                v168 = sub_100007E8C(&qword_10119ED08);
                memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
                goto LABEL_84;
              }
              (*(void (**)(char *, uint64_t))(v155 + 8))(v152, v154);
            }
            v159 = sub_100007E8C((uint64_t *)&unk_1011C7310);
            memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
            goto LABEL_78;
          }
          (*(void (**)(char *, uint64_t))(v146 + 8))(v143, v145);
        }
        v150 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
        goto LABEL_72;
      }
      (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v96);
    }
    v141 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    goto LABEL_66;
  }
  if (v24)
  {
LABEL_7:
    v27 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v20) - 8) + 64);
LABEL_8:
    memcpy(v17, v18, v27);
    goto LABEL_39;
  }
  v25 = type metadata accessor for Library.Context(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v18, 1, v25))
  {
    memcpy(v17, v18, *(_QWORD *)(v21 + 64));
  }
  else
  {
    v202 = v26;
    v203 = (int *)v25;
    *v17 = *v18;
    v41 = *(int *)(v25 + 20);
    v206 = v18;
    v209 = v17;
    __dsta = (char *)v17 + v41;
    v42 = (char *)v18 + v41;
    v43 = type metadata accessor for Album(0);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v44 + 48);
    v46 = swift_retain();
    if (v45(v42, 1, v43, v46))
    {
      v47 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dsta, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(__dsta, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dsta, 0, 1, v43);
    }
    v48 = v203[6];
    v49 = (char *)v209 + v48;
    v50 = (char *)v206 + v48;
    v51 = type metadata accessor for Artist(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    v54 = v203[7];
    v55 = (char *)v209 + v54;
    v56 = (char *)v206 + v54;
    v57 = type metadata accessor for Composer(0);
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      v59 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    v60 = v203[8];
    v61 = (char *)v209 + v60;
    v62 = (char *)v206 + v60;
    v63 = type metadata accessor for Genre(0);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      v65 = sub_100007E8C(&qword_10119ED08);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
    v66 = v203[9];
    v67 = (char *)v209 + v66;
    v68 = (char *)v206 + v66;
    v69 = type metadata accessor for Playlist(0);
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      v71 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
    v72 = v203[10];
    v73 = (char *)v209 + v72;
    v74 = (char *)v206 + v72;
    v75 = type metadata accessor for TVShow(0);
    v76 = *(_QWORD *)(v75 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
    {
      v77 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    v78 = v203[11];
    v79 = (char *)v209 + v78;
    v80 = (char *)v206 + v78;
    v81 = type metadata accessor for TVSeason(0);
    v82 = *(_QWORD *)(v81 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
    {
      v83 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
    }
    v17 = v209;
    *((_BYTE *)v209 + v203[12]) = *((_BYTE *)v206 + v203[12]);
    *((_BYTE *)v209 + v203[13]) = *((_BYTE *)v206 + v203[13]);
    *((_BYTE *)v209 + v203[14]) = *((_BYTE *)v206 + v203[14]);
    v84 = v203[15];
    v85 = (_QWORD *)((char *)v209 + v84);
    v86 = (_QWORD *)((char *)v206 + v84);
    *v85 = *v86;
    v85[1] = v86[1];
    *(_QWORD *)((char *)v209 + v203[16]) = *(_QWORD *)((char *)v206 + v203[16]);
    *((_BYTE *)v209 + v203[17]) = *((_BYTE *)v206 + v203[17]);
    v87 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v202 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87(v209, 0, 1, v203);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
LABEL_39:
  v88 = *(int *)(a3 + 52);
  v89 = (char *)a1 + v88;
  v90 = (char *)a2 + v88;
  *(_QWORD *)((char *)a1 + v88) = *(_QWORD *)((char *)a2 + v88);
  swift_retain();
  swift_release();
  *((_QWORD *)v89 + 1) = *((_QWORD *)v90 + 1);
  swift_retain();
  swift_release();
  v91 = *((_OWORD *)v90 + 1);
  v89[32] = v90[32];
  *((_OWORD *)v89 + 1) = v91;
  *((_BYTE *)a1 + *(int *)(a3 + 56)) = *((_BYTE *)a2 + *(int *)(a3 + 56));
  return a1;
}

_OWORD *sub_1002D5790(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v60;
  uint64_t v61;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;

  *a1 = *a2;
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 48);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 44));
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v13);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
  {
    v16 = type metadata accessor for Optional(0, v14);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = (int *)type metadata accessor for Library.Context(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v18 + 48))(v12, 1, v17))
    {
      memcpy(v11, v12, *(_QWORD *)(v15 + 64));
    }
    else
    {
      v60 = v18;
      v61 = v15;
      *v11 = *v12;
      v19 = v17[5];
      __dst = (char *)v11 + v19;
      v20 = (char *)v12 + v19;
      v21 = type metadata accessor for Album(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      v24 = v17[6];
      __dsta = (char *)v11 + v24;
      v25 = (char *)v12 + v24;
      v26 = type metadata accessor for Artist(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(__dsta, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dsta, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dsta, 0, 1, v26);
      }
      v29 = v17[7];
      __dstb = (char *)v11 + v29;
      v30 = (char *)v12 + v29;
      v31 = type metadata accessor for Composer(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(__dstb, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dstb, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dstb, 0, 1, v31);
      }
      v34 = v17[8];
      __dstc = (char *)v11 + v34;
      v35 = (char *)v12 + v34;
      v36 = type metadata accessor for Genre(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_10119ED08);
        memcpy(__dstc, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(__dstc, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dstc, 0, 1, v36);
      }
      v39 = v17[9];
      __dstd = (char *)v11 + v39;
      v40 = (char *)v12 + v39;
      v41 = type metadata accessor for Playlist(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_1011A30F0);
        memcpy(__dstd, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(__dstd, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dstd, 0, 1, v41);
      }
      v44 = v17[10];
      __dste = (char *)v11 + v44;
      v45 = (char *)v12 + v44;
      v46 = type metadata accessor for TVShow(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(__dste, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(__dste, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dste, 0, 1, v46);
      }
      v49 = v17[11];
      __dstf = (char *)v11 + v49;
      v50 = (char *)v12 + v49;
      v51 = type metadata accessor for TVSeason(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(__dstf, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(__dstf, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dstf, 0, 1, v51);
      }
      *((_BYTE *)v11 + v17[12]) = *((_BYTE *)v12 + v17[12]);
      *((_BYTE *)v11 + v17[13]) = *((_BYTE *)v12 + v17[13]);
      *((_BYTE *)v11 + v17[14]) = *((_BYTE *)v12 + v17[14]);
      *(_OWORD *)((char *)v11 + v17[15]) = *(_OWORD *)((char *)v12 + v17[15]);
      *(_QWORD *)((char *)v11 + v17[16]) = *(_QWORD *)((char *)v12 + v17[16]);
      *((_BYTE *)v11 + v17[17]) = *((_BYTE *)v12 + v17[17]);
      v15 = v61;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v60 + 56))(v11, 0, 1, v17);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  v54 = *(int *)(a3 + 52);
  v55 = *(int *)(a3 + 56);
  v56 = (char *)a1 + v54;
  v57 = (char *)a2 + v54;
  v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  v56[32] = v57[32];
  *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
  return a1;
}

_QWORD *sub_1002D5D18(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD *, uint64_t, uint64_t);
  int v25;
  int v26;
  int *v27;
  uint64_t v28;
  size_t v29;
  int *v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD *, uint64_t, int *);
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  int v86;
  size_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(char *, uint64_t, uint64_t);
  int v131;
  size_t v132;
  void *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(char *, uint64_t, uint64_t);
  int v140;
  size_t v141;
  void *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(char *, uint64_t, uint64_t);
  int v149;
  size_t v150;
  void *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t (*v157)(char *, uint64_t, uint64_t);
  int v158;
  size_t v159;
  void *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(char *, uint64_t, uint64_t);
  int v167;
  size_t v168;
  void *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(char *, uint64_t, uint64_t);
  int v176;
  size_t v177;
  void *v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  _QWORD *v202;
  _QWORD *v203;
  _QWORD *v204;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 40);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 44);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease(v17);
  v18 = *(int *)(a3 + 48);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = type metadata accessor for ContainerDetailDataSource.Source(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v21);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v19, 1, v22);
  v26 = v24(v20, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v19, v22);
      goto LABEL_7;
    }
    v30 = (int *)type metadata accessor for Library.Context(0);
    v31 = *((_QWORD *)v30 - 1);
    v32 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v31 + 48);
    v33 = v32(v19, 1, v30);
    v34 = v32(v20, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        *v19 = *v20;
        v35 = v30[5];
        v36 = (char *)v19 + v35;
        v202 = v20;
        v37 = (char *)v20 + v35;
        v38 = type metadata accessor for Album(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
        {
          v40 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
        }
        v89 = v30[6];
        v90 = (char *)v19 + v89;
        v91 = (char *)v202 + v89;
        v92 = type metadata accessor for Artist(0);
        v93 = *(_QWORD *)(v92 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
        {
          v94 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v90, v91, v92);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
        }
        v95 = v30[7];
        v96 = (char *)v19 + v95;
        v97 = (char *)v202 + v95;
        v98 = type metadata accessor for Composer(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
        {
          v100 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v96, v97, v98);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        }
        v101 = v30[8];
        v102 = (char *)v19 + v101;
        v103 = (char *)v202 + v101;
        v104 = type metadata accessor for Genre(0);
        v105 = *(_QWORD *)(v104 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
        {
          v106 = sub_100007E8C(&qword_10119ED08);
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v102, v103, v104);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
        }
        v107 = v30[9];
        v108 = (char *)v19 + v107;
        v109 = (char *)v202 + v107;
        v110 = type metadata accessor for Playlist(0);
        v111 = *(_QWORD *)(v110 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
        {
          v112 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v108, v109, v110);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
        }
        v113 = v30[10];
        v114 = (char *)v19 + v113;
        v115 = (char *)v202 + v113;
        v116 = type metadata accessor for TVShow(0);
        v117 = *(_QWORD *)(v116 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
        {
          v118 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
        }
        v119 = v30[11];
        v120 = (char *)v19 + v119;
        v121 = (char *)v202 + v119;
        v122 = type metadata accessor for TVSeason(0);
        v123 = *(_QWORD *)(v122 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
        {
          v124 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v120, v121, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
        }
        *((_BYTE *)v19 + v30[12]) = *((_BYTE *)v202 + v30[12]);
        *((_BYTE *)v19 + v30[13]) = *((_BYTE *)v202 + v30[13]);
        *((_BYTE *)v19 + v30[14]) = *((_BYTE *)v202 + v30[14]);
        *(_OWORD *)((char *)v19 + v30[15]) = *(_OWORD *)((char *)v202 + v30[15]);
        *(_QWORD *)((char *)v19 + v30[16]) = *(_QWORD *)((char *)v202 + v30[16]);
        *((_BYTE *)v19 + v30[17]) = *((_BYTE *)v202 + v30[17]);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v31 + 56))(v19, 0, 1, v30);
        goto LABEL_39;
      }
      goto LABEL_17;
    }
    if (v34)
    {
      sub_10005B748((uint64_t)v19, type metadata accessor for Library.Context);
LABEL_17:
      v29 = *(_QWORD *)(v23 + 64);
      goto LABEL_8;
    }
    *v19 = *v20;
    swift_release();
    v80 = v30[5];
    v81 = (char *)v19 + v80;
    v204 = v20;
    v82 = (char *)v20 + v80;
    v83 = type metadata accessor for Album(0);
    v84 = *(_QWORD *)(v83 - 8);
    v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
    v188 = v81;
    LODWORD(v81) = v85(v81, 1, v83);
    v86 = v85(v82, 1, v83);
    if ((_DWORD)v81)
    {
      if (v86)
      {
        v87 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64);
        v88 = v188;
LABEL_65:
        memcpy(v88, v82, v87);
        goto LABEL_68;
      }
      (*(void (**)(void *, char *, uint64_t))(v84 + 32))(v188, v82, v83);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v188, 0, 1, v83);
    }
    else
    {
      if (v86)
      {
        (*(void (**)(void *, uint64_t))(v84 + 8))(v188, v83);
        v87 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A8FA0) - 8) + 64);
        v88 = v188;
        goto LABEL_65;
      }
      (*(void (**)(void *, char *, uint64_t))(v84 + 40))(v188, v82, v83);
    }
LABEL_68:
    v125 = v30[6];
    v126 = (char *)v19 + v125;
    v127 = (char *)v204 + v125;
    v128 = type metadata accessor for Artist(0);
    v129 = *(_QWORD *)(v128 - 8);
    v130 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 48);
    v189 = v126;
    LODWORD(v126) = v130(v126, 1, v128);
    v131 = v130(v127, 1, v128);
    if ((_DWORD)v126)
    {
      if (v131)
      {
        v132 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8) + 64);
        v133 = v189;
LABEL_73:
        memcpy(v133, v127, v132);
        goto LABEL_76;
      }
      (*(void (**)(void *, char *, uint64_t))(v129 + 32))(v189, v127, v128);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v189, 0, 1, v128);
    }
    else
    {
      if (v131)
      {
        (*(void (**)(void *, uint64_t))(v129 + 8))(v189, v128);
        v132 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3FB0) - 8) + 64);
        v133 = v189;
        goto LABEL_73;
      }
      (*(void (**)(void *, char *, uint64_t))(v129 + 40))(v189, v127, v128);
    }
LABEL_76:
    v134 = v30[7];
    v135 = (char *)v19 + v134;
    v136 = (char *)v204 + v134;
    v137 = type metadata accessor for Composer(0);
    v138 = *(_QWORD *)(v137 - 8);
    v139 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 48);
    v190 = v135;
    LODWORD(v135) = v139(v135, 1, v137);
    v140 = v139(v136, 1, v137);
    if ((_DWORD)v135)
    {
      if (v140)
      {
        v141 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7310) - 8) + 64);
        v142 = v190;
LABEL_81:
        memcpy(v142, v136, v141);
        goto LABEL_84;
      }
      (*(void (**)(void *, char *, uint64_t))(v138 + 32))(v190, v136, v137);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v190, 0, 1, v137);
    }
    else
    {
      if (v140)
      {
        (*(void (**)(void *, uint64_t))(v138 + 8))(v190, v137);
        v141 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7310) - 8) + 64);
        v142 = v190;
        goto LABEL_81;
      }
      (*(void (**)(void *, char *, uint64_t))(v138 + 40))(v190, v136, v137);
    }
LABEL_84:
    v143 = v30[8];
    v144 = (char *)v19 + v143;
    v145 = (char *)v204 + v143;
    v146 = type metadata accessor for Genre(0);
    v147 = *(_QWORD *)(v146 - 8);
    v148 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v147 + 48);
    v191 = v144;
    LODWORD(v144) = v148(v144, 1, v146);
    v149 = v148(v145, 1, v146);
    if ((_DWORD)v144)
    {
      if (v149)
      {
        v150 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119ED08) - 8) + 64);
        v151 = v191;
LABEL_89:
        memcpy(v151, v145, v150);
        goto LABEL_92;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 32))(v191, v145, v146);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v191, 0, 1, v146);
    }
    else
    {
      if (v149)
      {
        (*(void (**)(void *, uint64_t))(v147 + 8))(v191, v146);
        v150 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119ED08) - 8) + 64);
        v151 = v191;
        goto LABEL_89;
      }
      (*(void (**)(void *, char *, uint64_t))(v147 + 40))(v191, v145, v146);
    }
LABEL_92:
    v152 = v30[9];
    v153 = (char *)v19 + v152;
    v154 = (char *)v204 + v152;
    v155 = type metadata accessor for Playlist(0);
    v156 = *(_QWORD *)(v155 - 8);
    v157 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v156 + 48);
    v192 = v153;
    LODWORD(v153) = v157(v153, 1, v155);
    v158 = v157(v154, 1, v155);
    if ((_DWORD)v153)
    {
      if (v158)
      {
        v159 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64);
        v160 = v192;
LABEL_97:
        memcpy(v160, v154, v159);
        goto LABEL_100;
      }
      (*(void (**)(void *, char *, uint64_t))(v156 + 32))(v192, v154, v155);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v192, 0, 1, v155);
    }
    else
    {
      if (v158)
      {
        (*(void (**)(void *, uint64_t))(v156 + 8))(v192, v155);
        v159 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64);
        v160 = v192;
        goto LABEL_97;
      }
      (*(void (**)(void *, char *, uint64_t))(v156 + 40))(v192, v154, v155);
    }
LABEL_100:
    v161 = v30[10];
    v162 = (char *)v19 + v161;
    v163 = (char *)v204 + v161;
    v164 = type metadata accessor for TVShow(0);
    v165 = *(_QWORD *)(v164 - 8);
    v166 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v165 + 48);
    v193 = v162;
    LODWORD(v162) = v166(v162, 1, v164);
    v167 = v166(v163, 1, v164);
    if ((_DWORD)v162)
    {
      if (v167)
      {
        v168 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D1410) - 8) + 64);
        v169 = v193;
LABEL_105:
        memcpy(v169, v163, v168);
        goto LABEL_108;
      }
      (*(void (**)(void *, char *, uint64_t))(v165 + 32))(v193, v163, v164);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v193, 0, 1, v164);
    }
    else
    {
      if (v167)
      {
        (*(void (**)(void *, uint64_t))(v165 + 8))(v193, v164);
        v168 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011D1410) - 8) + 64);
        v169 = v193;
        goto LABEL_105;
      }
      (*(void (**)(void *, char *, uint64_t))(v165 + 40))(v193, v163, v164);
    }
LABEL_108:
    v170 = v30[11];
    v171 = (char *)v19 + v170;
    v172 = (char *)v204 + v170;
    v173 = type metadata accessor for TVSeason(0);
    v174 = *(_QWORD *)(v173 - 8);
    v175 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v174 + 48);
    v194 = v171;
    LODWORD(v171) = v175(v171, 1, v173);
    v176 = v175(v172, 1, v173);
    if ((_DWORD)v171)
    {
      if (!v176)
      {
        (*(void (**)(void *, char *, uint64_t))(v174 + 32))(v194, v172, v173);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v194, 0, 1, v173);
        goto LABEL_116;
      }
      v177 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7320) - 8) + 64);
      v178 = v194;
    }
    else
    {
      if (!v176)
      {
        (*(void (**)(void *, char *, uint64_t))(v174 + 40))(v194, v172, v173);
        goto LABEL_116;
      }
      (*(void (**)(void *, uint64_t))(v174 + 8))(v194, v173);
      v177 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C7320) - 8) + 64);
      v178 = v194;
    }
    memcpy(v178, v172, v177);
LABEL_116:
    *((_BYTE *)v19 + v30[12]) = *((_BYTE *)v204 + v30[12]);
    *((_BYTE *)v19 + v30[13]) = *((_BYTE *)v204 + v30[13]);
    *((_BYTE *)v19 + v30[14]) = *((_BYTE *)v204 + v30[14]);
    v179 = v30[15];
    v180 = (_QWORD *)((char *)v19 + v179);
    v181 = (_QWORD *)((char *)v204 + v179);
    v183 = *v181;
    v182 = v181[1];
    v184 = v180[1];
    *v180 = v183;
    v180[1] = v182;
    swift_bridgeObjectRelease(v184);
    v185 = v30[16];
    v186 = *(_QWORD *)((char *)v19 + v185);
    *(_QWORD *)((char *)v19 + v185) = *(_QWORD *)((char *)v204 + v185);
    swift_bridgeObjectRelease(v186);
    *((_BYTE *)v19 + v30[17]) = *((_BYTE *)v204 + v30[17]);
    goto LABEL_39;
  }
  if (v26)
  {
LABEL_7:
    v29 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v22) - 8) + 64);
LABEL_8:
    memcpy(v19, v20, v29);
    goto LABEL_39;
  }
  v27 = (int *)type metadata accessor for Library.Context(0);
  v28 = *((_QWORD *)v27 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48))(v20, 1, v27))
  {
    memcpy(v19, v20, *(_QWORD *)(v23 + 64));
  }
  else
  {
    *v19 = *v20;
    v41 = v27[5];
    v187 = v28;
    __dst = (char *)v19 + v41;
    v203 = v20;
    v42 = (char *)v20 + v41;
    v43 = type metadata accessor for Album(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(__dst, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v43);
    }
    v46 = v27[6];
    __dsta = (char *)v19 + v46;
    v47 = (char *)v203 + v46;
    v48 = type metadata accessor for Artist(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(__dsta, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dsta, 0, 1, v48);
    }
    v51 = v27[7];
    __dstb = (char *)v19 + v51;
    v52 = (char *)v203 + v51;
    v53 = type metadata accessor for Composer(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(__dstb, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(__dstb, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dstb, 0, 1, v53);
    }
    v56 = v27[8];
    __dstc = (char *)v19 + v56;
    v57 = (char *)v203 + v56;
    v58 = type metadata accessor for Genre(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C(&qword_10119ED08);
      memcpy(__dstc, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(__dstc, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dstc, 0, 1, v58);
    }
    v61 = v27[9];
    __dstd = (char *)v19 + v61;
    v62 = (char *)v203 + v61;
    v63 = type metadata accessor for Playlist(0);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      v65 = sub_100007E8C(&qword_1011A30F0);
      memcpy(__dstd, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(__dstd, v62, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dstd, 0, 1, v63);
    }
    v66 = v27[10];
    __dste = (char *)v19 + v66;
    v67 = (char *)v203 + v66;
    v68 = type metadata accessor for TVShow(0);
    v69 = *(_QWORD *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      v70 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(__dste, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(__dste, v67, v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(__dste, 0, 1, v68);
    }
    v71 = v27[11];
    __dstf = (char *)v19 + v71;
    v72 = (char *)v203 + v71;
    v73 = type metadata accessor for TVSeason(0);
    v74 = *(_QWORD *)(v73 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
    {
      v75 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(__dstf, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(__dstf, v72, v73);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(__dstf, 0, 1, v73);
    }
    *((_BYTE *)v19 + v27[12]) = *((_BYTE *)v203 + v27[12]);
    *((_BYTE *)v19 + v27[13]) = *((_BYTE *)v203 + v27[13]);
    *((_BYTE *)v19 + v27[14]) = *((_BYTE *)v203 + v27[14]);
    *(_OWORD *)((char *)v19 + v27[15]) = *(_OWORD *)((char *)v203 + v27[15]);
    *(_QWORD *)((char *)v19 + v27[16]) = *(_QWORD *)((char *)v203 + v27[16]);
    *((_BYTE *)v19 + v27[17]) = *((_BYTE *)v203 + v27[17]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v187 + 56))(v19, 0, 1, v27);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
LABEL_39:
  v76 = *(int *)(a3 + 52);
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  *(_QWORD *)((char *)a1 + v76) = *(_QWORD *)((char *)a2 + v76);
  swift_release();
  *((_QWORD *)v77 + 1) = *((_QWORD *)v78 + 1);
  swift_release();
  *((_OWORD *)v77 + 1) = *((_OWORD *)v78 + 1);
  v77[32] = v78[32];
  *((_BYTE *)a1 + *(int *)(a3 + 56)) = *((_BYTE *)a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_1002D6EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D6EBC);
}

uint64_t sub_1002D6EBC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ScrollViewProxy(0);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v8;
      v12 = *(int *)(a3 + 40);
    }
    else
    {
      v13 = type metadata accessor for ContainerDetailDataSource.Source(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v9);
      v11 = type metadata accessor for Optional(0, v13);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t sub_1002D6F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D6F78);
}

char *sub_1002D6F78(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for ScrollViewProxy(0);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v8;
      v12 = *(int *)(a4 + 40);
    }
    else
    {
      v13 = type metadata accessor for ContainerDetailDataSource.Source(255, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v9);
      v11 = type metadata accessor for Optional(0, v13);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 48);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v5[v12], a2, a2, v11);
  }
  return result;
}

unint64_t sub_1002D7028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AAAD0;
  if (!qword_1011AAAD0)
  {
    v1 = sub_100044B54(&qword_1011AAAD8);
    sub_10015FD08(&qword_1011AAAE0, &qword_1011AA8E8, (void (*)(void))sub_1002CF388, (void (*)(void))sub_1002CF490);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011AAAD0);
  }
  return result;
}

uint64_t sub_1002D70AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for ContainerDetailView.ArtworkModifier(255, *a1, a1[1], a4);
  WitnessTable = swift_getWitnessTable(&unk_100EB3158, v4);
  v6 = type metadata accessor for _ViewModifier_Content(255, v4, WitnessTable);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _OffsetEffect);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
}

uint64_t sub_1002D7148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = type metadata accessor for _PreferenceWritingModifier(255, v1, v2);
  v4 = type metadata accessor for ModifiedContent(255, &type metadata for Color, v3);
  swift_getWitnessTable(&protocol conformance descriptor for _PreferenceWritingModifier<A>, v3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v6 = type metadata accessor for GeometryReader(255, v4, WitnessTable);
  v7 = sub_1002CF57C();
  v8 = type metadata accessor for _PreferenceActionModifier(255, v1, v2, v7);
  v9 = type metadata accessor for ModifiedContent(255, v6, v8);
  swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v6);
  swift_getWitnessTable(&protocol conformance descriptor for _PreferenceActionModifier<A>, v8);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
}

uint64_t sub_1002D7254(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata3;
  uint64_t v30;
  uint64_t v31;
  uint64_t TupleTypeMetadata2;
  uint64_t v33;
  uint64_t WitnessTable;
  _QWORD v36[5];

  v1 = *a1;
  v2 = a1[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2, *a1, &unk_100F98880, &unk_100F98900);
  v4 = *(_QWORD *)(v2 + 64);
  v36[0] = v1;
  v36[1] = AssociatedTypeWitness;
  v36[2] = v4;
  v36[3] = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v36[4] = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v5 = type metadata accessor for ContainerDetailHeaderView(255, (uint64_t)v36);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FrameLayout);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _PaddingLayout);
  v8 = type metadata accessor for ModifiedContent(255, v7, &type metadata for _PaddingLayout);
  v10 = type metadata accessor for ContainerDetailView.ScrollItemGeometryReaderBackground(255, v1, v2, v9);
  v11 = type metadata accessor for Optional(255, v10);
  WitnessTable = swift_getWitnessTable(&unk_100EB33B8, v10);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v11);
  v13 = type metadata accessor for _BackgroundModifier(255, v11, v12);
  v14 = type metadata accessor for ModifiedContent(255, v8, v13);
  v16 = type metadata accessor for ContainerDetailView.Tracks(255, v1, v2, v15);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _FrameLayout);
  v18 = type metadata accessor for ModifiedContent(255, v17, &type metadata for _PaddingLayout);
  v19 = sub_100044B54(&qword_1011AA920);
  v20 = type metadata accessor for ModifiedContent(255, v19, v13);
  v22 = type metadata accessor for ContainerDetailView.ShowCompleteAlbumButton(255, v1, v2, v21);
  v23 = type metadata accessor for ModifiedContent(255, v22, &type metadata for _FrameLayout);
  v24 = type metadata accessor for ModifiedContent(255, v23, &type metadata for _PaddingLayout);
  v25 = type metadata accessor for ModifiedContent(255, v24, &type metadata for _PaddingLayout);
  v26 = type metadata accessor for _BackgroundModifier(255, v10, WitnessTable);
  v27 = type metadata accessor for ModifiedContent(255, v25, v26);
  v28 = type metadata accessor for Optional(255, v27);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v18, v20, v28, 0, 0);
  v30 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v31 = type metadata accessor for Optional(255, v30);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v14, v31, 0, 0);
  v33 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v33);
}

uint64_t sub_1002D7500(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for ContainerDetailView.ClassicalTrackList(255, *a1, v5, a4);
  v8 = type metadata accessor for ContainerDetailView.TrackList(255, v4, v5, v7);
  v9 = type metadata accessor for _ConditionalContent(255, v6, v8);
  swift_getWitnessTable(&unk_100EB3368, v6);
  swift_getWitnessTable(&unk_100EB3318, v8);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v9);
}

uint64_t sub_1002D75A4()
{
  return sub_1002CF61C(&qword_1011AAAE8, &qword_1011AA940, (void (*)(void))sub_1002D75D0);
}

unint64_t sub_1002D75D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AAAF0;
  if (!qword_1011AAAF0)
  {
    v1 = sub_100044B54(&qword_1011A2F28);
    sub_1000E4570(&qword_1011AAAF8, &qword_1011A2F20, (void (*)(void))sub_1002D765C, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AAAF0);
  }
  return result;
}

unint64_t sub_1002D765C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AAB00;
  if (!qword_1011AAB00)
  {
    v1 = sub_100044B54(qword_1011AA948);
    sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AAB00);
  }
  return result;
}

uint64_t sub_1002D76F8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F9B1F0, 1);
}

uint64_t sub_1002D772C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F9B1BC, 1);
}

uint64_t sub_1002D7760(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F9B188, 1);
}

uint64_t sub_1002D7794()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 65, 7);
}

uint64_t sub_1002D77C0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;

  return sub_1002B76EC((__int128 *)(v4 + 32), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a1, a2, a3, a4);
}

unint64_t sub_1002D77CC()
{
  unint64_t result;

  result = qword_1011AAB08;
  if (!qword_1011AAB08)
  {
    result = swift_getWitnessTable(&unk_100EB3424, &type metadata for FramePreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1011AAB08);
  }
  return result;
}

uint64_t sub_1002D7810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = (int *)type metadata accessor for ContainerDetailView.ClassicalTrackList(0, v5, v6, a4);
  v8 = *((_QWORD *)v7 - 1);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v9));
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v9 + 8));
  v11 = v4 + v9 + v7[10];
  v12 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v9 + v7[11] + 8));
  v13 = v4 + v9 + v7[12];
  v15 = type metadata accessor for ContainerDetailDataSource.Source(0, v5, v6, v14);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15))
  {
    v16 = (int *)type metadata accessor for Library.Context(0);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v13, 1, v16))
    {
      v39 = v10;
      swift_release();
      v17 = v13 + v16[5];
      v18 = type metadata accessor for Album(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v17, v18);
      v20 = v13 + v16[6];
      v21 = type metadata accessor for Artist(0);
      v22 = *(_QWORD *)(v21 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v20, v21);
      v23 = v13 + v16[7];
      v24 = type metadata accessor for Composer(0);
      v25 = *(_QWORD *)(v24 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v23, v24);
      v26 = v13 + v16[8];
      v27 = type metadata accessor for Genre(0);
      v28 = *(_QWORD *)(v27 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v26, v27);
      v29 = v13 + v16[9];
      v30 = type metadata accessor for Playlist(0);
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v29, v30);
      v32 = v13 + v16[10];
      v33 = type metadata accessor for TVShow(0);
      v34 = *(_QWORD *)(v33 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        (*(void (**)(unint64_t, uint64_t))(v34 + 8))(v32, v33);
      v35 = v13 + v16[11];
      v36 = type metadata accessor for TVSeason(0);
      v37 = *(_QWORD *)(v36 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v35, v36);
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v16[15] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v16[16]));
      v10 = v39;
    }
  }
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v9 + v10);
}

uint64_t sub_1002D7B38(uint64_t a1, uint64_t a2)
{
  return sub_1002D7B64(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ContainerDetailView.ClassicalTrackList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002B8E18);
}

uint64_t sub_1002D7B50(uint64_t a1, uint64_t a2)
{
  return sub_1002D7B64(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ContainerDetailView.TrackList, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002BA568);
}

uint64_t sub_1002D7B64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(a3(0, v7, v8) - 8) + 80);
  return a4(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_1002D7BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = (int *)type metadata accessor for ContainerDetailView.TrackList(0, v5, v6, a4);
  v8 = *((_QWORD *)v7 - 1);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v9));
  v11 = v4 + v9 + v7[9];
  v12 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v9 + v7[10] + 8));
  v13 = v4 + v9 + v7[11];
  v15 = type metadata accessor for ContainerDetailDataSource.Source(0, v5, v6, v14);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15))
  {
    v16 = (int *)type metadata accessor for Library.Context(0);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v13, 1, v16))
    {
      v39 = v10;
      swift_release();
      v17 = v13 + v16[5];
      v18 = type metadata accessor for Album(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v17, v18);
      v20 = v13 + v16[6];
      v21 = type metadata accessor for Artist(0);
      v22 = *(_QWORD *)(v21 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v20, v21);
      v23 = v13 + v16[7];
      v24 = type metadata accessor for Composer(0);
      v25 = *(_QWORD *)(v24 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v23, v24);
      v26 = v13 + v16[8];
      v27 = type metadata accessor for Genre(0);
      v28 = *(_QWORD *)(v27 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v26, v27);
      v29 = v13 + v16[9];
      v30 = type metadata accessor for Playlist(0);
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v29, v30);
      v32 = v13 + v16[10];
      v33 = type metadata accessor for TVShow(0);
      v34 = *(_QWORD *)(v33 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        (*(void (**)(unint64_t, uint64_t))(v34 + 8))(v32, v33);
      v35 = v13 + v16[11];
      v36 = type metadata accessor for TVSeason(0);
      v37 = *(_QWORD *)(v36 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v35, v36);
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v16[15] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v16[16]));
      v10 = v39;
    }
  }
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v4 + v9 + v7[16]), *(_QWORD *)(v4 + v9 + v7[16] + 8));
  return swift_deallocObject(v4, v9 + v10);
}

double sub_1002D7F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContainerDetailView.TrackList(0, v5, v6, a4) - 8)
                          + 80);
  return sub_1002BB1B8(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_1002D7F70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

__n128 sub_1002D7F94@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;
  _OWORD v5[5];

  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  v3 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 64) = v5[4];
  result = (__n128)v5[1];
  *(_OWORD *)a1 = v5[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1002D7FDC()
{
  uint64_t *v0;

  return sub_1002BB218(v0[4], v0[2], v0[3]);
}

unint64_t sub_1002D7FF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AAB10;
  if (!qword_1011AAB10)
  {
    v1 = sub_100044B54(&qword_10119DCA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011AAB10);
  }
  return result;
}

uint64_t sub_1002D8054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002BAE5C(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for FramePreferenceKey()
{
  return &type metadata for FramePreferenceKey;
}

uint64_t sub_1002D8070(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = &type metadata for FramePreferenceKey;
  v4[2] = v1;
  v4[3] = sub_1002D77CC();
  v2 = type metadata accessor for ContainerDetailView.GeometryReaderBackground(255, (uint64_t)v4);
  return swift_getWitnessTable(&unk_100EB30C0, v2);
}

uint64_t sub_1002D80C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *a1;
  v2 = a1[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2, *a1, &unk_100F98880, &unk_100F98900);
  v4 = *(_QWORD *)(v2 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v5 = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v6 = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v7 = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
  v26 = v1;
  v27 = (_QWORD *)AssociatedTypeWitness;
  v28 = v4;
  v29 = AssociatedConformanceWitness;
  v30 = (void *)v5;
  v31 = v6;
  v32 = v7;
  v8 = type metadata accessor for ContainerHeaderRow.ViewModel(255, (uint64_t)&v26);
  v9 = type metadata accessor for Array(255);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v9);
  v11 = swift_getWitnessTable(&unk_100EB77B8, v8);
  v12 = type metadata accessor for EnumeratedCollection(255, v9, WitnessTable, v11);
  v26 = v1;
  v27 = (_QWORD *)AssociatedTypeWitness;
  v28 = v4;
  v29 = AssociatedConformanceWitness;
  v30 = (void *)v5;
  v31 = v6;
  v32 = v7;
  v13 = type metadata accessor for ContainerHeaderRow(255, (uint64_t)&v26);
  v14 = type metadata accessor for ModifiedContent(255, v13, &type metadata for _FlexFrameLayout);
  v16 = type metadata accessor for PlayabilityStatus(255, AssociatedTypeWitness, v6, v15);
  v17 = type metadata accessor for ModifiedContent(255, v14, v16);
  v19 = type metadata accessor for ContainerDetailView.TrackList(255, v1, v2, v18);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v17, v19, 0, 0);
  v21 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v12);
  v26 = v12;
  v27 = &type metadata for String;
  v28 = v21;
  v29 = v22;
  v30 = &protocol witness table for String;
  v23 = type metadata accessor for ForEach(255, &v26);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v21);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v23);
}

uint64_t sub_1002D831C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *a1;
  v2 = a1[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2, *a1, &unk_100F98880, &unk_100F98900);
  v4 = *(_QWORD *)(v2 + 64);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988D8);
  v5 = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E0);
  v6 = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988E8);
  v7 = swift_getAssociatedConformanceWitness(v2, v1, AssociatedTypeWitness, &unk_100F98880, &unk_100F988F0);
  v32 = v1;
  v33 = (_QWORD *)AssociatedTypeWitness;
  v34 = v4;
  v35 = AssociatedConformanceWitness;
  v36 = (void *)v5;
  v37 = v6;
  v38 = v7;
  v8 = type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)&v32);
  v9 = type metadata accessor for Array(255);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v9);
  v11 = swift_getWitnessTable(&unk_100EB7764, v8);
  v12 = type metadata accessor for EnumeratedCollection(255, v9, WitnessTable, v11);
  v32 = v1;
  v33 = (_QWORD *)AssociatedTypeWitness;
  v34 = v4;
  v35 = AssociatedConformanceWitness;
  v36 = (void *)v5;
  v37 = v6;
  v38 = v7;
  v13 = type metadata accessor for ContainerTrackRow(255, (uint64_t)&v32);
  v14 = type metadata accessor for ModifiedContent(255, v13, &type metadata for _FlexFrameLayout);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v17 = type metadata accessor for PlayabilityStatus(255, AssociatedTypeWitness, v6, v16);
  v18 = type metadata accessor for ModifiedContent(255, v15, v17);
  v20 = type metadata accessor for ContainerDetailView.ScrollItemGeometryReaderBackground(255, v1, v2, v19);
  v21 = type metadata accessor for Optional(255, v20);
  swift_getWitnessTable(&unk_100EB33B8, v20);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v21);
  v23 = type metadata accessor for _BackgroundModifier(255, v21, v22);
  v24 = type metadata accessor for ModifiedContent(255, v18, v23);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for EnumeratedCollection<A>, v12);
  v32 = v12;
  v33 = &type metadata for String;
  v34 = v24;
  v35 = v25;
  v36 = &protocol witness table for String;
  v26 = type metadata accessor for ForEach(255, &v32);
  v27 = type metadata accessor for ModifiedContent(255, v26, &type metadata for _AppearanceActionModifier);
  v28 = sub_100044B54(&qword_1011A7AF8);
  v29 = type metadata accessor for ModifiedContent(255, v27, v28);
  swift_getWitnessTable(&unk_100EB77F0, v13);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  swift_getWitnessTable(&unk_100EC08A0, v17);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  swift_getWitnessTable(&protocol conformance descriptor for _BackgroundModifier<A>, v23);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v26);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  sub_100049F28(&qword_1011A7AF0, &qword_1011A7AF8, (uint64_t)&unk_100EC8CF0);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
}

uint64_t _s7ArtistsVwxx(_QWORD *a1)
{
  swift_release(*a1);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t _s7ArtistsVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  v5 = a2[4];
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *_s7ArtistsVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *((_BYTE *)a1 + 41) = *((_BYTE *)a2 + 41);
  *((_BYTE *)a1 + 42) = *((_BYTE *)a2 + 42);
  *((_BYTE *)a1 + 43) = *((_BYTE *)a2 + 43);
  return a1;
}

__n128 _s7ArtistsVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *_s7ArtistsVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  swift_bridgeObjectRelease(a1[3]);
  v5 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *((_BYTE *)a1 + 41) = *((_BYTE *)a2 + 41);
  *((_BYTE *)a1 + 42) = *((_BYTE *)a2 + 42);
  *((_BYTE *)a1 + 43) = *((_BYTE *)a2 + 43);
  return a1;
}

uint64_t _s7ArtistsVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 44))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7ArtistsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 44) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 44) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s7ArtistsVMa()
{
  return &_s7ArtistsVN;
}

void sub_1002D8960()
{
  uint64_t v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  NSObject *oslog;
  uint64_t v18;
  uint64_t v19;

  v1 = (uint64_t *)v0;
  v2 = *(unsigned __int8 *)(v0 + 40);
  if (v2 == 1)
  {
    KeyPath = swift_getKeyPath(&unk_100EB3538);
    v7 = sub_100007E8C(&qword_1011A3B20);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 0, v7);
    swift_release();
    v5 = swift_getKeyPath(&unk_100EB3560);
    v4 = v7;
    goto LABEL_5;
  }
  if (!*(_BYTE *)(v0 + 40))
  {
    v3 = swift_getKeyPath(&unk_100EB3560);
    v4 = sub_100007E8C(&qword_1011A3B20);
    v5 = v3;
LABEL_5:
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v5, 1, v4);
    swift_release();
    return;
  }
  if (qword_10119C028 != -1)
    swift_once(&qword_10119C028, sub_10046477C);
  v8 = type metadata accessor for Logger(0);
  sub_100048B14(v8, (uint64_t)static Logger.libraryView);
  sub_1001A7ACC((_QWORD *)v0);
  v9 = sub_1001A7ACC((_QWORD *)v0);
  oslog = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.fault.getter(v10);
  if (os_log_type_enabled(oslog, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v19 = v13;
    *(_DWORD *)v12 = 136446210;
    LOBYTE(v18) = v2;
    v14 = String.init<A>(describing:)(&v18, &_s11ContentSortV6OptionON);
    v16 = v15;
    v18 = sub_100322200(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    swift_bridgeObjectRelease(v16);
    sub_1001A7B10(v1);
    sub_1001A7B10(v1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Tried to apply unhandled sortOption=%{public}s to artists request.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {
    sub_1001A7B10((uint64_t *)v0);
    sub_1001A7B10((uint64_t *)v0);

  }
}

void sub_1002D8BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD v27[9];

  v1 = type metadata accessor for MusicFavoriteStatus(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  if (!*(_QWORD *)(v5 + 16))
    return;
  Hasher.init(_seed:)(v27, *(_QWORD *)(v5 + 40));
  String.hash(into:)(v27, 0x657469726F766166, 0xE900000000000073);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    goto LABEL_13;
  v10 = ~v7;
  while (!*(_BYTE *)(*(_QWORD *)(v5 + 48) + v8))
  {
    v11 = 0xE300000000000000;
    v12 = 7105633;
LABEL_8:
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, 0x657469726F766166, 0xE900000000000073, 0);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) != 0)
      goto LABEL_12;
    v8 = (v8 + 1) & v10;
    if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      goto LABEL_13;
  }
  if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v8) == 2)
  {
    v11 = 0xE900000000000073;
    v12 = 0x64616F6C6E776F64;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_12:
  KeyPath = swift_getKeyPath(&unk_100EB3510);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for MusicFavoriteStatus.favorited(_:), v1);
  v15 = sub_100007E8C(&qword_1011A3B20);
  v16 = sub_100048748(&qword_1011A19A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(KeyPath, v4, v15, &protocol witness table for Artist, v16);
  v17 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v17);
LABEL_13:
  if (!*(_QWORD *)(v5 + 16))
    return;
  Hasher.init(_seed:)(v27, *(_QWORD *)(v5 + 40));
  String.hash(into:)(v27, 0x64616F6C6E776F64, 0xE900000000000073);
  v18 = Hasher._finalize()();
  v19 = -1 << *(_BYTE *)(v5 + 32);
  v20 = v18 & ~v19;
  if (((*(_QWORD *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
    return;
  v21 = ~v19;
  while (2)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v5 + 48) + v20))
    {
      v22 = 0xE300000000000000;
      v23 = 7105633;
      goto LABEL_20;
    }
    v22 = 0xE900000000000073;
    v23 = 0x657469726F766166;
    if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v20) == 1)
    {
LABEL_20:
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v22, 0x64616F6C6E776F64, 0xE900000000000073, 0);
      swift_bridgeObjectRelease(v22);
      if ((v24 & 1) != 0)
        goto LABEL_23;
      v20 = (v20 + 1) & v21;
      if (((*(_QWORD *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        return;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease(0xE900000000000073);
LABEL_23:
  v25 = sub_100007E8C(&qword_1011A3B20);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(1, v25);
}

_UNKNOWN **sub_1002D8F14()
{
  uint64_t *v0;
  char v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  static ApplicationCapabilities.shared.getter((uint64_t)&v11);
  sub_100065184(&v11);
  v1 = v12;
  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if ((v0[1] & 1) != 0 || v3 == (id)6)
  {
    if ((v1 & 1) == 0)
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    return &off_1010AA058;
  }
  else
  {
    v10 = *v0;
    v4 = type metadata accessor for MusicLibrary(0);
    swift_retain();
    v9 = static MusicLibrary.shared.getter(v5);
    v6 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    v7 = dispatch thunk of static Equatable.== infix(_:_:)(&v10, &v9, v4, v6);
    swift_release();
    swift_release();
    if ((v1 & 1) == 0)
    {
      if ((v7 & 1) != 0)
        return &off_1010AA0A8;
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    }
    if ((v7 & 1) != 0)
      return &off_1010AA080;
    else
      return &off_1010AA058;
  }
}

uint64_t sub_1002D9058@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryArtistSortProperties.name.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1002D909C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter(v1, v2);
}

void sub_1002D90E0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v4 = type metadata accessor for MusicLibrary(0);
  v5 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  Hasher._combine(_:)(*(_BYTE *)(v1 + 8) & 1);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_100045DAC(a1, v8);
  swift_bridgeObjectRelease(v8);
  __asm { BR              X10 }
}

uint64_t sub_1002D91E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v2 & 1);
  return ((uint64_t (*)(void))((char *)sub_1002D92C4 + 4 * byte_100EB3477[*(unsigned __int8 *)(v1 + 42)]))();
}

void sub_1002D92C4()
{
  uint64_t v0;
  char v1;

  String.hash(into:)(v0, 0xD000000000000010, 0x8000000100E2B550);
  swift_bridgeObjectRelease(0x8000000100E2B550);
  Hasher._combine(_:)(v1 & 1);
}

void sub_1002D939C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _BYTE v5[28];

  v4 = *v0;
  *(_OWORD *)v5 = v0[1];
  *(_OWORD *)&v5[12] = *(__int128 *)((char *)v0 + 28);
  v1 = type metadata accessor for TitledSection(0);
  v2 = type metadata accessor for Artist(0);
  MusicLibrarySectionedRequest.init()(v1, v2, &protocol witness table for TitledSection, &protocol witness table for Artist);
  swift_retain();
  v3 = sub_100007E8C(&qword_1011A3B20);
  MusicLibrarySectionedRequest.library.setter(v4, v3);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(BYTE8(v4), v3);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)v5);
  sub_1002D8960();
  sub_1002D8BE4();
}

Swift::Int sub_1002D9468()
{
  __int128 v1[4];

  Hasher.init(_seed:)(v1, 0);
  sub_1002D90E0(v1);
  return Hasher._finalize()();
}

Swift::Int sub_1002D94A8(uint64_t a1)
{
  __int128 v2[4];

  Hasher.init(_seed:)(v2, a1);
  sub_1002D90E0(v2);
  return Hasher._finalize()();
}

uint64_t sub_1002D94E0(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 12) = *(__int128 *)((char *)a1 + 28);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 12) = *(__int128 *)((char *)a2 + 28);
  return sub_1002D9640((uint64_t)&v5, (uint64_t)&v7) & 1;
}

unint64_t sub_1002D952C()
{
  unint64_t result;

  result = qword_1011AAB20;
  if (!qword_1011AAB20)
  {
    result = swift_getWitnessTable(&unk_100EB348C, &_s7ArtistsVN);
    atomic_store(result, (unint64_t *)&qword_1011AAB20);
  }
  return result;
}

void *sub_1002D9570()
{
  return &protocol witness table for Artist;
}

unint64_t sub_1002D957C(uint64_t a1)
{
  unint64_t result;

  result = sub_1002D95A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002D95A0()
{
  unint64_t result;

  result = qword_1011AAC00;
  if (!qword_1011AAC00)
  {
    result = swift_getWitnessTable(&unk_100EB34B4, &_s7ArtistsVN);
    atomic_store(result, (unint64_t *)&qword_1011AAC00);
  }
  return result;
}

uint64_t sub_1002D95E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter);
}

uint64_t sub_1002D95F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10010D554(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryArtistSortProperties.libraryAddedDate.getter);
}

uint64_t sub_1002D95FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryArtistSortProperties.name.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1002D9640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  int v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) != 0)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    if ((sub_10016CD08(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0)
    {
      v11 = *(unsigned __int8 *)(a1 + 41);
      v12 = *(unsigned __int8 *)(a2 + 41);
      sub_1005CFF5C(*(_BYTE *)(a1 + 40));
      if ((v13 & 1) != 0 && ((v11 ^ v12) & 1) == 0)
      {
        v14 = *(_BYTE *)(a1 + 43);
        v15 = *(_BYTE *)(a2 + 43);
        sub_1005CFF5C(*(_BYTE *)(a1 + 42));
        if ((v16 & 1) != 0 && (v14 & 1) == (v15 & 1))
          return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1002D9720()
{
  void *v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::Int v8;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  unint64_t v17;

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "stringForKey:", v2, 0);

  if (v3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    v7._countAndFlagsBits = v4;
    v7._object = v6;
    v8 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9F50, v7);
    swift_bridgeObjectRelease(v6);
    if (!v8)
      return 0;
    if (v8 == 1)
      return 1;
  }
  v10 = objc_msgSend(v0, "standardUserDefaults");
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "stringForKey:", v11, 0);

  if (!v12)
    return 3;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  v17 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9FA0, v16);
  swift_bridgeObjectRelease(v15);
  if (v17 >= 3)
    return 3;
  else
    return v17;
}

double sub_1002D98F0@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  _UNKNOWN **v14;
  Swift::Int v15;
  double result;
  void *v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  int v22;

  v4 = type metadata accessor for MusicLibrary(0);
  v5 = static MusicLibrary.shared.getter(v4);
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults", swift_retain().n128_f64[0]);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
  v9 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  NSUserDefaults.decodeValue<A>(_:forKey:)(v8, v9, &v17);

  v10 = v17;
  if (!v17)
  {
    v11 = sub_1002D9720();
    Optional<A>.convertToSet.getter(v11);
    if (v12)
      v10 = v12;
    else
      v10 = &_swiftEmptySetSingleton;
  }
  v17 = (void *)v5;
  v13 = a1 & 1;
  v18 = a1 & 1;
  v19 = 0;
  v20 = 0xE000000000000000;
  v21 = &_swiftEmptySetSingleton;
  v22 = 16777472;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1002D8F14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v15 = sub_1001A53A0((uint64_t)v14, (uint64_t)v10);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  *(_QWORD *)(a2 + 32) = v15;
  result = 7.29290211e-304;
  *(_DWORD *)(a2 + 40) = 16777472;
  return result;
}

void sub_1002D9AAC()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *ObjCClassFromMetadata;
  id v12;
  NSString v13;
  uint64_t v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void *v21;
  void *v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t (*v36)(void);
  char *v37;
  _QWORD *v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(void (*)(char, double), uint64_t, __n128);
  _QWORD *v43;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(void (*)(), uint64_t, __n128);
  _QWORD *v48;
  __n128 v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  _QWORD *v77;
  uint64_t (*v78)(void);
  _QWORD *v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  _QWORD *v93;
  uint64_t (*v94)(void);
  _QWORD *v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  _QWORD *v100;
  uint64_t (*v101)(void);
  _QWORD *v102;
  void *v103;
  id v104;
  id v105;
  _QWORD *v106;
  uint64_t (*v107)(void);
  _QWORD *v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  _QWORD *v113;
  uint64_t (*v114)(void);
  _QWORD *v115;
  void *v116;
  id v117;
  id v118;
  id v119;
  _QWORD *v120;
  uint64_t (*v121)(void);
  _QWORD *v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  uint64_t v145;
  Class isa;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  objc_super v156;

  v1 = &v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_scrubbingDidChangeHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeDidChangeHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_selectedElapsedTime] = 0;
  v3 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v0;
  v6 = objc_msgSend(v4, "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.45);

  *(_QWORD *)&v0[v3] = v7;
  v8 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor;
  *(_QWORD *)&v5[v8] = objc_msgSend(v4, "systemFillColor");
  v9 = OBJC_IVAR____TtC5Music17PlayerTimeControl_slider;
  type metadata accessor for SliderView();
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v10 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel;
  type metadata accessor for PlayerTimeControl.TimeLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v12 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "_setLayoutDebuggingIdentifier:", v13);

  *(_QWORD *)&v5[v10] = v12;
  v14 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel;
  v15 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "_setLayoutDebuggingIdentifier:", v16);

  *(_QWORD *)&v5[v14] = v15;
  v17 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel;
  *(_QWORD *)&v5[v17] = sub_1002DB0BC();
  v18 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack;
  *(_QWORD *)&v5[v18] = sub_1002DB270();
  v19 = OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor;
  v20 = UIColor.MusicTint.normal.unsafeMutableAddressor();
  v21 = (void *)*v20;
  *(_QWORD *)&v5[v19] = *v20;
  v22 = (void *)*v20;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor] = *v20;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor] = 0;
  v5[OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_backgroundObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_foregroundObserver] = 0;
  v23 = &v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *((_QWORD *)v23 + 6) = 2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink] = 0;
  v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_lastTargetTimestamp] = 0;
  v24 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeFormatter;
  v25 = objc_allocWithZone((Class)AVTimeFormatter);
  v26 = v21;
  v27 = v22;
  v28 = objc_msgSend(v25, "init");
  objc_msgSend(v28, "setStyle:", 1);
  *(_QWORD *)&v5[v24] = v28;
  v29 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeFormatter;
  v30 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  objc_msgSend(v30, "setStyle:", 2);
  *(_QWORD *)&v5[v29] = v30;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelFont] = 0;

  v156.receiver = v5;
  v156.super_class = (Class)type metadata accessor for PlayerTimeControl();
  v31 = objc_msgSendSuper2(&v156, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v31, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityLarge);
  v32 = qword_10119C2F8;
  v33 = (char *)v31;
  if (v32 != -1)
    swift_once(&qword_10119C2F8, sub_1005D2E98);
  objc_msgSend(v33, "setTintColor:", qword_10124D3D8);

  objc_msgSend(v33, "setSemanticContentAttribute:", 1);
  v34 = OBJC_IVAR____TtC5Music17PlayerTimeControl_slider;
  objc_msgSend(*(id *)&v33[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider], "setSemanticContentAttribute:", 1);
  v35 = *(_QWORD **)&v33[v34];
  v36 = *(uint64_t (**)(void))((swift_isaMask & *v35) + 0x158);
  v37 = v33;
  v38 = v35;
  v39 = (void *)v36();

  objc_msgSend(v37, "addGestureRecognizer:", v39);
  v40 = *(_QWORD **)&v33[v34];
  v41 = swift_allocObject(&unk_1010BE1E8, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16, v37);
  v42 = *(void (**)(void (*)(char, double), uint64_t, __n128))((swift_isaMask & *v40) + 0x220);
  v43 = v40;
  v44 = swift_retain();
  v42(sub_1002DDC4C, v41, v44);

  swift_release();
  v45 = *(_QWORD **)&v33[v34];
  v46 = swift_allocObject(&unk_1010BE1E8, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16, v37);
  v47 = *(void (**)(void (*)(), uint64_t, __n128))((swift_isaMask & *v45) + 0x238);
  v48 = v45;
  v49 = swift_retain();
  v47(sub_1002DDC54, v46, v49);

  swift_release();
  sub_10004A07C(0, (unint64_t *)&qword_1011AAD90, CADisplayLink_ptr);
  v50 = swift_allocObject(&unk_1010BE210, 24, 7);
  swift_unknownObjectUnownedInit(v50 + 16, v37);
  v51 = CADisplayLink.init(handler:)((uint64_t)sub_1002DDC80, v50);
  v52 = OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink;
  v53 = *(void **)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink];
  *(_QWORD *)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink] = v51;

  v54 = *(void **)&v37[v52];
  if (!v54)
  {
    __break(1u);
    goto LABEL_8;
  }
  v55 = (void *)objc_opt_self(NSRunLoop);
  v56 = v54;
  v57 = objc_msgSend(v55, "mainRunLoop");
  objc_msgSend(v56, "addToRunLoop:forMode:", v57, NSRunLoopCommonModes);

  v58 = *(void **)&v37[v52];
  if (!v58)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v58, "setPaused:", 1);
  v59 = *(void **)&v37[v52];
  if (v59)
  {
    objc_msgSend(v59, "setPreferredFramesPerSecond:", 30);
    v150 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel;
    v60 = *(void **)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel];
    objc_msgSend(v60, "setTextColor:", *(_QWORD *)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor]);
    v61 = *(void **)&v33[v34];
    v152 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel;
    v62 = *(void **)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel];
    v153 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel;
    v63 = *(void **)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel];
    v151 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack;
    v155 = v34;
    v64 = *(void **)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack];
    v65 = v61;
    v66 = v62;
    v67 = v63;
    v68 = v60;
    v69 = v64;
    objc_msgSend(v65, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v37, "addSubview:", v65);

    v70 = v66;
    objc_msgSend(v70, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v37, "addSubview:", v70);

    v71 = v67;
    objc_msgSend(v71, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v37, "addSubview:", v71);

    v72 = v68;
    objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v37, "addSubview:", v72);

    v73 = v69;
    objc_msgSend(v73, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v37, "addSubview:", v73);

    v154 = (id)objc_opt_self(NSLayoutConstraint);
    v74 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v75 = swift_allocObject(v74, 152, 7);
    *(_OWORD *)(v75 + 16) = xmmword_100EAFD10;
    v76 = objc_msgSend(*(id *)&v37[v150], "centerYAnchor");
    v77 = *(_QWORD **)&v33[v155];
    v78 = *(uint64_t (**)(void))((swift_isaMask & *v77) + 0x170);
    v79 = v77;
    v80 = (void *)v78();

    v81 = objc_msgSend(v80, "centerYAnchor");
    v82 = objc_msgSend(v76, "constraintEqualToAnchor:", v81);

    *(_QWORD *)(v75 + 32) = v82;
    v83 = objc_msgSend(*(id *)&v37[v150], "centerXAnchor");
    v84 = objc_msgSend(v37, "centerXAnchor");
    v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

    *(_QWORD *)(v75 + 40) = v85;
    v86 = objc_msgSend(*(id *)&v37[v151], "leadingAnchor");
    v87 = objc_msgSend(v37, "leadingAnchor");
    v88 = objc_msgSend(v86, "constraintEqualToAnchor:", v87);

    *(_QWORD *)(v75 + 48) = v88;
    v89 = objc_msgSend(*(id *)&v37[v151], "trailingAnchor");
    v90 = objc_msgSend(v37, "trailingAnchor");
    v91 = objc_msgSend(v89, "constraintEqualToAnchor:", v90);

    *(_QWORD *)(v75 + 56) = v91;
    v92 = objc_msgSend(*(id *)&v37[v151], "topAnchor");
    v93 = *(_QWORD **)&v33[v155];
    v94 = *(uint64_t (**)(void))((swift_isaMask & *v93) + 0x170);
    v95 = v93;
    v96 = (void *)v94();

    v97 = objc_msgSend(v96, "topAnchor");
    v98 = objc_msgSend(v92, "constraintEqualToAnchor:", v97);

    *(_QWORD *)(v75 + 64) = v98;
    v99 = objc_msgSend(*(id *)&v37[v151], "heightAnchor");
    v100 = *(_QWORD **)&v33[v155];
    v101 = *(uint64_t (**)(void))((swift_isaMask & *v100) + 0x170);
    v102 = v100;
    v103 = (void *)v101();

    v104 = objc_msgSend(v103, "heightAnchor");
    v105 = objc_msgSend(v99, "constraintEqualToAnchor:", v104);

    *(_QWORD *)(v75 + 72) = v105;
    v106 = *(_QWORD **)&v33[v155];
    v107 = *(uint64_t (**)(void))((swift_isaMask & *v106) + 0x170);
    v108 = v106;
    v109 = (void *)v107();

    v110 = objc_msgSend(v109, "topAnchor");
    v111 = objc_msgSend(v37, "topAnchor");
    v112 = objc_msgSend(v110, "constraintEqualToAnchor:constant:", v111, 10.0);

    *(_QWORD *)(v75 + 80) = v112;
    v113 = *(_QWORD **)&v33[v155];
    v114 = *(uint64_t (**)(void))((swift_isaMask & *v113) + 0x170);
    v115 = v113;
    v116 = (void *)v114();

    v117 = objc_msgSend(v116, "leadingAnchor");
    v118 = objc_msgSend(v37, "leadingAnchor");
    v119 = objc_msgSend(v117, "constraintEqualToAnchor:", v118);

    *(_QWORD *)(v75 + 88) = v119;
    v120 = *(_QWORD **)&v33[v155];
    v121 = *(uint64_t (**)(void))((swift_isaMask & *v120) + 0x170);
    v122 = v120;
    v123 = (void *)v121();

    v124 = objc_msgSend(v123, "trailingAnchor");
    v125 = objc_msgSend(v37, "trailingAnchor");
    v126 = objc_msgSend(v124, "constraintEqualToAnchor:", v125);

    *(_QWORD *)(v75 + 96) = v126;
    v127 = objc_msgSend(*(id *)&v37[v152], "leadingAnchor");
    v128 = objc_msgSend(v37, "leadingAnchor");
    v129 = objc_msgSend(v127, "constraintEqualToAnchor:", v128);

    *(_QWORD *)(v75 + 104) = v129;
    v130 = objc_msgSend(*(id *)&v37[v152], "firstBaselineAnchor");
    v131 = objc_msgSend(*(id *)&v33[v155], "bottomAnchor");
    v132 = objc_msgSend(v130, "constraintEqualToAnchor:constant:", v131, 22.0);

    *(_QWORD *)(v75 + 112) = v132;
    v133 = objc_msgSend(*(id *)&v37[v152], "bottomAnchor");
    v134 = objc_msgSend(v37, "bottomAnchor");
    v135 = objc_msgSend(v133, "constraintEqualToAnchor:", v134);

    *(_QWORD *)(v75 + 120) = v135;
    v136 = objc_msgSend(*(id *)&v37[v153], "trailingAnchor");
    v137 = objc_msgSend(v37, "trailingAnchor");
    v138 = objc_msgSend(v136, "constraintEqualToAnchor:", v137);

    *(_QWORD *)(v75 + 128) = v138;
    v139 = objc_msgSend(*(id *)&v37[v153], "firstBaselineAnchor");
    v140 = objc_msgSend(*(id *)&v33[v155], "bottomAnchor");
    v141 = objc_msgSend(v139, "constraintEqualToAnchor:constant:", v140, 22.0);

    *(_QWORD *)(v75 + 136) = v141;
    v142 = objc_msgSend(*(id *)&v37[v153], "bottomAnchor");
    v143 = objc_msgSend(v37, "bottomAnchor");
    v144 = objc_msgSend(v142, "constraintEqualToAnchor:", v143);

    *(_QWORD *)(v75 + 144) = v144;
    specialized Array._endMutation()(v145);
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v154, "activateConstraints:", isa, swift_bridgeObjectRelease(v75).n128_f64[0]);

    v147 = swift_allocObject(&unk_1010BE1E8, 24, 7);
    swift_unknownObjectWeakInit(v147 + 16, v37);
    v148 = type metadata accessor for NotificationObserver();
    swift_allocObject(v148, 64, 7);
    *(_QWORD *)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_backgroundObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationDidEnterBackgroundNotification, 0, 1, 1, (uint64_t)sub_1002DDCB8, v147);
    swift_release();
    v149 = swift_allocObject(&unk_1010BE1E8, 24, 7);
    swift_unknownObjectWeakInit(v149 + 16, v37);
    swift_allocObject(v148, 64, 7);
    *(_QWORD *)&v37[OBJC_IVAR____TtC5Music17PlayerTimeControl_foregroundObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationWillEnterForegroundNotification, 0, 1, 1, (uint64_t)sub_1002DDCC0, v149);
    swift_release();
    sub_1002DC508();

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1002DAA88(char a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void (*v14)(_QWORD, __n128);
  uint64_t v15;
  __n128 v16;
  double v17;
  double v18;
  void (*v19)(uint64_t, double);
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  char v23[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking) != (a1 & 1))
    {
      *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking) = a1 & 1;
      sub_1002DBD30();
      objc_msgSend(v7, "layoutIfNeeded");
      v9 = v7;
      if ((a1 & 1) != 0)
      {
        v10 = SliderView.Specs.expandedTransform.unsafeMutableAddressor();
        v12 = *(_OWORD *)v10;
        v11 = *((_OWORD *)v10 + 1);
        v13 = *((_OWORD *)v10 + 2);
      }
      else
      {
        v11 = xmmword_100EAB8C0;
        v12 = xmmword_100EAB8D0;
        v13 = 0uLL;
      }
      v22[0] = v12;
      v22[1] = v11;
      v22[2] = v13;
      objc_msgSend(v9, "setTransform:", v22);

      v14 = *(void (**)(_QWORD, __n128))&v9[OBJC_IVAR____TtC5Music17PlayerTimeControl_scrubbingDidChangeHandler];
      if (v14)
      {
        v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Music17PlayerTimeControl_scrubbingDidChangeHandler + 8];
        v16 = swift_retain();
        v14(a1 & 1, v16);
        sub_10004BA30((uint64_t)v14, v15);
      }
    }
    v17 = 0.0;
    if (v7[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] != 2)
      v17 = *(double *)&v7[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 24];
    v18 = v17 * a3;
    v19 = *(void (**)(uint64_t, double))&v7[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeDidChangeHandler];
    if (v19)
    {
      v20 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeDidChangeHandler + 8];
      v21 = v7[v8];
      swift_retain();
      v19(v21, v18);
      sub_10004BA30((uint64_t)v19, v20);
    }
    sub_1002DBE68(v18, v17 - v18);

  }
}

void sub_1002DAC1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  void (*v4)(_QWORD, __n128);
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE v8[56];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, &v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking) = 0;
    sub_1002DBD30();
    objc_msgSend(v3, "layoutIfNeeded");
    sub_1002DDB60((uint64_t)&v3[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot], (uint64_t)v8);
    sub_1002DBFF0((uint64_t)v8);
    v4 = *(void (**)(_QWORD, __n128))&v3[OBJC_IVAR____TtC5Music17PlayerTimeControl_scrubbingDidChangeHandler];
    if (v4)
    {
      v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music17PlayerTimeControl_scrubbingDidChangeHandler + 8];
      v6 = swift_retain();
      v4(0, v6);
      sub_10004BA30((uint64_t)v4, v5);
    }

  }
}

void sub_1002DACE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded) = 1;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink);
    objc_msgSend(v5, "setPaused:", 1);

  }
}

void sub_1002DAD68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  double v9;
  BOOL v10;
  _BOOL8 v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded) = 0;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v4, "window");

      v11 = !v8
         || (objc_msgSend(v4, "isHidden") & 1) != 0
         || (objc_msgSend(v4, "alpha"), v9 <= 0.0)
         || (v4[v5] & 1) != 0
         || (*(_QWORD *)&v4[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] != 2
           ? (v10 = (*(_QWORD *)&v4[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] & 1) == 0)
           : (v10 = 0),
             !v10)
         || (*(_DWORD *)&v4[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 40] & 0x7FFFFFFF) == 0;
      objc_msgSend(v7, "setPaused:", v11);

    }
  }
}

id sub_1002DAEC8()
{
  char *v0;
  id result;
  objc_super v2;

  result = *(id *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink];
  if (result)
  {
    objc_msgSend(result, "invalidate");
    v2.receiver = v0;
    v2.super_class = (Class)type metadata accessor for PlayerTimeControl();
    return objc_msgSendSuper2(&v2, "dealloc");
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002DB0BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  _QWORD v17[4];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "_setLayoutDebuggingIdentifier:", v7);

  v8 = String.LocalizationValue.init(stringLiteral:)(1702259020, 0xE400000000000000);
  static Locale.current.getter(v8);
  v9 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, 0, 0, 256);
  v11 = v10;
  v17[1] = v9;
  v17[2] = v10;
  v12 = sub_100055B68();
  StringProtocol.localizedUppercase.getter(&type metadata for String, v12);
  v14 = v13;
  swift_bridgeObjectRelease(v11);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v6, "setHidden:", 1);
  return v6;
}

id sub_1002DB270()
{
  id v0;
  NSString v1;
  id v2;

  type metadata accessor for PlayerTimeControl.LiveTrack();
  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "_setLayoutDebuggingIdentifier:", v1);

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  objc_msgSend(v0, "setHidden:", 1);
  return v0;
}

void sub_1002DB3C8(char a1)
{
  char *v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  BOOL v6;
  _BOOL8 v7;
  unsigned int v8;
  _QWORD *v9;

  if (objc_msgSend(v1, "isHidden") != (a1 & 1))
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink];
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v1, "window");

      v7 = !v4
        || (objc_msgSend(v1, "isHidden") & 1) != 0
        || (objc_msgSend(v1, "alpha"), v5 <= 0.0)
        || (v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded] & 1) != 0
        || (*(_QWORD *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] != 2
          ? (v6 = (*(_QWORD *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] & 1) == 0)
          : (v6 = 0),
            !v6)
        || (*(_DWORD *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 40] & 0x7FFFFFFF) == 0;
      objc_msgSend(v3, "setPaused:", v7);

    }
    v9 = *(id *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
    v8 = objc_msgSend(v1, "isHidden");
    (*(void (**)(_QWORD))((swift_isaMask & *v9) + 0x1F0))(v8 ^ 1);

  }
}

void sub_1002DB5F4(double a1)
{
  char *v1;
  double v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  BOOL v8;
  _BOOL8 v9;
  double v10;
  _QWORD *v11;

  objc_msgSend(v1, "alpha");
  if (v3 != a1)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink];
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v1, "window");

      v9 = !v6
        || (objc_msgSend(v1, "isHidden") & 1) != 0
        || (objc_msgSend(v1, "alpha"), v7 <= 0.0)
        || (v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded] & 1) != 0
        || (*(_QWORD *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] != 2
          ? (v8 = (*(_QWORD *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] & 1) == 0)
          : (v8 = 0),
            !v8)
        || (*(_DWORD *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 40] & 0x7FFFFFFF) == 0;
      objc_msgSend(v5, "setPaused:", v9);

    }
    v11 = *(id *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
    objc_msgSend(v1, "alpha");
    (*(void (**)(BOOL))((swift_isaMask & *v11) + 0x1F0))(v10 > 0.0);

  }
}

void sub_1002DB768()
{
  char *v0;
  char *v1;
  id v2;
  double Width;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v9;
  uint64_t v10;
  double v11;
  objc_super v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for PlayerTimeControl();
  objc_msgSendSuper2(&v12, "layoutSubviews");
  v1 = *(char **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack];
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setCornerRadius:", CGRectGetHeight(v13) * 0.5);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel], "bounds");
  Width = CGRectGetWidth(v14);
  objc_msgSend(v1, "bounds");
  v4 = CGRectGetWidth(v15);
  if (v4 <= 1.0)
    v4 = 1.0;
  v5 = (Width + 8.0) / v4;
  v6 = OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack_erasedPercentage;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack_erasedPercentage];
  *(double *)&v1[OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack_erasedPercentage] = v5;
  if (v5 < 0.0 || v5 > 1.0)
  {
    v9 = fmin(v5, 1.0);
    if (v9 < 0.0)
      v9 = 0.0;
    *(double *)&v1[v6] = v9;
  }
  else
  {
    v10 = v7;
    v11 = v5;
    if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v11, &v10, &type metadata for CGFloat) & 1) != 0)
      sub_1002DCAD4();
  }
}

void sub_1002DB950()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  BOOL v5;
  _BOOL8 v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for PlayerTimeControl();
  objc_msgSendSuper2(&v7, "didMoveToWindow");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "window");

    v6 = !v3
      || (objc_msgSend(v0, "isHidden") & 1) != 0
      || (objc_msgSend(v0, "alpha"), v4 <= 0.0)
      || (v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded] & 1) != 0
      || (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] != 2
        ? (v5 = (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48] & 1) == 0)
        : (v5 = 0),
          !v5)
      || (*(_DWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 40] & 0x7FFFFFFF) == 0;
    objc_msgSend(v2, "setPaused:", v6);

  }
}

id sub_1002DBAE8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for PlayerTimeControl();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_1002DBB64(char a1)
{
  char *v1;
  objc_class *v3;
  unsigned int v4;
  _QWORD *v5;
  id v6;
  objc_super v7;
  objc_super v8;

  v3 = (objc_class *)type metadata accessor for PlayerTimeControl();
  v8.receiver = v1;
  v8.super_class = v3;
  v4 = objc_msgSendSuper2(&v8, "isEnabled");
  v7.receiver = v1;
  v7.super_class = v3;
  objc_msgSendSuper2(&v7, "setEnabled:", a1 & 1);
  if (v4 != objc_msgSend(v1, "isEnabled"))
  {
    v5 = *(id *)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_slider];
    v6 = objc_msgSend(v1, "isEnabled");
    (*(void (**)(id))((swift_isaMask & *v5) + 0x1F0))(v6);

  }
}

void sub_1002DBC28(uint64_t a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v4;
  double v5;
  BOOL v6;
  _BOOL8 v7;
  id v8;

  v2 = &v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot];
  sub_1002DDB60(a1, (uint64_t)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot]);
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink];
  if (v3)
  {
    v8 = v3;
    v4 = objc_msgSend(v1, "window");

    v7 = !v4
      || (objc_msgSend(v1, "isHidden") & 1) != 0
      || (objc_msgSend(v1, "alpha"), v5 <= 0.0)
      || (v1[OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded] & 1) != 0
      || (*((_QWORD *)v2 + 6) != 2 ? (v6 = (*((_QWORD *)v2 + 6) & 1) == 0) : (v6 = 0), !v6)
      || (*((_DWORD *)v2 + 10) & 0x7FFFFFFF) == 0;
    objc_msgSend(v8, "setPaused:", v7);

  }
}

void sub_1002DBD30()
{
  char *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel];
  v2 = OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking;
  if (v0[OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking] == 1)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  else
  {
    v4 = *(void **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor];
    if (v4)
    {
      v5 = v4;
      goto LABEL_7;
    }
    v3 = objc_msgSend(v0, "tintColor");
  }
  v5 = v3;
LABEL_7:
  v6 = v5;
  objc_msgSend(v1, "setTextColor:", v5);

  v7 = *(void **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel];
  if (v0[v2] == 1)
  {
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
LABEL_12:
    v10 = v8;
    goto LABEL_13;
  }
  v9 = *(void **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor];
  if (!v9)
  {
    v8 = objc_msgSend(v0, "tintColor");
    goto LABEL_12;
  }
  v10 = v9;
LABEL_13:
  v11 = v10;
  objc_msgSend(v7, "setTextColor:");

}

void sub_1002DBE68(double a1, double a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  void *v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel);
  v5 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeFormatter;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeFormatter);
  if (a1 > 0.0 || a2 > 0.0)
  {
    v12 = objc_msgSend(v6, "stringFromSeconds:");
    if (!v12)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v14 = v13;
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
    }
    objc_msgSend(v4, "setText:", v12);

    v10 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel);
    v11 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeFormatter), "stringFromSeconds:", a2);
  }
  else
  {
    v7 = objc_msgSend(v6, "stringFromSeconds:", NAN);
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v9 = v8;
      v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v9);
    }
    objc_msgSend(v4, "setText:", v7);

    v10 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel);
    v11 = objc_msgSend(*(id *)(v2 + v5), "stringFromSeconds:", NAN);
  }
  v15 = v11;
  if (!v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v15 = v18;
  }
  v19 = v15;
  objc_msgSend(v10, "setText:");

}

void sub_1002DBFF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  double v28;
  double v29;
  _QWORD *v30;
  void (*v31)(_QWORD, __n128);
  _QWORD *v32;
  __n128 v33;
  _QWORD *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  char v42[24];
  double v43;
  double v44[3];
  double v45;
  double v46;
  float v47;
  char v48;
  double aBlock[3];
  double v50;
  double v51;
  uint64_t v52;
  char v53;
  char v54[48];
  char v55;

  v2 = v1;
  v4 = sub_1002DDB60(a1, (uint64_t)v42);
  v5 = v43;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48);
  v7 = static Date.timeIntervalSinceReferenceDate.getter(v4);
  v8 = OBJC_IVAR____TtC5Music17PlayerTimeControl_lastTargetTimestamp;
  *(double *)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_lastTargetTimestamp) = v7;
  sub_1002DDB60(a1, (uint64_t)v54);
  v9 = v55;
  if (v55 == 2)
  {
    if ((v6 & 1) == 0)
      goto LABEL_6;
    v9 = 0;
  }
  else if ((v6 & 1) == (v55 & 1))
  {
    goto LABEL_6;
  }
  v10 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7DB0;
  v12 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack);
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  *(_QWORD *)&aBlock[0] = v11;
  specialized Array._endMutation()(v11);
  v39 = aBlock[0];
  v14 = swift_allocObject(v10, 56, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AD0;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
  v40 = v8;
  v41 = v5;
  v16 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel);
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  v17 = *(void **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel);
  *(_QWORD *)(v14 + 48) = v17;
  *(_QWORD *)&aBlock[0] = v14;
  specialized Array._endMutation()(v14);
  v18 = aBlock[0];
  v19 = (void *)objc_opt_self(UIView);
  v20 = swift_allocObject(&unk_1010BE198, 40, 7);
  *(double *)(v20 + 16) = v39;
  *(_BYTE *)(v20 + 24) = v9 & 1;
  *(double *)(v20 + 32) = v18;
  v51 = COERCE_DOUBLE(sub_1002DDC00);
  v52 = v20;
  *(_QWORD *)&aBlock[0] = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock[1] = 1107296256;
  *(_QWORD *)&aBlock[2] = sub_1001DBD98;
  v50 = COERCE_DOUBLE(&unk_1010BE1B0);
  v21 = _Block_copy(aBlock);
  v22 = v52;
  v23 = v12;
  v24 = v13;
  v25 = v15;
  v26 = v16;
  v5 = v41;
  v27 = v17;
  v8 = v40;
  swift_release(v22);
  objc_msgSend(v19, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v21, 0, 1.0, 0.0, 1.0, 300.0, 24.0, 0.0);
  _Block_release(v21);
LABEL_6:
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking) & 1) == 0)
  {
    sub_1002DDB60(a1, (uint64_t)aBlock);
    if (v53 == 2 || v5 <= 0.0)
    {
      v34 = *(_QWORD **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
      v31 = *(void (**)(_QWORD, __n128))((swift_isaMask & *v34) + 0x248);
      v32 = v34;
      v33.n128_u64[0] = 0;
    }
    else
    {
      v28 = v51 + (*(double *)(v2 + v8) - aBlock[0]) * *(float *)&v52;
      if (v28 >= v50)
        v28 = v50;
      v29 = fmax(v28, 0.0) / v5;
      v30 = *(_QWORD **)(v2 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
      v31 = *(void (**)(_QWORD, __n128))((swift_isaMask & *v30) + 0x248);
      v32 = v30;
      v33.n128_f64[0] = v29;
    }
    v31(0, v33);

    v35 = *(double *)(v2 + v8);
    sub_1002DDB60(a1, (uint64_t)v44);
    v36 = 0.0;
    v37 = 0.0;
    if (v48 != 2)
    {
      v38 = v46 + (v35 - v44[0]) * v47;
      if (v38 >= v45)
        v38 = v45;
      v37 = fmax(v38, 0.0);
      v36 = v5;
    }
    sub_1002DBE68(v37, v36 - v37);
  }
  sub_1002DBC28(a1);
}

uint64_t sub_1002DC378(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t j;
  id v14;
  void *v15;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v11);
    v6 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v9 = *(id *)(a1 + 8 * i + 32);
    v10 = v9;
    objc_msgSend(v9, "setHidden:", (a2 ^ 1) & 1);

  }
LABEL_13:
  swift_bridgeObjectRelease(a1);
  if (!((unint64_t)a3 >> 62))
  {
    v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a3);
    if (v12)
      goto LABEL_15;
    return swift_bridgeObjectRelease(a3);
  }
  if (a3 < 0)
    v16 = a3;
  else
    v16 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  result = _CocoaArrayWrapper.endIndex.getter(v16);
  v12 = result;
  if (!result)
    return swift_bridgeObjectRelease(a3);
LABEL_15:
  if (v12 >= 1)
  {
    for (j = 0; j != v12; ++j)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, a3);
      else
        v14 = *(id *)(a3 + 8 * j + 32);
      v15 = v14;
      objc_msgSend(v14, "setHidden:", a2 & 1);

    }
    return swift_bridgeObjectRelease(a3);
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1002DC508()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v2 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v1, "scaledValueForValue:compatibleWithTraitCollection:", v2, 12.0);
  v4 = v3;

  v5 = (void *)objc_opt_self(UIFont);
  v6 = objc_msgSend(v5, "monospacedDigitSystemFontOfSize:weight:", v4, UIFontWeightSemibold);
  v7 = OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelFont;
  v8 = *(void **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelFont];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelFont] = v6;
  v9 = v6;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel], "setFont:", *(_QWORD *)&v0[v7]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel], "setFont:", *(_QWORD *)&v0[v7]);

  v10 = *(void **)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel];
  v11 = objc_msgSend(v5, "systemFontOfSize:weight:", v4, UIFontWeightHeavy);
  objc_msgSend(v10, "setFont:", v11);

  objc_msgSend(v0, "invalidateIntrinsicContentSize");
  objc_msgSend(v0, "setNeedsUpdateConstraints");
  return objc_msgSend(v0, "setNeedsLayout");
}

id sub_1002DC860(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  objc_super v17;

  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack_erasedPercentage] = 0x3FD0000000000000;
  v9 = OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack__backgroundColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "systemFillColor");

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for PlayerTimeControl.LiveTrack();
  v12 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v13 = objc_msgSend(v12, "layer");
  v14 = objc_opt_self(CAGradientLayer);
  v15 = (void *)swift_dynamicCastObjCClassUnconditional(v13, v14, 0, 0, 0);
  objc_msgSend(v15, "setStartPoint:", 0.0, 0.5);
  objc_msgSend(v15, "setEndPoint:", 1.0, 0.5);
  sub_1002DCAD4();

  return v12;
}

void sub_1002DCAD4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  Class isa;
  uint64_t v16;
  uint64_t v17;
  NSNumber v18;
  id v19;
  Class v20;

  v19 = objc_msgSend(v0, "layer");
  v1 = objc_opt_self(CAGradientLayer);
  v2 = (void *)swift_dynamicCastObjCClassUnconditional(v19, v1, 0, 0, 0);
  v3 = sub_100007E8C(&qword_10119E430);
  v4 = swift_allocObject(v3, 160, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7BA0;
  v5 = OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack__backgroundColor;
  v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack__backgroundColor], "CGColor");
  type metadata accessor for CGColor(0);
  v8 = v7;
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 32) = v6;
  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "clearColor");
  v11 = objc_msgSend(v10, "CGColor");

  *(_QWORD *)(v4 + 88) = v8;
  *(_QWORD *)(v4 + 64) = v11;
  v12 = objc_msgSend(v9, "clearColor");
  v13 = objc_msgSend(v12, "CGColor");

  *(_QWORD *)(v4 + 120) = v8;
  *(_QWORD *)(v4 + 96) = v13;
  v14 = objc_msgSend(*(id *)&v0[v5], "CGColor");
  *(_QWORD *)(v4 + 152) = v8;
  *(_QWORD *)(v4 + 128) = v14;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setColors:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v16 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v17 = swift_allocObject(v16, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100EA7AB0;
  sub_10004A07C(0, &qword_10119E4D0, NSNumber_ptr);
  *(NSNumber *)(v17 + 32) = NSNumber.init(floatLiteral:)(0.0);
  *(NSNumber *)(v17 + 40) = CGFloat._bridgeToObjectiveC()();
  *(NSNumber *)(v17 + 48) = CGFloat._bridgeToObjectiveC()();
  v18.super.super.isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
  *(NSNumber *)(v17 + 56) = v18;
  specialized Array._endMutation()(v18.super.super.isa);
  v20 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setLocations:", v20, swift_bridgeObjectRelease(v17).n128_f64[0]);

}

id sub_1002DCD70()
{
  return sub_10004D23C(0, type metadata accessor for PlayerTimeControl.LiveTrack);
}

char *sub_1002DCD90(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  objc_super v19;

  v9 = OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E95831815KnobContentView_knob;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for PlayerTimeControl.KnobContentView();
  v12 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E95831815KnobContentView_knob;
  v14 = *(void **)&v12[OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E95831815KnobContentView_knob];
  v15 = v12;
  v16 = v14;
  v17 = objc_msgSend(v15, "tintColor");
  objc_msgSend(v16, "setBackgroundColor:", v17);

  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v12[v13]);
  return v15;
}

void sub_1002DCF70()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v4;
  CGRect v5;
  CGRect v6;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for PlayerTimeControl.KnobContentView();
  objc_msgSendSuper2(&v4, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E95831815KnobContentView_knob];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setCornerRadius:", CGRectGetWidth(v5) * 0.5);

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v3, "setCornerRadius:", CGRectGetWidth(v6) * 0.5);

}

id sub_1002DD140()
{
  return sub_10004D23C(0, type metadata accessor for PlayerTimeControl.KnobContentView);
}

uint64_t type metadata accessor for PlayerTimeControl()
{
  return objc_opt_self(_TtC5Music17PlayerTimeControl);
}

uint64_t type metadata accessor for PlayerTimeControl.LiveTrack()
{
  return objc_opt_self(_TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack);
}

uint64_t type metadata accessor for PlayerTimeControl.KnobContentView()
{
  return objc_opt_self(_TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E95831815KnobContentView);
}

void sub_1002DD244(uint64_t a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for PlayerTimeControl.TimeLabel();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "layer");
  v4 = *(void **)&v1[OBJC_IVAR____TtCC5Music17PlayerTimeControl9TimeLabel_multipliedTextColor];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v1, "traitCollection");
    v7 = objc_msgSend(v5, "resolvedColorWithTraitCollection:", v6);

    v8 = objc_msgSend(v7, "CGColor");
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v3, "setContentsMultiplyColor:", v8);

}

id sub_1002DD468(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for PlayerTimeControl.TimeLabel);
}

uint64_t type metadata accessor for PlayerTimeControl.TimeLabel()
{
  return objc_opt_self(_TtCC5Music17PlayerTimeControl9TimeLabel);
}

void sub_1002DD4A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  float v7;
  uint64_t v8;
  double v9;
  double v10;
  float v11;
  float v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  float v18;
  double v19;
  double v20;
  _QWORD *v21;
  void (*v22)(_QWORD, __n128);
  __n128 v23;
  _QWORD *v24;
  _QWORD *v25;

  v2 = v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot + 48) == 2
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking) & 1) != 0)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink);
    if (v3)
      objc_msgSend(v3, "setPaused:", 1);
  }
  else
  {
    v4 = *(double *)(v2 + 24);
    v5 = *(double *)(v2 + 32);
    v6 = *(double *)v2;
    v7 = *(float *)(v2 + 40);
    v9 = static Date.timeIntervalSinceReferenceDate.getter(a1);
    v10 = vabdd_f64(v9, *(double *)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_lastTargetTimestamp));
    v11 = fabsf(v7);
    if (v11 > 1.0)
      v12 = 1.0 / v11;
    else
      v12 = 1.0;
    if (v10 >= v12)
    {
      *(double *)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_lastTargetTimestamp) = v9;
      v13 = v5 + (v9 - v6) * v7;
      if (v13 >= v4)
        v13 = v4;
      v14 = fmax(v13, 0.0);
      sub_1002DBE68(v14, v4 - v14);
    }
    if (*(_BYTE *)(v2 + 48) != 2)
    {
      v15 = *(double *)(v2 + 24);
      if (v15 <= 0.0)
      {
        v24 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
        v22 = *(void (**)(_QWORD, __n128))((swift_isaMask & *v24) + 0x248);
        v25 = v24;
        v23.n128_u64[0] = 0;
      }
      else
      {
        v16 = *(double *)(v2 + 32);
        v17 = *(double *)v2;
        v18 = *(float *)(v2 + 40);
        v19 = v16 + (static Date.timeIntervalSinceReferenceDate.getter(v8) - v17) * v18;
        if (v19 >= v15)
          v19 = v15;
        v20 = fmax(v19, 0.0) / v15;
        v21 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Music17PlayerTimeControl_slider);
        v22 = *(void (**)(_QWORD, __n128))((swift_isaMask & *v21) + 0x248);
        v25 = v21;
        v23.n128_f64[0] = v20;
      }
      v22(0, v23);

    }
  }
}

void sub_1002DD674()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *ObjCClassFromMetadata;
  id v11;
  NSString v12;
  uint64_t v13;
  id v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;

  v1 = &v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_scrubbingDidChangeHandler];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeDidChangeHandler];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_selectedElapsedTime] = 0;
  v3 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTrackColor;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "whiteColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.45);

  *(_QWORD *)&v0[v3] = v6;
  v7 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTrackColor;
  *(_QWORD *)&v0[v7] = objc_msgSend(v4, "systemFillColor");
  v8 = OBJC_IVAR____TtC5Music17PlayerTimeControl_slider;
  type metadata accessor for SliderView();
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v9 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeLabel;
  type metadata accessor for PlayerTimeControl.TimeLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v11 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "_setLayoutDebuggingIdentifier:", v12);

  *(_QWORD *)&v0[v9] = v11;
  v13 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeLabel;
  v14 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "_setLayoutDebuggingIdentifier:", v15);

  *(_QWORD *)&v0[v13] = v14;
  v16 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabel;
  *(_QWORD *)&v0[v16] = sub_1002DB0BC();
  v17 = OBJC_IVAR____TtC5Music17PlayerTimeControl_liveTrack;
  *(_QWORD *)&v0[v17] = sub_1002DB270();
  v18 = OBJC_IVAR____TtC5Music17PlayerTimeControl_trackingTintColor;
  v19 = UIColor.MusicTint.normal.unsafeMutableAddressor();
  v20 = (void *)*v19;
  *(_QWORD *)&v0[v18] = *v19;
  v21 = (void *)*v19;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_liveLabelTextColor] = *v19;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelTextColor] = 0;
  v0[OBJC_IVAR____TtC5Music17PlayerTimeControl__tracking] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_backgroundObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_foregroundObserver] = 0;
  v22 = &v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_durationSnapshot];
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *((_OWORD *)v22 + 2) = 0u;
  *((_QWORD *)v22 + 6) = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_displayLink] = 0;
  v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_isBackgrounded] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_lastTargetTimestamp] = 0;
  v23 = OBJC_IVAR____TtC5Music17PlayerTimeControl_elapsedTimeFormatter;
  v24 = objc_allocWithZone((Class)AVTimeFormatter);
  v25 = v20;
  v26 = v21;
  v27 = objc_msgSend(v24, "init");
  objc_msgSend(v27, "setStyle:", 1);
  *(_QWORD *)&v0[v23] = v27;
  v28 = OBJC_IVAR____TtC5Music17PlayerTimeControl_remainingTimeFormatter;
  v29 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  objc_msgSend(v29, "setStyle:", 2);
  *(_QWORD *)&v0[v28] = v29;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17PlayerTimeControl_timeLabelFont] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/PlayerTimeControl.swift", 29, 2, 102, 0);
  __break(1u);
}

void sub_1002DD9A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  if (a1)
    v4 = a1;
  else
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
  v5 = *(void **)(v2
                + OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack__backgroundColor);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtCC5Music17PlayerTimeControlP33_49F0BC05FDBB8FE791FA6BF39E9583189LiveTrack__backgroundColor) = v4;
  v6 = a1;
  sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  v8 = v4;
  v7 = static NSObject.== infix(_:_:)(v8, v5);

  if ((v7 & 1) == 0)
    sub_1002DCAD4();

}

void sub_1002DDA6C(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = OBJC_IVAR____TtCC5Music17PlayerTimeControl9TimeLabel_multipliedTextColor;
  v3 = *(void **)&v1[OBJC_IVAR____TtCC5Music17PlayerTimeControl9TimeLabel_multipliedTextColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Music17PlayerTimeControl9TimeLabel_multipliedTextColor] = a1;
  v4 = a1;

  v5 = objc_msgSend(v1, "layer");
  v6 = *(void **)&v1[v2];
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v1, "traitCollection");
    v9 = objc_msgSend(v7, "resolvedColorWithTraitCollection:", v8);

    v10 = objc_msgSend(v9, "CGColor");
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v5, "setContentsMultiplyColor:", v10);

}

uint64_t sub_1002DDB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011AAD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1002DDBA8(uint64_t a1, double a2)
{
  double v2;

  v2 = *(double *)(a1 + 32) + (a2 - *(double *)a1) * *(float *)(a1 + 40);
  if (v2 >= *(double *)(a1 + 24))
    v2 = *(double *)(a1 + 24);
  return fmax(v2, 0.0);
}

uint64_t sub_1002DDBD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002DDC00()
{
  uint64_t v0;

  return sub_1002DC378(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1002DDC10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002DDC20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002DDC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1002DDC4C(char a1, double a2)
{
  uint64_t v2;

  sub_1002DAA88(a1, v2, a2);
}

void sub_1002DDC54()
{
  uint64_t v0;

  sub_1002DAC1C(v0);
}

uint64_t sub_1002DDC5C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002DDC80(__n128 a1)
{
  uint64_t v1;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v1 + 16, a1);
  sub_1002DD4A4((uint64_t)Strong);

}

void sub_1002DDCB8(uint64_t a1)
{
  uint64_t v1;

  sub_1002DACE4(a1, v1);
}

void sub_1002DDCC0(uint64_t a1)
{
  uint64_t v1;

  sub_1002DAD68(a1, v1);
}

void sub_1002DDCC8()
{
  id v0;
  NSString v1;
  id v2;

  v0 = objc_allocWithZone((Class)NSUserDefaults);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithSuiteName:", v1);

  qword_10124CCC0 = (uint64_t)v2;
}

uint64_t sub_1002DDD34(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1002DDD70 + 4 * byte_100EB35D0[a1]))(0xD000000000000027, 0x8000000100E2B210);
}

uint64_t sub_1002DDD70()
{
  uint64_t v0;

  return v0 - 12;
}

unint64_t sub_1002DDD98()
{
  return 0xD00000000000002ALL;
}

void sub_1002DDDC0(char *a1)
{
  sub_1005CFDF4(*a1);
}

void sub_1002DDDCC()
{
  char *v0;

  sub_100590BA0(*v0);
}

void sub_1002DDDD4(uint64_t a1)
{
  char *v1;

  sub_100044524(a1, *v1);
}

void sub_1002DDDDC(uint64_t a1)
{
  char *v1;

  sub_100591420(a1, *v1);
}

unint64_t sub_1002DDDE4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002DE1C8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002DDE10@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1002DDD34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1002DDE38(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AB7D8;
}

uint64_t sub_1002DDE48()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;

  LOBYTE(v3) = 0;
  v0 = sub_1002DDF90();
  v1 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)&_s21WidgetUserDefaultsKeyON, v0, v1, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast(&v3, v4, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
      return v3;
    else
      return 0;
  }
  else
  {
    sub_1002293F8((uint64_t)v4);
    return 0;
  }
}

uint64_t sub_1002DDEE8()
{
  return sub_1002DDEF8(3u);
}

uint64_t sub_1002DDEF0()
{
  return sub_1002DDEF8(4u);
}

uint64_t sub_1002DDEF8(unsigned __int8 a1)
{
  unint64_t v1;
  unint64_t v2;
  unsigned __int8 v4;
  _BYTE v5[24];
  uint64_t v6;

  v4 = a1;
  v1 = sub_1002DDF90();
  v2 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)&_s21WidgetUserDefaultsKeyON, v1, v2, (uint64_t)v5);
  if (v6)
  {
    if (swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
      return v4;
    else
      return 2;
  }
  else
  {
    sub_1002293F8((uint64_t)v5);
    return 2;
  }
}

unint64_t sub_1002DDF90()
{
  unint64_t result;

  result = qword_1011AAD98;
  if (!qword_1011AAD98)
  {
    result = swift_getWitnessTable(&unk_100EB3698, &_s21WidgetUserDefaultsKeyON);
    atomic_store(result, (unint64_t *)&qword_1011AAD98);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WaveformPlayIndicator.Mode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s21WidgetUserDefaultsKeyOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1002DE0B0 + 4 * byte_100EB35DA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1002DE0E4 + 4 * byte_100EB35D5[v4]))();
}

uint64_t sub_1002DE0E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002DE0EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002DE0F4);
  return result;
}

uint64_t sub_1002DE100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002DE108);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1002DE10C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002DE114(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s21WidgetUserDefaultsKeyOMa()
{
  return &_s21WidgetUserDefaultsKeyON;
}

unint64_t sub_1002DE134()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AADA0;
  if (!qword_1011AADA0)
  {
    v1 = sub_100044B54(&qword_1011AADA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011AADA0);
  }
  return result;
}

unint64_t sub_1002DE184()
{
  unint64_t result;

  result = qword_1011AADB0;
  if (!qword_1011AADB0)
  {
    result = swift_getWitnessTable(&unk_100EB3670, &_s21WidgetUserDefaultsKeyON);
    atomic_store(result, (unint64_t *)&qword_1011AADB0);
  }
  return result;
}

unint64_t sub_1002DE1C8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AB740, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

ValueMetadata *type metadata accessor for NowPlayingLayoutTypeTrait()
{
  return &type metadata for NowPlayingLayoutTypeTrait;
}

ValueMetadata *type metadata accessor for HasAnimatedBackgroundTrait()
{
  return &type metadata for HasAnimatedBackgroundTrait;
}

void sub_1002DE230(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

unint64_t sub_1002DE238()
{
  return 0xD000000000000015;
}

unint64_t sub_1002DE254()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1002DE27C()
{
  return 0xD000000000000014;
}

unint64_t sub_1002DE298()
{
  return 0xD00000000000001ALL;
}

void sub_1002DE2B4()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = objc_msgSend(v0, "bundleIdentifier");

  if (v1)
  {
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v4 = v3;

  }
  else
  {
    v4 = 0xEF636973754D2E65;
    v2 = 0x6C7070612E6D6F63;
  }
  qword_10124CCC8 = v2;
  unk_10124CCD0 = v4;
}

void sub_1002DE35C(char a1)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_100007E8C(&qword_1011AD3F0);
  inited = swift_initStackObject(v2, &v5);
  *(_OWORD *)(inited + 16) = xmmword_100EA7BA0;
  *(_QWORD *)(inited + 32) = 0x707954746E657665;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  strcpy((char *)(inited + 48), "mliStateChange");
  *(_BYTE *)(inited + 63) = -18;
  *(_QWORD *)(inited + 64) = 7368801;
  *(_QWORD *)(inited + 72) = 0xE300000000000000;
  if (qword_10119BDB0 != -1)
    swift_once(&qword_10119BDB0, sub_1002DE2B4);
  v4 = unk_10124CCD0;
  *(_QWORD *)(inited + 80) = qword_10124CCC8;
  *(_QWORD *)(inited + 88) = v4;
  *(_QWORD *)(inited + 96) = 0x6574617453646C6FLL;
  *(_QWORD *)(inited + 104) = 0xE800000000000000;
  __asm { BR              X13 }
}

_QWORD *sub_1002DE574(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *result;
  _OWORD v24[2];
  _BYTE v25[24];
  uint64_t v26;
  _QWORD *v27;

  if ((unint64_t)a1 >> 62)
  {
LABEL_39:
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = _swiftEmptyArrayStorage;
      for (i = 4; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
        else
          v5 = *(id *)(a1 + 8 * i);
        v6 = v5;
        v7 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        v8 = objc_msgSend(v5, "localObject");
        if (v8)
        {
          v9 = v8;
          _bridgeAnyObjectToAny(_:)(v24, v8);
          swift_unknownObjectRelease(v9);
        }
        else
        {
          memset(v24, 0, sizeof(v24));
        }
        sub_1001EBCB4((uint64_t)v24, (uint64_t)v25);
        if (v26)
        {
          v10 = sub_100007E8C((uint64_t *)&unk_1011AB328);
          if ((swift_dynamicCast(&v27, v25, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
          {
            v11 = v27;

            goto LABEL_18;
          }
        }
        else
        {
          sub_10004FF60((uint64_t)v25, &qword_10119DCC0);
        }

        v11 = _swiftEmptyArrayStorage;
LABEL_18:
        v12 = v11[2];
        v13 = v3[2];
        v14 = v13 + v12;
        if (__OFADD__(v13, v12))
          goto LABEL_35;
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v3);
        if ((_DWORD)isUniquelyReferenced_nonNull_native && v14 <= v3[3] >> 1)
        {
          if (!v11[2])
            goto LABEL_4;
        }
        else
        {
          if (v13 <= v14)
            v16 = v13 + v12;
          else
            v16 = v13;
          v3 = sub_1004326B8(isUniquelyReferenced_nonNull_native, v16, 1, v3);
          if (!v11[2])
          {
LABEL_4:
            if (v12)
              goto LABEL_36;
            goto LABEL_5;
          }
        }
        v17 = v3[2];
        if ((v3[3] >> 1) - v17 < v12)
          goto LABEL_37;
        v18 = (unint64_t)&v3[5 * v17 + 4];
        if ((unint64_t)(v11 + 4) < v18 + 40 * v12 && v18 < (unint64_t)&v11[5 * v12 + 4])
        {
          result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
          __break(1u);
          return result;
        }
        sub_100007E8C(&qword_1011AB320);
        swift_arrayInitWithCopy(v18);
        if (v12)
        {
          v19 = v3[2];
          v20 = __OFADD__(v19, v12);
          v21 = v19 + v12;
          if (v20)
            goto LABEL_38;
          v3[2] = v21;
        }
LABEL_5:
        swift_bridgeObjectRelease(v11);
        if (v7 == v2)
        {
          swift_bridgeObjectRelease(a1);
          return v3;
        }
      }
    }
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

void sub_1002DE864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  id v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double (**v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double (**v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;

  v22 = 0;
  if (*(_BYTE *)(v0 + 88) == 1 && (v1 = *(_QWORD *)(v0 + 24)) != 0)
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *(char **)(v0 + 120);
    if (v3)
    {
      swift_retain(*(_QWORD *)(v0 + 32));
      v4 = v3;
      v5 = v3;
    }
    else
    {
      v6 = objc_allocWithZone((Class)type metadata accessor for DragDropController.DragDelegate());
      v4 = (char *)objc_msgSend(v6, "init", swift_retain(v2).n128_f64[0]);
      v5 = v4;
    }
    v22 = v4;
    v7 = v3;

    v8 = swift_allocObject(&unk_1010BE558, 24, 7);
    swift_weakInit(v8 + 16, v0);
    v9 = (_QWORD *)swift_allocObject(&unk_1010BE648, 40, 7);
    v9[2] = v1;
    v9[3] = v2;
    v9[4] = v8;
    v10 = &v5[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_dragItemsProvider];
    v11 = *(_QWORD *)&v5[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_dragItemsProvider];
    v12 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v10 = sub_1002E4674;
    *((_QWORD *)v10 + 1) = v9;
    swift_retain(v2);
    sub_10004BA30(v11, v12);
    if (v4)
    {
      v13 = swift_allocObject(&unk_1010BE558, 24, 7);
      swift_weakInit(v13 + 16, v0);
      v14 = (double (**)(uint64_t))&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionWillBegin];
      v15 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionWillBegin];
      v16 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionWillBegin
                         + 8];
      *v14 = sub_1002E3F60;
      v14[1] = (double (*)(uint64_t))v13;
      sub_10004BA30(v15, v16);
      v17 = swift_allocObject(&unk_1010BE558, 24, 7);
      swift_weakInit(v17 + 16, v0);
      v18 = (double (**)(uint64_t))&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionDidEnd];
      v19 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionDidEnd];
      v20 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionDidEnd
                         + 8];
      *v18 = sub_1002E3F78;
      v18[1] = (double (*)(uint64_t))v17;
      v21 = v4;
      swift_retain(v17);
      sub_10004BA30(v19, v20);
      sub_10004BA30(v1, v2);

      swift_release(v17);
    }
    else
    {
      sub_10004BA30(v1, v2);
    }
    sub_1002DEF8C(&v22, v0);

  }
  else
  {
    sub_1002DEF8C(&v22, v0);
  }
}

void sub_1002DEA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id (*v12)(uint64_t);
  id (**v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double (**v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  void (**v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v26 = 0;
  if (*(_BYTE *)(v0 + 88) == 1 && (v1 = *(_QWORD *)(v0 + 40)) != 0)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(char **)(v0 + 136);
    if (v3)
    {
      swift_retain(*(_QWORD *)(v0 + 48));
      v4 = v3;
      v5 = v3;
    }
    else
    {
      v6 = objc_allocWithZone((Class)type metadata accessor for DragDropController.DropDelegate());
      v4 = (char *)objc_msgSend(v6, "init", swift_retain(v2).n128_f64[0]);
      v5 = v4;
    }
    v26 = v4;
    v7 = v3;

    v8 = &v5[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_canHandleSession];
    v9 = *(_QWORD *)&v5[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_canHandleSession];
    v10 = *(_QWORD *)&v5[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_canHandleSession
                       + 8];
    *(_QWORD *)v8 = sub_1002DF748;
    *((_QWORD *)v8 + 1) = 0;
    sub_10004BA30(v9, v10);
    v11 = swift_allocObject(&unk_1010BE558, 24, 7);
    swift_weakInit(v11 + 16, v0);
    v12 = (id (*)(uint64_t))swift_allocObject(&unk_1010BE580, 40, 7);
    *((_QWORD *)v12 + 2) = v11;
    *((_QWORD *)v12 + 3) = v1;
    *((_QWORD *)v12 + 4) = v2;
    v13 = (id (**)(uint64_t))&v5[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidUpdate];
    v14 = *(_QWORD *)&v5[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidUpdate];
    v15 = (uint64_t)v13[1];
    *v13 = sub_1002E4368;
    v13[1] = v12;
    swift_retain(v2);
    sub_10004BA30(v14, v15);
    if (v4)
    {
      v16 = swift_allocObject(&unk_1010BE558, 24, 7);
      swift_weakInit(v16 + 16, v0);
      v17 = (double (**)(uint64_t))&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidExitOrEnd];
      v18 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidExitOrEnd];
      v19 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidExitOrEnd
                         + 8];
      *v17 = sub_1002E4374;
      v17[1] = (double (*)(uint64_t))v16;
      sub_10004BA30(v18, v19);
      v20 = swift_allocObject(&unk_1010BE558, 24, 7);
      swift_weakInit(v20 + 16, v0);
      v21 = (void (*)(uint64_t))swift_allocObject(&unk_1010BE5A8, 40, 7);
      *((_QWORD *)v21 + 2) = v20;
      *((_QWORD *)v21 + 3) = v1;
      *((_QWORD *)v21 + 4) = v2;
      v22 = (void (**)(uint64_t))&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop];
      v24 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop];
      v23 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop
                         + 8];
      *v22 = sub_1002E43AC;
      v22[1] = v21;
      v25 = v24;
    }
    else
    {
      v25 = v1;
      v23 = v2;
    }
    sub_10004BA30(v25, v23);
    sub_1002DF5D4(&v26, v0);

  }
  else
  {
    sub_1002DF5D4(&v26, v0);
  }
}

id sub_1002DEF5C()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for DragDropController.DragDelegate);
}

void sub_1002DEF8C(void **a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v3 = *a1;
  if (*a1)
  {
    v4 = *(void **)(a2 + 120);
    *(_QWORD *)(a2 + 120) = v3;
    v5 = v3;

    v6 = objc_msgSend(objc_allocWithZone((Class)UIDragInteraction), "initWithDelegate:", v5);
    v7 = *(void **)(a2 + 128);
    *(_QWORD *)(a2 + 128) = v6;
    v14 = v6;
    if (v6)
    {
      if (!v7)
        goto LABEL_12;
      sub_10004A07C(0, &qword_1011AB3E8, UIDragInteraction_ptr);
      v8 = v7;
      v9 = v14;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0)
      {

        v11 = v9;
LABEL_16:

        return;
      }
      v6 = *(id *)(a2 + 128);
      if (v6)
      {
LABEL_12:
        objc_msgSend(*(id *)(a2 + 16), "addInteraction:", v6);
LABEL_14:

        goto LABEL_15;
      }
LABEL_13:
      objc_msgSend(*(id *)(a2 + 16), "removeInteraction:", v7);
      goto LABEL_14;
    }
    if (v7)
      goto LABEL_13;

LABEL_15:
    v11 = v14;
    goto LABEL_16;
  }
  v12 = *(void **)(a2 + 120);
  *(_QWORD *)(a2 + 120) = 0;

  v13 = *(void **)(a2 + 128);
  *(_QWORD *)(a2 + 128) = 0;
  if (v13)
  {
    v14 = v13;
    objc_msgSend(*(id *)(a2 + 16), "removeInteraction:");
    goto LABEL_15;
  }
}

_QWORD *sub_1002DF100(void *a1, void (*a2)(__n128), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  id v25;
  id v26;
  _BYTE v28[15];
  char v29;
  _OWORD v30[2];
  _BYTE v31[24];
  uint64_t v32;

  v7 = sub_100007E8C((uint64_t *)&unk_1011AB398);
  __chkstk_darwin(v7);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DragItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2(v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011AB398);
    return _swiftEmptyArrayStorage;
  }
  sub_10005B6C0((uint64_t)v9, (uint64_t)v14, type metadata accessor for DragItem);
  v16 = sub_1000FA1F8();
  v17 = objc_msgSend(a1, "localContext");
  if (v17)
  {
    v18 = v17;
    _bridgeAnyObjectToAny(_:)(v30, v17);
    swift_unknownObjectRelease(v18);
  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  sub_1001EBCB4((uint64_t)v30, (uint64_t)v31);
  if (!v32)
  {
    sub_10004FF60((uint64_t)v31, &qword_10119DCC0);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v29, v31, (char *)&type metadata for Any + 8, &type metadata for DragDropSessionType, 6) & 1) == 0)
  {
LABEL_13:
    if (v16 == 3)
    {
      v19 = 0;
    }
    else
    {
      v31[0] = v16;
      v19 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v31, &type metadata for DragDropSessionType);
    }
    objc_msgSend(a1, "setLocalContext:", v19);
    swift_unknownObjectRelease(v19);
    goto LABEL_17;
  }
  if (v16 == 3 || v29 != v16)
  {
    sub_10005B748((uint64_t)v14, type metadata accessor for DragItem);
    return _swiftEmptyArrayStorage;
  }
LABEL_17:
  v20 = a4 + 16;
  v21 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v22 = swift_allocObject(v21, 40, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EA7A90;
  swift_beginAccess(v20, v31, 0, 0);
  Strong = swift_weakLoadStrong(v20);
  if (Strong)
  {
    v24 = Strong;
    v25 = *(id *)(Strong + 16);
    objc_msgSend(v25, "frame", swift_release(v24).n128_f64[0]);

  }
  v26 = sub_1000FD2B0();
  *(_QWORD *)(v22 + 32) = v26;
  *(_QWORD *)&v30[0] = v22;
  specialized Array._endMutation()(v26);
  v15 = *(_QWORD *)&v30[0];
  sub_10005B748((uint64_t)v14, type metadata accessor for DragItem);
  return (_QWORD *)v15;
}

id sub_1002DF560()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for DragDropController.DropDelegate);
}

void sub_1002DF5D4(void **a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v3 = *a1;
  if (*a1)
  {
    v4 = *(void **)(a2 + 136);
    *(_QWORD *)(a2 + 136) = v3;
    v5 = v3;

    v6 = objc_msgSend(objc_allocWithZone((Class)UIDropInteraction), "initWithDelegate:", v5);
    v7 = *(void **)(a2 + 144);
    *(_QWORD *)(a2 + 144) = v6;
    v14 = v6;
    if (v6)
    {
      if (!v7)
        goto LABEL_12;
      sub_10004A07C(0, &qword_1011AB3E0, UIDropInteraction_ptr);
      v8 = v7;
      v9 = v14;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0)
      {

        v11 = v9;
LABEL_16:

        return;
      }
      v6 = *(id *)(a2 + 144);
      if (v6)
      {
LABEL_12:
        objc_msgSend(*(id *)(a2 + 16), "addInteraction:", v6);
LABEL_14:

        goto LABEL_15;
      }
LABEL_13:
      objc_msgSend(*(id *)(a2 + 16), "removeInteraction:", v7);
      goto LABEL_14;
    }
    if (v7)
      goto LABEL_13;

LABEL_15:
    v11 = v14;
    goto LABEL_16;
  }
  v12 = *(void **)(a2 + 136);
  *(_QWORD *)(a2 + 136) = 0;

  v13 = *(void **)(a2 + 144);
  *(_QWORD *)(a2 + 144) = 0;
  if (v13)
  {
    v14 = v13;
    objc_msgSend(*(id *)(a2 + 16), "removeInteraction:");
    goto LABEL_15;
  }
}

_QWORD *sub_1002DF74C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = objc_msgSend(v0, "localDragSession");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "items");
    swift_unknownObjectRelease(v2);
    v4 = sub_10004A07C(0, (unint64_t *)&unk_1011AB310, UIDragItem_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    v6 = sub_1002DE574(v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  v7 = sub_1002E36DC();
  sub_100806410((uint64_t)v7);
  return v6;
}

id sub_1002DF828(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  _UNKNOWN **v6;
  char **v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  id v31;

  v6 = MPLibraryAddStatusObserver_ptr;
  v7 = &selRef_setMetricsOverlay_;
  v31 = objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", 0);
  v8 = v31;
  v9 = a3();
  v10 = v9;
  if (*(_QWORD *)(v9 + 16))
  {

    swift_getObjectType();
    v11 = sub_1002DF74C();
    v12 = *(_QWORD *)(v10 + 16);
    if (v12)
    {
      v13 = v10 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_100064C78(v13, (uint64_t)&v22);
        v14 = v23;
        v15 = v24;
        sub_100007E68(&v22, v23);
        if (((*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v15 + 16))(v11, v14, v15) & 1) != 0)
          break;
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v22);
        v13 += 40;
        if (!--v12)
        {
          swift_bridgeObjectRelease(v10);
          v6 = MPLibraryAddStatusObserver_ptr;
          v7 = &selRef_setMetricsOverlay_;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease(v10);
      sub_100064C48(&v22, (uint64_t)&v25);
      swift_bridgeObjectRelease(v10);
      v6 = MPLibraryAddStatusObserver_ptr;
      v7 = &selRef_setMetricsOverlay_;
      if (!*((_QWORD *)&v26 + 1))
        goto LABEL_11;
    }
    else
    {
LABEL_7:
      v27 = 0;
      v25 = 0u;
      v26 = 0u;
      swift_bridgeObjectRelease(v10);
      if (!*((_QWORD *)&v26 + 1))
      {
LABEL_11:
        swift_bridgeObjectRelease(v11);
        sub_10004FF60((uint64_t)&v25, &qword_1011AB308);
        v21 = objc_msgSend(objc_allocWithZone((Class)v6[271]), v7[172], 1);

        v31 = v21;
        v8 = v21;
        goto LABEL_12;
      }
    }
    sub_100064C48(&v25, (uint64_t)v28);
    v16 = v29;
    v17 = v30;
    sub_100007E68(v28, v29);
    v18 = (void *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v17 + 8))(v11, v16, v17);

    swift_bridgeObjectRelease(v11);
    v31 = v18;
    v19 = v18;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v28);
    sub_1002DFA5C(a2, a1, &v31);

    return v19;
  }
  swift_bridgeObjectRelease(v9);
LABEL_12:
  sub_1002DFA5C(a2, a1, &v31);

  return v8;
}

double sub_1002DFA5C(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void (*v13)(void *, void *);
  uint64_t v14;
  void *v15;
  void *v16;
  _BYTE v17[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = (uint64_t *)Strong;
    v9 = *a3;
    v10 = *(_QWORD *)(Strong + 104);
    v11 = *(void **)(Strong + 112);
    *(_QWORD *)(Strong + 104) = a2;
    *(_QWORD *)(Strong + 112) = v9;
    swift_unknownObjectRetain_n(a2, 2);
    v12 = v9;
    sub_1002E4338(v10, v11);
    v13 = (void (*)(void *, void *))v8[9];
    if (v13)
    {
      v14 = v8[10];
      v15 = (void *)v8[13];
      v16 = (void *)v8[14];
      sub_100048AAC(v8[9], v14);
      sub_1002E461C(v15, v16);
      v13(v15, v16);
      sub_10004BA30((uint64_t)v13, v14);
      sub_1002E4338((uint64_t)v15, v16);
    }

    swift_unknownObjectRelease(a2);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

double sub_1002DFB54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  void (*v8)(void *, void *);
  uint64_t v9;
  void *v10;
  void *v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = (uint64_t *)Strong;
    v6 = *(_QWORD *)(Strong + 104);
    v7 = (void *)v5[14];
    v5[13] = 0;
    v5[14] = 0;
    sub_1002E4338(v6, v7);
    v8 = (void (*)(void *, void *))v5[9];
    if (v8)
    {
      v9 = v5[10];
      v10 = (void *)v5[13];
      v11 = (void *)v5[14];
      sub_100048AAC(v5[9], v9);
      sub_1002E461C(v10, v11);
      v8(v10, v11);
      sub_10004BA30((uint64_t)v8, v9);
      sub_1002E4338((uint64_t)v10, v11);
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_1002DFC10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  _BYTE v18[24];

  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(id *)(Strong + 16);
    swift_release(v9);
  }
  else
  {
    v10 = 0;
  }
  swift_getObjectType();
  v11 = sub_1002DF74C();
  v12 = a3();
  if (*(_QWORD *)(v12 + 16))
  {
    TaskPriority.init(rawValue:)(21);
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
    v14 = (_QWORD *)swift_allocObject(&unk_1010BE5D0, 56, 7);
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v12;
    v14[5] = v11;
    v14[6] = v10;
    v15 = v10;
    v16 = sub_1000E8908((uint64_t)v7, (uint64_t)&unk_1011AB3B0, (uint64_t)v14);

    swift_release(v16);
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A13B0);
  }
  else
  {
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v12);

  }
}

uint64_t sub_1002DFD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch(sub_1002DFDB4, 0, 0);
}

uint64_t sub_1002DFDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1002DFE50;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(*(_QWORD *)(v0 + 16), (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_1011AB3C0, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_1002DFE50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 48);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1002DFEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;

  v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A13B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[23] = swift_task_alloc(v6);
  v5[24] = swift_task_alloc(v6);
  return swift_task_switch(sub_1002DFF10, 0, 0);
}

uint64_t sub_1002DFF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  __int128 *v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v0 + 16);
    v35 = (__int128 *)(v0 + 56);
    v34 = *(void **)(v0 + 176);
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      v6 = *(_QWORD *)(v0 + 168);
      sub_100064C78(v4, (uint64_t)v3);
      v7 = *(_QWORD *)(v0 + 40);
      v8 = *(_QWORD *)(v0 + 48);
      sub_100007E68(v3, v7);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v8) & 1) == 0)
        break;
      v36 = v2;
      v10 = *(_QWORD *)(v0 + 184);
      v9 = *(_QWORD *)(v0 + 192);
      v12 = *(_QWORD *)(v0 + 168);
      v11 = *(_QWORD *)(v0 + 176);
      v13 = type metadata accessor for TaskPriority(0);
      v14 = *(_QWORD *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
      sub_100064C78((uint64_t)v3, (uint64_t)v35);
      v15 = (_QWORD *)swift_allocObject(&unk_1010BE5F8, 88, 7);
      v15[2] = 0;
      v16 = v15 + 2;
      v15[3] = 0;
      sub_100064C48(v35, (uint64_t)(v15 + 4));
      v15[9] = v12;
      v15[10] = v11;
      sub_10004A160(v9, v10, (uint64_t *)&unk_1011A13B0);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
      swift_bridgeObjectRetain();
      v17 = v34;
      v19 = *(_QWORD *)(v0 + 184);
      if ((_DWORD)v10 == 1)
      {
        sub_10004FF60(*(_QWORD *)(v0 + 184), (uint64_t *)&unk_1011A13B0);
        v20 = 0;
      }
      else
      {
        v21 = TaskPriority.rawValue.getter(v18);
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        v20 = v21;
      }
      v22 = *v16;
      if (*v16)
      {
        v23 = v15[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v22, v25);
        v26 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v23);
        v28 = v27;
        swift_unknownObjectRelease(v22);
      }
      else
      {
        v26 = 0;
        v28 = 0;
      }
      v3 = (_QWORD *)(v0 + 16);
      v29 = **(_QWORD **)(v0 + 152);
      v30 = swift_allocObject(&unk_1010BE620, 32, 7);
      *(_QWORD *)(v30 + 16) = &unk_1011AB3D0;
      *(_QWORD *)(v30 + 24) = v15;
      v31 = v28 | v26;
      if (v28 | v26)
      {
        v31 = v0 + 96;
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 104) = 0;
        *(_QWORD *)(v0 + 112) = v26;
        *(_QWORD *)(v0 + 120) = v28;
      }
      v5 = *(_QWORD *)(v0 + 192);
      *(_QWORD *)(v0 + 128) = 1;
      *(_QWORD *)(v0 + 136) = v31;
      *(_QWORD *)(v0 + 144) = v29;
      swift_task_create(v20 | 0x3100, v0 + 128, (char *)&type metadata for () + 8, &unk_1011AB3D8, v30);
      swift_release();
      sub_10004FF60(v5, (uint64_t *)&unk_1011A13B0);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
      v4 += 40;
      v2 = v36 - 1;
      if (v36 == 1)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v3);
  }
LABEL_15:
  v32 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E01E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  v7 = type metadata accessor for Notice(0);
  v6[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[19] = v8;
  v6[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AB380) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[21] = swift_task_alloc(v9);
  v6[22] = swift_task_alloc(v9);
  return swift_task_switch(sub_1002E0280, 0, 0);
}

uint64_t sub_1002E0280()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[15];
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[23] = v5;
  *v5 = v0;
  v5[1] = sub_1002E0304;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v7)(v0[22], v0[16], v2, v3);
}

uint64_t sub_1002E0304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002E066C;
  else
    v3 = sub_1002E0368;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002E0368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  sub_10004A160(*(_QWORD *)(v0 + 176), v1, &qword_1011AB380);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 168);
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011AB380);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 136);
    sub_10005B6C0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 160), type metadata accessor for Notice);
    if (v5)
    {
      v6 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 200) = v6;
      *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v7);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
      return swift_task_switch(sub_1002E0494, v8, v9);
    }
    v4 = *(_QWORD *)(v0 + 176);
    sub_10005B748(*(_QWORD *)(v0 + 160), type metadata accessor for Notice);
  }
  sub_10004FF60(v4, &qword_1011AB380);
  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E0494()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = UIView.noticePresenter.getter();
  return swift_task_switch(sub_1002E04DC, 0, 0);
}

uint64_t sub_1002E04DC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 216);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 200);
    *(_QWORD *)(v1 + 224) = *(_QWORD *)(*(_QWORD *)v2 + 192);
    *(_QWORD *)(v1 + 232) = static MainActor.shared.getter(a1);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_1002E05A4, v4, v5);
  }
  else
  {
    v7 = *(_QWORD *)(v1 + 176);
    sub_10005B748(*(_QWORD *)(v1 + 160), type metadata accessor for Notice);
    sub_10004FF60(v7, &qword_1011AB380);
    v8 = *(_QWORD *)(v1 + 168);
    v9 = *(_QWORD *)(v1 + 160);
    swift_task_dealloc(*(_QWORD *)(v1 + 176));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1002E05A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, __n128);
  uint64_t v2;
  __n128 v3;

  v1 = *(void (**)(uint64_t, _QWORD, __n128))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = swift_release();
  v1(v2, 0, v3);
  swift_release();
  return swift_task_switch(sub_1002E0604, 0, 0);
}

uint64_t sub_1002E0604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 176);
  sub_10005B748(*(_QWORD *)(v0 + 160), type metadata accessor for Notice);
  sub_10004FF60(v1, &qword_1011AB380);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E066C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t type;
  uint64_t v22;
  uint64_t v23;

  if (qword_10119B910 != -1)
    swift_once(&qword_10119B910, sub_1000FC88C);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = type metadata accessor for Logger(0);
  sub_100048B14(v3, (uint64_t)qword_10124C858);
  sub_100064C78(v1, v0 + 16);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 192);
  if (v7)
  {
    v9 = swift_slowAlloc(22, -1);
    v22 = swift_slowAlloc(64, -1);
    v23 = v22;
    *(_DWORD *)v9 = 136446466;
    type = v6;
    sub_100064C78(v0 + 16, v0 + 56);
    v10 = sub_100007E8C((uint64_t *)&unk_1011AB388);
    v11 = String.init<A>(describing:)(v0 + 56, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 96) = sub_100322200(v11, v12, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104);
    swift_bridgeObjectRelease(v13);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 104) = v8;
    swift_errorRetain(v8);
    v14 = sub_100007E8C(&qword_1011A14B0);
    v15 = String.init<A>(describing:)(v0 + 104, v14);
    v17 = v16;
    *(_QWORD *)(v0 + 112) = sub_100322200(v15, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, type, "Failed to perform drop on destination=%{public}s. Error=%{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 192));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  v18 = *(_QWORD *)(v0 + 168);
  v19 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E0908()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10004BA30(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_10004BA30(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_10004BA30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  sub_1002E4338(*(_QWORD *)(v0 + 104), *(void **)(v0 + 112));

  return v0;
}

uint64_t sub_1002E0974()
{
  uint64_t v0;

  sub_1002E0908();
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t type metadata accessor for DragDropController()
{
  return objc_opt_self(_TtC5Music18DragDropController);
}

uint64_t type metadata accessor for DragDropController.DragDelegate()
{
  return objc_opt_self(_TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate);
}

uint64_t type metadata accessor for DragDropController.DropDelegate()
{
  return objc_opt_self(_TtCC5Music18DragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate);
}

void sub_1002E09F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  double (**v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double (**v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;

  if (*(_BYTE *)(v0 + 88) == 1 && (v1 = *(_QWORD *)(v0 + 24)) != 0)
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *(char **)(v0 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dragDelegate);
    if (v3)
    {
      swift_retain(*(_QWORD *)(v0 + 32));
      v4 = v3;
    }
    else
    {
      v5 = objc_allocWithZone((Class)type metadata accessor for CollectionViewDragDropController.DragDelegate());
      v4 = (char *)objc_msgSend(v5, "init", swift_retain(v2).n128_f64[0]);
    }
    v6 = swift_allocObject(&unk_1010BE440, 24, 7);
    swift_weakInit(v6 + 16, v0);
    v7 = (_QWORD *)swift_allocObject(&unk_1010BE530, 40, 7);
    v7[2] = v6;
    v7[3] = v1;
    v7[4] = v2;
    v8 = &v4[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_dragItemsProvider];
    v9 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_dragItemsProvider];
    v10 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_dragItemsProvider
                       + 8];
    *(_QWORD *)v8 = sub_1002E3F54;
    *((_QWORD *)v8 + 1) = v7;
    sub_100048AAC(v1, v2);
    v11 = v3;
    v12 = v4;
    sub_10004BA30(v9, v10);
    v13 = swift_allocObject(&unk_1010BE440, 24, 7);
    swift_weakInit(v13 + 16, v0);
    v14 = (double (**)(uint64_t))&v12[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionWillBegin];
    v15 = *(_QWORD *)&v12[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionWillBegin];
    v16 = *(_QWORD *)&v12[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionWillBegin
                        + 8];
    *v14 = sub_1002E3F60;
    v14[1] = (double (*)(uint64_t))v13;
    sub_10004BA30(v15, v16);
    v17 = swift_allocObject(&unk_1010BE440, 24, 7);
    swift_weakInit(v17 + 16, v0);
    v18 = (double (**)(uint64_t))&v12[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionDidEnd];
    v19 = *(_QWORD *)&v12[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionDidEnd];
    v20 = *(_QWORD *)&v12[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate_onDragSessionDidEnd
                        + 8];
    *v18 = sub_1002E3F78;
    v18[1] = (double (*)(uint64_t))v17;
    swift_retain(v17);
    sub_10004BA30(v19, v20);
    sub_10004BA30(v1, v2);

    swift_release(v17);
    v21 = v12;
    sub_1002E0EB8(v4, &OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dragDelegate, (SEL *)&selRef_setDragDelegate_);

  }
  else
  {
    sub_1002E0EB8(0, &OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dragDelegate, (SEL *)&selRef_setDragDelegate_);
  }
}

void sub_1002E0C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void (**v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id (*v17)(uint64_t, uint64_t);
  id (**v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double (**v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;

  if (*(_BYTE *)(v0 + 88) == 1 && (v1 = *(_QWORD *)(v0 + 40)) != 0)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(char **)(v0 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dropDelegate);
    if (v3)
    {
      swift_retain(*(_QWORD *)(v0 + 48));
      v4 = v3;
    }
    else
    {
      v5 = objc_allocWithZone((Class)type metadata accessor for CollectionViewDragDropController.DropDelegate());
      v4 = (char *)objc_msgSend(v5, "init", swift_retain(v2).n128_f64[0]);
    }
    v6 = &v4[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_canHandleSession];
    v7 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_canHandleSession];
    v8 = *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_canHandleSession
                      + 8];
    *(_QWORD *)v6 = sub_1002DF748;
    *((_QWORD *)v6 + 1) = 0;
    v9 = v3;
    v10 = v4;
    sub_10004BA30(v7, v8);
    v11 = swift_allocObject(&unk_1010BE440, 24, 7);
    swift_weakInit(v11 + 16, v0);
    v12 = (void (*)(uint64_t, uint64_t))swift_allocObject(&unk_1010BE468, 40, 7);
    *((_QWORD *)v12 + 2) = v11;
    *((_QWORD *)v12 + 3) = v1;
    *((_QWORD *)v12 + 4) = v2;
    v13 = (void (**)(uint64_t, uint64_t))&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop];
    v14 = *(_QWORD *)&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop];
    v15 = *(_QWORD *)&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop
                        + 8];
    *v13 = sub_1002E3CD4;
    v13[1] = v12;
    swift_retain(v2);
    sub_10004BA30(v14, v15);
    v16 = swift_allocObject(&unk_1010BE440, 24, 7);
    swift_weakInit(v16 + 16, v0);
    v17 = (id (*)(uint64_t, uint64_t))swift_allocObject(&unk_1010BE490, 40, 7);
    *((_QWORD *)v17 + 2) = v16;
    *((_QWORD *)v17 + 3) = v1;
    *((_QWORD *)v17 + 4) = v2;
    v18 = (id (**)(uint64_t, uint64_t))&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidUpdate];
    v19 = *(_QWORD *)&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidUpdate];
    v20 = *(_QWORD *)&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidUpdate
                        + 8];
    *v18 = sub_1002E3CE4;
    v18[1] = v17;
    swift_retain(v2);
    sub_10004BA30(v19, v20);
    v21 = swift_allocObject(&unk_1010BE440, 24, 7);
    swift_weakInit(v21 + 16, v0);
    v22 = (double (**)(uint64_t))&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidExitOrEnd];
    v23 = *(_QWORD *)&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidExitOrEnd];
    v24 = *(_QWORD *)&v10[OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onDropSessionDidExitOrEnd
                        + 8];
    *v22 = sub_1002E3CF0;
    v22[1] = (double (*)(uint64_t))v21;
    swift_retain(v21);
    sub_10004BA30(v23, v24);
    sub_10004BA30(v1, v2);

    swift_release(v21);
    v25 = v10;
    sub_1002E0EB8(v4, &OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dropDelegate, (SEL *)&selRef_setDropDelegate_);

  }
  else
  {
    sub_1002E0EB8(0, &OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dropDelegate, (SEL *)&selRef_setDropDelegate_);
  }
}

void sub_1002E0E90(void *a1)
{
  sub_1002E0EB8(a1, &OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dragDelegate, (SEL *)&selRef_setDragDelegate_);
}

void sub_1002E0EA4(void *a1)
{
  sub_1002E0EB8(a1, &OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dropDelegate, (SEL *)&selRef_setDropDelegate_);
}

void sub_1002E0EB8(void *a1, _QWORD *a2, SEL *a3)
{
  uint64_t v3;
  id v6;
  id v7;
  BOOL v8;
  id v9;
  id v10;

  v6 = *(id *)(v3 + *a2);
  *(_QWORD *)(v3 + *a2) = a1;
  v7 = a1;
  v10 = v7;
  if (a1)
  {
    if (v6)
      v8 = v7 == v6;
    else
      v8 = 0;
    v9 = v7;
    if (!v8)
      goto LABEL_10;
  }
  else if (v6)
  {
    v9 = 0;
LABEL_10:
    objc_msgSend(*(id *)(v3 + 16), *a3, v9);
  }

}

uint64_t sub_1002E0F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void (*v7)(_BYTE *, __n128);
  uint64_t v8;
  __n128 v9;
  _BYTE v12[24];

  v3 = sub_100007E8C(&qword_1011AB300);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_activeDropContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_activeDropContext, v12, 33, 0);
  sub_1002E3CF8(a1, v6);
  swift_endAccess(v12);
  v7 = *(void (**)(_BYTE *, __n128))(v1 + 72);
  if (v7)
  {
    v8 = *(_QWORD *)(v1 + 80);
    sub_10004A160(v6, (uint64_t)v5, &qword_1011AB300);
    v9 = swift_retain(v8);
    v7(v5, v9);
    sub_10004BA30((uint64_t)v7, v8);
    sub_10004FF60((uint64_t)v5, &qword_1011AB300);
  }
  return sub_10004FF60(a1, &qword_1011AB300);
}

id sub_1002E1490(char *a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  char *v7;
  char *v8;
  char *v9;
  objc_class *v10;
  objc_super v12;

  v7 = &a1[*a3];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &a1[*a4];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &a1[*a5];
  v10 = (objc_class *)a6(0);
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v12.receiver = a1;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, "init");
}

id sub_1002E14F4()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for CollectionViewDragDropController.DragDelegate);
}

uint64_t sub_1002E1524(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(_QWORD, _QWORD), _QWORD *a5, _QWORD *a6)
{
  a4(*(_QWORD *)(a1 + *a3), *(_QWORD *)(a1 + *a3 + 8));
  sub_10004BA30(*(_QWORD *)(a1 + *a5), *(_QWORD *)(a1 + *a5 + 8));
  return sub_10004BA30(*(_QWORD *)(a1 + *a6), *(_QWORD *)(a1 + *a6 + 8));
}

_QWORD *sub_1002E157C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  id v19;
  void (*v20)(_QWORD);
  char *v21;
  void *v22;
  id v23;
  Class isa;
  id v25;
  uint64_t v26;
  char v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v35;
  char v36;
  _OWORD v37[2];
  _QWORD v38[4];
  _BYTE v39[24];

  v10 = sub_100007E8C((uint64_t *)&unk_1011AB398);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DragItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v39, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v18 = Strong;
    v19 = *(id *)(Strong + 16);
    v35 = a5;
    v20 = a4;
    v21 = v16;
    v22 = a1;
    v23 = v19;
    swift_release(v18);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v25 = objc_msgSend(v23, "cellForItemAtIndexPath:", isa);

    a1 = v22;
    v16 = v21;
    a4 = v20;

    if (v25)
    {
      objc_msgSend(v25, "frame");

    }
  }
  a4(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
  {
    sub_10005B6C0((uint64_t)v12, (uint64_t)v16, type metadata accessor for DragItem);
    v27 = sub_1000FA1F8();
    v28 = objc_msgSend(a1, "localContext");
    if (v28)
    {
      v29 = v28;
      _bridgeAnyObjectToAny(_:)(v37, v28);
      swift_unknownObjectRelease(v29);
    }
    else
    {
      memset(v37, 0, sizeof(v37));
    }
    sub_1001EBCB4((uint64_t)v37, (uint64_t)v38);
    if (v38[3])
    {
      if ((swift_dynamicCast(&v36, v38, (char *)&type metadata for Any + 8, &type metadata for DragDropSessionType, 6) & 1) != 0)
      {
        if (v27 == 3 || v36 != v27)
        {
          sub_10005B748((uint64_t)v16, type metadata accessor for DragItem);
          return _swiftEmptyArrayStorage;
        }
LABEL_20:
        v31 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v32 = swift_allocObject(v31, 40, 7);
        *(_OWORD *)(v32 + 16) = xmmword_100EA7A90;
        v33 = sub_1000FD2B0();
        *(_QWORD *)(v32 + 32) = v33;
        v38[0] = v32;
        specialized Array._endMutation()(v33);
        v26 = v38[0];
        sub_10005B748((uint64_t)v16, type metadata accessor for DragItem);
        return (_QWORD *)v26;
      }
    }
    else
    {
      sub_10004FF60((uint64_t)v38, &qword_10119DCC0);
    }
    if (v27 == 3)
    {
      v30 = 0;
    }
    else
    {
      LOBYTE(v38[0]) = v27;
      v30 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v38, &type metadata for DragDropSessionType);
    }
    objc_msgSend(a1, "setLocalContext:", v30);
    swift_unknownObjectRelease(v30);
    goto LABEL_20;
  }
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011AB398);
  return _swiftEmptyArrayStorage;
}

double sub_1002E18A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = (uint64_t *)Strong;
    v7 = *(_QWORD *)(Strong + 96);
    *(_QWORD *)(Strong + 96) = a1;
    swift_unknownObjectRetain_n(a1, 2);
    swift_unknownObjectRelease(v7);
    v8 = (void (*)(uint64_t))v6[7];
    if (v8)
    {
      v9 = v6[8];
      v10 = v6[12];
      sub_100048AAC(v6[7], v9);
      v12 = swift_unknownObjectRetain(v10, v11);
      v8(v12);
      sub_10004BA30((uint64_t)v8, v9);
      swift_release(v6);
      swift_unknownObjectRelease(a1);
      a1 = v10;
    }
    else
    {
      swift_release(v6);
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  }
  return result;
}

double sub_1002E1978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = (uint64_t *)Strong;
    v6 = *(_QWORD *)(Strong + 96);
    v5[12] = 0;
    swift_unknownObjectRelease(v6);
    v7 = (void (*)(uint64_t))v5[7];
    if (v7)
    {
      v8 = v5[8];
      v9 = v5[12];
      sub_100048AAC(v5[7], v8);
      v11 = swift_unknownObjectRetain(v9, v10);
      v7(v11);
      sub_10004BA30((uint64_t)v7, v8);
      swift_release(v5);
      *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1002E1A30(char *a1, uint64_t a2, void *a3, uint64_t a4, _QWORD *a5)
{
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v9;
  id v10;
  uint64_t v11;
  char *v12;
  char v13;

  v5 = &a1[*a5];
  v6 = *(uint64_t (**)(uint64_t))v5;
  if (*(_QWORD *)v5)
  {
    v9 = *((_QWORD *)v5 + 1);
    v10 = a3;
    swift_unknownObjectRetain(a4, v11);
    v12 = a1;
    sub_100048AAC((uint64_t)v6, v9);
    v13 = v6(a4);
    sub_10004BA30((uint64_t)v6, v9);

    swift_unknownObjectRelease(a4);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

void sub_1002E1CE4(char *a1, uint64_t a2, void *a3, uint64_t a4, _QWORD *a5, void (*a6)(void (*)(uint64_t), uint64_t), void (*a7)(void (*)(uint64_t), uint64_t))
{
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;

  v7 = &a1[*a5];
  v8 = *(void (**)(uint64_t))v7;
  if (*(_QWORD *)v7)
  {
    v13 = *((_QWORD *)v7 + 1);
    v14 = a3;
    swift_unknownObjectRetain(a4, v15);
    v16 = a1;
    a6(v8, v13);
    v8(a4);
    a7(v8, v13);

    swift_unknownObjectRelease(a4);
  }
}

id sub_1002E1E28()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for CollectionViewDragDropController.DropDelegate);
}

BOOL sub_1002E1E9C()
{
  _QWORD *v0;
  uint64_t v1;

  swift_getObjectType();
  v0 = sub_1002DF74C();
  v1 = v0[2];
  swift_bridgeObjectRelease(v0);
  return v1 != 0;
}

void sub_1002E1ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, __n128))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t Strong;
  __n128 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  _BYTE v21[24];

  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_getObjectType();
  v10 = sub_1002DF74C();
  swift_beginAccess(a3 + 16, v21, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(id *)(Strong + 16);
    v12 = swift_release(v13);
  }
  else
  {
    v14 = 0;
  }
  v15 = a4(a2, v12);
  if (*(_QWORD *)(v15 + 16))
  {
    TaskPriority.init(rawValue:)(21);
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
    v17 = (_QWORD *)swift_allocObject(&unk_1010BE4B8, 56, 7);
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    v17[5] = v10;
    v17[6] = v14;
    v18 = v14;
    v19 = sub_1000E8908((uint64_t)v9, (uint64_t)&unk_1011AB350, (uint64_t)v17);

    swift_release(v19);
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A13B0);
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v15);

  }
}

uint64_t sub_1002E206C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch(sub_1002E2088, 0, 0);
}

uint64_t sub_1002E2088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1002E4798;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(*(_QWORD *)(v0 + 16), (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_1011AB360, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_1002E2124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;

  v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A13B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[23] = swift_task_alloc(v6);
  v5[24] = swift_task_alloc(v6);
  return swift_task_switch(sub_1002E2194, 0, 0);
}

uint64_t sub_1002E2194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  __int128 *v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v0 + 16);
    v35 = (__int128 *)(v0 + 56);
    v34 = *(void **)(v0 + 176);
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      v6 = *(_QWORD *)(v0 + 168);
      sub_100064C78(v4, (uint64_t)v3);
      v7 = *(_QWORD *)(v0 + 40);
      v8 = *(_QWORD *)(v0 + 48);
      sub_100007E68(v3, v7);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v8) & 1) == 0)
        break;
      v36 = v2;
      v10 = *(_QWORD *)(v0 + 184);
      v9 = *(_QWORD *)(v0 + 192);
      v12 = *(_QWORD *)(v0 + 168);
      v11 = *(_QWORD *)(v0 + 176);
      v13 = type metadata accessor for TaskPriority(0);
      v14 = *(_QWORD *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
      sub_100064C78((uint64_t)v3, (uint64_t)v35);
      v15 = (_QWORD *)swift_allocObject(&unk_1010BE4E0, 88, 7);
      v15[2] = 0;
      v16 = v15 + 2;
      v15[3] = 0;
      sub_100064C48(v35, (uint64_t)(v15 + 4));
      v15[9] = v12;
      v15[10] = v11;
      sub_10004A160(v9, v10, (uint64_t *)&unk_1011A13B0);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
      swift_bridgeObjectRetain();
      v17 = v34;
      v19 = *(_QWORD *)(v0 + 184);
      if ((_DWORD)v10 == 1)
      {
        sub_10004FF60(*(_QWORD *)(v0 + 184), (uint64_t *)&unk_1011A13B0);
        v20 = 0;
      }
      else
      {
        v21 = TaskPriority.rawValue.getter(v18);
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        v20 = v21;
      }
      v22 = *v16;
      if (*v16)
      {
        v23 = v15[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v22, v25);
        v26 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v23);
        v28 = v27;
        swift_unknownObjectRelease(v22);
      }
      else
      {
        v26 = 0;
        v28 = 0;
      }
      v3 = (_QWORD *)(v0 + 16);
      v29 = **(_QWORD **)(v0 + 152);
      v30 = swift_allocObject(&unk_1010BE508, 32, 7);
      *(_QWORD *)(v30 + 16) = &unk_1011AB370;
      *(_QWORD *)(v30 + 24) = v15;
      v31 = v28 | v26;
      if (v28 | v26)
      {
        v31 = v0 + 96;
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 104) = 0;
        *(_QWORD *)(v0 + 112) = v26;
        *(_QWORD *)(v0 + 120) = v28;
      }
      v5 = *(_QWORD *)(v0 + 192);
      *(_QWORD *)(v0 + 128) = 1;
      *(_QWORD *)(v0 + 136) = v31;
      *(_QWORD *)(v0 + 144) = v29;
      swift_task_create(v20 | 0x3100, v0 + 128, (char *)&type metadata for () + 8, &unk_1011AB378, v30);
      swift_release();
      sub_10004FF60(v5, (uint64_t *)&unk_1011A13B0);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
      v4 += 40;
      v2 = v36 - 1;
      if (v36 == 1)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v3);
  }
LABEL_15:
  v32 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E246C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  v7 = type metadata accessor for Notice(0);
  v6[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[19] = v8;
  v6[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AB380) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[21] = swift_task_alloc(v9);
  v6[22] = swift_task_alloc(v9);
  return swift_task_switch(sub_1002E2504, 0, 0);
}

uint64_t sub_1002E2504()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[15];
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[23] = v5;
  *v5 = v0;
  v5[1] = sub_1002E2588;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v7)(v0[22], v0[16], v2, v3);
}

uint64_t sub_1002E2588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002E47A8;
  else
    v3 = sub_1002E25EC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002E25EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  sub_10004A160(*(_QWORD *)(v0 + 176), v1, &qword_1011AB380);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 168);
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011AB380);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 136);
    sub_10005B6C0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 160), type metadata accessor for Notice);
    if (v5)
    {
      v6 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 200) = v6;
      *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v7);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
      return swift_task_switch(sub_1002E2718, v8, v9);
    }
    v4 = *(_QWORD *)(v0 + 176);
    sub_10005B748(*(_QWORD *)(v0 + 160), type metadata accessor for Notice);
  }
  sub_10004FF60(v4, &qword_1011AB380);
  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E2718()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = UIView.noticePresenter.getter();
  return swift_task_switch(sub_1002E2760, 0, 0);
}

uint64_t sub_1002E2760(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 216);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 200);
    *(_QWORD *)(v1 + 224) = *(_QWORD *)(*(_QWORD *)v2 + 192);
    *(_QWORD *)(v1 + 232) = static MainActor.shared.getter(a1);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_1002E2828, v4, v5);
  }
  else
  {
    v7 = *(_QWORD *)(v1 + 176);
    sub_10005B748(*(_QWORD *)(v1 + 160), type metadata accessor for Notice);
    sub_10004FF60(v7, &qword_1011AB380);
    v8 = *(_QWORD *)(v1 + 168);
    v9 = *(_QWORD *)(v1 + 160);
    swift_task_dealloc(*(_QWORD *)(v1 + 176));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1002E2828()
{
  _QWORD *v0;
  void (*v1)(uint64_t, _QWORD);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(uint64_t, _QWORD))v0[28];
  v2 = v0[27];
  v3 = v0[20];
  swift_release(v0[29]);
  v1(v3, 0);
  swift_release(v2);
  return swift_task_switch(sub_1002E4794, 0, 0);
}

id sub_1002E2888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t Strong;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v36;
  id v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[32];

  v8 = sub_100007E8C(&qword_1011AB300);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  a3 += 16;
  v11 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 0);
  swift_beginAccess(a3, v48, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v13 = Strong;
    v14 = v11;
    v15 = a4(a2);
    v16 = v15;
    if (!*(_QWORD *)(v15 + 16))
    {
      swift_bridgeObjectRelease(v15);
      v29 = type metadata accessor for CollectionViewDragDropController.DropContext(0);
      v30 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
      v30(v10, 1, 1, v29);
      sub_1002E0F30((uint64_t)v10);
      sub_10004A160(a2, (uint64_t)v10 + *(int *)(v29 + 24), (uint64_t *)&unk_1011A3D50);
      *v10 = a1;
      v10[1] = v14;
      v30(v10, 0, 1, v29);
      v31 = v14;
LABEL_15:
      v11 = v31;
      swift_unknownObjectRetain(a1, v32);
LABEL_16:
      sub_1002E0F30((uint64_t)v10);

      swift_release(v13);
      return v11;
    }

    swift_getObjectType();
    v17 = sub_1002DF74C();
    v18 = *(_QWORD *)(v16 + 16);
    if (v18)
    {
      v37 = v14;
      v38 = a2;
      v19 = v16 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_100064C78(v19, (uint64_t)&v39);
        v21 = v40;
        v20 = v41;
        sub_100007E68(&v39, v40);
        if (((*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 16))(v17, v21, v20) & 1) != 0)
          break;
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v39);
        v19 += 40;
        if (!--v18)
        {
          swift_bridgeObjectRelease(v16);
          v14 = v37;
          a2 = v38;
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease(v16);
      sub_100064C48(&v39, (uint64_t)&v42);
      swift_bridgeObjectRelease(v16);
      v14 = v37;
      a2 = v38;
      if (!*((_QWORD *)&v43 + 1))
        goto LABEL_14;
    }
    else
    {
LABEL_8:
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
      swift_bridgeObjectRelease(v16);
      if (!*((_QWORD *)&v43 + 1))
      {
LABEL_14:
        swift_bridgeObjectRelease(v17);
        sub_10004FF60((uint64_t)&v42, &qword_1011AB308);
        v33 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 1);

        v34 = type metadata accessor for CollectionViewDragDropController.DropContext(0);
        sub_10004A160(a2, (uint64_t)v10 + *(int *)(v34 + 24), (uint64_t *)&unk_1011A3D50);
        *v10 = a1;
        v10[1] = v33;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v10, 0, 1, v34);
        v31 = v33;
        goto LABEL_15;
      }
    }
    sub_100064C48(&v42, (uint64_t)v45);
    v22 = v46;
    v23 = v47;
    sub_100007E68(v45, v46);
    v24 = (void *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v23 + 8))(v17, v22, v23);
    swift_bridgeObjectRelease(v17);
    objc_opt_self(UICollectionViewDropProposal);
    v25 = (id)swift_dynamicCastObjCClass(v24);
    if (!v25)
    {

      v25 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 0);
    }

    v26 = v25;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v45);
    v27 = type metadata accessor for CollectionViewDragDropController.DropContext(0);
    sub_10004A160(a2, (uint64_t)v10 + *(int *)(v27 + 24), (uint64_t *)&unk_1011A3D50);
    *v10 = a1;
    v10[1] = v26;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 0, 1, v27);
    swift_unknownObjectRetain(a1, v28);
    v11 = v26;
    goto LABEL_16;
  }
  return v11;
}

double sub_1002E2C58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = sub_100007E8C(&qword_1011AB300);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v11, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = type metadata accessor for CollectionViewDragDropController.DropContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    sub_1002E0F30((uint64_t)v5);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002E2D10()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10004BA30(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_10004BA30(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_10004BA30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  sub_10004FF60(v0 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_activeDropContext, &qword_1011AB300);

  return v0;
}

uint64_t sub_1002E2D8C()
{
  uint64_t v0;

  sub_1002E2D10();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002E2DB0()
{
  return type metadata accessor for CollectionViewDragDropController(0);
}

uint64_t type metadata accessor for CollectionViewDragDropController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011AB038, (uint64_t)&nominal type descriptor for CollectionViewDragDropController);
}

void sub_1002E2DCC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_100EB38F8;
  v4[2] = &unk_100EB38F8;
  v4[3] = &unk_100EB38F8;
  v4[4] = &unk_100EB38F8;
  v4[5] = &unk_100EB3910;
  v4[6] = &unk_100EB3928;
  sub_10015C698(319, (unint64_t *)&unk_1011AB048, type metadata accessor for CollectionViewDragDropController.DropContext);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100EB3928;
    v4[9] = &unk_100EB3928;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

uint64_t type metadata accessor for CollectionViewDragDropController.DropContext(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AB2B8, (uint64_t)&nominal type descriptor for CollectionViewDragDropController.DropContext);
}

uint64_t type metadata accessor for CollectionViewDragDropController.DragDelegate()
{
  return objc_opt_self(_TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DragDelegate);
}

uint64_t type metadata accessor for CollectionViewDragDropController.DropDelegate()
{
  return objc_opt_self(_TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate);
}

uint64_t *sub_1002E2ED4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  id v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = (void *)a2[1];
    a1[1] = (uint64_t)v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for IndexPath(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_unknownObjectRetain(v4, v13);
    v14 = v6;
    if (v12(v9, 1, v10))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_1002E2FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_unknownObjectRelease(*(_QWORD *)a1);

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t *sub_1002E3058(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  id v13;
  uint64_t v14;

  v4 = *a2;
  v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = (uint64_t)v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_unknownObjectRetain(v4, v12);
  v13 = v5;
  if (v11(v8, 1, v9))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t *sub_1002E3128(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v6, a2);
  swift_unknownObjectRelease(v7);
  v8 = (void *)a2[1];
  v9 = (void *)a1[1];
  a1[1] = (uint64_t)v8;
  v10 = v8;

  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

_OWORD *sub_1002E325C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t *sub_1002E3318(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v6);
  v7 = (void *)a1[1];
  a1[1] = a2[1];

  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1002E3440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E344C);
}

uint64_t sub_1002E344C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1002E34CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E34D8);
}

char *sub_1002E34D8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_1002E3550(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10015C698(319, (unint64_t *)&unk_1011D0A90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DragDropController.DropContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = (uint64_t)v4;
  swift_unknownObjectRetain(v3, a2);
  v5 = v4;
  return a1;
}

void destroy for DragDropController.DropContext(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);

}

uint64_t *assignWithCopy for DragDropController.DropContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4, a2);
  swift_unknownObjectRelease(v5);
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = (uint64_t)v6;
  v8 = v6;

  return a1;
}

_QWORD *assignWithTake for DragDropController.DropContext(_QWORD *a1, _OWORD *a2)
{
  void *v4;

  swift_unknownObjectRelease(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for DragDropController.DropContext()
{
  return &type metadata for DragDropController.DropContext;
}

_QWORD *sub_1002E36DC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __n128 v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t i;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for GenericMusicItem(0);
  v39 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v38 - v10;
  v12 = objc_msgSend(v1, "localDragSession", v9);
  if (!v12)
  {
    v42 = 0u;
    v43 = 0u;
LABEL_9:
    sub_10004FF60((uint64_t)&v42, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v4, 1, 1, v5);
    goto LABEL_10;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "localContext");
  swift_unknownObjectRelease(v13);
  if (v14)
  {
    _bridgeAnyObjectToAny(_:)(&v40, v14);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  sub_1001EBCB4((uint64_t)&v40, (uint64_t)&v42);
  if (!*((_QWORD *)&v43 + 1))
    goto LABEL_9;
  v15 = swift_dynamicCast(v4, &v42, (char *)&type metadata for Any + 8, v5, 6);
  v16 = v39;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v4, v15 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v5) != 1)
  {
    v17 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v11, v4, v5);
    v18 = sub_100866E98(0);
    v19 = sub_10047D540((uint64_t)v18);
    v20 = swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v11, v5, v20);
    return v19;
  }
LABEL_10:
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A20D0);
  v21 = objc_msgSend(v1, "localDragSession");
  if (!v21)
  {
    v42 = 0u;
    v43 = 0u;
LABEL_25:
    sub_10004FF60((uint64_t)&v42, &qword_10119DCC0);
    return _swiftEmptyArrayStorage;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "localContext");
  swift_unknownObjectRelease(v22);
  if (v23)
  {
    _bridgeAnyObjectToAny(_:)(&v40, v23);
    swift_unknownObjectRelease(v23);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  sub_1001EBCB4((uint64_t)&v40, (uint64_t)&v42);
  if (!*((_QWORD *)&v43 + 1))
    goto LABEL_25;
  v24 = sub_100007E8C((uint64_t *)&unk_1011AB338);
  if ((swift_dynamicCast(&v40, &v42, (char *)&type metadata for Any + 8, v24, 6) & 1) == 0)
    return _swiftEmptyArrayStorage;
  v25 = *(_QWORD *)(v40 + 16);
  if (v25)
  {
    v26 = v40 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    v27 = *(_QWORD *)(v39 + 72);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    v38 = v40;
    swift_bridgeObjectRetain();
    v29 = _swiftEmptyArrayStorage;
    do
    {
      v28(v7, v26, v5);
      v30 = sub_100866E98(0);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
        v29 = sub_1004326A4(0, v29[2] + 1, 1, v29);
      v32 = v29[2];
      v31 = v29[3];
      if (v32 >= v31 >> 1)
        v29 = sub_1004326A4((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
      v29[2] = v32 + 1;
      v29[v32 + 4] = v30;
      v26 += v27;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease_n(v38, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v40);
    v29 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)&v42 = _swiftEmptyArrayStorage;
  v34 = v29[2];
  if (v34)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v34; ++i)
    {
      v36 = swift_bridgeObjectRetain();
      sub_1008062A8(v36);
    }
    swift_bridgeObjectRelease(v29);
  }
  swift_bridgeObjectRelease(v29);
  v37 = v42;
  v19 = sub_10047D540(v42);
  swift_bridgeObjectRelease(v37);
  return v19;
}

uint64_t sub_1002E3B4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_BYTE *)(v9 + 88) = 1;
  *(_QWORD *)(v9 + 96) = 0;
  v17 = v9 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_activeDropContext;
  v18 = type metadata accessor for CollectionViewDragDropController.DropContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dragDelegate) = 0;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC5Music32CollectionViewDragDropController_dropDelegate) = 0;
  v19 = *(_QWORD *)(v9 + 24);
  v20 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  v21 = a1;
  sub_100048AAC(a2, a3);
  sub_10004BA30(v19, v20);
  v22 = *(_QWORD *)(v9 + 40);
  v23 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  sub_100048AAC(a4, a5);
  sub_10004BA30(v22, v23);
  v24 = *(_QWORD *)(v9 + 56);
  v25 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v9 + 56) = a6;
  *(_QWORD *)(v9 + 64) = a7;
  sub_100048AAC(a6, a7);
  sub_10004BA30(v24, v25);
  v26 = *(_QWORD *)(v9 + 72);
  v27 = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v9 + 72) = a8;
  *(_QWORD *)(v9 + 80) = a9;
  sub_100048AAC(a8, a9);
  sub_10004BA30(v26, v27);
  sub_1002E09F4();
  sub_1002E0C20();
  return v9;
}

uint64_t sub_1002E3CAC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002E3CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002E1ED0(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t, __n128))(v2 + 24));
}

id sub_1002E3CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E2888(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24));
}

double sub_1002E3CF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E2C58(a1, v1);
}

uint64_t sub_1002E3CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011AB300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E3D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_1011AB34C);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10006AEE4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_1002E2088, 0, 0);
}

uint64_t sub_1002E3DBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1011AB35C);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_10006AEE4;
  return sub_1002E2124(a1, a2, v6, v7, v8);
}

uint64_t sub_1002E3E3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v8 = v1[9];
  v7 = v1[10];
  v9 = (_QWORD *)swift_task_alloc(dword_1011AB36C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_1002E246C(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1002E3EBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E3EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011ABD7C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011ABD78 + dword_1011ABD78))(a1, v4);
}

_QWORD *sub_1002E3F54(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E157C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32));
}

double sub_1002E3F60(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E18A4(a1, v1);
}

double sub_1002E3F78(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E1978(a1, v1);
}

uint64_t sub_1002E3F90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_BYTE *)(v9 + 88) = 1;
  *(_OWORD *)(v9 + 96) = 0u;
  *(_OWORD *)(v9 + 112) = 0u;
  *(_OWORD *)(v9 + 128) = 0u;
  *(_QWORD *)(v9 + 144) = 0;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  v17 = a1;
  sub_100048AAC(a2, a3);
  sub_10004BA30(0, 0);
  v18 = *(_QWORD *)(v9 + 40);
  v19 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  sub_100048AAC(a4, a5);
  sub_10004BA30(v18, v19);
  v20 = *(_QWORD *)(v9 + 56);
  v21 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v9 + 56) = a6;
  *(_QWORD *)(v9 + 64) = a7;
  sub_100048AAC(a6, a7);
  sub_10004BA30(v20, v21);
  v22 = *(_QWORD *)(v9 + 72);
  v23 = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v9 + 72) = a8;
  *(_QWORD *)(v9 + 80) = a9;
  sub_100048AAC(a8, a9);
  sub_10004BA30(v22, v23);
  sub_1002DE864();
  sub_1002DEA8C();
  return v9;
}

id sub_1002E409C(void *a1)
{
  Class isa;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  uint64_t v12[2];
  char v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (!v3)
    return 0;
  v4 = objc_msgSend(v3, "window");

  if (v4)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIDragPreviewParameters), "init");
    sub_1001D7AF4(v3, (uint64_t)v12);
    v5 = v14;
    v6 = v15;
    v7 = v16;
    v8 = v17;
    v9 = Corner.radius(in:)(v12[0], v14, v15, v16, v17, v12[1], v13);
    v10 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v5, v6, v7, v8, v9);
    objc_msgSend(v4, "setVisiblePath:", v10);

  }
  else
  {

  }
  return v4;
}

void sub_1002E41F8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(id, char *);
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(id, char *))(v1
                                         + OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop);
  if (v6)
  {
    v7 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtCC5Music32CollectionViewDragDropControllerP33_A2D93B940709760920FE5612D029DD8B12DropDelegate_onPerformDrop
                   + 8);
    v8 = objc_msgSend(a1, "session", swift_retain().n128_f64[0]);
    v9 = objc_msgSend(a1, "destinationIndexPath");
    if (v9)
    {
      v10 = v9;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v9);

      v11 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 0, 1, v11);
    }
    else
    {
      v12 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
    }
    v6(v8, v5);
    swift_unknownObjectRelease(v8);
    sub_10004BA30((uint64_t)v6, v7);
    sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011A3D50);
  }
}

void sub_1002E4338(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_unknownObjectRelease(a1);

  }
}

id sub_1002E4368(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DF828(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

double sub_1002E4374(uint64_t a1)
{
  uint64_t v1;

  return sub_1002DFB54(a1, v1);
}

uint64_t sub_1002E4380()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002E43AC(uint64_t a1)
{
  uint64_t v1;

  sub_1002DFC10(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1002E43BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002E43F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_1011AB3AC);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10005AEE4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_1002DFDB4, 0, 0);
}

uint64_t sub_1002E4470(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1011AB3BC);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_10006AEE4;
  return sub_1002DFEA0(a1, a2, v6, v7, v8);
}

uint64_t sub_1002E44F0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  return swift_deallocObject(v0, 88);
}

uint64_t sub_1002E452C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v8 = v1[9];
  v7 = v1[10];
  v9 = (_QWORD *)swift_task_alloc(dword_1011AB3CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_1002E01E8(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1002E45AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011ABD7C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011ABD78 + dword_1011ABD78))(a1, v4);
}

id sub_1002E461C(id result, void *a2)
{
  if (result)
  {
    swift_unknownObjectRetain(result, a2);
    return a2;
  }
  return result;
}

uint64_t sub_1002E4648()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

_QWORD *sub_1002E4674(void *a1)
{
  uint64_t v1;

  return sub_1002DF100(a1, *(void (**)(__n128))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t storeEnumTagSinglePayload for DragDropSessionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002E46CC + 4 * byte_100EB37E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002E4700 + 4 * byte_100EB37E0[v4]))();
}

uint64_t sub_1002E4700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E4708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002E4710);
  return result;
}

uint64_t sub_1002E471C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002E4724);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002E4728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E4730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DragDropSessionType()
{
  return &type metadata for DragDropSessionType;
}

unint64_t sub_1002E4750()
{
  unint64_t result;

  result = qword_1011AB3F0;
  if (!qword_1011AB3F0)
  {
    result = swift_getWitnessTable(&unk_100EB39C4, &type metadata for DragDropSessionType);
    atomic_store(result, (unint64_t *)&qword_1011AB3F0);
  }
  return result;
}

id sub_1002E47AC(uint64_t a1)
{
  id v2;
  Class isa;
  id v4;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v2, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(a1).n128_f64[0]);

  return v4;
}

uint64_t sub_1002E4830(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(_QWORD *, void *);
  uint64_t v7;
  id v8;
  _QWORD v10[4];

  v6 = *(void (**)(_QWORD *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v10[3] = swift_getObjectType();
  v10[0] = a2;
  swift_retain(v5);
  swift_unknownObjectRetain(a2, v7);
  v8 = a3;
  v6(v10, a3);
  swift_release(v5);

  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v10);
}

void sub_1002E48B8()
{
  qword_1011AB4C0 = 0x4034000000000000;
}

void sub_1002E48C8()
{
  qword_1011AB4C8 = 0x4040000000000000;
}

void sub_1002E48D8()
{
  qword_1011AB4D0 = 0x4034000000000000;
}

void sub_1002E48E8()
{
  qword_1011AB4D8 = 0x4036000000000000;
}

void sub_1002E48F8()
{
  qword_1011AB4E0 = 0x4020000000000000;
}

void sub_1002E4908()
{
  qword_1011AB4E8 = 0x4030000000000000;
}

void sub_1002E4918()
{
  qword_1011AB4F0 = 0x404E000000000000;
}

void sub_1002E4928()
{
  qword_1011AB4F8 = 0x4010000000000000;
}

id sub_1002E4938(uint64_t a1, void *a2, int a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  Class isa;
  id v54;
  id result;
  void *v56;
  double v57;
  double v58;
  _BYTE *v59;
  void *v60;
  double v61;
  double v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  Class v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t *v83;
  uint64_t v84;
  _BYTE *v85;
  double v86;
  double *v87;
  double v88;
  char v89;
  void *v90;
  _BYTE *v91;
  int v92;
  uint64_t v93;
  int v94;
  _BYTE *v95;
  id v96;
  void *v97;
  id *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSString v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSString v112;
  double v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  __n128 v120;
  char **v121;
  id v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  char *v132;
  Swift::String v133;
  Swift::String v134;
  Swift::String v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  NSString v143;
  double v144;
  uint64_t v145;
  double v146;
  uint64_t v147;
  NSString v148;
  char *v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  objc_class *v156;
  id v157;
  void *v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  char *v163;
  id v164;
  uint64_t v165;
  void (*v166)(unint64_t (*)(void *), uint64_t, __n128);
  __n128 v167;
  id v168;
  id v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  _BYTE *v183;
  uint64_t v184;
  id v185;
  id v186;
  id v187;
  objc_super v188;
  uint64_t v189;

  LODWORD(v187) = a3;
  v6 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v6);
  v175 = (uint64_t)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v8);
  v171 = (char *)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v176 = *(_QWORD *)(v10 - 8);
  v177 = v10;
  __chkstk_darwin(v10);
  v181 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v178);
  v179 = (id *)((char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v173 = (char *)&v170 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v172 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_isInModal;
  v3[OBJC_IVAR____TtC5Music26StaticLyricsViewController_isInModal] = 0;
  v18 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_modelPlayEvent;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music26StaticLyricsViewController_modelPlayEvent] = 0;
  v19 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsLoader;
  v20 = objc_allocWithZone((Class)type metadata accessor for LyricsLoader());
  v21 = v3;
  *(_QWORD *)&v3[v19] = objc_msgSend(v20, "init");
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration] = 0;
  v22 = &v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart];
  v23 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_isVisible] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_backgroundObserver] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_foregroundObserver] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_presentationObserver] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_dismissalObserver] = 0;
  v24 = &v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController____lazy_storage___actionMetricsReportingContext];
  v25 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v182 = a1;
  sub_10005B704(a1, (uint64_t)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_song], type metadata accessor for StaticLyricsViewController.Song);
  v26 = *(void **)&v3[v18];
  *(_QWORD *)&v3[v18] = a2;
  v174 = a2;

  v3[v17] = (_BYTE)v187;
  v27 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v28 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_artworkImageView;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_artworkImageView] = v27;
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = objc_msgSend(*(id *)&v21[v28], "layer");
  if (qword_10119BDF0 != -1)
    swift_once(&qword_10119BDF0, sub_1002E4928);
  objc_msgSend(v29, "setCornerRadius:", *(double *)&qword_1011AB4F8);

  v180 = v28;
  v30 = objc_msgSend(*(id *)&v21[v28], "layer");
  objc_msgSend(v30, "setMasksToBounds:", 1);

  v31 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v32 = (void *)objc_opt_self(UIFont);
  v33 = objc_msgSend(v32, "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  objc_msgSend(v31, "setFont:", v33);

  v34 = (void *)objc_opt_self(UIColor);
  v35 = objc_msgSend(v34, "secondaryLabelColor");
  objc_msgSend(v31, "setTextColor:", v35);

  v183 = v3;
  v184 = v17;
  if ((v3[v17] & 1) == 0)
  {
    v36 = v172;
    v37 = String.LocalizationValue.init(stringLiteral:)(0x53434952594CLL, 0xE600000000000000);
    v38 = v173;
    static Locale.current.getter(v37);
    String.init(localized:table:bundle:locale:comment:)(v36, 0, 0, 0, v38, 0, 0, 256);
    v40 = v39;
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setText:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

  }
  v42 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v42, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v43 = objc_msgSend(v32, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v42, "setFont:", v43);

  v44 = objc_msgSend(v34, "labelColor");
  objc_msgSend(v42, "setTextColor:", v44);

  v45 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v46 = objc_msgSend(v32, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v45, "setFont:", v46);

  v47 = objc_msgSend(v34, "secondaryLabelColor");
  objc_msgSend(v45, "setTextColor:", v47);

  v48 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v49 = swift_allocObject(v48, 56, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100EA7AD0;
  *(_QWORD *)(v49 + 32) = v31;
  *(_QWORD *)(v49 + 40) = v42;
  *(_QWORD *)(v49 + 48) = v45;
  v189 = v49;
  specialized Array._endMutation()(v49);
  v50 = v189;
  v51 = objc_allocWithZone((Class)UIStackView);
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v185 = v31;
  v52 = v42;
  v186 = v45;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v54 = objc_msgSend(v51, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v50).n128_f64[0]);

  objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v54, "setAxis:", 1);
  objc_msgSend(v54, "setBaselineRelativeArrangement:", 1);
  v187 = v52;
  result = objc_msgSend(v52, "font");
  if (!result)
  {
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v56 = result;
  if (qword_10119BDC8 != -1)
    swift_once(&qword_10119BDC8, sub_1002E48D8);
  objc_msgSend(v56, "_scaledValueForValue:", *(double *)&qword_1011AB4D0);
  v58 = v57;

  objc_msgSend(v54, "setCustomSpacing:afterView:", v185, v58);
  result = objc_msgSend(v186, "font");
  v59 = v183;
  if (!result)
    goto LABEL_52;
  v60 = result;
  if (qword_10119BDD0 != -1)
    swift_once(&qword_10119BDD0, sub_1002E48E8);
  objc_msgSend(v60, "_scaledValueForValue:", *(double *)&qword_1011AB4D8);
  v62 = v61;

  objc_msgSend(v54, "setCustomSpacing:afterView:", v187, v62);
  v63 = swift_allocObject(v48, 48, 7);
  *(_OWORD *)(v63 + 16) = xmmword_100EA7DB0;
  v64 = *(void **)&v21[v180];
  *(_QWORD *)(v63 + 32) = v64;
  *(_QWORD *)(v63 + 40) = v54;
  v189 = v63;
  specialized Array._endMutation()(v63);
  v65 = v189;
  v66 = objc_allocWithZone((Class)UIStackView);
  v67 = v64;
  v68 = v54;
  v69 = Array._bridgeToObjectiveC()().super.isa;
  v70 = objc_msgSend(v66, "initWithArrangedSubviews:", v69, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v71 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_stackView;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_stackView] = v70;
  objc_msgSend(v70, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v21[v71], "setAxis:", 0);
  v72 = qword_10119BDD8;
  v73 = *(id *)&v21[v71];
  if (v72 != -1)
    swift_once(&qword_10119BDD8, sub_1002E48F8);
  objc_msgSend(v73, "setSpacing:", *(double *)&qword_1011AB4E0);

  objc_msgSend(*(id *)&v21[v71], "setAlignment:", 3);
  v74 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v75 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_activityIndicator;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_activityIndicator] = v74;
  objc_msgSend(v74, "setHidesWhenStopped:", 1);
  objc_msgSend(*(id *)&v21[v75], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  type metadata accessor for StaticLyricsContentViewController();
  v76 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v77 = v76;
  v78 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_contentViewController;
  *(_QWORD *)&v21[OBJC_IVAR____TtC5Music26StaticLyricsViewController_contentViewController] = v76;
  v80 = v181;
  v79 = v182;
  if (v59[v184] == 1)
  {
    v81 = qword_10119BDC0;
    v82 = v76;
    if (v81 != -1)
      swift_once(&qword_10119BDC0, sub_1002E48C8);
    v83 = &qword_1011AB4C8;
  }
  else
  {
    v84 = qword_10119BDB8;
    v85 = v76;
    if (v84 != -1)
      swift_once(&qword_10119BDB8, sub_1002E48B8);
    v83 = &qword_1011AB4C0;
  }
  v86 = *(double *)v83;
  v87 = (double *)&v77[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_contentMargins];
  v88 = *(double *)&v77[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_contentMargins];
  v89 = v77[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_contentMargins + 8];
  *v87 = v86;
  *((_BYTE *)v87 + 8) = 0;
  if ((v89 & 1) != 0 || v88 != v86)
    sub_1008032A0();

  result = objc_msgSend(*(id *)&v21[v78], "view");
  if (!result)
    goto LABEL_53;
  v90 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v91 = *(_BYTE **)&v21[v78];
  v92 = v59[v184];
  v93 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_shouldShowReportConcernButton;
  v94 = v91[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_shouldShowReportConcernButton];
  v91[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_shouldShowReportConcernButton] = v92;
  if (v92 != v94)
  {
    v95 = v91;
    v96 = sub_100802E7C();
    objc_msgSend(v96, "setHidden:", (v91[v93] & 1) == 0);

    sub_1008032A0();
  }
  v97 = v68;
  v98 = v179;
  sub_10005B704(v79, (uint64_t)v179, type metadata accessor for StaticLyricsViewController.Song);
  if (swift_getEnumCaseMultiPayload(v98, v178) == 1)
  {
    v99 = (*(uint64_t (**)(char *, id *, uint64_t))(v176 + 32))(v80, v98, v177);
    Song.title.getter(v99);
    v101 = v100;
    v102 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v103 = swift_bridgeObjectRelease(v101).n128_u64[0];
    objc_msgSend(v187, "setText:", v102, v103);

    v105 = Song.artistName.getter(v104);
    v107 = v106;
    swift_bridgeObjectRelease(v106);
    v109 = HIBYTE(v107) & 0xF;
    if ((v107 & 0x2000000000000000) == 0)
      v109 = v105 & 0xFFFFFFFFFFFFLL;
    if (v109)
    {
      Song.artistName.getter(v108);
    }
    else
    {
      v127 = Song.composerName.getter(v108);
      if (!v128)
        goto LABEL_32;
      v129 = v127;
      v130 = (void *)v128;
      v131 = HIBYTE(v128) & 0xF;
      if ((v128 & 0x2000000000000000) == 0)
        v131 = v127 & 0xFFFFFFFFFFFFLL;
      if (!v131)
      {
        swift_bridgeObjectRelease(v128);
        goto LABEL_32;
      }
      v132 = v171;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 1);
      v133._countAndFlagsBits = 2128194;
      v133._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v133);
      v134._countAndFlagsBits = v129;
      v134._object = v130;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v134);
      swift_bridgeObjectRelease(v130);
      v135._countAndFlagsBits = 0;
      v135._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v135);
      v136 = v172;
      v137 = String.LocalizationValue.init(stringInterpolation:)(v132);
      v138 = v173;
      static Locale.current.getter(v137);
      String.init(localized:table:bundle:locale:comment:)(v136, 0, 0, 0, v138, 0, 0, 256);
    }
    v111 = v110;
    v112 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v113 = swift_bridgeObjectRelease(v111).n128_u64[0];
    objc_msgSend(v186, "setText:", v112, v113);

LABEL_32:
    v114 = (char *)*(id *)&v21[v78];
    v115 = Song.catalogID.getter(v114);
    v117 = (uint64_t *)&v114[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier];
    v118 = *(_QWORD *)&v114[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier + 8];
    if (v116)
      v119 = v115;
    else
      v119 = 0;
    *v117 = v119;
    v117[1] = v116;

    v120 = swift_bridgeObjectRelease(v118);
    (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v80, v177, v120);
    v121 = &selRef_referralObject;
    goto LABEL_48;
  }
  v122 = *v98;
  v123 = objc_msgSend(*v98, "title");
  if (v123)
  {
    v124 = v123;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
    v126 = v125;

  }
  else
  {
    v139 = v172;
    v140 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    v141 = v173;
    static Locale.current.getter(v140);
    String.init(localized:table:bundle:locale:comment:)(v139, 0, 0, 0, v141, 0, 0, 256);
    v126 = v142;
  }
  v121 = &selRef_referralObject;
  v143 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v144 = swift_bridgeObjectRelease(v126).n128_u64[0];
  objc_msgSend(v187, "setText:", v143, v144);

  MPModelSong.preferredBylineAttribution(with:radioStation:)((uint64_t)&off_1010AB4B8, 0);
  if (v145)
  {
    v147 = v145;
    v148 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v146 = swift_bridgeObjectRelease(v147).n128_u64[0];
  }
  else
  {
    v148 = 0;
  }
  objc_msgSend(v186, "setText:", v148, v146);

  v149 = (char *)*(id *)&v21[v78];
  v150 = objc_msgSend(v122, "identifiers");
  v151 = MPIdentifierSet.bestStoreIdentifier.getter();
  v153 = v152;

  v154 = (uint64_t *)&v149[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier];
  v155 = *(_QWORD *)&v149[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier + 8];
  *v154 = v151;
  v154[1] = v153;

  swift_bridgeObjectRelease(v155);
LABEL_48:
  v156 = (objc_class *)type metadata accessor for StaticLyricsViewController(0);
  v188.receiver = v21;
  v188.super_class = v156;
  v157 = objc_msgSendSuper2(&v188, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v157, "setViewRespectsSystemMinimumLayoutMargins:", 0);
  result = objc_msgSend(v157, v121[483]);
  if (result)
  {
    v158 = result;
    objc_msgSend(result, "setPreservesSuperviewLayoutMargins:", 1);

    v159 = v157;
    UIViewController.playActivityFeatureIdentifier.setter(0x10u);

    v160 = SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor();
    v161 = v175;
    sub_10005B704(v160, v175, type metadata accessor for SymbolButton.Configuration);
    v162 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
    v163 = SymbolButton.init(configuration:handler:)(v161, 0, 0);
    v164 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v163);
    (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *(_QWORD *)v163) + 0x100))(0xD00000000000001ALL, 0x8000000100E35960);
    objc_msgSend(v163, "setContextMenuInteractionEnabled:", 1);
    objc_msgSend(v163, "setShowsMenuAsPrimaryAction:", 1);
    v165 = swift_allocObject(&unk_1010BE738, 24, 7);
    swift_unknownObjectWeakInit(v165 + 16, v159);
    v166 = *(void (**)(unint64_t (*)(void *), uint64_t, __n128))((swift_isaMask & *(_QWORD *)v163)
                                                                                           + 0x228);
    v167 = swift_retain();
    v166(sub_1002ED358, v165, v167);
    v168 = objc_msgSend(v159, "navigationItem", swift_release().n128_f64[0]);
    v169 = v164;
    objc_msgSend(v168, "setRightBarButtonItem:", v169);

    sub_10005B748(v79, type metadata accessor for StaticLyricsViewController.Song);
    return v159;
  }
LABEL_54:
  __break(1u);
  return result;
}

unint64_t sub_1002E59B8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *Strong;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t inited;
  _QWORD *v57;
  uint64_t v58;
  id v59;
  id v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v69;
  uint64_t v70;
  void (*v71)(_QWORD *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _QWORD *v79;
  char *v80;
  unint64_t v81;
  _BYTE v82[72];
  uint64_t v83;
  _BYTE v84[72];
  uint64_t v85;
  _OWORD v86[3];
  uint64_t v87;
  unsigned __int8 v88;
  __int128 v89;
  _QWORD v90[10];
  _OWORD v91[10];
  _OWORD v92[3];
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  _QWORD v96[5];
  char v97;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v4);
  v79 = (void **)((char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v6);
  v81 = (unint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v78 = type metadata accessor for UUID(0);
  *(_QWORD *)&v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  *(_QWORD *)&v76 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v74 = v11;
  *(_QWORD *)&v75 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v80 = (char *)&v69 - v13;
  v14 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v14);
  v16 = (void **)((char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v17);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v69 - v24;
  a2 += 16;
  swift_beginAccess(a2, &v85, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v27 = Strong;
  objc_msgSend(a1, "bounds");
  v96[0] = a1;
  v96[1] = v28;
  v96[2] = v29;
  v96[3] = v30;
  v96[4] = v31;
  v97 = 0;
  v32 = a1;
  PresentationSource.init(viewController:position:)(v27, (uint64_t)v96, (uint64_t)v84);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v33(v25, 1, 1, v9);
  sub_10005B704((uint64_t)v27 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_song, (uint64_t)v16, type metadata accessor for StaticLyricsViewController.Song);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    sub_10004FF60((uint64_t)v25, &qword_10119E480);
    (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v25, v16, v9);
    v33(v25, 0, 1, v9);
  }
  else
  {
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(*v16, v9, &protocol witness table for Song);
    sub_10004FF60((uint64_t)v25, &qword_10119E480);
    sub_100065228((uint64_t)v22, (uint64_t)v25, &qword_10119E480);
  }
  sub_10004A160((uint64_t)v25, (uint64_t)v19, &qword_10119E480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v19, 1, v9) == 1)
  {

    sub_10004FF60((uint64_t)v25, &qword_10119E480);
    sub_100064B4C((uint64_t)v84);
    sub_10004FF60((uint64_t)v19, &qword_10119E480);
    return 0;
  }
  else
  {
    v72 = v25;
    v35 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v36 = v80;
    v35(v80, v19, v9);
    v37 = sub_100048748(&qword_1011A4F48, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    v38 = dispatch thunk of CustomStringConvertible.description.getter(v9, v37);
    v69 = v39;
    v70 = v38;
    v71 = *(void (**)(_QWORD *, char *, uint64_t))(v10 + 16);
    v40 = (char *)v75;
    v71((_QWORD *)v75, v36, v9);
    sub_100064AC8((uint64_t)v84, (uint64_t)v92);
    v73 = v10;
    v41 = *(unsigned __int8 *)(v10 + 80);
    v42 = (v41 + 16) & ~v41;
    v43 = (v74 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    v44 = v9;
    v45 = (v43 + 79) & 0xFFFFFFFFFFFFFFF8;
    v46 = swift_allocObject(&unk_1010BE788, v45 + 8, v41 | 7);
    v35((char *)(v46 + v42), v40, v44);
    sub_100064EF0((uint64_t)v92, v46 + v43);
    *(_QWORD *)(v46 + v45) = v27;
    v47 = v27;
    v48 = v76;
    v49 = UUID.init()(v47);
    v50 = UUID.uuidString.getter(v49);
    v52 = v51;
    (*(void (**)(uint64_t, _QWORD))(v77 + 8))(v48, v78);
    sub_1000E3EE4();
    ActionMenu.init(_:image:style:id:debugDescription:builder:)(0, 0xE000000000000000, 0, 0, v50, v52, v70, v69, (uint64_t)v86, (uint64_t)sub_1002ED414, v46);
    v77 = v86[1];
    v78 = v86[0];
    v76 = v86[2];
    v53 = v87;
    v54 = v88;
    v55 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
    v75 = v89;
    inited = swift_initStackObject(v55, &v83);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 56) = v44;
    *(_QWORD *)(inited + 64) = &protocol witness table for Song;
    v57 = sub_100049F68((_QWORD *)(inited + 32));
    v71(v57, v36, v44);
    v58 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v81, 1, 1, v58);
    v59 = v47;
    v60 = objc_msgSend(v59, "traitCollection");
    v61 = sub_10013ADBC();
    UITraitCollection.subscript.getter(v92, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v61);

    v62 = *(_QWORD *)&v92[0];
    v63 = v79;
    sub_1002E916C(v79);
    v64 = type metadata accessor for Actions.MetricsReportingContext(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 0, 1, v64);
    v92[0] = v78;
    v92[1] = v77;
    v92[2] = v76;
    v93 = v53;
    v94 = v54;
    v95 = v75;
    sub_100064AC8((uint64_t)v84, (uint64_t)v82);
    sub_1002A49E4((uint64_t)v86);
    if (qword_10119B8C0 != -1)
      swift_once(&qword_10119B8C0, sub_1000E9774);
    v65 = qword_10119B8C8;
    v66 = (id)qword_10124C798;
    if (v65 != -1)
      swift_once(&qword_10119B8C8, sub_1000E97E8);
    v67 = qword_10124C7A0;
    swift_retain();
    sub_100495120(inited, 0, v81, v62, v66, v67, (unint64_t)v63, (uint64_t)v92, v90, (uint64_t)v82, 1);
    sub_100065228((uint64_t)v90, (uint64_t)v91, (uint64_t *)&unk_1011A3DC0);
    if (*((_QWORD *)&v91[0] + 1))
    {
      v91[7] = v91[2];
      v91[8] = v91[3];
      v91[9] = v91[4];
      v91[5] = v91[0];
      v91[6] = v91[1];
      sub_100007E8C((uint64_t *)&unk_1011A20B0);
      v34 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)&off_1010AB800);
      sub_1000E411C((uint64_t)v90);
    }
    else
    {
      v34 = 0;
    }

    swift_release();
    sub_1002A4984(v86);

    swift_bridgeObjectRelease(inited);
    swift_release();
    sub_1002A4984(v86);
    sub_10004FF60((uint64_t)v82, (uint64_t *)&unk_1011A20F0);
    sub_10004FF60((uint64_t)v63, (uint64_t *)&unk_1011A9990);
    sub_10004FF60(v81, (uint64_t *)&unk_1011A20C0);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v80, v44);
    sub_10004FF60((uint64_t)v72, &qword_10119E480);
    sub_100064B4C((uint64_t)v84);
  }
  return v34;
}

uint64_t sub_1002E619C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v18[7];
  uint64_t v19;
  char v20[56];
  _OWORD v21[7];
  uint64_t v22;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = Song.id.getter(v6);
  v9 = v8;
  sub_100064AC8(a2, (uint64_t)v21);
  sub_1002E916C(v5);
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
  v11 = swift_allocObject(&unk_1010BE7B0, 120, 7);
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v9;
  *(_BYTE *)(v11 + 32) = 2;
  *(_QWORD *)(v11 + 40) = 0;
  sub_100064EF0((uint64_t)v21, v11 + 48);
  Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)(v7, v9, 1735290739, 0xE400000000000000, 20, (uint64_t)variable initialization expression of _NSRange.NSRangeIterator.current, 0, (uint64_t)&unk_1011A2138, (uint64_t)v20, v11, (uint64_t)v5);
  static Actions.ReportConcern.action(context:)(v20, (uint64_t)v21);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_release();
  v18[4] = v21[4];
  v18[5] = v21[5];
  v18[6] = v21[6];
  v19 = v22;
  v18[0] = v21[0];
  v18[1] = v21[1];
  v18[2] = v21[2];
  v18[3] = v21[3];
  v12 = sub_1000E3EE4();
  v13 = static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v18, (uint64_t)&type metadata for ActionType, (uint64_t)&type metadata for Actions.ReportConcern.Context, (uint64_t)&type metadata for () + 8, v12, (uint64_t)&protocol witness table for Actions.ReportConcern.Context);
  sub_10013B1C8(v21);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A2140);
  v15 = swift_allocObject(v14, 40, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v15 + 32) = v13;
  v16 = static ActionMenu.ElementBuilder.buildBlock(_:)(v15, (uint64_t)&type metadata for ActionType, v12);
  swift_bridgeObjectRelease(v15);
  return v16;
}

void sub_1002E63EC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  _BYTE v21[16];
  id v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  objc_super v29;

  v1 = v0;
  v2 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v3);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v26 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Song(0);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v27 = &v21[-v8];
  v25 = v9;
  __chkstk_darwin(v10);
  v24 = &v21[-v11];
  v28 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v28);
  v23 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v14 = (objc_class *)type metadata accessor for StaticLyricsViewController(0);
  v29.receiver = v0;
  v29.super_class = v14;
  objc_msgSendSuper2(&v29, "viewDidLoad");
  v15 = objc_msgSend(v0, "view");
  if (v15)
  {
    v16 = v15;
    v22 = (id)objc_opt_self(UIColor);
    v17 = objc_msgSend(v22, "systemBackgroundColor");
    objc_msgSend(v16, "setBackgroundColor:", v17);

    v18 = objc_msgSend(v1, "navigationItem");
    objc_msgSend(v18, "setLargeTitleDisplayMode:", 2);

    v19 = objc_msgSend(v1, "navigationItem");
    v20 = (char *)&loc_1002E6688 + dword_1002E7AFC[sub_1008EC73C()];
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1002E7A10);
}

void sub_1002E7B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  _BYTE v8[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(id *)(Strong + OBJC_IVAR____TtC5Music26StaticLyricsViewController_artworkImageView);

    objc_msgSend(v7, "setImage:", a2);
  }
}

uint64_t sub_1002E7B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A1440);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[8] = v11;
  v5[9] = v12;
  return swift_task_switch(sub_1002E7C6C, v11, v12);
}

uint64_t sub_1002E7C6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  double v12;
  id v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v1 + 48);
  Song.artwork.getter(a1);
  v3 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v1 + 80) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 88) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v1 + 48);
    swift_release();
    sub_10004FF60(v5, &qword_1011A1440);
    v6 = *(_QWORD *)(v1 + 40);
    v7 = *(_QWORD *)(v1 + 48);
    v8 = *(_QWORD *)(v1 + 32);
    objc_msgSend(*(id *)(*(_QWORD *)(v1 + 24) + OBJC_IVAR____TtC5Music26StaticLyricsViewController_artworkImageView), "setImage:", 0);
    swift_task_dealloc(v7);
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    if (qword_10119BDE8 != -1)
      swift_once(&qword_10119BDE8, sub_1002E4918);
    v10 = *(_QWORD *)(v1 + 32);
    v11 = *(_QWORD *)(v1 + 40);
    v12 = *(double *)&qword_1011AB4F0;
    v13 = objc_msgSend(*(id *)(v1 + 24), "traitCollection");
    objc_msgSend(v13, "displayScale");
    v15 = v14;

    v16 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 1, 1, v16);
    v17 = type metadata accessor for Artwork.ImageFormat(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
    *(_QWORD *)(v1 + 96) = v18;
    *v18 = v1;
    v18[1] = sub_1002E7E4C;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 32), 0, 0, v12, v12, 1.0 / v15);
  }
}

uint64_t sub_1002E7E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *v2;
  v5 = (*v2)[12];
  (*v2)[13] = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[5];
    sub_10004FF60(v4[4], (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v6, (uint64_t *)&unk_1011A14A0);
    v7 = v4[8];
    v8 = v4[9];
    v9 = sub_1002E7FA0;
  }
  else
  {
    v10 = v4[10];
    v11 = v4[11];
    v13 = v4[5];
    v12 = v4[6];
    v14 = v4[4];
    v4[14] = a1;
    sub_10004FF60(v14, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v13, (uint64_t *)&unk_1011A14A0);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
    v7 = v4[8];
    v8 = v4[9];
    v9 = sub_1002E7F20;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_1002E7F20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 56));
  v1 = *(void **)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC5Music26StaticLyricsViewController_artworkImageView), "setImage:", v1);

  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E7FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002E8014(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  id v13;
  _BYTE v14[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    v12 = swift_allocObject(&unk_1010BE8F0, 56, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = a1;
    *(_QWORD *)(v12 + 32) = a2;
    *(_BYTE *)(v12 + 40) = a3;
    *(_QWORD *)(v12 + 48) = a4;
    v13 = v11;
    sub_10015EB20(a1, a2, a3);
    swift_errorRetain(a4);
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_1002ED808, v12);
    swift_release();

  }
}

id sub_1002E8108(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5)
{
  int v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  id result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[24];

  v10 = ~a4;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_activityIndicator), "stopAnimating", v12);
  if (!v10)
    return (id)sub_1002E9F5C(a5);
  v15 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_contentViewController;
  v16 = *(char **)(a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_contentViewController);
  if ((a4 & 1) == 0)
  {
    v17 = (uint64_t *)&v16[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText];
    v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText + 8];
    *v17 = a2;
    v17[1] = a3;
    v19 = v16;
    sub_10015EB20(a2, a3, a4);
    swift_bridgeObjectRelease(v18);
    sub_100801EB8();

    result = objc_msgSend(*(id *)(a1 + v15), "view");
    if (result)
    {
      v21 = result;
      objc_msgSend(result, "setHidden:", 0);

      Date.init()(v22);
      v23 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 0, 1, v23);
      v24 = a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart;
      swift_beginAccess(a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart, v31, 33, 0);
      sub_1000A5508((uint64_t)v14, v24, (uint64_t *)&unk_1011A30A0);
      return (id)swift_endAccess(v31);
    }
    __break(1u);
    goto LABEL_10;
  }
  sub_10015EB20(a2, a3, a4);
  v25 = v16;
  sub_100803BE0(a2);

  result = objc_msgSend(*(id *)(a1 + v15), "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v26 = result;
  objc_msgSend(result, "setHidden:", 0);

  Date.init()(v27);
  v28 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 0, 1, v28);
  v29 = a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart, v31, 33, 0);
  sub_1000A5508((uint64_t)v14, v29, (uint64_t *)&unk_1011A30A0);
  swift_endAccess(v31);
  return (id)sub_10015EB88(a2, a3, a4);
}

uint64_t sub_1002E838C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002E83E8, 0, 0);
}

uint64_t sub_1002E83E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v3 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 72) = v3;
    *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_1002E84A0, v5, v6);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002E84A0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v1 = v0[8];
  swift_release();
  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsLoader);
  v0[11] = v2;
  v3 = *(int **)((swift_isaMask & *v2) + 0xB0);
  v4 = v3[1];
  v7 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
  v2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[12] = v5;
  *v5 = v0;
  v5[1] = sub_1002E8540;
  return v7(v0[6]);
}

uint64_t sub_1002E8540(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v8 = *v4;
  v9 = *(_QWORD *)(*v4 + 96);
  *(_QWORD *)(*v4 + 104) = v3;
  swift_task_dealloc(v9);
  if (v3)
  {
    v10 = sub_1002E86CC;
  }
  else
  {

    *(_BYTE *)(v8 + 128) = a3;
    *(_QWORD *)(v8 + 112) = a2;
    *(_QWORD *)(v8 + 120) = a1;
    v10 = sub_1002E85D0;
  }
  return swift_task_switch(v10, 0, 0);
}

uint64_t sub_1002E85D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(void **)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_BYTE *)(v0 + 128) & 1;
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = v3;
  sub_100055BBC(v1, v2, v5);
  v9 = static MainActor.shared.getter(v8);
  v10 = swift_allocObject(&unk_1010BE918, 57, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v10 + 32) = v7;
  *(_QWORD *)(v10 + 40) = v1;
  *(_QWORD *)(v10 + 48) = v2;
  *(_BYTE *)(v10 + 56) = v5;
  sub_100166D14(v4, (uint64_t)&unk_1011AB6A8, v10);
  sub_100055BAC(v1, v2, v5);

  swift_release();
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E86CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(void **)(v0 + 64);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E8710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v7 + 104) = a7;
  *(_QWORD *)(v7 + 72) = a5;
  *(_QWORD *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 64) = a4;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  *(_QWORD *)(v7 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 96) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002E87A8, v11, v12);
}

id sub_1002E87A8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_BYTE *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 64);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_activityIndicator), "stopAnimating", swift_release().n128_f64[0]);
  v3 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_contentViewController;
  v4 = *(char **)(v2 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_contentViewController);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  if ((v1 & 1) != 0)
  {
    sub_100055BBC(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), 1);
    v17 = v4;
    sub_100803BE0(v6);

    result = objc_msgSend(*(id *)(v2 + v3), "view");
    if (result)
    {
      v18 = result;
      v19 = *(_QWORD *)(v0 + 80);
      v20 = *(_QWORD *)(v0 + 88);
      v22 = *(_QWORD *)(v0 + 64);
      v21 = *(_QWORD *)(v0 + 72);
      objc_msgSend(result, "setHidden:", 0);

      Date.init()(v23);
      v24 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 0, 1, v24);
      v25 = v22 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart;
      swift_beginAccess(v22 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart, v0 + 16, 33, 0);
      sub_1000A5508(v20, v25, (uint64_t *)&unk_1011A30A0);
      swift_endAccess(v0 + 16);
      sub_100055BAC(v21, v19, 1);
      goto LABEL_6;
    }
  }
  else
  {
    v7 = (uint64_t *)&v4[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText];
    v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText + 8];
    *v7 = v6;
    v7[1] = v5;
    v9 = v4;
    sub_100055BBC(v6, v5, 0);
    swift_bridgeObjectRelease(v8);
    sub_100801EB8();

    result = objc_msgSend(*(id *)(v2 + v3), "view");
    if (result)
    {
      v11 = result;
      v12 = *(_QWORD *)(v0 + 88);
      v13 = *(_QWORD *)(v0 + 64);
      objc_msgSend(result, "setHidden:", 0);

      Date.init()(v14);
      v15 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
      v16 = v13 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart;
      swift_beginAccess(v13 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart, v0 + 40, 33, 0);
      sub_1000A5508(v12, v16, (uint64_t *)&unk_1011A30A0);
      swift_endAccess(v0 + 40);
LABEL_6:
      swift_task_dealloc(*(_QWORD *)(v0 + 88));
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1002E89FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v18[-v7 - 8];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = Strong + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart, v19, 0, 0);
    sub_10004A160(v15, (uint64_t)v8, (uint64_t *)&unk_1011A30A0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A30A0);
    }
    else
    {
      v16 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
      *(double *)&v14[OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration] = *(double *)&v14[OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration]
                                                                                          - Date.timeIntervalSinceNow.getter(v16);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
      swift_beginAccess(v15, v18, 33, 0);
      sub_1000A5508((uint64_t)v5, v15, (uint64_t *)&unk_1011A30A0);
      swift_endAccess(v18);
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    }

  }
}

void sub_1002E8BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (char *)Strong;
    Date.init()(Strong);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
    v9 = (uint64_t)&v7[OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart], v10, 33, 0);
    sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011A30A0);
    swift_endAccess(v10);

  }
}

void sub_1002E8CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  void *v13;
  _QWORD v14[4];
  _BYTE v15[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music26StaticLyricsViewController_isVisible) != 1)
      goto LABEL_10;
    Notification.object.getter(v14);
    if (!v14[3])
    {

      sub_10004FF60((uint64_t)v14, &qword_10119DCC0);
      return;
    }
    v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    if ((swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, v5, 6) & 1) == 0)
    {
LABEL_10:

      return;
    }
    v6 = v13;
    v7 = objc_msgSend(v4, "parentViewController");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v6, "presentingViewController");
      if (v9)
      {
        v10 = v9;
        v8 = v8;
        v11 = v10;
        v12 = static NSObject.== infix(_:_:)(v11, v8);

        if ((v12 & 1) != 0)
          sub_1002E96B0();
      }

    }
    else
    {

    }
  }
}

void sub_1002E8E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[4];
  _BYTE v21[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (char *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music26StaticLyricsViewController_isVisible) != 1)
      goto LABEL_9;
    Notification.object.getter(v20);
    if (!v20[3])
    {

      sub_10004FF60((uint64_t)v20, &qword_10119DCC0);
      return;
    }
    v8 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    if ((swift_dynamicCast(&v19, v20, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
    {
LABEL_9:

      return;
    }
    v9 = v19;
    v10 = objc_msgSend(v7, "parentViewController");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v9, "presentingViewController");
      if (!v12
        || (v13 = v12,
            v11 = v11,
            v14 = v13,
            v15 = static NSObject.== infix(_:_:)(v14, v11),
            v14,
            v14,
            v11,
            (v15 & 1) == 0))
      {

        return;
      }
      Date.init()(v16);
      v17 = type metadata accessor for Date(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 0, 1, v17);
      v18 = (uint64_t)&v7[OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart];
      swift_beginAccess(&v7[OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart], v20, 33, 0);
      sub_1000A5508((uint64_t)v5, v18, (uint64_t *)&unk_1011A30A0);
      swift_endAccess(v20);

    }
    else
    {

    }
  }
}

uint64_t sub_1002E916C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController____lazy_storage___actionMetricsReportingContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController____lazy_storage___actionMetricsReportingContext, v14, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011A9990);
  v10 = type metadata accessor for Actions.MetricsReportingContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_1002ED50C((uint64_t)v8, (uint64_t)a1);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A9990);
  sub_1002E92E4(v1, a1);
  sub_10005B704((uint64_t)a1, (uint64_t)v5, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v13, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011A9990);
  return swift_endAccess(v13);
}

uint64_t sub_1002E92E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  _QWORD *v46;
  _BYTE v47[24];

  v46 = a2;
  v3 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v3);
  v5 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v6);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v47[-v10 - 8];
  __chkstk_darwin(v12);
  v14 = &v47[-v13 - 8];
  v15 = type metadata accessor for Song(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v47[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v19 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v19);
  v21 = (void **)&v47[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10005B704(a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_song, (uint64_t)v21, v22);
  if (swift_getEnumCaseMultiPayload(v21, v19) == 1)
  {
    v23 = (*(uint64_t (**)(char *, void **, uint64_t))(v16 + 32))(v18, v21, v15);
    v24 = Song.catalogID.getter(v23);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if (v26)
      v27 = v24;
    else
      v27 = 0;
  }
  else
  {
    v28 = *v21;
    v27 = MPModelObject.bestIdentifier(for:)(3, 2u);
    v26 = v29;

  }
  v30 = type metadata accessor for MetricsEvent.Page(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v14, 1, 1, v30);
  if (v26)
  {
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A8780);
    v32 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v5, 1, 1, v32);
    MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:)(v27, v26, 0x73636972794CLL, 0xE600000000000000, (uint64_t)v5, 0, 0, 0, v11, 1, 0, 0);
    v31(v11, 0, 1, v30);
    sub_100065228((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1011A8780);
  }
  sub_10004A160((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_1011A8780);
  sub_10004A160((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_1011A8780);
  v33 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v35 = v34;
  v37 = v36;
  v38 = qword_10119B8B8;
  v39 = (id)*v33;
  if (v38 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v40 = qword_10124C790;
  swift_retain();
  v41 = GroupActivitiesManager.hasJoined.getter();
  v42 = GroupActivitiesManager.participantsCount.getter();
  v43 = (uint64_t *)(v40 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v40 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v47, 0, 0);
  v44 = *v43;
  swift_release();

  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v8, v35, v37, 0, 0, v41 & 1, v46, v42, v44);
  sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A8780);
  return sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A8780);
}

uint64_t sub_1002E96B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v15[-v6];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart, v16, 0, 0);
  sub_10004A160(v12, (uint64_t)v7, (uint64_t *)&unk_1011A30A0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A30A0);
  v14 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
  *(double *)(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration) = *(double *)(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration)
                                                                                       - Date.timeIntervalSinceNow.getter(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
  swift_beginAccess(v12, v15, 33, 0);
  sub_1000A5508((uint64_t)v4, v12, (uint64_t *)&unk_1011A30A0);
  swift_endAccess(v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1002E9860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  _QWORD *v15;
  double v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  uint64_t v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;
  unint64_t v37;
  uint64_t v38;
  double v39;
  id v40;
  id v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  NSString v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  NSString v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  __n128 v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v75 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_contentViewController)
                   + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyrics);
  if (v15)
  {
    v74 = v3;
    swift_retain();
    sub_1002E96B0();
    v16 = *(double *)(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration);
    if (v16 <= 0.0)
    {
      swift_release();
    }
    else
    {
      v73 = v2;
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration) = 0;
      v17 = objc_msgSend(objc_allocWithZone((Class)MPCReportingLyricsViewEvent), "init");
      sub_10005B704(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_song, (uint64_t)v14, type metadata accessor for StaticLyricsViewController.Song);
      if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
      {
        (*(void (**)(char *, id *, uint64_t))(v9 + 32))(v11, v14, v8);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
        MPCReportingLyricsViewEvent.song.setter(v7);
        v76 = 0;
        v77 = 0xE000000000000000;
        _StringGuts.grow(_:)(23);
        v18 = v77;
        v20 = Song.title.getter(v19);
        v22 = v21;
        swift_bridgeObjectRelease(v18);
        v76 = v20;
        v77 = v22;
        v23._countAndFlagsBits = 0x3D64692820;
        v23._object = (void *)0xE500000000000000;
        String.append(_:)(v23);
        v25._countAndFlagsBits = Song.id.getter(v24);
        object = v25._object;
        String.append(_:)(v25);
        swift_bridgeObjectRelease(object);
        v27._countAndFlagsBits = 0x676F6C6174616320;
        v27._object = (void *)0xEB000000003D4449;
        String.append(_:)(v27);
        v29 = Song.catalogID.getter(v28);
        v31 = v30;
        if (!v30)
          v29 = 0;
        v32 = Optional<A>.description.getter(v29, v30);
        v34 = v33;
        swift_bridgeObjectRelease(v31);
        v35._countAndFlagsBits = v32;
        v35._object = v34;
        String.append(_:)(v35);
        swift_bridgeObjectRelease(v34);
        v36._countAndFlagsBits = 41;
        v36._object = (void *)0xE100000000000000;
        String.append(_:)(v36);
        v38 = v76;
        v37 = v77;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
      else
      {
        v40 = *v14;
        objc_msgSend(v17, "setModelSong:", v40);
        v41 = objc_msgSend(v40, "humanDescription");

        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v37 = v42;

      }
      v43 = v75;
      v44 = v15[3];
      if (v44)
      {
        swift_bridgeObjectRetain();
        v45 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v39 = swift_bridgeObjectRelease(v44).n128_u64[0];
      }
      else
      {
        v45 = 0;
      }
      objc_msgSend(v17, "setLyricsID:", v45, v39);

      (*(void (**)(id))(*v15 + 192))(objc_msgSend(v17, "setVisibleDuration:", v16));
      if (v46)
      {
        v48 = v46;
        v49 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v47 = swift_bridgeObjectRelease(v48).n128_u64[0];
      }
      else
      {
        v49 = 0;
      }
      objc_msgSend(v17, "setLanguage:", v49, v47);

      objc_msgSend(v17, "setDisplayType:", 0);
      objc_msgSend(v17, "setModelPlayEvent:", *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_modelPlayEvent));
      v50 = String._bridgeToObjectiveC()();
      objc_msgSend(v17, "setFeatureName:", v50);

      v51 = objc_msgSend(objc_allocWithZone((Class)MPCLyricsReportingController), "init");
      objc_msgSend(v51, "recordLyricsViewEvent:", v17);

      v52 = Logger.lyrics.unsafeMutableAddressor();
      v53 = v73;
      v54 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v43, v52, v73);
      swift_retain_n(v15, 2);
      v55 = swift_bridgeObjectRetain();
      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.default.getter(v56);
      if (os_log_type_enabled(v56, v57))
      {
        v58 = swift_slowAlloc(32, -1);
        v72 = swift_slowAlloc(96, -1);
        v76 = v72;
        *(_DWORD *)v58 = 136446722;
        v71 = v38;
        v59 = v37;
        v60 = v15[2];
        v61 = v15[3];
        swift_bridgeObjectRetain();
        v62 = Optional<A>.description.getter(v60, v61);
        v64 = v63;
        swift_bridgeObjectRelease(v61);
        v78 = sub_100322200(v62, v64, &v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
        v65 = swift_bridgeObjectRelease(v64);
        swift_release_n(v15, 2, v65);
        *(_WORD *)(v58 + 12) = 2082;
        v66 = Double.description.getter(v16);
        v68 = v67;
        v78 = sub_100322200(v66, v67, &v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
        swift_bridgeObjectRelease(v68);
        *(_WORD *)(v58 + 22) = 2082;
        swift_bridgeObjectRetain();
        v78 = sub_100322200(v71, v59, &v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
        swift_bridgeObjectRelease_n(v59, 3);
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Recorded Static PAF Event with id=%{public}s; duration=%{public}ss; song=%{public}s",
          (uint8_t *)v58,
          0x20u);
        v69 = v72;
        swift_arrayDestroy(v72, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v69, -1, -1);
        swift_slowDealloc(v58, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
      }
      else
      {

        swift_release_n(v15, 3, v70);
        swift_bridgeObjectRelease_n(v37, 2);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v53);
      }
    }
  }
}

uint64_t sub_1002E9F5C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __objc2_prot_list **v9;
  __objc2_prot_list **p_base_prots;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  id v37;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSString v52;
  void *v53;
  id v54;
  id v55;
  _BYTE v57[16];
  void **aBlock;
  uint64_t v59;
  void (*v60)(uint64_t, void *);
  void *v61;
  void (*v62)(int);
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;
  char v66;

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = &v57[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (__objc2_prot_list **)(&JSAccount + 40);
  p_base_prots = (__objc2_prot_list **)(&JSAccount + 40);
  if (!a1)
  {
    v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E2F530);
    static Locale.current.getter(v22);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v24 = v23;
    v25 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000029, 0x8000000100E2F550);
    static Locale.current.getter(v25);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
LABEL_13:
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v46 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v28, v38, 1);
    goto LABEL_14;
  }
  v11 = (void *)_convertErrorToNSError(_:)(a1);
  v12 = objc_msgSend(v11, "domain");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v13 == v16 && v15 == v17)
  {
    v21 = swift_bridgeObjectRelease_n(v15, 2).n128_u64[0];
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease(v19);
    v21 = swift_bridgeObjectRelease(v15).n128_u64[0];
    if ((v20 & 1) == 0)
      goto LABEL_12;
  }
  if (objc_msgSend(v11, "code", *(double *)&v21) != (id)-3005)
  {
LABEL_12:

    v47 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E2F580);
    static Locale.current.getter(v47);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v27 = v48;
    v28 = 0;
    p_base_prots = &JSAccount.base_prots;
    v9 = &JSAccount.base_prots;
    goto LABEL_13;
  }
  v29 = String.LocalizationValue.init(stringLiteral:)(0x746963696C707845, 0xEF73636972794C20);
  static Locale.current.getter(v29);
  String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
  v31 = v30;
  v32 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000068, 0x8000000100E2F5A0);
  static Locale.current.getter(v32);
  String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
  v34 = v33;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  v37 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v35, v36, 1);

  v38 = v37;
  v39 = String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  static Locale.current.getter(v39);
  String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
  v41 = v40;
  v42 = swift_allocObject(&unk_1010BE828, 24, 7);
  *(_QWORD *)(v42 + 16) = v1;
  v43 = v1;
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  v62 = sub_1002ED504;
  v63 = v42;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100223938;
  v61 = &unk_1010BE840;
  v45 = _Block_copy(&aBlock);
  swift_release();
  v9 = &JSAccount.base_prots;
  v28 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v44, 0, v45);
  _Block_release(v45);

  p_base_prots = &JSAccount.base_prots;
  objc_msgSend(v38, "addAction:", v28);

  v46 = v38;
LABEL_14:

  v49 = String.okButtonTitle.unsafeMutableAddressor()[1];
  v50 = swift_allocObject(&unk_1010BE7D8, 24, 7);
  *(_QWORD *)(v50 + 16) = v1;
  v51 = v1;
  swift_bridgeObjectRetain();
  v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  v62 = sub_1002ED4E4;
  v63 = v50;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100223938;
  v61 = &unk_1010BE7F0;
  v53 = _Block_copy(&aBlock);
  swift_release();
  v54 = objc_msgSend((id)objc_opt_self(UIAlertAction), (SEL)v9[406], v52, 0, v53);
  _Block_release(v53);

  objc_msgSend(v46, (SEL)p_base_prots[412], v54);
  objc_msgSend(v46, "setPreferredAction:", v54);
  memset(v64, 0, sizeof(v64));
  v65 = 0;
  v66 = -1;
  PresentationSource.init(viewController:position:)(v51, (uint64_t)v64, (uint64_t)&aBlock);
  v55 = v46;
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v55, 1, (id)0xF, (void **)1, 0, 0);

  return sub_100064B4C((uint64_t)&aBlock);
}

void sub_1002EA5C8(int a1, id a2)
{
  id v2;
  void *v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a2, "navigationController");
  if (v2)
  {
    v3 = v2;

  }
  v4 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v4)
  {
    v5 = v4;
    LSApplicationWorkspace.openRestrictions()();

  }
}

void sub_1002EA66C(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "navigationController");
  if (v2)
  {
    v3 = v2;

  }
}

id sub_1002EA700()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StaticLyricsViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002EA838()
{
  return type metadata accessor for StaticLyricsViewController(0);
}

uint64_t type metadata accessor for StaticLyricsViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011AB5A8, (uint64_t)&nominal type descriptor for StaticLyricsViewController);
}

void sub_1002EA854(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[16];

  v8[0] = &unk_100EB3A30;
  v2 = type metadata accessor for StaticLyricsViewController.Song(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v8[2] = &unk_100EB3A48;
    v8[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[8] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_10015C698(319, (unint64_t *)&qword_1011A3050, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v8[9] = *(_QWORD *)(v4 - 8) + 64;
      v8[10] = &unk_100EB3A30;
      v8[11] = &unk_100EB3A48;
      v8[12] = &unk_100EB3A48;
      v8[13] = &unk_100EB3A48;
      v8[14] = &unk_100EB3A48;
      sub_10015C698(319, &qword_1011B8BE0, type metadata accessor for Actions.MetricsReportingContext);
      if (v7 <= 0x3F)
      {
        v8[15] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 16, v8, a1 + 80);
      }
    }
  }
}

uint64_t type metadata accessor for StaticLyricsViewController.Song(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AB628, (uint64_t)&nominal type descriptor for StaticLyricsViewController.Song);
}

char *sub_1002EA970(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for Song(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_1002EAA2C(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for Song(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **sub_1002EAA7C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Song(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **sub_1002EAB0C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for StaticLyricsViewController.Song);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Song(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_1002EABB4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Song(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1002EAC40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for StaticLyricsViewController.Song);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Song(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002EACE4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

void sub_1002EAD58()
{
  void *v0;
  id v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;

  v1 = sub_1002EAFC0();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v1);
  v3 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v2 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v3 >= v2 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v2 > 1, v3 + 1, 1);
  v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v1);
  specialized Array._endMutation()(v4);
  if (sub_1002EB394((uint64_t)v0))
  {
    v5 = sub_1002EB580();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
    specialized Array._endMutation()(v8);
  }
  v9 = objc_msgSend(v0, "navigationItem");
  if (sub_1008EC8F4((uint64_t)_swiftEmptyArrayStorage))
    goto LABEL_10;
  v10 = objc_msgSend(v9, "rightBarButtonItems");
  if (!v10)
    goto LABEL_11;
  v11 = v10;
  v12 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  v14 = sub_1008EC9EC(v13);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1002EC780((uint64_t)v14, (unint64_t)_swiftEmptyArrayStorage, &qword_1011A3F70, UIBarButtonItem_ptr);
  swift_bridgeObjectRelease_n(v14, 2);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if ((v15 & 1) != 0)
  {
LABEL_10:

    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
LABEL_11:
    v16 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v17 = Array.inserting(separator:)((uint64_t)sub_1008ECB38, 0, (uint64_t)_swiftEmptyArrayStorage, v16);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease(v17).n128_f64[0]);

    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
}

id sub_1002EAFC0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  id v35;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[16];
  _QWORD v45[8];
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[16];
  id v52;
  id v53[2];

  v0 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v0);
  v2 = &v37[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v3);
  v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v37[-v7];
  SymbolButton.Configuration.init()((uint64_t)&v37[-v7]);
  static UIView.Corner.rounded.getter(v9);
  v10 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v2, 0, 1, v10);
  sub_1000A5508((uint64_t)v2, (uint64_t)&v8[*(int *)(v3 + 36)], &qword_10119DDD8);
  v11 = SymbolButton.Background.secondary.unsafeMutableAddressor();
  v12 = *v11;
  v13 = (void *)v11[1];
  v15 = v11[2];
  v14 = v11[3];
  v16 = *((_QWORD *)v8 + 24);
  v17 = (void *)*((_QWORD *)v8 + 25);
  v18 = *((_QWORD *)v8 + 26);
  v19 = *((_QWORD *)v8 + 27);
  swift_bridgeObjectRetain();
  v20 = v13;
  sub_10013BA8C(v16, v17, v18, v19);
  *((_QWORD *)v8 + 24) = v12;
  *((_QWORD *)v8 + 25) = v13;
  *((_QWORD *)v8 + 26) = v15;
  *((_QWORD *)v8 + 27) = v14;
  variable initialization expression of SymbolButton.Configuration.symbol((uint64_t)v44);
  v21 = v49;
  v42 = v47;
  v41 = v48;
  v22 = v45[5];
  v40 = v45[6];
  v39 = v45[7];
  v38 = v46;
  v23 = v45[1];
  sub_100065228((uint64_t)&v50, (uint64_t)v53, &qword_10119E580);
  sub_100065228((uint64_t)v45, (uint64_t)&v52, &qword_1011AB660);
  sub_100065228((uint64_t)v44, (uint64_t)v51, &qword_10119DCA0);
  sub_1001C7464((uint64_t)v51);
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v24 = (id)qword_10124D260;
  sub_100065200(&v52);
  v25 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  sub_100065200(v53);
  v26 = *((_QWORD *)v8 + 1);
  v27 = (void *)*((_QWORD *)v8 + 2);
  v28 = *((_QWORD *)v8 + 12);
  v29 = (void *)*((_QWORD *)v8 + 14);

  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v28);

  *(_QWORD *)v8 = 0xD000000000000015;
  *((_QWORD *)v8 + 1) = 0x8000000100E35920;
  *((_QWORD *)v8 + 2) = v24;
  *((_QWORD *)v8 + 3) = v23;
  *((_QWORD *)v8 + 4) = 0x4024000000000000;
  v8[40] = 0;
  *((_QWORD *)v8 + 6) = 6;
  *((_QWORD *)v8 + 7) = v22;
  v30 = v39;
  *((_QWORD *)v8 + 8) = v40;
  *((_QWORD *)v8 + 9) = v30;
  v8[80] = v38;
  v31 = v41;
  *((_QWORD *)v8 + 11) = v42;
  *((_QWORD *)v8 + 12) = v31;
  *((_QWORD *)v8 + 13) = v21;
  *((_QWORD *)v8 + 14) = v25;
  sub_10005B704((uint64_t)v8, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  v32 = swift_allocObject(&unk_1010BE738, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v43);
  v33 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v34 = SymbolButton.init(configuration:handler:)((uint64_t)v5, (uint64_t)sub_10013C2D0, v32);
  (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *(_QWORD *)v34) + 0x100))(0xD000000000000012, 0x8000000100E35940);
  v35 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v34);

  sub_10005B748((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  return v35;
}

BOOL sub_1002EB394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  void *v21;
  unsigned __int8 v23;
  uint64_t v24;

  v2 = type metadata accessor for Song(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10015E580();
  if ((v9 & 1) != 0)
    return 0;
  v10 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v11 = objc_msgSend(v10, "userInterfaceIdiom");

  if (v11 == (id)6)
    return 0;
  sub_10005B704(a1 + OBJC_IVAR____TtC5Music26StaticLyricsViewController_song, (uint64_t)v8, type metadata accessor for StaticLyricsViewController.Song);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v12 = (*(uint64_t (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    Song.catalogID.getter(v12);
    v14 = v13;
    v16 = swift_bridgeObjectRelease(v13);
    if (v14 && (v17 = Song.hasLyrics.getter(v15), (v17 & 1) != 0))
    {
      v18 = Song.hasTimeSyncedLyrics.getter(v17);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if ((v18 & 1) != 0)
        return 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
    }
    return 0;
  }
  v19 = *v8;
  v20 = objc_msgSend(*v8, "lyrics");
  if (!v20)
  {
LABEL_11:

    return 0;
  }
  v21 = v20;
  if ((objc_msgSend(v20, "hasLibraryLyrics") & 1) != 0)
  {

    goto LABEL_11;
  }
  v23 = objc_msgSend(v21, "hasTimeSyncedLyrics");

  return (v23 & 1) != 0;
}

id sub_1002EB580()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  id v37;
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _BYTE *v46;
  _BYTE v47[72];
  _BYTE v48[72];
  _BYTE v49[16];
  _QWORD v50[8];
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[16];
  id v57;
  id v58;
  _BYTE v59[32];
  uint64_t v60;
  char v61;

  v0 = sub_100007E8C(&qword_10119DDD8);
  __chkstk_darwin(v0);
  v2 = &v39[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v3);
  v46 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v39[-v6];
  SymbolButton.Configuration.init()((uint64_t)&v39[-v6]);
  static UIView.Corner.rounded.getter(v8);
  v9 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 0, 1, v9);
  sub_1000A5508((uint64_t)v2, (uint64_t)&v7[*(int *)(v3 + 36)], &qword_10119DDD8);
  v10 = SymbolButton.Background.secondary.unsafeMutableAddressor();
  v11 = *v10;
  v12 = (void *)v10[1];
  v14 = v10[2];
  v13 = v10[3];
  v15 = *((_QWORD *)v7 + 24);
  v16 = (void *)*((_QWORD *)v7 + 25);
  v17 = *((_QWORD *)v7 + 26);
  v18 = *((_QWORD *)v7 + 27);
  swift_bridgeObjectRetain();
  v19 = v12;
  sub_10013BA8C(v15, v16, v17, v18);
  *((_QWORD *)v7 + 24) = v11;
  *((_QWORD *)v7 + 25) = v12;
  *((_QWORD *)v7 + 26) = v14;
  *((_QWORD *)v7 + 27) = v13;
  variable initialization expression of SymbolButton.Configuration.symbol((uint64_t)v49);
  v20 = v54;
  v43 = v53;
  v44 = v52;
  v21 = v50[5];
  v41 = v50[7];
  v42 = v50[6];
  v40 = v51;
  v22 = v50[1];
  sub_100065228((uint64_t)&v55, (uint64_t)&v58, &qword_10119E580);
  sub_100065228((uint64_t)v50, (uint64_t)&v57, &qword_1011AB660);
  sub_100065228((uint64_t)v49, (uint64_t)v56, &qword_10119DCA0);
  sub_1001C7464((uint64_t)v56);
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v23 = (id)qword_10124D260;
  sub_100065200(&v57);
  v24 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  sub_100065200(&v58);
  v26 = *((_QWORD *)v7 + 1);
  v25 = (void *)*((_QWORD *)v7 + 2);
  v27 = *((_QWORD *)v7 + 12);
  v28 = (void *)*((_QWORD *)v7 + 14);

  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v27);

  *(_QWORD *)v7 = 0xD000000000000021;
  *((_QWORD *)v7 + 1) = 0x8000000100E358D0;
  *((_QWORD *)v7 + 2) = v23;
  *((_QWORD *)v7 + 3) = v22;
  *((_QWORD *)v7 + 4) = 0x4024000000000000;
  v7[40] = 0;
  *((_QWORD *)v7 + 6) = 6;
  *((_QWORD *)v7 + 7) = v21;
  v29 = v41;
  *((_QWORD *)v7 + 8) = v42;
  *((_QWORD *)v7 + 9) = v29;
  v7[80] = v40;
  v30 = v43;
  *((_QWORD *)v7 + 11) = v44;
  *((_QWORD *)v7 + 12) = v30;
  *((_QWORD *)v7 + 13) = v20;
  *((_QWORD *)v7 + 14) = v24;
  memset(v59, 0, sizeof(v59));
  v60 = 0;
  v61 = -1;
  v31 = v45;
  PresentationSource.init(viewController:position:)(v31, (uint64_t)v59, (uint64_t)v48);
  v32 = v46;
  sub_10005B704((uint64_t)v7, (uint64_t)v46, type metadata accessor for SymbolButton.Configuration);
  v33 = swift_allocObject(&unk_1010BE738, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, v31);
  sub_100064AC8((uint64_t)v48, (uint64_t)v47);
  v34 = swift_allocObject(&unk_1010BE760, 96, 7);
  *(_QWORD *)(v34 + 16) = v33;
  sub_100064EF0((uint64_t)v47, v34 + 24);
  v35 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v36 = SymbolButton.init(configuration:handler:)((uint64_t)v32, (uint64_t)sub_1002ED34C, v34);
  (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *(_QWORD *)v36) + 0x100))(0xD000000000000012, 0x8000000100E35900);
  v37 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v36);

  sub_100064B4C((uint64_t)v48);
  sub_10005B748((uint64_t)v7, type metadata accessor for SymbolButton.Configuration);
  return v37;
}

void sub_1002EB998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t Strong;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[72];
  _BYTE v34[24];

  v32 = a3;
  v31 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v31);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v31 - v17;
  v19 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v19);
  v21 = (id *)((char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  a2 += 16;
  swift_beginAccess(a2, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v23 = (void *)Strong;
    sub_10005B704(Strong + OBJC_IVAR____TtC5Music26StaticLyricsViewController_song, (uint64_t)v21, type metadata accessor for StaticLyricsViewController.Song);
    if (swift_getEnumCaseMultiPayload(v21, v19) == 1)
    {
      (*(void (**)(char *, id *, uint64_t))(v10 + 32))(v15, v21, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
      sub_100064AC8(v32, (uint64_t)v33);
      v24 = objc_allocWithZone((Class)type metadata accessor for LyricsSharingActivityViewController(0));
      v25 = sub_1001555BC((uint64_t)v12, 0, 0, (uint64_t)v33, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    else
    {
      v26 = *v21;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)(v26, v9, &protocol witness table for Song);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {

        sub_10004FF60((uint64_t)v8, &qword_10119E480);
        return;
      }
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v18, v9);
      sub_100064AC8(v32, (uint64_t)v33);
      v27 = objc_allocWithZone((Class)type metadata accessor for LyricsSharingActivityViewController(0));
      v25 = sub_1001555BC((uint64_t)v15, 0, 0, (uint64_t)v33, 1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    }
    v28 = v23;
    v29 = sub_10076BBD4();

    if (v29)
    {
      *(_QWORD *)v5 = v25;
      v5[8] = 1;
      *((_QWORD *)v5 + 2) = &_swiftEmptySetSingleton;
      swift_storeEnumTagMultiPayload(v5, v31, 2);
      v30 = v25;
      sub_100770824((uint64_t)v5, 0, 0);

      swift_release();
      sub_10005B748((uint64_t)v5, type metadata accessor for AppInterfaceContext.Activity);
    }
    else
    {

    }
  }
}

uint64_t sub_1002EBD18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_1002EBFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  char v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      v7 = *v3++;
      v6 = v7;
      v9 = *v4++;
      v8 = v9;
      if (v6 == 1)
        v10 = 0x657469726F766166;
      else
        v10 = 0x64616F6C6E776F64;
      if (v6)
        v11 = v10;
      else
        v11 = 7105633;
      if (v6)
        v12 = 0xE900000000000073;
      else
        v12 = 0xE300000000000000;
      if (v8 == 1)
        v13 = 0x657469726F766166;
      else
        v13 = 0x64616F6C6E776F64;
      if (v8)
        v14 = v13;
      else
        v14 = 7105633;
      if (v8)
        v15 = 0xE900000000000073;
      else
        v15 = 0xE300000000000000;
      if (v11 == v14 && v12 == v15)
      {
        swift_bridgeObjectRelease_n(v12, 2);
      }
      else
      {
        v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v14, v15, 0);
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v15);
        if ((v5 & 1) == 0)
          return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1002EC0CC(uint64_t a1, uint64_t a2)
{
  return sub_1002EC1D4(a1, a2, type metadata accessor for PlaylistCurators.Curator, (uint64_t (*)(char *, char *))static PlaylistCurators.Curator.__derived_struct_equals(_:_:));
}

uint64_t sub_1002EC0E0(uint64_t a1, uint64_t a2)
{
  return sub_1002EC32C(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, &qword_1011AB668, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
}

uint64_t sub_1002EC0FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4];
  v6 = a1[5];
  v7 = a2[4];
  v8 = a2[5];
  v9 = v5 == v7 && v6 == v8;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0), result = 0, (v10 & 1) != 0))
  {
    v12 = v2 - 1;
    if (!v12)
      return 1;
    v13 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v15 = *(i - 1);
      v16 = *i;
      v17 = *(v13 - 1);
      v18 = *v13;
      v19 = v15 == v17 && v16 == v18;
      if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v17, v18, 0) & 1) == 0)
        break;
      v13 += 2;
      if (!--v12)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1002EC1C0(uint64_t a1, uint64_t a2)
{
  return sub_1002EC1D4(a1, a2, type metadata accessor for WidgetMusicItem, (uint64_t (*)(char *, char *))sub_10040284C);
}

uint64_t sub_1002EC1D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_10005B704(a1 + v16, (uint64_t)v14, a3);
        sub_10005B704(a2 + v16, (uint64_t)v10, a3);
        v19 = a4(v14, v10);
        sub_10005B748((uint64_t)v10, a3);
        sub_10005B748((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1002EC310(uint64_t a1, uint64_t a2)
{
  return sub_1002EC32C(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.Reaction, &qword_1011A5F60, (uint64_t)&protocol conformance descriptor for Playlist.Entry.Reaction);
}

uint64_t sub_1002EC32C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  BOOL v29;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);

  v10 = a3(0);
  v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v15 = (char *)&v31 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 == *(_QWORD *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      v26 = 1;
    }
    else
    {
      v34 = v13;
      v35 = v12;
      v36 = a3;
      v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v31 = *(_QWORD *)(v12 + 72);
      v32 = a1;
      v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v18 = v16 - 1;
      v19 = v13;
      do
      {
        v20 = v33;
        v33((uint64_t)v15, a1 + v17, v10);
        v21 = a2;
        v20(v19, a2 + v17, v10);
        v22 = a4;
        v23 = a4;
        v24 = a5;
        v25 = sub_100048748(v23, v36, a5);
        v26 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v10, v25);
        v27 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v27(v19, v10);
        v27((uint64_t)v15, v10);
        v29 = v18-- != 0;
        if ((v26 & 1) == 0)
          break;
        v17 += v31;
        a5 = v24;
        a4 = v22;
        a2 = v21;
        a1 = v32;
      }
      while (v29);
    }
  }
  else
  {
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_1002EC4D0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
LABEL_38:
    if (a2 < 0)
      v24 = a2;
    else
      v24 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a2);
    if (v6 == v25)
      goto LABEL_4;
    return 0;
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(a1);
  v7 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_38;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_47:
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_49;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_49:
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_21:
    v14 = v13;
    sub_10004A07C(0, &qword_1011A22C0, MPModelPlaylistEntryReaction_ptr);
    v15 = static NSObject.== infix(_:_:)(v5, v14);

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v26)
        {
          v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = static NSObject.== infix(_:_:)(v22, v18);

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_1002EC758(uint64_t a1, unint64_t a2)
{
  return sub_1002EC780(a1, a2, &qword_1011A3F70, UIBarButtonItem_ptr);
}

id sub_1002EC76C(uint64_t a1, unint64_t a2)
{
  return sub_1002EC780(a1, a2, &qword_1011AB678, UIApplicationShortcutItem_ptr);
}

id sub_1002EC780(uint64_t a1, unint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  void *v16;
  id v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  id v23;
  void *v24;
  unint64_t v26;
  void **v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = a2;
  v7 = a1;
  v8 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v6 < 0)
      v32 = v6;
    else
      v32 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v6);
    if (v9 == v33)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v9) = 0;
    return (id)(v9 & 1);
  }
  if (a1 < 0)
    v31 = a1;
  else
    v31 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v9 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v7);
  v10 = (unint64_t)v6 >> 62;
  if ((unint64_t)v6 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v9 != *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v9)
    goto LABEL_37;
  v11 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v7 < 0)
    v11 = v7;
  if (!v8)
    v11 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
  v12 = v6 & 0xFFFFFFFFFFFFFF8;
  v13 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v6 < 0)
    v14 = v6;
  else
    v14 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v10)
    v13 = v14;
  if (v11 == v13)
  {
LABEL_37:
    LOBYTE(v9) = 1;
    return (id)(v9 & 1);
  }
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v34 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v7 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7))
  {
    v16 = result;
    if ((v6 & 0xC000000000000001) == 0)
      break;
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_21:
    v18 = v17;
    a4 = (_QWORD *)sub_10004A07C(0, a3, a4);
    a3 = (unint64_t *)static NSObject.== infix(_:_:)(v16, v18);

    if ((a3 & 1) == 0)
      goto LABEL_54;
    v19 = v9 - 1;
    if (v9 == 1)
      return (id)(v9 & 1);
    if (((v6 | v7) & 0xC000000000000001) != 0)
    {
      v20 = 0;
      v21 = v9 - 2;
      while (v19 != v20)
      {
        v9 = v20 + 1;
        if (v34)
          v22 = (unint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v7);
        else
          v22 = (unint64_t *)*(id *)(v7 + 40 + 8 * v20);
        a3 = v22;
        if ((v6 & 0xC000000000000001) != 0)
        {
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v6);
        }
        else
        {
          if (v9 >= *(_QWORD *)(v12 + 16))
            goto LABEL_59;
          v23 = *(id *)(v6 + 40 + 8 * v20);
        }
        v24 = v23;
        v9 = static NSObject.== infix(_:_:)(a3, v23);

        if ((v9 & 1) != 0 && v21 != v20++)
          continue;
        return (id)(v9 & 1);
      }
      __break(1u);
    }
    else
    {
      v26 = *(_QWORD *)(v12 + 16);
      if (v26 <= 1)
        v26 = 1;
      a3 = (unint64_t *)(v26 - 1);
      v27 = (void **)(v7 + 40);
      v12 = v6 + 40;
      while (v19)
      {
        if (!a3)
          goto LABEL_58;
        v29 = *v27++;
        v28 = v29;
        v30 = *(void **)v12;
        v12 += 8;
        v6 = v28;
        v7 = v30;
        v9 = static NSObject.== infix(_:_:)(v6, v7);

        if ((v9 & 1) != 0)
        {
          a3 = (unint64_t *)((char *)a3 - 1);
          if (--v19)
            continue;
        }
        return (id)(v9 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    v17 = *(id *)(v6 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_1002ECA74(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = a2;
  v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_30;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a2 >> 62;
  if (!(a2 >> 62))
    goto LABEL_3;
  while (2)
  {
    if (v2 < 0)
      v18 = v2;
    else
      v18 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v2);
    if (v5 != v19)
      return;
LABEL_4:
    if (!v5)
      return;
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v7 = a1;
    if (!v4)
      v7 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
    v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    v21 = v2 & 0xFFFFFFFFFFFFFF8;
    if (v2 < 0)
      v8 = v2;
    if (v6)
      v9 = v8;
    if (v7 == v9)
      return;
    if (v5 < 0)
    {
      __break(1u);
      return;
    }
    v10 = type metadata accessor for MusicLibrary(0);
    v11 = 0;
    v12 = v2 & 0xC000000000000001;
    v22 = v2;
    v20 = v2 + 32;
    v4 = v5 - 1;
    while (v5 != v11)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
        if (v12)
          goto LABEL_19;
      }
      else
      {
        v14 = *(_QWORD *)(a1 + 32 + 8 * v11);
        swift_retain();
        v24 = v14;
        if (v12)
        {
LABEL_19:
          v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v22);
          goto LABEL_23;
        }
      }
      if (v11 >= *(_QWORD *)(v21 + 16))
        goto LABEL_29;
      v13 = *(_QWORD *)(v20 + 8 * v11);
      swift_retain();
LABEL_23:
      v23 = v13;
      v15 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
      v2 = dispatch thunk of static Equatable.== infix(_:_:)(&v24, &v23, v10, v15);
      swift_release();
      swift_release();
      if ((v2 & 1) != 0 && v4 != v11++)
        continue;
      return;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
    v6 = (unint64_t)v2 >> 62;
    if ((unint64_t)v2 >> 62)
      continue;
    break;
  }
LABEL_3:
  if (v5 == *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
}

void sub_1002ECCA0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v2 = a2;
  v3 = a1;
  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_53:
    if (v2 < 0)
      v24 = v2;
    else
      v24 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v2);
    if (v5 != v25)
      return;
    goto LABEL_4;
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v3);
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_53;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return;
LABEL_4:
  if (v5)
  {
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    if (v3 < 0)
      v7 = v3;
    if (!v4)
      v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
    v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    if (v2 < 0)
      v10 = v2;
    else
      v10 = v2 & 0xFFFFFFFFFFFFFF8;
    if (v6)
      v9 = v10;
    if (v7 != v9)
    {
      if (v5 < 0)
        goto LABEL_62;
      v27 = v3 & 0xC000000000000001;
      if ((v3 & 0xC000000000000001) != 0)
        goto LABEL_63;
      swift_retain();
      while (1)
      {
        v26 = v2 & 0xC000000000000001;
        if ((v2 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
        }
        else
        {
          if (!*(_QWORD *)(v8 + 16))
          {
            __break(1u);
            return;
          }
          swift_retain();
        }
        v11 = sub_10047E924();
        v12 = sub_10047E924();
        swift_release();
        swift_release();
        if (v11 != v12)
          return;
        v13 = v5 - 1;
        if (v5 == 1)
          return;
        if (((v2 | v3) & 0xC000000000000001) != 0)
        {
          v14 = 0;
          v15 = v5 - 2;
          while (1)
          {
            if (v13 == v14)
            {
              __break(1u);
LABEL_59:
              __break(1u);
              goto LABEL_60;
            }
            if (v27)
            {
              v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14 + 1, v3);
              if (!v26)
                goto LABEL_32;
            }
            else
            {
              v5 = *(_QWORD *)(v3 + 40 + 8 * v14);
              swift_retain();
              if (!v26)
              {
LABEL_32:
                if ((unint64_t)(v14 + 1) >= *(_QWORD *)(v8 + 16))
                  goto LABEL_61;
                swift_retain();
                goto LABEL_34;
              }
            }
            specialized _ArrayBuffer._getElementSlowPath(_:)(v14 + 1, v2);
LABEL_34:
            v16 = sub_10047E924();
            v17 = sub_10047E924();
            swift_release();
            swift_release();
            if (v16 == v17)
            {
              v22 = v15 == v14++;
              if (!v22)
                continue;
            }
            return;
          }
        }
        v18 = *(_QWORD *)(v8 + 16);
        if (v18 <= 1)
          v18 = 1;
        v5 = v18 - 1;
        v19 = v3 + 40;
        v20 = (uint64_t *)(v2 + 40);
        while (1)
        {
          if (!v13)
            goto LABEL_59;
          if (!v5)
            break;
          v19 += 8;
          v21 = *v20++;
          v2 = v21;
          v3 = sub_10047E924();
          --v5;
          v22 = v3 != sub_10047E924() || v13-- == 1;
          if (v22)
            return;
        }
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
      }
    }
  }
}

uint64_t sub_1002ECFA0(uint64_t a1, uint64_t a2)
{
  return sub_1002EC32C(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, &qword_1011AB670, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
}

uint64_t sub_1002ECFBC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char v9;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  BOOL v20;

  v2 = a1[2];
  if (v2 != a2[2])
    goto LABEL_7;
  if (!v2 || a1 == a2)
    goto LABEL_6;
  v5 = a1[4];
  v6 = a2[4];
  v7 = (id)(v6 & 0xFFFFFFFFFFFFFF9);
  v8 = (id)(v5 & 0xFFFFFFFFFFFFFF9);
  LOBYTE(v5) = static JSViewModelKind.__derived_enum_equals(_:_:)(v5, v6);

  if ((v5 & 1) == 0)
  {
LABEL_7:
    v9 = 0;
    return v9 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    v9 = 1;
    return v9 & 1;
  }
  v11 = v2 - 2;
  v12 = a1 + 5;
  v13 = a2 + 5;
  do
  {
    v15 = *v12++;
    v14 = v15;
    v16 = *v13++;
    v17 = (id)(v16 & 0xFFFFFFFFFFFFFF9);
    v18 = (id)(v14 & 0xFFFFFFFFFFFFFF9);
    v9 = static JSViewModelKind.__derived_enum_equals(_:_:)(v14, v16);

    v20 = v11-- != 0;
  }
  while ((v9 & 1) != 0 && v20);
  return v9 & 1;
}

uint64_t sub_1002ED0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_1002ED2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1002ED2F4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_release();
  swift_unknownObjectWeakDestroy(v0 + 24, v1);
  v2 = *(unsigned __int8 *)(v0 + 72);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v2);
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  return swift_deallocObject(v0, 96);
}

void sub_1002ED34C(uint64_t a1)
{
  uint64_t v1;

  sub_1002EB998(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

unint64_t sub_1002ED358(void *a1)
{
  uint64_t v1;

  return sub_1002E59B8(a1, v1);
}

uint64_t sub_1002ED360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4, v6);
  v7 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v7 != 255)
    sub_100064AA4(*(id *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), v7);
  if (*(_QWORD *)(v5 + 56))
    swift_release();
  v8 = (v4 + 79) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;

  return swift_deallocObject(v0, v9);
}

uint64_t sub_1002ED414()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1002E619C(v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1002ED460()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_unknownObjectWeakDestroy(v0 + 48, v1);
  v2 = *(unsigned __int8 *)(v0 + 96);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v2);
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  return swift_deallocObject(v0, 120);
}

uint64_t sub_1002ED4C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002ED4E4(int a1)
{
  uint64_t v1;

  sub_1002EA66C(a1, *(id *)(v1 + 16));
}

uint64_t sub_1002ED4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002ED4FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1002ED504(int a1)
{
  uint64_t v1;

  sub_1002EA5C8(a1, *(id *)(v1 + 16));
}

uint64_t sub_1002ED50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002ED550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002ED5E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011AB684);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1002E7B94(a1, v6, v7, v8, v9);
}

uint64_t sub_1002ED684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002ED700(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011AB694);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_1002E838C(a1, v5, v6, v7, v8);
}

void sub_1002ED794(uint64_t a1)
{
  uint64_t v1;

  sub_1002E89FC(a1, v1);
}

void sub_1002ED79C(uint64_t a1)
{
  uint64_t v1;

  sub_1002E8BD8(a1, v1);
}

void sub_1002ED7A4(uint64_t a1)
{
  uint64_t v1;

  sub_1002E8CD0(a1, v1);
}

void sub_1002ED7AC(uint64_t a1)
{
  uint64_t v1;

  sub_1002E8E40(a1, v1);
}

void sub_1002ED7B4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;

  sub_1002E8014(a1, a2, a3, a4, v4);
}

void sub_1002ED7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002E7B10(a1, a2, v2);
}

uint64_t sub_1002ED7C4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255)
    sub_100055BAC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1 & 1);
  swift_errorRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56);
}

id sub_1002ED808()
{
  uint64_t v0;

  return sub_1002E8108(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1002ED81C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  sub_100055BAC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject(v0, 57);
}

uint64_t sub_1002ED854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1011AB6A4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1002E8710(a1, v4, v5, v6, v7, v8, v9);
}

void sub_1002ED8E4()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_isInModal] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_modelPlayEvent] = 0;
  v1 = OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsLoader;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LyricsLoader()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_visibleDuration] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_lyricsVisibilityStart];
  v3 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_isVisible] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_backgroundObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_foregroundObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_presentationObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController_dismissalObserver] = 0;
  v4 = &v0[OBJC_IVAR____TtC5Music26StaticLyricsViewController____lazy_storage___actionMetricsReportingContext];
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/StaticLyricsViewController.swift", 38, 2, 182, 0);
  __break(1u);
}

uint64_t sub_1002EDA3C()
{
  return sub_1001C0444((uint64_t)&unk_100EB3B08, (uint64_t)&unk_100EB3B30);
}

uint64_t sub_1002EDA50()
{
  return sub_1001C0444((uint64_t)&unk_100EB3AC0, (uint64_t)&unk_100EB3AE8);
}

uint64_t sub_1002EDA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC5Music17PresentationState__isPresentingLyrics;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC5Music17PresentationState__isPresentingQueue, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002EDAD8()
{
  return type metadata accessor for PresentationState(0);
}

uint64_t type metadata accessor for PresentationState(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AB6E8;
  if (!qword_1011AB6E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PresentationState);
  return result;
}

void sub_1002EDB1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100069338();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_1002EDB88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for PresentationState(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

id sub_1002EDBD4()
{
  void *v0;
  id result;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for PresentationDonationTarget();
    v4 = swift_allocObject(v3, 120, 7);
    *(_OWORD *)(v4 + 72) = 0u;
    *(_OWORD *)(v4 + 88) = 0u;
    *(_OWORD *)(v4 + 104) = 0u;
    *(_QWORD *)(v4 + 16) = 0x4C6C616974696E49;
    *(_QWORD *)(v4 + 24) = 0xEB00000000656E69;
    *(_QWORD *)(v4 + 32) = v2;
    v5 = swift_allocObject(&unk_1010BE978, 24, 7);
    *(_QWORD *)(v5 + 16) = v0;
    *(_QWORD *)(v4 + 40) = sub_1002F384C;
    *(_QWORD *)(v4 + 48) = v5;
    v6 = v0;
    sub_10004BA30(0, 0);
    v7 = swift_allocObject(&unk_1010BE9A0, 24, 7);
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v4 + 88) = sub_1002F3854;
    *(_QWORD *)(v4 + 96) = v7;
    v8 = v6;
    sub_10004BA30(0, 0);
    *(_QWORD *)(v4 + 56) = UIScreen.Dimensions.size.getter;
    *(_QWORD *)(v4 + 64) = 0;
    sub_10004BA30(0, 0);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v10 + 32) = v4;
    v11 = v10;
    specialized Array._endMutation()(v10);
    return (id)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002EDD28()
{
  qword_10124CCE0 = 0x4033000000000000;
}

void sub_1002EDD38()
{
  qword_10124CCE8 = 0x4059000000000000;
}

void sub_1002EDD48()
{
  qword_10124CCF0 = 0x4069000000000000;
}

id sub_1002EDD58()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 230.0, 22.0, 0.0, 0.0);
  qword_10124CCF8 = (uint64_t)result;
  return result;
}

id sub_1002EDDA4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 9300.0, 200.0, 0.0, 0.0);
  qword_10124CD00 = (uint64_t)result;
  return result;
}

id sub_1002EDDF4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  qword_10124CD08 = (uint64_t)result;
  return result;
}

id sub_1002EDE44()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 396.0, 32.0, 0.0, 0.0);
  qword_10124CD10 = (uint64_t)result;
  return result;
}

id sub_1002EDE94()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 16.0, 0.0, 0.0);
  qword_10124CD18 = (uint64_t)result;
  return result;
}

id sub_1002EDEDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController____lazy_storage___collectionView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController____lazy_storage___collectionView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController____lazy_storage___collectionView);
  }
  else
  {
    v4 = sub_1002EDF3C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1002EDF3C(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v12;
  _BYTE v13[8];

  swift_unknownObjectWeakInit(v13, a1);
  v1 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_1002EE09C;
  v12 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1008E31AC;
  aBlock[3] = &unk_1010BED00;
  v2 = _Block_copy(aBlock);
  v3 = objc_msgSend(v1, "initWithSectionProvider:", v2);
  _Block_release(v2);
  swift_release(v12);
  swift_unknownObjectWeakDestroy(v13, v4);
  v5 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v3, 0.0, 0.0, 0.0, 0.0);
  v6 = UIView.forAutolayout.getter();

  v7 = (void *)objc_opt_self(UIColor);
  v8 = v6;
  v9 = objc_msgSend(v7, "clearColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v8, "setHidden:", 1);
  return v8;
}

id sub_1002EE09C(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;

  v3 = objc_msgSend(objc_allocWithZone((Class)_UICollectionViewListLayoutSectionConfiguration), "initWithAppearanceStyle:layoutEnvironment:", 0, a2);
  objc_msgSend(v3, "setSeparatorStyle:", 0);
  objc_msgSend(v3, "setEstimatedRowHeight:", 108.0);
  v4 = objc_msgSend(objc_allocWithZone((Class)_UICollectionViewListLayoutSection), "initWithConfiguration:layoutEnvironment:", v3, a2);
  v5 = qword_10119BDF8;
  v6 = v4;
  if (v5 != -1)
    swift_once(&qword_10119BDF8, sub_1002EDD28);
  objc_msgSend(v6, "setContentInsets:", *(double *)&qword_10124CCE0, 0.0, *(double *)&qword_10124CCE0, 0.0);

  return v6;
}

id sub_1002EE18C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  objc_class *v8;
  id result;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  Class isa;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  __n128 v104;
  char *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108[3];
  objc_super v109;

  v1 = v0;
  v2 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v2);
  v4 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v5);
  v7 = (char **)((char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (objc_class *)type metadata accessor for LyricsSelectionViewController(0);
  v109.receiver = v0;
  v109.super_class = v8;
  objc_msgSendSuper2(&v109, "viewDidLoad");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v10 = result;
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v10, "setBackgroundColor:", v11);

  v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = UIView.forAutolayout.getter();

  objc_msgSend(v13, "setClipsToBounds:", 1);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v14 = result;
  objc_msgSend(result, "addSubview:", v13);

  v15 = sub_1002EDEDC();
  objc_msgSend(v15, "setDelegate:", v1);

  v16 = sub_1002EDEDC();
  v17 = objc_msgSend(v16, "layer");

  objc_msgSend(v17, "setMasksToBounds:", 0);
  v18 = sub_1002EDEDC();
  _s8LineCellCMa();
  static UICollectionReusableView.reuseIdentifier.getter();
  v20 = v19;
  UICollectionView.register<A>(_:reuseIdentifier:)();

  swift_bridgeObjectRelease(v20);
  v21 = sub_1002EDEDC();
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22 = result;
  objc_msgSend(result, "bounds");
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  objc_msgSend(v21, "setFrame:", v24, v26, v28, v30);
  v31 = sub_1002EDEDC();
  objc_msgSend(v13, "addSubview:", v31);

  v32 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_activityIndicator;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_activityIndicator], "startAnimating");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v33 = result;
  v107 = v32;
  objc_msgSend(result, "addSubview:", *(_QWORD *)&v1[v32]);

  v34 = sub_1002EDEDC();
  v35 = swift_allocObject(&unk_1010BED38, 24, 7);
  *(_QWORD *)(v35 + 16) = v1;
  objc_allocWithZone((Class)sub_100007E8C(&qword_1011AB888));
  v36 = v1;
  v37 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v34, sub_1002F3E18, v35);
  v38 = *(void **)&v36[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource];
  *(_QWORD *)&v36[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource] = v37;

  sub_1002EF3C0();
  v39 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v40 = swift_allocObject(v39, 112, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100EB3B50;
  v41 = objc_msgSend(v13, "leadingAnchor");
  result = objc_msgSend(v36, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v42 = result;
  v105 = v4;
  v106 = v7;
  v43 = objc_msgSend(result, "leadingAnchor");

  v44 = objc_msgSend(v41, "constraintEqualToAnchor:", v43);
  *(_QWORD *)(v40 + 32) = v44;
  v45 = objc_msgSend(v13, "trailingAnchor");
  result = objc_msgSend(v36, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v46 = result;
  v47 = objc_msgSend(result, "trailingAnchor");

  v48 = objc_msgSend(v45, "constraintEqualToAnchor:", v47);
  *(_QWORD *)(v40 + 40) = v48;
  v49 = objc_msgSend(v13, "topAnchor");
  result = objc_msgSend(v36, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v50 = result;
  v51 = objc_msgSend(result, "topAnchor");

  v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);
  *(_QWORD *)(v40 + 48) = v52;
  v53 = objc_msgSend(v13, "bottomAnchor");
  result = objc_msgSend(v36, "view");
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v54 = result;
  v55 = objc_msgSend(result, "bottomAnchor");

  v56 = objc_msgSend(v53, "constraintEqualToAnchor:", v55);
  *(_QWORD *)(v40 + 56) = v56;
  v57 = sub_1002EDEDC();
  v58 = objc_msgSend(v57, "leadingAnchor");

  v59 = objc_msgSend(v13, "leadingAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v40 + 64) = v60;
  v61 = sub_1002EDEDC();
  v62 = objc_msgSend(v61, "trailingAnchor");

  v63 = objc_msgSend(v13, "trailingAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v40 + 72) = v64;
  v65 = sub_1002EDEDC();
  v66 = objc_msgSend(v65, "topAnchor");

  v67 = objc_msgSend(v13, "topAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

  *(_QWORD *)(v40 + 80) = v68;
  v69 = sub_1002EDEDC();
  v70 = objc_msgSend(v69, "bottomAnchor");

  v71 = objc_msgSend(v13, "bottomAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v40 + 88) = v72;
  v73 = v107;
  v74 = objc_msgSend(*(id *)&v1[v107], "centerYAnchor");
  result = objc_msgSend(v36, "view");
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v75 = result;
  v76 = objc_msgSend(result, "centerYAnchor");

  v77 = objc_msgSend(v74, "constraintEqualToAnchor:", v76);
  *(_QWORD *)(v40 + 96) = v77;
  v78 = objc_msgSend(*(id *)&v1[v73], "centerXAnchor");
  result = objc_msgSend(v36, "view");
  if (!result)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  v79 = result;
  v80 = (void *)objc_opt_self(NSLayoutConstraint);
  v81 = objc_msgSend(v79, "centerXAnchor");

  v82 = objc_msgSend(v78, "constraintEqualToAnchor:", v81);
  *(_QWORD *)(v40 + 104) = v82;
  v108[0] = v40;
  specialized Array._endMutation()(v83);
  v84 = v108[0];
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v80, "activateConstraints:", isa, swift_bridgeObjectRelease(v84).n128_f64[0]);

  v86 = &v36[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties];
  v87 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties];
  v88 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties + 8];
  v89 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties + 16];
  v90 = *((_QWORD *)v86 + 3);
  v91 = type metadata accessor for URL(0);
  v92 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v105, 1, 1, v91);
  v93 = v106;
  MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:)(v87, v88, v89, v90, v92, 0, 0, 0, v106, 1, 0, 0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v94 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v96 = v95;
  v98 = v97;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v99 = qword_10124C790;
  swift_retain();
  v100 = GroupActivitiesManager.hasJoined.getter();
  v101 = GroupActivitiesManager.participantsCount.getter();
  v102 = (uint64_t *)(v99 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v99 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v108, 0, 0);
  v103 = *v102;
  v104 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v94) + 0xA0))(v93, v96, v98, v100 & 1, v101, v103, v104);

  swift_bridgeObjectRelease(v98);
  return (id)sub_10005B748((uint64_t)v93, type metadata accessor for MetricsEvent.Page);
}

uint64_t sub_1002EEBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v6)(__n128);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(uint64_t (**)(__n128))(a3 + 56);
  v7 = _s8LineCellCMa();
  v8 = static UICollectionReusableView.reuseIdentifier.getter();
  v10 = v9;
  v11 = UICollectionView.dequeue<A>(_:forItemAt:reuseIdentifier:)(v7, a2, v8, v9, v7);
  v12 = swift_bridgeObjectRelease(v10);
  v13 = v6(v12);
  v14 = (uint64_t *)(v11 + OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_text);
  v15 = *(_QWORD *)(v11 + OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_text + 8);
  *v14 = v13;
  v14[1] = v16;
  swift_bridgeObjectRelease(v15);
  v17 = OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_label;
  v18 = v14[1];
  v19 = *(id *)(v11 + OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_label);
  swift_bridgeObjectRetain();
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setText:", v20, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v21 = *(_QWORD *)(a4 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager);
  if (v21)
  {
    v22 = *(_QWORD *)(v21 + 32);
    if (v22)
    {
      v23 = *(_QWORD *)(v21 + 24);
      swift_bridgeObjectRetain();
      v24 = NSTextAlignment.init(languageCode:)(v23, v22);
      *(_QWORD *)(v11 + OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_textAlignment) = v24;
      objc_msgSend(*(id *)(v11 + v17), "setTextAlignment:", v24);
    }
  }
  return v11;
}

void sub_1002EED68(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  _BYTE v9[24];
  objc_super v10;
  __int128 v11[6];
  uint64_t v12;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for LyricsSelectionViewController(0);
  objc_msgSendSuper2(&v10, "viewWillAppear:", a1 & 1);
  if ((v1[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_needsCustomTransition] & 1) == 0)
  {
    v3 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_didAdjustInitialContentOffset;
    if ((v1[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_didAdjustInitialContentOffset] & 1) == 0)
    {
      v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager];
      if (v4)
      {
        swift_beginAccess(v4 + 72, v9, 0, 0);
        v5 = *(_QWORD *)(v4 + 72);
        if (*(_QWORD *)(v5 + 16))
        {
          v6 = *(_OWORD *)(v5 + 96);
          v11[3] = *(_OWORD *)(v5 + 80);
          v11[4] = v6;
          v11[5] = *(_OWORD *)(v5 + 112);
          v12 = *(_QWORD *)(v5 + 128);
          v7 = *(_OWORD *)(v5 + 48);
          v11[0] = *(_OWORD *)(v5 + 32);
          v11[1] = v7;
          v11[2] = *(_OWORD *)(v5 + 64);
          sub_1001A8568(v11);
          v8 = sub_1002EDEDC();
          sub_1002EEEAC(v11);
          objc_msgSend(v8, "setContentOffset:", 0.0);
          sub_1001A85BC(v11);

          v1[v3] = 1;
        }
      }
    }
  }
}

void sub_1002EEEAC(__int128 *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  id v24;
  Class isa;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  Class v33;
  id v34;
  id v35;
  id v36;
  id v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  void (*v46)(char *, uint64_t);
  id v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  id v50;
  __int128 aBlock;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  v14 = *(void **)&v2[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource];
  if (!v14)
    goto LABEL_15;
  v15 = a1[5];
  v55 = a1[4];
  v56 = v15;
  v57 = *((_QWORD *)a1 + 12);
  v16 = a1[1];
  aBlock = *a1;
  v52 = v16;
  v17 = a1[3];
  v53 = a1[2];
  v54 = v17;
  v18 = v14;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&aBlock);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3D50);
    return;
  }
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  v20 = IndexPath.item.getter(v19);
  if (v20 < 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return;
  }
  v21 = IndexPath.item.getter(v20);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  IndexPath.init(item:section:)(v23, 0);
  v24 = sub_1002EDEDC();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v26 = objc_msgSend(v24, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v26)
  {
    v48 = *(void (**)(char *, uint64_t))(v8 + 8);
    v48(v11, v7);
    v48(v13, v7);
    return;
  }
  v50 = v26;
  v27 = objc_opt_self(UIView);
  v28 = swift_allocObject(&unk_1010BEC98, 32, 7);
  *(_QWORD *)(v28 + 16) = v2;
  *(_QWORD *)(v28 + 24) = &v50;
  v29 = swift_allocObject(&unk_1010BECC0, 32, 7);
  *(_QWORD *)(v29 + 16) = sub_1002F3E00;
  *(_QWORD *)(v29 + 24) = v28;
  *(_QWORD *)&v53 = sub_1001095DC;
  *((_QWORD *)&v53 + 1) = v29;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v52 = sub_10046D7B4;
  *((_QWORD *)&v52 + 1) = &unk_1010BECD8;
  v30 = _Block_copy(&aBlock);
  v31 = *((_QWORD *)&v53 + 1);
  v2;
  swift_retain(v29);
  objc_msgSend((id)v27, "performWithoutAnimation:", v30, swift_release(v31).n128_f64[0]);
  _Block_release(v30);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation(v29, "", 106, 184, 44, 1);
  swift_release(v29);
  if ((v27 & 1) != 0)
    goto LABEL_14;
  v32 = sub_1002EDEDC();
  v33 = IndexPath._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(v32, "layoutAttributesForItemAtIndexPath:", v33);

  if (v34)
  {
    v35 = v50;
    v50 = v34;

  }
  v36 = sub_1002EDEDC();
  objc_msgSend(v36, "contentSize");

  v37 = sub_1002EDEDC();
  objc_msgSend(v37, "frame");
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;

  v58.origin.x = v39;
  v58.origin.y = v41;
  v58.size.width = v43;
  v58.size.height = v45;
  CGRectGetHeight(v58);
  objc_msgSend(v50, "frame");
  CGRectGetMaxY(v59);
  objc_msgSend(v50, "frame");
  CGRectGetHeight(v60);
  v46 = *(void (**)(char *, uint64_t))(v8 + 8);
  v46(v11, v7);
  v46(v13, v7);
  v47 = v50;
  swift_release(v28);

}

void sub_1002EF300(void *a1, id *a2)
{
  id v4;
  double MaxY;
  id v6;
  id v7;
  CGRect v8;
  CGRect v9;

  v4 = sub_1002EDEDC();
  objc_msgSend(*a2, "frame");
  MaxY = CGRectGetMaxY(v8);
  objc_msgSend(*a2, "frame");
  objc_msgSend(v4, "setContentOffset:", 0.0, MaxY + CGRectGetHeight(v9) * -0.5);

  v6 = objc_msgSend(a1, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002EF3C0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  id v18;
  char *v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  void **aBlock;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  void *v50;
  id (*v51)();
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011AB878);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v43 - v10;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager];
  v13 = _swiftEmptyArrayStorage;
  if (v12)
  {
    v13 = *(_QWORD **)(v12 + 40);
    swift_bridgeObjectRetain();
  }
  v14 = sub_1002F3D74();
  NSDiffableDataSourceSnapshot.init()(&type metadata for String, &type metadata for Lyrics.TextLine, &protocol witness table for String, v14);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1010AA6C0);
  aBlock = 0;
  v48 = 0;
  result = NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v13, &aBlock, v5);
  v16 = *(void **)&v0[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource];
  if (v16)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    v17 = swift_allocObject(&unk_1010BEC20, 24, 7);
    *(_QWORD *)(v17 + 16) = v1;
    v18 = v16;
    v19 = v1;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v9, 0, sub_1002F3DB8, v17);

    v20 = swift_release(v17);
    v21 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    v21(v9, v5, v20);
    v22 = v13[2];
    if (v22)
    {
      objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_activityIndicator], "setHidden:", 1);
      v23 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_displayActivityIndicatorWorkItem;
      v24 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_displayActivityIndicatorWorkItem];
      if (v24)
      {
        swift_retain(*(_QWORD *)&v19[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_displayActivityIndicatorWorkItem]);
        dispatch thunk of DispatchWorkItem.cancel()(v25);
        swift_release(v24);
        v26 = *(_QWORD *)&v19[v23];
      }
      else
      {
        v26 = 0;
      }
      *(_QWORD *)&v19[v23] = 0;
    }
    else
    {
      if (*(_QWORD *)&v19[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_displayActivityIndicatorWorkItem])
      {
LABEL_12:
        v42 = sub_1002EDEDC();
        objc_msgSend(v42, "setHidden:", v22 == 0, swift_bridgeObjectRelease(v13).n128_f64[0]);

        return ((uint64_t (*)(char *, uint64_t))v21)(v11, v5);
      }
      v45 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_displayActivityIndicatorWorkItem;
      v27 = swift_allocObject(&unk_1010BEC48, 24, 7);
      *(_QWORD *)(v27 + 16) = v19;
      v51 = sub_1002F3DC0;
      v52 = v27;
      aBlock = _NSConcreteStackBlock;
      v48 = 1107296256;
      v49 = sub_1001DBD98;
      v50 = &unk_1010BEC60;
      v44 = _Block_copy(&aBlock);
      v46 = _swiftEmptyArrayStorage;
      v43 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v28 = v19;
      v29 = sub_100007E8C((uint64_t *)&unk_1011A2120);
      v30 = sub_10015E828();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v29, v30, v2, v43);
      v31 = type metadata accessor for DispatchWorkItem(0);
      swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
      v32 = DispatchWorkItem.init(flags:block:)(v4, v44);
      swift_release(v52);
      v33 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v41 = (void *)static OS_dispatch_queue.main.getter(v33, v34, v35, v36, v37, v38, v39, v40, v43, v44, v45, v46, aBlock, v48, v49);
      OS_dispatch_queue.asyncAfterUIFeedbackDeadline(_:)(v32);

      v26 = *(_QWORD *)&v19[v45];
      *(_QWORD *)&v19[v45] = v32;
    }
    swift_release(v26);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1002EF774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  id v5;
  _BYTE v6[24];
  __int128 v7[6];
  uint64_t v8;

  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_needsCustomTransition) & 1) == 0)
  {
    v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager);
    if (v1)
    {
      swift_beginAccess(v1 + 72, v6, 0, 0);
      v2 = *(_QWORD *)(v1 + 72);
      if (*(_QWORD *)(v2 + 16))
      {
        v3 = *(_OWORD *)(v2 + 96);
        v7[3] = *(_OWORD *)(v2 + 80);
        v7[4] = v3;
        v7[5] = *(_OWORD *)(v2 + 112);
        v8 = *(_QWORD *)(v2 + 128);
        v4 = *(_OWORD *)(v2 + 48);
        v7[0] = *(_OWORD *)(v2 + 32);
        v7[1] = v4;
        v7[2] = *(_OWORD *)(v2 + 64);
        sub_1001A8568(v7);
        v5 = sub_1002EDEDC();
        sub_1002EEEAC(v7);
        objc_msgSend(v5, "setContentOffset:", 0.0);

        sub_1001A85BC(v7);
      }
    }
  }
}

uint64_t sub_1002EF838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager);
  if (!v2)
    return 4;
  swift_beginAccess(v2 + 72, v12, 0, 0);
  v4 = *(_QWORD *)(v2 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  v5 = sub_100414198(a1, v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
  {
    swift_release();
    return 1;
  }
  else
  {
    swift_beginAccess(v2 + 80, &v11, 0, 0);
    v7 = *(_QWORD *)(v2 + 80);
    swift_bridgeObjectRetain();
    v8 = sub_10075C510(a1, v7);
    swift_bridgeObjectRelease(v7);
    if ((v8 & 1) != 0)
    {
      swift_release();
      return 2;
    }
    else
    {
      v9 = *(_QWORD *)(v2 + 72);
      swift_bridgeObjectRetain();
      v10 = sub_100414198(a1, v9);
      swift_release();
      swift_bridgeObjectRelease(v9);
      if ((v10 & 1) != 0)
        return 2;
      else
        return 4;
    }
  }
}

uint64_t sub_1002EF958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t (*v38)(__n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t (*v58)(_QWORD *);
  uint64_t v59;
  char v60;
  char v61;
  uint64_t (*v62)(void);
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  _BYTE v88[32];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager);
  if (!v2)
    return 0;
  v66 = *(_QWORD *)(a1 + 16);
  v67 = *(_QWORD *)(a1 + 8);
  v63 = *(_BYTE *)(a1 + 24);
  v61 = *(_BYTE *)(a1 + 25);
  v57 = *(_BYTE *)(a1 + 26);
  v55 = *(_QWORD *)a1;
  v56 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 56);
  v64 = *(_QWORD *)(a1 + 48);
  v65 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 96);
  swift_beginAccess(v2 + 72, v88, 0, 0);
  v10 = *(_QWORD *)(v2 + 72);
  if (*(_QWORD *)(v10 + 16) < 2uLL)
    return 0;
  v53 = v4;
  v54 = (uint64_t *)(v2 + 72);
  v48 = v9;
  v49 = v7;
  v50 = v8;
  v51 = v6;
  v52 = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  v11 = sub_100414198(a1, v10);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  v12 = (uint64_t *)(v2 + 72);
  v13 = *v54;
  if (*(_QWORD *)(*v54 + 16))
  {
    v14 = v63 & 1 | ((unint64_t)(v61 & 1) << 8) | ((unint64_t)(v57 & 1) << 16);
    v15 = v67;
    v16 = v66;
    v17 = v65;
    v18 = v56;
    v19 = v64;
    v21 = v52;
    v20 = v53;
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(v13 + 48)
      && *(double *)a1 == *(double *)(v13 + 32)
      && *(double *)(a1 + 8) == *(double *)(v13 + 40)
      && *(double *)(a1 + 40) == *(double *)(v13 + 72)
      && *(double *)(a1 + 48) == *(double *)(v13 + 80))
    {
      v22 = *(_QWORD *)(v13 + 64);
      v62 = *(uint64_t (**)(void))(v13 + 88);
      v58 = *(uint64_t (**)(_QWORD *))(a1 + 56);
      sub_1001A8568((_QWORD *)a1);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      v23 = sub_1001A8568((_QWORD *)a1);
      v59 = v58(v23);
      v25 = v24;
      v27 = v62();
      if (v59 == v27 && v25 == v26)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease(v22);
        swift_bridgeObjectRelease_n(v25, 2);
        sub_1001A85BC((_QWORD *)a1);
        sub_1001A85BC((_QWORD *)a1);
LABEL_36:
        swift_release();
        return 1;
      }
      v29 = v26;
      v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v25, v27, v26, 0);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v29);
      sub_1001A85BC((_QWORD *)a1);
      sub_1001A85BC((_QWORD *)a1);
      v19 = v64;
      v21 = v52;
      v20 = v53;
      v12 = v54;
      if ((v60 & 1) != 0)
        goto LABEL_36;
    }
  }
  else
  {
    v68 = v55;
    v69 = v67;
    v15 = v67;
    v16 = v66;
    v70 = v66;
    v71 = v63 & 1 | ((unint64_t)(v61 & 1) << 8) | ((unint64_t)(v57 & 1) << 16);
    v14 = v71;
    v17 = v65;
    v72 = v65;
    v18 = v56;
    v19 = v64;
    v73 = v56;
    v74 = v64;
    v21 = v52;
    v20 = v53;
    v75 = v53;
    v76 = v52;
    v77 = v51;
    v78 = v50;
    v79 = v49;
    v80 = v48;
    v81 = 0u;
    v82 = 0u;
    v83 = 0u;
    v84 = 0u;
    v85 = 0u;
    v86 = 0u;
    v87 = 0;
    sub_1001A8568((_QWORD *)a1);
    sub_1002F3CB0((uint64_t)&v68);
    v12 = v54;
  }
  v31 = *v12;
  v32 = *(_QWORD *)(*v12 + 16);
  if (!v32)
  {
    sub_1001A8568((_QWORD *)a1);
    swift_release();
    v68 = v55;
    v69 = v15;
    v70 = v16;
    v71 = v14;
    v72 = v17;
    v73 = v18;
    v74 = v19;
    v75 = v20;
    v76 = v21;
    v77 = v51;
    v78 = v50;
    v79 = v49;
    v80 = v48;
    v81 = 0u;
    v82 = 0u;
    v83 = 0u;
    v84 = 0u;
    v85 = 0u;
    v86 = 0u;
    v87 = 0;
    sub_1002F3CB0((uint64_t)&v68);
    return 2;
  }
  v33 = v32 - 1;
  v34 = v31 + 32;
  v35 = v31 + 32 + 104 * v33;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(v35 + 16)
    || *(double *)a1 != *(double *)(v34 + 104 * v33)
    || *(double *)(a1 + 8) != *(double *)(v35 + 8)
    || *(double *)(a1 + 40) != *(double *)(v35 + 40)
    || *(double *)(a1 + 48) != *(double *)(v35 + 48))
  {
    swift_release();
    return 2;
  }
  v36 = *(_QWORD *)(v35 + 32);
  v37 = *(uint64_t (**)(void))(v35 + 56);
  v38 = *(uint64_t (**)(__n128))(a1 + 56);
  sub_1001A8568((_QWORD *)a1);
  sub_1001A8568((_QWORD *)a1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v39 = swift_retain();
  v40 = v38(v39);
  v42 = v41;
  v43 = v37();
  if (v40 != v43 || v42 != v44)
  {
    v46 = v44;
    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v42, v43, v44, 0);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v36);
    swift_release();
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v46);
    sub_1001A85BC((_QWORD *)a1);
    sub_1001A85BC((_QWORD *)a1);
    if ((v47 & 1) != 0)
      return 3;
    return 2;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v36);
  swift_release();
  swift_bridgeObjectRelease_n(v42, 2);
  sub_1001A85BC((_QWORD *)a1);
  sub_1001A85BC((_QWORD *)a1);
  return 3;
}

void sub_1002EFF18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t, char *);
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, char *);
  char *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char v56;
  id v57;
  void *v58;
  void *v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  uint64_t v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void **v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void **v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t);
  uint64_t v113;
  void (*v114)();
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[3];
  __int16 v124;
  char v125;
  void (*v126)();
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v83 = a1;
  v82 = sub_100007E8C((uint64_t *)&unk_1011AB860);
  __chkstk_darwin(v82);
  v3 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v75 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v75 - v11;
  v105 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v86 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v75 - v16;
  v107 = v1;
  v18 = sub_1002EDEDC();
  v19 = objc_msgSend(v18, "visibleCells");

  v20 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
    goto LABEL_47;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v22)
  {
LABEL_51:
    swift_bridgeObjectRelease(v21);
    return;
  }
LABEL_3:
  v81 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource;
  v84 = v21 & 0xC000000000000001;
  v78 = v22;
  v79 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager;
  v23 = 4;
  v76 = v6;
  v77 = v12;
  v85 = v3;
  v106 = v17;
  v80 = v21;
  v87 = v9;
  v75 = v13;
  while (1)
  {
    v24 = v23 - 4;
    v103 = v23;
    if (v84)
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23 - 4, v21);
    else
      v25 = *(id *)(v21 + 8 * v23);
    v26 = v25;
    v27 = __OFADD__(v24, 1);
    v28 = v24 + 1;
    if (v27)
    {
      __break(1u);
LABEL_47:
      if (v21 < 0)
        v74 = v21;
      else
        v74 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v22 = _CocoaArrayWrapper.endIndex.getter(v74);
      swift_bridgeObjectRelease(v21);
      if (!v22)
        goto LABEL_51;
      goto LABEL_3;
    }
    v29 = _s8LineCellCMa();
    v30 = swift_dynamicCastClass(v26, v29);
    if (!v30)
    {
      swift_bridgeObjectRelease(v21);

      return;
    }
    v17 = (char *)v30;
    v102 = v28;
    v104 = v26;
    v31 = sub_1002EDEDC();
    v32 = objc_msgSend(v31, "indexPathForCell:", v17);

    if (!v32)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, 1, 1, v105);
LABEL_42:
      v71 = v104;

      swift_bridgeObjectRelease(v21);
      sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A3D50);
      return;
    }
    v33 = v86;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v32);

    v9 = *(char **)(v13 + 32);
    v6 = (char *)v105;
    ((void (*)(char *, char *, uint64_t))v9)(v12, v33, v105);
    v34 = *(void (**)(char *, _QWORD, uint64_t, char *))(v13 + 56);
    v34(v12, 0, 1, v6);
    v35 = v13;
    v36 = *(unsigned int (**)(char *, uint64_t, char *))(v13 + 48);
    if (v36(v12, 1, v6) == 1)
      goto LABEL_42;
    v37 = v106;
    ((void (*)(char *, char *, char *))v9)(v106, v12, v6);
    v38 = *(void **)(v107 + v81);
    if (!v38)
      break;
    v39 = v38;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v37);

    v40 = (uint64_t)v114;
    if (!v114)
    {
      v72 = v104;

      (*(void (**)(char *, char *))(v35 + 8))(v106, v6);
      v73 = v80;
LABEL_45:
      swift_bridgeObjectRelease(v73);
      return;
    }
    v94 = v110;
    v95 = v111;
    v123[0] = v110;
    v123[1] = v111;
    v96 = v112;
    v97 = v113;
    v123[2] = v112;
    v124 = v113 & 0x101;
    v125 = BYTE2(v113) & 1;
    v126 = v114;
    v127 = v115;
    v98 = v115;
    v99 = v116;
    v128 = v116;
    v129 = v117;
    v100 = v117;
    v92 = v119;
    v93 = v118;
    v130 = v118;
    v131 = v119;
    v90 = v121;
    v91 = v120;
    v132 = v120;
    v133 = v121;
    v89 = v122;
    v134 = v122;
    v41 = v107;
    v17[OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_position] = sub_1002EF958((uint64_t)v123);
    sub_10091E770();
    v42 = *(_QWORD *)(v41 + v79);
    v101 = v40;
    if (v42)
    {
      swift_beginAccess(v42 + 72, &v109, 0, 0);
      v43 = *(_QWORD *)(v42 + 72);
      swift_retain();
      swift_bridgeObjectRetain();
      v44 = sub_100414198((uint64_t)v123, v43);
      swift_bridgeObjectRelease(v43);
      if ((v44 & 1) != 0)
      {
        swift_release();
        v45 = 1;
      }
      else
      {
        swift_beginAccess(v42 + 80, &v108, 0, 0);
        v46 = *(_QWORD *)(v42 + 80);
        swift_bridgeObjectRetain();
        v47 = sub_10075C510((uint64_t)v123, v46);
        swift_bridgeObjectRelease(v46);
        if ((v47 & 1) != 0)
        {
          swift_release();
          v45 = 2;
        }
        else
        {
          v48 = *(_QWORD *)(v42 + 72);
          swift_bridgeObjectRetain();
          v49 = sub_100414198((uint64_t)v123, v48);
          swift_release();
          swift_bridgeObjectRelease(v48);
          if ((v49 & 1) != 0)
            v45 = 2;
          else
            v45 = 4;
        }
      }
      v88 = v45;
      v6 = (char *)v105;
    }
    else
    {
      v88 = 4;
    }
    v50 = (uint64_t)v87;
    (*(void (**)(char *, char *, char *))(v35 + 16))(v87, v106, v6);
    v34((char *)v50, 0, 1, v6);
    v3 = v85;
    v51 = (uint64_t)&v85[*(int *)(v82 + 48)];
    sub_1002F3C60(v83, (uint64_t)v85);
    sub_1002F3C60(v50, v51);
    if (v36(v3, 1, v6) == 1)
    {
      sub_10004FF60(v50, (uint64_t *)&unk_1011A3D50);
      if (v36((char *)v51, 1, v6) != 1)
        goto LABEL_29;
      sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011A3D50);
      v13 = v35;
      v21 = v80;
      v52 = v78;
      if (v88 == v17[OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state])
        goto LABEL_33;
      v17[OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state] = v88;
    }
    else
    {
      v53 = (uint64_t)v76;
      sub_1002F3C60((uint64_t)v3, (uint64_t)v76);
      if (v36((char *)v51, 1, v6) == 1)
      {
        sub_10004FF60((uint64_t)v87, (uint64_t *)&unk_1011A3D50);
        (*(void (**)(uint64_t, char *))(v35 + 8))(v53, v6);
LABEL_29:
        sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011AB860);
        v13 = v35;
        v21 = v80;
        v52 = v78;
        if (v88 != v17[OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state])
        {
          v17[OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state] = v88;
LABEL_31:
          sub_10091DF60();
        }
LABEL_33:
        sub_10015EB38((uint64_t)v94, v95, (uint64_t)v96, v97, v101, v98, v99, v100, v93, v92, v91, v90, v89);
        v57 = v104;

        goto LABEL_34;
      }
      v54 = v86;
      ((void (*)(char *, uint64_t, char *))v9)(v86, v51, v6);
      v55 = sub_100048748(&qword_1011AB870, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v56 = dispatch thunk of static Equatable.== infix(_:_:)(v53, v54, v6, v55);
      v3 = *(char **)(v35 + 8);
      ((void (*)(char *, char *))v3)(v54, v6);
      sub_10004FF60((uint64_t)v87, (uint64_t *)&unk_1011A3D50);
      ((void (*)(uint64_t, char *))v3)(v53, v6);
      sub_10004FF60((uint64_t)v85, (uint64_t *)&unk_1011A3D50);
      v13 = v35;
      v21 = v80;
      v52 = v78;
      if (v88 == v17[OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state])
        goto LABEL_33;
      v17[OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state] = v88;
      if ((v56 & 1) == 0)
        goto LABEL_31;
    }
    if (qword_10119CB08 != -1)
      swift_once(&qword_10119CB08, sub_10091C5D0);
    v58 = (void *)qword_10124DDC8;
    v59 = (void *)objc_opt_self(UIView);
    objc_msgSend(v58, "settlingDuration");
    v61 = v60;
    objc_msgSend(v58, "mass");
    v63 = v62;
    objc_msgSend(v58, "stiffness");
    v65 = v64;
    objc_msgSend(v58, "damping");
    v67 = v66;
    v68 = swift_allocObject(&unk_1010BEBD0, 24, 7);
    *(_QWORD *)(v68 + 16) = v17;
    v114 = sub_1002F3CA8;
    v115 = v68;
    v110 = _NSConcreteStackBlock;
    v111 = 1107296256;
    v112 = sub_1001DBD98;
    v113 = (uint64_t)&unk_1010BEBE8;
    v69 = _Block_copy(&v110);
    v17 = (char *)v115;
    v70 = v104;
    swift_release();
    objc_msgSend(v59, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v69, 0, v61, 0.0, v63, v65, v67, 0.0);
    _Block_release(v69);
    sub_10015EB38((uint64_t)v94, v95, (uint64_t)v96, v97, v101, v98, v99, v100, v93, v92, v91, v90, v89);

    v13 = v75;
LABEL_34:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v106, v105);
    if (v102 == v52)
    {
      v73 = v21;
      goto LABEL_45;
    }
    v23 = v103 + 1;
    v12 = v77;
  }
  __break(1u);
}

id sub_1002F08EC(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  NSString v17;
  objc_class *v18;
  id v19;
  objc_super v21;

  v4 = v3;
  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager] = 0;
  v3[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_needsCustomTransition] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource] = 0;
  v10 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_activityIndicator;
  v11 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v12 = v4;
  v13 = objc_msgSend(v11, "init");
  v14 = UIView.forAutolayout.getter();

  *(_QWORD *)&v4[v10] = v14;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_displayActivityIndicatorWorkItem] = 0;
  v12[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_didAdjustInitialContentOffset] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Music29LyricsSelectionViewController____lazy_storage___collectionView] = 0;
  v15 = &v12[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties];
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(0x685373636972794CLL, 0xED0000676E697261, 0x4D747865746E6F43, 0xEB00000000756E65, (uint64_t)v9, 0, 0, 0, v15);

  if (a2)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = 0;
  }
  v18 = (objc_class *)type metadata accessor for LyricsSelectionViewController(0);
  v21.receiver = v12;
  v21.super_class = v18;
  v19 = objc_msgSendSuper2(&v21, "initWithNibName:bundle:", v17, a3);

  return v19;
}

id sub_1002F0B3C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  objc_super v17;

  v2 = v1;
  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager] = 0;
  v1[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_needsCustomTransition] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource] = 0;
  v7 = OBJC_IVAR____TtC5Music29LyricsSelectionViewController_activityIndicator;
  v8 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v9 = v2;
  v10 = objc_msgSend(v8, "init");
  v11 = UIView.forAutolayout.getter();

  *(_QWORD *)&v2[v7] = v11;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_displayActivityIndicatorWorkItem] = 0;
  v9[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_didAdjustInitialContentOffset] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Music29LyricsSelectionViewController____lazy_storage___collectionView] = 0;
  v12 = &v9[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties];
  v13 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(0x685373636972794CLL, 0xED0000676E697261, 0x4D747865746E6F43, 0xEB00000000756E65, (uint64_t)v6, 0, 0, 0, v12);

  v14 = (objc_class *)type metadata accessor for LyricsSelectionViewController(0);
  v17.receiver = v9;
  v17.super_class = v14;
  v15 = objc_msgSendSuper2(&v17, "initWithCoder:", a1);

  return v15;
}

id sub_1002F0D18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsSelectionViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002F0DD0()
{
  return type metadata accessor for LyricsSelectionViewController(0);
}

uint64_t type metadata accessor for LyricsSelectionViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AB848;
  if (!qword_1011AB848)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LyricsSelectionViewController);
  return result;
}

uint64_t sub_1002F0E14(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = "\b";
  v4[1] = &unk_100EB3BB8;
  v4[2] = "\b";
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = "\b";
  v4[5] = &unk_100EB3BB8;
  v4[6] = "\b";
  result = type metadata accessor for MetricsPageProperties(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1002F0FA8(void *a1, uint64_t a2)
{
  double v2;
  double v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  Class isa;
  void *v26;
  float64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t *v31;
  uint64_t v32;
  float64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _DWORD *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  float64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t (*v77)(__n128);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  NSString v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  NSString v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  NSString v114;
  id v115;
  uint64_t v116;
  float64x2_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(void);
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  int v132;
  uint64_t v133;
  _DWORD *v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(__n128);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _DWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  float64_t v162;
  uint64_t (*v163)(__n128);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint8_t *v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  float64_t v173;
  uint64_t v174;
  __n128 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  float64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(__n128);
  uint64_t v190;
  uint64_t v191;
  __n128 v192;
  __n128 v193;
  __n128 v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t (*v213)(void);
  uint64_t v214;
  uint64_t *v215;
  _DWORD *v216;
  float64x2_t v217;
  uint64_t (*v218)(uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  float64x2_t v224;
  float64x2_t v225;
  uint64_t (*v226)(__n128);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  float64_t v231;
  void (*v232)(uint64_t, void *);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  float64x2_t v238;
  void (*v239)(uint64_t, void *);
  uint64_t v240;
  uint64_t (*v241)(uint64_t);
  float64x2_t v242;
  uint64_t (*v243)(__n128);
  __int128 v244;
  __int128 v245;
  uint64_t v246;
  float64x2_t v247;
  __int128 v248;
  _BYTE v249[32];
  __int128 v250;
  __int128 v251;
  uint64_t v252;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v228 = *(_QWORD *)(v6 - 8);
  v229 = v6;
  __chkstk_darwin(v6);
  v230 = (uint64_t)&v211 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v211 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v211 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v211 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v17);
  v19 = (char *)&v211 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v20);
  *(_QWORD *)&v231 = (char *)&v211 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v22);
  v24 = (char *)&v211 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v26 = a1;
  v27 = v3;
  objc_msgSend(v26, "deselectItemAtIndexPath:animated:", isa, 0);

  v28 = *(_QWORD *)(*(_QWORD *)&v3 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager);
  if (!v28)
    return;
  v29 = *(void **)(*(_QWORD *)&v27 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource);
  if (!v29)
  {
    __break(1u);
    return;
  }
  swift_retain();
  v30 = v29;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

  if (!v241)
  {
LABEL_21:
    swift_release();
    return;
  }
  v217.f64[1] = v27;
  v224 = v238;
  v225 = v242;
  v247 = v238;
  v232 = v239;
  *(_QWORD *)&v248 = v239;
  WORD4(v248) = v240 & 0x101;
  v222 = v240;
  v223 = *((_QWORD *)&v244 + 1);
  BYTE10(v248) = BYTE2(v240) & 1;
  v218 = v241;
  v219 = v246;
  *(_QWORD *)v249 = v241;
  *(float64x2_t *)&v249[8] = v242;
  v226 = v243;
  v227 = v244;
  *(_QWORD *)&v249[24] = v243;
  v250 = v244;
  v251 = v245;
  v220 = *((_QWORD *)&v245 + 1);
  v221 = v245;
  v31 = (uint64_t *)(v28 + 72);
  v252 = v246;
  swift_beginAccess(v28 + 72, &v237, 0, 0);
  v233 = v28;
  v32 = *(_QWORD *)(v28 + 72);
  if (*(_QWORD *)(v32 + 16) == 1
    && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v32 + 32), v224), (int32x4_t)vceqq_f64(*(float64x2_t *)(v32 + 72), v225))), 0xFuLL))) & 1) != 0&& v232 == *(void (**)(uint64_t, void *))(v32 + 48))
  {
    v212 = v10;
    v33 = *(double *)(v32 + 64);
    v34 = *(uint64_t **)(v32 + 112);
    v35 = *(_QWORD *)(v32 + 128);
    v36 = *(_DWORD **)(v32 + 96);
    v213 = *(uint64_t (**)(void))(v32 + 88);
    v217.f64[0] = v33;
    swift_bridgeObjectRetain();
    swift_retain();
    v215 = v34;
    swift_retain();
    v214 = v35;
    v37 = swift_retain();
    v38 = v226(v37);
    v216 = v36;
    v40 = v39;
    v42 = v213();
    v43 = v41;
    if (v38 == v42 && v40 == v41)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease(*(_QWORD *)&v217.f64[0]);
      swift_bridgeObjectRelease_n(v40, 2);
LABEL_11:
      sub_1002F4978((uint64_t)&v247);
      v45 = type metadata accessor for IndexPath(0);
      v46 = *(_QWORD *)(v45 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v24, a2, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v24, 0, 1, v45);
      v47 = v217.f64[1];
      sub_1002EFF18((uint64_t)v24);
      sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A3D50);
      *(_QWORD *)&v238.f64[0] = v232;
      v48 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v50 = v49;
      v51 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v19, 1, 1, v51);
      sub_1002F3A98(*(_QWORD *)&v47 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties, (uint64_t)v16);
      v52 = *(_QWORD *)&v231;
      MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v48, v50, 14, 15, (uint64_t)v19, 0, 0, 9, *(uint64_t *)&v231, 0, 0, 0xFF00u, v16, 0);
LABEL_15:
      v65 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
      sub_100540B34();
      v67 = v66;
      v69 = v68;
      if (qword_10119B8B8 != -1)
        swift_once(&qword_10119B8B8, sub_1000E968C);
      v70 = qword_10124C790;
      swift_retain();
      v71 = GroupActivitiesManager.hasJoined.getter();
      v72 = GroupActivitiesManager.participantsCount.getter();
      v73 = (uint64_t *)(v70 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
      swift_beginAccess(v70 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v238, 0, 0);
      v74 = *v73;
      v75 = swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v65)
                                                                                          + 0xB8))(v52, v67, v69, v71 & 1, v72, v74, v75);

      objc_msgSend(*(id *)&v47, "accessibilityDidSelectItem", swift_bridgeObjectRelease(v69).n128_f64[0]);
      sub_10015EB38(*(uint64_t *)&v224.f64[0], *(uint64_t *)&v224.f64[1], (uint64_t)v232, v222, (uint64_t)v218, *(uint64_t *)&v225.f64[0], *(uint64_t *)&v225.f64[1], (uint64_t)v226, v227, v223, v221, v220, v219);
      swift_release();
      sub_10005B748(v52, type metadata accessor for MetricsEvent.Click);
      return;
    }
    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(*(_QWORD *)&v217.f64[0]);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v43);
    v10 = v212;
    if ((v44 & 1) != 0)
      goto LABEL_11;
  }
  v53 = v233;
  swift_beginAccess(v233 + 80, &v236, 0, 0);
  v54 = *(_QWORD *)(v53 + 80);
  swift_bridgeObjectRetain();
  v55 = sub_10075C510((uint64_t)&v247, v54);
  swift_bridgeObjectRelease(v54);
  if ((v55 & 1) != 0
    || (v56 = *v31,
        swift_bridgeObjectRetain(),
        v57 = sub_100414198((uint64_t)&v247, v56),
        v58 = swift_bridgeObjectRelease(v56),
        (v57 & 1) != 0))
  {
    sub_1002F4264((uint64_t)&v247);
    v59 = type metadata accessor for IndexPath(0);
    v60 = *(_QWORD *)(v59 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v24, a2, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v24, 0, 1, v59);
    v47 = v217.f64[1];
    sub_1002EFF18((uint64_t)v24);
    sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A3D50);
    *(_QWORD *)&v238.f64[0] = v232;
    v61 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v63 = v62;
    v64 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v19, 1, 1, v64);
    sub_1002F3A98(*(_QWORD *)&v47 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties, (uint64_t)v16);
    v52 = *(_QWORD *)&v231;
    MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v61, v63, 14, 34, (uint64_t)v19, 0, 0, 9, *(uint64_t *)&v231, 0, 0, 0xFF00u, v16, 0);
    goto LABEL_15;
  }
  v77 = v226;
  v76 = v227;
  v78 = v226(v58);
  v80 = v79;
  v81 = String.count.getter(v78, v79);
  swift_bridgeObjectRelease(v80);
  v82 = sub_10015E580();
  if ((v83 & 1) != 0)
  {
    v84 = v81 <= 150;
    v85 = v228;
    v86 = v229;
    v87 = v230;
    if (v84)
      goto LABEL_20;
  }
  else
  {
    v84 = v82 < v81;
    v85 = v228;
    v86 = v229;
    v87 = v230;
    if (!v84)
    {
LABEL_20:
      v88 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E35B30);
      static Locale.current.getter(v88);
      String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, 0, v10, 0, 0, 256);
      v90 = v89;
      v91 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000056, 0x8000000100E35B50);
      static Locale.current.getter(v91);
      String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, 0, v10, 0, 0, 256);
      v93 = v92;
      v94 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v90);
      v95 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v93);
      v96 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v94, v95, 1);

      v97 = String.LocalizationValue.init(stringLiteral:)(0x6563616C706552, 0xE700000000000000);
      static Locale.current.getter(v97);
      String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, 0, v10, 0, 0, 256);
      v98 = v76;
      v99 = (uint64_t)v77;
      v101 = v100;
      v102 = swift_allocObject(&unk_1010BEB58, 24, 7);
      swift_unknownObjectWeakInit(v102 + 16, *(_QWORD *)&v217.f64[1]);
      v103 = swift_allocObject(&unk_1010BEB80, 136, 7);
      v104 = v233;
      *(_QWORD *)(v103 + 16) = v102;
      *(_QWORD *)(v103 + 24) = v104;
      v105 = v251;
      *(_OWORD *)(v103 + 96) = v250;
      *(_OWORD *)(v103 + 112) = v105;
      *(_QWORD *)(v103 + 128) = v252;
      v106 = v248;
      *(float64x2_t *)(v103 + 32) = v247;
      *(_OWORD *)(v103 + 48) = v106;
      v107 = *(_OWORD *)&v249[16];
      *(_OWORD *)(v103 + 64) = *(_OWORD *)v249;
      *(_OWORD *)(v103 + 80) = v107;
      swift_retain();
      swift_retain();
      v230 = *(_QWORD *)&v225.f64[0];
      v231 = v224.f64[1];
      v228 = *(_QWORD *)&v224.f64[0];
      v229 = *(_QWORD *)&v225.f64[1];
      v108 = (uint64_t)v218;
      sub_10015EC08(*(uint64_t *)&v224.f64[0], *(uint64_t *)&v224.f64[1], (uint64_t)v232, v222, (uint64_t)v218, *(uint64_t *)&v225.f64[0], *(uint64_t *)&v225.f64[1], v99, v98, v223, v221, v220, v219);
      v109 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v101);
      v241 = sub_1002F3A8C;
      *(_QWORD *)&v242.f64[0] = v103;
      *(_QWORD *)&v238.f64[0] = _NSConcreteStackBlock;
      *(_QWORD *)&v238.f64[1] = 1107296256;
      v239 = sub_100223938;
      v240 = (uint64_t)&unk_1010BEB98;
      v110 = _Block_copy(&v238);
      swift_release();
      v111 = (void *)objc_opt_self(UIAlertAction);
      v112 = objc_msgSend(v111, "actionWithTitle:style:handler:", v109, 2, v110);
      _Block_release(v110);
      swift_release();

      objc_msgSend(v96, "addAction:", v112);
      v113 = String.cancelButtonTitle.unsafeMutableAddressor()[1];
      swift_bridgeObjectRetain();
      v114 = String._bridgeToObjectiveC()();
      v115 = objc_msgSend(v111, "actionWithTitle:style:handler:", v114, 1, 0, swift_bridgeObjectRelease(v113).n128_f64[0]);

      objc_msgSend(v96, "addAction:", v115);
      objc_msgSend(*(id *)&v217.f64[1], "presentViewController:animated:completion:", v96, 1, 0);
      sub_10015EB38(v228, *(uint64_t *)&v231, (uint64_t)v232, v222, v108, v230, v229, (uint64_t)v226, v227, v223, v221, v220, v219);

      goto LABEL_21;
    }
  }
  v116 = Logger.lyrics.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v87, v116, v86);
  v117 = v224;
  v231 = v225.f64[1];
  v224.f64[0] = v225.f64[0];
  v118 = v219;
  v119 = v220;
  v120 = v221;
  v121 = v223;
  v122 = (uint64_t)v232;
  v123 = v222;
  v124 = (uint64_t)v218;
  sub_10015EC08(*(uint64_t *)&v117.f64[0], *(uint64_t *)&v117.f64[1], (uint64_t)v232, v222, (uint64_t)v218, *(uint64_t *)&v225.f64[0], *(uint64_t *)&v225.f64[1], (uint64_t)v226, v227, v223, v221, v220, v219);
  v217 = v117;
  v125 = v227;
  v126 = v122;
  v127 = (uint64_t (*)(void))v226;
  sub_10015EC08(*(uint64_t *)&v117.f64[0], *(uint64_t *)&v117.f64[1], v126, v123, v124, *(uint64_t *)&v224.f64[0], *(uint64_t *)&v231, (uint64_t)v226, v227, v121, v120, v119, v118);
  swift_bridgeObjectRetain_n(v124, 2);
  swift_retain_n(v125, 2);
  swift_retain_n(v120, 2);
  v128 = v118;
  v129 = swift_retain_n(v118, 2);
  v130 = Logger.logObject.getter(v129);
  v131 = static os_log_type_t.default.getter(v130);
  v132 = v131;
  *(_QWORD *)&v225.f64[0] = v130;
  if (os_log_type_enabled(v130, v131))
  {
    v133 = v125;
    v134 = (_DWORD *)swift_slowAlloc(32, -1);
    v214 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v238.f64[0] = v214;
    *v134 = 136446722;
    LODWORD(v213) = v132;
    v216 = v134;
    v135 = v127();
    v137 = v136;
    v234 = sub_100322200(v135, v136, (uint64_t *)&v238);
    v215 = &v235;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, &v235);
    swift_bridgeObjectRelease(v137);
    v138 = v128;
    v206 = v128;
    v139 = v220;
    v140 = v221;
    v141 = v223;
    v195 = v133;
    v142 = v133;
    v143 = *(_QWORD *)&v231;
    v144 = (uint64_t)v232;
    v145 = *(_QWORD *)&v224.f64[0];
    v146 = v226;
    sub_10015EB38(*(uint64_t *)&v217.f64[0], *(uint64_t *)&v217.f64[1], (uint64_t)v232, v222, (uint64_t)v218, *(uint64_t *)&v224.f64[0], *(uint64_t *)&v231, (uint64_t)v226, v195, v223, v221, v220, v206);
    v203 = v139;
    v207 = v138;
    v198 = v141;
    v147 = v140;
    v148 = *(_QWORD *)&v217.f64[0];
    v149 = v222;
    v150 = sub_10015EB38(*(uint64_t *)&v217.f64[0], *(uint64_t *)&v217.f64[1], v144, v222, (uint64_t)v218, v145, v143, (uint64_t)v146, v142, v198, v140, v203, v207);
    v151 = v216;
    *((_WORD *)v216 + 6) = 2050;
    v212 = (char *)v151 + 14;
    v152 = ((uint64_t (*)(uint64_t))v146)(v150);
    v154 = v153;
    v211 = String.count.getter(v152, v153);
    swift_bridgeObjectRelease(v154);
    v155 = v219;
    v156 = v220;
    v201 = v147;
    v157 = v223;
    v196 = v142;
    v158 = *(_QWORD *)&v217.f64[1];
    v159 = (uint64_t)v218;
    v160 = (uint64_t)v232;
    v161 = v149;
    v162 = v224.f64[0];
    v163 = v226;
    sub_10015EB38(v148, *(uint64_t *)&v217.f64[1], (uint64_t)v232, v161, (uint64_t)v218, *(uint64_t *)&v224.f64[0], *(uint64_t *)&v231, (uint64_t)v226, v196, v223, v201, v220, v219);
    v234 = v211;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, v215);
    v204 = v156;
    v208 = v155;
    v164 = v221;
    v199 = v157;
    v165 = v227;
    v166 = v222;
    v167 = *(_QWORD *)&v162;
    v168 = *(_QWORD *)&v231;
    sub_10015EB38(v148, v158, v160, v222, v159, v167, *(uint64_t *)&v231, (uint64_t)v163, v227, v199, v221, v204, v208);
    v169 = (uint8_t *)v216;
    *((_WORD *)v216 + 11) = 2050;
    v170 = sub_10015E580();
    v172 = 150;
    if ((v171 & 1) == 0)
      v172 = v170;
    v234 = v172;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, v215);
    v173 = v225.f64[0];
    _os_log_impl((void *)&_mh_execute_header, *(os_log_t *)&v225.f64[0], (os_log_type_t)v213, "Trying to share a line that is too long to be shared (text=\"%{public}s\", length=%{public}ld, maxCharacterCount=%{public}ld)", v169, 0x20u);
    v174 = v214;
    swift_arrayDestroy(v214, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v174, -1, -1);
    swift_slowDealloc(v169, -1, -1);

    sub_10015EB38(*(uint64_t *)&v217.f64[0], *(uint64_t *)&v217.f64[1], (uint64_t)v232, v166, v159, *(uint64_t *)&v224.f64[0], v168, (uint64_t)v163, v165, v223, v164, v220, v219);
    v175 = swift_release();
  }
  else
  {
    v176 = v118;
    v209 = v118;
    v177 = v220;
    v178 = v221;
    v179 = v223;
    v180 = (uint64_t)v127;
    v181 = *(_QWORD *)&v217.f64[0];
    v182 = (uint64_t)v232;
    v183 = v222;
    v184 = v224.f64[0];
    sub_10015EB38(*(uint64_t *)&v217.f64[0], *(uint64_t *)&v217.f64[1], (uint64_t)v232, v222, (uint64_t)v218, *(uint64_t *)&v224.f64[0], *(uint64_t *)&v231, v180, v125, v223, v221, v220, v209);
    swift_release();
    v200 = v179;
    v202 = v178;
    v197 = v125;
    v186 = *(_QWORD *)&v217.f64[1];
    v185 = (uint64_t)v218;
    v187 = *(_QWORD *)&v184;
    v188 = *(_QWORD *)&v231;
    v189 = v226;
    sub_10015EB38(v181, *(uint64_t *)&v217.f64[1], v182, v183, (uint64_t)v218, v187, *(uint64_t *)&v231, (uint64_t)v226, v197, v200, v202, v177, v176);
    v205 = v177;
    v210 = v176;
    v190 = v221;
    v191 = v227;
    sub_10015EB38(v181, v186, v182, v183, v185, *(uint64_t *)&v224.f64[0], v188, (uint64_t)v189, v227, v223, v221, v205, v210);

    swift_release_n(v219, 2, v192);
    swift_release_n(v190, 2, v193);
    swift_release_n(v191, 2, v194);
    v175 = swift_bridgeObjectRelease_n(v185, 2);
  }
  (*(void (**)(uint64_t, uint64_t, __n128))(v228 + 8))(v230, v229, v175);
}

uint64_t sub_1002F20F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __n128 v35;
  _QWORD v36[3];
  _BYTE v37[24];

  v6 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v6);
  v8 = (_QWORD *)((char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v9);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v12);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v19 = (void *)result;
    sub_1002F4264(a4);
    v20 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
    sub_1002EFF18((uint64_t)v17);
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A3D50);
    v36[0] = *(_QWORD *)(a4 + 16);
    v21 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v23 = v22;
    v24 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 1, 1, v24);
    sub_1002F3A98((uint64_t)v19 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_pageProperties, (uint64_t)v8);
    MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v21, v23, 14, 34, (uint64_t)v11, 0, 0, 9, (uint64_t)v14, 0, 0, 0xFF00u, v8, 0);
    v25 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100540B34();
    v27 = v26;
    v29 = v28;
    if (qword_10119B8B8 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v30 = qword_10124C790;
    swift_retain();
    v31 = GroupActivitiesManager.hasJoined.getter();
    v32 = GroupActivitiesManager.participantsCount.getter();
    v33 = (uint64_t *)(v30 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v30 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v36, 0, 0);
    v34 = *v33;
    v35 = swift_release();
    (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v25) + 0xB8))(v14, v27, v29, v31 & 1, v32, v34, v35);

    swift_bridgeObjectRelease(v29);
    return sub_10005B748((uint64_t)v14, type metadata accessor for MetricsEvent.Click);
  }
  return result;
}

void sub_1002F24C0(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Class isa;
  id v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char isEscapingClosureAtFileLocation;
  __int128 aBlock;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35[24];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v3);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager];
  if (!v10)
    return;
  swift_beginAccess(v10 + 72, v35, 0, 0);
  v11 = *(_QWORD *)(v10 + 72);
  if (!*(_QWORD *)(v11 + 16))
    return;
  v12 = *(_OWORD *)(v11 + 96);
  v39 = *(_OWORD *)(v11 + 80);
  v40 = v12;
  v41 = *(_OWORD *)(v11 + 112);
  v42 = *(_QWORD *)(v11 + 128);
  v13 = *(_OWORD *)(v11 + 48);
  v36 = *(_OWORD *)(v11 + 32);
  v37 = v13;
  v38 = *(_OWORD *)(v11 + 64);
  v14 = *(void **)&a2[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource];
  if (!v14)
  {
    __break(1u);
    return;
  }
  v32 = v40;
  v33 = v41;
  v34 = v42;
  aBlock = v36;
  v29 = v37;
  v31 = v39;
  v30 = v38;
  sub_1001A8568(&v36);
  v15 = v14;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&aBlock);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1001A85BC(&v36);
    sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011A3D50);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  sub_1002EEEAC(&v36);
  v17 = v16;
  v18 = sub_1002EDEDC();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v18, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1001A85BC(&v36);
    return;
  }
  v21 = (void *)objc_opt_self(UIView);
  v22 = (_QWORD *)swift_allocObject(&unk_1010BEAE0, 40, 7);
  v22[2] = a2;
  v22[3] = 0;
  v22[4] = v17;
  v23 = swift_allocObject(&unk_1010BEB08, 32, 7);
  *(_QWORD *)(v23 + 16) = sub_1002F39B0;
  *(_QWORD *)(v23 + 24) = v22;
  *(_QWORD *)&v30 = sub_10010942C;
  *((_QWORD *)&v30 + 1) = v23;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v29 = sub_10046D7B4;
  *((_QWORD *)&v29 + 1) = &unk_1010BEB20;
  v24 = _Block_copy(&aBlock);
  v25 = *((_QWORD *)&v30 + 1);
  v26 = a2;
  swift_retain(v23);
  objc_msgSend(v21, "performWithoutAnimation:", v24, swift_release(v25).n128_f64[0]);
  _Block_release(v24);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v23, "", 106, 389, 44, 1);
  swift_release(v23);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (qword_10119CAB0 != -1)
LABEL_15:
    swift_once(&qword_10119CAB0, sub_10091C0F4);
  objc_msgSend(v20, "frame");
  CGRectGetMinY(v43);
  if (qword_10119CAB8 != -1)
    swift_once(&qword_10119CAB8, sub_10091C104);
  objc_msgSend(v20, "frame");
  CGRectGetWidth(v44);
  objc_msgSend(v20, "frame");
  CGRectGetHeight(v45);
  sub_1001A85BC(&v36);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release(v22);
}

uint64_t sub_1002F2930(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter(v10, v11, v12, v13, v14, v15, v16, v17);
  v19 = swift_allocObject(&unk_1010BE9C8, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a1;
  aBlock[4] = sub_1002F3888;
  v31 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010BE9E0;
  v20 = _Block_copy(aBlock);
  v21 = v31;
  v22 = a2;
  swift_retain(a1);
  v23 = swift_release(v21);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v26 = sub_10015E828();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v4, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v28);
}

void sub_1002F2B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  void *v32;
  __int128 v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  id v38;
  Class isa;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  id v50;
  Class v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  __n128 v68;
  char **v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  Class v74;
  id v75;
  id v76;
  Class v77;
  id v78;
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  void (*v85)(char *, unint64_t, uint64_t);
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  void *v100;
  _QWORD *v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, unint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t, uint64_t);
  char *v119;
  uint64_t v120;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  char v122[24];
  __int128 aBlock;
  void *v124;
  void *v125;
  void *v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134[8];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  v5 = __chkstk_darwin(v4);
  v110 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v99 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v99 - v10;
  v12 = type metadata accessor for IndexPath(0);
  v116 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v113 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v119 = (char *)&v99 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v99 - v17;
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager);
  if (v19)
  {
    swift_beginAccess(v19 + 72, v134, 0, 0);
    v20 = *(_QWORD *)(v19 + 72);
    if (*(_QWORD *)(v20 + 16))
    {
      v106 = a2;
      v21 = *(void **)(a1 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource);
      if (v21)
      {
        v22 = *(void **)(v20 + 64);
        v23 = *(_QWORD *)(v20 + 120);
        v24 = *(_QWORD *)(v20 + 128);
        v25 = *(_QWORD *)(v20 + 104);
        v26 = *(_QWORD *)(v20 + 112);
        v27 = *(_QWORD *)(v20 + 88);
        v28 = *(_QWORD *)(v20 + 96);
        v29 = *(_BYTE *)(v20 + 58);
        v30 = *(_BYTE *)(v20 + 57);
        v31 = *(_BYTE *)(v20 + 56);
        v32 = *(void **)(v20 + 48);
        v33 = *(_OWORD *)(v20 + 72);
        aBlock = *(_OWORD *)(v20 + 32);
        v124 = v32;
        LOBYTE(v125) = v31;
        BYTE1(v125) = v30;
        BYTE2(v125) = v29;
        v126 = v22;
        v127 = v33;
        v128 = v27;
        v129 = v28;
        v130 = v25;
        v131 = v26;
        v132 = v23;
        v133 = v24;
        swift_bridgeObjectRetain();
        swift_retain(v28);
        swift_retain(v26);
        swift_retain(v24);
        v34 = v21;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&aBlock);

        v35 = v116;
        v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
        if (v121(v11, 1, v12) == 1)
        {
          swift_release(v24);
          swift_release(v26);
          swift_release(v28);
          swift_bridgeObjectRelease(v22);
          sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3D50);
          return;
        }
        v120 = v24;
        v112 = v26;
        v107 = v28;
        v36 = v35;
        v37 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v37(v18, v11, v12);
        v38 = sub_1002EDEDC();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v40 = objc_msgSend(v38, "cellForItemAtIndexPath:", isa);

        v105 = v40;
        if (v40)
        {
          v100 = v22;
          v115 = v18;
          v41 = sub_1002EDEDC();
          v42 = objc_msgSend(v41, "indexPathsForVisibleItems");

          v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v12);
          v44 = *(_QWORD *)(v43 + 16);
          v111 = a1;
          v102 = v43;
          v117 = v44;
          v114 = v37;
          if (v44)
          {
            v45 = v116;
            v46 = v43 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
            v108 = *(_QWORD *)(v116 + 72);
            v109 = *(void (**)(char *, unint64_t, uint64_t))(v116 + 16);
            swift_bridgeObjectRetain();
            v47 = v113;
            v48 = v120;
            v49 = v119;
            while (1)
            {
              v109(v9, v46, v12);
              v118 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
              v118(v9, 0, 1, v12);
              if (v121(v9, 1, v12) == 1)
                goto LABEL_27;
              v37(v49, v9, v12);
              v50 = sub_1002EDEDC();
              v51 = IndexPath._bridgeToObjectiveC()().super.isa;
              v52 = objc_msgSend(v50, "cellForItemAtIndexPath:", v51);

              if (v52)
                break;
LABEL_12:
              v49 = v119;
              (*(void (**)(char *, uint64_t))(v45 + 8))(v119, v12);
              v46 += v108;
              --v44;
              v48 = v120;
              if (!v44)
                goto LABEL_26;
            }
            v53 = _s8LineCellCMa();
            v54 = swift_dynamicCastClass(v52, v53);
            if (v54)
            {
              v55 = (void *)v54;
              v56 = IndexPath.item.getter(v54);
              v57 = IndexPath.item.getter(v56);
              if (v56 >= v57)
              {
                v60 = IndexPath.item.getter(v57);
                if (IndexPath.item.getter(v60) < v60)
                {
                  v61 = qword_10119BE08;
                  v62 = v52;
                  v47 = v113;
                  v37 = v114;
                  if (v61 != -1)
                    swift_once(&qword_10119BE08, sub_1002EDD48);
                  objc_msgSend(v55, "frame");
                  objc_msgSend(v55, "setFrame:");

                  objc_msgSend(v55, "setAlpha:", 0.0);
                  v45 = v116;
                  goto LABEL_11;
                }
                objc_msgSend(v55, "setHidden:", 1);
              }
              else
              {
                v58 = qword_10119BE00;
                v59 = v52;
                if (v58 != -1)
                  swift_once(&qword_10119BE00, sub_1002EDD38);
                objc_msgSend(v55, "frame");
                objc_msgSend(v55, "setFrame:");

                objc_msgSend(v55, "setAlpha:", 0.0);
              }
              v45 = v116;
              v47 = v113;
              v37 = v114;
            }
LABEL_11:

            goto LABEL_12;
          }
          v45 = v116;
          v118 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
          swift_bridgeObjectRetain();
          v47 = v113;
          v48 = v120;
LABEL_26:
          v118(v9, 1, 1, v12);
LABEL_27:
          swift_bridgeObjectRelease(v102);
          v63 = swift_allocObject(&unk_1010BEA18, 24, 7);
          v109 = (void (*)(char *, unint64_t, uint64_t))v63;
          *(_QWORD *)(v63 + 16) = 0;
          v101 = (_QWORD *)(v63 + 16);
          v108 = swift_allocObject(&unk_1010BEA18, 24, 7);
          *(_QWORD *)(v108 + 16) = 0;
          v64 = v110;
          v65 = v107;
          v66 = v112;
          if (v117)
          {
            v67 = v102 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
            v68 = swift_beginAccess(v101, v122, 1, 0);
            v69 = &selRef_setMetricsOverlay_;
            v113 = *(char **)(v45 + 72);
            v119 = *(char **)(v45 + 16);
            ((void (*)(char *, unint64_t, uint64_t, __n128))v119)(v64, v67, v12, v68);
            while (1)
            {
              v118(v64, 0, 1, v12);
              if (v121(v64, 1, v12) == 1)
                goto LABEL_48;
              v71 = ((uint64_t (*)(char *, char *, uint64_t))v114)(v47, v64, v12);
              v72 = IndexPath.item.getter(v71);
              if (v72 == IndexPath.item.getter(v72))
                break;
              v73 = sub_1002EDEDC();
              v74 = IndexPath._bridgeToObjectiveC()().super.isa;
              v75 = objc_msgSend(v73, v69[497], v74);

              if (!v75)
              {
                (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v12);
                goto LABEL_46;
              }
              v76 = sub_1002EDEDC();
              v77 = IndexPath._bridgeToObjectiveC()().super.isa;
              v78 = objc_msgSend(v76, "cellForItemAtIndexPath:", v77);

              if (!v78)
              {
                v45 = v116;
                (*(void (**)(char *, uint64_t))(v116 + 8))(v47, v12);

LABEL_46:
                v65 = v107;
LABEL_30:
                v66 = v112;
                goto LABEL_31;
              }
              if (qword_10119BE30 != -1)
                swift_once(&qword_10119BE30, sub_1002EDE94);
              v79 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_10124CD18, 0.0);
              v80 = swift_allocObject(&unk_1010BEA40, 32, 7);
              *(_QWORD *)(v80 + 16) = v78;
              *(_QWORD *)(v80 + 24) = v75;
              v126 = sub_1002F38E4;
              *(_QWORD *)&v127 = v80;
              *(_QWORD *)&aBlock = _NSConcreteStackBlock;
              *((_QWORD *)&aBlock + 1) = 1107296256;
              v124 = sub_1001DBD98;
              v125 = &unk_1010BEA58;
              v81 = _Block_copy(&aBlock);
              v82 = v127;
              v104 = v78;
              v103 = v75;
              objc_msgSend(v79, "addAnimations:", v81, swift_release(v82).n128_f64[0]);
              _Block_release(v81);
              v83 = (_QWORD *)swift_allocObject(&unk_1010BEA90, 48, 7);
              v84 = v108;
              v85 = v109;
              v83[2] = v108;
              v83[3] = v85;
              v86 = v106;
              v87 = v105;
              v83[4] = v106;
              v83[5] = v87;
              v126 = sub_1002F3978;
              *(_QWORD *)&v127 = v83;
              *(_QWORD *)&aBlock = _NSConcreteStackBlock;
              *((_QWORD *)&aBlock + 1) = 1107296256;
              v124 = sub_10012F6FC;
              v125 = &unk_1010BEAA8;
              v88 = _Block_copy(&aBlock);
              v89 = v127;
              swift_retain(v84);
              swift_retain(v85);
              swift_retain(v86);
              v90 = v87;
              objc_msgSend(v79, "addCompletion:", v88, swift_release(v89).n128_f64[0]);
              _Block_release(v88);
              v92 = *((_QWORD *)v85 + 2);
              v93 = __OFADD__(v92, 1);
              v94 = v92 + 1;
              if (v93)
              {
                __break(1u);
LABEL_51:
                __break(1u);
LABEL_52:
                __break(1u);
                goto LABEL_53;
              }
              *v101 = v94;
              v95 = IndexPath.item.getter(v91);
              v96 = IndexPath.item.getter(v95);
              v97 = v95 - v96;
              v64 = v110;
              if (__OFSUB__(v95, v96))
                goto LABEL_51;
              v45 = v116;
              v66 = v112;
              v69 = &selRef_setMetricsOverlay_;
              if (v97 < 0)
              {
                v93 = __OFSUB__(0, v97);
                v97 = -v97;
                if (v93)
                  goto LABEL_52;
              }
              objc_msgSend(v79, "startAnimationAfterDelay:", (double)v97 * 0.04);

              (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v12);
              v65 = v107;
LABEL_31:
              v48 = v120;
              v67 += (unint64_t)v113;
              if (!--v117)
                goto LABEL_47;
              ((void (*)(char *, unint64_t, uint64_t, __n128))v119)(v64, v67, v12, v70);
            }
            (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v12);
            goto LABEL_30;
          }
LABEL_47:
          v118(v64, 1, 1, v12);
LABEL_48:

          swift_release(v48);
          swift_release(v66);
          swift_release(v65);
          swift_bridgeObjectRelease(v100);
          v98 = swift_bridgeObjectRelease(v102);
          (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v115, v12, v98);
          swift_release(v109);
          swift_release(v108);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v12);
          swift_release(v120);
          swift_release(v112);
          swift_release(v107);
          swift_bridgeObjectRelease(v22);
        }
      }
      else
      {
LABEL_53:
        __break(1u);
      }
    }
  }
}

id sub_1002F3760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  v9 = (_QWORD *)(a2 + 16);
  result = (id)swift_beginAccess(a2 + 16, v15, 0, 0);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v9, v14, 1, 0);
    *v9 = v12;
    result = (id)swift_beginAccess(a3 + 16, v13, 0, 0);
    if (v12 == *(_QWORD *)(a3 + 16))
    {
      objc_msgSend(*(id *)(a4 + 32), "removeFromSuperview");
      return objc_msgSend(a5, "setHidden:", 0);
    }
  }
  return result;
}

uint64_t sub_1002F3828()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002F384C(uint64_t a1)
{
  uint64_t v1;

  sub_1002F24C0(a1, *(char **)(v1 + 16));
}

uint64_t sub_1002F3854(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F2930(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002F385C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002F3888()
{
  uint64_t v0;

  sub_1002F2B38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002F3890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002F38A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002F38A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F38B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1002F38E4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  objc_msgSend(v2, "frame");
  objc_msgSend(v1, "setFrame:");
  objc_msgSend(v2, "alpha");
  return objc_msgSend(v1, "setAlpha:");
}

uint64_t sub_1002F393C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

id sub_1002F3978(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F3760(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

double Int.seconds.getter(uint64_t a1)
{
  return (double)a1;
}

uint64_t sub_1002F398C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002F39B0()
{
  double *v0;
  uint64_t v1;
  double v2;
  double v3;
  id v4;

  v1 = *((_QWORD *)v0 + 2);
  v2 = v0[3];
  v3 = v0[4];
  v4 = sub_1002EDEDC();
  objc_msgSend(v4, "setContentOffset:", v2, v3);

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_didAdjustInitialContentOffset) = 1;
}

uint64_t sub_1002F3A0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F3A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1002F3A40()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[12]);
  swift_release(v0[14]);
  swift_release(v0[16]);
  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_1002F3A8C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F20F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_1002F3A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricsPageProperties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002F3ADC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  __int16 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = _s8LineCellCMa();
  v7 = swift_dynamicCastClass(a1, v6);
  if (v7)
  {
    v8 = *(void **)(v3 + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_dataSource);
    if (v8)
    {
      v9 = v7;
      v10 = a1;
      v11 = v8;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

      if (v17)
      {
        v26[0] = v13;
        v26[1] = v14;
        v26[2] = v15;
        v27 = v16 & 0x101;
        v28 = BYTE2(v16) & 1;
        v29 = v17;
        v30 = v18;
        v31 = v19;
        v32 = v20;
        v33 = v21;
        v34 = v22;
        v35 = v23;
        v36 = v24;
        v37 = v25;
        *(_BYTE *)(v9 + OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_position) = sub_1002EF958((uint64_t)v26);
        sub_10091E770();
        v12 = sub_1002EF838((uint64_t)v26);
        if (*(unsigned __int8 *)(v9 + OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state) != v12)
        {
          *(_BYTE *)(v9 + OBJC_IVAR____TtCC5Music29LyricsSelectionViewController8LineCell_state) = v12;
          sub_10091DF60();
        }
        sub_10015EB38(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);

      }
      else
      {

      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1002F3C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002F3CA8()
{
  sub_10091EF40();
}

uint64_t sub_1002F3CB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v9 = *(_QWORD *)(a1 + 160);
  v12 = *(_OWORD *)(a1 + 184);
  v13 = *(_OWORD *)(a1 + 168);
  v10 = *(_QWORD *)(a1 + 200);
  sub_10015EB38(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  sub_10015EB38(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v10);
  return a1;
}

unint64_t sub_1002F3D74()
{
  unint64_t result;

  result = qword_1011AB880;
  if (!qword_1011AB880)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.TextLine, &type metadata for Lyrics.TextLine);
    atomic_store(result, (unint64_t *)&qword_1011AB880);
  }
  return result;
}

void sub_1002F3DB8()
{
  uint64_t v0;

  sub_1002EF774(*(_QWORD *)(v0 + 16));
}

id sub_1002F3DC0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Music29LyricsSelectionViewController_activityIndicator), "startAnimating");
}

uint64_t sub_1002F3DDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002F3E00()
{
  uint64_t v0;

  sub_1002EF300(*(void **)(v0 + 16), *(id **)(v0 + 24));
}

uint64_t sub_1002F3E08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F3E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002EEBE4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1002F3E74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v0 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.init(stringLiteral:)(0x7241206D75626C41, 0xED00006B726F7774);
  result = AccessibilityString.init(_:tableName:bundle:comment:)((uint64_t)v2, 0, 0, 0);
  qword_10124CD20 = result;
  *(_QWORD *)algn_10124CD28 = v4;
  return result;
}

uint64_t sub_1002F3F20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v0 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E35BF0);
  result = AccessibilityString.init(_:tableName:bundle:comment:)((uint64_t)v2, 0, 0, 0);
  qword_10124CD30 = result;
  *(_QWORD *)algn_10124CD38 = v4;
  return result;
}

uint64_t sub_1002F3FC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v0 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.init(stringLiteral:)(0x74724120676E6F53, 0xEC0000006B726F77);
  result = AccessibilityString.init(_:tableName:bundle:comment:)((uint64_t)v2, 0, 0, 0);
  qword_10124CD40 = result;
  *(_QWORD *)algn_10124CD48 = v4;
  return result;
}

uint64_t sub_1002F406C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v0 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.init(stringLiteral:)(0x746963696C707845, 0xE800000000000000);
  result = AccessibilityString.init(_:tableName:bundle:comment:)((uint64_t)v2, 0, 0, 0);
  qword_10124CD50 = result;
  *(_QWORD *)algn_10124CD58 = v4;
  return result;
}

_QWORD *sub_1002F410C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _OWORD v22[6];
  uint64_t v23;

  v6 = v5;
  v5[10] = &_swiftEmptySetSingleton;
  v9 = v5 + 10;
  v5[6] = 0;
  v5[7] = 0;
  v5[8] = 0;
  v5[9] = _swiftEmptyArrayStorage;
  v5[2] = a5;
  v5[3] = a3;
  v5[4] = a4;
  v5[5] = a1;
  sub_1002F50F0((uint64_t)a2, (uint64_t)v16);
  if ((_QWORD)v17)
  {
    v22[4] = v19;
    v22[5] = v20;
    v23 = v21;
    v22[0] = v16[0];
    v22[1] = v16[1];
    v22[2] = v17;
    v22[3] = v18;
    sub_1002F4264((uint64_t)v22);
    sub_1002F5138(a2);
  }
  else
  {
    *(_QWORD *)&v22[0] = a1;
    swift_bridgeObjectRetain();
    v10 = sub_100007E8C(&qword_1011AB9E0);
    v11 = sub_1002F50A4();
    v12 = Sequence.exclude(_:)((uint64_t)sub_1002F424C, 0, v10, v11);
    swift_bridgeObjectRelease(a1);
    v13 = sub_1006A157C(v12);
    swift_bridgeObjectRelease(v12);
    swift_beginAccess(v9, v22, 1, 0);
    v14 = *v9;
    *v9 = v13;
    swift_bridgeObjectRelease(v14);
  }
  return v6;
}

BOOL sub_1002F424C(uint64_t a1)
{
  return sub_1002F4FA8(a1);
}

void sub_1002F4264(uint64_t a1)
{
  _QWORD *v1;
  __n128 v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t i;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(__n128);
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  void (*v54)(__n128);
  uint64_t v55;
  __n128 v56;
  unint64_t v57;
  _QWORD *v58;
  BOOL v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  void (*v82)(__n128);
  uint64_t v83;
  __n128 v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  char v98;
  __int128 v99;
  __int128 v100;
  _QWORD *v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  _QWORD *v105;
  _BYTE v106[24];
  _QWORD *v107;
  char v108[24];
  char v109[24];
  _QWORD v110[3];
  char v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(__n128);
  __int128 v118;
  __int128 v119;
  uint64_t v120;

  v85 = v1 + 9;
  v3 = swift_beginAccess(v1 + 9, v109, 1, 0);
  v105 = v1;
  v4 = (_QWORD *)v1[9];
  v5 = v4[2];
  if (v5)
  {
    v6 = v4[6];
    v7 = v4[12];
    v8 = v4[14];
    v9 = v4[16];
    v10 = &v4[13 * v5];
    v102 = *(v10 - 7);
    v11 = *(v10 - 5);
    v12 = *(v10 - 1);
    v13 = v10[1];
    v14 = v10[3];
    v90 = v4[8];
    swift_bridgeObjectRetain();
    v88 = v7;
    swift_retain(v7);
    v87 = v8;
    swift_retain(v8);
    v86 = v9;
    swift_retain(v9);
    v93 = v11;
    swift_bridgeObjectRetain();
    v92 = v12;
    swift_retain(v12);
    v91 = v13;
    swift_retain(v13);
    v89 = v14;
    swift_retain(v14);
    swift_bridgeObjectRetain();
    LOBYTE(v11) = sub_100414198(a1, (uint64_t)v4);
    swift_bridgeObjectRelease(v4);
    if ((v11 & 1) == 0)
    {
      swift_beginAccess(v105 + 10, v108, 0, 0);
      v15 = v105[10];
      swift_bridgeObjectRetain();
      v16 = sub_10075C510(a1, v15);
      swift_bridgeObjectRelease(v15);
      if ((v16 & 1) != 0)
      {
        i = *(_QWORD *)(a1 + 16);
        v96 = i;
        if (i >= v6)
        {
          v57 = v102 + 1;
          if (__OFADD__(v102, 1))
          {
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          v94 = 0;
          v101 = _swiftEmptyArrayStorage;
          v58 = v105;
          v59 = v57 == i;
          if ((uint64_t)v57 >= i)
            goto LABEL_21;
LABEL_19:
          for (i = v57 + 1; (v57 & 0x8000000000000000) == 0; v94 = 1)
          {
            v61 = v58[5];
            if (v57 >= *(_QWORD *)(v61 + 16))
              goto LABEL_47;
            v95 = i;
            v62 = v61 + 104 * v57;
            v63 = *(_QWORD *)(v62 + 32);
            v64 = *(_QWORD *)(v62 + 40);
            v65 = *(_QWORD *)(v62 + 48);
            v66 = *(_BYTE *)(v62 + 56);
            v67 = *(_BYTE *)(v62 + 57);
            v68 = *(_BYTE *)(v62 + 58);
            v69 = *(_QWORD *)(v62 + 64);
            v70 = *(_QWORD *)(v62 + 72);
            v71 = *(_QWORD *)(v62 + 80);
            v104 = *(_OWORD *)(v62 + 88);
            v97 = *(_OWORD *)(v62 + 120);
            v99 = *(_OWORD *)(v62 + 104);
            swift_bridgeObjectRetain();
            swift_retain(*((_QWORD *)&v104 + 1));
            swift_retain(*((_QWORD *)&v99 + 1));
            swift_retain(*((_QWORD *)&v97 + 1));
            v72 = ((uint64_t (*)(void))v104)();
            v74 = v73;
            v75 = String.count.getter(v72, v73);
            swift_bridgeObjectRelease(v74);
            v76 = v105[8];
            v39 = __OFADD__(v76, v75);
            v77 = v76 + v75;
            if (v39)
              goto LABEL_48;
            v105[8] = v77;
            swift_bridgeObjectRetain();
            swift_retain(*((_QWORD *)&v104 + 1));
            swift_retain(*((_QWORD *)&v99 + 1));
            swift_retain(*((_QWORD *)&v97 + 1));
            if ((swift_isUniquelyReferenced_nonNull_native(v101) & 1) == 0)
              v101 = sub_1004320AC(0, v101[2] + 1, 1, v101);
            v79 = v101[2];
            v78 = v101[3];
            if (v79 >= v78 >> 1)
              v101 = sub_1004320AC((_QWORD *)(v78 > 1), v79 + 1, 1, v101);
            v101[2] = v79 + 1;
            v80 = &v101[13 * v79];
            v80[4] = v63;
            v80[5] = v64;
            v80[6] = v65;
            *((_BYTE *)v80 + 56) = v66;
            *((_BYTE *)v80 + 57) = v67;
            *((_BYTE *)v80 + 58) = v68;
            v80[8] = v69;
            v80[9] = v70;
            v80[10] = v71;
            *(_OWORD *)(v80 + 11) = v104;
            *(_OWORD *)(v80 + 13) = v99;
            *(_OWORD *)(v80 + 15) = v97;
            swift_release(*((_QWORD *)&v97 + 1));
            swift_release(*((_QWORD *)&v99 + 1));
            swift_release(*((_QWORD *)&v104 + 1));
            swift_bridgeObjectRelease(v69);
            v57 = i;
            i = v96;
            v58 = v105;
            v59 = v95 == v96;
            if (v95 < v96)
              goto LABEL_19;
LABEL_21:
            v60 = !v59;
            if (((v60 | v94) & 1) != 0)
            {
              swift_beginAccess(v85, v110, 33, 0);
              sub_100804F78((uint64_t)v101);
              swift_endAccess(v110);
              v82 = (void (*)(__n128))v105[6];
              if (v82)
              {
                v83 = v105[7];
LABEL_38:
                v84 = swift_retain(v83);
                v82(v84);
                sub_10004BA30((uint64_t)v82, v83);
              }
LABEL_39:
              swift_release(v86);
              swift_release(v87);
              swift_release(v88);
              swift_bridgeObjectRelease(v90);
              swift_release(v89);
              swift_release(v91);
              swift_release(v92);
              swift_bridgeObjectRelease(v93);
              goto LABEL_40;
            }
          }
        }
        else
        {
          v98 = 0;
          v107 = _swiftEmptyArrayStorage;
          v18 = v6 - 1;
          if (i >= v6 - 1)
            goto LABEL_8;
LABEL_6:
          i = v18 - 1;
          v19 = v105;
          if ((v18 & 0x8000000000000000) != 0)
          {
LABEL_43:
            __break(1u);
          }
          else
          {
            while (1)
            {
              v20 = v19[5];
              if (v18 >= *(_QWORD *)(v20 + 16))
                break;
              v21 = v20 + 104 * v18;
              v22 = *(_QWORD *)(v21 + 32);
              v23 = *(_QWORD *)(v21 + 40);
              v24 = *(_QWORD *)(v21 + 48);
              v25 = *(_BYTE *)(v21 + 56);
              v26 = *(_BYTE *)(v21 + 57);
              v27 = *(_BYTE *)(v21 + 58);
              v28 = *(_QWORD *)(v21 + 64);
              v29 = *(_QWORD *)(v21 + 72);
              v30 = *(_QWORD *)(v21 + 80);
              v31 = *(uint64_t (**)(__n128))(v21 + 88);
              v100 = *(_OWORD *)(v21 + 112);
              v103 = *(_OWORD *)(v21 + 96);
              v32 = *(_QWORD *)(v21 + 128);
              swift_bridgeObjectRetain();
              swift_retain(v103);
              swift_retain(v100);
              v33 = swift_retain(v32);
              v34 = v31(v33);
              v36 = v35;
              v37 = String.count.getter(v34, v35);
              swift_bridgeObjectRelease(v36);
              v38 = v105[8];
              v39 = __OFADD__(v38, v37);
              v40 = v38 + v37;
              if (v39)
                goto LABEL_46;
              v105[8] = v40;
              v110[0] = v22;
              v110[1] = v23;
              v110[2] = v24;
              v111 = v25;
              v112 = v26;
              v113 = v27;
              v114 = v28;
              v115 = v29;
              v116 = v30;
              v117 = v31;
              v118 = v103;
              v119 = v100;
              v120 = v32;
              sub_1001FDAB4(0, 0, (uint64_t)v110);
              v18 = i;
              i = v96;
              if (v96 < (uint64_t)v18)
                goto LABEL_6;
LABEL_8:
              v19 = v105;
              if ((v18 != i) | v98 & 1)
              {
                v81 = (uint64_t)v107;
                swift_beginAccess(v85, v106, 33, 0);
                sub_1001FF304(0, 0, v81);
                swift_endAccess(v106);
                swift_bridgeObjectRelease(v81);
                v82 = (void (*)(__n128))v105[6];
                if (!v82)
                  goto LABEL_39;
                v83 = v105[7];
                goto LABEL_38;
              }
              v98 = 1;
              if ((v18 & 0x8000000000000000) != 0)
                goto LABEL_43;
            }
          }
          __break(1u);
        }
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
    }
    swift_release(v9);
    swift_release(v8);
    swift_release(v7);
    swift_bridgeObjectRelease(v90);
    swift_release(v14);
    swift_release(v13);
    swift_release(v12);
    v3 = swift_bridgeObjectRelease(v93);
  }
  v41 = (*(uint64_t (**)(__n128))(a1 + 56))(v3);
  v43 = v42;
  v44 = String.count.getter(v41, v42);
  swift_bridgeObjectRelease(v43);
  v105[8] = v44;
  v45 = sub_100007E8C(qword_1011AB9F0);
  v46 = swift_allocObject(v45, 136, 7);
  v47 = *(_OWORD *)(a1 + 64);
  v48 = *(_OWORD *)(a1 + 80);
  v49 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v46 + 80) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v46 + 96) = v47;
  *(_OWORD *)(v46 + 112) = v48;
  v50 = *(_OWORD *)a1;
  v51 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v46 + 16) = xmmword_100EA7AA0;
  *(_OWORD *)(v46 + 32) = v50;
  *(_QWORD *)(v46 + 128) = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(v46 + 48) = v51;
  *(_OWORD *)(v46 + 64) = v49;
  v52 = v105[9];
  v105[9] = v46;
  sub_1001A8568((_QWORD *)a1);
  swift_bridgeObjectRelease(v52);
  v53 = v105;
  v54 = (void (*)(__n128))v105[6];
  if (v54)
  {
    v55 = v105[7];
    v56 = swift_retain(v55);
    v54(v56);
    sub_10004BA30((uint64_t)v54, v55);
LABEL_40:
    v53 = v105;
  }
  if (v53[2] >= v53[8])
  {
    sub_1002F4AA8();
    return;
  }
LABEL_50:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000037, 0x8000000100E35D90, "Music/LyricsSelectionManager.swift", 34, 2, 61, 0);
  __break(1u);
}

void sub_1002F4978(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  void (*v12)(__n128);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _BYTE v22[24];
  char v23[32];
  uint64_t v24;
  char v25[24];

  v2 = v1;
  v4 = v1 + 9;
  swift_beginAccess(v4, v25, 0, 0);
  v5 = v2[9];
  swift_bridgeObjectRetain();
  v6 = sub_1008AB5D0(a1, v5);
  v8 = v7;
  swift_bridgeObjectRelease(v5);
  if ((v8 & 1) != 0)
    goto LABEL_6;
  swift_beginAccess(v4, v22, 33, 0);
  sub_100728800(v6, (uint64_t)v23);
  v9 = v24;
  swift_endAccess(v22);
  swift_release();
  swift_release();
  swift_release();
  v11 = swift_bridgeObjectRelease(v9);
  v12 = (void (*)(__n128))v2[6];
  if (v12)
  {
    v13 = v2[7];
    v14 = swift_retain();
    v12(v14);
    v10 = sub_10004BA30((uint64_t)v12, v13);
  }
  v15 = (*(uint64_t (**)(uint64_t, __n128))(a1 + 56))(v10, v11);
  v17 = v16;
  v18 = String.count.getter(v15, v16);
  swift_bridgeObjectRelease(v17);
  v19 = v2[8];
  v20 = __OFSUB__(v19, v18);
  v21 = v19 - v18;
  if (!v20)
  {
    v2[8] = v21;
LABEL_6:
    sub_1002F4AA8();
    return;
  }
  __break(1u);
}

void sub_1002F4AA8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t (*v24)(__n128);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t (*v49)(__n128);
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  _BYTE v83[24];
  _BYTE v84[32];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  _OWORD v91[2];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  _OWORD v97[3];
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;

  v1 = v0;
  v2 = v0 + 10;
  swift_beginAccess(v0 + 10, v90, 1, 0);
  v3 = v0[10];
  v0[10] = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v3);
  swift_beginAccess(v0 + 9, v89, 0, 0);
  v4 = (_QWORD *)v0[9];
  v5 = v4[2];
  if (v5)
  {
    v6 = v4[6];
    v7 = v6 - 1;
    if (__OFSUB__(v6, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
    }
    else
    {
      v8 = v4[8];
      v9 = v4[12];
      v10 = v4[14];
      v11 = v4[16];
      v12 = &v4[13 * v5];
      v79 = *(v12 - 7);
      v13 = *(v12 - 5);
      v14 = *(v12 - 1);
      v75 = v12[3];
      v76 = v12[1];
      v15 = v1[8];
      v72 = v8;
      swift_bridgeObjectRetain();
      v71 = v9;
      swift_retain(v9);
      v70 = v10;
      swift_retain(v10);
      v69 = v11;
      swift_retain(v11);
      v74 = v13;
      swift_bridgeObjectRetain();
      v73 = v14;
      swift_retain(v14);
      swift_retain(v76);
      swift_retain(v75);
      v81 = 0;
      while (1)
      {
        if (v7 <= 0)
        {
          if ((v7 != 0) | v81 & 1)
            goto LABEL_15;
          v16 = 0;
          v81 = 1;
        }
        else
        {
          v16 = v7 - 1;
        }
        v17 = v1[5];
        if ((unint64_t)v7 >= *(_QWORD *)(v17 + 16))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        v18 = v17 + 104 * v7;
        v20 = *(_OWORD *)(v18 + 96);
        v19 = *(_OWORD *)(v18 + 112);
        v21 = *(_QWORD *)(v18 + 128);
        v98 = *(_OWORD *)(v18 + 80);
        v99 = v20;
        v22 = *(_OWORD *)(v18 + 32);
        v23 = *(_OWORD *)(v18 + 64);
        v97[1] = *(_OWORD *)(v18 + 48);
        v97[2] = v23;
        v97[0] = v22;
        v101 = v21;
        v100 = v19;
        v24 = (uint64_t (*)(__n128))*((_QWORD *)&v98 + 1);
        v25 = sub_1001A8568(v97);
        v26 = ((uint64_t (*)(_QWORD *))v24)(v25);
        v28 = v27;
        v29 = String.count.getter(v26, v27);
        swift_bridgeObjectRelease(v28);
        if (__OFADD__(v15, v29))
          goto LABEL_34;
        if (v1[2] < v15 + v29)
          break;
        swift_beginAccess(v2, v84, 33, 0);
        sub_1001A8568(v97);
        sub_100195064((uint64_t)v91, (uint64_t)v97);
        swift_endAccess(v84);
        v30 = v92;
        v31 = v94;
        v32 = v95;
        swift_release(v96);
        swift_release(v32);
        swift_release(v31);
        v33 = swift_bridgeObjectRelease(v30);
        v34 = v24(v33);
        v36 = v35;
        v37 = String.count.getter(v34, v35);
        sub_1001A85BC(v97);
        swift_bridgeObjectRelease(v36);
        v7 = v16;
        v38 = __OFADD__(v15, v37);
        v15 += v37;
        if (v38)
        {
          __break(1u);
          break;
        }
      }
      sub_1001A85BC(v97);
LABEL_15:
      v39 = v79 + 1;
      if (__OFADD__(v79, 1))
        goto LABEL_39;
      v77 = 0;
      v40 = v1[8];
      v41 = v1[5];
      v80 = v41;
      v82 = *(_QWORD *)(v41 + 16) - 1;
      v78 = v41 + 32;
      while (1)
      {
        if (v39 >= v82)
        {
          if (v39 != v82 || (v77 & 1) != 0)
          {
            swift_release(v69);
            swift_release(v70);
            swift_release(v71);
            swift_bridgeObjectRelease(v72);
            swift_release(v75);
            swift_release(v76);
            swift_release(v73);
            v68 = v74;
            goto LABEL_31;
          }
          v77 = 1;
          v42 = v82;
          if (v39 < 0)
            goto LABEL_35;
        }
        else
        {
          v42 = v39 + 1;
          if (v39 < 0)
            goto LABEL_35;
        }
        if ((unint64_t)v39 >= *(_QWORD *)(v80 + 16))
          goto LABEL_36;
        v43 = (__int128 *)(v78 + 104 * v39);
        v45 = v43[4];
        v44 = v43[5];
        v46 = *((_QWORD *)v43 + 12);
        v93 = v43[3];
        v94 = v45;
        v47 = *v43;
        v48 = v43[2];
        v91[1] = v43[1];
        v92 = v48;
        v91[0] = v47;
        v96 = v46;
        v95 = v44;
        v49 = (uint64_t (*)(__n128))*((_QWORD *)&v93 + 1);
        v50 = sub_1001A8568(v91);
        v51 = ((uint64_t (*)(_QWORD *))v49)(v50);
        v53 = v52;
        v54 = String.count.getter(v51, v52);
        swift_bridgeObjectRelease(v53);
        if (__OFADD__(v40, v54))
          goto LABEL_37;
        if (v1[2] < v40 + v54)
          break;
        swift_beginAccess(v2, v83, 33, 0);
        sub_1001A8568(v91);
        sub_100195064((uint64_t)v84, (uint64_t)v91);
        swift_endAccess(v83);
        v55 = v85;
        v56 = v86;
        v57 = v87;
        swift_release(v88);
        swift_release(v57);
        swift_release(v56);
        v58 = swift_bridgeObjectRelease(v55);
        v59 = v49(v58);
        v61 = v60;
        v62 = String.count.getter(v59, v60);
        sub_1001A85BC(v91);
        swift_bridgeObjectRelease(v61);
        v39 = v42;
        v38 = __OFADD__(v40, v62);
        v40 += v62;
        if (v38)
        {
          __break(1u);
          goto LABEL_29;
        }
      }
      swift_release(v69);
      swift_release(v70);
      swift_release(v71);
      swift_bridgeObjectRelease(v72);
      swift_release(v75);
      swift_release(v76);
      swift_release(v73);
      swift_bridgeObjectRelease(v74);
      sub_1001A85BC(v91);
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)&v97[0] = v1[5];
    v63 = *(_QWORD *)&v97[0];
    swift_bridgeObjectRetain();
    v64 = sub_100007E8C(&qword_1011AB9E0);
    v65 = sub_1002F50A4();
    v66 = Sequence.exclude(_:)((uint64_t)sub_1002F424C, 0, v64, v65);
    swift_bridgeObjectRelease(v63);
    v67 = sub_1006A157C(v66);
    swift_bridgeObjectRelease(v66);
    v68 = v1[10];
    v1[10] = v67;
LABEL_31:
    swift_bridgeObjectRelease(v68);
  }
}

BOOL sub_1002F4FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v1 = (*(uint64_t (**)(void))(a1 + 56))();
  v3 = v2;
  v4 = String.count.getter(v1, v2);
  swift_bridgeObjectRelease(v3);
  v5 = sub_10015E580();
  v7 = 150;
  if ((v6 & 1) == 0)
    v7 = v5;
  return v7 < v4;
}

_QWORD *LyricsSelectionManager.deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  sub_10004BA30(v0[6], v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  return v0;
}

uint64_t LyricsSelectionManager.__deallocating_deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  sub_10004BA30(v0[6], v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for LyricsSelectionManager()
{
  return objc_opt_self(_TtC5Music22LyricsSelectionManager);
}

unint64_t sub_1002F50A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AB9E8;
  if (!qword_1011AB9E8)
  {
    v1 = sub_100044B54(&qword_1011AB9E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011AB9E8);
  }
  return result;
}

uint64_t sub_1002F50F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A8808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1002F5138(uint64_t *a1)
{
  sub_10015EB38(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12]);
  return a1;
}

void sub_1002F5188(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = "\b";
  v2 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10017D9AC(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_100EB3C88;
      v6[4] = &unk_100EB3C88;
      v6[5] = &unk_100EB3C88;
      v6[6] = &unk_100EB3C88;
      v6[7] = &unk_100EB3C88;
      swift_initClassMetadata2(a1, 0, 8, v6, a1 + 120);
    }
  }
}

uint64_t *sub_1002F5230(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v2;
  swift_unknownObjectWeakDestroy(v2 + 2, a2);
  v4 = (uint64_t)v2 + *(_QWORD *)(*v2 + 128);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_1002F531C((uint64_t)v2 + *(_QWORD *)(*v2 + 136));
  swift_release();

  swift_release();
  return v2;
}

uint64_t sub_1002F52EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002F5230(a1, a2);
  return swift_deallocClassInstance(v2, *(unsigned int *)(*(_QWORD *)v2 + 48), *(unsigned __int16 *)(*(_QWORD *)v2 + 52));
}

uint64_t _s29LibraryActionableUIControllerCMa(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &_s29LibraryActionableUIControllerCMn);
}

uint64_t sub_1002F531C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SidebarMenu.Section()
{
  return &type metadata for SidebarMenu.Section;
}

_QWORD *sub_1002F5374(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  void *v7;
  char v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  void *v30;
  char *__dst;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = (void *)a2[1];
    v8 = *((_BYTE *)a2 + 16);
    sub_1002F558C(v7, v8);
    v4[1] = v7;
    *((_BYTE *)v4 + 16) = v8;
    v9 = (void *)a2[4];
    v4[3] = a2[3];
    v4[4] = v9;
    v30 = v9;
    v4[5] = a2[5];
    *((_BYTE *)v4 + 48) = *((_BYTE *)a2 + 48);
    *(_WORD *)((char *)v4 + 49) = *(_WORD *)((char *)a2 + 49);
    v32 = a3;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)v4 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)v11 = *(uint64_t *)((char *)a2 + v10);
    v11[8] = *((_BYTE *)a2 + v10 + 8);
    v13 = (int *)_s9PlaylistsVMa(0);
    v14 = v13[6];
    v15 = &v11[v14];
    v16 = v12 + v14;
    *(_QWORD *)&v11[v14] = *(_QWORD *)(v12 + v14);
    v17 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
    __dst = &v15[v17];
    v18 = (const void *)(v16 + v17);
    v19 = type metadata accessor for Playlist.Folder(0);
    v20 = *(_QWORD *)(v19 - 8);
    v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
    v21 = v30;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v29(v18, 1, v19))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011B5660);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v24 = v13[7];
    v25 = &v11[v24];
    v26 = (_QWORD *)(v12 + v24);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)(v12 + v13[8]);
    *(_WORD *)&v11[v13[9]] = *(_WORD *)(v12 + v13[9]);
    *(_WORD *)&v11[v13[10]] = *(_WORD *)(v12 + v13[10]);
    *(_QWORD *)((char *)v4 + *(int *)(v32 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v32 + 28));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

id sub_1002F558C(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_retain(a1);
  else
    return a1;
}

double sub_1002F5598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  sub_1002F5684(*(void **)(a1 + 8), *(_BYTE *)(a1 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v4 = a1 + *(int *)(a2 + 24);
  swift_release();
  v5 = (int *)_s9PlaylistsVMa(0);
  v6 = (_QWORD *)(v4 + v5[6]);
  swift_bridgeObjectRelease(*v6);
  v7 = (char *)v6 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v8 = type metadata accessor for Playlist.Folder(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[8]));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1002F5684(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_release(a1);
  else

}

uint64_t sub_1002F5690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  void *v28;
  void *__dst;
  uint64_t v30;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  sub_1002F558C(v6, v7);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  v28 = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  v30 = a3;
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(a2 + v9 + 8);
  v12 = (int *)_s9PlaylistsVMa(0);
  v13 = v12[6];
  v14 = v10 + v13;
  v15 = v11 + v13;
  *(_QWORD *)(v10 + v13) = *(_QWORD *)(v11 + v13);
  v16 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  __dst = (void *)(v14 + v16);
  v17 = (const void *)(v15 + v16);
  v18 = type metadata accessor for Playlist.Folder(0);
  v19 = *(_QWORD *)(v18 - 8);
  v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  v20 = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v27(v17, 1, v18))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  v22 = v12[7];
  v23 = (_QWORD *)(v10 + v22);
  v24 = (_QWORD *)(v11 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_QWORD *)(v10 + v12[8]) = *(_QWORD *)(v11 + v12[8]);
  *(_WORD *)(v10 + v12[9]) = *(_WORD *)(v11 + v12[9]);
  *(_WORD *)(v10 + v12[10]) = *(_WORD *)(v11 + v12[10]);
  *(_QWORD *)(a1 + *(int *)(v30 + 28)) = *(_QWORD *)(a2 + *(int *)(v30 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1002F5880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  int *v43;
  uint64_t v44;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  sub_1002F558C(v6, v7);
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  sub_1002F5684(v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v10 = *(void **)(a1 + 32);
  v11 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  v12 = v11;

  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  v44 = a3;
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_retain();
  swift_release();
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v43 = (int *)_s9PlaylistsVMa(0);
  v17 = v43[6];
  v18 = v15 + v17;
  v19 = v16 + v17;
  v20 = *(_QWORD *)(v15 + v17);
  *(_QWORD *)(v15 + v17) = *(_QWORD *)(v16 + v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v22 = (void *)(v18 + v21);
  v23 = (void *)(v19 + v21);
  v24 = type metadata accessor for Playlist.Folder(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v29 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  v30 = v43[7];
  v31 = (_QWORD *)(v15 + v30);
  v32 = (_QWORD *)(v16 + v30);
  *v31 = *v32;
  v33 = v31[1];
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v33);
  v34 = v43[8];
  v35 = *(_QWORD *)(v15 + v34);
  *(_QWORD *)(v15 + v34) = *(_QWORD *)(v16 + v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v35);
  v36 = v43[9];
  v37 = (_BYTE *)(v15 + v36);
  v38 = (_BYTE *)(v16 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  v39 = v43[10];
  v40 = (_BYTE *)(v15 + v39);
  v41 = (_BYTE *)(v16 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  *(_QWORD *)(a1 + *(int *)(v44 + 28)) = *(_QWORD *)(a2 + *(int *)(v44 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1002F5B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 35) = *(_OWORD *)(a2 + 35);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)(a2 + v6);
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(a2 + v6 + 8);
  v9 = (int *)_s9PlaylistsVMa(0);
  v10 = v9[6];
  v11 = v7 + v10;
  v12 = v8 + v10;
  *(_QWORD *)(v7 + v10) = *(_QWORD *)(v8 + v10);
  v13 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v14 = (void *)(v11 + v13);
  v15 = (const void *)(v12 + v13);
  v16 = type metadata accessor for Playlist.Folder(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)(v7 + v9[7]) = *(_OWORD *)(v8 + v9[7]);
  *(_QWORD *)(v7 + v9[8]) = *(_QWORD *)(v8 + v9[8]);
  *(_WORD *)(v7 + v9[9]) = *(_WORD *)(v8 + v9[9]);
  *(_WORD *)(v7 + v9[10]) = *(_WORD *)(v8 + v9[10]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1002F5C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  void *v45;
  uint64_t v46;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  sub_1002F5684(v8, v9);
  v10 = *(void **)(a1 + 32);
  v11 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v11;

  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  v46 = a3;
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release();
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (int *)_s9PlaylistsVMa(0);
  v17 = v16[6];
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = *(_QWORD *)(v14 + v17);
  *(_QWORD *)(v14 + v17) = *(_QWORD *)(v15 + v17);
  swift_bridgeObjectRelease(v20);
  v21 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v22 = (void *)(v18 + v21);
  v23 = (void *)(v19 + v21);
  v24 = type metadata accessor for Playlist.Folder(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v45 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26(v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v45, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v45, 0, 1, v24);
      goto LABEL_9;
    }
    v28 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B5660) - 8) + 64);
    v29 = v45;
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v45, v23, v24);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v45, v24);
    v28 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B5660) - 8) + 64);
    v29 = v45;
  }
  memcpy(v29, v23, v28);
LABEL_9:
  v30 = v16[7];
  v31 = (_QWORD *)(v14 + v30);
  v32 = (uint64_t *)(v15 + v30);
  v34 = *v32;
  v33 = v32[1];
  v35 = v31[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease(v35);
  v36 = v16[8];
  v37 = *(_QWORD *)(v14 + v36);
  *(_QWORD *)(v14 + v36) = *(_QWORD *)(v15 + v36);
  swift_bridgeObjectRelease(v37);
  v38 = v16[9];
  v39 = (_BYTE *)(v14 + v38);
  v40 = (_BYTE *)(v15 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  v41 = v16[10];
  v42 = (_BYTE *)(v14 + v41);
  v43 = (_BYTE *)(v15 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  *(_QWORD *)(a1 + *(int *)(v46 + 28)) = *(_QWORD *)(a2 + *(int *)(v46 + 28));
  swift_release();
  return a1;
}

uint64_t sub_1002F5F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F5F0C);
}

uint64_t sub_1002F5F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s9PlaylistsVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1002F5F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F5F94);
}

uint64_t sub_1002F5F94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = _s9PlaylistsVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SidebarMenu(uint64_t a1)
{
  return sub_100055934(a1, qword_1011ABAD0, (uint64_t)&nominal type descriptor for SidebarMenu);
}

uint64_t sub_1002F601C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EB3D40;
  v4[1] = &unk_100EB3D58;
  result = _s9PlaylistsVMa(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1002F60A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
  {
    v8 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1002F6158(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 3)
  {
    v4 = type metadata accessor for Playlist.Folder.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1002F61A4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
  {
    v6 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1002F6230(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SidebarMenu.Item);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
    {
      v6 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for SidebarMenu.Item(uint64_t a1)
{
  return sub_100055934(a1, qword_1011ABB80, (uint64_t)&nominal type descriptor for SidebarMenu.Item);
}

void *sub_1002F62E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
  {
    v6 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1002F6374(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SidebarMenu.Item);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
    {
      v6 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002F6418(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EB3D78;
  v4[1] = &unk_100EB3D78;
  v4[2] = &unk_100EB3D90;
  result = type metadata accessor for Playlist.Folder.Item(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 4, v4);
    return 0;
  }
  return result;
}

double sub_1002F6494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  double result;
  _QWORD v29[3];
  _QWORD v30[4];

  v4 = v3;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v10, (uint64_t *)&unk_1011A13B0);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A13B0);
    v14 = 12544;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15, v18);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v21 = v20;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v14 = v22 | 0x3100;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = *v4;
  v24 = swift_allocObject(&unk_1010BEFF0, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  v25 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  v26 = (_QWORD *)(v21 | v19);
  if (v21 | v19)
  {
    v30[0] = 0;
    v30[1] = 0;
    v26 = v30;
    v30[2] = v19;
    v30[3] = v21;
  }
  v29[0] = 1;
  v29[1] = v26;
  v29[2] = v23;
  swift_task_create(v14, v29, v25, &unk_1011ABD70, v24);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1002F6644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v5 = v4;
  v27 = a2;
  v9 = type metadata accessor for SidebarMenu(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    v17 = *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 112)) == 0;
  else
    v17 = 1;
  static TaskPriority.userInitiated.getter(v14);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 0, 1, v18);
  sub_10005B704(v5, (uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SidebarMenu);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = v20 + v11;
  v22 = swift_allocObject(&unk_1010BEF00, (v21 & 0xFFFFFFFFFFFFFFF8) + 24, v19 | 7);
  v23 = (v21 & 0xFFFFFFFFFFFFFFF8) + v22;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  sub_10005B6C0((uint64_t)v12, v22 + v20, type metadata accessor for SidebarMenu);
  *(_BYTE *)(v22 + v21) = v17;
  *(_QWORD *)(v23 + 8) = v27;
  *(_QWORD *)(v23 + 16) = a3;
  swift_retain();
  v24 = sub_1000E8908((uint64_t)v16, (uint64_t)&unk_1011ABC90, v22);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A13B0);
  result = sub_100007E8C(&qword_1011ABC98);
  a4[3] = result;
  a4[4] = (uint64_t)&protocol witness table for Task<A, B>;
  *a4 = v24;
  return result;
}

uint64_t sub_1002F6804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = a7;
  *(_BYTE *)(v7 + 80) = a5;
  *(_QWORD *)(v7 + 40) = a4;
  return swift_task_switch(sub_1002F6824, 0, 0);
}

uint64_t sub_1002F6824()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_BYTE *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v1;
  v5 = sub_100007E8C(&qword_1011ABCB0);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_1002F68E8;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v3, v5, 0, 0, &unk_1011ABCA8, v4, v3);
}

uint64_t sub_1002F68E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1002F6944, 0, 0);
}

uint64_t sub_1002F6944()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 48);
  v2 = *(unsigned __int8 *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = swift_bridgeObjectRetain();
  v1(v6, 0, v4, v5);
  swift_bridgeObjectRelease(v3);
  if (v2 == 1)
  {
    if (v4)
    {
      swift_getObjectType();
      swift_unknownObjectRetain(v4, v7);
      RequestResponseInvalidatable.invalidate()();
      swift_unknownObjectRelease_n(v4, 2);
    }
    v8 = swift_bridgeObjectRelease(v3);
  }
  else
  {
    swift_bridgeObjectRelease(v3);
    v8 = swift_unknownObjectRelease(v4);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_1002F6A04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v4 + 208) = a4;
  *(_QWORD *)(v4 + 40) = a2;
  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 32) = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  *(_QWORD *)(v4 + 56) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011ABCB8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 80) = swift_task_alloc(v7);
  *(_QWORD *)(v4 + 88) = swift_task_alloc(v7);
  v8 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  *(_QWORD *)(v4 + 96) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 104) = v9;
  *(_QWORD *)(v4 + 112) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011ABCC0);
  *(_QWORD *)(v4 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011ABCC8);
  *(_QWORD *)(v4 + 128) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 136) = v12;
  *(_QWORD *)(v4 + 144) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(type metadata accessor for SidebarMenu(0) - 8);
  *(_QWORD *)(v4 + 152) = v13;
  v14 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v4 + 160) = v14;
  *(_QWORD *)(v4 + 168) = swift_task_alloc((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)(v4 + 176) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002F6B68, 0, 0);
}

uint64_t sub_1002F6B68()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v20;
  uint64_t v21;

  v1 = *(_BYTE **)(v0 + 48);
  if (*v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 176);
    v3 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
    v4 = swift_allocObject(&unk_1010BEF78, 32, 7);
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    sub_1002F6494(v2, (uint64_t)&unk_1011ABD00, v4);
    sub_10004FF60(v2, (uint64_t *)&unk_1011A13B0);
    v1 = *(_BYTE **)(v0 + 48);
  }
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 160);
  v21 = *(_QWORD *)(v0 + 96);
  v20 = *(_BYTE *)(v0 + 208);
  v9 = *(_QWORD **)(v0 + 40);
  v10 = type metadata accessor for TaskPriority(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v19(v5, 1, 1, v10);
  sub_10005B704((uint64_t)v1, v6, type metadata accessor for SidebarMenu);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = v12 + v7;
  v14 = v11 | 7;
  v15 = swift_allocObject(&unk_1010BEF28, v12 + v7, v11 | 7);
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  sub_10005B6C0(v6, v15 + v12, type metadata accessor for SidebarMenu);
  sub_1002F6494(v5, (uint64_t)&unk_1011ABCD8, v15);
  sub_10004FF60(v5, (uint64_t *)&unk_1011A13B0);
  v19(v5, 1, 1, v10);
  sub_10005B704((uint64_t)v1, v6, type metadata accessor for SidebarMenu);
  v16 = swift_allocObject(&unk_1010BEF50, v13 + 1, v14);
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  sub_10005B6C0(v6, v16 + v12, type metadata accessor for SidebarMenu);
  *(_BYTE *)(v16 + v13) = v20;
  sub_1002F6494(v5, (uint64_t)&unk_1011ABCE8, v16);
  sub_10004FF60(v5, (uint64_t *)&unk_1011A13B0);
  type metadata accessor for CompoundRequestResponseInvalidation();
  *(_QWORD *)(v0 + 184) = CompoundRequestResponseInvalidation.__allocating_init()();
  TaskGroup.makeAsyncIterator()(*v9, v21);
  *(_QWORD *)(v0 + 192) = &_swiftEmptyDictionarySingleton;
  v17 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 200) = v17;
  *v17 = v0;
  v17[1] = sub_1002F6DE4;
  return TaskGroup.Iterator.next(isolation:)(*(_QWORD *)(v0 + 120), 0, 0, *(_QWORD *)(v0 + 128));
}

uint64_t sub_1002F6DE4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  return swift_task_switch(sub_1002F6E38, 0, 0);
}

uint64_t sub_1002F6E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  __n128 v23;
  _QWORD *v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t (*v28)(unint64_t, uint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  BOOL v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 88);
    v52 = *(_QWORD *)(v0 + 80);
    v53 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD **)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(v7, *(_QWORD *)(v0 + 128));
    *v10 = v4;
    v11 = sub_100048748(&qword_1011ABCF0, (uint64_t (*)(uint64_t))type metadata accessor for CompoundRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for CompoundRequestResponseInvalidation);
    v10[1] = v3;
    v10[2] = v11;
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v1);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(unsigned __int8 **)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 64);
  sub_10005B6C0(v1, (uint64_t)v13, type metadata accessor for SidebarMenu.SectionedSnapshotResult);
  v17 = *v13;
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v16 + 16))(v14, &v13[*(int *)(v2 + 20)], v15);
  v18 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56);
  v18(v14, 0, 1, v15);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v21 = (_QWORD *)(v0 + 192);
  v20 = *(_QWORD **)(v0 + 192);
  if (v19 == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 88), &qword_1011ABCB8);
    v22 = sub_10079C9A8(v17);
    v24 = (_QWORD *)*v21;
    if ((v25 & 1) == 0)
    {
      v27 = 1;
      goto LABEL_12;
    }
    v17 = v22;
    v20 = (_QWORD *)(v0 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v21);
    *(_QWORD *)(v0 + 16) = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
LABEL_6:
      v24 = (_QWORD *)*v21;
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(*v21 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 64) + 72) * v17, *(_QWORD *)(v0 + 56));
      sub_1007AB9F8(v17, (uint64_t)v24);
      v23 = swift_bridgeObjectRelease(0x8000000000000000);
      v27 = 0;
LABEL_12:
      v38 = *(_QWORD *)(v0 + 80);
      ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))v18)(v38, v27, 1, *(_QWORD *)(v0 + 56), v23);
      sub_10004FF60(v38, &qword_1011ABCB8);
      goto LABEL_20;
    }
LABEL_24:
    sub_1007A8578();
    v21 = v20;
    goto LABEL_6;
  }
  v28 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 32);
  v28(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  v29 = swift_isUniquelyReferenced_nonNull_native(v20);
  *(_QWORD *)(v0 + 24) = v20;
  v30 = sub_10079C9A8(v17);
  v32 = v20[2];
  v33 = (v31 & 1) == 0;
  v34 = __OFADD__(v32, v33);
  v35 = v32 + v33;
  if (v34)
  {
    __break(1u);
    goto LABEL_24;
  }
  v36 = v31;
  if (*(_QWORD *)(*v21 + 24) >= v35)
  {
    if ((v29 & 1) == 0)
    {
      v51 = v30;
      sub_1007A8578();
      v30 = v51;
    }
  }
  else
  {
    sub_1007A29F4(v35, v29);
    v30 = sub_10079C9A8(v17);
    if ((v36 & 1) != (v37 & 1))
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SidebarMenu.Section);
  }
  v24 = *(_QWORD **)(v0 + 24);
  v41 = *(_QWORD *)(v0 + 64);
  v40 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  if ((v36 & 1) != 0)
  {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 40))(v24[7] + *(_QWORD *)(v41 + 72) * v30, v40, v42);
  }
  else
  {
    v24[(v30 >> 6) + 8] |= 1 << v30;
    *(_BYTE *)(v24[6] + v30) = v17;
    result = v28(v24[7] + *(_QWORD *)(v41 + 72) * v30, v40, v42);
    v43 = v24[2];
    v34 = __OFADD__(v43, 1);
    v44 = v43 + 1;
    if (v34)
    {
      __break(1u);
      return result;
    }
    v24[2] = v44;
  }
  swift_bridgeObjectRelease(0x8000000000000000);
LABEL_20:
  v45 = *(_QWORD *)(v0 + 112);
  v46 = (_QWORD *)(v45 + *(int *)(*(_QWORD *)(v0 + 96) + 24));
  v47 = *v46;
  if (*v46)
  {
    v48 = v46[1];
    v49 = swift_unknownObjectRetain(*v46, v39);
    CompoundRequestResponseInvalidation.append(_:)(v49, v48);
    swift_unknownObjectRelease(v47);
    v45 = *(_QWORD *)(v0 + 112);
  }
  sub_10005B748(v45, type metadata accessor for SidebarMenu.SectionedSnapshotResult);
  *(_QWORD *)(v0 + 192) = v24;
  v50 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 200) = v50;
  *v50 = v0;
  v50[1] = sub_1002F6DE4;
  return TaskGroup.Iterator.next(isolation:)(*(_QWORD *)(v0 + 120), 0, 0, *(_QWORD *)(v0 + 128));
}

uint64_t sub_1002F723C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[18] = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  v1[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SidebarMenu.Item(0);
  v1[20] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[21] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[22] = swift_task_alloc(v5);
  v1[23] = swift_task_alloc(v5);
  v1[24] = swift_task_alloc(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v1[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[26] = v7;
  v1[27] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002F7308, 0, 0);
}

uint64_t sub_1002F7308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v55;
  uint64_t v56;

  if (qword_10119BE58 != -1)
    swift_once(&qword_10119BE58, sub_1002FBDF8);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)qword_10124CD60);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🔨 Building catalog entry points…", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 160);

  v7 = sub_100048748(&qword_1011ADF50, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3E00);
  NSDiffableDataSourceSectionSnapshot.init()(v6, v7);
  static ApplicationCapabilities.shared.getter(v0 + 16);
  v8 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 136) = v8;
  swift_bridgeObjectRetain();
  sub_100065184((_QWORD *)(v0 + 16));
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 168);
    v11 = (unsigned __int8 *)(v8 + 32);
    swift_bridgeObjectRetain();
    v12 = _swiftEmptyArrayStorage;
    do
    {
      v14 = *v11++;
      v15 = v14 - 1;
      if ((v14 - 1) <= 2)
      {
        v17 = *(_BYTE **)(v0 + 184);
        v16 = *(_QWORD *)(v0 + 192);
        v18 = *(_QWORD *)(v0 + 176);
        v19 = *(_QWORD *)(v0 + 160);
        *v17 = v15;
        swift_storeEnumTagMultiPayload(v17, v19, 1);
        sub_10005B6C0((uint64_t)v17, v16, type metadata accessor for SidebarMenu.Item);
        sub_10005B6C0(v16, v18, type metadata accessor for SidebarMenu.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
          v12 = (_QWORD *)sub_100431A14(0, v12[2] + 1, 1, (unint64_t)v12);
        v21 = v12[2];
        v20 = v12[3];
        if (v21 >= v20 >> 1)
          v12 = (_QWORD *)sub_100431A14(v20 > 1, v21 + 1, 1, (unint64_t)v12);
        v13 = *(_QWORD *)(v0 + 176);
        v12[2] = v21 + 1;
        sub_10005B6C0(v13, (uint64_t)v12+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v21, type metadata accessor for SidebarMenu.Item);
      }
      --v9;
    }
    while (v9);
    sub_1001E3E14((_QWORD *)(v0 + 136));
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  sub_1001E3E14((_QWORD *)(v0 + 136));
  if (v12[2])
  {
    v22 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 152);
    v24.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(v23, 1, 1, *(_QWORD *)(v0 + 160));
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v12, v23, v22, v24);
    swift_bridgeObjectRelease(v12);
    sub_10004FF60(v23, (uint64_t *)&unk_1011CEE40);
  }
  else
  {
    swift_bridgeObjectRelease(v12);
  }
  v25 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 168);
  v28 = *(_QWORD *)(v0 + 152);
  v29 = sub_100007E8C(&qword_1011A23A8);
  v30 = swift_allocObject(v29, 72, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EA7AA0;
  v31 = (id)*ApplicationCapabilities.NotificationNames.supportedTabsDidChange.unsafeMutableAddressor();
  ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v31);
  *(_QWORD *)(v30 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v30 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v30 + 32) = v32;
  *(_QWORD *)(v30 + 40) = v33;
  v34 = type metadata accessor for BindingRequestResponseInvalidation();
  swift_allocObject(v34, 41, 7);
  swift_retain();
  v56 = BindingRequestResponseInvalidation.init(triggers:)(v30);
  v35 = sub_100007E8C(&qword_1011AE000);
  v36 = *(unsigned __int8 *)(v26 + 80);
  v37 = (v36 + 32) & ~v36;
  v38 = swift_allocObject(v35, v37 + *(_QWORD *)(v26 + 72), v36 | 7);
  *(_OWORD *)(v38 + 16) = xmmword_100EA7AA0;
  swift_storeEnumTagMultiPayload(v38 + v37, v27, 5);
  v39.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, 1, 1, v27);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v38, v28, v25, v39);
  swift_bridgeObjectRelease(v38);
  v40 = sub_10004FF60(v28, (uint64_t *)&unk_1011CEE40);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.default.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "🔨✅ Succesfully built catalog entry points", v43, 2u);
    swift_slowDealloc(v43, -1, -1);
  }
  v45 = *(_QWORD *)(v0 + 208);
  v44 = *(_QWORD *)(v0 + 216);
  v47 = *(_QWORD *)(v0 + 192);
  v46 = *(_QWORD *)(v0 + 200);
  v49 = *(_QWORD *)(v0 + 176);
  v48 = *(_QWORD *)(v0 + 184);
  v50 = *(_BYTE **)(v0 + 144);
  v55 = *(_QWORD *)(v0 + 152);

  v51 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  *v50 = 0;
  v52 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v45 + 32))(&v50[*(int *)(v52 + 20)], v44, v46);
  v53 = (uint64_t *)&v50[*(int *)(v52 + 24)];
  *v53 = v56;
  v53[1] = v51;
  swift_task_dealloc(v44);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F7818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_1002F7830, 0, 0);
}

uint64_t sub_1002F7830()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[3];
  v2 = swift_task_alloc(32);
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v3;
  v4 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  *v3 = v0;
  v3[1] = sub_1002F78D0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0[2], 0, 0, 0xD00000000000001CLL, 0x8000000100E35EC0, sub_100300BF8, v2, v4);
}

uint64_t sub_1002F78D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 32);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

double sub_1002F7920(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  _OWORD v40[2];
  uint64_t v41;
  __int128 v42;
  _OWORD v43[2];

  v36 = a1;
  v3 = sub_100007E8C(&qword_1011ABD20);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v37 = v5;
  v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a2 + 24);
  v42 = *(_OWORD *)(a2 + 8);
  v43[0] = v9;
  *(_OWORD *)((char *)v43 + 11) = *(_OWORD *)(a2 + 35);
  if (qword_10119BE58 != -1)
    swift_once(&qword_10119BE58, sub_1002FBDF8);
  v10 = type metadata accessor for Logger(0);
  sub_100048B14(v10, (uint64_t)qword_10124CD60);
  sub_100300C00((uint64_t)&v42);
  v11 = sub_100300C00((uint64_t)&v42);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v41 = v15;
    *(_DWORD *)v14 = 136446210;
    v39 = v42;
    v40[0] = v43[0];
    *(_OWORD *)((char *)v40 + 11) = *(_OWORD *)((char *)v43 + 11);
    sub_100300C00((uint64_t)&v42);
    v16 = String.init<A>(describing:)(&v39, &type metadata for Library.Menu.Request);
    v18 = v17;
    *(_QWORD *)&v39 = sub_100322200(v16, v17, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, (char *)&v39 + 8);
    swift_bridgeObjectRelease(v18);
    sub_100300C44((uint64_t)&v42);
    sub_100300C44((uint64_t)&v42);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "🔨 Building library menu using request=%{public}s…", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_100300C44((uint64_t)&v42);
    sub_100300C44((uint64_t)&v42);
  }

  v19 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v20 = swift_allocBox(v19);
  v21 = type metadata accessor for SidebarMenu.Item(0);
  v22 = sub_100048748(&qword_1011ADF50, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3E00);
  NSDiffableDataSourceSectionSnapshot.init()(v21, v22);
  v23 = sub_100007E8C(&qword_1011AE000);
  v24 = *(_QWORD *)(v21 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = swift_allocObject(v23, v26 + *(_QWORD *)(v24 + 72), v25 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AA0;
  *(_BYTE *)(v27 + v26) = 1;
  swift_storeEnumTagMultiPayload(v27 + v26, v21, 0);
  v28.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v8, 1, 1, v21);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v27, v8, v19, v28);
  swift_bridgeObjectRelease(v27);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011CEE40);
  v29 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v38, v36, v3);
  v30 = *(unsigned __int8 *)(v4 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = (v37 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject(&unk_1010BF018, v32 + 8, v30 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v33 + v31, v29, v3);
  *(_QWORD *)(v33 + v32) = v20;
  swift_retain();
  Library.Menu.Request.perform(_:_:)(sub_100300D00, v33, (uint64_t *)&v39);
  swift_release();
  sub_10004FF60((uint64_t)&v39, (uint64_t *)&unk_1011CEEB0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1002F7D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  int64_t v35;
  id v36;
  _QWORD *v37;
  char *v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  __n128 v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  __n128 v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[3];
  uint64_t v67[7];
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v65 = a2;
  sub_100065228(a1, (uint64_t)v67, (uint64_t *)&unk_1011C4750);
  v9 = v67[0];
  v64 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  __chkstk_darwin(v64);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v12);
  v61 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SidebarMenu.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v62 = swift_projectBox(a5);
  sub_100065228(a1, (uint64_t)&v68, (uint64_t *)&unk_1011C4750);
  v18 = v68;
  if ((v74 & 1) != 0)
  {
    swift_errorRetain(v9);
    if (qword_10119BE58 != -1)
      swift_once(&qword_10119BE58, sub_1002FBDF8);
    v19 = type metadata accessor for Logger(0);
    sub_100048B14(v19, (uint64_t)qword_10124CD60);
    swift_errorRetain(v9);
    v20 = swift_errorRetain(v9);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v60 = a4;
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v58 = v11;
      v25 = v24;
      v66[0] = v24;
      v59 = a3;
      *(_DWORD *)v23 = 136446210;
      v79 = v18;
      swift_errorRetain(v9);
      v26 = sub_100007E8C(&qword_1011A14B0);
      v27 = String.init<A>(describing:)(&v79, v26);
      v29 = v28;
      v79 = sub_100322200(v27, v28, v66);
      v30 = v65;
      a3 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
      swift_bridgeObjectRelease(v29);
      sub_100300D6C(a1);
      sub_100300D6C(a1);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "🔨❌ Failed to build library menu with error=%{public}s", v23, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      v31 = v25;
      v11 = v58;
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      sub_100300D6C(a1);
      v32 = v63;
      v33 = v62;
    }
    else
    {
      sub_100300D6C(a1);
      sub_100300D6C(a1);
      swift_errorRelease(v9);

      v32 = v63;
      v33 = v62;
      v30 = v65;
    }
  }
  else
  {
    v34 = v69;
    v75 = v68;
    v76 = v73;
    v78 = v71;
    v79 = v70;
    v77 = v72;
    v35 = *(_QWORD *)(v68 + 16);
    v57 = v69;
    if (v35)
    {
      v58 = v11;
      v59 = a3;
      v60 = a4;
      sub_100055D0C(&v75);
      v36 = v34;
      sub_100055D0C(&v79);
      sub_100055D0C(&v78);
      sub_100055D0C(&v77);
      sub_100055D0C(&v76);
      v66[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_10035C8F8(0, v35, 0);
      v37 = (_QWORD *)v66[0];
      v38 = (char *)(v18 + 32);
      do
      {
        v39 = *v38++;
        *v17 = v39;
        swift_storeEnumTagMultiPayload(v17, v14, 2);
        v66[0] = (uint64_t)v37;
        v41 = v37[2];
        v40 = v37[3];
        if (v41 >= v40 >> 1)
        {
          sub_10035C8F8(v40 > 1, v41 + 1, 1);
          v37 = (_QWORD *)v66[0];
        }
        v37[2] = v41 + 1;
        sub_10005B6C0((uint64_t)v17, (uint64_t)v37+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v41, type metadata accessor for SidebarMenu.Item);
        --v35;
      }
      while (v35);
      v30 = v65;
      a3 = v59;
      v11 = v58;
    }
    else
    {
      sub_100055D0C(&v75);
      v42 = v34;
      sub_100055D0C(&v79);
      sub_100055D0C(&v78);
      sub_100055D0C(&v77);
      sub_100055D0C(&v76);
      v37 = _swiftEmptyArrayStorage;
      v30 = v65;
    }
    v33 = v62;
    if (v37[2])
    {
      v43 = (uint64_t)v61;
      *v61 = 1;
      swift_storeEnumTagMultiPayload(v43, v14, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v43, 0, 1, v14);
      v44 = swift_beginAccess(v33, v66, 33, 0);
      v32 = v63;
      NSDiffableDataSourceSectionSnapshot.append(_:to:)(v37, v43, v63, v44);
      swift_endAccess(v66);
      swift_bridgeObjectRelease(v37);
      sub_10004FF60(v43, (uint64_t *)&unk_1011CEE40);
    }
    else
    {
      swift_bridgeObjectRelease(v37);
      v32 = v63;
    }
    v45 = v57;
    if (qword_10119BE58 != -1)
      swift_once(&qword_10119BE58, sub_1002FBDF8);
    v46 = type metadata accessor for Logger(0);
    v47 = sub_100048B14(v46, (uint64_t)qword_10124CD60);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "🔨✅ Successfully built library menu", v50, 2u);
      swift_slowDealloc(v50, -1, -1);

      sub_1001E3E14(&v75);
      sub_1001E3E14(&v79);
      sub_1001E3E14(&v78);
      sub_1001E3E14(&v77);
      sub_1001E3E14(&v76);
    }
    else
    {
      sub_1001E3E14(&v75);

      sub_1001E3E14(&v79);
      sub_1001E3E14(&v78);
      sub_1001E3E14(&v77);
      sub_1001E3E14(&v76);

    }
  }
  v51 = swift_beginAccess(v33, v66, 0, 0);
  v52 = v64;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v32 - 8) + 16))(&v11[*(int *)(v64 + 20)], v33, v32, v51);
  *v11 = 1;
  v53 = &v11[*(int *)(v52 + 24)];
  *v53 = v30;
  v53[1] = a3;
  swift_unknownObjectRetain(v30, v54);
  v55 = sub_100007E8C(&qword_1011ABD20);
  return CheckedContinuation.resume(returning:)(v11, v55);
}

uint64_t sub_1002F844C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + 96) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  v6 = sub_100007E8C(&qword_1011ABD10);
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  *(_QWORD *)(v5 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  *(_QWORD *)(v5 + 56) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 64) = v9;
  *(_QWORD *)(v5 + 72) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002F8500, 0, 0);
}

uint64_t sub_1002F8500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double (*v26)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  if (qword_10119BE58 != -1)
    swift_once(&qword_10119BE58, sub_1002FBDF8);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)qword_10124CD60);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🔨 Building playlists…", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_BYTE **)(v0 + 48);
  v31 = *(_BYTE *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 40);
  v30 = *(_QWORD *)(v0 + 32);
  v27 = *(_QWORD *)(v0 + 56);
  v28 = *(_QWORD *)(v0 + 24);

  v7 = type metadata accessor for SidebarMenu.Item(0);
  v8 = sub_100048748(&qword_1011ADF50, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3E00);
  NSDiffableDataSourceSectionSnapshot.init()(v7, v8);
  v9 = sub_100007E8C(&qword_1011AE000);
  v10 = *(_QWORD *)(v7 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = v12 + *(_QWORD *)(v10 + 72);
  v14 = v11 | 7;
  v15 = swift_allocObject(v9, v13, v11 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA7AA0;
  *(_BYTE *)(v15 + v12) = 2;
  swift_storeEnumTagMultiPayload(v15 + v12, v7, 0);
  v26 = *(double (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v16.n128_f64[0] = v26(v6, 1, 1, v7);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v15, v6, v27, v16);
  swift_bridgeObjectRelease(v15);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011CEE40);
  v17 = swift_allocObject(v9, v13, v14);
  *(_OWORD *)(v17 + 16) = xmmword_100EA7AA0;
  *(_BYTE *)(v17 + v12) = 1;
  swift_storeEnumTagMultiPayload(v17 + v12, v7, 2);
  *v6 = 2;
  swift_storeEnumTagMultiPayload(v6, v7, 0);
  v18.n128_f64[0] = v26(v6, 0, 1, v7);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v17, v6, v27, v18);
  swift_bridgeObjectRelease(v17);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011CEE40);
  v19 = type metadata accessor for SidebarMenu(0);
  sub_10005B704(v28 + *(int *)(v19 + 24), v29, _s9PlaylistsVMa);
  v20 = sub_100007E8C(&qword_1011ABD18);
  v21 = (_QWORD *)swift_allocObject(v20, 64, 7);
  v21[2] = sub_1002F8940;
  v21[3] = 0;
  v21[4] = sub_1002F8B7C;
  v21[5] = 0;
  v21[6] = sub_1002F8E84;
  v21[7] = 0;
  *(_QWORD *)(v29 + *(int *)(v30 + 28)) = v21;
  v22 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 80) = v22;
  *(_BYTE *)(v22 + 16) = v31;
  *(_QWORD *)(v22 + 24) = v29;
  *(_QWORD *)(v22 + 32) = v28;
  v23 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 88) = v23;
  v24 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  *v23 = v0;
  v23[1] = sub_1002F8874;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD00000000000001CLL, 0x8000000100E35EC0, sub_1003006FC, v22, v24);
}

uint64_t sub_1002F8874()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1002F88D0, 0, 0);
}

uint64_t sub_1002F88D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v1, *(_QWORD *)(v0 + 56));
  sub_10004FF60(v3, &qword_1011ABD10);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F8940(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;

  v2 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Folder.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SidebarMenu.Item(0);
  v13 = sub_100048748(&qword_1011ADF50, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3E00);
  NSDiffableDataSourceSectionSnapshot.init()(v12, v13);
  sub_10004A160(a1, (uint64_t)v7, (uint64_t *)&unk_1011AD730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011AD730);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v15 = sub_100007E8C(&qword_1011AE000);
  v16 = *(_QWORD *)(v12 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject(v15, v18 + *(_QWORD *)(v16 + 72), v17 | 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EA7AA0;
  v20 = v19 + v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v20, v11, v8);
  swift_storeEnumTagMultiPayload(v20, v12, 3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v12);
  v21 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v19, v4, v21, v22);
  swift_bridgeObjectRelease(v19);
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011CEE40);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1002F8B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  __n128 v33;
  uint64_t v34;

  v4 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist.Folder.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a2, (uint64_t)v9, (uint64_t *)&unk_1011AD730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011AD730);
    v14 = sub_100007E8C(&qword_1011AE000);
    v15 = type metadata accessor for SidebarMenu.Item(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned __int8 *)(v16 + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject(v14, v18 + *(_QWORD *)(v16 + 72), v17 | 7);
    *(_OWORD *)(v19 + 16) = xmmword_100EA7AA0;
    v20 = v19 + v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v20, a1, v10);
    swift_storeEnumTagMultiPayload(v20, v15, 3);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v6, 1, 1, v15);
    v21 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v19, v6, v21, v22);
    swift_bridgeObjectRelease(v19);
    return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011CEE40);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v24 = sub_100007E8C(&qword_1011AE000);
    v25 = type metadata accessor for SidebarMenu.Item(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned __int8 *)(v26 + 80);
    v28 = (v27 + 32) & ~v27;
    v29 = swift_allocObject(v24, v28 + *(_QWORD *)(v26 + 72), v27 | 7);
    *(_OWORD *)(v29 + 16) = xmmword_100EA7AA0;
    v30 = v29 + v28;
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v31(v30, a1, v10);
    swift_storeEnumTagMultiPayload(v30, v25, 3);
    v31((uint64_t)v6, (uint64_t)v13, v10);
    swift_storeEnumTagMultiPayload(v6, v25, 3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v6, 0, 1, v25);
    v32 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v29, v6, v32, v33);
    swift_bridgeObjectRelease(v29);
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011CEE40);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1002F8E84(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a2;
  v34 = a4;
  v30 = a3;
  v31 = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v4);
  v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarMenu.Item(0);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v32 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Playlist.Folder.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v30, (uint64_t)v17, (uint64_t *)&unk_1011AD730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011AD730);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v11, v31, v18);
    swift_storeEnumTagMultiPayload(v11, v6, 3);
    NSDiffableDataSourceSectionSnapshot.snapshot(of:includingParent:)(v11, 0, v12);
    sub_10005B748((uint64_t)v11, type metadata accessor for SidebarMenu.Item);
    v22 = NSDiffableDataSourceSectionSnapshot.items.getter(v12);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v12);
    v23 = (uint64_t)v29;
    v24.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v29, 1, 1, v6);
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v22, v23, v12, v24);
    swift_bridgeObjectRelease(v22);
    return sub_10004FF60(v23, (uint64_t *)&unk_1011CEE40);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    v26 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    v26(v11, v21, v18);
    swift_storeEnumTagMultiPayload(v11, v6, 3);
    v26(v8, v31, v18);
    swift_storeEnumTagMultiPayload(v8, v6, 3);
    NSDiffableDataSourceSectionSnapshot.snapshot(of:includingParent:)(v8, 0, v12);
    sub_10005B748((uint64_t)v8, type metadata accessor for SidebarMenu.Item);
    NSDiffableDataSourceSectionSnapshot.replace(childrenOf:using:)(v11, v14, v12);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v12);
    sub_10005B748((uint64_t)v11, type metadata accessor for SidebarMenu.Item);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
}

double sub_1002F91D4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double (*v23)(_BYTE *, uint64_t, uint64_t, uint64_t);
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[6];

  v46 = a4;
  v49 = a3;
  v51 = a2;
  v53 = a1;
  v45 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  __chkstk_darwin(v45);
  v44 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011ABD20);
  v48 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v43 = v5;
  v47 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarMenu(0);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v41 = v7;
  v42 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v52 = swift_allocBox(v11);
  v13 = v12;
  v14 = type metadata accessor for SidebarMenu.Item(0);
  v15 = sub_100048748(&qword_1011ADF50, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3E00);
  NSDiffableDataSourceSectionSnapshot.init()(v14, v15);
  v16 = sub_100007E8C(&qword_1011AE000);
  v17 = *(_QWORD *)(v14 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = v19 + *(_QWORD *)(v17 + 72);
  v21 = v18 | 7;
  v22 = swift_allocObject(v16, v20, v18 | 7);
  v50 = xmmword_100EA7AA0;
  *(_OWORD *)(v22 + 16) = xmmword_100EA7AA0;
  *(_BYTE *)(v22 + v19) = 2;
  swift_storeEnumTagMultiPayload(v22 + v19, v14, 0);
  v23 = *(double (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v24.n128_f64[0] = v23(v10, 1, 1, v14);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v22, v10, v11, v24);
  swift_bridgeObjectRelease(v22);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011CEE40);
  v25 = swift_allocObject(v16, v20, v21);
  *(_OWORD *)(v25 + 16) = v50;
  *(_BYTE *)(v25 + v19) = 1;
  swift_storeEnumTagMultiPayload(v25 + v19, v14, 2);
  *v10 = 2;
  swift_storeEnumTagMultiPayload(v10, v14, 0);
  v26.n128_f64[0] = v23(v10, 0, 1, v14);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v25, v10, v11, v26);
  swift_bridgeObjectRelease(v25);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011CEE40);
  if ((v51 & 1) != 0)
  {
    v28 = v44;
    v27 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(&v44[*(int *)(v45 + 20)], v13, v11);
    *v28 = 2;
    v29 = &v28[*(int *)(v27 + 24)];
    *v29 = 0;
    v29[1] = 0;
    CheckedContinuation.resume(returning:)(v28, v54);
  }
  else
  {
    v30 = v42;
    sub_10005B704(v46, v42, type metadata accessor for SidebarMenu);
    v32 = v47;
    v31 = v48;
    v33 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v53, v54);
    v34 = *(unsigned __int8 *)(v40 + 80);
    v35 = (v34 + 24) & ~v34;
    v36 = *(unsigned __int8 *)(v31 + 80);
    v37 = (v41 + v36 + v35) & ~v36;
    v38 = swift_allocObject(&unk_1010BEFA0, v37 + v43, v34 | v36 | 7);
    *(_QWORD *)(v38 + 16) = v52;
    sub_10005B6C0(v30, v38 + v35, type metadata accessor for SidebarMenu);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v38 + v37, v32, v33);
    swift_retain();
    sub_1002F9C44((uint64_t)sub_100300898, v38, v55);
    swift_release();
    sub_10004FF60((uint64_t)v55, (uint64_t *)&unk_1011CEEB0);
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1002F95CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  __n128 v52;
  uint64_t v53;
  _BYTE *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  void (**v62)(char *, uint64_t, uint64_t, __n128);
  __n128 v63;
  uint64_t v64;
  _BYTE *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[3];

  v78 = a6;
  v73 = a5;
  v75 = a3;
  v76 = a2;
  v74 = type metadata accessor for SidebarMenu.SectionedSnapshotResult(0);
  __chkstk_darwin(v74);
  v77 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v9);
  v72 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SidebarMenu.Item(0);
  v71 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011ABD38);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = swift_projectBox(a4);
  sub_10004A160(a1, (uint64_t)v20, &qword_1011ABD38);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    v72 = (_BYTE *)v15;
    v73 = v14;
    v22 = *v20;
    if (qword_10119BE58 != -1)
      swift_once(&qword_10119BE58, sub_1002FBDF8);
    v23 = type metadata accessor for Logger(0);
    sub_100048B14(v23, (uint64_t)qword_10124CD60);
    swift_errorRetain(v22);
    v24 = swift_errorRetain(v22);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v79 = v22;
      v80[0] = v28;
      *(_DWORD *)v27 = 136446210;
      swift_errorRetain(v22);
      v29 = sub_100007E8C(&qword_1011A14B0);
      v30 = String.init<A>(describing:)(&v79, v29);
      v32 = v31;
      v79 = sub_100322200(v30, v31, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, v80);
      swift_bridgeObjectRelease(v32);
      swift_errorRelease(v22);
      swift_errorRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "🔨❌ Failed to build sidebar playlists with error=%{public}s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      swift_errorRelease(v22);
      swift_errorRelease(v22);
    }

    v62 = (void (**)(char *, uint64_t, uint64_t, __n128))v72;
    v61 = v73;
    v63 = swift_beginAccess(v21, v80, 0, 0);
    v64 = v74;
    v65 = v77;
    v62[2](&v77[*(int *)(v74 + 20)], v21, v61, v63);
    *v65 = 2;
    v66 = &v65[*(int *)(v64 + 24)];
    v68 = v75;
    v67 = v76;
    *v66 = v76;
    v66[1] = v68;
    swift_unknownObjectRetain(v67, v69);
    v70 = sub_100007E8C(&qword_1011ABD20);
    CheckedContinuation.resume(returning:)(v65, v70);
    return swift_errorRelease(v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v15 + 32))(v17, v20, v14);
    *v13 = 1;
    swift_storeEnumTagMultiPayload(v13, v11, 2);
    v33 = swift_beginAccess(v21, v80, 33, 0);
    NSDiffableDataSourceSectionSnapshot.insert(_:after:)(v17, v13, v14, v33);
    swift_endAccess(v80);
    sub_10005B748((uint64_t)v13, type metadata accessor for SidebarMenu.Item);
    type metadata accessor for MusicLibrary(0);
    v34 = type metadata accessor for SidebarMenu(0);
    v35 = *(_QWORD *)(v73 + *(int *)(v34 + 28));
    v36 = static MusicLibrary.shared.getter(v34);
    v37 = static MusicLibrary.== infix(_:_:)(v35, v36);
    swift_release();
    v38 = v14;
    v39 = v17;
    if ((v37 & 1) != 0 && (*(_BYTE *)(v73 + *(int *)(v34 + 24) + 8) & 1) == 0)
    {
      v40 = sub_100007E8C(&qword_1011AE000);
      v41 = v71;
      v42 = *(unsigned __int8 *)(v71 + 80);
      v43 = (v42 + 32) & ~v42;
      v44 = swift_allocObject(v40, v43 + *(_QWORD *)(v71 + 72), v42 | 7);
      *(_OWORD *)(v44 + 16) = xmmword_100EA7AA0;
      swift_storeEnumTagMultiPayload(v44 + v43, v11, 4);
      v45 = (uint64_t)v72;
      *v72 = 2;
      swift_storeEnumTagMultiPayload(v45, v11, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v45, 0, 1, v11);
      v46 = swift_beginAccess(v21, v80, 33, 0);
      NSDiffableDataSourceSectionSnapshot.append(_:to:)(v44, v45, v38, v46);
      swift_endAccess(v80);
      swift_bridgeObjectRelease(v44);
      sub_10004FF60(v45, (uint64_t *)&unk_1011CEE40);
    }
    if (qword_10119BE58 != -1)
      swift_once(&qword_10119BE58, sub_1002FBDF8);
    v47 = type metadata accessor for Logger(0);
    v48 = sub_100048B14(v47, (uint64_t)qword_10124CD60);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "🔨✅ Successfully built sidebar playlists", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    v52 = swift_beginAccess(v21, v80, 0, 0);
    v53 = v74;
    v54 = v77;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(&v77[*(int *)(v74 + 20)], v21, v38, v52);
    *v54 = 2;
    v55 = &v54[*(int *)(v53 + 24)];
    v57 = v75;
    v56 = v76;
    *v55 = v76;
    v55[1] = v57;
    swift_unknownObjectRetain(v56, v58);
    v59 = sub_100007E8C(&qword_1011ABD20);
    CheckedContinuation.resume(returning:)(v54, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v39, v38);
  }
}

uint64_t sub_1002F9C44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;

  v4 = v3;
  v47 = a1;
  v48 = a2;
  v49 = a3;
  v5 = sub_100007E8C(&qword_1011ABD10);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v6;
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v12 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  v13 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  v17 = type metadata accessor for TitledSection(0);
  v18 = type metadata accessor for Playlist.Folder.Item(0);
  v19 = sub_100048748(&qword_1011A18B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  MusicLibrarySectionedRequest.init()(v17, v18, &protocol witness table for TitledSection, v19);
  MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v11);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v20, v11);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v4 + 8), v11);
  sub_10010A708((uint64_t)v16);
  sub_10010AA98();
  sub_10010ADA8();
  v21 = *(Swift::String *)(v4 + *(int *)(_s9PlaylistsVMa(0) + 28));
  MusicLibrarySectionedRequest.filterItems(text:)(v21);
  v22 = *(_QWORD *)(v4 + *(int *)(v5 + 28));
  v43 = v10;
  static TaskPriority.userInitiated.getter(v23);
  v24 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 0, 1, v24);
  v25 = v13;
  v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v27 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26(v27, v16, v11);
  v28 = v44;
  sub_10004A160(v4, v44, &qword_1011ABD10);
  v29 = *(unsigned __int8 *)(v25 + 80);
  v30 = (v29 + 40) & ~v29;
  v31 = *(unsigned __int8 *)(v45 + 80);
  v32 = (v12 + v31 + v30) & ~v31;
  v33 = (v46 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (char *)swift_allocObject(&unk_1010BEFC8, v33 + 16, v29 | v31 | 7);
  *((_QWORD *)v34 + 2) = 0;
  *((_QWORD *)v34 + 3) = 0;
  *((_QWORD *)v34 + 4) = v22;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v34[v30], v27, v11);
  sub_100065228(v28, (uint64_t)&v34[v32], &qword_1011ABD10);
  v35 = &v34[v33];
  v36 = v48;
  *(_QWORD *)v35 = v47;
  *((_QWORD *)v35 + 1) = v36;
  swift_retain();
  swift_retain();
  v37 = (uint64_t)v43;
  v38 = sub_1000E8908((uint64_t)v43, (uint64_t)&unk_1011ABD30, (uint64_t)v34);
  sub_10004FF60(v37, (uint64_t *)&unk_1011A13B0);
  v39 = sub_100007E8C(&qword_1011ABC98);
  v40 = v49;
  v49[3] = v39;
  v40[4] = (uint64_t)&protocol witness table for Task<A, B>;
  *v40 = v38;
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v16, v11);
}

uint64_t sub_1002F9F84(unsigned __int8 a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  _BYTE v10[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
    return a1;
  if (a1 == 1)
  {
    v6 = 0x7972617262694CLL;
    v7 = 0xE700000000000000;
  }
  else
  {
    v6 = 0x7473696C79616C50;
    v7 = 0xE900000000000073;
  }
  v9 = String.LocalizationValue.init(stringLiteral:)(v6, v7);
  static Locale.current.getter(v9);
  return String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v3, 0, 0, 256);
}

uint64_t *sub_1002FA09C@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_1002FA0B4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_1002FA0C0(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AB8A8;
}

uint64_t sub_1002FA0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002FB73C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1002FA12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002FB73C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1002FA178(char a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_1002FA1EC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;

  *v2 = 0;
  swift_storeEnumTagMultiPayload(v2, v0, 2);
  sub_10005B6C0((uint64_t)v2, v1, type metadata accessor for SidebarMenu.Item);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v0);
}

uint64_t sub_1002FA268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v1, 1, 1, v0);
}

void sub_1002FA294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for Playlist.Folder.Item(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v4, v5);
  v6 = (char *)sub_1002FA360 + 4 * byte_100EB3CD6[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

void sub_1002FA360()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_1002FA444()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1002FA294();
  return Hasher._finalize()();
}

Swift::Int sub_1002FA484(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1002FA294();
  return Hasher._finalize()();
}

uint64_t sub_1002FA4C8()
{
  return sub_100048748(&qword_1011ABBB8, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3DA8);
}

uint64_t sub_1002FA4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100301E48();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1002FA550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100301E48();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1002FA59C()
{
  return 0x4D72616265646953;
}

double sub_1002FA5BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  double result;

  v8 = swift_allocObject(&unk_1010BEED8, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  sub_1002F6644(a1, (uint64_t)sub_1002FB7A4, v8, a4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1002FA638(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011ABBF0, type metadata accessor for SidebarMenu, (uint64_t)&unk_100EB3E40);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002FA674()
{
  return sub_100049F28(&qword_1011ABBF8, &qword_1011ABC00, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1002FA6A4()
{
  unint64_t result;

  result = qword_1011ABC08;
  if (!qword_1011ABC08)
  {
    result = swift_getWitnessTable(&unk_100EB3F84, &type metadata for SidebarMenu.Section);
    atomic_store(result, (unint64_t *)&qword_1011ABC08);
  }
  return result;
}

void sub_1002FA6E8(char *a1)
{
  sub_1005D1C34(*a1);
}

void sub_1002FA6F4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1002FA740()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x676F6C61746163, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

void sub_1002FA7BC()
{
  __asm { BR              X10 }
}

uint64_t sub_1002FA7F8(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, 0x676F6C61746163, v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_1002FA860(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1002FA8A8()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x676F6C61746163, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

unint64_t sub_1002FA924@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100301E8C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002FA950()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1002FA980 + 4 * byte_100EB3CEB[*v0]))();
}

void sub_1002FA980(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676F6C61746163;
  a1[1] = v1;
}

void sub_1002FA998(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7972617262696CLL;
  a1[1] = v1;
}

void sub_1002FA9B0(_QWORD *a1@<X8>)
{
  *a1 = 0x686372616573;
  a1[1] = 0xE600000000000000;
}

void sub_1002FA9C8(_QWORD *a1@<X8>)
{
  *a1 = 0x7473696C79616C70;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1002FA9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100301E04();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1002FAA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100301E04();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1002FAA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v3, v4);
  v5 = (char *)sub_1002FAB18 + 4 * byte_100EB3CF0[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_1002FAB18()
{
  return 1;
}

uint64_t sub_1002FAB60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v10;
  uint64_t v11;

  v3 = sub_100007E8C(&qword_1011ABC10);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v4);
  v6 = a1[3];
  v5 = a1[4];
  sub_100007E68(a1, v6);
  v7 = sub_1002FB430();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SidebarMenu.Item.CodingKeys, &type metadata for SidebarMenu.Item.CodingKeys, v7, v6, v5);
  if (!v1)
  {
    v10 = 0;
    v8 = sub_1002FB474();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v11, &type metadata for SidebarMenu.Item._Raw, &v10, v3, &type metadata for SidebarMenu.Item._Raw, v8);
    __asm { BR              X10 }
  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
}

void sub_1002FACE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;

  *(_BYTE *)(v7 - 72) = 1;
  v8 = sub_1002FB584();
  KeyedDecodingContainer.decode<A>(_:forKey:)((_QWORD *)(v7 - 71), &type metadata for SidebarMenu.Section, v7 - 72, v3, &type metadata for SidebarMenu.Section, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  if (!v1)
  {
    *v6 = *(_BYTE *)(v7 - 71);
    swift_storeEnumTagMultiPayload(v6, v2, 0);
    sub_10005B6C0((uint64_t)v6, v0, type metadata accessor for SidebarMenu.Item);
  }
  JUMPOUT(0x1002FAC9CLL);
}

void sub_1002FAE40()
{
  unint64_t v0;
  _BYTE *v1;
  __n128 v2;

  v0 = sub_1002FB4B8();
  swift_allocError(&type metadata for SidebarMenu.Item.DecodingError, v0, 0, 0);
  *v1 = 4;
  swift_willThrow(v2);
  JUMPOUT(0x1002FAC8CLL);
}

uint64_t sub_1002FAE74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[2];
  char v21;
  char v22;

  v2 = v1;
  v4 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011ABC48);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_100007E68(a1, v11);
  v13 = sub_1002FB430();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SidebarMenu.Item.CodingKeys, &type metadata for SidebarMenu.Item.CodingKeys, v13, v11, v12);
  sub_1002FAA8C();
  v22 = v14;
  v21 = 0;
  v15 = sub_100007E8C(&qword_1011ABC50);
  v16 = sub_1002FB5C8();
  v17 = v20[1];
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v7, v15, v16);
  if (!v17)
  {
    sub_10005B704(v2, (uint64_t)v6, type metadata accessor for SidebarMenu.Item);
    v18 = (char *)&loc_1002FAFD4 + 4 * byte_100EB3CFB[swift_getEnumCaseMultiPayload(v6, v4)];
    __asm { BR              X10 }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1002FB09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_10005B748(v3, type metadata accessor for SidebarMenu.Item);
  JUMPOUT(0x1002FB078);
}

uint64_t sub_1002FB0C0(char *a1, char *a2)
{
  return sub_1005D1DAC(*a1, *a2);
}

Swift::Int sub_1002FB0CC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x746169636F737361;
  else
    v2 = 0xD000000000000011;
  if (v1)
    v3 = 0xEF65756C61566465;
  else
    v3 = 0x8000000100E2B3E0;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002FB15C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x746169636F737361;
  else
    v2 = 0xD000000000000011;
  if (*v1)
    v3 = 0xEF65756C61566465;
  else
    v3 = 0x8000000100E2B3E0;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1002FB1C8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x746169636F737361;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0xEF65756C61566465;
  else
    v4 = 0x8000000100E2B3E0;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1002FB254@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AB968, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1002FB2B0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000011;
  if (*v1)
    v2 = 0x746169636F737361;
  v3 = 0x8000000100E2B3E0;
  if (*v1)
    v3 = 0xEF65756C61566465;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1002FB300()
{
  _BYTE *v0;

  if (*v0)
    return 0x746169636F737361;
  else
    return 0xD000000000000011;
}

uint64_t sub_1002FB34C@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;
  char v7;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AB968, v3);
  result = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1002FB3AC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1002FB3B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002FB430();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002FB3E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002FB430();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002FB408(_QWORD *a1)
{
  return sub_1002FAB60(a1);
}

uint64_t sub_1002FB41C(_QWORD *a1)
{
  return sub_1002FAE74(a1);
}

unint64_t sub_1002FB430()
{
  unint64_t result;

  result = qword_1011ABC18;
  if (!qword_1011ABC18)
  {
    result = swift_getWitnessTable(&unk_100EB4368, &type metadata for SidebarMenu.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011ABC18);
  }
  return result;
}

unint64_t sub_1002FB474()
{
  unint64_t result;

  result = qword_1011ABC20;
  if (!qword_1011ABC20)
  {
    result = swift_getWitnessTable(&unk_100EB4340, &type metadata for SidebarMenu.Item._Raw);
    atomic_store(result, (unint64_t *)&qword_1011ABC20);
  }
  return result;
}

unint64_t sub_1002FB4B8()
{
  unint64_t result;

  result = qword_1011ABC28;
  if (!qword_1011ABC28)
  {
    result = swift_getWitnessTable(&unk_100EB4300, &type metadata for SidebarMenu.Item.DecodingError);
    atomic_store(result, (unint64_t *)&qword_1011ABC28);
  }
  return result;
}

unint64_t sub_1002FB4FC()
{
  unint64_t result;

  result = qword_1011ABC30;
  if (!qword_1011ABC30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1011ABC30);
  }
  return result;
}

unint64_t sub_1002FB540()
{
  unint64_t result;

  result = qword_1011ABC38;
  if (!qword_1011ABC38)
  {
    result = swift_getWitnessTable(&unk_100EB42D8, &type metadata for SidebarMenu.StoreTab);
    atomic_store(result, (unint64_t *)&qword_1011ABC38);
  }
  return result;
}

unint64_t sub_1002FB584()
{
  unint64_t result;

  result = qword_1011ABC40;
  if (!qword_1011ABC40)
  {
    result = swift_getWitnessTable(&unk_100EB3EAC, &type metadata for SidebarMenu.Section);
    atomic_store(result, (unint64_t *)&qword_1011ABC40);
  }
  return result;
}

unint64_t sub_1002FB5C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ABC58;
  if (!qword_1011ABC58)
  {
    v1 = sub_100044B54(&qword_1011ABC50);
    sub_1002FB62C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011ABC58);
  }
  return result;
}

unint64_t sub_1002FB62C()
{
  unint64_t result;

  result = qword_1011ABC60;
  if (!qword_1011ABC60)
  {
    result = swift_getWitnessTable(&unk_100EB42B0, &type metadata for SidebarMenu.Item._Raw);
    atomic_store(result, (unint64_t *)&qword_1011ABC60);
  }
  return result;
}

unint64_t sub_1002FB670()
{
  unint64_t result;

  result = qword_1011ABC68;
  if (!qword_1011ABC68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1011ABC68);
  }
  return result;
}

unint64_t sub_1002FB6B4()
{
  unint64_t result;

  result = qword_1011ABC70;
  if (!qword_1011ABC70)
  {
    result = swift_getWitnessTable(&unk_100EB4288, &type metadata for SidebarMenu.StoreTab);
    atomic_store(result, (unint64_t *)&qword_1011ABC70);
  }
  return result;
}

unint64_t sub_1002FB6F8()
{
  unint64_t result;

  result = qword_1011ABC78;
  if (!qword_1011ABC78)
  {
    result = swift_getWitnessTable(&unk_100EB3E84, &type metadata for SidebarMenu.Section);
    atomic_store(result, (unint64_t *)&qword_1011ABC78);
  }
  return result;
}

unint64_t sub_1002FB73C()
{
  unint64_t result;

  result = qword_1011ABC80;
  if (!qword_1011ABC80)
  {
    result = swift_getWitnessTable(&unk_100EB3F4C, &type metadata for SidebarMenu.Section);
    atomic_store(result, &qword_1011ABC80);
  }
  return result;
}

uint64_t sub_1002FB780()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FB7A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t *, uint64_t, uint64_t);
  uint64_t v7;
  char v8;

  v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v7 = a1;
  v8 = a2 & 1;
  return v5(&v7, a3, a4);
}

uint64_t sub_1002FB7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for SidebarMenu(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1002F5684(*(void **)(v0 + v3 + 8), *(_BYTE *)(v0 + v3 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 40));
  v4 = v0 + v3 + *(int *)(v1 + 24);
  swift_release();
  v5 = (int *)_s9PlaylistsVMa(0);
  v6 = (_QWORD *)(v4 + v5[6]);
  swift_bridgeObjectRelease(*v6);
  v7 = (char *)v6 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v8 = type metadata accessor for Playlist.Folder(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[8]));
  swift_release();
  swift_release();
  return swift_deallocObject(v0, ((v3 + v11) & 0xFFFFFFFFFFFFFFF8) + 24);
}

uint64_t sub_1002FB938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;

  v2 = *(_QWORD *)(type metadata accessor for SidebarMenu(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = (v4 & 0xFFFFFFFFFFFFF8) + v0;
  v6 = v0 + v3;
  v7 = *(_BYTE *)(v0 + v4);
  v8 = swift_task_alloc(dword_1011ABC8C);
  v9 = *(_OWORD *)(v5 + 8);
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)v8 = v1;
  *(_QWORD *)(v8 + 8) = sub_10005AEE4;
  *(_OWORD *)(v8 + 48) = v9;
  *(_BYTE *)(v8 + 80) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  return swift_task_switch(sub_1002F6824, 0, 0);
}

uint64_t type metadata accessor for SidebarMenu.SectionedSnapshotResult(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011ABDD8, (uint64_t)&nominal type descriptor for SidebarMenu.SectionedSnapshotResult);
}

uint64_t sub_1002FB9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1011ABCA4);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10006AEE4;
  return sub_1002F6A04(a1, a2, v6, v7);
}

uint64_t sub_1002FBA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for SidebarMenu(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1002F5684(*(void **)(v0 + v3 + 8), *(_BYTE *)(v0 + v3 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 40));
  v4 = v0 + v3 + *(int *)(v1 + 24);
  swift_release();
  v5 = (int *)_s9PlaylistsVMa(0);
  v6 = (_QWORD *)(v4 + v5[6]);
  swift_bridgeObjectRelease(*v6);
  v7 = (char *)v6 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v8 = type metadata accessor for Playlist.Folder(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[8]));
  swift_release();
  return swift_deallocObject(v0, v3 + v11);
}

uint64_t sub_1002FBB9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SidebarMenu(0) - 8) + 80);
  v5 = v1 + ((v4 + 32) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1011ABCD4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  v6[2] = a1;
  v6[3] = v5;
  return swift_task_switch(sub_1002F7830, 0, 0);
}

uint64_t sub_1002FBC18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for SidebarMenu(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1002F5684(*(void **)(v0 + v3 + 8), *(_BYTE *)(v0 + v3 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 40));
  v4 = v0 + v3 + *(int *)(v1 + 24);
  swift_release();
  v5 = (int *)_s9PlaylistsVMa(0);
  v6 = (_QWORD *)(v4 + v5[6]);
  swift_bridgeObjectRelease(*v6);
  v7 = (char *)v6 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v8 = type metadata accessor for Playlist.Folder(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[8]));
  swift_release();
  return swift_deallocObject(v0, v11 + v3 + 1);
}

uint64_t sub_1002FBD5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for SidebarMenu(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_BYTE *)(v1 + v5 + *(_QWORD *)(v4 + 64));
  v10 = (_QWORD *)swift_task_alloc(dword_1011ABCE4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_1002F844C(a1, v6, v7, v8, v9);
}

uint64_t sub_1002FBDF8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124CD60);
  sub_100048B14(v0, (uint64_t)qword_10124CD60);
  return static Logger.music(_:)(0x4D72616265646953, 0xEB00000000756E65);
}

uint64_t sub_1002FBE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = sub_100007E8C(&qword_1011ABD38);
  v8[10] = v9;
  v8[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v8[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[13] = v11;
  v8[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v8[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[16] = v13;
  v8[17] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A3C60);
  v8[18] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[19] = v15;
  v8[20] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011AD730) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[21] = swift_task_alloc(v16);
  v8[22] = swift_task_alloc(v16);
  v17 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v8[23] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[24] = v18;
  v8[25] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v8[26] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v8[27] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[28] = swift_task_alloc(v21);
  v8[29] = swift_task_alloc(v21);
  return swift_task_switch(sub_1002FBFE4, 0, 0);
}

uint64_t sub_1002FBFE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;

  if (qword_10119BF40 != -1)
    swift_once(&qword_10119BF40, sub_1003839AC);
  v1 = v0[29];
  v2 = v0[26];
  v3 = v0[27];
  v4 = v0[6];
  v5 = type metadata accessor for Logger(0);
  v0[30] = sub_100048B14(v5, (uint64_t)qword_1011AEF40);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7 = v6(v1, v4, v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[29];
  if (v10)
  {
    v12 = v0[28];
    v34 = v0[27];
    v13 = v0[26];
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v35 = v15;
    *(_DWORD *)v14 = 136446210;
    v6(v12, v11, v13);
    v16 = String.init<A>(describing:)(v12, v13);
    v18 = v17;
    v0[4] = sub_100322200(v16, v17, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t, __n128))(v34 + 8))(v11, v13, v19);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "🔨 Building playlists using request=%{public}s…", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[27] + 8))(v0[29], v0[26]);
  }

  v20 = sub_100007E8C(&qword_1011A23A8);
  v21 = swift_allocObject(v20, 72, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
  v22 = MPMediaLibraryDidChangeNotification;
  MusicLibrary.mediaLibrary.getter(v23);
  v24 = v0[22];
  v25 = v0[5];
  UIScreen.Dimensions.size.getter(v22);
  *(_QWORD *)(v21 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v21 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v21 + 32) = v26;
  *(_QWORD *)(v21 + 40) = v27;
  v28 = type metadata accessor for BindingRequestResponseInvalidation();
  swift_allocObject(v28, 41, 7);
  v0[31] = BindingRequestResponseInvalidation.init(triggers:)(v21);
  v29 = *(void (**)(uint64_t))(v25 + 16);
  v30 = type metadata accessor for Playlist.Folder.Item(0);
  v0[32] = v30;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v0[33] = v31;
  v31(v24, 1, 1, v30);
  v29(v24);
  sub_10004FF60(v24, (uint64_t *)&unk_1011AD730);
  v32 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
  v0[34] = v32;
  *v32 = v0;
  v32[1] = sub_1002FC31C;
  return MusicLibrarySectionedRequest.response()(v0[20], v0[26]);
}

uint64_t sub_1002FC31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002FC5B8;
  else
    v3 = sub_1002FC380;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002FC380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  double (*v6)(uint64_t, unint64_t, uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double (*v22)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = MusicLibrarySectionedResponse.sections.getter(*(_QWORD *)(v0 + 144));
  *(_QWORD *)(v0 + 288) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 296) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 344) = v5;
    *(_QWORD *)(v0 + 304) = *(_QWORD *)(v3 + 72);
    v6 = *(double (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    *(_QWORD *)(v0 + 312) = v6;
    *(_QWORD *)(v0 + 320) = 0;
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 264);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 120);
    v11.n128_f64[0] = v6(v4, v1 + ((v5 + 32) & ~(unint64_t)v5), v10);
    MusicLibrarySection.items.getter(v10, v11);
    v8(v9, 1, 1, v7);
    v12 = (_QWORD *)swift_task_alloc(dword_1011ABD44);
    *(_QWORD *)(v0 + 328) = v12;
    *v12 = v0;
    v12[1] = sub_1002FC840;
    return sub_1002FCE00(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 168), 0, *(_QWORD *)(v0 + 40));
  }
  else
  {
    v14 = swift_bridgeObjectRelease(v1);
    v15 = *(_QWORD *)(v0 + 248);
    v17 = *(_QWORD *)(v0 + 192);
    v16 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 144);
    v35 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v22 = *(double (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v17 + 16))(v20, v16, v18, v14);
    swift_storeEnumTagMultiPayload(v20, v21, 0);
    v23 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
    v24 = swift_retain();
    v25.n128_f64[0] = v22(v20, v15, v23, v24);
    swift_release_n(v15, 2, v25);
    sub_10004FF60(v20, &qword_1011ABD38);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v35, v34);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    v26 = *(_QWORD *)(v0 + 224);
    v27 = *(_QWORD *)(v0 + 200);
    v29 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 160);
    v31 = *(_QWORD *)(v0 + 136);
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 232));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002FC5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  v1 = *(_QWORD *)(v0 + 280);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    *(_DWORD *)v5 = 136446210;
    v26 = v6;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v7 = sub_100007E8C(&qword_1011A14B0);
    v8 = String.init<A>(describing:)(v0 + 16, v7);
    v10 = v9;
    *(_QWORD *)(v0 + 24) = sub_100322200(v8, v9, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to query playlists with error=%{public}s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v11 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD **)(v0 + 88);
  v14 = *(double (**)(_QWORD *, uint64_t, uint64_t))(v0 + 64);
  *v13 = v1;
  swift_storeEnumTagMultiPayload(v13, v12, 1);
  v15 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  swift_retain();
  swift_errorRetain(v1);
  v16.n128_f64[0] = v14(v13, v11, v15);
  swift_release_n(v11, 2, v16);
  swift_errorRelease(v1);
  sub_10004FF60((uint64_t)v13, &qword_1011ABD38);
  v17 = *(_QWORD *)(v0 + 224);
  v18 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 168);
  v19 = *(_QWORD *)(v0 + 176);
  v21 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FC840()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 328);
  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[36];
    v5 = v2[21];
    v7 = v2[13];
    v6 = v2[14];
    v8 = v2[12];
    sub_10004FF60(v5, (uint64_t *)&unk_1011AD730);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_bridgeObjectRelease(v4);
    v9 = sub_1002FCB4C;
  }
  else
  {
    v11 = v2[13];
    v10 = v2[14];
    v12 = v2[12];
    sub_10004FF60(v2[21], (uint64_t *)&unk_1011AD730);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    v9 = sub_1002FC908;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_1002FC908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double (*v24)(_QWORD, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 320) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  if (v2 == v1)
  {
    v3 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 288));
    v4 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 144);
    v33 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v11 = *(double (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v5, v7, v3);
    swift_storeEnumTagMultiPayload(v9, v10, 0);
    v12 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
    v13 = swift_retain();
    v14.n128_f64[0] = v11(v9, v4, v12, v13);
    swift_release_n(v4, 2, v14);
    sub_10004FF60(v9, &qword_1011ABD38);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v33, v32);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v15 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 232));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v24 = *(double (**)(_QWORD, unint64_t, uint64_t))(v0 + 312);
    v25 = *(_QWORD *)(v0 + 320) + 1;
    *(_QWORD *)(v0 + 320) = v25;
    v26 = *(_QWORD *)(v0 + 256);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 264);
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 120);
    v30.n128_f64[0] = v24(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 288)+ ((*(unsigned __int8 *)(v0 + 344) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 344))+ *(_QWORD *)(v0 + 304) * v25, v29);
    MusicLibrarySection.items.getter(v29, v30);
    v27(v28, 1, 1, v26);
    v31 = (_QWORD *)swift_task_alloc(dword_1011ABD44);
    *(_QWORD *)(v0 + 328) = v31;
    *v31 = v0;
    v31[1] = sub_1002FC840;
    return sub_1002FCE00(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 168), 0, *(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_1002FCB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  double (*v20)(_QWORD *, uint64_t, uint64_t);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 336);
  swift_errorRetain(v7);
  v8 = swift_errorRetain(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136446210;
    v32 = v12;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 16, v13);
    v16 = v15;
    *(_QWORD *)(v0 + 24) = sub_100322200(v14, v15, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to query playlists with error=%{public}s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  v17 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD **)(v0 + 88);
  v20 = *(double (**)(_QWORD *, uint64_t, uint64_t))(v0 + 64);
  *v19 = v7;
  swift_storeEnumTagMultiPayload(v19, v18, 1);
  v21 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  swift_retain();
  swift_errorRetain(v7);
  v22.n128_f64[0] = v20(v19, v17, v21);
  swift_release_n(v17, 2, v22);
  swift_errorRelease(v7);
  sub_10004FF60((uint64_t)v19, &qword_1011ABD38);
  v23 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 200);
  v26 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 176);
  v27 = *(_QWORD *)(v0 + 160);
  v28 = *(_QWORD *)(v0 + 136);
  v29 = *(_QWORD *)(v0 + 112);
  v30 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FCE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  v6 = sub_100007E8C(&qword_1011ABD48);
  v5[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v5[25] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[26] = v8;
  v5[27] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Folder(0);
  v5[28] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[29] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[30] = swift_task_alloc(v11);
  v5[31] = swift_task_alloc(v11);
  v5[32] = swift_task_alloc(v11);
  v5[33] = swift_task_alloc(v11);
  v12 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  v5[34] = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[35] = swift_task_alloc(v13);
  v5[36] = swift_task_alloc(v13);
  v5[37] = swift_task_alloc(v13);
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v5[38] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v5[39] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[40] = swift_task_alloc(v16);
  v5[41] = swift_task_alloc(v16);
  v5[42] = swift_task_alloc(v16);
  v17 = type metadata accessor for Playlist.Folder.Item(0);
  v5[43] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v5[44] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[45] = swift_task_alloc(v19);
  v5[46] = swift_task_alloc(v19);
  v5[47] = swift_task_alloc(v19);
  v5[48] = swift_task_alloc(v19);
  v20 = sub_100007E8C((uint64_t *)&unk_1011C9A40);
  v5[49] = v20;
  v21 = (*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v21);
  v5[51] = swift_task_alloc(v21);
  return swift_task_switch(sub_1002FCFF4, 0, 0);
}

uint64_t sub_1002FCFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD);
  void (*v40)(uint64_t, uint64_t, uint64_t);
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  BOOL v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  void (*v67)(uint64_t, uint64_t, __n128);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  void (*v92)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v93)(uint64_t, uint64_t, uint64_t);
  _QWORD *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  BOOL v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  __n128 v108;
  void (*v109)(uint64_t, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  os_log_type_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, uint64_t, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v1 = v0;
  v139 = v0 + 112;
  v3 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 160);
  v8._countAndFlagsBits = 8316;
  v8._object = (void *)0xE200000000000000;
  *(Swift::String *)(v0 + 416) = String.init(repeating:count:)(v8, *(_QWORD *)(v0 + 176));
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v0 + 432) = v9;
  v9(v3, v7, v5);
  v10 = sub_100049F28((unint64_t *)&qword_1011AD880, (uint64_t *)&unk_1011AD720, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  *(_QWORD *)(v0 + 440) = v10;
  dispatch thunk of Collection.startIndex.getter(v5);
  *(_QWORD *)(v3 + *(int *)(v4 + 36)) = *(_QWORD *)(v0 + 56);
  sub_100065228(v3, v2, (uint64_t *)&unk_1011C9A40);
  v11 = *(int *)(v4 + 36);
  *(_DWORD *)(v0 + 544) = v11;
  v12 = *(_QWORD *)(v2 + v11);
  v144 = (_QWORD *)(v0 + 48);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), v5, v10);
  if (v12 == *(_QWORD *)(v0 + 48))
  {
LABEL_2:
    sub_10004FF60(*(_QWORD *)(v1 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 432);
    v14 = *(_QWORD *)(v1 + 328);
    v16 = *(_QWORD *)(v1 + 296);
    v15 = *(_QWORD *)(v1 + 304);
    v18 = *(_QWORD *)(v1 + 160);
    v17 = *(_QWORD *)(v1 + 168);
    v19 = type metadata accessor for Logger(0);
    sub_100048B14(v19, (uint64_t)qword_1011AEF40);
    v13(v14, v18, v15);
    sub_10004A160(v17, v16, (uint64_t *)&unk_1011AD730);
    v20 = swift_bridgeObjectRetain();
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v159 = v22;
      v23 = *(_QWORD *)(v1 + 440);
      v24 = *(_QWORD *)(v1 + 416);
      v25 = *(_QWORD *)(v1 + 424);
      v147 = *(_QWORD *)(v1 + 352);
      v151 = *(_QWORD *)(v1 + 344);
      v26 = *(_QWORD *)(v1 + 328);
      v27 = *(_QWORD *)(v1 + 304);
      v140 = *(_QWORD *)(v1 + 312);
      v145 = *(_QWORD *)(v1 + 296);
      v28 = swift_slowAlloc(32, -1);
      v154 = swift_slowAlloc(64, -1);
      v167 = v154;
      *(_DWORD *)v28 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 112) = sub_100322200(v24, v25, &v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v139, v1 + 120);
      swift_bridgeObjectRelease_n(v25, 3);
      *(_WORD *)(v28 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v27);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v1 + 128), v27, v23);
      v29 = dispatch thunk of Collection.distance(from:to:)(v1 + 120, v1 + 128, v27, v23);
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v26, v27);
      *(_QWORD *)(v1 + 136) = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144);
      *(_WORD *)(v28 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))(v145, 1, v151) == 1)
      {
        v30 = 0xE400000000000000;
        v31 = 1953460082;
      }
      else
      {
        v110 = *(_QWORD *)(v1 + 288);
        v111 = *(_QWORD *)(v1 + 272);
        sub_10004A160(*(_QWORD *)(v1 + 296), v110, (uint64_t *)&unk_1011AD730);
        v31 = String.init<A>(describing:)(v110, v111);
        v30 = v112;
      }
      v113 = *(_QWORD *)(v1 + 296);
      *(_QWORD *)(v1 + 144) = sub_100322200(v31, v30, &v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152);
      swift_bridgeObjectRelease(v30);
      sub_10004FF60(v113, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v21, v159, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy(v154, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v154, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      v81 = *(_QWORD *)(v1 + 424);
      v82 = *(_QWORD *)(v1 + 296);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 312) + 8))(*(_QWORD *)(v1 + 328), *(_QWORD *)(v1 + 304));
      swift_bridgeObjectRelease_n(v81, 2);
      sub_10004FF60(v82, (uint64_t *)&unk_1011AD730);
    }

    v115 = *(_QWORD *)(v1 + 400);
    v114 = *(_QWORD *)(v1 + 408);
    v117 = *(_QWORD *)(v1 + 376);
    v116 = *(_QWORD *)(v1 + 384);
    v118 = v1;
    v121 = v1 + 360;
    v120 = *(_QWORD *)(v1 + 360);
    v119 = *(_QWORD *)(v121 + 8);
    v122 = *(_QWORD *)(v118 + 328);
    v123 = *(_QWORD *)(v118 + 336);
    v124 = *(_QWORD *)(v118 + 320);
    v125 = *(_QWORD *)(v118 + 296);
    v141 = *(_QWORD *)(v118 + 288);
    v143 = *(_QWORD *)(v118 + 280);
    v146 = *(_QWORD *)(v118 + 264);
    v150 = *(_QWORD *)(v118 + 256);
    v153 = *(_QWORD *)(v118 + 248);
    v158 = *(_QWORD *)(v118 + 240);
    v162 = *(_QWORD *)(v118 + 216);
    v166 = *(_QWORD *)(v118 + 192);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    swift_task_dealloc(v116);
    swift_task_dealloc(v117);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v123);
    swift_task_dealloc(v122);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v141);
    swift_task_dealloc(v143);
    swift_task_dealloc(v146);
    swift_task_dealloc(v150);
    swift_task_dealloc(v153);
    swift_task_dealloc(v158);
    swift_task_dealloc(v162);
    swift_task_dealloc(v166);
    return (*(uint64_t (**)(void))(v118 + 8))();
  }
  else
  {
    v142 = v0 + 16;
    v137 = v0 + 96;
    v138 = v0 + 104;
    *(_DWORD *)(v0 + 548) = enum case for Playlist.Folder.Item.folder(_:);
    while (1)
    {
      v32 = *(_QWORD *)(v1 + 408);
      v33 = *(_QWORD *)(v1 + 384);
      v155 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 432);
      v160 = *(_QWORD *)(v1 + 376);
      v34 = *(_QWORD *)(v1 + 344);
      v35 = *(_QWORD *)(v1 + 352);
      v36 = *(_QWORD *)(v1 + 336);
      v37 = v32 + *(int *)(v1 + 544);
      v38 = *(_QWORD *)(v1 + 304);
      v148 = *(_QWORD *)(v1 + 440);
      v152 = *(_QWORD *)(v1 + 312);
      v39 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v142, v37, v38, v148);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
      *(_QWORD *)(v1 + 448) = v40;
      v163 = v40;
      ((void (*)(uint64_t))v40)(v33);
      v39(v142, 0);
      v155(v36, v32, v38);
      dispatch thunk of Collection.formIndex(after:)(v37, v38, v148);
      v41 = *(void (**)(uint64_t, uint64_t))(v152 + 8);
      *(_QWORD *)(v1 + 456) = v41;
      v41(v36, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v160, v33, v34);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v42 = *(_QWORD *)(v1 + 424);
      v44 = *(_QWORD *)(v1 + 368);
      v43 = *(_QWORD *)(v1 + 376);
      v45 = *(_QWORD *)(v1 + 344);
      v46 = type metadata accessor for Logger(0);
      *(_QWORD *)(v1 + 464) = sub_100048B14(v46, (uint64_t)qword_1011AEF40);
      v47 = v163;
      v163(v44, v43, v45);
      v48 = swift_bridgeObjectRetain_n(v42, 2);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.default.getter(v49);
      v51 = os_log_type_enabled(v49, v50);
      v52 = *(_QWORD *)(v1 + 424);
      if (v51)
      {
        v53 = *(_QWORD *)(v1 + 416);
        v54 = *(_QWORD *)(v1 + 368);
        v55 = *(_QWORD *)(v1 + 352);
        v156 = *(_QWORD *)(v1 + 344);
        v56 = v1;
        v57 = swift_slowAlloc(22, -1);
        v58 = swift_slowAlloc(64, -1);
        v167 = v58;
        *(_DWORD *)v57 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v57 + 4) = sub_100322200(v53, v52, &v167);
        v59 = swift_bridgeObjectRelease_n(v52, 3);
        *(_WORD *)(v57 + 12) = 2082;
        v60 = Playlist.Folder.Item.id.getter(v59);
        v62 = v61;
        v63 = MusicItemID.description.getter(v60, v61);
        v65 = v64;
        swift_bridgeObjectRelease(v62);
        *(_QWORD *)(v57 + 14) = sub_100322200(v63, v65, &v167);
        v66 = swift_bridgeObjectRelease(v65);
        v67 = *(void (**)(uint64_t, uint64_t, __n128))(v55 + 8);
        v67(v54, v156, v66);
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v58, -1, -1);
        v68 = v57;
        v1 = v56;
        v47 = v163;
        swift_slowDealloc(v68, -1, -1);
      }
      else
      {
        v69 = *(_QWORD *)(v1 + 368);
        v70 = *(_QWORD *)(v1 + 344);
        v71 = *(_QWORD *)(v1 + 352);
        v72 = swift_bridgeObjectRelease_n(v52, 2);
        v67 = *(void (**)(uint64_t, uint64_t, __n128))(v71 + 8);
        v67(v69, v70, v72);
      }

      *(_QWORD *)(v1 + 472) = v67;
      v73 = *(_DWORD *)(v1 + 548);
      v74 = *(_QWORD *)(v1 + 376);
      v76 = *(_QWORD *)(v1 + 352);
      v75 = *(_QWORD *)(v1 + 360);
      v77 = *(_QWORD *)(v1 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 184) + 32))(v74, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 152));
      v47(v75, v74, v77);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v76 + 88))(v75, v77) == v73)
        break;
      v78 = *(_QWORD *)(v1 + 360);
      v79 = *(_QWORD *)(v1 + 344);
      ((void (*)(_QWORD, uint64_t))v67)(*(_QWORD *)(v1 + 376), v79);
      ((void (*)(uint64_t, uint64_t))v67)(v78, v79);
      v80 = *(_QWORD *)(*(_QWORD *)(v1 + 408) + *(int *)(v1 + 544));
      dispatch thunk of Collection.endIndex.getter(v144, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 440));
      if (v80 == *(_QWORD *)(v1 + 48))
        goto LABEL_2;
    }
    v164 = *(_QWORD *)(v1 + 424);
    v84 = *(_QWORD *)(v1 + 352);
    v83 = *(_QWORD *)(v1 + 360);
    v85 = *(_QWORD *)(v1 + 344);
    v86 = *(_QWORD *)(v1 + 288);
    v87 = *(_QWORD *)(v1 + 264);
    v157 = *(_QWORD *)(v1 + 256);
    v89 = *(_QWORD *)(v1 + 224);
    v88 = *(_QWORD *)(v1 + 232);
    v149 = *(_QWORD *)(v1 + 376);
    v90 = *(_QWORD *)(v1 + 184);
    (*(void (**)(uint64_t, uint64_t))(v84 + 96))(v83, v85);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v87, v83, v89);
    v91 = *(void (**)(uint64_t))(v90 + 16);
    v47(v86, v149, v85);
    v92 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56);
    *(_QWORD *)(v1 + 480) = v92;
    v92(v86, 0, 1, v85);
    v91(v86);
    sub_10004FF60(v86, (uint64_t *)&unk_1011AD730);
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16);
    v94 = (_QWORD *)v1;
    *(_QWORD *)(v1 + 488) = v93;
    v93(v157, v87, v89);
    v95 = swift_bridgeObjectRetain_n(v164, 2);
    v96 = Logger.logObject.getter(v95);
    v97 = static os_log_type_t.default.getter(v96);
    v98 = os_log_type_enabled(v96, v97);
    v99 = *(_QWORD *)(v1 + 424);
    if (v98)
    {
      v100 = *(_QWORD *)(v1 + 416);
      v101 = *(_QWORD *)(v1 + 256);
      v165 = *(_QWORD *)(v1 + 232);
      v161 = *(_QWORD *)(v1 + 224);
      v102 = swift_slowAlloc(22, -1);
      v103 = swift_slowAlloc(64, -1);
      v167 = v103;
      *(_DWORD *)v102 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 96) = sub_100322200(v100, v99, &v167);
      v94 = (_QWORD *)v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v137, v138);
      swift_bridgeObjectRelease_n(v99, 3);
      *(_WORD *)(v102 + 12) = 2082;
      v104 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v105 = dispatch thunk of CustomStringConvertible.description.getter(v161, v104);
      v107 = v106;
      *(_QWORD *)(v1 + 104) = sub_100322200(v105, v106, &v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v138, v139);
      v108 = swift_bridgeObjectRelease(v107);
      v109 = *(void (**)(uint64_t, uint64_t, __n128))(v165 + 8);
      v109(v101, v161, v108);
      _os_log_impl((void *)&_mh_execute_header, v96, v97, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy(v103, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v103, -1, -1);
      swift_slowDealloc(v102, -1, -1);
    }
    else
    {
      v127 = *(_QWORD *)(v1 + 256);
      v128 = *(_QWORD *)(v1 + 224);
      v129 = *(_QWORD *)(v1 + 232);
      v130 = swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 424), 2);
      v109 = *(void (**)(uint64_t, uint64_t, __n128))(v129 + 8);
      v109(v127, v128, v130);
    }

    v94[62] = v109;
    v131 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v132 = swift_allocObject(v131, 48, 7);
    *(_OWORD *)(v132 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v132 + 32) = static PartialMusicProperty<A>.parent.getter();
    v133 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v132 + 40) = v133;
    v167 = v132;
    specialized Array._endMutation()(v133);
    v134 = v167;
    v94[63] = v167;
    v135 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v136 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    v94[64] = v136;
    *v136 = v94;
    v136[1] = sub_1002FDBDC;
    return dispatch thunk of MusicPropertyContainer.with(_:)(v94[31], v134, v94[28], v135);
  }
}

uint64_t sub_1002FDBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 512);
  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_1002FDDA4;
  else
    v4 = sub_1002FDC48;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002FDC48()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 192);
  Playlist.Folder.children.getter();
  v1(v4, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2);
  v8 = *(_QWORD *)(v0 + 192);
  if (v7 == 1)
  {
    v9 = *(_QWORD *)(v0 + 344);
    v10 = sub_100048748((unint64_t *)&unk_1011C9A50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v9, v10);
    sub_10004FF60(v8, &qword_1011ABD48);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 32))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 304));
  }
  v11 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 480);
  v12 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 448))(v13, *(_QWORD *)(v0 + 376), v12);
  result = v11(v13, 0, 1, v12);
  if (__OFADD__(v14, 1))
  {
    __break(1u);
  }
  else
  {
    v16 = (_QWORD *)swift_task_alloc(dword_1011ABD44);
    *(_QWORD *)(v0 + 528) = v16;
    *v16 = v0;
    v16[1] = sub_1002FEBC4;
    return sub_1002FCE00(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 280), v14 + 1, *(_QWORD *)(v0 + 184));
  }
  return result;
}

uint64_t sub_1002FDDA4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  NSObject *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  BOOL v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  void (*v86)(uint64_t, uint64_t, __n128);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t);
  void (*v111)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  BOOL v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  __n128 v126;
  void (*v127)(uint64_t, uint64_t, __n128);
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t, __n128);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  os_log_type_t typec[8];
  os_log_type_t typed[8];
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  os_log_type_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(uint64_t, uint64_t);
  NSObject *v185;
  void (*v186)(uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;

  v161 = (_QWORD *)(v0 + 48);
  v153 = v0 + 112;
  v154 = v0 + 96;
  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 488);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 224);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v2(v4, v3, v5);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v155 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 496);
    v184 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v10 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 424);
    v173 = *(_QWORD *)(v0 + 344);
    v179 = *(_QWORD *)(v0 + 376);
    v169 = *(_QWORD *)(v0 + 264);
    type = v8;
    v11 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 224);
    v13 = swift_slowAlloc(32, -1);
    v158 = swift_slowAlloc(96, -1);
    v190 = v158;
    *(_DWORD *)v13 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_100322200(v10, v9, &v190);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v13 + 12) = 2082;
    v14 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v12, v14);
    v17 = v16;
    *(_QWORD *)(v0 + 72) = sub_100322200(v15, v16, &v190);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    v18 = swift_bridgeObjectRelease(v17);
    v155(v11, v12, v18);
    *(_WORD *)(v13 + 22) = 2082;
    *(_QWORD *)(v0 + 80) = v1;
    swift_errorRetain(v1);
    v19 = sub_100007E8C(&qword_1011A14B0);
    v20 = String.init<A>(describing:)(v0 + 80, v19);
    v22 = v21;
    *(_QWORD *)(v0 + 88) = sub_100322200(v20, v21, &v190);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v154);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v7, type, "%s | 📁❌ Failed to query children for folder=%{public}s. Error=%{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy(v158, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v158, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v1);
    ((void (*)(uint64_t, uint64_t))v155)(v169, v12);
    v184(v179, v173);
  }
  else
  {
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v24 = v7;
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v26 = *(_QWORD *)(v0 + 424);
    v27 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 264);
    v30 = *(_QWORD *)(v0 + 240);
    v31 = *(_QWORD *)(v0 + 224);

    swift_errorRelease(v1);
    swift_errorRelease(v1);
    v23(v30, v31);
    swift_bridgeObjectRelease_n(v26, 2);
    swift_errorRelease(v1);
    v23(v29, v31);
    v25(v27, v28);
  }
  v32 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
  dispatch thunk of Collection.endIndex.getter(v161, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
  if (v32 == *(_QWORD *)(v0 + 48))
  {
LABEL_5:
    sub_10004FF60(*(_QWORD *)(v0 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
    v34 = *(_QWORD *)(v0 + 328);
    v36 = *(_QWORD *)(v0 + 296);
    v35 = *(_QWORD *)(v0 + 304);
    v38 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v0 + 168);
    v39 = type metadata accessor for Logger(0);
    sub_100048B14(v39, (uint64_t)qword_1011AEF40);
    v33(v34, v38, v35);
    sub_10004A160(v37, v36, (uint64_t *)&unk_1011AD730);
    v40 = swift_bridgeObjectRetain();
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v180 = v42;
      v185 = v41;
      v43 = *(_QWORD *)(v0 + 440);
      v44 = *(_QWORD *)(v0 + 416);
      v45 = *(_QWORD *)(v0 + 424);
      *(_QWORD *)typea = *(_QWORD *)(v0 + 352);
      v170 = *(_QWORD *)(v0 + 344);
      v46 = *(_QWORD *)(v0 + 328);
      v47 = *(_QWORD *)(v0 + 304);
      v156 = *(_QWORD *)(v0 + 312);
      v162 = *(_QWORD *)(v0 + 296);
      v48 = swift_slowAlloc(32, -1);
      v174 = swift_slowAlloc(64, -1);
      v190 = v174;
      *(_DWORD *)v48 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 112) = sub_100322200(v44, v45, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v153, v0 + 120);
      swift_bridgeObjectRelease_n(v45, 3);
      *(_WORD *)(v48 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v47);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 128), v47, v43);
      v49 = dispatch thunk of Collection.distance(from:to:)(v0 + 120, v0 + 128, v47, v43);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v46, v47);
      *(_QWORD *)(v0 + 136) = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
      *(_WORD *)(v48 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)typea + 48))(v162, 1, v170) == 1)
      {
        v50 = 0xE400000000000000;
        v51 = 1953460082;
      }
      else
      {
        v128 = *(_QWORD *)(v0 + 288);
        v129 = *(_QWORD *)(v0 + 272);
        sub_10004A160(*(_QWORD *)(v0 + 296), v128, (uint64_t *)&unk_1011AD730);
        v51 = String.init<A>(describing:)(v128, v129);
        v50 = v130;
      }
      v131 = *(_QWORD *)(v0 + 296);
      *(_QWORD *)(v0 + 144) = sub_100322200(v51, v50, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
      swift_bridgeObjectRelease(v50);
      sub_10004FF60(v131, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v185, v180, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy(v174, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v174, -1, -1);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {
      v100 = *(_QWORD *)(v0 + 424);
      v101 = *(_QWORD *)(v0 + 296);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v100, 2);
      sub_10004FF60(v101, (uint64_t *)&unk_1011AD730);

    }
    v132 = *(_QWORD *)(v0 + 400);
    v134 = *(_QWORD *)(v0 + 376);
    v133 = *(_QWORD *)(v0 + 384);
    v136 = *(_QWORD *)(v0 + 360);
    v135 = *(_QWORD *)(v0 + 368);
    v137 = *(_QWORD *)(v0 + 328);
    v138 = *(_QWORD *)(v0 + 336);
    v139 = *(_QWORD *)(v0 + 320);
    v140 = *(_QWORD *)(v0 + 296);
    v157 = *(_QWORD *)(v0 + 288);
    v160 = *(_QWORD *)(v0 + 280);
    v163 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)typed = *(_QWORD *)(v0 + 256);
    v172 = *(_QWORD *)(v0 + 248);
    v178 = *(_QWORD *)(v0 + 240);
    v183 = *(_QWORD *)(v0 + 216);
    v189 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v132);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v138);
    swift_task_dealloc(v137);
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v157);
    swift_task_dealloc(v160);
    swift_task_dealloc(v163);
    swift_task_dealloc(*(_QWORD *)typed);
    swift_task_dealloc(v172);
    swift_task_dealloc(v178);
    swift_task_dealloc(v183);
    swift_task_dealloc(v189);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v159 = v0 + 16;
    v152 = v0 + 104;
    while (1)
    {
      v52 = *(_QWORD *)(v0 + 408);
      v53 = *(_QWORD *)(v0 + 384);
      v175 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
      v181 = *(_QWORD *)(v0 + 376);
      v55 = *(_QWORD *)(v0 + 344);
      v54 = *(_QWORD *)(v0 + 352);
      v56 = *(_QWORD *)(v0 + 336);
      v57 = v52 + *(int *)(v0 + 544);
      v58 = *(_QWORD *)(v0 + 304);
      *(_QWORD *)typeb = *(_QWORD *)(v0 + 440);
      v171 = *(_QWORD *)(v0 + 312);
      v59 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v159, v57, v58, *(_QWORD *)typeb);
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
      *(_QWORD *)(v0 + 448) = v60;
      v186 = v60;
      ((void (*)(uint64_t))v60)(v53);
      v59(v159, 0);
      v175(v56, v52, v58);
      dispatch thunk of Collection.formIndex(after:)(v57, v58, *(_QWORD *)typeb);
      v61 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
      *(_QWORD *)(v0 + 456) = v61;
      v61(v56, v58);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v181, v53, v55);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v62 = *(_QWORD *)(v0 + 424);
      v64 = *(_QWORD *)(v0 + 368);
      v63 = *(_QWORD *)(v0 + 376);
      v65 = *(_QWORD *)(v0 + 344);
      v66 = type metadata accessor for Logger(0);
      *(_QWORD *)(v0 + 464) = sub_100048B14(v66, (uint64_t)qword_1011AEF40);
      v67 = v186;
      v186(v64, v63, v65);
      v68 = swift_bridgeObjectRetain_n(v62, 2);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.default.getter(v69);
      v71 = os_log_type_enabled(v69, v70);
      v72 = *(_QWORD *)(v0 + 424);
      if (v71)
      {
        v73 = *(_QWORD *)(v0 + 416);
        v74 = *(_QWORD *)(v0 + 368);
        v75 = *(_QWORD *)(v0 + 352);
        v176 = *(_QWORD *)(v0 + 344);
        v76 = swift_slowAlloc(22, -1);
        v77 = swift_slowAlloc(64, -1);
        v190 = v77;
        *(_DWORD *)v76 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v76 + 4) = sub_100322200(v73, v72, &v190);
        v78 = swift_bridgeObjectRelease_n(v72, 3);
        *(_WORD *)(v76 + 12) = 2082;
        v79 = Playlist.Folder.Item.id.getter(v78);
        v81 = v80;
        v82 = MusicItemID.description.getter(v79, v80);
        v84 = v83;
        swift_bridgeObjectRelease(v81);
        *(_QWORD *)(v76 + 14) = sub_100322200(v82, v84, &v190);
        v85 = swift_bridgeObjectRelease(v84);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v75 + 8);
        v86(v74, v176, v85);
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v77, -1, -1);
        v87 = v76;
        v67 = v186;
        swift_slowDealloc(v87, -1, -1);
      }
      else
      {
        v88 = *(_QWORD *)(v0 + 368);
        v89 = *(_QWORD *)(v0 + 344);
        v90 = *(_QWORD *)(v0 + 352);
        v91 = swift_bridgeObjectRelease_n(v72, 2);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v90 + 8);
        v86(v88, v89, v91);
      }

      *(_QWORD *)(v0 + 472) = v86;
      v92 = *(_DWORD *)(v0 + 548);
      v93 = *(_QWORD *)(v0 + 376);
      v95 = *(_QWORD *)(v0 + 352);
      v94 = *(_QWORD *)(v0 + 360);
      v96 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(v93, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v67(v94, v93, v96);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v95 + 88))(v94, v96) == v92)
        break;
      v97 = *(_QWORD *)(v0 + 360);
      v98 = *(_QWORD *)(v0 + 344);
      ((void (*)(_QWORD, uint64_t))v86)(*(_QWORD *)(v0 + 376), v98);
      ((void (*)(uint64_t, uint64_t))v86)(v97, v98);
      v99 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
      dispatch thunk of Collection.endIndex.getter(v161, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
      if (v99 == *(_QWORD *)(v0 + 48))
        goto LABEL_5;
    }
    v187 = *(_QWORD *)(v0 + 424);
    v103 = *(_QWORD *)(v0 + 352);
    v102 = *(_QWORD *)(v0 + 360);
    v104 = *(_QWORD *)(v0 + 344);
    v105 = *(_QWORD *)(v0 + 288);
    v106 = *(_QWORD *)(v0 + 264);
    v177 = *(_QWORD *)(v0 + 256);
    v108 = *(_QWORD *)(v0 + 224);
    v107 = *(_QWORD *)(v0 + 232);
    *(_QWORD *)typec = *(_QWORD *)(v0 + 376);
    v109 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t))(v103 + 96))(v102, v104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 32))(v106, v102, v108);
    v110 = *(void (**)(uint64_t))(v109 + 16);
    v67(v105, *(_QWORD *)typec, v104);
    v111 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v103 + 56);
    *(_QWORD *)(v0 + 480) = v111;
    v111(v105, 0, 1, v104);
    v110(v105);
    sub_10004FF60(v105, (uint64_t *)&unk_1011AD730);
    v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16);
    *(_QWORD *)(v0 + 488) = v112;
    v112(v177, v106, v108);
    v113 = swift_bridgeObjectRetain_n(v187, 2);
    v114 = Logger.logObject.getter(v113);
    v115 = static os_log_type_t.default.getter(v114);
    v116 = os_log_type_enabled(v114, v115);
    v117 = *(_QWORD *)(v0 + 424);
    if (v116)
    {
      v118 = *(_QWORD *)(v0 + 416);
      v119 = *(_QWORD *)(v0 + 256);
      v188 = *(_QWORD *)(v0 + 232);
      v182 = *(_QWORD *)(v0 + 224);
      v120 = swift_slowAlloc(22, -1);
      v121 = swift_slowAlloc(64, -1);
      v190 = v121;
      *(_DWORD *)v120 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 96) = sub_100322200(v118, v117, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v154, v152);
      swift_bridgeObjectRelease_n(v117, 3);
      *(_WORD *)(v120 + 12) = 2082;
      v122 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v123 = dispatch thunk of CustomStringConvertible.description.getter(v182, v122);
      v125 = v124;
      *(_QWORD *)(v0 + 104) = sub_100322200(v123, v124, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v152, v153);
      v126 = swift_bridgeObjectRelease(v125);
      v127 = *(void (**)(uint64_t, uint64_t, __n128))(v188 + 8);
      v127(v119, v182, v126);
      _os_log_impl((void *)&_mh_execute_header, v114, v115, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v120, 0x16u);
      swift_arrayDestroy(v121, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v121, -1, -1);
      swift_slowDealloc(v120, -1, -1);
    }
    else
    {
      v142 = *(_QWORD *)(v0 + 256);
      v143 = *(_QWORD *)(v0 + 224);
      v144 = *(_QWORD *)(v0 + 232);
      v145 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 424), 2);
      v127 = *(void (**)(uint64_t, uint64_t, __n128))(v144 + 8);
      v127(v142, v143, v145);
    }

    *(_QWORD *)(v0 + 496) = v127;
    v146 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v147 = swift_allocObject(v146, 48, 7);
    *(_OWORD *)(v147 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v147 + 32) = static PartialMusicProperty<A>.parent.getter();
    v148 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v147 + 40) = v148;
    v190 = v147;
    specialized Array._endMutation()(v148);
    v149 = v190;
    *(_QWORD *)(v0 + 504) = v190;
    v150 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v151 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 512) = v151;
    *v151 = v0;
    v151[1] = sub_1002FDBDC;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 248), v149, *(_QWORD *)(v0 + 224), v150);
  }
}

uint64_t sub_1002FEBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 528);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  *(_QWORD *)(*(_QWORD *)v1 + 536) = v0;
  swift_task_dealloc(v2);
  sub_10004FF60(v3, (uint64_t *)&unk_1011AD730);
  if (v0)
    v4 = sub_1002FF844;
  else
    v4 = sub_1002FEC3C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002FEC3C()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD);
  void (*v36)(uint64_t, uint64_t, uint64_t);
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  BOOL v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __n128 v61;
  void (*v62)(uint64_t, uint64_t, __n128);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t);
  void (*v87)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  BOOL v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  __n128 v102;
  void (*v103)(uint64_t, uint64_t, __n128);
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t);
  os_log_type_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t);
  NSObject *v161;
  void (*v162)(uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v135 = *(_QWORD *)(v0 + 152);
  v155 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
  v129 = v0 + 112;
  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 480);
  v160 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 344);
  v131 = *(_QWORD *)(v0 + 304);
  v132 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 288);
  v149 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 216);
  v140 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  v145 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v130 = *(_QWORD *)(v0 + 200);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448))(v4, v2, v3);
  v1(v4, 0, 1, v3);
  v7(v2, v5, v4, v135);
  sub_10004FF60(v4, (uint64_t *)&unk_1011AD730);
  v140(v132, v131);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v130);
  v155(v149, v145);
  v160(v2, v3);
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
  if (v8 == *(_QWORD *)(v0 + 48))
  {
LABEL_2:
    sub_10004FF60(*(_QWORD *)(v0 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
    v10 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 296);
    v11 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 168);
    v15 = type metadata accessor for Logger(0);
    sub_100048B14(v15, (uint64_t)qword_1011AEF40);
    v9(v10, v14, v11);
    sub_10004A160(v13, v12, (uint64_t *)&unk_1011AD730);
    v16 = swift_bridgeObjectRetain();
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v156 = v18;
      v161 = v17;
      v19 = *(_QWORD *)(v0 + 440);
      v21 = *(_QWORD *)(v0 + 416);
      v20 = *(_QWORD *)(v0 + 424);
      v141 = *(_QWORD *)(v0 + 352);
      v146 = *(_QWORD *)(v0 + 344);
      v22 = *(_QWORD *)(v0 + 328);
      v23 = *(_QWORD *)(v0 + 304);
      v133 = *(_QWORD *)(v0 + 312);
      v138 = *(_QWORD *)(v0 + 296);
      v24 = swift_slowAlloc(32, -1);
      v150 = swift_slowAlloc(64, -1);
      v166 = v150;
      *(_DWORD *)v24 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 112) = sub_100322200(v21, v20, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, v0 + 120);
      swift_bridgeObjectRelease_n(v20, 3);
      *(_WORD *)(v24 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v23);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 128), v23, v19);
      v25 = dispatch thunk of Collection.distance(from:to:)(v0 + 120, v0 + 128, v23, v19);
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v22, v23);
      *(_QWORD *)(v0 + 136) = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
      *(_WORD *)(v24 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v138, 1, v146) == 1)
      {
        v26 = 0xE400000000000000;
        v27 = 1953460082;
      }
      else
      {
        v104 = *(_QWORD *)(v0 + 288);
        v105 = *(_QWORD *)(v0 + 272);
        sub_10004A160(*(_QWORD *)(v0 + 296), v104, (uint64_t *)&unk_1011AD730);
        v27 = String.init<A>(describing:)(v104, v105);
        v26 = v106;
      }
      v107 = *(_QWORD *)(v0 + 296);
      *(_QWORD *)(v0 + 144) = sub_100322200(v27, v26, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
      swift_bridgeObjectRelease(v26);
      sub_10004FF60(v107, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v161, v156, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy(v150, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v150, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {
      v76 = *(_QWORD *)(v0 + 424);
      v77 = *(_QWORD *)(v0 + 296);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v76, 2);
      sub_10004FF60(v77, (uint64_t *)&unk_1011AD730);

    }
    v108 = *(_QWORD *)(v0 + 400);
    v110 = *(_QWORD *)(v0 + 376);
    v109 = *(_QWORD *)(v0 + 384);
    v112 = *(_QWORD *)(v0 + 360);
    v111 = *(_QWORD *)(v0 + 368);
    v113 = *(_QWORD *)(v0 + 328);
    v114 = *(_QWORD *)(v0 + 336);
    v115 = *(_QWORD *)(v0 + 320);
    v116 = *(_QWORD *)(v0 + 296);
    v134 = *(_QWORD *)(v0 + 288);
    v137 = *(_QWORD *)(v0 + 280);
    v139 = *(_QWORD *)(v0 + 264);
    v144 = *(_QWORD *)(v0 + 256);
    v148 = *(_QWORD *)(v0 + 248);
    v154 = *(_QWORD *)(v0 + 240);
    v159 = *(_QWORD *)(v0 + 216);
    v165 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v114);
    swift_task_dealloc(v113);
    swift_task_dealloc(v115);
    swift_task_dealloc(v116);
    swift_task_dealloc(v134);
    swift_task_dealloc(v137);
    swift_task_dealloc(v139);
    swift_task_dealloc(v144);
    swift_task_dealloc(v148);
    swift_task_dealloc(v154);
    swift_task_dealloc(v159);
    swift_task_dealloc(v165);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v136 = v0 + 16;
    v128 = v0 + 104;
    while (1)
    {
      v142 = *(_QWORD *)(v0 + 440);
      v151 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
      v28 = *(_QWORD *)(v0 + 408);
      v29 = *(_QWORD *)(v0 + 384);
      v157 = *(_QWORD *)(v0 + 376);
      v31 = *(_QWORD *)(v0 + 344);
      v30 = *(_QWORD *)(v0 + 352);
      v32 = *(_QWORD *)(v0 + 336);
      v33 = v28 + *(int *)(v0 + 544);
      v34 = *(_QWORD *)(v0 + 304);
      v147 = *(_QWORD *)(v0 + 312);
      v35 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v136, v33, v34, v142);
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
      *(_QWORD *)(v0 + 448) = v36;
      v162 = v36;
      ((void (*)(uint64_t))v36)(v29);
      v35(v136, 0);
      v151(v32, v28, v34);
      dispatch thunk of Collection.formIndex(after:)(v33, v34, v142);
      v37 = *(void (**)(uint64_t, uint64_t))(v147 + 8);
      *(_QWORD *)(v0 + 456) = v37;
      v37(v32, v34);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v157, v29, v31);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v38 = *(_QWORD *)(v0 + 424);
      v40 = *(_QWORD *)(v0 + 368);
      v39 = *(_QWORD *)(v0 + 376);
      v41 = *(_QWORD *)(v0 + 344);
      v42 = type metadata accessor for Logger(0);
      *(_QWORD *)(v0 + 464) = sub_100048B14(v42, (uint64_t)qword_1011AEF40);
      v43 = v162;
      v162(v40, v39, v41);
      v44 = swift_bridgeObjectRetain_n(v38, 2);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      v47 = os_log_type_enabled(v45, v46);
      v48 = *(_QWORD *)(v0 + 424);
      if (v47)
      {
        v49 = *(_QWORD *)(v0 + 416);
        v50 = *(_QWORD *)(v0 + 368);
        v51 = *(_QWORD *)(v0 + 352);
        v152 = *(_QWORD *)(v0 + 344);
        v52 = swift_slowAlloc(22, -1);
        v53 = swift_slowAlloc(64, -1);
        v166 = v53;
        *(_DWORD *)v52 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v52 + 4) = sub_100322200(v49, v48, &v166);
        v54 = swift_bridgeObjectRelease_n(v48, 3);
        *(_WORD *)(v52 + 12) = 2082;
        v55 = Playlist.Folder.Item.id.getter(v54);
        v57 = v56;
        v58 = MusicItemID.description.getter(v55, v56);
        v60 = v59;
        swift_bridgeObjectRelease(v57);
        *(_QWORD *)(v52 + 14) = sub_100322200(v58, v60, &v166);
        v61 = swift_bridgeObjectRelease(v60);
        v62 = *(void (**)(uint64_t, uint64_t, __n128))(v51 + 8);
        v62(v50, v152, v61);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v52, 0x16u);
        swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v53, -1, -1);
        v63 = v52;
        v43 = v162;
        swift_slowDealloc(v63, -1, -1);
      }
      else
      {
        v64 = *(_QWORD *)(v0 + 368);
        v65 = *(_QWORD *)(v0 + 344);
        v66 = *(_QWORD *)(v0 + 352);
        v67 = swift_bridgeObjectRelease_n(v48, 2);
        v62 = *(void (**)(uint64_t, uint64_t, __n128))(v66 + 8);
        v62(v64, v65, v67);
      }

      *(_QWORD *)(v0 + 472) = v62;
      v68 = *(_DWORD *)(v0 + 548);
      v69 = *(_QWORD *)(v0 + 376);
      v71 = *(_QWORD *)(v0 + 352);
      v70 = *(_QWORD *)(v0 + 360);
      v72 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(v69, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v43(v70, v69, v72);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v71 + 88))(v70, v72) == v68)
        break;
      v73 = *(_QWORD *)(v0 + 360);
      v74 = *(_QWORD *)(v0 + 344);
      ((void (*)(_QWORD, uint64_t))v62)(*(_QWORD *)(v0 + 376), v74);
      ((void (*)(uint64_t, uint64_t))v62)(v73, v74);
      v75 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
      if (v75 == *(_QWORD *)(v0 + 48))
        goto LABEL_2;
    }
    v163 = *(_QWORD *)(v0 + 424);
    v79 = *(_QWORD *)(v0 + 352);
    v78 = *(_QWORD *)(v0 + 360);
    v80 = *(_QWORD *)(v0 + 344);
    v81 = *(_QWORD *)(v0 + 288);
    v82 = *(_QWORD *)(v0 + 264);
    v153 = *(_QWORD *)(v0 + 256);
    v83 = *(_QWORD *)(v0 + 224);
    v84 = *(_QWORD *)(v0 + 232);
    v143 = *(_QWORD *)(v0 + 376);
    v85 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t))(v79 + 96))(v78, v80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v82, v78, v83);
    v86 = *(void (**)(uint64_t))(v85 + 16);
    v43(v81, v143, v80);
    v87 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56);
    *(_QWORD *)(v0 + 480) = v87;
    v87(v81, 0, 1, v80);
    v86(v81);
    sub_10004FF60(v81, (uint64_t *)&unk_1011AD730);
    v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16);
    *(_QWORD *)(v0 + 488) = v88;
    v88(v153, v82, v83);
    v89 = swift_bridgeObjectRetain_n(v163, 2);
    v90 = Logger.logObject.getter(v89);
    v91 = static os_log_type_t.default.getter(v90);
    v92 = os_log_type_enabled(v90, v91);
    v93 = *(_QWORD *)(v0 + 424);
    if (v92)
    {
      v94 = *(_QWORD *)(v0 + 416);
      v95 = *(_QWORD *)(v0 + 256);
      v158 = *(_QWORD *)(v0 + 224);
      v164 = *(_QWORD *)(v0 + 232);
      v96 = swift_slowAlloc(22, -1);
      v97 = swift_slowAlloc(64, -1);
      v166 = v97;
      *(_DWORD *)v96 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 96) = sub_100322200(v94, v93, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v128);
      swift_bridgeObjectRelease_n(v93, 3);
      *(_WORD *)(v96 + 12) = 2082;
      v98 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v99 = dispatch thunk of CustomStringConvertible.description.getter(v158, v98);
      v101 = v100;
      *(_QWORD *)(v0 + 104) = sub_100322200(v99, v100, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v128, v129);
      v102 = swift_bridgeObjectRelease(v101);
      v103 = *(void (**)(uint64_t, uint64_t, __n128))(v164 + 8);
      v103(v95, v158, v102);
      _os_log_impl((void *)&_mh_execute_header, v90, v91, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v96, 0x16u);
      swift_arrayDestroy(v97, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v96, -1, -1);
    }
    else
    {
      v118 = *(_QWORD *)(v0 + 256);
      v119 = *(_QWORD *)(v0 + 224);
      v120 = *(_QWORD *)(v0 + 232);
      v121 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 424), 2);
      v103 = *(void (**)(uint64_t, uint64_t, __n128))(v120 + 8);
      v103(v118, v119, v121);
    }

    *(_QWORD *)(v0 + 496) = v103;
    v122 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v123 = swift_allocObject(v122, 48, 7);
    *(_OWORD *)(v123 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v123 + 32) = static PartialMusicProperty<A>.parent.getter();
    v124 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v123 + 40) = v124;
    v166 = v123;
    specialized Array._endMutation()(v124);
    v125 = v166;
    *(_QWORD *)(v0 + 504) = v166;
    v126 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v127 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 512) = v127;
    *v127 = v0;
    v127[1] = sub_1002FDBDC;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 248), v125, *(_QWORD *)(v0 + 224), v126);
  }
}

uint64_t sub_1002FF844()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  NSObject *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  BOOL v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  void (*v86)(uint64_t, uint64_t, __n128);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t);
  void (*v111)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  BOOL v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  __n128 v126;
  void (*v127)(uint64_t, uint64_t, __n128);
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t, __n128);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  os_log_type_t typec[8];
  os_log_type_t typed[8];
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  os_log_type_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(uint64_t, uint64_t);
  NSObject *v185;
  void (*v186)(uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;

  v161 = (_QWORD *)(v0 + 48);
  v153 = v0 + 112;
  v154 = v0 + 96;
  (*(void (**)(_QWORD, _QWORD))(v0 + 456))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 488);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 224);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v2(v4, v3, v5);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v155 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 496);
    v184 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v10 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 424);
    v173 = *(_QWORD *)(v0 + 344);
    v179 = *(_QWORD *)(v0 + 376);
    v169 = *(_QWORD *)(v0 + 264);
    type = v8;
    v11 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 224);
    v13 = swift_slowAlloc(32, -1);
    v158 = swift_slowAlloc(96, -1);
    v190 = v158;
    *(_DWORD *)v13 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_100322200(v10, v9, &v190);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v13 + 12) = 2082;
    v14 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v12, v14);
    v17 = v16;
    *(_QWORD *)(v0 + 72) = sub_100322200(v15, v16, &v190);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    v18 = swift_bridgeObjectRelease(v17);
    v155(v11, v12, v18);
    *(_WORD *)(v13 + 22) = 2082;
    *(_QWORD *)(v0 + 80) = v1;
    swift_errorRetain(v1);
    v19 = sub_100007E8C(&qword_1011A14B0);
    v20 = String.init<A>(describing:)(v0 + 80, v19);
    v22 = v21;
    *(_QWORD *)(v0 + 88) = sub_100322200(v20, v21, &v190);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v154);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v7, type, "%s | 📁❌ Failed to query children for folder=%{public}s. Error=%{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy(v158, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v158, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v1);
    ((void (*)(uint64_t, uint64_t))v155)(v169, v12);
    v184(v179, v173);
  }
  else
  {
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v24 = v7;
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v26 = *(_QWORD *)(v0 + 424);
    v27 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 264);
    v30 = *(_QWORD *)(v0 + 240);
    v31 = *(_QWORD *)(v0 + 224);

    swift_errorRelease(v1);
    swift_errorRelease(v1);
    v23(v30, v31);
    swift_bridgeObjectRelease_n(v26, 2);
    swift_errorRelease(v1);
    v23(v29, v31);
    v25(v27, v28);
  }
  v32 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
  dispatch thunk of Collection.endIndex.getter(v161, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
  if (v32 == *(_QWORD *)(v0 + 48))
  {
LABEL_5:
    sub_10004FF60(*(_QWORD *)(v0 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
    v34 = *(_QWORD *)(v0 + 328);
    v36 = *(_QWORD *)(v0 + 296);
    v35 = *(_QWORD *)(v0 + 304);
    v38 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v0 + 168);
    v39 = type metadata accessor for Logger(0);
    sub_100048B14(v39, (uint64_t)qword_1011AEF40);
    v33(v34, v38, v35);
    sub_10004A160(v37, v36, (uint64_t *)&unk_1011AD730);
    v40 = swift_bridgeObjectRetain();
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v180 = v42;
      v185 = v41;
      v43 = *(_QWORD *)(v0 + 440);
      v44 = *(_QWORD *)(v0 + 416);
      v45 = *(_QWORD *)(v0 + 424);
      *(_QWORD *)typea = *(_QWORD *)(v0 + 352);
      v170 = *(_QWORD *)(v0 + 344);
      v46 = *(_QWORD *)(v0 + 328);
      v47 = *(_QWORD *)(v0 + 304);
      v156 = *(_QWORD *)(v0 + 312);
      v162 = *(_QWORD *)(v0 + 296);
      v48 = swift_slowAlloc(32, -1);
      v174 = swift_slowAlloc(64, -1);
      v190 = v174;
      *(_DWORD *)v48 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 112) = sub_100322200(v44, v45, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v153, v0 + 120);
      swift_bridgeObjectRelease_n(v45, 3);
      *(_WORD *)(v48 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v47);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 128), v47, v43);
      v49 = dispatch thunk of Collection.distance(from:to:)(v0 + 120, v0 + 128, v47, v43);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v46, v47);
      *(_QWORD *)(v0 + 136) = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
      *(_WORD *)(v48 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)typea + 48))(v162, 1, v170) == 1)
      {
        v50 = 0xE400000000000000;
        v51 = 1953460082;
      }
      else
      {
        v128 = *(_QWORD *)(v0 + 288);
        v129 = *(_QWORD *)(v0 + 272);
        sub_10004A160(*(_QWORD *)(v0 + 296), v128, (uint64_t *)&unk_1011AD730);
        v51 = String.init<A>(describing:)(v128, v129);
        v50 = v130;
      }
      v131 = *(_QWORD *)(v0 + 296);
      *(_QWORD *)(v0 + 144) = sub_100322200(v51, v50, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
      swift_bridgeObjectRelease(v50);
      sub_10004FF60(v131, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v185, v180, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy(v174, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v174, -1, -1);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {
      v100 = *(_QWORD *)(v0 + 424);
      v101 = *(_QWORD *)(v0 + 296);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v100, 2);
      sub_10004FF60(v101, (uint64_t *)&unk_1011AD730);

    }
    v132 = *(_QWORD *)(v0 + 400);
    v134 = *(_QWORD *)(v0 + 376);
    v133 = *(_QWORD *)(v0 + 384);
    v136 = *(_QWORD *)(v0 + 360);
    v135 = *(_QWORD *)(v0 + 368);
    v137 = *(_QWORD *)(v0 + 328);
    v138 = *(_QWORD *)(v0 + 336);
    v139 = *(_QWORD *)(v0 + 320);
    v140 = *(_QWORD *)(v0 + 296);
    v157 = *(_QWORD *)(v0 + 288);
    v160 = *(_QWORD *)(v0 + 280);
    v163 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)typed = *(_QWORD *)(v0 + 256);
    v172 = *(_QWORD *)(v0 + 248);
    v178 = *(_QWORD *)(v0 + 240);
    v183 = *(_QWORD *)(v0 + 216);
    v189 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v132);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v138);
    swift_task_dealloc(v137);
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v157);
    swift_task_dealloc(v160);
    swift_task_dealloc(v163);
    swift_task_dealloc(*(_QWORD *)typed);
    swift_task_dealloc(v172);
    swift_task_dealloc(v178);
    swift_task_dealloc(v183);
    swift_task_dealloc(v189);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v159 = v0 + 16;
    v152 = v0 + 104;
    while (1)
    {
      v52 = *(_QWORD *)(v0 + 408);
      v53 = *(_QWORD *)(v0 + 384);
      v175 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
      v181 = *(_QWORD *)(v0 + 376);
      v55 = *(_QWORD *)(v0 + 344);
      v54 = *(_QWORD *)(v0 + 352);
      v56 = *(_QWORD *)(v0 + 336);
      v57 = v52 + *(int *)(v0 + 544);
      v58 = *(_QWORD *)(v0 + 304);
      *(_QWORD *)typeb = *(_QWORD *)(v0 + 440);
      v171 = *(_QWORD *)(v0 + 312);
      v59 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v159, v57, v58, *(_QWORD *)typeb);
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
      *(_QWORD *)(v0 + 448) = v60;
      v186 = v60;
      ((void (*)(uint64_t))v60)(v53);
      v59(v159, 0);
      v175(v56, v52, v58);
      dispatch thunk of Collection.formIndex(after:)(v57, v58, *(_QWORD *)typeb);
      v61 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
      *(_QWORD *)(v0 + 456) = v61;
      v61(v56, v58);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v181, v53, v55);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v62 = *(_QWORD *)(v0 + 424);
      v64 = *(_QWORD *)(v0 + 368);
      v63 = *(_QWORD *)(v0 + 376);
      v65 = *(_QWORD *)(v0 + 344);
      v66 = type metadata accessor for Logger(0);
      *(_QWORD *)(v0 + 464) = sub_100048B14(v66, (uint64_t)qword_1011AEF40);
      v67 = v186;
      v186(v64, v63, v65);
      v68 = swift_bridgeObjectRetain_n(v62, 2);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.default.getter(v69);
      v71 = os_log_type_enabled(v69, v70);
      v72 = *(_QWORD *)(v0 + 424);
      if (v71)
      {
        v73 = *(_QWORD *)(v0 + 416);
        v74 = *(_QWORD *)(v0 + 368);
        v75 = *(_QWORD *)(v0 + 352);
        v176 = *(_QWORD *)(v0 + 344);
        v76 = swift_slowAlloc(22, -1);
        v77 = swift_slowAlloc(64, -1);
        v190 = v77;
        *(_DWORD *)v76 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v76 + 4) = sub_100322200(v73, v72, &v190);
        v78 = swift_bridgeObjectRelease_n(v72, 3);
        *(_WORD *)(v76 + 12) = 2082;
        v79 = Playlist.Folder.Item.id.getter(v78);
        v81 = v80;
        v82 = MusicItemID.description.getter(v79, v80);
        v84 = v83;
        swift_bridgeObjectRelease(v81);
        *(_QWORD *)(v76 + 14) = sub_100322200(v82, v84, &v190);
        v85 = swift_bridgeObjectRelease(v84);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v75 + 8);
        v86(v74, v176, v85);
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v77, -1, -1);
        v87 = v76;
        v67 = v186;
        swift_slowDealloc(v87, -1, -1);
      }
      else
      {
        v88 = *(_QWORD *)(v0 + 368);
        v89 = *(_QWORD *)(v0 + 344);
        v90 = *(_QWORD *)(v0 + 352);
        v91 = swift_bridgeObjectRelease_n(v72, 2);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v90 + 8);
        v86(v88, v89, v91);
      }

      *(_QWORD *)(v0 + 472) = v86;
      v92 = *(_DWORD *)(v0 + 548);
      v93 = *(_QWORD *)(v0 + 376);
      v95 = *(_QWORD *)(v0 + 352);
      v94 = *(_QWORD *)(v0 + 360);
      v96 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(v93, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v67(v94, v93, v96);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v95 + 88))(v94, v96) == v92)
        break;
      v97 = *(_QWORD *)(v0 + 360);
      v98 = *(_QWORD *)(v0 + 344);
      ((void (*)(_QWORD, uint64_t))v86)(*(_QWORD *)(v0 + 376), v98);
      ((void (*)(uint64_t, uint64_t))v86)(v97, v98);
      v99 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
      dispatch thunk of Collection.endIndex.getter(v161, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
      if (v99 == *(_QWORD *)(v0 + 48))
        goto LABEL_5;
    }
    v187 = *(_QWORD *)(v0 + 424);
    v103 = *(_QWORD *)(v0 + 352);
    v102 = *(_QWORD *)(v0 + 360);
    v104 = *(_QWORD *)(v0 + 344);
    v105 = *(_QWORD *)(v0 + 288);
    v106 = *(_QWORD *)(v0 + 264);
    v177 = *(_QWORD *)(v0 + 256);
    v108 = *(_QWORD *)(v0 + 224);
    v107 = *(_QWORD *)(v0 + 232);
    *(_QWORD *)typec = *(_QWORD *)(v0 + 376);
    v109 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t))(v103 + 96))(v102, v104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 32))(v106, v102, v108);
    v110 = *(void (**)(uint64_t))(v109 + 16);
    v67(v105, *(_QWORD *)typec, v104);
    v111 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v103 + 56);
    *(_QWORD *)(v0 + 480) = v111;
    v111(v105, 0, 1, v104);
    v110(v105);
    sub_10004FF60(v105, (uint64_t *)&unk_1011AD730);
    v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16);
    *(_QWORD *)(v0 + 488) = v112;
    v112(v177, v106, v108);
    v113 = swift_bridgeObjectRetain_n(v187, 2);
    v114 = Logger.logObject.getter(v113);
    v115 = static os_log_type_t.default.getter(v114);
    v116 = os_log_type_enabled(v114, v115);
    v117 = *(_QWORD *)(v0 + 424);
    if (v116)
    {
      v118 = *(_QWORD *)(v0 + 416);
      v119 = *(_QWORD *)(v0 + 256);
      v188 = *(_QWORD *)(v0 + 232);
      v182 = *(_QWORD *)(v0 + 224);
      v120 = swift_slowAlloc(22, -1);
      v121 = swift_slowAlloc(64, -1);
      v190 = v121;
      *(_DWORD *)v120 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 96) = sub_100322200(v118, v117, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v154, v152);
      swift_bridgeObjectRelease_n(v117, 3);
      *(_WORD *)(v120 + 12) = 2082;
      v122 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v123 = dispatch thunk of CustomStringConvertible.description.getter(v182, v122);
      v125 = v124;
      *(_QWORD *)(v0 + 104) = sub_100322200(v123, v124, &v190);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v152, v153);
      v126 = swift_bridgeObjectRelease(v125);
      v127 = *(void (**)(uint64_t, uint64_t, __n128))(v188 + 8);
      v127(v119, v182, v126);
      _os_log_impl((void *)&_mh_execute_header, v114, v115, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v120, 0x16u);
      swift_arrayDestroy(v121, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v121, -1, -1);
      swift_slowDealloc(v120, -1, -1);
    }
    else
    {
      v142 = *(_QWORD *)(v0 + 256);
      v143 = *(_QWORD *)(v0 + 224);
      v144 = *(_QWORD *)(v0 + 232);
      v145 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 424), 2);
      v127 = *(void (**)(uint64_t, uint64_t, __n128))(v144 + 8);
      v127(v142, v143, v145);
    }

    *(_QWORD *)(v0 + 496) = v127;
    v146 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v147 = swift_allocObject(v146, 48, 7);
    *(_OWORD *)(v147 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v147 + 32) = static PartialMusicProperty<A>.parent.getter();
    v148 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v147 + 40) = v148;
    v190 = v147;
    specialized Array._endMutation()(v148);
    v149 = v190;
    *(_QWORD *)(v0 + 504) = v190;
    v150 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v151 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 512) = v151;
    *v151 = v0;
    v151[1] = sub_1002FDBDC;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 248), v149, *(_QWORD *)(v0 + 224), v150);
  }
}

uint64_t sub_100300674()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100300698(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011ABCFC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return sub_1002F723C(a1);
}

double sub_1003006FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F91D4(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100300708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for SidebarMenu(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v16 = *(_QWORD *)(v2 + 64);
  v18 = sub_100007E8C(&qword_1011ABD20);
  v4 = *(_QWORD *)(v18 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v15 = *(_QWORD *)(v4 + 64);
  swift_release();
  v17 = v3;
  sub_1002F5684(*(void **)(v0 + v3 + 8), *(_BYTE *)(v0 + v3 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + 40));
  v6 = v0 + v3 + *(int *)(v1 + 24);
  swift_release();
  v7 = (int *)_s9PlaylistsVMa(0);
  v8 = (_QWORD *)(v6 + v7[6]);
  swift_bridgeObjectRelease(*v8);
  v9 = (char *)v8 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v10 = type metadata accessor for Playlist.Folder(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  v12 = (v17 + v16 + v5) & ~v5;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  v13 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v4 + 8))(v0 + v12, v18, v13);
  return swift_deallocObject(v0, v12 + v15);
}

uint64_t sub_100300898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(type metadata accessor for SidebarMenu(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011ABD20) - 8) + 80);
  return sub_1002F95CC(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, v3 + ((v9 + v10) & ~v10));
}

uint64_t sub_100300920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011ABD10) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v7);
  v8 = v0 + v6;
  swift_release();
  v9 = (int *)_s9PlaylistsVMa(0);
  v10 = (_QWORD *)(v0 + v6 + v9[6]);
  swift_bridgeObjectRelease(*v10);
  v11 = (char *)v10 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v12 = type metadata accessor for Playlist.Folder(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8]));
  swift_release();
  swift_release();
  return swift_deallocObject(v0, ((v15 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
}

uint64_t sub_100300A9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3C20) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_100007E8C(&qword_1011ABD10) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + v8;
  v14 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  v15 = *v14;
  v16 = v14[1];
  v17 = (_QWORD *)swift_task_alloc(dword_1011ABD2C);
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_10006AEE4;
  return sub_1002FBE5C(a1, v9, v10, v11, v12, v13, v15, v16);
}

uint64_t sub_100300B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011ABD6C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011ABD68 + dword_1011ABD68))(a1, v4);
}

double sub_100300BF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F7920(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100300C00(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  sub_1002F558C(*(void **)a1, *(_BYTE *)(a1 + 8));
  v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100300C44(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_1002F5684(*(void **)a1, *(_BYTE *)(a1 + 8));
  swift_bridgeObjectRelease(v2);

  return a1;
}

uint64_t sub_100300C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C(&qword_1011ABD20);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100300D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_100007E8C(&qword_1011ABD20) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_1002F7D18(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100300D6C(uint64_t a1)
{
  sub_100300DA4(*(_QWORD *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t sub_100300DA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return swift_errorRelease(a1);
  swift_bridgeObjectRelease(a1);

  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a5);
  return swift_bridgeObjectRelease(a6);
}

void sub_100300E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[4];

  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v16[2] = *(_QWORD *)(v4 - 8);
  v16[3] = v4;
  __chkstk_darwin(v4);
  v16[1] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = __chkstk_darwin(v6);
  v8 = __chkstk_darwin(v7);
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v10 = sub_100007E8C((uint64_t *)&unk_1011AE150);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10005B704(a1, (uint64_t)v13, type metadata accessor for SidebarMenu.Item);
  sub_10005B704(a2, v14, type metadata accessor for SidebarMenu.Item);
  v15 = (char *)sub_100300F8C + 4 * byte_100EB3D01[swift_getEnumCaseMultiPayload(v13, v6)];
  __asm { BR              X10 }
}

BOOL sub_100300F8C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  BOOL v4;

  sub_10005B704(v0, (uint64_t)v2, type metadata accessor for SidebarMenu.Item);
  if (swift_getEnumCaseMultiPayload(v3, v1))
  {
    sub_10004FF60(v0, (uint64_t *)&unk_1011AE150);
    return 0;
  }
  else
  {
    v4 = *v2 == *v3;
    sub_10005B748(v0, type metadata accessor for SidebarMenu.Item);
  }
  return v4;
}

uint64_t sub_1003011AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  _OWORD v11[2];

  if (*a1 != *a2)
    return 0;
  v4 = *(_OWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a1 + 8);
  v9[0] = v4;
  *(_OWORD *)((char *)v9 + 11) = *(_OWORD *)(a1 + 35);
  v5 = *(_OWORD *)(a2 + 24);
  v10 = *(_OWORD *)(a2 + 8);
  v11[0] = v5;
  *(_OWORD *)((char *)v11 + 11) = *(_OWORD *)(a2 + 35);
  if ((static Library.Menu.Request.__derived_struct_equals(_:_:)(&v8, &v10) & 1) == 0)
    return 0;
  v6 = type metadata accessor for SidebarMenu(0);
  if ((sub_10010DF38((uint64_t)&a1[*(int *)(v6 + 24)], (uint64_t)&a2[*(int *)(v6 + 24)]) & 1) == 0)
    return 0;
  type metadata accessor for MusicLibrary(0);
  return static MusicLibrary.== infix(_:_:)(*(_QWORD *)&a1[*(int *)(v6 + 28)], *(_QWORD *)&a2[*(int *)(v6 + 28)]) & 1;
}

uint64_t sub_100301270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char v24;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - v8;
  v10 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011AE150);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  sub_10005B704(a1, (uint64_t)v15, type metadata accessor for SidebarMenu.Item);
  sub_10005B704(a2, v17, type metadata accessor for SidebarMenu.Item);
  if (swift_getEnumCaseMultiPayload(v15, v10) != 3)
    goto LABEL_5;
  sub_10005B704((uint64_t)v15, (uint64_t)v12, type metadata accessor for SidebarMenu.Item);
  if (swift_getEnumCaseMultiPayload(v17, v10) != 3)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v4);
LABEL_5:
    sub_100300E0C(a1, a2);
    v22 = v24;
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011AE150);
    return v22 & 1;
  }
  v18 = v27;
  v19 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v19(v9, v12, v4);
  v19(v6, (char *)v17, v4);
  v20 = sub_100048748((unint64_t *)&unk_1011C9A50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  v21 = sub_100048748(&qword_1011AE160, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  v22 = static MusicItem<>.==~ infix(_:_:)(v9, v6, v4, v20, v21);
  v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v23(v6, v4);
  v23(v9, v4);
  sub_10005B748((uint64_t)v15, type metadata accessor for SidebarMenu.Item);
  return v22 & 1;
}

uint64_t *sub_1003014D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    v12 = *(_OWORD *)((char *)a2 + v11);
    *(_OWORD *)((char *)v4 + v11) = v12;
    swift_unknownObjectRetain(v12, v13);
  }
  return v4;
}

double sub_100301584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  *(_QWORD *)&result = swift_unknownObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

_BYTE *sub_1003015DC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_OWORD *)&a2[v10];
  *(_OWORD *)&a1[v10] = v11;
  swift_unknownObjectRetain(v11, v12);
  return a1;
}

_BYTE *sub_100301660(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (uint64_t *)&a1[v10];
  v12 = (uint64_t *)&a2[v10];
  v13 = *v12;
  v14 = v12[1];
  v15 = *v11;
  *v11 = *v12;
  swift_unknownObjectRetain(v13, v16);
  swift_unknownObjectRelease(v15);
  v11[1] = v14;
  return a1;
}

_BYTE *sub_1003016F8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_100301774(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (uint64_t *)&a1[v10];
  v12 = (uint64_t *)&a2[v10];
  v13 = v12[1];
  v14 = *v11;
  *v11 = *v12;
  swift_unknownObjectRelease(v14);
  v11[1] = v13;
  return a1;
}

uint64_t sub_100301804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100301810);
}

uint64_t sub_100301810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1003018A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003018AC);
}

uint64_t sub_1003018AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

void sub_10030192C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EB3D78;
  sub_1003019A8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100EB4018;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_1003019A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1011ABDE8)
  {
    v2 = type metadata accessor for SidebarMenu.Item(255);
    v3 = sub_100048748(&qword_1011ADF50, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3E00);
    v4 = type metadata accessor for NSDiffableDataSourceSectionSnapshot(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1011ABDE8);
  }
}

ValueMetadata *type metadata accessor for SidebarMenu.Item.DecodingError()
{
  return &type metadata for SidebarMenu.Item.DecodingError;
}

uint64_t _s5Music11SidebarMenuV4ItemO4_RawOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100301A84 + 4 * byte_100EB3D0C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100301AB8 + 4 * byte_100EB3D07[v4]))();
}

uint64_t sub_100301AB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100301AC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100301AC8);
  return result;
}

uint64_t sub_100301AD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100301ADCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100301AE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100301AE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarMenu.Item._Raw()
{
  return &type metadata for SidebarMenu.Item._Raw;
}

uint64_t storeEnumTagSinglePayload for SidebarMenu.Item.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100301B50 + 4 * byte_100EB3D16[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100301B84 + 4 * byte_100EB3D11[v4]))();
}

uint64_t sub_100301B84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100301B8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100301B94);
  return result;
}

uint64_t sub_100301BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100301BA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100301BAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100301BB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarMenu.Item.CodingKeys()
{
  return &type metadata for SidebarMenu.Item.CodingKeys;
}

uint64_t _s5Music11SidebarMenuV7SectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100301C1C + 4 * byte_100EB3D20[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100301C50 + 4 * byte_100EB3D1B[v4]))();
}

uint64_t sub_100301C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100301C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100301C60);
  return result;
}

uint64_t sub_100301C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100301C74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100301C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100301C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarMenu.StoreTab()
{
  return &type metadata for SidebarMenu.StoreTab;
}

unint64_t sub_100301CA0()
{
  unint64_t result;

  result = qword_1011ABE20;
  if (!qword_1011ABE20)
  {
    result = swift_getWitnessTable(&unk_100EB40D0, &type metadata for SidebarMenu.StoreTab);
    atomic_store(result, (unint64_t *)&qword_1011ABE20);
  }
  return result;
}

unint64_t sub_100301CE8()
{
  unint64_t result;

  result = qword_1011ABE28;
  if (!qword_1011ABE28)
  {
    result = swift_getWitnessTable(&unk_100EB41C0, &type metadata for SidebarMenu.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011ABE28);
  }
  return result;
}

unint64_t sub_100301D30()
{
  unint64_t result;

  result = qword_1011ABE30;
  if (!qword_1011ABE30)
  {
    result = swift_getWitnessTable(&unk_100EB4260, &type metadata for SidebarMenu.Item._Raw);
    atomic_store(result, (unint64_t *)&qword_1011ABE30);
  }
  return result;
}

unint64_t sub_100301D78()
{
  unint64_t result;

  result = qword_1011ABE38;
  if (!qword_1011ABE38)
  {
    result = swift_getWitnessTable(&unk_100EB40F8, &type metadata for SidebarMenu.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011ABE38);
  }
  return result;
}

unint64_t sub_100301DC0()
{
  unint64_t result;

  result = qword_1011ABE40;
  if (!qword_1011ABE40)
  {
    result = swift_getWitnessTable(&unk_100EB4120, &type metadata for SidebarMenu.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011ABE40);
  }
  return result;
}

unint64_t sub_100301E04()
{
  unint64_t result;

  result = qword_1011ABE48;
  if (!qword_1011ABE48)
  {
    result = swift_getWitnessTable(&unk_100EB41E8, &type metadata for SidebarMenu.Item._Raw);
    atomic_store(result, (unint64_t *)&qword_1011ABE48);
  }
  return result;
}

unint64_t sub_100301E48()
{
  unint64_t result;

  result = qword_1011ABE50;
  if (!qword_1011ABE50)
  {
    result = swift_getWitnessTable(&unk_100EB4098, &type metadata for SidebarMenu.StoreTab);
    atomic_store(result, (unint64_t *)&qword_1011ABE50);
  }
  return result;
}

unint64_t sub_100301E8C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AB8D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

ValueMetadata *_s10AlbumsViewVMa()
{
  return &_s10AlbumsViewVN;
}

uint64_t sub_100301EF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C170, 1);
}

uint64_t sub_100301F08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;

  v5 = v4;
  v10 = (int *)sub_100007E8C(&qword_10119F7F8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100650CAC(a2);
  v13 = sub_100007E8C(&qword_10119F7C0);
  v14 = &v12[*(int *)(v13 + 36)];
  v15 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v14, v16, 0);
  v12[*(int *)(v13 + 40)] = 2;
  v17 = &v12[v10[9]];
  v18 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a1, v18);
  v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v21 = EnvironmentObject.init()(v19, v20);
  v23 = v22;
  v24 = type metadata accessor for TabSelectionManager(0);
  v25 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v26 = EnvironmentObject.init()(v24, v25);
  v28 = v27;
  v12[v10[10]] = a3;
  v29 = &v12[v10[11]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100EB4528);
  v29[8] = 0;
  v30 = &v12[v10[12]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EB4550);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = (uint64_t *)&v12[v10[13]];
  *v31 = v21;
  v31[1] = v23;
  v32 = (uint64_t *)&v12[v10[14]];
  *v32 = v26;
  v32[1] = v28;
  sub_10004A160(v5, a4, &qword_10119F710);
  v33 = sub_100007E8C(&qword_10119F718);
  return sub_100065228((uint64_t)v12, a4 + *(int *)(v33 + 36), &qword_10119F7F8);
}

uint64_t sub_100302138@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;

  v5 = v4;
  v10 = (int *)sub_100007E8C(&qword_1011ABF60);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006502D0(a2);
  v13 = sub_100007E8C(&qword_1011ABF68);
  v14 = &v12[*(int *)(v13 + 36)];
  v15 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v14, v16, 0);
  v12[*(int *)(v13 + 40)] = 2;
  v17 = &v12[v10[9]];
  v18 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a1, v18);
  v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v21 = EnvironmentObject.init()(v19, v20);
  v23 = v22;
  v24 = type metadata accessor for TabSelectionManager(0);
  v25 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v26 = EnvironmentObject.init()(v24, v25);
  v28 = v27;
  v12[v10[10]] = a3;
  v29 = &v12[v10[11]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100EB4528);
  v29[8] = 0;
  v30 = &v12[v10[12]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EB4550);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = (uint64_t *)&v12[v10[13]];
  *v31 = v21;
  v31[1] = v23;
  v32 = (uint64_t *)&v12[v10[14]];
  *v32 = v26;
  v32[1] = v28;
  sub_10004A160(v5, a4, &qword_1011ABF18);
  v33 = sub_100007E8C(&qword_1011ABF20);
  return sub_100065228((uint64_t)v12, a4 + *(int *)(v33 + 36), &qword_1011ABF60);
}

uint64_t sub_100302368@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;

  v5 = v4;
  v10 = (int *)sub_100007E8C(&qword_1011AC040);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10065172C(a2);
  v13 = sub_100007E8C(&qword_1011AC048);
  v14 = &v12[*(int *)(v13 + 36)];
  v15 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v14, v16, 0);
  v12[*(int *)(v13 + 40)] = 2;
  v17 = &v12[v10[9]];
  v18 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a1, v18);
  v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v21 = EnvironmentObject.init()(v19, v20);
  v23 = v22;
  v24 = type metadata accessor for TabSelectionManager(0);
  v25 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v26 = EnvironmentObject.init()(v24, v25);
  v28 = v27;
  v12[v10[10]] = a3;
  v29 = &v12[v10[11]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100EB4528);
  v29[8] = 0;
  v30 = &v12[v10[12]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EB4550);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = (uint64_t *)&v12[v10[13]];
  *v31 = v21;
  v31[1] = v23;
  v32 = (uint64_t *)&v12[v10[14]];
  *v32 = v26;
  v32[1] = v28;
  sub_10004A160(v5, a4, &qword_1011AC050);
  v33 = sub_100007E8C(&qword_1011C7400);
  return sub_100065228((uint64_t)v12, a4 + *(int *)(v33 + 36), &qword_1011AC040);
}

uint64_t sub_100302598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;

  v5 = v4;
  v10 = (int *)sub_100007E8C(&qword_1011AC068);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100651470(a2);
  v13 = sub_100007E8C(&qword_1011AC070);
  v14 = &v12[*(int *)(v13 + 36)];
  v15 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = sub_100007E8C(&qword_10119F7C8);
  swift_storeEnumTagMultiPayload(v14, v16, 0);
  v12[*(int *)(v13 + 40)] = 2;
  v17 = &v12[v10[9]];
  v18 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a1, v18);
  v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v21 = EnvironmentObject.init()(v19, v20);
  v23 = v22;
  v24 = type metadata accessor for TabSelectionManager(0);
  v25 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v26 = EnvironmentObject.init()(v24, v25);
  v28 = v27;
  v12[v10[10]] = a3;
  v29 = &v12[v10[11]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100EB4528);
  v29[8] = 0;
  v30 = &v12[v10[12]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EB4550);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = (uint64_t *)&v12[v10[13]];
  *v31 = v21;
  v31[1] = v23;
  v32 = (uint64_t *)&v12[v10[14]];
  *v32 = v26;
  v32[1] = v28;
  sub_10004A160(v5, a4, &qword_1011AC078);
  v33 = sub_100007E8C(&qword_1011AC080);
  return sub_100065228((uint64_t)v12, a4 + *(int *)(v33 + 36), &qword_1011AC068);
}

uint64_t sub_1003027C8@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t KeyPath;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];
  char v12;

  AppStorage.projectedValue.getter(v11, *v2, &type metadata for Library.ContentFilterOption, a2);
  v4 = v11[0];
  v5 = v11[1];
  v6 = v12;
  KeyPath = swift_getKeyPath(&unk_100EB4428);
  v8 = (uint64_t *)(a1 + *(int *)(_s11ContentViewVMa(0) + 28));
  *v8 = KeyPath;
  v9 = sub_100007E8C(&qword_10119F030);
  result = swift_storeEnumTagMultiPayload(v8, v9, 0);
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = sub_100302A6C;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

uint64_t _s11ContentViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011ABEB0, (uint64_t)&_s11ContentViewVMn);
}

uint64_t sub_100302890@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t KeyPath;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[2];
  char v22;

  v20 = a1;
  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21[-1] - v6;
  v8 = _s11ContentViewVMa(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AppStorage.projectedValue.getter(v21, *v1, &type metadata for Library.ContentFilterOption, v9);
  v13 = v21[0];
  v12 = v21[1];
  v14 = v22;
  KeyPath = swift_getKeyPath(&unk_100EB4428);
  v16 = (uint64_t *)&v11[*(int *)(v8 + 28)];
  *v16 = KeyPath;
  v17 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v16, v17, 0);
  *v11 = 2;
  *((_QWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 2) = v12;
  v11[24] = v14;
  *((_QWORD *)v11 + 4) = sub_100302A6C;
  *((_QWORD *)v11 + 5) = 0;
  v11[48] = 0;
  _s16CompilationsViewVMa(0);
  sub_10082460C((uint64_t)v4);
  sub_10005B704((uint64_t)v4, (uint64_t)v7, type metadata accessor for Library.Context);
  v7[*(int *)(v2 + 68)] = 1;
  sub_10005B748((uint64_t)v4, type metadata accessor for Library.Context);
  v18 = sub_100048748(&qword_1011ABEF0, _s11ContentViewVMa, (uint64_t)&unk_100EB44B0);
  View.libraryContext(_:)((uint64_t)v7, v8, v18);
  sub_10005B748((uint64_t)v7, type metadata accessor for Library.Context);
  return sub_10005B748((uint64_t)v11, _s11ContentViewVMa);
}

uint64_t sub_100302A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100007E8C(&qword_1011A38D8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for Album(0);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, &protocol witness table for Album);
  v6 = sub_100049F28(&qword_1011A38E0, &qword_1011A38D8, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v7 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_100302B48(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v70;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v25 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a2[4];
    v9 = a2[5];
    v10 = *((_BYTE *)a2 + 48);
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v8, v9);
    *(_QWORD *)(v4 + 32) = v8;
    *(_QWORD *)(v4 + 40) = v9;
    *(_BYTE *)(v4 + 48) = v10;
    v11 = *(int *)(a3 + 28);
    v12 = (_QWORD *)(v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    *v12 = *v13;
    if (EnumCaseMultiPayload == 1)
    {
      v70 = v14;
      v16 = (int *)type metadata accessor for Library.Context(0);
      v17 = v16[5];
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = type metadata accessor for Album(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v21 + 48);
      v23 = swift_retain();
      if (v22(v19, 1, v20, v23))
      {
        v24 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v29 = v16[6];
      v30 = (char *)v12 + v29;
      v31 = (char *)v13 + v29;
      v32 = type metadata accessor for Artist(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v35 = v16[7];
      v36 = (char *)v12 + v35;
      v37 = (char *)v13 + v35;
      v38 = type metadata accessor for Composer(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v41 = v16[8];
      v42 = (char *)v12 + v41;
      v43 = (char *)v13 + v41;
      v44 = type metadata accessor for Genre(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100007E8C(&qword_10119ED08);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v47 = v16[9];
      v48 = (char *)v12 + v47;
      v49 = (char *)v13 + v47;
      v50 = type metadata accessor for Playlist(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v53 = v16[10];
      v54 = (char *)v12 + v53;
      v55 = (char *)v13 + v53;
      v56 = type metadata accessor for TVShow(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      v59 = v16[11];
      v60 = (char *)v12 + v59;
      v61 = (char *)v13 + v59;
      v62 = type metadata accessor for TVSeason(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      *((_BYTE *)v12 + v16[12]) = *((_BYTE *)v13 + v16[12]);
      *((_BYTE *)v12 + v16[13]) = *((_BYTE *)v13 + v16[13]);
      *((_BYTE *)v12 + v16[14]) = *((_BYTE *)v13 + v16[14]);
      v65 = v16[15];
      v66 = (_QWORD *)((char *)v12 + v65);
      v67 = (_QWORD *)((char *)v13 + v65);
      v68 = v67[1];
      *v66 = *v67;
      v66[1] = v68;
      *(_QWORD *)((char *)v12 + v16[16]) = *(_QWORD *)((char *)v13 + v16[16]);
      *((_BYTE *)v12 + v16[17]) = *((_BYTE *)v13 + v16[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v12;
      v27 = v70;
      v28 = 1;
    }
    else
    {
      swift_retain();
      v26 = v12;
      v27 = v14;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return v4;
}

double sub_10030307C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_100007E8C(&qword_10119F030);
  LODWORD(a1) = swift_getEnumCaseMultiPayload(v4, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if ((_DWORD)a1 == 1)
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = v4 + v7[5];
    v9 = type metadata accessor for Album(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v4 + v7[6];
    v12 = type metadata accessor for Artist(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v4 + v7[7];
    v15 = type metadata accessor for Composer(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v4 + v7[8];
    v18 = type metadata accessor for Genre(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    v20 = v4 + v7[9];
    v21 = type metadata accessor for Playlist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    v23 = v4 + v7[10];
    v24 = type metadata accessor for TVShow(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    v26 = v4 + v7[11];
    v27 = type metadata accessor for TVSeason(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + v7[15] + 8));
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + v7[16])).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003032F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v66;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v7, v8);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  v10 = *(int *)(a3 + 28);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  *v11 = *v12;
  if (EnumCaseMultiPayload == 1)
  {
    v66 = v13;
    v15 = (int *)type metadata accessor for Library.Context(0);
    v16 = v15[5];
    v17 = (char *)v11 + v16;
    v18 = (char *)v12 + v16;
    v19 = type metadata accessor for Album(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
    v22 = swift_retain();
    if (v21(v18, 1, v19, v22))
    {
      v23 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v25 = v15[6];
    v26 = (char *)v11 + v25;
    v27 = (char *)v12 + v25;
    v28 = type metadata accessor for Artist(0);
    v29 = *(_QWORD *)(v28 - 8);
    v13 = v66;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = v15[7];
    v32 = (char *)v11 + v31;
    v33 = (char *)v12 + v31;
    v34 = type metadata accessor for Composer(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = v15[8];
    v38 = (char *)v11 + v37;
    v39 = (char *)v12 + v37;
    v40 = type metadata accessor for Genre(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C(&qword_10119ED08);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v15[9];
    v44 = (char *)v11 + v43;
    v45 = (char *)v12 + v43;
    v46 = type metadata accessor for Playlist(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v15[10];
    v50 = (char *)v11 + v49;
    v51 = (char *)v12 + v49;
    v52 = type metadata accessor for TVShow(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v55 = v15[11];
    v56 = (char *)v11 + v55;
    v57 = (char *)v12 + v55;
    v58 = type metadata accessor for TVSeason(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    *((_BYTE *)v11 + v15[12]) = *((_BYTE *)v12 + v15[12]);
    *((_BYTE *)v11 + v15[13]) = *((_BYTE *)v12 + v15[13]);
    *((_BYTE *)v11 + v15[14]) = *((_BYTE *)v12 + v15[14]);
    v61 = v15[15];
    v62 = (_QWORD *)((char *)v11 + v61);
    v63 = (_QWORD *)((char *)v12 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    *(_QWORD *)((char *)v11 + v15[16]) = *(_QWORD *)((char *)v12 + v15[16]);
    *((_BYTE *)v11 + v15[17]) = *((_BYTE *)v12 + v15[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = 1;
  }
  else
  {
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v24);
  return a1;
}

uint64_t sub_1003037F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v66;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  KeyValueObservationTrigger.keyPath.getter(v6, v7);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  sub_1000A6174(v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10004FF60(a1 + v11, &qword_10119F030);
    v14 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    *v12 = *v13;
    if (EnumCaseMultiPayload == 1)
    {
      v66 = v14;
      v16 = (int *)type metadata accessor for Library.Context(0);
      v17 = v16[5];
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = type metadata accessor for Album(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v21 + 48);
      v23 = swift_retain();
      if (v22(v19, 1, v20, v23))
      {
        v24 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v26 = v16[6];
      v27 = (char *)v12 + v26;
      v28 = (char *)v13 + v26;
      v29 = type metadata accessor for Artist(0);
      v30 = *(_QWORD *)(v29 - 8);
      v14 = v66;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v16[7];
      v33 = (char *)v12 + v32;
      v34 = (char *)v13 + v32;
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v16[8];
      v39 = (char *)v12 + v38;
      v40 = (char *)v13 + v38;
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v16[9];
      v45 = (char *)v12 + v44;
      v46 = (char *)v13 + v44;
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v16[10];
      v51 = (char *)v12 + v50;
      v52 = (char *)v13 + v50;
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v16[11];
      v57 = (char *)v12 + v56;
      v58 = (char *)v13 + v56;
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      *((_BYTE *)v12 + v16[12]) = *((_BYTE *)v13 + v16[12]);
      *((_BYTE *)v12 + v16[13]) = *((_BYTE *)v13 + v16[13]);
      *((_BYTE *)v12 + v16[14]) = *((_BYTE *)v13 + v16[14]);
      v62 = v16[15];
      v63 = (_QWORD *)((char *)v12 + v62);
      v64 = (_QWORD *)((char *)v13 + v62);
      *v63 = *v64;
      v63[1] = v64[1];
      *(_QWORD *)((char *)v12 + v16[16]) = *(_QWORD *)((char *)v13 + v16[16]);
      *((_BYTE *)v12 + v16[17]) = *((_BYTE *)v13 + v16[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = 1;
    }
    else
    {
      swift_retain();
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v25);
  }
  return a1;
}

uint64_t sub_100303D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(int *)(a3 + 28);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    *v5 = *v6;
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v8[5];
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = v8[6];
    v16 = (char *)v5 + v15;
    v17 = (char *)v6 + v15;
    v18 = type metadata accessor for Artist(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = v8[7];
    v22 = (char *)v5 + v21;
    v23 = (char *)v6 + v21;
    v24 = type metadata accessor for Composer(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v27 = v8[8];
    v28 = (char *)v5 + v27;
    v29 = (char *)v6 + v27;
    v30 = type metadata accessor for Genre(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_10119ED08);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = v8[9];
    v34 = (char *)v5 + v33;
    v35 = (char *)v6 + v33;
    v36 = type metadata accessor for Playlist(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v39 = v8[10];
    v40 = (char *)v5 + v39;
    v41 = (char *)v6 + v39;
    v42 = type metadata accessor for TVShow(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v45 = v8[11];
    v46 = (char *)v5 + v45;
    v47 = (char *)v6 + v45;
    v48 = type metadata accessor for TVSeason(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    *((_BYTE *)v5 + v8[12]) = *((_BYTE *)v6 + v8[12]);
    *((_BYTE *)v5 + v8[13]) = *((_BYTE *)v6 + v8[13]);
    *((_BYTE *)v5 + v8[14]) = *((_BYTE *)v6 + v8[14]);
    *(_OWORD *)((char *)v5 + v8[15]) = *(_OWORD *)((char *)v6 + v8[15]);
    *(_QWORD *)((char *)v5 + v8[16]) = *(_QWORD *)((char *)v6 + v8[16]);
    *((_BYTE *)v5 + v8[17]) = *((_BYTE *)v6 + v8[17]);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1003041F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v6;
  sub_1000A6174(v7, v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 28);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_10004FF60(a1 + v9, &qword_10119F030);
    v12 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      *v10 = *v11;
      v13 = (int *)type metadata accessor for Library.Context(0);
      v14 = v13[5];
      v15 = (char *)v10 + v14;
      v16 = (char *)v11 + v14;
      v17 = type metadata accessor for Album(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = v13[6];
      v21 = (char *)v10 + v20;
      v22 = (char *)v11 + v20;
      v23 = type metadata accessor for Artist(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v26 = v13[7];
      v27 = (char *)v10 + v26;
      v28 = (char *)v11 + v26;
      v29 = type metadata accessor for Composer(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v13[8];
      v33 = (char *)v10 + v32;
      v34 = (char *)v11 + v32;
      v35 = type metadata accessor for Genre(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C(&qword_10119ED08);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v13[9];
      v39 = (char *)v10 + v38;
      v40 = (char *)v11 + v38;
      v41 = type metadata accessor for Playlist(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v13[10];
      v45 = (char *)v10 + v44;
      v46 = (char *)v11 + v44;
      v47 = type metadata accessor for TVShow(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v13[11];
      v51 = (char *)v10 + v50;
      v52 = (char *)v11 + v50;
      v53 = type metadata accessor for TVSeason(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *((_BYTE *)v10 + v13[12]) = *((_BYTE *)v11 + v13[12]);
      *((_BYTE *)v10 + v13[13]) = *((_BYTE *)v11 + v13[13]);
      *((_BYTE *)v10 + v13[14]) = *((_BYTE *)v11 + v13[14]);
      *(_OWORD *)((char *)v10 + v13[15]) = *(_OWORD *)((char *)v11 + v13[15]);
      *(_QWORD *)((char *)v10 + v13[16]) = *(_QWORD *)((char *)v11 + v13[16]);
      *((_BYTE *)v10 + v13[17]) = *((_BYTE *)v11 + v13[17]);
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003046F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003046FC);
}

uint64_t sub_1003046FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_10030477C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100304788);
}

uint64_t sub_100304788(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_100304800(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EB4468;
  v4[1] = &unk_100EB4480;
  v4[2] = &unk_100EB4498;
  sub_1002ABB08(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_100304888()
{
  return sub_100048748(&qword_1011ABEF0, _s11ContentViewVMa, (uint64_t)&unk_100EB44B0);
}

uint64_t sub_1003048B4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C1C0, 1);
}

uint64_t sub_1003048C4@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t (**v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned __int8 v132;
  uint64_t v133;
  uint64_t v134;
  unsigned __int8 v135;

  v2 = v1;
  v124 = a1;
  v123 = type metadata accessor for ToolbarItemPlacement(0);
  v121 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v122 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v120 = (char *)&v99 - v5;
  v117 = sub_100007E8C(&qword_1011ABEF8);
  __chkstk_darwin(v117);
  v116 = (uint64_t)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011ABF00);
  __chkstk_darwin(v115);
  v114 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v128);
  v108 = (uint64_t)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v109 = (uint64_t)&v99 - v10;
  __chkstk_darwin(v11);
  v129 = (uint64_t)&v99 - v12;
  v107 = _s11ContentViewVMa(0);
  v104 = *(_QWORD *)(v107 - 8);
  v105 = *(_QWORD *)(v104 + 64);
  __chkstk_darwin(v107);
  v103 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v14);
  v118 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v101 = (uint64_t)&v99 - v17;
  v18 = (int *)sub_100007E8C(&qword_1011ABF08);
  __chkstk_darwin(v18);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v106 = (uint64_t)&v99 - v22;
  v23 = sub_100007E8C(&qword_1011ABF10);
  __chkstk_darwin(v23);
  v110 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v111 = (uint64_t)&v99 - v26;
  v113 = sub_100007E8C(&qword_1011ABF18);
  __chkstk_darwin(v113);
  v112 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011ABF20);
  __chkstk_darwin(v28);
  v119 = (uint64_t)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *((_QWORD *)v1 + 4);
  v31 = *((_QWORD *)v1 + 5);
  v32 = v1[48];
  v33 = sub_100007E8C(&qword_1011ABF28);
  v125 = sub_100049F28(&qword_1011ABF30, &qword_1011ABF28, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v126 = v33;
  v34 = v125;
  StateObject.wrappedValue.getter(v30, v31, v32, v33, v125);
  dispatch thunk of MusicAutoupdatingResponse.response.getter();
  swift_release();
  v35 = StateObject.wrappedValue.getter(v30, v31, v32, v33, v34);
  v100 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v35);
  swift_release();
  v36 = *((_QWORD *)v1 + 2);
  v37 = v1[24];
  v130 = *((_QWORD *)v1 + 1);
  v131 = v36;
  v132 = v37;
  v38 = sub_100007E8C(&qword_1011ABF38);
  v127 = v38;
  Binding.projectedValue.getter(&v133, v38);
  v39 = v134;
  v99 = v133;
  v40 = v135;
  v41 = v103;
  sub_10005B704((uint64_t)v2, v103, _s11ContentViewVMa);
  v42 = *(unsigned __int8 *)(v104 + 80);
  v43 = (v42 + 16) & ~v42;
  v44 = swift_allocObject(&unk_1010BF3E0, v43 + v105, v42 | 7);
  sub_10005B6C0(v41, v44 + v43, _s11ContentViewVMa);
  v45 = &v20[v18[19]];
  *(_QWORD *)v45 = swift_getKeyPath(&unk_100EB4500);
  *((_QWORD *)v45 + 1) = 0;
  *((_QWORD *)v45 + 2) = 0;
  *((_QWORD *)v45 + 3) = 0;
  v45[32] = 0;
  sub_100065228(v101, (uint64_t)v20, (uint64_t *)&unk_1011A3900);
  v102 = v18;
  v20[v18[13]] = v100 & 1;
  v20[v18[14]] = 0;
  v46 = &v20[v18[15]];
  *(_QWORD *)v46 = v99;
  *((_QWORD *)v46 + 1) = v39;
  v46[16] = v40;
  *(_QWORD *)&v20[v18[16]] = 4;
  *(_QWORD *)&v20[v18[17]] = 0x403E000000000000;
  v47 = (uint64_t (**)(uint64_t))&v20[v18[18]];
  *v47 = sub_10030597C;
  v47[1] = (uint64_t (*)(uint64_t))v44;
  v48 = v106;
  sub_100065228((uint64_t)v20, v106, &qword_1011ABF08);
  v107 = (uint64_t)&v2[*(int *)(v107 + 28)];
  v49 = v109;
  sub_10082460C(v109);
  v50 = *((_QWORD *)v2 + 2);
  v51 = v2[24];
  v133 = *((_QWORD *)v2 + 1);
  v134 = v50;
  v135 = v51;
  Binding.wrappedValue.getter(&v130, v38);
  LOBYTE(v44) = v130;
  v52 = v129;
  sub_10005B704(v49, v129, type metadata accessor for Library.Context);
  *(_BYTE *)(v52 + *(int *)(v128 + 56)) = v44;
  sub_10005B748(v49, type metadata accessor for Library.Context);
  v53 = v125;
  v54 = v126;
  StateObject.wrappedValue.getter(*((_QWORD *)v2 + 4), *((_QWORD *)v2 + 5), v2[48], v126, v125);
  v55 = v115;
  v56 = (uint64_t)v114;
  v57 = (uint64_t)&v114[*(int *)(v115 + 36)];
  sub_10005B704(v52, v57, type metadata accessor for Library.Context);
  v58 = (_QWORD *)(v57 + *(int *)(sub_100007E8C(&qword_1011ABF40) + 36));
  swift_retain();
  *v58 = ObservedObject.init(wrappedValue:)(v59, v54, v53);
  v58[1] = v60;
  sub_10004A160(v48, v56, &qword_1011ABF08);
  v61 = v116;
  sub_10004A160(v56, v116, &qword_1011ABF00);
  swift_storeEnumTagMultiPayload(v61, v117, 0);
  v62 = sub_100305990();
  v63 = sub_100049F28(&qword_1011ABF50, &qword_1011ABF08, (uint64_t)&unk_100EC0C68);
  v64 = v110;
  _ConditionalContent<>.init(storage:)(v61, v55, v102, v62, v63);
  sub_10004FF60(v56, &qword_1011ABF00);
  v65 = (uint64_t)v64;
  v66 = v111;
  sub_100065228(v65, v111, &qword_1011ABF10);
  swift_release();
  sub_10005B748(v129, type metadata accessor for Library.Context);
  sub_10004FF60(v48, &qword_1011ABF08);
  LODWORD(v117) = *v2;
  v67 = *((_QWORD *)v2 + 2);
  v68 = v2[24];
  v130 = *((_QWORD *)v2 + 1);
  v131 = v67;
  v132 = v68;
  v69 = Binding.projectedValue.getter(&v133, v127);
  v70 = v133;
  v71 = v134;
  LOBYTE(v61) = v135;
  v72 = v120;
  static ToolbarItemPlacement.navigationBarTrailing.getter(v69);
  v73 = (uint64_t)v112;
  v74 = &v112[*(int *)(v113 + 36)];
  v75 = _s25SortFilterContentModifierVMa(0);
  v76 = v121;
  v77 = v123;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(&v74[*(int *)(v75 + 24)], v72, v123);
  *v74 = v117;
  *((_QWORD *)v74 + 1) = v70;
  *((_QWORD *)v74 + 2) = v71;
  v74[24] = v61;
  v78 = (uint64_t)v122;
  v79 = v77;
  v80 = v73;
  sub_10004A160(v66, v73, &qword_1011ABF10);
  v81 = *(void (**)(char *, uint64_t))(v76 + 8);
  v81(v72, v79);
  v82 = sub_10004FF60(v66, &qword_1011ABF10);
  static ToolbarItemPlacement.navigationBarTrailing.getter(v82);
  v83 = v129;
  sub_10082460C(v129);
  v84 = *((_QWORD *)v2 + 2);
  v85 = v2[24];
  v133 = *((_QWORD *)v2 + 1);
  v134 = v84;
  v135 = v85;
  Binding.wrappedValue.getter(&v130, v127);
  LOBYTE(v73) = v130;
  v86 = v108;
  sub_10005B704(v83, v108, type metadata accessor for Library.Context);
  v87 = (_QWORD *)v86;
  *(_BYTE *)(v86 + *(int *)(v128 + 56)) = v73;
  sub_10005B748(v83, type metadata accessor for Library.Context);
  v88 = *((_QWORD *)v2 + 4);
  v89 = *((_QWORD *)v2 + 5);
  v90 = v2[48];
  v91 = (uint64_t)v118;
  StateObject.wrappedValue.getter(v88, v89, v90, v126, v125);
  dispatch thunk of MusicAutoupdatingResponse.response.getter();
  swift_release();
  v92 = sub_100007E8C(&qword_1011A3910);
  v93 = *(_QWORD *)(v92 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92) == 1)
  {
    sub_10004FF60(v91, (uint64_t *)&unk_1011A3900);
    v94 = 1;
  }
  else
  {
    v95 = MusicLibrarySectionedResponse.sections.getter(v92);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v91, v92);
    v96 = *(_QWORD *)(v95 + 16);
    swift_bridgeObjectRelease(v95);
    v94 = v96 == 0;
  }
  v97 = v119;
  sub_100302138(v78, v87, v94, v119);
  sub_10005B748((uint64_t)v87, type metadata accessor for Library.Context);
  v81((char *)v78, v79);
  sub_10004FF60(v80, &qword_1011ABF18);
  return sub_100065228(v97, v124, &qword_1011ABF20);
}

uint64_t sub_100305278(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[4];
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_100EB4578);
  v5 = sub_100007E8C(&qword_1011ADFD0);
  MusicLibrarySection.subscript.getter(KeyPath, v5);
  swift_release();
  v10[2] = a1;
  v10[3] = a2;
  v6 = sub_100007E8C(&qword_1011ABF70);
  v7 = sub_1000A8D68();
  v8 = sub_100305A48();
  return Section<>.init(header:content:)(&v11, sub_100305A40, v10, &_s6HeaderVN, v6, v7, v8);
}

uint64_t sub_100305334(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s11ContentViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C(&qword_1011A3D80);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011ADFD0);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s11ContentViewVMa);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010BF408, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s11ContentViewVMa);
  v14 = _s9ContainerO4CellVMa(0);
  v15 = sub_100049F28(&qword_1011ABF88, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
  v17 = sub_100048748(&qword_1011B6EC0, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  return ForEach<>.init(_:content:)(v8, sub_100305D68, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_1003054F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;

  v69 = a2;
  v5 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v5);
  v71 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (int *)_s9ContainerO5ModelVMa(0);
  __chkstk_darwin(v7);
  v70 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - v10;
  v12 = type metadata accessor for Album(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v11, a1, v12);
  v14 = enum case for GenericMusicItem.album(_:);
  v15 = type metadata accessor for GenericMusicItem(0);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v11, v14, v15);
  v17 = Album.title.getter(v16);
  v67 = v18;
  v68 = v17;
  v19 = Album.artistName.getter(v17);
  v65 = v20;
  v66 = v19;
  v21 = &v11[v7[7]];
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 10, v22);
  v23 = &v11[v7[9]];
  v24 = (int *)sub_100007E8C(&qword_1011C5BA0);
  v25 = (uint64_t)&v23[v24[12]];
  v26 = &v23[v24[16]];
  v27 = v24[20];
  v13(v23, a1, v12);
  _s11ContentViewVMa(0);
  sub_10082460C(v25);
  v28 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 0, 1, v28);
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *(_OWORD *)&v23[v27] = xmmword_100EAE4D0;
  v29 = type metadata accessor for NavigationDestinationItem(0);
  swift_storeEnumTagMultiPayload(v23, v29, 1);
  v30 = &v11[v7[5]];
  v31 = v67;
  *(_QWORD *)v30 = v68;
  *((_QWORD *)v30 + 1) = v31;
  v32 = &v11[v7[6]];
  v33 = v65;
  *(_QWORD *)v32 = v66;
  *((_QWORD *)v32 + 1) = v33;
  *(_QWORD *)&v11[v7[8]] = 0x3FF0000000000000;
  v34 = v70;
  sub_10005B704((uint64_t)v11, v70, _s9ContainerO5ModelVMa);
  KeyPath = swift_getKeyPath(&unk_100EB4428);
  v36 = (uint64_t)v71;
  *v71 = KeyPath;
  v37 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  sub_10005B6C0(v34, a3, _s9ContainerO5ModelVMa);
  v38 = (int *)_s9ContainerO4CellVMa(0);
  v39 = a3 + v38[5];
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100EB4528);
  *(_BYTE *)(v39 + 8) = 0;
  sub_100065228(v36, a3 + v38[6], &qword_10119EE98);
  v40 = (_QWORD *)(a3 + v38[7]);
  v41 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v42 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v40 = EnvironmentObject.init()(v41, v42);
  v40[1] = v43;
  v44 = (_QWORD *)(a3 + v38[8]);
  v45 = type metadata accessor for NoticePresenter(0);
  v46 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v44 = EnvironmentObject.init()(v45, v46);
  v44[1] = v47;
  v48 = a3 + v38[9];
  *(_QWORD *)v48 = sub_1008419B0;
  *(_QWORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 16) = 0;
  v49 = (_QWORD *)(a3 + v38[10]);
  v50 = type metadata accessor for NavigationPusher();
  v51 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v49 = EnvironmentObject.init()(v50, v51);
  v49[1] = v52;
  v53 = (_QWORD *)(a3 + v38[11]);
  v54 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v55 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v53 = EnvironmentObject.init()(v54, v55);
  v53[1] = v56;
  v57 = (_QWORD *)(a3 + v38[12]);
  v58 = type metadata accessor for TabSelectionManager(0);
  v59 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v57 = EnvironmentObject.init()(v58, v59);
  v57[1] = v60;
  v61 = a3 + v38[13];
  *(_QWORD *)v61 = swift_getKeyPath(&unk_100EB45A8);
  *(_QWORD *)(v61 + 8) = 0;
  *(_BYTE *)(v61 + 16) = 0;
  v62 = a3 + v38[14];
  *(_QWORD *)v62 = swift_getKeyPath(&unk_100EB4550);
  *(_QWORD *)(v62 + 8) = 0;
  *(_BYTE *)(v62 + 16) = 0;
  return sub_10005B748((uint64_t)v11, _s9ContainerO5ModelVMa);
}

uint64_t sub_10030597C(uint64_t a1)
{
  return sub_100305D74(a1, sub_100305278);
}

unint64_t sub_100305990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ABF48;
  if (!qword_1011ABF48)
  {
    v1 = sub_100044B54(&qword_1011ABF00);
    sub_100049F28(&qword_1011ABF50, &qword_1011ABF08, (uint64_t)&unk_100EC0C68);
    sub_100049F28(&qword_1011ABF58, &qword_1011ABF40, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ABF48);
  }
  return result;
}

uint64_t sub_100305A40()
{
  uint64_t v0;

  return sub_100305334(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100305A48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ABF78;
  if (!qword_1011ABF78)
  {
    v1 = sub_100044B54(&qword_1011ABF70);
    sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ABF78);
  }
  return result;
}

uint64_t sub_100305AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = _s11ContentViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v0 + v3 + 32), *(_QWORD *)(v0 + v3 + 40));
  v5 = v0 + v3 + *(int *)(v1 + 28);
  v6 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v5 + v8[5];
    v10 = type metadata accessor for Album(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = v5 + v8[6];
    v13 = type metadata accessor for Artist(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);
    v15 = v5 + v8[7];
    v16 = type metadata accessor for Composer(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v5 + v8[8];
    v19 = type metadata accessor for Genre(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v5 + v8[9];
    v22 = type metadata accessor for Playlist(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v5 + v8[10];
    v25 = type metadata accessor for TVShow(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v5 + v8[11];
    v28 = type metadata accessor for TVSeason(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(unint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v8[15] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v8[16]));
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100305D68(uint64_t a1)
{
  return sub_100305D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1003054F0);
}

uint64_t sub_100305D74(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s11ContentViewVMa(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t *sub_100305DD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v64;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    v9 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v64 = v9;
      v11 = (int *)type metadata accessor for Library.Context(0);
      v12 = v11[5];
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = type metadata accessor for Album(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
      v18 = swift_retain();
      if (v17(v14, 1, v15, v18))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v23 = v11[6];
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = type metadata accessor for Artist(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v29 = v11[7];
      v30 = (char *)v7 + v29;
      v31 = (char *)v8 + v29;
      v32 = type metadata accessor for Composer(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v35 = v11[8];
      v36 = (char *)v7 + v35;
      v37 = (char *)v8 + v35;
      v38 = type metadata accessor for Genre(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_100007E8C(&qword_10119ED08);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v41 = v11[9];
      v42 = (char *)v7 + v41;
      v43 = (char *)v8 + v41;
      v44 = type metadata accessor for Playlist(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v47 = v11[10];
      v48 = (char *)v7 + v47;
      v49 = (char *)v8 + v47;
      v50 = type metadata accessor for TVShow(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v53 = v11[11];
      v54 = (char *)v7 + v53;
      v55 = (char *)v8 + v53;
      v56 = type metadata accessor for TVSeason(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      *((_BYTE *)v7 + v11[12]) = *((_BYTE *)v8 + v11[12]);
      *((_BYTE *)v7 + v11[13]) = *((_BYTE *)v8 + v11[13]);
      *((_BYTE *)v7 + v11[14]) = *((_BYTE *)v8 + v11[14]);
      v59 = v11[15];
      v60 = (_QWORD *)((char *)v7 + v59);
      v61 = (_QWORD *)((char *)v8 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      *(_QWORD *)((char *)v7 + v11[16]) = *(_QWORD *)((char *)v8 + v11[16]);
      *((_BYTE *)v7 + v11[17]) = *((_BYTE *)v8 + v11[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = v7;
      v21 = v64;
      v22 = 1;
    }
    else
    {
      swift_retain();
      v20 = v7;
      v21 = v9;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return a1;
}

double sub_1003062C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C(&qword_10119F030);
  LODWORD(a1) = swift_getEnumCaseMultiPayload(v4, v5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if ((_DWORD)a1 == 1)
  {
    v7 = (int *)type metadata accessor for Library.Context(0);
    v8 = v4 + v7[5];
    v9 = type metadata accessor for Album(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v4 + v7[6];
    v12 = type metadata accessor for Artist(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v4 + v7[7];
    v15 = type metadata accessor for Composer(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v4 + v7[8];
    v18 = type metadata accessor for Genre(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    v20 = v4 + v7[9];
    v21 = type metadata accessor for Playlist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    v23 = v4 + v7[10];
    v24 = type metadata accessor for TVShow(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    v26 = v4 + v7[11];
    v27 = type metadata accessor for TVSeason(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + v7[15] + 8));
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + v7[16])).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100306528(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v61;

  v3 = a1;
  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_retain();
  v7 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  *v5 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    v61 = v3;
    v9 = v7;
    v10 = (int *)type metadata accessor for Library.Context(0);
    v11 = v10[5];
    v12 = (char *)v5 + v11;
    v13 = (char *)v6 + v11;
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v15 + 48);
    v17 = swift_retain();
    if (v16(v13, 1, v14, v17))
    {
      v18 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v20 = v10[6];
    v21 = (char *)v5 + v20;
    v22 = (char *)v6 + v20;
    v23 = type metadata accessor for Artist(0);
    v24 = *(_QWORD *)(v23 - 8);
    v7 = v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v3 = v61;
    v26 = v10[7];
    v27 = (char *)v5 + v26;
    v28 = (char *)v6 + v26;
    v29 = type metadata accessor for Composer(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v10[8];
    v33 = (char *)v5 + v32;
    v34 = (char *)v6 + v32;
    v35 = type metadata accessor for Genre(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C(&qword_10119ED08);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v38 = v10[9];
    v39 = (char *)v5 + v38;
    v40 = (char *)v6 + v38;
    v41 = type metadata accessor for Playlist(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = v10[10];
    v45 = (char *)v5 + v44;
    v46 = (char *)v6 + v44;
    v47 = type metadata accessor for TVShow(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    v50 = v10[11];
    v51 = (char *)v5 + v50;
    v52 = (char *)v6 + v50;
    v53 = type metadata accessor for TVSeason(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    *((_BYTE *)v5 + v10[12]) = *((_BYTE *)v6 + v10[12]);
    *((_BYTE *)v5 + v10[13]) = *((_BYTE *)v6 + v10[13]);
    *((_BYTE *)v5 + v10[14]) = *((_BYTE *)v6 + v10[14]);
    v56 = v10[15];
    v57 = (_QWORD *)((char *)v5 + v56);
    v58 = (_QWORD *)((char *)v6 + v56);
    v59 = v58[1];
    *v57 = *v58;
    v57[1] = v59;
    *(_QWORD *)((char *)v5 + v10[16]) = *(_QWORD *)((char *)v6 + v10[16]);
    *((_BYTE *)v5 + v10[17]) = *((_BYTE *)v6 + v10[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = 1;
  }
  else
  {
    swift_retain();
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v19);
  return v3;
}

_QWORD *sub_1003069F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v61;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, &qword_10119F030);
    v9 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v61 = v9;
      v11 = (int *)type metadata accessor for Library.Context(0);
      v12 = v11[5];
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = type metadata accessor for Album(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
      v18 = swift_retain();
      if (v17(v14, 1, v15, v18))
      {
        v19 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v21 = v11[6];
      v22 = (char *)v7 + v21;
      v23 = (char *)v8 + v21;
      v24 = type metadata accessor for Artist(0);
      v25 = *(_QWORD *)(v24 - 8);
      v9 = v61;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v27 = v11[7];
      v28 = (char *)v7 + v27;
      v29 = (char *)v8 + v27;
      v30 = type metadata accessor for Composer(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v33 = v11[8];
      v34 = (char *)v7 + v33;
      v35 = (char *)v8 + v33;
      v36 = type metadata accessor for Genre(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C(&qword_10119ED08);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v11[9];
      v40 = (char *)v7 + v39;
      v41 = (char *)v8 + v39;
      v42 = type metadata accessor for Playlist(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = v11[10];
      v46 = (char *)v7 + v45;
      v47 = (char *)v8 + v45;
      v48 = type metadata accessor for TVShow(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v51 = v11[11];
      v52 = (char *)v7 + v51;
      v53 = (char *)v8 + v51;
      v54 = type metadata accessor for TVSeason(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      *((_BYTE *)v7 + v11[12]) = *((_BYTE *)v8 + v11[12]);
      *((_BYTE *)v7 + v11[13]) = *((_BYTE *)v8 + v11[13]);
      *((_BYTE *)v7 + v11[14]) = *((_BYTE *)v8 + v11[14]);
      v57 = v11[15];
      v58 = (_QWORD *)((char *)v7 + v57);
      v59 = (_QWORD *)((char *)v8 + v57);
      *v58 = *v59;
      v58[1] = v59[1];
      *(_QWORD *)((char *)v7 + v11[16]) = *(_QWORD *)((char *)v8 + v11[16]);
      *((_BYTE *)v7 + v11[17]) = *((_BYTE *)v8 + v11[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = 1;
    }
    else
    {
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v20);
  }
  return a1;
}

_QWORD *sub_100306EE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    *v5 = *v6;
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v8[5];
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = v8[6];
    v16 = (char *)v5 + v15;
    v17 = (char *)v6 + v15;
    v18 = type metadata accessor for Artist(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = v8[7];
    v22 = (char *)v5 + v21;
    v23 = (char *)v6 + v21;
    v24 = type metadata accessor for Composer(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v27 = v8[8];
    v28 = (char *)v5 + v27;
    v29 = (char *)v6 + v27;
    v30 = type metadata accessor for Genre(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_10119ED08);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = v8[9];
    v34 = (char *)v5 + v33;
    v35 = (char *)v6 + v33;
    v36 = type metadata accessor for Playlist(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v39 = v8[10];
    v40 = (char *)v5 + v39;
    v41 = (char *)v6 + v39;
    v42 = type metadata accessor for TVShow(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v45 = v8[11];
    v46 = (char *)v5 + v45;
    v47 = (char *)v6 + v45;
    v48 = type metadata accessor for TVSeason(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    *((_BYTE *)v5 + v8[12]) = *((_BYTE *)v6 + v8[12]);
    *((_BYTE *)v5 + v8[13]) = *((_BYTE *)v6 + v8[13]);
    *((_BYTE *)v5 + v8[14]) = *((_BYTE *)v6 + v8[14]);
    *(_OWORD *)((char *)v5 + v8[15]) = *(_OWORD *)((char *)v6 + v8[15]);
    *(_QWORD *)((char *)v5 + v8[16]) = *(_QWORD *)((char *)v6 + v8[16]);
    *((_BYTE *)v5 + v8[17]) = *((_BYTE *)v6 + v8[17]);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10030737C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, &qword_10119F030);
    v9 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      *v7 = *v8;
      v10 = (int *)type metadata accessor for Library.Context(0);
      v11 = v10[5];
      v12 = (char *)v7 + v11;
      v13 = (char *)v8 + v11;
      v14 = type metadata accessor for Album(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v17 = v10[6];
      v18 = (char *)v7 + v17;
      v19 = (char *)v8 + v17;
      v20 = type metadata accessor for Artist(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v23 = v10[7];
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = type metadata accessor for Composer(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v29 = v10[8];
      v30 = (char *)v7 + v29;
      v31 = (char *)v8 + v29;
      v32 = type metadata accessor for Genre(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_100007E8C(&qword_10119ED08);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v35 = v10[9];
      v36 = (char *)v7 + v35;
      v37 = (char *)v8 + v35;
      v38 = type metadata accessor for Playlist(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v41 = v10[10];
      v42 = (char *)v7 + v41;
      v43 = (char *)v8 + v41;
      v44 = type metadata accessor for TVShow(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v47 = v10[11];
      v48 = (char *)v7 + v47;
      v49 = (char *)v8 + v47;
      v50 = type metadata accessor for TVSeason(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      *((_BYTE *)v7 + v10[12]) = *((_BYTE *)v8 + v10[12]);
      *((_BYTE *)v7 + v10[13]) = *((_BYTE *)v8 + v10[13]);
      *((_BYTE *)v7 + v10[14]) = *((_BYTE *)v8 + v10[14]);
      *(_OWORD *)((char *)v7 + v10[15]) = *(_OWORD *)((char *)v8 + v10[15]);
      *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)((char *)v8 + v10[16]);
      *((_BYTE *)v7 + v10[17]) = *((_BYTE *)v8 + v10[17]);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10030783C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100307848);
}

uint64_t sub_100307848(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1003078C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003078D4);
}

char *sub_1003078D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119EE98);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s16CompilationsViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011ABFE8, (uint64_t)&_s16CompilationsViewVMn);
}

void sub_100307960(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1002ABB08(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

unint64_t sub_1003079DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC020;
  if (!qword_1011AC020)
  {
    v1 = sub_100044B54(&qword_1011ABF20);
    sub_100307A60();
    sub_100049F28(&qword_1011AC038, &qword_1011ABF60, (uint64_t)&unk_100ED1EB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC020);
  }
  return result;
}

unint64_t sub_100307A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC028;
  if (!qword_1011AC028)
  {
    v1 = sub_100044B54(&qword_1011ABF18);
    sub_100307AE4();
    sub_100048748(&qword_10119F7E8, _s25SortFilterContentModifierVMa, (uint64_t)&unk_100ED0D00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC028);
  }
  return result;
}

unint64_t sub_100307AE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC030;
  if (!qword_1011AC030)
  {
    v1 = sub_100044B54(&qword_1011ABF10);
    sub_100305990();
    sub_100049F28(&qword_1011ABF50, &qword_1011ABF08, (uint64_t)&unk_100EC0C68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC030);
  }
  return result;
}

uint64_t sub_100307B68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C1E8, 1);
}

unint64_t sub_100307B7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC058;
  if (!qword_1011AC058)
  {
    v1 = sub_100044B54(&qword_1011AC060);
    sub_100048748(&qword_1011ABEF0, _s11ContentViewVMa, (uint64_t)&unk_100EB44B0);
    sub_100049F28(&qword_10119EF58, &qword_10119EF60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC058);
  }
  return result;
}

uint64_t *sub_100307C18(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void *v90;
  char v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  char *__dst;
  uint64_t *v150;
  unsigned int (*v151)(uint64_t *, uint64_t, uint64_t);
  uint64_t v152;
  int *v153;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v151 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v147 = v8;
    v148 = a3;
    v152 = v7;
    if (v151(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for Poster(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v11[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v11[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(uint64_t *)((char *)a1 + v11[9]) = *(uint64_t *)((char *)a2 + v11[9]);
    *(uint64_t *)((char *)a1 + v11[10]) = *(uint64_t *)((char *)a2 + v11[10]);
    v153 = v11;
    v28 = v11[11];
    __dst = (char *)a1 + v28;
    v150 = a2;
    v29 = (char *)a2 + v28;
    v30 = type metadata accessor for ArtworkImage.ViewModel(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = swift_retain();
    if (v32(v29, 1, v30, v33))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v35 = v153;
    }
    else
    {
      v36 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(__dst, v29, v36);
      v37 = *(int *)(v30 + 20);
      v38 = &__dst[v37];
      v39 = &v29[v37];
      v40 = type metadata accessor for Artwork.CropStyle(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v35 = v153;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    v43 = v35[12];
    v44 = (char *)a1 + v43;
    v45 = (char *)v150 + v43;
    v46 = type metadata accessor for MotionViewModel(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v44, v45, v49);
      v50 = *(int *)(v46 + 20);
      v51 = &v44[v50];
      v52 = &v45[v50];
      v53 = type metadata accessor for Artwork.CropStyle(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v56 = v35[13];
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)v150 + v56);
    v59 = type metadata accessor for Poster.Badge(0);
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = sub_100007E8C(&qword_1011AC090);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      v62 = v148;
    }
    else
    {
      v63 = sub_100007E8C(&qword_1011AC088);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v64 + 48))(v58, 1, v63))
      {
        memcpy(v57, v58, *(_QWORD *)(v60 + 64));
      }
      else
      {
        v146 = v64;
        v65 = v58[1];
        *v57 = *v58;
        v57[1] = v65;
        v66 = *(int *)(v63 + 48);
        v145 = (_QWORD *)((char *)v57 + v66);
        v67 = (_QWORD *)((char *)v58 + v66);
        v68 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
        {
          v69 = type metadata accessor for Material(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v145, v67, v69);
          v70 = 1;
        }
        else
        {
          *v145 = *v67;
          swift_retain();
          v70 = 0;
        }
        swift_storeEnumTagMultiPayload(v145, v68, v70);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v57, 0, 1, v63);
      }
      v62 = v148;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    *((_BYTE *)a1 + v35[14]) = *((_BYTE *)v150 + v35[14]);
    v71 = v35[15];
    v72 = (char *)a1 + v71;
    v73 = (char *)v150 + v71;
    v74 = *(void **)((char *)v150 + v71);
    *(uint64_t *)((char *)a1 + v71) = (uint64_t)v74;
    v75 = (int *)type metadata accessor for SegueContext(0);
    v76 = v75[5];
    v77 = &v72[v76];
    v78 = &v73[v76];
    v79 = v74;
    if (v151((uint64_t *)v78, 1, v152))
    {
      v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v77, v78, v152);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v77, 0, 1, v152);
    }
    v72[v75[6]] = v73[v75[6]];
    v81 = v75[7];
    v82 = &v72[v81];
    v83 = &v73[v81];
    if (*(_QWORD *)v83)
    {
      v84 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v84;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v82 = *(_OWORD *)v83;
    }
    v85 = v153[16];
    v86 = *(void **)((char *)v150 + v85);
    *(uint64_t *)((char *)a1 + v85) = (uint64_t)v86;
    v87 = v62[5];
    v88 = (char *)a1 + v87;
    v89 = (char *)v150 + v87;
    v90 = *(void **)v89;
    v91 = v89[8];
    v92 = v86;
    sub_1000A4100(v90, v91);
    *(_QWORD *)v88 = v90;
    v88[8] = v91;
    v93 = v62[6];
    v94 = v62[7];
    v95 = (uint64_t *)((char *)a1 + v93);
    v96 = (uint64_t *)((char *)v150 + v93);
    v97 = *v96;
    v98 = v96[1];
    *v95 = v97;
    v95[1] = v98;
    v99 = (uint64_t *)((char *)a1 + v94);
    v100 = (uint64_t *)((char *)v150 + v94);
    v102 = *v100;
    v101 = v100[1];
    *v99 = v102;
    v99[1] = v101;
    v103 = v62[8];
    v104 = (char *)a1 + v103;
    v105 = (char *)v150 + v103;
    v106 = *(_QWORD *)v105;
    v107 = *((_QWORD *)v105 + 1);
    v108 = v105[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v106, v107);
    *(_QWORD *)v104 = v106;
    *((_QWORD *)v104 + 1) = v107;
    v104[16] = v108;
    v109 = v62[9];
    v110 = v62[10];
    v111 = (uint64_t *)((char *)a1 + v109);
    v112 = (uint64_t *)((char *)v150 + v109);
    v113 = *v112;
    v114 = v112[1];
    *v111 = v113;
    v111[1] = v114;
    v115 = (uint64_t *)((char *)a1 + v110);
    v116 = (uint64_t *)((char *)v150 + v110);
    v118 = *v116;
    v117 = v116[1];
    *v115 = v118;
    v115[1] = v117;
    v119 = v62[11];
    v120 = v62[12];
    v121 = (uint64_t *)((char *)a1 + v119);
    v122 = (uint64_t *)((char *)v150 + v119);
    v124 = *v122;
    v123 = v122[1];
    *v121 = v124;
    v121[1] = v123;
    v125 = (char *)a1 + v120;
    v126 = *(uint64_t *)((char *)v150 + v120);
    v127 = *(uint64_t *)((char *)v150 + v120 + 8);
    LOBYTE(v104) = *((_BYTE *)v150 + v120 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v126, v127, (char)v104);
    *(_QWORD *)v125 = v126;
    *((_QWORD *)v125 + 1) = v127;
    v125[16] = (char)v104;
    v128 = v62[13];
    v129 = (char *)a1 + v128;
    v130 = (char *)v150 + v128;
    v131 = *(_QWORD *)v130;
    v132 = *((_QWORD *)v130 + 1);
    LOBYTE(v126) = v130[16];
    sub_1000A411C(*(_QWORD *)v130, v132, v126);
    *(_QWORD *)v129 = v131;
    *((_QWORD *)v129 + 1) = v132;
    v129[16] = v126;
    v133 = v62[14];
    v134 = (char *)a1 + v133;
    v135 = (char *)v150 + v133;
    v136 = *(_QWORD *)v135;
    v137 = *((_QWORD *)v135 + 1);
    v138 = *((_QWORD *)v135 + 2);
    v139 = *((_QWORD *)v135 + 3);
    LOBYTE(v104) = v135[32];
    sub_10006B410(*(_QWORD *)v135, v137, v138, v139, (char)v104);
    *(_QWORD *)v134 = v136;
    *((_QWORD *)v134 + 1) = v137;
    *((_QWORD *)v134 + 2) = v138;
    *((_QWORD *)v134 + 3) = v139;
    v134[32] = (char)v104;
    v140 = v62[15];
    v141 = (char *)a1 + v140;
    v142 = (char *)v150 + v140;
    v143 = sub_100007E8C(&qword_1011A70B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
  }
  return a1;
}

uint64_t type metadata accessor for Poster(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011AC2D0, (uint64_t)&nominal type descriptor for Poster);
}

uint64_t type metadata accessor for Poster.Badge(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011AC268, (uint64_t)&nominal type descriptor for Poster.Badge);
}

uint64_t type metadata accessor for Poster.CustomBadgeStyle(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC1C0, (uint64_t)&nominal type descriptor for Poster.CustomBadgeStyle);
}

uint64_t sub_100308414(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Poster(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[8] + 8));
  swift_release();
  v8 = a1 + v7[11];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[12];
  v15 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
    v17 = v14 + *(int *)(v15 + 20);
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = a1 + v7[13];
  v21 = type metadata accessor for Poster.Badge(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
  {
    v22 = sub_100007E8C(&qword_1011AC088);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v20, 1, v22))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v20 + 8));
      v23 = v20 + *(int *)(v22 + 48);
      v24 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
      {
        v25 = type metadata accessor for Material(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
      }
      else
      {
        swift_release();
      }
    }
  }
  v26 = (id *)(a1 + v7[15]);

  v27 = type metadata accessor for SegueContext(0);
  v28 = (char *)v26 + *(int *)(v27 + 20);
  if (!v6((uint64_t)v28, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
  if (*(id *)((char *)v26 + *(int *)(v27 + 28)))
    swift_release();

  sub_1000A4224(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[12]), *(_QWORD *)(a1 + a2[12] + 8), *(_BYTE *)(a1 + a2[12] + 16));
  sub_1000A4240(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  v29 = a1 + a2[14];
  sub_10006B61C(*(_QWORD *)v29, *(_QWORD *)(v29 + 8), *(_QWORD *)(v29 + 16), *(_QWORD *)(v29 + 24), *(_BYTE *)(v29 + 32));
  v30 = a1 + a2[15];
  v31 = sub_100007E8C(&qword_1011A70B8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
}

char *sub_1003087DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void *v88;
  char v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  char *__dst;
  char *v148;
  unsigned int (*v149)(char *, uint64_t, uint64_t);
  uint64_t v150;
  int *v151;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v149 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v145 = v7;
  v146 = a3;
  v150 = v6;
  if (v149(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Poster(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v18 = v9[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = v9[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  v151 = v9;
  v26 = v9[11];
  __dst = &a1[v26];
  v148 = a1;
  v27 = &a2[v26];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = swift_retain();
  if (v30(v27, 1, v28, v31))
  {
    v32 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    v33 = v151;
  }
  else
  {
    v34 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(__dst, v27, v34);
    v35 = *(int *)(v28 + 20);
    v36 = &__dst[v35];
    v37 = &v27[v35];
    v38 = type metadata accessor for Artwork.CropStyle(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v33 = v151;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
  }
  v41 = v33[12];
  v42 = &v148[v41];
  v43 = &a2[v41];
  v44 = type metadata accessor for MotionViewModel(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v42, v43, v47);
    v48 = *(int *)(v44 + 20);
    v49 = &v42[v48];
    v50 = &v43[v48];
    v51 = type metadata accessor for Artwork.CropStyle(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v54 = v33[13];
  v55 = &v148[v54];
  v56 = &a2[v54];
  v57 = type metadata accessor for Poster.Badge(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_100007E8C(&qword_1011AC090);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    v60 = v146;
  }
  else
  {
    v61 = sub_100007E8C(&qword_1011AC088);
    v62 = *(_QWORD *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v56, 1, v61))
    {
      memcpy(v55, v56, *(_QWORD *)(v58 + 64));
    }
    else
    {
      v144 = v62;
      v63 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v63;
      v64 = *(int *)(v61 + 48);
      v143 = &v55[v64];
      v65 = &v56[v64];
      v66 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v65, v66) == 1)
      {
        v67 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v143, v65, v67);
        v68 = 1;
      }
      else
      {
        *(_QWORD *)v143 = *(_QWORD *)v65;
        swift_retain();
        v68 = 0;
      }
      swift_storeEnumTagMultiPayload(v143, v66, v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v55, 0, 1, v61);
    }
    v60 = v146;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v148[v33[14]] = a2[v33[14]];
  v69 = v33[15];
  v70 = &v148[v69];
  v71 = &a2[v69];
  v72 = *(void **)&a2[v69];
  *(_QWORD *)&v148[v69] = v72;
  v73 = (int *)type metadata accessor for SegueContext(0);
  v74 = v73[5];
  v75 = &v70[v74];
  v76 = &v71[v74];
  v77 = v72;
  if (v149(v76, 1, v150))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v75, v76, v150);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v75, 0, 1, v150);
  }
  v70[v73[6]] = v71[v73[6]];
  v79 = v73[7];
  v80 = &v70[v79];
  v81 = &v71[v79];
  if (*(_QWORD *)v81)
  {
    v82 = *((_QWORD *)v81 + 1);
    *(_QWORD *)v80 = *(_QWORD *)v81;
    *((_QWORD *)v80 + 1) = v82;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v80 = *(_OWORD *)v81;
  }
  v83 = v151[16];
  v84 = *(void **)&a2[v83];
  *(_QWORD *)&v148[v83] = v84;
  v85 = v60[5];
  v86 = &v148[v85];
  v87 = &a2[v85];
  v88 = *(void **)v87;
  v89 = v87[8];
  v90 = v84;
  sub_1000A4100(v88, v89);
  *(_QWORD *)v86 = v88;
  v86[8] = v89;
  v91 = v60[6];
  v92 = v60[7];
  v93 = &v148[v91];
  v94 = &a2[v91];
  v95 = *(_QWORD *)v94;
  v96 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = v95;
  *((_QWORD *)v93 + 1) = v96;
  v97 = &v148[v92];
  v98 = &a2[v92];
  v100 = *(_QWORD *)v98;
  v99 = *((_QWORD *)v98 + 1);
  *(_QWORD *)v97 = v100;
  *((_QWORD *)v97 + 1) = v99;
  v101 = v60[8];
  v102 = &v148[v101];
  v103 = &a2[v101];
  v104 = *(_QWORD *)v103;
  v105 = *((_QWORD *)v103 + 1);
  v106 = v103[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v104, v105);
  *(_QWORD *)v102 = v104;
  *((_QWORD *)v102 + 1) = v105;
  v102[16] = v106;
  v107 = v60[9];
  v108 = v60[10];
  v109 = &v148[v107];
  v110 = &a2[v107];
  v111 = *(_QWORD *)v110;
  v112 = *((_QWORD *)v110 + 1);
  *(_QWORD *)v109 = v111;
  *((_QWORD *)v109 + 1) = v112;
  v113 = &v148[v108];
  v114 = &a2[v108];
  v116 = *(_QWORD *)v114;
  v115 = *((_QWORD *)v114 + 1);
  *(_QWORD *)v113 = v116;
  *((_QWORD *)v113 + 1) = v115;
  v117 = v60[11];
  v118 = v60[12];
  v119 = &v148[v117];
  v120 = &a2[v117];
  v122 = *(_QWORD *)v120;
  v121 = *((_QWORD *)v120 + 1);
  *(_QWORD *)v119 = v122;
  *((_QWORD *)v119 + 1) = v121;
  v123 = &v148[v118];
  v124 = *(_QWORD *)&a2[v118];
  v125 = *(_QWORD *)&a2[v118 + 8];
  LOBYTE(v102) = a2[v118 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v124, v125, (char)v102);
  *(_QWORD *)v123 = v124;
  *((_QWORD *)v123 + 1) = v125;
  v123[16] = (char)v102;
  v126 = v60[13];
  v127 = &v148[v126];
  v128 = &a2[v126];
  v129 = *(_QWORD *)v128;
  v130 = *((_QWORD *)v128 + 1);
  LOBYTE(v124) = v128[16];
  sub_1000A411C(*(_QWORD *)v128, v130, v124);
  *(_QWORD *)v127 = v129;
  *((_QWORD *)v127 + 1) = v130;
  v127[16] = v124;
  v131 = v60[14];
  v132 = &v148[v131];
  v133 = &a2[v131];
  v134 = *(_QWORD *)v133;
  v135 = *((_QWORD *)v133 + 1);
  v136 = *((_QWORD *)v133 + 2);
  v137 = *((_QWORD *)v133 + 3);
  LOBYTE(v102) = v133[32];
  sub_10006B410(*(_QWORD *)v133, v135, v136, v137, (char)v102);
  *(_QWORD *)v132 = v134;
  *((_QWORD *)v132 + 1) = v135;
  *((_QWORD *)v132 + 2) = v136;
  *((_QWORD *)v132 + 3) = v137;
  v132[32] = (char)v102;
  v138 = v60[15];
  v139 = &v148[v138];
  v140 = &a2[v138];
  v141 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v139, v140, v141);
  return v148;
}

char *sub_100308F70(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  size_t v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(void *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  size_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void **v112;
  char *v113;
  void *v114;
  void *v115;
  id v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  id v134;
  uint64_t v135;
  char *v136;
  char *v137;
  id v138;
  char v139;
  void *v140;
  char v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  int *v210;
  uint64_t (*v211)(char *, uint64_t, uint64_t);
  uint64_t v212;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v212 = v6;
  v10 = v8(a2, 1, v6);
  v210 = a3;
  v211 = v8;
  v208 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Poster(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = v12[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = v12[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = v12[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_retain();
  swift_release();
  v29 = v12[11];
  v30 = (uint64_t)&a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for ArtworkImage.ViewModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34((uint64_t)v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      v47 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v30, v31, v47);
      v48 = *(int *)(v32 + 20);
      v49 = (void *)(v30 + v48);
      v50 = &v31[v48];
      v51 = type metadata accessor for Artwork.CropStyle(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
      v54 = v53(v49, 1, v51);
      v55 = v53(v50, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 24))(v49, v50, v51);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
      }
      v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v45 = v49;
      v46 = v50;
LABEL_14:
      memcpy(v45, v46, v44);
      goto LABEL_21;
    }
    sub_10005B748(v30, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v45 = (void *)v30;
    v46 = v31;
    goto LABEL_14;
  }
  if (v36)
    goto LABEL_13;
  v37 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v30, v31, v37);
  v38 = *(int *)(v32 + 20);
  v39 = (void *)(v30 + v38);
  v40 = &v31[v38];
  v41 = type metadata accessor for Artwork.CropStyle(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_21:
  v56 = v12[12];
  v57 = (uint64_t)&a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for MotionViewModel(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 1, v59);
  v63 = v61((uint64_t)v58, 1, v59);
  if (!v62)
  {
    if (!v63)
    {
      v74 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v57, v58, v74);
      v75 = *(int *)(v59 + 20);
      v76 = (void *)(v57 + v75);
      v77 = &v58[v75];
      v78 = type metadata accessor for Artwork.CropStyle(0);
      v79 = *(_QWORD *)(v78 - 8);
      v80 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v79 + 48);
      v81 = v80(v76, 1, v78);
      v82 = v80(v77, 1, v78);
      if (v81)
      {
        if (!v82)
        {
          (*(void (**)(void *, char *, uint64_t))(v79 + 16))(v76, v77, v78);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v82)
        {
          (*(void (**)(void *, char *, uint64_t))(v79 + 24))(v76, v77, v78);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v79 + 8))(v76, v78);
      }
      v71 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v72 = v76;
      v73 = v77;
LABEL_28:
      memcpy(v72, v73, v71);
      goto LABEL_34;
    }
    sub_10005B748(v57, type metadata accessor for MotionViewModel);
LABEL_27:
    v71 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v72 = (void *)v57;
    v73 = v58;
    goto LABEL_28;
  }
  if (v63)
    goto LABEL_27;
  v64 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v57, v58, v64);
  v65 = *(int *)(v59 + 20);
  v66 = (void *)(v57 + v65);
  v67 = &v58[v65];
  v68 = type metadata accessor for Artwork.CropStyle(0);
  v69 = *(_QWORD *)(v68 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    v70 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
LABEL_34:
  v83 = v12[13];
  v84 = &a1[v83];
  v85 = &a2[v83];
  v86 = type metadata accessor for Poster.Badge(0);
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
  v89 = v88(v84, 1, v86);
  v90 = v88(v85, 1, v86);
  if (v89)
  {
    if (!v90)
    {
      v91 = sub_100007E8C(&qword_1011AC088);
      v92 = *(_QWORD *)(v91 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v85, 1, v91))
      {
        memcpy(v84, v85, *(_QWORD *)(v87 + 64));
      }
      else
      {
        v207 = v92;
        *(_QWORD *)v84 = *(_QWORD *)v85;
        *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
        v105 = *(int *)(v91 + 48);
        v209 = &v84[v105];
        v106 = &v85[v105];
        v107 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v106, v107) == 1)
        {
          v108 = type metadata accessor for Material(0);
          v109 = v209;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v209, v106, v108);
          v110 = 1;
        }
        else
        {
          v109 = v209;
          *(_QWORD *)v209 = *(_QWORD *)v106;
          swift_retain();
          v110 = 0;
        }
        swift_storeEnumTagMultiPayload(v109, v107, v110);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v84, 0, 1, v91);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v90)
  {
    sub_10005B748((uint64_t)v84, type metadata accessor for Poster.Badge);
LABEL_40:
    v93 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8) + 64);
LABEL_41:
    memcpy(v84, v85, v93);
    goto LABEL_60;
  }
  v94 = sub_100007E8C(&qword_1011AC088);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v84, 1, v94);
  v98 = v96(v85, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      *(_QWORD *)v84 = *(_QWORD *)v85;
      *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
      v99 = *(int *)(v94 + 48);
      v100 = &v84[v99];
      v101 = &v85[v99];
      v102 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v101, v102) == 1)
      {
        v103 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v100, v101, v103);
        v104 = 1;
      }
      else
      {
        *(_QWORD *)v100 = *(_QWORD *)v101;
        swift_retain();
        v104 = 0;
      }
      swift_storeEnumTagMultiPayload(v100, v102, v104);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v84, 0, 1, v94);
      goto LABEL_60;
    }
    goto LABEL_56;
  }
  if (v98)
  {
    sub_10004FF60((uint64_t)v84, &qword_1011AC088);
LABEL_56:
    v93 = *(_QWORD *)(v87 + 64);
    goto LABEL_41;
  }
  *(_QWORD *)v84 = *(_QWORD *)v85;
  v201 = *((_QWORD *)v84 + 1);
  *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v201);
  if (a1 != a2)
  {
    v202 = *(int *)(v94 + 48);
    v203 = &v84[v202];
    v204 = &v85[v202];
    sub_10005B748((uint64_t)v203, type metadata accessor for Poster.CustomBadgeStyle);
    v205 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v204, v205) == 1)
    {
      v206 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v203, v204, v206);
      swift_storeEnumTagMultiPayload(v203, v205, 1);
    }
    else
    {
      *(_QWORD *)v203 = *(_QWORD *)v204;
      swift_retain();
      swift_storeEnumTagMultiPayload(v203, v205, 0);
    }
  }
LABEL_60:
  a1[v12[14]] = a2[v12[14]];
  v111 = v12[15];
  v112 = (void **)&a1[v111];
  v113 = &a2[v111];
  v114 = *(void **)&a2[v111];
  v115 = *v112;
  *v112 = v114;
  v116 = v114;

  v117 = (int *)type metadata accessor for SegueContext(0);
  v118 = v117[5];
  v119 = (char *)v112 + v118;
  v120 = &v113[v118];
  v121 = v211((char *)v112 + v118, 1, v212);
  v122 = v211(v120, 1, v212);
  if (v121)
  {
    if (!v122)
    {
      (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v119, v120, v212);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v208 + 56))(v119, 0, 1, v212);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v122)
  {
    (*(void (**)(char *, uint64_t))(v208 + 8))(v119, v212);
LABEL_65:
    v123 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(v208 + 24))(v119, v120, v212);
LABEL_66:
  *((_BYTE *)v112 + v117[6]) = v113[v117[6]];
  v124 = v117[7];
  v125 = (void **)((char *)v112 + v124);
  v126 = &v113[v124];
  v127 = *(uint64_t *)((char *)v112 + v124);
  v128 = *(_QWORD *)&v113[v124];
  if (!v127)
  {
    if (v128)
    {
      v130 = *((_QWORD *)v126 + 1);
      *v125 = v128;
      v125[1] = v130;
      swift_retain();
      goto LABEL_73;
    }
LABEL_72:
    *(_OWORD *)v125 = *(_OWORD *)v126;
    goto LABEL_73;
  }
  if (!v128)
  {
    swift_release();
    goto LABEL_72;
  }
  v129 = *((_QWORD *)v126 + 1);
  *v125 = v128;
  v125[1] = v129;
  swift_retain();
  swift_release();
LABEL_73:
  v131 = v12[16];
  v132 = *(void **)&a1[v131];
  v133 = *(void **)&a2[v131];
  *(_QWORD *)&a1[v131] = v133;
  v134 = v133;

  v135 = v210[5];
  v136 = &a1[v135];
  v137 = &a2[v135];
  v138 = *(id *)v137;
  v139 = v137[8];
  sub_1000A4100(*(id *)v137, v139);
  v140 = *(void **)v136;
  v141 = v136[8];
  *(_QWORD *)v136 = v138;
  v136[8] = v139;
  sub_1000A4224(v140, v141);
  v142 = v210[6];
  v143 = &a1[v142];
  v144 = &a2[v142];
  *(_QWORD *)&a1[v142] = *(_QWORD *)&a2[v142];
  swift_retain();
  swift_release();
  *((_QWORD *)v143 + 1) = *((_QWORD *)v144 + 1);
  v145 = v210[7];
  v146 = &a1[v145];
  v147 = &a2[v145];
  *(_QWORD *)&a1[v145] = *(_QWORD *)&a2[v145];
  swift_retain();
  swift_release();
  *((_QWORD *)v146 + 1) = *((_QWORD *)v147 + 1);
  v148 = v210[8];
  v149 = &a1[v148];
  v150 = &a2[v148];
  v151 = *(_QWORD *)v150;
  v152 = *((_QWORD *)v150 + 1);
  v153 = v150[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v150, v152);
  v154 = *(_QWORD *)v149;
  v155 = *((_QWORD *)v149 + 1);
  *(_QWORD *)v149 = v151;
  *((_QWORD *)v149 + 1) = v152;
  v149[16] = v153;
  sub_1000A6174(v154, v155);
  v156 = v210[9];
  v157 = &a1[v156];
  v158 = &a2[v156];
  *(_QWORD *)&a1[v156] = *(_QWORD *)&a2[v156];
  swift_retain();
  swift_release();
  *((_QWORD *)v157 + 1) = *((_QWORD *)v158 + 1);
  v159 = v210[10];
  v160 = &a1[v159];
  v161 = &a2[v159];
  *(_QWORD *)&a1[v159] = *(_QWORD *)&a2[v159];
  swift_retain();
  swift_release();
  *((_QWORD *)v160 + 1) = *((_QWORD *)v161 + 1);
  v162 = v210[11];
  v163 = &a1[v162];
  v164 = &a2[v162];
  *(_QWORD *)&a1[v162] = *(_QWORD *)&a2[v162];
  swift_retain();
  swift_release();
  *((_QWORD *)v163 + 1) = *((_QWORD *)v164 + 1);
  v165 = v210[12];
  v166 = &a1[v165];
  v167 = &a2[v165];
  v168 = *(_QWORD *)v167;
  v169 = *((_QWORD *)v167 + 1);
  v170 = v167[16];
  sub_1000A410C(*(_QWORD *)v167, v169, v170);
  v171 = *(_QWORD *)v166;
  v172 = *((_QWORD *)v166 + 1);
  v173 = v166[16];
  *(_QWORD *)v166 = v168;
  *((_QWORD *)v166 + 1) = v169;
  v166[16] = v170;
  sub_1000A4230(v171, v172, v173);
  v174 = v210[13];
  v175 = &a1[v174];
  v176 = &a2[v174];
  v177 = *(_QWORD *)v176;
  v178 = *((_QWORD *)v176 + 1);
  v179 = v176[16];
  sub_1000A411C(*(_QWORD *)v176, v178, v179);
  v180 = *(_QWORD *)v175;
  v181 = *((_QWORD *)v175 + 1);
  v182 = v175[16];
  *(_QWORD *)v175 = v177;
  *((_QWORD *)v175 + 1) = v178;
  v175[16] = v179;
  sub_1000A4240(v180, v181, v182);
  v183 = v210[14];
  v184 = &a1[v183];
  v185 = &a2[v183];
  v186 = *(_QWORD *)v185;
  v187 = *((_QWORD *)v185 + 1);
  v188 = *((_QWORD *)v185 + 2);
  v189 = *((_QWORD *)v185 + 3);
  v190 = v185[32];
  sub_10006B410(*(_QWORD *)v185, v187, v188, v189, v190);
  v191 = *(_QWORD *)v184;
  v192 = *((_QWORD *)v184 + 1);
  v193 = *((_QWORD *)v184 + 2);
  v194 = *((_QWORD *)v184 + 3);
  v195 = v184[32];
  *(_QWORD *)v184 = v186;
  *((_QWORD *)v184 + 1) = v187;
  *((_QWORD *)v184 + 2) = v188;
  *((_QWORD *)v184 + 3) = v189;
  v184[32] = v190;
  sub_10006B61C(v191, v192, v193, v194, v195);
  v196 = v210[15];
  v197 = &a1[v196];
  v198 = &a2[v196];
  v199 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 24))(v197, v198, v199);
  return a1;
}

char *sub_100309CB4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  const void *v85;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v89 = v7;
  if (v90(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Poster(0);
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  v10 = v9[11];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v91 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    __dst = &v11[v17];
    v18 = &v12[v17];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for MotionViewModel(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v23, v24, v28);
    v29 = *(int *)(v25 + 20);
    __dsta = &v23[v29];
    v30 = &v24[v29];
    v31 = type metadata accessor for Artwork.CropStyle(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dsta, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dsta, 0, 1, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v34 = v9[13];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for Poster.Badge(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C(&qword_1011AC090);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = sub_100007E8C(&qword_1011AC088);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v36, 1, v40))
    {
      memcpy(v35, v36, *(_QWORD *)(v38 + 64));
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      v42 = *(int *)(v40 + 48);
      __dstb = &v35[v42];
      v43 = &v36[v42];
      v44 = type metadata accessor for Poster.CustomBadgeStyle(0);
      v85 = v43;
      v45 = v43;
      v46 = v44;
      if (swift_getEnumCaseMultiPayload(v45, v44) == 1)
      {
        v47 = type metadata accessor for Material(0);
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(__dstb, v85, v47);
        swift_storeEnumTagMultiPayload(__dstb, v46, 1);
      }
      else
      {
        memcpy(__dstb, v85, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v40);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  a1[v9[14]] = a2[v9[14]];
  v48 = v9[15];
  v49 = &a1[v48];
  v50 = &a2[v48];
  *(_QWORD *)&a1[v48] = *(_QWORD *)&a2[v48];
  v51 = (int *)type metadata accessor for SegueContext(0);
  v52 = v51[5];
  v53 = &v49[v52];
  v54 = &v50[v52];
  if (v90(&v50[v52], 1, v91))
  {
    v55 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v53, v54, v91);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v53, 0, 1, v91);
  }
  v49[v51[6]] = v50[v51[6]];
  v56 = v51[7];
  v57 = &v49[v56];
  v58 = &v50[v56];
  v59 = *(_QWORD *)v58;
  if (*(_QWORD *)v58)
  {
    v60 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = v59;
    *((_QWORD *)v57 + 1) = v60;
  }
  else
  {
    *(_OWORD *)v57 = *(_OWORD *)v58;
  }
  *(_QWORD *)&a1[v9[16]] = *(_QWORD *)&a2[v9[16]];
  v61 = a3[5];
  v62 = a3[6];
  v63 = &a1[v61];
  v64 = &a2[v61];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  v63[8] = v64[8];
  *(_OWORD *)&a1[v62] = *(_OWORD *)&a2[v62];
  v65 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v66 = &a1[v65];
  v67 = &a2[v65];
  *(_OWORD *)v66 = *(_OWORD *)v67;
  v66[16] = v67[16];
  v68 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v68] = *(_OWORD *)&a2[v68];
  v69 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v70 = &a1[v69];
  v71 = &a2[v69];
  v70[16] = v71[16];
  *(_OWORD *)v70 = *(_OWORD *)v71;
  v72 = a3[13];
  v73 = a3[14];
  v74 = &a1[v72];
  v75 = &a2[v72];
  v74[16] = v75[16];
  *(_OWORD *)v74 = *(_OWORD *)v75;
  v76 = &a1[v73];
  v77 = &a2[v73];
  v76[32] = v77[32];
  v79 = *(_OWORD *)v77;
  v78 = *((_OWORD *)v77 + 1);
  v80 = a3[15];
  v81 = &a1[v80];
  v82 = &a2[v80];
  *(_OWORD *)v76 = v79;
  *((_OWORD *)v76 + 1) = v78;
  v83 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
  return a1;
}

char *sub_10030A324(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  size_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  size_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void *v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  char v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  __int128 v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *__dst;
  uint64_t v199;
  int *v200;
  uint64_t (*v201)(char *, uint64_t, uint64_t);
  uint64_t v202;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v202 = v6;
  v10 = v8(a2, 1, v6);
  v200 = a3;
  v201 = v8;
  v199 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Poster(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease(v30);
  v31 = v12[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  v36 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_release();
  v37 = v12[11];
  v38 = (uint64_t)&a1[v37];
  v39 = &a2[v37];
  v40 = type metadata accessor for ArtworkImage.ViewModel(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42((uint64_t)v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      v55 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v38, v39, v55);
      v56 = *(int *)(v40 + 20);
      v57 = (void *)(v38 + v56);
      v58 = &v39[v56];
      v59 = type metadata accessor for Artwork.CropStyle(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v57, 1, v59);
      v63 = v61(v58, 1, v59);
      if (v62)
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 40))(v57, v58, v59);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v60 + 8))(v57, v59);
      }
      v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v53 = v57;
      v54 = v58;
LABEL_14:
      memcpy(v53, v54, v52);
      goto LABEL_21;
    }
    sub_10005B748(v38, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v53 = (void *)v38;
    v54 = v39;
    goto LABEL_14;
  }
  if (v44)
    goto LABEL_13;
  v45 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v38, v39, v45);
  v46 = *(int *)(v40 + 20);
  v47 = (void *)(v38 + v46);
  v48 = &v39[v46];
  v49 = type metadata accessor for Artwork.CropStyle(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_21:
  v64 = v12[12];
  v65 = (uint64_t)&a1[v64];
  v66 = &a2[v64];
  v67 = type metadata accessor for MotionViewModel(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69((uint64_t)v66, 1, v67);
  if (!v70)
  {
    if (!v71)
    {
      v82 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v65, v66, v82);
      v83 = *(int *)(v67 + 20);
      v84 = (void *)(v65 + v83);
      v85 = &v66[v83];
      v86 = type metadata accessor for Artwork.CropStyle(0);
      v87 = *(_QWORD *)(v86 - 8);
      v88 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v87 + 48);
      v89 = v88(v84, 1, v86);
      v90 = v88(v85, 1, v86);
      if (v89)
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 40))(v84, v85, v86);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v87 + 8))(v84, v86);
      }
      v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v80 = v84;
      v81 = v85;
LABEL_28:
      memcpy(v80, v81, v79);
      goto LABEL_34;
    }
    sub_10005B748(v65, type metadata accessor for MotionViewModel);
LABEL_27:
    v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v80 = (void *)v65;
    v81 = v66;
    goto LABEL_28;
  }
  if (v71)
    goto LABEL_27;
  v72 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v65, v66, v72);
  v73 = *(int *)(v67 + 20);
  v74 = (void *)(v65 + v73);
  v75 = &v66[v73];
  v76 = type metadata accessor for Artwork.CropStyle(0);
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_34:
  v91 = v12[13];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v94 = type metadata accessor for Poster.Badge(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      v99 = sub_100007E8C(&qword_1011AC088);
      v100 = *(_QWORD *)(v99 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v93, 1, v99))
      {
        memcpy(v92, v93, *(_QWORD *)(v95 + 64));
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      }
      else
      {
        *(_OWORD *)v92 = *(_OWORD *)v93;
        v113 = *(int *)(v99 + 48);
        __dst = &v92[v113];
        v114 = &v93[v113];
        v115 = type metadata accessor for Poster.CustomBadgeStyle(0);
        if (swift_getEnumCaseMultiPayload(v114, v115) == 1)
        {
          v116 = type metadata accessor for Material(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(__dst, v114, v116);
          swift_storeEnumTagMultiPayload(__dst, v115, 1);
        }
        else
        {
          memcpy(__dst, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v92, 0, 1, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      }
      goto LABEL_67;
    }
    goto LABEL_40;
  }
  if (v98)
  {
    sub_10005B748((uint64_t)v92, type metadata accessor for Poster.Badge);
LABEL_40:
    v101 = *(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8);
LABEL_41:
    v102 = *(_QWORD *)(v101 + 64);
LABEL_42:
    memcpy(v92, v93, v102);
    goto LABEL_67;
  }
  v103 = sub_100007E8C(&qword_1011AC088);
  v104 = *(_QWORD *)(v103 - 8);
  v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
  v106 = v105(v92, 1, v103);
  v107 = v105(v93, 1, v103);
  if (!v106)
  {
    if (!v107)
    {
      v117 = *((_QWORD *)v93 + 1);
      v118 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = v117;
      swift_bridgeObjectRelease(v118);
      if (a1 == a2)
        goto LABEL_67;
      v119 = *(int *)(v103 + 48);
      v92 += v119;
      v93 += v119;
      sub_10005B748((uint64_t)v92, type metadata accessor for Poster.CustomBadgeStyle);
      v120 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(v93, v120) == 1)
      {
        v121 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v92, v93, v121);
        swift_storeEnumTagMultiPayload(v92, v120, 1);
        goto LABEL_67;
      }
      v101 = *(_QWORD *)(v120 - 8);
      goto LABEL_41;
    }
    sub_10004FF60((uint64_t)v92, &qword_1011AC088);
LABEL_57:
    v102 = *(_QWORD *)(v95 + 64);
    goto LABEL_42;
  }
  if (v107)
    goto LABEL_57;
  *(_OWORD *)v92 = *(_OWORD *)v93;
  v108 = *(int *)(v103 + 48);
  v109 = &v92[v108];
  v110 = &v93[v108];
  v111 = type metadata accessor for Poster.CustomBadgeStyle(0);
  if (swift_getEnumCaseMultiPayload(v110, v111) == 1)
  {
    v112 = type metadata accessor for Material(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v109, v110, v112);
    swift_storeEnumTagMultiPayload(v109, v111, 1);
  }
  else
  {
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v92, 0, 1, v103);
LABEL_67:
  a1[v12[14]] = a2[v12[14]];
  v122 = v12[15];
  v123 = &a1[v122];
  v124 = &a2[v122];
  v125 = *(void **)&a1[v122];
  *(_QWORD *)&a1[v122] = *(_QWORD *)&a2[v122];

  v126 = (int *)type metadata accessor for SegueContext(0);
  v127 = v126[5];
  v128 = &v123[v127];
  v129 = &v124[v127];
  v130 = v201(&v123[v127], 1, v202);
  v131 = v201(v129, 1, v202);
  if (v130)
  {
    if (!v131)
    {
      (*(void (**)(char *, char *, uint64_t))(v199 + 32))(v128, v129, v202);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v128, 0, 1, v202);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v131)
  {
    (*(void (**)(char *, uint64_t))(v199 + 8))(v128, v202);
LABEL_72:
    v132 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v199 + 40))(v128, v129, v202);
LABEL_73:
  v123[v126[6]] = v124[v126[6]];
  v133 = v126[7];
  v134 = &v123[v133];
  v135 = &v124[v133];
  v136 = *(_QWORD *)&v123[v133];
  v137 = *(_QWORD *)v135;
  if (!v136)
  {
    if (v137)
    {
      v139 = *((_QWORD *)v135 + 1);
      *(_QWORD *)v134 = v137;
      *((_QWORD *)v134 + 1) = v139;
      goto LABEL_80;
    }
LABEL_79:
    *(_OWORD *)v134 = *(_OWORD *)v135;
    goto LABEL_80;
  }
  if (!v137)
  {
    swift_release();
    goto LABEL_79;
  }
  v138 = *((_QWORD *)v135 + 1);
  *(_QWORD *)v134 = v137;
  *((_QWORD *)v134 + 1) = v138;
  swift_release();
LABEL_80:
  v140 = v12[16];
  v141 = *(void **)&a1[v140];
  *(_QWORD *)&a1[v140] = *(_QWORD *)&a2[v140];

  v142 = v200[5];
  v143 = &a1[v142];
  v144 = &a2[v142];
  v145 = *(_QWORD *)v144;
  LOBYTE(v144) = v144[8];
  v146 = *(void **)v143;
  v147 = v143[8];
  *(_QWORD *)v143 = v145;
  v143[8] = (char)v144;
  sub_1000A4224(v146, v147);
  v148 = v200[6];
  v149 = &a1[v148];
  v150 = &a2[v148];
  *(_QWORD *)&a1[v148] = *(_QWORD *)&a2[v148];
  swift_release();
  *((_QWORD *)v149 + 1) = *((_QWORD *)v150 + 1);
  v151 = v200[7];
  v152 = &a1[v151];
  v153 = &a2[v151];
  *(_QWORD *)&a1[v151] = *(_QWORD *)&a2[v151];
  swift_release();
  *((_QWORD *)v152 + 1) = *((_QWORD *)v153 + 1);
  v154 = v200[8];
  v155 = &a1[v154];
  v156 = &a2[v154];
  v157 = v156[16];
  v158 = *(_QWORD *)v155;
  v159 = *((_QWORD *)v155 + 1);
  *(_OWORD *)v155 = *(_OWORD *)v156;
  v155[16] = v157;
  sub_1000A6174(v158, v159);
  v160 = v200[9];
  v161 = &a1[v160];
  v162 = &a2[v160];
  *(_QWORD *)&a1[v160] = *(_QWORD *)&a2[v160];
  swift_release();
  *((_QWORD *)v161 + 1) = *((_QWORD *)v162 + 1);
  v163 = v200[10];
  v164 = &a1[v163];
  v165 = &a2[v163];
  *(_QWORD *)&a1[v163] = *(_QWORD *)&a2[v163];
  swift_release();
  *((_QWORD *)v164 + 1) = *((_QWORD *)v165 + 1);
  v166 = v200[11];
  v167 = &a1[v166];
  v168 = &a2[v166];
  *(_QWORD *)&a1[v166] = *(_QWORD *)&a2[v166];
  swift_release();
  *((_QWORD *)v167 + 1) = *((_QWORD *)v168 + 1);
  v169 = v200[12];
  v170 = &a1[v169];
  v171 = &a2[v169];
  v172 = v171[16];
  v173 = *(_QWORD *)v170;
  v174 = *((_QWORD *)v170 + 1);
  v175 = v170[16];
  *(_OWORD *)v170 = *(_OWORD *)v171;
  v170[16] = v172;
  sub_1000A4230(v173, v174, v175);
  v176 = v200[13];
  v177 = &a1[v176];
  v178 = &a2[v176];
  v179 = v178[16];
  v180 = *(_QWORD *)v177;
  v181 = *((_QWORD *)v177 + 1);
  v182 = v177[16];
  *(_OWORD *)v177 = *(_OWORD *)v178;
  v177[16] = v179;
  sub_1000A4240(v180, v181, v182);
  v183 = v200[14];
  v184 = &a1[v183];
  v185 = &a2[v183];
  v186 = v185[32];
  v187 = *(_QWORD *)v184;
  v188 = *((_QWORD *)v184 + 1);
  v189 = *((_QWORD *)v184 + 2);
  v190 = *((_QWORD *)v184 + 3);
  v191 = v184[32];
  v192 = *((_OWORD *)v185 + 1);
  *(_OWORD *)v184 = *(_OWORD *)v185;
  *((_OWORD *)v184 + 1) = v192;
  v184[32] = v186;
  sub_10006B61C(v187, v188, v189, v190, v191);
  v193 = v200[15];
  v194 = &a1[v193];
  v195 = &a2[v193];
  v196 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 40))(v194, v195, v196);
  return a1;
}

uint64_t sub_10030AF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10030AF4C);
}

uint64_t sub_10030AF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for Poster(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C(&qword_1011A70B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 60), a2, v11);
  }
}

uint64_t sub_10030B004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030B010);
}

uint64_t sub_10030B010(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Poster(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    v10 = sub_100007E8C(&qword_1011A70B8);
    v12 = a1 + *(int *)(a4 + 60);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for PosterView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC0F0, (uint64_t)&nominal type descriptor for PosterView);
}

void sub_10030B0CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v2 = type metadata accessor for Poster(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\t";
    v6[2] = &unk_100EB46A8;
    v6[3] = &unk_100EB46A8;
    v6[4] = &unk_100EB46C0;
    v6[5] = &unk_100EB46A8;
    v6[6] = &unk_100EB46A8;
    v6[7] = &unk_100EB46A8;
    v6[8] = &unk_100EB46C0;
    v6[9] = &unk_100EB46C0;
    v6[10] = &unk_100EB46D8;
    sub_100201578(319);
    if (v5 <= 0x3F)
    {
      v6[11] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 12, v6, a1 + 16);
    }
  }
}

uint64_t *sub_10030B184(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for Material(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10030B240(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_release(*a1);
  v3 = type metadata accessor for Material(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t *sub_10030B290(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Material(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    swift_retain(v10);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_10030B320(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for Poster.CustomBadgeStyle);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Material(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_10030B3C8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Material(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10030B454(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for Poster.CustomBadgeStyle);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Material(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10030B4F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Material(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t *sub_10030B56C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011AC088);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = *(int *)(v7 + 48);
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (uint64_t *)((char *)a2 + v11);
      v14 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
      {
        v15 = type metadata accessor for Material(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
        v16 = 1;
      }
      else
      {
        *v12 = *v13;
        swift_retain();
        v16 = 0;
      }
      swift_storeEnumTagMultiPayload(v12, v14, v16);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

double sub_10030B6AC(uint64_t a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_100007E8C(&qword_1011AC088);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v4 = a1 + *(int *)(v2 + 48);
    v5 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
    {
      v6 = type metadata accessor for Material(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

_QWORD *sub_10030B754(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_100007E8C(&qword_1011AC088);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *(int *)(v6 + 48);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Poster.CustomBadgeStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for Material(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_10030B870(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_100007E8C(&qword_1011AC088);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v11 = *(int *)(v6 + 48);
      v12 = (_QWORD *)((char *)a1 + v11);
      v13 = (_QWORD *)((char *)a2 + v11);
      v14 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
      {
        v15 = type metadata accessor for Material(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
        v16 = 1;
      }
      else
      {
        *v12 = *v13;
        swift_retain();
        v16 = 0;
      }
      swift_storeEnumTagMultiPayload(v12, v14, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011AC088);
    goto LABEL_7;
  }
  *a1 = *a2;
  v17 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v17);
  if (a1 != a2)
  {
    v18 = *(int *)(v6 + 48);
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_10005B748((uint64_t)a1 + v18, type metadata accessor for Poster.CustomBadgeStyle);
    v21 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for Material(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      swift_storeEnumTagMultiPayload(v19, v21, 0);
    }
  }
  return a1;
}

_OWORD *sub_10030BA78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_100007E8C(&qword_1011AC088);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_10030BB88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_100007E8C(&qword_1011AC088);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v18 = *((_QWORD *)a2 + 1);
      v19 = *((_QWORD *)a1 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v18;
      swift_bridgeObjectRelease(v19);
      if (a1 == a2)
        return a1;
      v20 = *(int *)(v6 + 48);
      v21 = &a1[v20];
      a2 += v20;
      sub_10005B748((uint64_t)&a1[v20], type metadata accessor for Poster.CustomBadgeStyle);
      v22 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(a2, v22) == 1)
      {
        v23 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, a2, v23);
        swift_storeEnumTagMultiPayload(v21, v22, 1);
        return a1;
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64);
      v17 = v21;
      goto LABEL_8;
    }
    sub_10004FF60((uint64_t)a1, &qword_1011AC088);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v17 = a1;
LABEL_8:
    memcpy(v17, a2, v16);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(int *)(v6 + 48);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for Poster.CustomBadgeStyle(0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for Material(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10030BD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10030BD70);
}

uint64_t sub_10030BD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100007E8C(&qword_1011AC088);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_10030BDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030BDCC);
}

uint64_t sub_10030BDCC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_100007E8C(&qword_1011AC088);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10030BE20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011AC088);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_10030BE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011AC088);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_10030BEA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];

  result = type metadata accessor for Poster.CustomBadgeStyle(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, &unk_100EB46A8, *(_QWORD *)(result - 8) + 64);
    swift_initEnumMetadataSinglePayload(a1, 256, v4, 1);
    return 0;
  }
  return result;
}

uint64_t *sub_10030BF10(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  int *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void *v75;
  int *v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  _QWORD *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  char *__dst;
  unsigned int (*v95)(uint64_t *, uint64_t, uint64_t);
  uint64_t v96;
  int *v97;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v95 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v96 = v7;
    v91 = v8;
    if (v95(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[7];
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (uint64_t *)((char *)a1 + v20);
    v25 = (uint64_t *)((char *)a2 + v20);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v27) = *(uint64_t *)((char *)a2 + v27);
    v97 = a3;
    v28 = a3[11];
    v92 = a2;
    __dst = (char *)a1 + v28;
    v29 = (char *)a2 + v28;
    v30 = type metadata accessor for ArtworkImage.ViewModel(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = swift_retain();
    if (v32(v29, 1, v30, v33))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v35 = v97;
      v36 = v92;
    }
    else
    {
      v37 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(__dst, v29, v37);
      v38 = *(int *)(v30 + 20);
      v39 = &__dst[v38];
      v40 = &v29[v38];
      v41 = type metadata accessor for Artwork.CropStyle(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v35 = v97;
      v44 = v31;
      v36 = v92;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v30);
    }
    v45 = v35[12];
    v46 = (char *)a1 + v45;
    v47 = (char *)v36 + v45;
    v48 = type metadata accessor for MotionViewModel(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      v51 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v46, v47, v51);
      v52 = *(int *)(v48 + 20);
      v53 = &v46[v52];
      v54 = &v47[v52];
      v55 = type metadata accessor for Artwork.CropStyle(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v58 = v35[13];
    v59 = (uint64_t *)((char *)a1 + v58);
    v60 = (uint64_t *)((char *)v36 + v58);
    v61 = type metadata accessor for Poster.Badge(0);
    v62 = *(_QWORD *)(v61 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
    {
      v63 = sub_100007E8C(&qword_1011AC090);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      v64 = sub_100007E8C(&qword_1011AC088);
      v65 = *(_QWORD *)(v64 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v65 + 48))(v60, 1, v64))
      {
        memcpy(v59, v60, *(_QWORD *)(v62 + 64));
      }
      else
      {
        v93 = v65;
        v66 = v60[1];
        *v59 = *v60;
        v59[1] = v66;
        v67 = *(int *)(v64 + 48);
        v90 = (_QWORD *)((char *)v59 + v67);
        v68 = (_QWORD *)((char *)v60 + v67);
        v69 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v68, v69) == 1)
        {
          v70 = type metadata accessor for Material(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v90, v68, v70);
          v71 = 1;
        }
        else
        {
          *v90 = *v68;
          swift_retain();
          v71 = 0;
        }
        swift_storeEnumTagMultiPayload(v90, v69, v71);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v59, 0, 1, v64);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
    }
    v72 = v35[15];
    *((_BYTE *)a1 + v35[14]) = *((_BYTE *)v36 + v35[14]);
    v73 = (char *)a1 + v72;
    v74 = (uint64_t)v36 + v72;
    v75 = *(void **)((char *)v36 + v72);
    *(uint64_t *)((char *)a1 + v72) = (uint64_t)v75;
    v76 = (int *)type metadata accessor for SegueContext(0);
    v77 = v76[5];
    v78 = &v73[v77];
    v79 = (_QWORD *)(v74 + v77);
    v80 = v75;
    if (v95(v79, 1, v96))
    {
      v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v91 + 16))(v78, v79, v96);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v78, 0, 1, v96);
    }
    v73[v76[6]] = *(_BYTE *)(v74 + v76[6]);
    v82 = v76[7];
    v83 = &v73[v82];
    v84 = (_QWORD *)(v74 + v82);
    if (*v84)
    {
      v85 = v84[1];
      *(_QWORD *)v83 = *v84;
      *((_QWORD *)v83 + 1) = v85;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v83 = *(_OWORD *)v84;
    }
    v86 = v97[16];
    v87 = *(void **)((char *)v36 + v86);
    *(uint64_t *)((char *)a1 + v86) = (uint64_t)v87;
    v88 = v87;
  }
  return a1;
}

void sub_10030C528(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  char *v27;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_release();
  v7 = a1 + a2[11];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = a1 + a2[12];
  v14 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    v16 = v13 + *(int *)(v14 + 20);
    v17 = type metadata accessor for Artwork.CropStyle(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  v19 = a1 + a2[13];
  v20 = type metadata accessor for Poster.Badge(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
  {
    v21 = sub_100007E8C(&qword_1011AC088);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v19, 1, v21))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8));
      v22 = v19 + *(int *)(v21 + 48);
      v23 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
      {
        v24 = type metadata accessor for Material(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
      }
      else
      {
        swift_release();
      }
    }
  }
  v25 = (id *)(a1 + a2[15]);

  v26 = type metadata accessor for SegueContext(0);
  v27 = (char *)v25 + *(int *)(v26 + 20);
  if (!v6((uint64_t)v27, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v27, v4);
  if (*(id *)((char *)v25 + *(int *)(v26 + 28)))
    swift_release();

}

char *sub_10030C810(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  int *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  int *v96;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v95 = v6;
  v91 = v7;
  if (v94(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  v96 = a3;
  v26 = a3[11];
  v92 = a1;
  v93 = a2;
  v27 = &a1[v26];
  v28 = &v93[v26];
  v29 = type metadata accessor for ArtworkImage.ViewModel(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = swift_retain();
  if (v31(v28, 1, v29, v32))
  {
    v33 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v34 = v96;
    v35 = v92;
  }
  else
  {
    v36 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v27, v28, v36);
    v37 = *(int *)(v29 + 20);
    v38 = &v27[v37];
    v39 = &v28[v37];
    v40 = type metadata accessor for Artwork.CropStyle(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v34 = v96;
    v43 = v30;
    v35 = v92;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v27, 0, 1, v29);
  }
  v44 = v34[12];
  v45 = &v35[v44];
  v46 = &v93[v44];
  v47 = type metadata accessor for MotionViewModel(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    v50 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v45, v46, v50);
    v51 = *(int *)(v47 + 20);
    v52 = &v45[v51];
    v53 = &v46[v51];
    v54 = type metadata accessor for Artwork.CropStyle(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v57 = v34[13];
  v58 = &v35[v57];
  v59 = &v93[v57];
  v60 = type metadata accessor for Poster.Badge(0);
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    v62 = sub_100007E8C(&qword_1011AC090);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    v63 = sub_100007E8C(&qword_1011AC088);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v59, 1, v63))
    {
      memcpy(v58, v59, *(_QWORD *)(v61 + 64));
    }
    else
    {
      v90 = v64;
      v65 = *((_QWORD *)v59 + 1);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v65;
      v66 = *(int *)(v63 + 48);
      v89 = &v58[v66];
      v67 = &v59[v66];
      v68 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
      {
        v69 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v89, v67, v69);
        v70 = 1;
      }
      else
      {
        *(_QWORD *)v89 = *(_QWORD *)v67;
        swift_retain();
        v70 = 0;
      }
      swift_storeEnumTagMultiPayload(v89, v68, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v58, 0, 1, v63);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  v71 = v34[15];
  v35[v34[14]] = v93[v34[14]];
  v72 = &v35[v71];
  v73 = &v93[v71];
  v74 = *(void **)&v93[v71];
  *(_QWORD *)&v35[v71] = v74;
  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = v74;
  if (v94(v78, 1, v95))
  {
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v77, v78, v95);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v77, 0, 1, v95);
  }
  v72[v75[6]] = v73[v75[6]];
  v81 = v75[7];
  v82 = &v72[v81];
  v83 = &v73[v81];
  if (*(_QWORD *)v83)
  {
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v82 = *(_OWORD *)v83;
  }
  v85 = v96[16];
  v86 = *(void **)&v93[v85];
  *(_QWORD *)&v35[v85] = v86;
  v87 = v86;
  return v35;
}

char *sub_10030CE00(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  size_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void *, uint64_t, uint64_t);
  int v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  size_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);
  int v96;
  int v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void **v111;
  char *v112;
  void *v113;
  void *v114;
  id v115;
  int *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  void *v132;
  id v133;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t (*v144)(char *, uint64_t, uint64_t);
  uint64_t v145;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v144 = v8;
  v145 = v6;
  v142 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v23);
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v25 + 1);
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v27);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_retain();
  swift_release();
  v28 = a3[11];
  v29 = (uint64_t)&a1[v28];
  v30 = &a2[v28];
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33((uint64_t)v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      v46 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v29, v30, v46);
      v47 = *(int *)(v31 + 20);
      v48 = (void *)(v29 + v47);
      v49 = &v30[v47];
      v50 = type metadata accessor for Artwork.CropStyle(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
      v53 = v52(v48, 1, v50);
      v54 = v52(v49, 1, v50);
      if (v53)
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
      }
      v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v44 = v48;
      v45 = v49;
LABEL_14:
      memcpy(v44, v45, v43);
      goto LABEL_21;
    }
    sub_10005B748(v29, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v44 = (void *)v29;
    v45 = v30;
    goto LABEL_14;
  }
  if (v35)
    goto LABEL_13;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v29, v30, v36);
  v37 = *(int *)(v31 + 20);
  v38 = (void *)(v29 + v37);
  v39 = &v30[v37];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_21:
  v55 = a3[12];
  v56 = (uint64_t)&a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for MotionViewModel(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60((uint64_t)v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      v73 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v56, v57, v73);
      v74 = *(int *)(v58 + 20);
      v75 = (void *)(v56 + v74);
      v76 = &v57[v74];
      v77 = type metadata accessor for Artwork.CropStyle(0);
      v78 = *(_QWORD *)(v77 - 8);
      v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
      v80 = v79(v75, 1, v77);
      v81 = v79(v76, 1, v77);
      if (v80)
      {
        if (!v81)
        {
          (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v81)
        {
          (*(void (**)(void *, char *, uint64_t))(v78 + 24))(v75, v76, v77);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
      }
      v70 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v71 = v75;
      v72 = v76;
LABEL_28:
      memcpy(v71, v72, v70);
      goto LABEL_34;
    }
    sub_10005B748(v56, type metadata accessor for MotionViewModel);
LABEL_27:
    v70 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v71 = (void *)v56;
    v72 = v57;
    goto LABEL_28;
  }
  if (v62)
    goto LABEL_27;
  v63 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v56, v57, v63);
  v64 = *(int *)(v58 + 20);
  v65 = (void *)(v56 + v64);
  v66 = &v57[v64];
  v67 = type metadata accessor for Artwork.CropStyle(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    v69 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_34:
  v82 = a3[13];
  v83 = &a1[v82];
  v84 = &a2[v82];
  v85 = type metadata accessor for Poster.Badge(0);
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  v88 = v87(v83, 1, v85);
  v89 = v87(v84, 1, v85);
  if (v88)
  {
    if (!v89)
    {
      v90 = sub_100007E8C(&qword_1011AC088);
      v91 = *(_QWORD *)(v90 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v84, 1, v90))
      {
        memcpy(v83, v84, *(_QWORD *)(v86 + 64));
      }
      else
      {
        v141 = v91;
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
        v104 = *(int *)(v90 + 48);
        v143 = &v83[v104];
        v105 = &v84[v104];
        v106 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v105, v106) == 1)
        {
          v107 = type metadata accessor for Material(0);
          v108 = v143;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v143, v105, v107);
          v109 = 1;
        }
        else
        {
          v108 = v143;
          *(_QWORD *)v143 = *(_QWORD *)v105;
          swift_retain();
          v109 = 0;
        }
        swift_storeEnumTagMultiPayload(v108, v106, v109);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v83, 0, 1, v90);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v89)
  {
    sub_10005B748((uint64_t)v83, type metadata accessor for Poster.Badge);
LABEL_40:
    v92 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8) + 64);
LABEL_41:
    memcpy(v83, v84, v92);
    goto LABEL_60;
  }
  v93 = sub_100007E8C(&qword_1011AC088);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
  v96 = v95(v83, 1, v93);
  v97 = v95(v84, 1, v93);
  if (v96)
  {
    if (!v97)
    {
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      v98 = *(int *)(v93 + 48);
      v99 = &v83[v98];
      v100 = &v84[v98];
      v101 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v100, v101) == 1)
      {
        v102 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v99, v100, v102);
        v103 = 1;
      }
      else
      {
        *(_QWORD *)v99 = *(_QWORD *)v100;
        swift_retain();
        v103 = 0;
      }
      swift_storeEnumTagMultiPayload(v99, v101, v103);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v83, 0, 1, v93);
      goto LABEL_60;
    }
    goto LABEL_56;
  }
  if (v97)
  {
    sub_10004FF60((uint64_t)v83, &qword_1011AC088);
LABEL_56:
    v92 = *(_QWORD *)(v86 + 64);
    goto LABEL_41;
  }
  *(_QWORD *)v83 = *(_QWORD *)v84;
  v135 = *((_QWORD *)v83 + 1);
  *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v135);
  if (a1 != a2)
  {
    v136 = *(int *)(v93 + 48);
    v137 = &v83[v136];
    v138 = &v84[v136];
    sub_10005B748((uint64_t)v137, type metadata accessor for Poster.CustomBadgeStyle);
    v139 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v138, v139) == 1)
    {
      v140 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v137, v138, v140);
      swift_storeEnumTagMultiPayload(v137, v139, 1);
    }
    else
    {
      *(_QWORD *)v137 = *(_QWORD *)v138;
      swift_retain();
      swift_storeEnumTagMultiPayload(v137, v139, 0);
    }
  }
LABEL_60:
  a1[a3[14]] = a2[a3[14]];
  v110 = a3[15];
  v111 = (void **)&a1[v110];
  v112 = &a2[v110];
  v113 = *(void **)&a2[v110];
  v114 = *v111;
  *v111 = v113;
  v115 = v113;

  v116 = (int *)type metadata accessor for SegueContext(0);
  v117 = v116[5];
  v118 = (char *)v111 + v117;
  v119 = &v112[v117];
  v120 = v144((char *)v111 + v117, 1, v145);
  v121 = v144(v119, 1, v145);
  if (v120)
  {
    if (!v121)
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v118, v119, v145);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v118, 0, 1, v145);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v121)
  {
    (*(void (**)(char *, uint64_t))(v142 + 8))(v118, v145);
LABEL_65:
    v122 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(v142 + 24))(v118, v119, v145);
LABEL_66:
  *((_BYTE *)v111 + v116[6]) = v112[v116[6]];
  v123 = v116[7];
  v124 = (void **)((char *)v111 + v123);
  v125 = &v112[v123];
  v126 = *(uint64_t *)((char *)v111 + v123);
  v127 = *(_QWORD *)&v112[v123];
  if (!v126)
  {
    if (v127)
    {
      v129 = *((_QWORD *)v125 + 1);
      *v124 = v127;
      v124[1] = v129;
      swift_retain();
      goto LABEL_73;
    }
LABEL_72:
    *(_OWORD *)v124 = *(_OWORD *)v125;
    goto LABEL_73;
  }
  if (!v127)
  {
    swift_release();
    goto LABEL_72;
  }
  v128 = *((_QWORD *)v125 + 1);
  *v124 = v127;
  v124[1] = v128;
  swift_retain();
  swift_release();
LABEL_73:
  v130 = a3[16];
  v131 = *(void **)&a1[v130];
  v132 = *(void **)&a2[v130];
  *(_QWORD *)&a1[v130] = v132;
  v133 = v132;

  return a1;
}

char *sub_10030D900(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *__src;
  uint64_t v67;
  void *__dst;
  void *__dsta;
  char *__dstb;
  unsigned int (*v71)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v67 = v7;
  if (v71(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v11 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
  v12 = a3[11];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for ArtworkImage.ViewModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    __dst = (void *)v6;
    v18 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v13, v14, v18);
    v19 = *(int *)(v15 + 20);
    v20 = &v13[v19];
    v21 = &v14[v19];
    v22 = type metadata accessor for Artwork.CropStyle(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v6 = (uint64_t)__dst;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v25 = a3[12];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for MotionViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    __dsta = (void *)v6;
    v31 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v26, v27, v31);
    v32 = *(int *)(v28 + 20);
    v33 = &v26[v32];
    v34 = &v27[v32];
    v35 = type metadata accessor for Artwork.CropStyle(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v6 = (uint64_t)__dsta;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v38 = a3[13];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = type metadata accessor for Poster.Badge(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C(&qword_1011AC090);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = sub_100007E8C(&qword_1011AC088);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
    {
      memcpy(v39, v40, *(_QWORD *)(v42 + 64));
    }
    else
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
      v46 = *(int *)(v44 + 48);
      __dstb = &v39[v46];
      v47 = &v40[v46];
      v48 = type metadata accessor for Poster.CustomBadgeStyle(0);
      __src = v47;
      v49 = v47;
      v50 = v48;
      if (swift_getEnumCaseMultiPayload(v49, v48) == 1)
      {
        v51 = type metadata accessor for Material(0);
        (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(__dstb, __src, v51);
        swift_storeEnumTagMultiPayload(__dstb, v50, 1);
      }
      else
      {
        memcpy(__dstb, __src, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v44);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v52 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  v53 = &a1[v52];
  v54 = &a2[v52];
  *(_QWORD *)&a1[v52] = *(_QWORD *)&a2[v52];
  v55 = (int *)type metadata accessor for SegueContext(0);
  v56 = v55[5];
  v57 = &v53[v56];
  v58 = &v54[v56];
  if (v71(&v54[v56], 1, v6))
  {
    v59 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v57, v58, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v57, 0, 1, v6);
  }
  v53[v55[6]] = v54[v55[6]];
  v60 = v55[7];
  v61 = &v53[v60];
  v62 = &v54[v60];
  v63 = *(_QWORD *)v62;
  if (*(_QWORD *)v62)
  {
    v64 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = v63;
    *((_QWORD *)v61 + 1) = v64;
  }
  else
  {
    *(_OWORD *)v61 = *(_OWORD *)v62;
  }
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  return a1;
}

char *sub_10030DE74(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  size_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  size_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  void *v123;
  int *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t (*v150)(char *, uint64_t, uint64_t);
  uint64_t v151;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v150 = v8;
  v151 = v6;
  v146 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  v23 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease(v23);
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  v29 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease(v29);
  v30 = a3[8];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  v35 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease(v35);
  v36 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v36] = *(_QWORD *)&a2[v36];
  swift_release();
  v37 = a3[11];
  v38 = (uint64_t)&a1[v37];
  v39 = &a2[v37];
  v40 = type metadata accessor for ArtworkImage.ViewModel(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42((uint64_t)v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      v55 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v38, v39, v55);
      v56 = *(int *)(v40 + 20);
      v57 = (void *)(v38 + v56);
      v58 = &v39[v56];
      v59 = type metadata accessor for Artwork.CropStyle(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v57, 1, v59);
      v63 = v61(v58, 1, v59);
      if (v62)
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 40))(v57, v58, v59);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v60 + 8))(v57, v59);
      }
      v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v53 = v57;
      v54 = v58;
LABEL_14:
      memcpy(v53, v54, v52);
      goto LABEL_21;
    }
    sub_10005B748(v38, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v53 = (void *)v38;
    v54 = v39;
    goto LABEL_14;
  }
  if (v44)
    goto LABEL_13;
  v45 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v38, v39, v45);
  v46 = *(int *)(v40 + 20);
  v47 = (void *)(v38 + v46);
  v48 = &v39[v46];
  v49 = type metadata accessor for Artwork.CropStyle(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_21:
  v64 = a3[12];
  v65 = (uint64_t)&a1[v64];
  v66 = &a2[v64];
  v67 = type metadata accessor for MotionViewModel(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69((uint64_t)v66, 1, v67);
  if (!v70)
  {
    if (!v71)
    {
      v82 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v65, v66, v82);
      v83 = *(int *)(v67 + 20);
      v84 = (void *)(v65 + v83);
      v85 = &v66[v83];
      v86 = type metadata accessor for Artwork.CropStyle(0);
      v87 = *(_QWORD *)(v86 - 8);
      v88 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v87 + 48);
      v89 = v88(v84, 1, v86);
      v90 = v88(v85, 1, v86);
      if (v89)
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 40))(v84, v85, v86);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v87 + 8))(v84, v86);
      }
      v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v80 = v84;
      v81 = v85;
LABEL_28:
      memcpy(v80, v81, v79);
      goto LABEL_34;
    }
    sub_10005B748(v65, type metadata accessor for MotionViewModel);
LABEL_27:
    v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v80 = (void *)v65;
    v81 = v66;
    goto LABEL_28;
  }
  if (v71)
    goto LABEL_27;
  v72 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v65, v66, v72);
  v73 = *(int *)(v67 + 20);
  v74 = (void *)(v65 + v73);
  v75 = &v66[v73];
  v76 = type metadata accessor for Artwork.CropStyle(0);
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_34:
  v91 = a3[13];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v94 = type metadata accessor for Poster.Badge(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (!v97)
  {
    v99 = v151;
    if (!v98)
    {
      v104 = sub_100007E8C(&qword_1011AC088);
      v148 = *(_QWORD *)(v104 - 8);
      v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v148 + 48);
      v106 = v105(v92, 1, v104);
      v107 = v105(v93, 1, v104);
      v99 = v151;
      if (v106)
      {
        if (!v107)
        {
          *(_OWORD *)v92 = *(_OWORD *)v93;
          v108 = *(int *)(v104 + 48);
          v109 = &v92[v108];
          v110 = &v93[v108];
          v111 = type metadata accessor for Poster.CustomBadgeStyle(0);
          if (swift_getEnumCaseMultiPayload(v110, v111) == 1)
          {
            v112 = type metadata accessor for Material(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v109, v110, v112);
            swift_storeEnumTagMultiPayload(v109, v111, 1);
          }
          else
          {
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v92, 0, 1, v104);
          goto LABEL_61;
        }
      }
      else
      {
        if (!v107)
        {
          v141 = *((_QWORD *)v93 + 1);
          v142 = *((_QWORD *)v92 + 1);
          *(_QWORD *)v92 = *(_QWORD *)v93;
          *((_QWORD *)v92 + 1) = v141;
          swift_bridgeObjectRelease(v142);
          if (a1 == a2)
            goto LABEL_61;
          v143 = *(int *)(v104 + 48);
          v92 += v143;
          v93 += v143;
          sub_10005B748((uint64_t)v92, type metadata accessor for Poster.CustomBadgeStyle);
          v144 = type metadata accessor for Poster.CustomBadgeStyle(0);
          if (swift_getEnumCaseMultiPayload(v93, v144) == 1)
          {
            v145 = type metadata accessor for Material(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v92, v93, v145);
            swift_storeEnumTagMultiPayload(v92, v144, 1);
            goto LABEL_61;
          }
          v102 = *(_QWORD *)(v144 - 8);
          goto LABEL_41;
        }
        sub_10004FF60((uint64_t)v92, &qword_1011AC088);
      }
      v103 = *(_QWORD *)(v95 + 64);
      goto LABEL_42;
    }
    sub_10005B748((uint64_t)v92, type metadata accessor for Poster.Badge);
LABEL_40:
    v102 = *(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8);
LABEL_41:
    v103 = *(_QWORD *)(v102 + 64);
LABEL_42:
    memcpy(v92, v93, v103);
    goto LABEL_61;
  }
  v99 = v151;
  if (v98)
    goto LABEL_40;
  v100 = sub_100007E8C(&qword_1011AC088);
  v101 = *(_QWORD *)(v100 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v93, 1, v100))
  {
    memcpy(v92, v93, *(_QWORD *)(v95 + 64));
  }
  else
  {
    *(_OWORD *)v92 = *(_OWORD *)v93;
    v113 = *(int *)(v100 + 48);
    v149 = &v92[v113];
    v114 = &v93[v113];
    v115 = type metadata accessor for Poster.CustomBadgeStyle(0);
    v147 = v114;
    v116 = v114;
    v117 = v115;
    if (swift_getEnumCaseMultiPayload(v116, v115) == 1)
    {
      v118 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v149, v147, v118);
      swift_storeEnumTagMultiPayload(v149, v117, 1);
    }
    else
    {
      memcpy(v149, v147, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v92, 0, 1, v100);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
LABEL_61:
  v119 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  v120 = &a1[v119];
  v121 = &a2[v119];
  v122 = *(_QWORD *)&a2[v119];
  v123 = *(void **)&a1[v119];
  *(_QWORD *)v120 = v122;

  v124 = (int *)type metadata accessor for SegueContext(0);
  v125 = v124[5];
  v126 = &v120[v125];
  v127 = &v121[v125];
  v128 = v150(&v120[v125], 1, v99);
  v129 = v150(v127, 1, v99);
  if (v128)
  {
    if (!v129)
    {
      (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v126, v127, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v126, 0, 1, v99);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v129)
  {
    (*(void (**)(char *, uint64_t))(v146 + 8))(v126, v99);
LABEL_66:
    v130 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v146 + 40))(v126, v127, v99);
LABEL_67:
  v120[v124[6]] = v121[v124[6]];
  v131 = v124[7];
  v132 = &v120[v131];
  v133 = &v121[v131];
  v134 = *(_QWORD *)&v120[v131];
  v135 = *(_QWORD *)&v121[v131];
  if (!v134)
  {
    if (v135)
    {
      v137 = *((_QWORD *)v133 + 1);
      *(_QWORD *)v132 = v135;
      *((_QWORD *)v132 + 1) = v137;
      goto LABEL_74;
    }
LABEL_73:
    *(_OWORD *)v132 = *(_OWORD *)v133;
    goto LABEL_74;
  }
  if (!v135)
  {
    swift_release();
    goto LABEL_73;
  }
  v136 = *((_QWORD *)v133 + 1);
  *(_QWORD *)v132 = v135;
  *((_QWORD *)v132 + 1) = v136;
  swift_release();
LABEL_74:
  v138 = a3[16];
  v139 = *(void **)&a1[v138];
  *(_QWORD *)&a1[v138] = *(_QWORD *)&a2[v138];

  return a1;
}

uint64_t sub_10030E8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10030E8E0);
}

uint64_t sub_10030E8E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[11];
    }
    else
    {
      v15 = sub_100007E8C(&qword_1011AA8D0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[12];
      }
      else
      {
        v16 = sub_100007E8C(&qword_1011AC090);
        v12 = *(_QWORD *)(v16 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v13 = v16;
          v14 = a3[13];
        }
        else
        {
          v13 = type metadata accessor for SegueContext(0);
          v12 = *(_QWORD *)(v13 - 8);
          v14 = a3[15];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_10030EA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030EA20);
}

uint64_t sub_10030EA20(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[11];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011AA8D0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[12];
      }
      else
      {
        v17 = sub_100007E8C(&qword_1011AC090);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[13];
        }
        else
        {
          v10 = type metadata accessor for SegueContext(0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[15];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10030EB44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[13];

  sub_10015C698(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v12[1] = &unk_100EB46A8;
    v12[2] = &unk_100EB46A8;
    v12[3] = &unk_100EB46A8;
    v12[4] = &unk_100EB46A8;
    v12[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v12[6] = "\b";
    sub_10015C698(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel);
    if (v5 <= 0x3F)
    {
      v12[7] = *(_QWORD *)(v4 - 8) + 64;
      sub_10015C698(319, &qword_1011AC2E0, type metadata accessor for MotionViewModel);
      if (v7 <= 0x3F)
      {
        v12[8] = *(_QWORD *)(v6 - 8) + 64;
        sub_10015C698(319, (unint64_t *)&unk_1011AC2E8, type metadata accessor for Poster.Badge);
        if (v9 <= 0x3F)
        {
          v12[9] = *(_QWORD *)(v8 - 8) + 64;
          v12[10] = &unk_100EB4728;
          v10 = type metadata accessor for SegueContext(319);
          if (v11 <= 0x3F)
          {
            v12[11] = *(_QWORD *)(v10 - 8) + 64;
            v12[12] = "\b";
            swift_initStructMetadata(a1, 256, 13, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t sub_10030EC8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C32C, 1);
}

uint64_t sub_10030EC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030F320(a1, (uint64_t)&qword_1011A45B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A45C0, a2);
}

uint64_t sub_10030ECB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030F320(a1, (uint64_t)&unk_1011AC448, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011AC450, a2);
}

uint64_t sub_10030ECD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030F320(a1, (uint64_t)&unk_1011AC468, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011AC470, a2);
}

uint64_t sub_10030ECF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030F320(a1, (uint64_t)&unk_1011AC3F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011AC400, a2);
}

uint64_t sub_10030ED0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030F320(a1, (uint64_t)&unk_1011AC408, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011AC410, a2);
}

uint64_t sub_10030ED28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030ED80(a1, &qword_1011AC458, &qword_1011AC460, a2);
}

uint64_t sub_10030ED3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030F320(a1, (uint64_t)&unk_1011AC438, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011AC440, a2);
}

uint64_t sub_10030ED58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030ED80(a1, &qword_1011AC718, &qword_1011AC720, a2);
}

uint64_t sub_10030ED6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030ED80(a1, &qword_1011ACA70, &qword_1011ACA78, a2);
}

uint64_t sub_10030ED80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t *v41;

  v41 = a3;
  v6 = v4;
  v9 = (int *)type metadata accessor for SegueLink(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v11, type metadata accessor for SegueContext);
  v12 = type metadata accessor for TabSelectionManager(0);
  v13 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v14 = EnvironmentObject.init()(v12, v13);
  v16 = v15;
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = sub_1006096B0;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 0;
  v18 = &v11[v9[6]];
  v19 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v20 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v18 = EnvironmentObject.init()(v19, v20);
  *((_QWORD *)v18 + 1) = v21;
  v22 = &v11[v9[7]];
  v23 = sub_100007E8C(&qword_10119F4E8);
  v24 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v22 = EnvironmentObject.init()(v23, v24);
  *((_QWORD *)v22 + 1) = v25;
  v26 = &v11[v9[8]];
  v27 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v28 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v26 = EnvironmentObject.init()(v27, v28);
  *((_QWORD *)v26 + 1) = v29;
  v30 = (uint64_t *)&v11[v9[9]];
  *v30 = v14;
  v30[1] = v16;
  v31 = &v11[v9[10]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100EB4888);
  v32 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  v33 = &v11[v9[11]];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_100EB4790);
  v33[8] = 0;
  v34 = &v11[v9[12]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100EB47B8);
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 0;
  v35 = &v11[v9[13]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100EB47E0);
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = 0;
  v36 = &v11[v9[14]];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_100EB48B8);
  v36[8] = 0;
  v37 = sub_100007E8C(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a4, v6, v37);
  v38 = sub_100007E8C(v41);
  return sub_10005B6C0((uint64_t)v11, a4 + *(int *)(v38 + 36), type metadata accessor for SegueLink);
}

uint64_t sub_10030F030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v42;

  v42 = a5;
  HIDWORD(v41) = a4;
  v10 = (int *)type metadata accessor for SegueLink(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v12, type metadata accessor for SegueContext);
  v13 = type metadata accessor for TabSelectionManager(0);
  v14 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v15 = EnvironmentObject.init()(v13, v14);
  v17 = v16;
  v18 = &v12[v10[5]];
  *(_QWORD *)v18 = sub_1006096B0;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 0;
  v19 = &v12[v10[6]];
  v20 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v21 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v19 = EnvironmentObject.init()(v20, v21);
  *((_QWORD *)v19 + 1) = v22;
  v23 = &v12[v10[7]];
  v24 = sub_100007E8C(&qword_10119F4E8);
  v25 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v23 = EnvironmentObject.init()(v24, v25);
  *((_QWORD *)v23 + 1) = v26;
  v27 = &v12[v10[8]];
  v28 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v29 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v27 = EnvironmentObject.init()(v28, v29);
  *((_QWORD *)v27 + 1) = v30;
  v31 = (uint64_t *)&v12[v10[9]];
  *v31 = v15;
  v31[1] = v17;
  v32 = &v12[v10[10]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100EB4888);
  v33 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v12[v10[11]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100EB4790);
  v34[8] = 0;
  v35 = &v12[v10[12]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100EB47B8);
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = 0;
  v36 = &v12[v10[13]];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_100EB47E0);
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 0;
  v37 = &v12[v10[14]];
  *(_QWORD *)v37 = swift_getKeyPath(&unk_100EB48B8);
  v37[8] = 0;
  v38 = sub_100007E8C(&qword_1011ACA28);
  sub_10005B704((uint64_t)v12, a6 + *(int *)(v38 + 36), type metadata accessor for SegueLink);
  *(_QWORD *)a6 = a2;
  *(_QWORD *)(a6 + 8) = a3;
  v39 = BYTE4(v41) & 1;
  *(_BYTE *)(a6 + 16) = BYTE4(v41) & 1;
  *(_QWORD *)(a6 + 24) = v42;
  sub_100055BBC(a2, a3, v39);
  swift_bridgeObjectRetain();
  return sub_10005B748((uint64_t)v12, type metadata accessor for SegueLink);
}

uint64_t sub_10030F304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030F320(a1, (uint64_t)type metadata accessor for VerticalLockupGridCell, (void (*)(uint64_t, uint64_t, uint64_t))sub_10005B704, &qword_1011AC418, a2);
}

uint64_t sub_10030F320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t *v41;

  v40 = a3;
  v41 = a4;
  v7 = v5;
  v10 = (int *)type metadata accessor for SegueLink(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v12, type metadata accessor for SegueContext);
  v13 = type metadata accessor for TabSelectionManager(0);
  v14 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v15 = EnvironmentObject.init()(v13, v14);
  v17 = v16;
  v18 = &v12[v10[5]];
  *(_QWORD *)v18 = sub_1006096B0;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 0;
  v19 = &v12[v10[6]];
  v20 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v21 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v19 = EnvironmentObject.init()(v20, v21);
  *((_QWORD *)v19 + 1) = v22;
  v23 = &v12[v10[7]];
  v24 = sub_100007E8C(&qword_10119F4E8);
  v25 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)v23 = EnvironmentObject.init()(v24, v25);
  *((_QWORD *)v23 + 1) = v26;
  v27 = &v12[v10[8]];
  v28 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v29 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *(_QWORD *)v27 = EnvironmentObject.init()(v28, v29);
  *((_QWORD *)v27 + 1) = v30;
  v31 = (uint64_t *)&v12[v10[9]];
  *v31 = v15;
  v31[1] = v17;
  v32 = &v12[v10[10]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100EB4888);
  v33 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v12[v10[11]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100EB4790);
  v34[8] = 0;
  v35 = &v12[v10[12]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100EB47B8);
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = 0;
  v36 = &v12[v10[13]];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_100EB47E0);
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 0;
  v37 = &v12[v10[14]];
  *(_QWORD *)v37 = swift_getKeyPath(&unk_100EB48B8);
  v37[8] = 0;
  v40(v7, a5, a2);
  v38 = sub_100007E8C(v41);
  return sub_10005B6C0((uint64_t)v12, a5 + *(int *)(v38 + 36), type metadata accessor for SegueLink);
}

uint64_t sub_10030F5C4(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;

  v11 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011AC420);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011AC428);
  __chkstk_darwin(v17);
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  v20 = (char *)&v30 - v19;
  if (a1)
  {
    sub_10004A160(v5, (uint64_t)&v30 - v19, &qword_1011A0628);
    v21 = &v20[*(int *)(v17 + 36)];
    *(_QWORD *)v21 = a1;
    *((double *)v21 + 1) = a2;
    *((double *)v21 + 2) = a3;
    *((double *)v21 + 3) = a4;
    *((double *)v21 + 4) = a5;
    sub_10004A160((uint64_t)v20, (uint64_t)v16, &qword_1011AC428);
    swift_storeEnumTagMultiPayload(v16, v14, 0);
    v22 = sub_100314CE4();
    v23 = sub_100238A3C();
    v24 = a1;
    _ConditionalContent<>.init(storage:)(v16, v17, v11, v22, v23);
    v25 = (uint64_t)v20;
    v26 = &qword_1011AC428;
  }
  else
  {
    sub_10004A160(v5, (uint64_t)v13, &qword_1011A0628);
    sub_10004A160((uint64_t)v13, (uint64_t)v16, &qword_1011A0628);
    swift_storeEnumTagMultiPayload(v16, v14, 1);
    v27 = sub_100314CE4();
    v28 = sub_100238A3C();
    _ConditionalContent<>.init(storage:)(v16, v17, v11, v27, v28);
    v25 = (uint64_t)v13;
    v26 = &qword_1011A0628;
  }
  return sub_10004FF60(v25, v26);
}

uint64_t sub_10030F7DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(char *, uint64_t, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  ValueMetadata *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;

  v7 = v6;
  v53[1] = a2;
  v13 = sub_100007E8C(&qword_1011AC378);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011AC3C0);
  __chkstk_darwin(v17);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011AC3C8);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v23, v7, v13, v21);
    v24 = &v23[*(int *)(v20 + 36)];
    *(_QWORD *)v24 = a1;
    *((double *)v24 + 1) = a3;
    *((double *)v24 + 2) = a4;
    *((double *)v24 + 3) = a5;
    *((double *)v24 + 4) = a6;
    sub_10004A160((uint64_t)v23, (uint64_t)v19, &qword_1011AC3C8);
    swift_storeEnumTagMultiPayload(v19, v17, 0);
    v25 = sub_100314B5C();
    v26 = a1;
    v27 = sub_100044B54(&qword_1011AC370);
    v28 = sub_100044B54(&qword_1011AC368);
    v29 = sub_100044B54(&qword_1011AC3B0);
    v30 = sub_100044B54(&qword_1011AC360);
    v31 = sub_100044B54(&qword_1011AC358);
    v32 = sub_100314A0C();
    v54 = v31;
    v55 = (ValueMetadata *)v32;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v54 = v30;
    v55 = (ValueMetadata *)OpaqueTypeConformance2;
    v34 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v35 = sub_1000E3EE4();
    v36 = sub_100314AC0();
    v54 = v28;
    v55 = &type metadata for ActionType;
    v56 = v29;
    v57 = v34;
    v58 = v35;
    v59 = v36;
    v37 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v54 = v27;
    v55 = (ValueMetadata *)v37;
    v38 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v19, v20, v13, v25, v38);
    return sub_10004FF60((uint64_t)v23, &qword_1011AC3C8);
  }
  else
  {
    v40 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
    v40(v16, v7, v13, v21);
    ((void (*)(char *, char *, uint64_t))v40)(v19, v16, v13);
    swift_storeEnumTagMultiPayload(v19, v17, 1);
    v53[0] = sub_100314B5C();
    v41 = sub_100044B54(&qword_1011AC370);
    v42 = sub_100044B54(&qword_1011AC368);
    v43 = sub_100044B54(&qword_1011AC3B0);
    v44 = sub_100044B54(&qword_1011AC360);
    v45 = sub_100044B54(&qword_1011AC358);
    v46 = sub_100314A0C();
    v54 = v45;
    v55 = (ValueMetadata *)v46;
    v47 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v54 = v44;
    v55 = (ValueMetadata *)v47;
    v48 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v49 = sub_1000E3EE4();
    v50 = sub_100314AC0();
    v54 = v42;
    v55 = &type metadata for ActionType;
    v56 = v43;
    v57 = v48;
    v58 = v49;
    v59 = v50;
    v51 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v54 = v41;
    v55 = (ValueMetadata *)v51;
    v52 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v19, v20, v13, v53[0], v52);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

_QWORD *sub_10030FB94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int *v41;
  _QWORD *v42;
  int *v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;

  LODWORD(v70) = a5;
  v68 = a4;
  v10 = sub_100007E8C(&qword_1011AC090);
  __chkstk_darwin(v10);
  v57 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v18);
  v69 = a2;
  v56 = (uint64_t)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004A160(a2, v56, (uint64_t *)&unk_1011A20D0);
  v21 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x398))(v20);
  v66 = v22;
  v67 = v21;
  v23 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x368);
  v24 = a1;
  v25 = v23();
  v64 = v26;
  v65 = v25;

  v27 = *(uint64_t (**)(void))((swift_isaMask & *v24) + 0x380);
  v28 = v24;
  v29 = v27();
  v62 = v30;
  v63 = v29;

  v31 = *(uint64_t (**)(void))((swift_isaMask & *v28) + 0x3C8);
  v32 = v28;
  v33 = v31();
  v60 = v34;
  v61 = v33;

  v35 = (*(uint64_t (**)(void))((swift_isaMask & *v32) + 0x528))();
  if ((v35 & 1) != 0)
    v36 = static HorizontalAlignment.leading.getter(v35);
  else
    v36 = static HorizontalAlignment.center.getter(v35);
  v59 = v36;
  if (((*(uint64_t (**)(void))((swift_isaMask & *v32) + 0x4F8))() & 1) != 0)
    v58 = Image.init(systemName:)(0xD000000000000019, 0x8000000100E35EE0);
  else
    v58 = 0;
  v37 = v70 & 1;
  sub_10004A160(a3, (uint64_t)v17, (uint64_t *)&unk_1011A3E10);
  v38 = v68;
  sub_10004A160(v68, (uint64_t)v14, &qword_1011AA8D0);
  v39 = v32;
  v40 = v57;
  sub_10030FF88(v39, v57);
  v70 = v39;
  LOBYTE(v39) = sub_100314430(v70, v37);
  sub_10004FF60(v38, &qword_1011AA8D0);
  sub_10004FF60(a3, (uint64_t *)&unk_1011A3E10);
  v41 = (int *)type metadata accessor for Poster(0);
  v42 = (_QWORD *)(a6 + v41[15]);
  *v42 = v70;
  v43 = (int *)type metadata accessor for SegueContext(0);
  sub_100065228(v69, (uint64_t)v42 + v43[5], (uint64_t *)&unk_1011A20D0);
  *((_BYTE *)v42 + v43[6]) = 0;
  v44 = (_QWORD *)((char *)v42 + v43[7]);
  *v44 = 0;
  v44[1] = 0;
  sub_100065228(v56, a6, (uint64_t *)&unk_1011A20D0);
  v45 = (uint64_t *)(a6 + v41[5]);
  v46 = v66;
  *v45 = v67;
  v45[1] = v46;
  v47 = (uint64_t *)(a6 + v41[6]);
  v48 = v64;
  *v47 = v65;
  v47[1] = v48;
  v49 = (uint64_t *)(a6 + v41[7]);
  v50 = v62;
  *v49 = v63;
  v49[1] = v50;
  v51 = (uint64_t *)(a6 + v41[8]);
  v52 = v60;
  *v51 = v61;
  v51[1] = v52;
  *(_QWORD *)(a6 + v41[9]) = v59;
  *(_QWORD *)(a6 + v41[10]) = v58;
  sub_100065228((uint64_t)v17, a6 + v41[11], (uint64_t *)&unk_1011A3E10);
  sub_100065228((uint64_t)v14, a6 + v41[12], &qword_1011AA8D0);
  sub_100065228(v40, a6 + v41[13], &qword_1011AC090);
  *(_BYTE *)(a6 + v41[14]) = (_BYTE)v39;
  v53 = v70;
  *(_QWORD *)(a6 + v41[16]) = v70;
  return v53;
}

uint64_t sub_10030FF88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  NSObject *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  NSObject *v38;
  uint64_t v39;
  _QWORD *v40;
  int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  NSObject *v48;
  uint64_t v49;

  v44 = type metadata accessor for Poster.CustomBadgeStyle(0);
  __chkstk_darwin(v44);
  v5 = (_QWORD *)((char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Poster.Badge(0);
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (_QWORD *)((char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (_QWORD *)(*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x510))(v10);
  v14 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x4E0);
  v15 = v14();
  v16 = v15;
  if (v13)
  {
    if ((v15 & 1) != 0)
    {
      v17 = v13;
      v18 = Logger.scripting.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v43);
      v19 = v17;
      v42 = a1;
      v20 = Logger.logObject.getter(v42);
      v21 = static os_log_type_t.default.getter(v20);
      v41 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc(18, -1);
        v39 = a2;
        v23 = v22;
        v40 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v23 = 138543618;
        v37[1] = v23 + 12;
        v37[2] = v23 + 4;
        v48 = v19;
        v38 = v20;
        v19 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
        *v40 = v13;

        *(_WORD *)(v23 + 12) = 1026;
        v24 = v42;
        v25 = v14();
        v26 = v38;
        v47 = v25 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);

        _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v41, "Malformed JSPosterItem. badge =%{public}@ and isPlayButtonEnabled=%{BOOL,public}d. Ignoring isPlayButtonEnabled.", (uint8_t *)v23, 0x12u);
        v27 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
        v28 = v40;
        swift_arrayDestroy(v40, 1, v27);
        swift_slowDealloc(v28, -1, -1);
        v29 = v23;
        a2 = v39;
        swift_slowDealloc(v29, -1, -1);
      }
      else
      {

        v26 = v19;
      }

      v15 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v43);
    }
    *v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v13) + 0x298))(v15);
    v12[1] = v32;
    v33 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x2B0))();

    if ((v33 & 1) != 0)
    {
      static Material.thin.getter();
      v35 = 1;
    }
    else
    {
      v34 = static Color.pink.getter();
      v35 = 0;
      *v5 = v34;
    }
    swift_storeEnumTagMultiPayload(v5, v44, v35);
    v36 = sub_100007E8C(&qword_1011AC088);
    sub_10005B6C0((uint64_t)v5, (uint64_t)v12 + *(int *)(v36 + 48), type metadata accessor for Poster.CustomBadgeStyle);

    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v12, 0, 1, v36);
  }
  else
  {

    if ((v16 & 1) == 0)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(a2, 1, 1, v46);
    v31 = sub_100007E8C(&qword_1011AC088);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
  }
  sub_10005B6C0((uint64_t)v12, a2, type metadata accessor for Poster.Badge);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(a2, 0, 1, v46);
}

uint64_t sub_10031039C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t OpaqueTypeConformance2;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (**v73)(_QWORD, _QWORD);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  int *v78;
  uint64_t v79;
  id v80;
  char v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  uint64_t KeyPath;
  uint64_t v101;
  uint64_t v102;
  char v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  ValueMetadata *v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  unint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t result;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  unint64_t *v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  ValueMetadata *v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  int *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (**v195)(_QWORD, _QWORD);
  uint64_t v196;
  uint64_t *v197;
  char *v198;
  int *v199;
  _BYTE v200[32];
  uint64_t v201;
  _QWORD v202[5];
  _QWORD v203[5];
  _QWORD v204[5];
  uint64_t v205;
  ValueMetadata *v206;
  uint64_t v207;
  uint64_t v208;
  _UNKNOWN **v209;
  _QWORD *v210;
  ValueMetadata *v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (**v217)(_QWORD, _QWORD);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  void (**v224)(_QWORD, _QWORD);
  __int128 v225;
  uint64_t v226;
  _OWORD v227[2];
  char v228;
  _BYTE v229[48];

  v2 = v1;
  v190 = a1;
  v3 = type metadata accessor for PosterView(0);
  __chkstk_darwin(v3);
  v174 = (uint64_t)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v5);
  v180 = (uint64_t *)((char *)&v170 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v197 = (uint64_t *)((char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v195 = *(void (***)(_QWORD, _QWORD))(v9 - 8);
  __chkstk_darwin(v9);
  v193 = (uint64_t)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = (int *)type metadata accessor for PosterView.BackgroundView(0);
  __chkstk_darwin(v175);
  v12 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011AC348);
  __chkstk_darwin(v13);
  v15 = (char *)&v170 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011AC350);
  v177 = *(_QWORD *)(v16 - 8);
  v178 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v170 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_1011AC358);
  __chkstk_darwin(v179);
  v176 = (uint64_t)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_100007E8C(&qword_1011AC360);
  v194 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v192 = (uint64_t)&v170 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100007E8C(&qword_1011AC368);
  v181 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v198 = (char *)&v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_100007E8C(&qword_1011AC370);
  v186 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v184 = (uint64_t)&v170 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_100007E8C(&qword_1011AC378);
  v187 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v185 = (char *)&v170 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011AC380);
  __chkstk_darwin(v24);
  v182 = (uint64_t)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v1 + *(int *)(v3 + 56);
  v27 = *(_OWORD *)(v26 + 16);
  v227[0] = *(_OWORD *)v26;
  v227[1] = v27;
  v228 = *(_BYTE *)(v26 + 32);
  sub_100065228((uint64_t)v227, (uint64_t)v229, &qword_10119EAE0);
  sub_10006FDA8((uint64_t)v229, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B410);
  sub_100823BC4();
  v29 = v28;
  v31 = v30;
  sub_10006FDA8((uint64_t)v227, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B61C);
  v199 = (int *)v3;
  if (v29)
  {
    swift_bridgeObjectRelease(v29);
    v32 = v31 * 1.33333333 - v31;
  }
  else
  {
    v33 = sub_100007E8C(&qword_1011A70B8);
    ScaledMetric.wrappedValue.getter(&v221, v33);
    v32 = *(double *)&v221;
  }
  v34 = sub_10005B704(v2, (uint64_t)v12, type metadata accessor for Poster);
  *(double *)&v12[v175[5]] = v32;
  v35 = static Alignment.topLeading.getter(v34);
  v37 = v36;
  v38 = (uint64_t)&v15[*(int *)(v13 + 36)];
  sub_10031131C(v2, v38);
  v39 = (uint64_t *)(v38 + *(int *)(sub_100007E8C(&qword_1011AC388) + 36));
  *v39 = v35;
  v39[1] = v37;
  v40 = sub_10005B6C0((uint64_t)v12, (uint64_t)v15, type metadata accessor for PosterView.BackgroundView);
  v41 = v193;
  static AccessibilityChildBehavior.combine.getter(v40);
  v42 = sub_100314970();
  View.accessibilityElement(children:)(v41, v13, v42);
  v195[1](v41, v9);
  sub_10004FF60((uint64_t)v15, &qword_1011AC348);
  v43 = type metadata accessor for Poster(0);
  v44 = v2;
  v45 = v176;
  sub_10030ED80(v2 + *(int *)(v43 + 60), &qword_1011AC350, &qword_1011AC358, v176);
  (*(void (**)(char *, uint64_t))(v177 + 8))(v18, v178);
  v46 = Corner.featured.unsafeMutableAddressor();
  v47 = *(_QWORD *)v46;
  v48 = *((_QWORD *)v46 + 1);
  v49 = *((_BYTE *)v46 + 16);
  v50 = sub_100314A0C();
  v51 = v192;
  v52 = v48;
  v53 = v179;
  View.corner(_:)(v47, v52, v49, v179, v50);
  sub_10004FF60(v45, &qword_1011AC358);
  v54 = *(_QWORD *)v46;
  v55 = *((_QWORD *)v46 + 1);
  LOBYTE(v46) = *((_BYTE *)v46 + 16);
  *(_QWORD *)&v221 = v53;
  *((_QWORD *)&v221 + 1) = v50;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v221, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v57 = v55;
  v58 = v191;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v54, v57, v46, 0, 0, 1, 1, v191, 0.0, OpaqueTypeConformance2);
  (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v51, v58);
  v179 = v43;
  v59 = *(int *)(v43 + 56);
  v60 = v44;
  LOBYTE(v221) = *(_BYTE *)(v44 + v59);
  String.init<A>(describing:)(&v221, &type metadata for Poster.Layout);
  swift_bridgeObjectRelease(v61);
  v62 = (uint64_t)v197;
  sub_10004A160(v44, (uint64_t)v197, (uint64_t *)&unk_1011A20D0);
  v63 = type metadata accessor for GenericMusicItem(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63);
  v196 = v44;
  if (v65 == 1)
  {
    v66 = sub_10004FF60(v62, (uint64_t *)&unk_1011A20D0);
    v67 = 0;
    v68 = 0;
    v69 = 0;
    v70 = 0;
    v71 = 0;
    v72 = 0;
    v73 = 0;
    v74 = 0;
    v75 = 0;
    v76 = 0;
LABEL_15:
    v194 = v74;
    v195 = v73;
    v192 = v76;
    v193 = v75;
    v176 = v67;
    v177 = v68;
    v178 = v69;
    v197 = &v170;
    *(_QWORD *)&v221 = v67;
    *((_QWORD *)&v221 + 1) = v68;
    *(_QWORD *)&v222 = v69;
    *((_QWORD *)&v222 + 1) = v70;
    *(_QWORD *)&v223 = v71;
    *((_QWORD *)&v223 + 1) = v72;
    v224 = v73;
    *(_QWORD *)&v225 = v74;
    *((_QWORD *)&v225 + 1) = v75;
    v226 = v76;
    __chkstk_darwin(v66);
    v128 = v196;
    v130 = v129;
    v131 = (_QWORD *)sub_100007E8C(&qword_1011AC3B0);
    v180 = v131;
    v205 = v58;
    v206 = (ValueMetadata *)OpaqueTypeConformance2;
    v132 = swift_getOpaqueTypeConformance2(&v205, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v191 = v132;
    v133 = sub_1000E3EE4();
    v134 = (_QWORD *)sub_100314AC0();
    v166 = v131;
    v167 = v132;
    v135 = v183;
    v136 = v184;
    v137 = v198;
    View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v221, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100314AB8, (uint64_t)&v166, (uint64_t)UIScreen.Dimensions.size.getter, 0, v184, v183, (uint64_t)&type metadata for ActionType, v166, v167, v133, v134);
    sub_1000E4164(v176, v177, v178, v70, v71, v130, v195, v194, v193, v192);
    (*(void (**)(char *, uint64_t))(v181 + 8))(v137, v135);
    v138 = (uint64_t *)(v128 + v199[8]);
    v139 = *v138;
    v140 = v138[1];
    v141 = *((unsigned __int8 *)v138 + 16);
    v142 = sub_100007E8C(&qword_1011A03A8);
    v143 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v144 = StateObject.wrappedValue.getter(v139, v140, v141, v142, v143);
    v205 = v135;
    v206 = &type metadata for ActionType;
    v207 = (uint64_t)v180;
    v208 = v191;
    v209 = (_UNKNOWN **)v133;
    v210 = v134;
    v145 = swift_getOpaqueTypeConformance2(&v205, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v146 = v185;
    v147 = v188;
    View.shareSheetPresenting(_:)(v144, v188, v145);
    v148 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v186 + 8))(v136, v147, v148);
    v149 = v182;
    sub_10030F7DC(*(void **)(v196 + *(int *)(v179 + 64)), v182, 0.0, 0.0, v32, 0.0);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v146, v189);
    return sub_100065228(v149, v190, &qword_1011AC380);
  }
  v77 = (int *)Optional<A>.playbackIntent.getter();
  v78 = v199;
  v79 = v60 + v199[5];
  v80 = *(id *)v79;
  v81 = *(_BYTE *)(v79 + 8);
  sub_1000A4100(*(id *)v79, v81);
  v173 = sub_100824044(v80, v81);
  sub_1000A4224(v80, v81);
  v82 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v180, 1, 1, v82);
  v83 = (uint64_t *)(v60 + v78[6]);
  v84 = *v83;
  if (*v83)
  {
    v175 = v77;
    v176 = v64;
    v178 = OpaqueTypeConformance2;
    v208 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v209 = &protocol witness table for <A> PresentedViewState<A>;
    v205 = v84;
    v85 = (uint64_t *)(v60 + v78[7]);
    v86 = *v85;
    if (*v85)
    {
      v204[3] = type metadata accessor for NoticePresenter(0);
      v204[4] = &protocol witness table for NoticePresenter;
      v204[0] = v86;
      v224 = 0;
      v222 = 0u;
      v223 = 0u;
      v221 = 0u;
      v225 = xmmword_100EA93A0;
      v87 = v60 + v78[8];
      v88 = *(_QWORD *)v87;
      v89 = *(_QWORD *)(v87 + 8);
      v90 = *(unsigned __int8 *)(v87 + 16);
      swift_retain();
      swift_retain();
      v91 = sub_100007E8C(&qword_1011A03A8);
      v92 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v93 = StateObject.wrappedValue.getter(v88, v89, v90, v91, v92);
      v203[3] = v91;
      v203[4] = &protocol witness table for <A> PresentedViewState<A>;
      v203[0] = v93;
      v94 = (uint64_t *)(v60 + v78[9]);
      v95 = *v94;
      if (*v94)
      {
        v96 = type metadata accessor for NavigationPusher();
        v202[3] = v96;
        v202[4] = &off_1010D58B0;
        v201 = 0;
        v202[0] = v95;
        memset(v200, 0, sizeof(v200));
        v97 = (_QWORD *)(v60 + v78[10]);
        if (*v97)
        {
          v177 = v63;
          v98 = (_QWORD *)(v60 + v78[11]);
          if (*v98)
          {
            __chkstk_darwin(v96);
            v99 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100EB4830);
            __chkstk_darwin(KeyPath);
            v168 = &type metadata for TabIdentifier;
            v169 = v99;
            v101 = swift_getKeyPath(&unk_100EB4868);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v211, v102, KeyPath, v101);
            swift_release();
            swift_release();
            swift_release();
            v103 = (char)v211;
            v104 = v199;
            v105 = v60 + v199[12];
            v106 = *(_QWORD *)v105;
            v107 = *(_QWORD *)(v105 + 8);
            LOBYTE(v101) = *(_BYTE *)(v105 + 16);
            sub_1000A410C(*(_QWORD *)v105, v107, v101);
            sub_100824224(v106, v107, v101);
            v109 = v108;
            sub_1000A4230(v106, v107, v101);
            sub_10066D160(v103);
            v111 = v110;
            v113 = v112;
            swift_release();
            swift_bridgeObjectRelease(v109);
            v114 = v60 + v104[13];
            v115 = *(_QWORD *)v114;
            v116 = *(_QWORD *)(v114 + 8);
            LOBYTE(v107) = *(_BYTE *)(v114 + 16);
            sub_1000A411C(*(_QWORD *)v114, v116, v107);
            sub_100824400(v115, v116, v107, (uint64_t *)&v211);
            sub_1000A4240(v115, v116, v107);
            v117 = v211;
            v118 = v212;
            v119 = v174;
            sub_10005B704(v60, v174, type metadata accessor for PosterView);
            if (v118 >> 60 != 15)
            {
LABEL_14:
              sub_10005B748(v119, type metadata accessor for PosterView);
              v122 = type metadata accessor for MusicLibrary(0);
              v123 = static MusicLibrary.shared.getter(v122);
              v168 = v117;
              v167 = v113;
              v124 = v175;
              v125 = (uint64_t)v117;
              v126 = v173;
              v170 = v113;
              v127 = (uint64_t)v180;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v175, v173, v123, (uint64_t)v180, (uint64_t)&v205, (unint64_t)v204, (unint64_t)&v221, (unint64_t)v203, (uint64_t *)&v211, (uint64_t)v202, (unint64_t)v200, v111, v167, (uint64_t)v168, v118);
              v67 = (uint64_t)v211;
              v68 = v212;
              v69 = v213;
              v174 = v214;
              v171 = v216;
              v172 = v215;
              v194 = v218;
              v195 = v217;
              v192 = v220;
              v193 = v219;
              swift_release();
              sub_1000822B4(v125, v118);

              swift_bridgeObjectRelease(v170);
              sub_10004FF60((uint64_t)v200, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v221, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v127, (uint64_t *)&unk_1011A20C0);
              sub_10004FF60((uint64_t)v202, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v203);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v204);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v205);
              v66 = (*(uint64_t (**)(uint64_t *, uint64_t))(v176 + 8))(v197, v177);
              v76 = v192;
              v75 = v193;
              v74 = v194;
              v73 = v195;
              v72 = v171;
              v71 = v172;
              v70 = v174;
              v58 = v191;
              OpaqueTypeConformance2 = v178;
              goto LABEL_15;
            }
            v120 = (_QWORD *)(v119 + v104[10]);
            if (*v120)
            {
              swift_retain();
              v117 = (ValueMetadata *)sub_10066D7A8();
              v118 = v121;
              swift_release();
              goto LABEL_14;
            }
          }
          else
          {
            v162 = v98[1];
            v163 = type metadata accessor for TabSelectionManager(0);
            v164 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v162, v163, v164);
            __break(1u);
          }
          v151 = v120[1];
          goto LABEL_22;
        }
LABEL_19:
        v151 = v97[1];
        swift_retain();
LABEL_22:
        v152 = (uint64_t *)&unk_10119CBE0;
        v153 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v154 = &qword_1011C5B90;
        v155 = &unk_100EC0A50;
        goto LABEL_23;
      }
    }
    else
    {
      v156 = v85[1];
      v157 = type metadata accessor for NoticePresenter(0);
      v158 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v156, v157, v158);
      __break(1u);
    }
    v159 = v94[1];
    v160 = type metadata accessor for NavigationPusher();
    v161 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v159, v160, v161);
    __break(1u);
    goto LABEL_19;
  }
  v151 = v83[1];
  v152 = (uint64_t *)&unk_1011B4E40;
  v153 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v154 = (unint64_t *)&unk_10119CC10;
  v155 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_23:
  v165 = sub_100049F28(v154, v152, (uint64_t)v155);
  result = EnvironmentObject.error()(0, v151, v153, v165);
  __break(1u);
  return result;
}

uint64_t sub_10031131C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[7];

  v44 = a2;
  v3 = type metadata accessor for PosterView.BadgeView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011AC3E8);
  __chkstk_darwin(v42);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011AC3F0);
  v43 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AC090);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Poster.Badge(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Poster(0);
  sub_10004A160(a1 + *(int *)(v18 + 52), (uint64_t)v13, &qword_1011AC090);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10004FF60((uint64_t)v13, &qword_1011AC090);
    v19 = 1;
    v20 = v44;
  }
  else
  {
    sub_10005B6C0((uint64_t)v13, (uint64_t)v17, type metadata accessor for Poster.Badge);
    v21 = sub_10005B704((uint64_t)v17, (uint64_t)v5, type metadata accessor for Poster.Badge);
    v22 = static Alignment.center.getter(v21);
    v41 = 1;
    v40 = 0;
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, 0x4034000000000000, 0, 0, 1, 0, 1, 0, 1, 0x4034000000000000, v40, 0, v41, v22, v23);
    sub_10005B704((uint64_t)v5, (uint64_t)v7, type metadata accessor for PosterView.BadgeView);
    v24 = &v7[*(int *)(v42 + 36)];
    v25 = v45[5];
    *((_OWORD *)v24 + 4) = v45[4];
    *((_OWORD *)v24 + 5) = v25;
    *((_OWORD *)v24 + 6) = v45[6];
    v26 = v45[1];
    *(_OWORD *)v24 = v45[0];
    *((_OWORD *)v24 + 1) = v26;
    v27 = v45[3];
    *((_OWORD *)v24 + 2) = v45[2];
    *((_OWORD *)v24 + 3) = v27;
    v28 = sub_10005B748((uint64_t)v5, type metadata accessor for PosterView.BadgeView);
    v29 = static Edge.Set.all.getter(v28);
    v30 = EdgeInsets.init(_all:)(12.0);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011AC3E8);
    v37 = &v10[*(int *)(v8 + 36)];
    *v37 = v29;
    *((double *)v37 + 1) = v30;
    *((_QWORD *)v37 + 2) = v32;
    *((_QWORD *)v37 + 3) = v34;
    *((_QWORD *)v37 + 4) = v36;
    v37[40] = 0;
    sub_10004FF60((uint64_t)v7, &qword_1011AC3E8);
    sub_10005B748((uint64_t)v17, type metadata accessor for Poster.Badge);
    v38 = v44;
    sub_100065228((uint64_t)v10, v44, &qword_1011AC3F0);
    v19 = 0;
    v20 = v38;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v20, v19, 1, v8);
}

uint64_t sub_10031165C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v3 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContextualPreview(0);
  v6 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GenericMusicItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v24 - v17;
  sub_10004A160(a1, (uint64_t)v11, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A20D0);
    v19 = 1;
    v20 = v25;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    sub_1001CB080(v5);
    v21 = *(void (**)(char *, uint64_t))(v13 + 8);
    v21(v15, v12);
    sub_10005B6C0((uint64_t)v5, (uint64_t)v8, type metadata accessor for ContextualPreview.Data);
    v21(v18, v12);
    v22 = v25;
    sub_10005B6C0((uint64_t)v8, v25, type metadata accessor for ContextualPreview);
    v19 = 0;
    v20 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, v19, 1, v24);
}

uint64_t sub_10031187C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;

  v153 = a1;
  *(_QWORD *)&v143 = sub_100007E8C(&qword_1011AC5A0);
  __chkstk_darwin(v143);
  v144 = (uint64_t)&v140 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011AC5A8);
  __chkstk_darwin(v3);
  v5 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100007E8C(&qword_1011AC5B0);
  __chkstk_darwin(v154);
  v7 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100007E8C(&qword_1011AC5B8);
  __chkstk_darwin(v156);
  v157 = (uint64_t)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100007E8C(&qword_1011AC5C0);
  __chkstk_darwin(v145);
  v146 = (uint64_t)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011AC5C8);
  __chkstk_darwin(v10);
  v147 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100007E8C(&qword_1011AC5D0);
  __chkstk_darwin(v149);
  v151 = (uint64_t)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PosterView.MotionArtwork(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011AC5D8);
  __chkstk_darwin(v16);
  v158 = (uint64_t)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_1011AC5E0);
  __chkstk_darwin(v148);
  v19 = (char *)&v140 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100007E8C(&qword_1011AC5E8);
  __chkstk_darwin(v155);
  v150 = (char *)&v140 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for Poster(0);
  v22 = *(_BYTE *)(v1 + v21[14]);
  v152 = v1;
  sub_10005B704(v1, (uint64_t)v15, type metadata accessor for Poster);
  if (v22 < 0)
  {
    v149 = v3;
    v150 = v7;
    v151 = v10;
    v42 = Int.seconds.getter(21);
    v43 = v42 / Int.seconds.getter(9);
    v44 = v158;
    sub_10005B704((uint64_t)v15, v158, type metadata accessor for PosterView.MotionArtwork);
    v45 = v44 + *(int *)(v16 + 36);
    *(double *)v45 = v43;
    *(_WORD *)(v45 + 8) = 0;
    sub_10005B748((uint64_t)v15, type metadata accessor for PosterView.MotionArtwork);
    if ((v22 & 1) != 0)
    {
      v128 = *(_QWORD *)(v152 + *(int *)(type metadata accessor for PosterView.BackgroundView(0) + 20));
      v129 = v149;
      v130 = v5;
      v131 = (uint64_t)&v5[*(int *)(v149 + 36)];
      sub_10005B704(v152, v131, type metadata accessor for Poster);
      v132 = v131 + *(int *)(type metadata accessor for PosterView.OverlayTextStack(0) + 20);
      *(_QWORD *)v132 = v128;
      *(_BYTE *)(v132 + 8) = 0;
      sub_100065228(v158, (uint64_t)v5, &qword_1011AC5D8);
      v83 = &qword_1011AC5A8;
      v133 = v144;
      sub_10004A160((uint64_t)v5, v144, &qword_1011AC5A8);
      swift_storeEnumTagMultiPayload(v133, v143, 0);
      v134 = sub_100318030();
      v135 = sub_100318138();
      v87 = (uint64_t)v150;
      _ConditionalContent<>.init(storage:)(v133, v129, v151, v134, v135);
      v88 = (uint64_t)v130;
    }
    else
    {
      v46 = sub_100007E8C(&qword_1011AC5F0);
      v47 = swift_allocObject(v46, 48, 7);
      *(_OWORD *)(v47 + 16) = xmmword_100EA7A80;
      v48 = static Color.clear.getter(v47);
      *(_QWORD *)(v47 + 32) = v48;
      static Color.black.getter(v48);
      v49 = Color.opacity(_:)(0.2);
      swift_release();
      *(_QWORD *)(v47 + 40) = v49;
      *(_QWORD *)&v163 = v47;
      v51 = specialized Array._endMutation()(v50);
      v52 = v163;
      v53 = static UnitPoint.top.getter(v51);
      v55 = v54;
      v56 = static UnitPoint.bottom.getter();
      v58 = v57;
      Gradient.init(colors:)(v52);
      v59 = LinearGradient.init(gradient:startPoint:endPoint:)(&v159, v53, v55, v56, v58);
      v148 = v159;
      v142 = v160;
      v60 = v161;
      v61 = v162;
      v62 = static Alignment.center.getter(v59);
      v64 = _FrameLayout.init(width:height:alignment:)(&v163, 0, 1, 0x4060E00000000000, 0, v62, v63);
      v65 = v163;
      v66 = v152;
      v67 = BYTE8(v163);
      v68 = v164;
      v69 = v165;
      v70 = v166;
      v141 = v167;
      v71 = static Alignment.bottom.getter(v64);
      v73 = v72;
      v74 = v158;
      v75 = v146;
      sub_10004A160(v158, v146, &qword_1011AC5D8);
      v76 = v75 + *(int *)(v145 + 36);
      *(_QWORD *)v76 = v148;
      *(_OWORD *)(v76 + 8) = v142;
      *(_QWORD *)(v76 + 24) = v60;
      *(_QWORD *)(v76 + 32) = v61;
      *(_QWORD *)(v76 + 40) = v65;
      *(_BYTE *)(v76 + 48) = v67;
      *(_QWORD *)(v76 + 56) = v68;
      *(_BYTE *)(v76 + 64) = v69;
      v77 = v141;
      *(_QWORD *)(v76 + 72) = v70;
      *(_QWORD *)(v76 + 80) = v77;
      *(_QWORD *)(v76 + 88) = v71;
      *(_QWORD *)(v76 + 96) = v73;
      sub_10004FF60(v74, &qword_1011AC5D8);
      v78 = *(_QWORD *)(v66 + *(int *)(type metadata accessor for PosterView.BackgroundView(0) + 20));
      v79 = v151;
      v80 = (uint64_t)v147;
      v81 = (uint64_t)&v147[*(int *)(v151 + 36)];
      sub_10005B704(v66, v81, type metadata accessor for Poster);
      v82 = v81 + *(int *)(type metadata accessor for PosterView.OverlayTextStack(0) + 20);
      *(_QWORD *)v82 = v78;
      *(_BYTE *)(v82 + 8) = 0;
      sub_100065228(v75, v80, &qword_1011AC5C0);
      v83 = &qword_1011AC5C8;
      v84 = v144;
      sub_10004A160(v80, v144, &qword_1011AC5C8);
      swift_storeEnumTagMultiPayload(v84, v143, 1);
      v85 = sub_100318030();
      v86 = sub_100318138();
      v87 = (uint64_t)v150;
      _ConditionalContent<>.init(storage:)(v84, v149, v79, v85, v86);
      v88 = v80;
    }
    sub_10004FF60(v88, v83);
    v123 = &qword_1011AC5B0;
    v136 = v157;
    sub_10004A160(v87, v157, &qword_1011AC5B0);
    swift_storeEnumTagMultiPayload(v136, v156, 1);
    v137 = sub_100318240();
    v138 = sub_1003182E8();
    _ConditionalContent<>.init(storage:)(v136, v155, v154, v137, v138);
    v127 = v87;
  }
  else
  {
    v23 = v158;
    sub_10005B704((uint64_t)v15, v158, type metadata accessor for PosterView.MotionArtwork);
    v24 = v23 + *(int *)(v16 + 36);
    if ((v22 & 1) != 0)
    {
      *(_QWORD *)v24 = 0x3FE6666666666666;
      *(_WORD *)(v24 + 8) = 0;
      sub_10005B748((uint64_t)v15, type metadata accessor for PosterView.MotionArtwork);
      v89 = sub_100007E8C(&qword_1011AC5F0);
      v90 = swift_allocObject(v89, 48, 7);
      *(_OWORD *)(v90 + 16) = xmmword_100EA7A80;
      v91 = static Color.clear.getter(v90);
      *(_QWORD *)(v90 + 32) = v91;
      static Color.black.getter(v91);
      v92 = Color.opacity(_:)(0.14);
      swift_release();
      *(_QWORD *)(v90 + 40) = v92;
      *(_QWORD *)&v163 = v90;
      v94 = specialized Array._endMutation()(v93);
      v95 = v163;
      v96 = static UnitPoint.top.getter(v94);
      v98 = v97;
      v99 = static UnitPoint.bottom.getter();
      v101 = v100;
      Gradient.init(colors:)(v95);
      v102 = LinearGradient.init(gradient:startPoint:endPoint:)(&v159, v96, v98, v99, v101);
      v144 = v159;
      v143 = v160;
      v103 = v161;
      v104 = v162;
      v105 = static Alignment.center.getter(v102);
      v107 = _FrameLayout.init(width:height:alignment:)(&v163, 0, 1, 0x406E000000000000, 0, v105, v106);
      v108 = v163;
      v109 = BYTE8(v163);
      *(_QWORD *)&v142 = v164;
      v110 = v165;
      v111 = v152;
      v112 = v167;
      v141 = v166;
      v113 = static Alignment.bottom.getter(v107);
      v115 = v114;
      v116 = v158;
      v117 = v146;
      sub_10004A160(v158, v146, &qword_1011AC5D8);
      v118 = v117 + *(int *)(v145 + 36);
      *(_QWORD *)v118 = v144;
      *(_OWORD *)(v118 + 8) = v143;
      *(_QWORD *)(v118 + 24) = v103;
      *(_QWORD *)(v118 + 32) = v104;
      *(_QWORD *)(v118 + 40) = v108;
      *(_BYTE *)(v118 + 48) = v109;
      *(_QWORD *)(v118 + 56) = v142;
      *(_BYTE *)(v118 + 64) = v110;
      *(_QWORD *)(v118 + 72) = v141;
      *(_QWORD *)(v118 + 80) = v112;
      *(_QWORD *)(v118 + 88) = v113;
      *(_QWORD *)(v118 + 96) = v115;
      sub_10004FF60(v116, &qword_1011AC5D8);
      v119 = *(_QWORD *)(v111 + *(int *)(type metadata accessor for PosterView.BackgroundView(0) + 20));
      v19 = v147;
      v120 = (uint64_t)&v147[*(int *)(v10 + 36)];
      sub_10005B704(v111, v120, type metadata accessor for Poster);
      v121 = v120 + *(int *)(type metadata accessor for PosterView.OverlayTextStack(0) + 20);
      *(_QWORD *)v121 = v119;
      *(_BYTE *)(v121 + 8) = 0;
      sub_100065228(v117, (uint64_t)v19, &qword_1011AC5C0);
      v35 = &qword_1011AC5C8;
      v122 = v151;
      sub_10004A160((uint64_t)v19, v151, &qword_1011AC5C8);
      swift_storeEnumTagMultiPayload(v122, v149, 1);
      v37 = sub_100318264();
      v38 = sub_100318138();
      v39 = (uint64_t)v150;
      v40 = v122;
      v41 = v148;
    }
    else
    {
      *(_QWORD *)v24 = 0x3FF0000000000000;
      *(_WORD *)(v24 + 8) = 256;
      sub_10005B748((uint64_t)v15, type metadata accessor for PosterView.MotionArtwork);
      v25 = type metadata accessor for PosterView.BackgroundView(0);
      v26 = v152;
      v27 = *(_QWORD *)(v152 + *(int *)(v25 + 20));
      v28 = v148;
      v29 = (uint64_t)&v19[*(int *)(v148 + 36)];
      sub_10004A160(v152 + v21[12], v29, &qword_1011AA8D0);
      v30 = v26 + v21[11];
      v31 = (int *)sub_100007E8C(&qword_1011AC650);
      sub_10004A160(v30, v29 + v31[9], (uint64_t *)&unk_1011A3E10);
      sub_10005B704(v26, v29 + v31[10], type metadata accessor for Poster);
      v32 = v31[12];
      v159 = 0;
      v33 = sub_100007E8C(&qword_10119E588);
      State.init(wrappedValue:)(&v159, v33);
      *(_OWORD *)(v29 + v32) = v163;
      v34 = v31[13];
      v159 = 0;
      State.init(wrappedValue:)(&v159, v33);
      *(_OWORD *)(v29 + v34) = v163;
      *(_QWORD *)(v29 + v31[11]) = v27;
      sub_100065228(v158, (uint64_t)v19, &qword_1011AC5D8);
      v35 = &qword_1011AC5E0;
      v36 = v151;
      sub_10004A160((uint64_t)v19, v151, &qword_1011AC5E0);
      swift_storeEnumTagMultiPayload(v36, v149, 0);
      v37 = sub_100318264();
      v38 = sub_100318138();
      v39 = (uint64_t)v150;
      v40 = v36;
      v41 = v28;
    }
    _ConditionalContent<>.init(storage:)(v40, v41, v10, v37, v38);
    sub_10004FF60((uint64_t)v19, v35);
    v123 = &qword_1011AC5E8;
    v124 = v157;
    sub_10004A160(v39, v157, &qword_1011AC5E8);
    swift_storeEnumTagMultiPayload(v124, v156, 0);
    v125 = sub_100318240();
    v126 = sub_1003182E8();
    _ConditionalContent<>.init(storage:)(v124, v155, v154, v125, v126);
    v127 = v39;
  }
  return sub_10004FF60(v127, v123);
}

uint64_t sub_100312460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v66;
  uint64_t EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;

  v2 = v1;
  v100 = a1;
  v3 = sub_100007E8C(&qword_1011AC660);
  __chkstk_darwin(v3);
  v93 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100007E8C(&qword_1011AC668);
  __chkstk_darwin(v98);
  v99 = (uint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011AC670);
  __chkstk_darwin(v6);
  v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v94);
  v10 = (_OWORD *)((char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = sub_100007E8C(&qword_1011AC678);
  __chkstk_darwin(v97);
  v101 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for Poster.CustomBadgeStyle(0);
  __chkstk_darwin(v95);
  v96 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v87 - v14;
  v16 = sub_100007E8C(&qword_1011AC680);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100007E8C(&qword_1011AC688);
  __chkstk_darwin(v19);
  v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Poster.Badge(0);
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v2, (uint64_t)v24, v25);
  v26 = sub_100007E8C(&qword_1011AC088);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v24, 1, v26) == 1)
  {
    v27 = Image.init(systemName:)(0xD000000000000010, 0x8000000100E35F00);
    v28 = enum case for Image.TemplateRenderingMode.template(_:);
    v29 = type metadata accessor for Image.TemplateRenderingMode(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v21, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v21, 0, 1, v29);
    v31 = Image.renderingMode(_:)(v21, v27);
    swift_release();
    v32 = sub_10004FF60((uint64_t)v21, &qword_1011AC688);
    v33 = static Font.title.getter(v32);
    KeyPath = swift_getKeyPath(&unk_100EB49A0);
    static Color.white.getter(KeyPath);
    v35 = Color.opacity(_:)(0.8);
    swift_release();
    v36 = swift_getKeyPath(&unk_100EB49D0);
    *v18 = v31;
    v18[1] = KeyPath;
    v18[2] = v33;
    v18[3] = v36;
    v18[4] = v35;
    swift_storeEnumTagMultiPayload(v18, v16, 0);
    v37 = sub_100007E8C(&qword_1011AC6F0);
    v38 = sub_10031850C();
    v39 = sub_100318614();
    return _ConditionalContent<>.init(storage:)(v18, v37, v6, v38, v39);
  }
  else
  {
    v88 = v18;
    v89 = v3;
    v90 = v8;
    v91 = v16;
    v92 = v6;
    v41 = *v24;
    v42 = v24[1];
    sub_10005B6C0((uint64_t)v24 + *(int *)(v26 + 48), (uint64_t)v15, type metadata accessor for Poster.CustomBadgeStyle);
    v43 = sub_1004872C4((uint64_t)&off_1010AB9B8);
    v44 = Text.init(optional:options:)(v41, v42, v43);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v51 = static Font.subheadline.getter(v44);
    v52 = swift_getKeyPath(&unk_100EB49A0);
    v53 = static Edge.Set.horizontal.getter(v52);
    v54 = EdgeInsets.init(_all:)(8.0);
    v102 = v44;
    v103 = v46;
    v104 = v48;
    v105 = v50;
    v106 = v52;
    v107 = v51;
    v108 = v53;
    v109 = v54;
    v110 = v55;
    v111 = v56;
    v112 = v57;
    v113 = 0;
    v58 = (char *)v10 + *(int *)(v94 + 20);
    v59 = enum case for RoundedCornerStyle.continuous(_:);
    v60 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 104))(v58, v59, v60);
    __asm { FMOV            V0.2D, #10.0 }
    *v10 = _Q0;
    sub_100312B84((uint64_t)v15, (uint64_t)v10, v101);
    sub_10005B748((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    sub_1000E450C(v44, v46, v48, v50);
    swift_release();
    swift_release();
    v66 = v96;
    sub_10005B704((uint64_t)v15, v96, type metadata accessor for Poster.CustomBadgeStyle);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v66, v95);
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v68 = static Color.secondary.getter(EnumCaseMultiPayload);
      v69 = swift_getKeyPath(&unk_100EB49D0);
      v70 = v93;
      sub_10004A160(v101, v93, &qword_1011AC678);
      v71 = v89;
      v72 = (uint64_t *)(v70 + *(int *)(v89 + 36));
      *v72 = v69;
      v72[1] = v68;
      v73 = v99;
      sub_10004A160(v70, v99, &qword_1011AC660);
      swift_storeEnumTagMultiPayload(v73, v98, 1);
      v74 = sub_10031831C();
      v75 = sub_100318488();
      v76 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)(v73, v97, v71, v74, v75);
      sub_10004FF60(v70, &qword_1011AC660);
      sub_10005B748(v66, type metadata accessor for Poster.CustomBadgeStyle);
    }
    else
    {
      swift_release();
      v77 = v99;
      sub_10004A160(v101, v99, &qword_1011AC678);
      swift_storeEnumTagMultiPayload(v77, v98, 0);
      v78 = sub_10031831C();
      v79 = sub_100318488();
      v76 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)(v77, v97, v89, v78, v79);
    }
    v80 = v92;
    v81 = v91;
    v82 = (uint64_t)v88;
    sub_10004A160(v76, (uint64_t)v88, &qword_1011AC670);
    swift_storeEnumTagMultiPayload(v82, v81, 1);
    v83 = sub_100007E8C(&qword_1011AC6F0);
    v84 = v76;
    v85 = sub_10031850C();
    v86 = sub_100318614();
    _ConditionalContent<>.init(storage:)(v82, v83, v80, v85, v86);
    sub_10004FF60(v84, &qword_1011AC670);
    sub_10004FF60(v101, &qword_1011AC678);
    return sub_10005B748((uint64_t)v15, type metadata accessor for Poster.CustomBadgeStyle);
  }
}

uint64_t sub_100312B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = v3;
  v49 = a1;
  v50 = a2;
  v55 = a3;
  v47 = sub_100007E8C(&qword_1011AC6E0);
  __chkstk_darwin(v47);
  v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = sub_100007E8C(&qword_1011AC6D0);
  __chkstk_darwin(v54);
  v8 = (_OWORD *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v48 = (uint64_t)&v44 - v10;
  v52 = sub_100007E8C(&qword_1011AC710);
  __chkstk_darwin(v52);
  v53 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AC6C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100007E8C(&qword_1011AC6A0);
  __chkstk_darwin(v51);
  v16 = (_OWORD *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v46 = (uint64_t)&v44 - v18;
  v45 = type metadata accessor for Material(0);
  v19 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Poster.CustomBadgeStyle(0);
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v49, (uint64_t)v24, v25);
  if (swift_getEnumCaseMultiPayload(v24, v22) == 1)
  {
    v26 = v45;
    (*(void (**)(char *, uint64_t *, uint64_t))(v19 + 32))(v21, v24, v45);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v21, v26);
    sub_10005B704(v50, (uint64_t)&v14[*(int *)(v12 + 52)], (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v14[*(int *)(v12 + 56)] = 256;
    v27 = v51;
    sub_10004A160((uint64_t)v14, (uint64_t)v16 + *(int *)(v51 + 36), &qword_1011AC6C0);
    v28 = *(_OWORD *)(v4 + 48);
    v16[2] = *(_OWORD *)(v4 + 32);
    v16[3] = v28;
    v16[4] = *(_OWORD *)(v4 + 64);
    *(_OWORD *)((char *)v16 + 73) = *(_OWORD *)(v4 + 73);
    v29 = *(_OWORD *)(v4 + 16);
    *v16 = *(_OWORD *)v4;
    v16[1] = v29;
    sub_100318638((uint64_t *)v4);
    sub_10004FF60((uint64_t)v14, &qword_1011AC6C0);
    v30 = v46;
    sub_100065228((uint64_t)v16, v46, &qword_1011AC6A0);
    v31 = v53;
    sub_10004A160(v30, v53, &qword_1011AC6A0);
    swift_storeEnumTagMultiPayload(v31, v52, 0);
    v32 = sub_100318340();
    v33 = sub_1003183E4();
    _ConditionalContent<>.init(storage:)(v31, v27, v54, v32, v33);
    sub_10004FF60(v30, &qword_1011AC6A0);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v26);
  }
  else
  {
    v35 = *v24;
    v36 = v47;
    sub_10005B704(v50, (uint64_t)v6 + *(int *)(v47 + 52), (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *v6 = v35;
    *(_WORD *)((char *)v6 + *(int *)(v36 + 56)) = 256;
    v37 = v54;
    sub_10004A160((uint64_t)v6, (uint64_t)v8 + *(int *)(v54 + 36), &qword_1011AC6E0);
    v38 = *(_OWORD *)(v4 + 48);
    v8[2] = *(_OWORD *)(v4 + 32);
    v8[3] = v38;
    v8[4] = *(_OWORD *)(v4 + 64);
    *(_OWORD *)((char *)v8 + 73) = *(_OWORD *)(v4 + 73);
    v39 = *(_OWORD *)(v4 + 16);
    *v8 = *(_OWORD *)v4;
    v8[1] = v39;
    sub_100318638((uint64_t *)v4);
    swift_retain();
    sub_10004FF60((uint64_t)v6, &qword_1011AC6E0);
    v40 = v48;
    sub_100065228((uint64_t)v8, v48, &qword_1011AC6D0);
    v41 = v53;
    sub_10004A160(v40, v53, &qword_1011AC6D0);
    swift_storeEnumTagMultiPayload(v41, v52, 1);
    v42 = sub_100318340();
    v43 = sub_1003183E4();
    _ConditionalContent<>.init(storage:)(v41, v51, v37, v42, v43);
    swift_release();
    return sub_10004FF60(v40, &qword_1011AC6D0);
  }
}

uint64_t sub_10031300C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v5 = v3;
  v25 = a1;
  v7 = type metadata accessor for PosterView.TextContentView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A2E40);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Poster(0) + 36));
  v14 = static VerticalAlignment.bottom.getter();
  v15 = a3 + *(int *)(sub_100007E8C(&qword_1011AC908) + 36);
  v16 = sub_10005B704(v5, (uint64_t)v9, type metadata accessor for Poster);
  v17 = v5 + *(int *)(a2 + 20);
  v18 = *(double *)v17;
  LOBYTE(a2) = *(_BYTE *)(v17 + 8);
  v19 = static Alignment.center.getter(v16);
  sub_10014A238(0.0, 1, 0.0, 1, 0.0, 1, v18, a2, (uint64_t)v12, 0.0, 1, 0.0, 1, v19, v20);
  sub_10005B748((uint64_t)v9, type metadata accessor for PosterView.TextContentView);
  sub_100065228((uint64_t)v12, v15, &qword_1011A2E40);
  v21 = (_QWORD *)(v15 + *(int *)(sub_100007E8C(&qword_1011AC910) + 36));
  *v21 = v13;
  v21[1] = v14;
  v22 = sub_100007E8C(&qword_1011AC918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a3, v25, v22);
}

uint64_t sub_1003131C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = type metadata accessor for Poster(0);
  sub_10004A160(v1 + *(int *)(v3 + 48), a1, &qword_1011AA8D0);
  v4 = v1 + *(int *)(v3 + 44);
  v5 = (int *)type metadata accessor for MotionArtworkView(0);
  sub_10004A160(v4, a1 + v5[5], (uint64_t *)&unk_1011A3E10);
  v6 = a1 + v5[6];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 10, v7);
  v9 = a1 + v5[7];
  *(_QWORD *)v9 = 0;
  *(_QWORD *)(v9 + 8) = 0;
  *(_BYTE *)(v9 + 16) = 1;
  return result;
}

uint64_t sub_100313280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD v44[2];

  v2 = v1;
  v44[1] = a1;
  v3 = sub_100007E8C(&qword_1011AC920);
  __chkstk_darwin(v3);
  v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = sub_100007E8C(&qword_1011AC928);
  __chkstk_darwin(v44[0]);
  v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v44 - v9;
  v11 = sub_100007E8C(&qword_1011AC930);
  __chkstk_darwin(v11);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PosterView.TextStack(0);
  __chkstk_darwin(v14);
  v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011AC938);
  __chkstk_darwin(v17);
  v19 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v44 - v21;
  v23 = type metadata accessor for Poster(0);
  if (*(char *)(v2 + *(int *)(v23 + 56)) < 0)
  {
    *(_QWORD *)v5 = *(_QWORD *)(v2 + *(int *)(v23 + 36));
    *((_QWORD *)v5 + 1) = 0;
    v5[16] = 1;
    v36 = sub_100007E8C(&qword_1011AC940);
    v37 = sub_1003135E8(v2, &v5[*(int *)(v36 + 44)]);
    v38 = static Edge.Set.all.getter(v37);
    sub_10004A160((uint64_t)v5, (uint64_t)v7, &qword_1011AC920);
    v39 = v44[0];
    v40 = &v7[*(int *)(v44[0] + 36)];
    *v40 = v38;
    *(_OWORD *)(v40 + 8) = xmmword_100EB4640;
    *(_OWORD *)(v40 + 24) = xmmword_100EB4650;
    v40[40] = 0;
    sub_10004FF60((uint64_t)v5, &qword_1011AC920);
    v32 = &qword_1011AC928;
    sub_100065228((uint64_t)v7, (uint64_t)v10, &qword_1011AC928);
    sub_10004A160((uint64_t)v10, (uint64_t)v13, &qword_1011AC928);
    swift_storeEnumTagMultiPayload(v13, v11, 1);
    v41 = sub_10031C738();
    v42 = sub_10031C7BC();
    _ConditionalContent<>.init(storage:)(v13, v17, v39, v41, v42);
    v35 = (uint64_t)v10;
  }
  else
  {
    v24 = sub_10005B704(v2, (uint64_t)v16, type metadata accessor for Poster);
    v25 = static Edge.Set.all.getter(v24);
    sub_10005B704((uint64_t)v16, (uint64_t)v19, type metadata accessor for PosterView.TextStack);
    v26 = &v19[*(int *)(v17 + 36)];
    *v26 = v25;
    __asm { FMOV            V0.2D, #12.0 }
    *(_OWORD *)(v26 + 8) = _Q0;
    *(_OWORD *)(v26 + 24) = _Q0;
    v26[40] = 0;
    sub_10005B748((uint64_t)v16, type metadata accessor for PosterView.TextStack);
    v32 = &qword_1011AC938;
    sub_100065228((uint64_t)v19, (uint64_t)v22, &qword_1011AC938);
    sub_10004A160((uint64_t)v22, (uint64_t)v13, &qword_1011AC938);
    swift_storeEnumTagMultiPayload(v13, v11, 0);
    v33 = sub_10031C738();
    v34 = sub_10031C7BC();
    _ConditionalContent<>.init(storage:)(v13, v17, v44[0], v33, v34);
    v35 = (uint64_t)v22;
  }
  return sub_10004FF60(v35, v32);
}

uint64_t sub_1003135E8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  double v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v39 = a1;
  v45 = a2;
  v3 = type metadata accessor for PosterView.TextStack(0);
  __chkstk_darwin(v3);
  v44 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (uint64_t)&v38 - v6;
  v40 = sub_100007E8C(&qword_1011A0F48);
  v42 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - v9;
  v11 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Poster(0) + 20));
  v12 = *v11;
  v13 = v11[1];
  v14 = sub_1004872C4((uint64_t)&off_1010AB9E0);
  swift_bridgeObjectRetain();
  v15 = Text.init(optional:options:)(v12, v13, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = static Font.title3.getter();
  KeyPath = swift_getKeyPath(&unk_100EB49A0);
  v46 = v15;
  v47 = v17;
  v48 = v19;
  v49 = v21;
  v50 = KeyPath;
  v51 = v22;
  v24 = static Font.Weight.semibold.getter(KeyPath);
  v25 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v26 = sub_1000F59AC();
  View.fontWeight(_:)(*(_QWORD *)&v24, 0, v25, v26);
  sub_1000E450C(v15, v17, v19, v21);
  swift_release();
  swift_release();
  v27 = v43;
  sub_10005B704(v39, v43, type metadata accessor for Poster);
  v28 = v41;
  v29 = v42;
  v30 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v31 = v40;
  v30(v41, v10, v40);
  v32 = v44;
  sub_10005B704(v27, v44, type metadata accessor for PosterView.TextStack);
  v33 = v45;
  v30(v45, v28, v31);
  v34 = sub_100007E8C(&qword_1011AC968);
  v35 = &v33[*(int *)(v34 + 48)];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  sub_10005B704(v32, (uint64_t)&v33[*(int *)(v34 + 64)], type metadata accessor for PosterView.TextStack);
  sub_10005B748(v27, type metadata accessor for PosterView.TextStack);
  v36 = *(void (**)(char *, uint64_t))(v29 + 8);
  v36(v10, v31);
  sub_10005B748(v32, type metadata accessor for PosterView.TextStack);
  return ((uint64_t (*)(char *, uint64_t))v36)(v28, v31);
}

void *sub_100313888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  void *result;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[13];
  _OWORD v53[2];
  _BYTE v54[240];
  char v55;
  _BYTE __src[376];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7AC0;
  v5 = (int *)type metadata accessor for Poster(0);
  v6 = (_QWORD *)(v1 + v5[6]);
  v7 = v6[1];
  *(_QWORD *)(v4 + 32) = *v6;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = (_QWORD *)(v1 + v5[7]);
  v9 = v8[1];
  *(_QWORD *)(v4 + 48) = *v8;
  *(_QWORD *)(v4 + 56) = v9;
  v10 = (_QWORD *)(v1 + v5[8]);
  v11 = v10[1];
  *(_QWORD *)(v4 + 64) = *v10;
  *(_QWORD *)(v4 + 72) = v11;
  v31 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_10016C6D4((void (*)(_QWORD *))sub_10031DEFC, (uint64_t)v30, v4);
  swift_setDeallocating(v4);
  v13 = *(_QWORD *)(v4 + 16);
  v14 = sub_100007E8C(&qword_10119DCA0);
  swift_arrayDestroy(v4 + 32, v13, v14);
  swift_deallocClassInstance(v4, 32, 7);
  v15 = v12[2];
  swift_bridgeObjectRelease(v12);
  v32 = 3;
  v33 = v15;
  v16 = *(_QWORD *)(v1 + v5[9]);
  sub_100313C00(v1, (uint64_t)v52);
  *(_OWORD *)&v54[183] = v52[11];
  *(_OWORD *)&v54[199] = v52[12];
  *(_OWORD *)&v54[215] = v53[0];
  *(_OWORD *)&v54[224] = *(_OWORD *)((char *)v53 + 9);
  *(_OWORD *)&v54[119] = v52[7];
  *(_OWORD *)&v54[135] = v52[8];
  *(_OWORD *)&v54[151] = v52[9];
  *(_OWORD *)&v54[167] = v52[10];
  *(_OWORD *)&v54[55] = v52[3];
  *(_OWORD *)&v54[71] = v52[4];
  *(_OWORD *)&v54[87] = v52[5];
  *(_OWORD *)&v54[103] = v52[6];
  *(_OWORD *)&v54[7] = v52[0];
  *(_OWORD *)&v54[23] = v52[1];
  *(_OWORD *)&v54[39] = v52[2];
  v48 = *(_OWORD *)&v54[176];
  v49 = *(_OWORD *)&v54[192];
  v50 = *(_OWORD *)&v54[208];
  v51 = *(_OWORD *)((char *)v53 + 9);
  v44 = *(_OWORD *)&v54[112];
  v45 = *(_OWORD *)&v54[128];
  v46 = *(_OWORD *)&v54[144];
  v47 = *(_OWORD *)&v54[160];
  v40 = *(_OWORD *)&v54[48];
  v41 = *(_OWORD *)&v54[64];
  v42 = *(_OWORD *)&v54[80];
  v43 = *(_OWORD *)&v54[96];
  v37 = *(_OWORD *)v54;
  v38 = *(_OWORD *)&v54[16];
  v55 = 0;
  v34 = v16;
  v35 = 0;
  v36 = 0;
  v39 = *(_OWORD *)&v54[32];
  v18 = static Alignment.center.getter(v17);
  sub_10014A29C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)__src, v20, 0.0, 1, 0.0, 1, v18, v19);
  v21 = sub_10031DF14((uint64_t *)v52);
  v22 = static HorizontalAlignment.leading.getter(v21);
  v23 = static HorizontalAlignment.== infix(_:_:)(v22, v16);
  v24 = 0;
  if ((v23 & 1) == 0)
  {
    v25 = static HorizontalAlignment.center.getter(v23);
    v26 = static HorizontalAlignment.== infix(_:_:)(v25, v16);
    v24 = 1;
    if ((v26 & 1) == 0)
    {
      v27 = static HorizontalAlignment.trailing.getter(v26);
      if ((static HorizontalAlignment.== infix(_:_:)(v27, v16) & 1) != 0)
        v24 = 2;
      else
        v24 = 1;
    }
  }
  KeyPath = swift_getKeyPath(&unk_100EB4CC0);
  result = memcpy((void *)a1, __src, 0x178uLL);
  *(_QWORD *)(a1 + 376) = KeyPath;
  *(_BYTE *)(a1 + 384) = v24;
  *(_WORD *)(a1 + 385) = 256;
  return result;
}

uint64_t sub_100313B64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = a1[1];
  if (v4 && ((v4 & 0x2000000000000000) != 0 ? (v5 = HIBYTE(v4) & 0xF) : (v5 = *a1 & 0xFFFFFFFFFFFFLL), v5))
  {
    sub_10005B704(a2, a3, type metadata accessor for PosterView.TextStack);
    v6 = type metadata accessor for PosterView.TextStack(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 0, 1, v6);
  }
  else
  {
    v8 = type metadata accessor for PosterView.TextStack(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a3, 1, 1, v8);
  }
}

double sub_100313C00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;

  v4 = type metadata accessor for Poster(0);
  v5 = v4;
  v6 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  v7 = v6[1];
  if (!v7)
    goto LABEL_6;
  v8 = *v6;
  v9 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v9 = v8 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    v51 = static VerticalAlignment.center.getter(v4);
    sub_100313FE0(v8, v7, a1, (uint64_t)v52);
    v46 = v52[0];
    v49 = v53;
    v50 = v52[1];
    v47 = v55;
    v48 = v54;
    v44 = v57;
    v45 = v56;
    v34 = 1;
    v42 = v59;
    v43 = v58;
  }
  else
  {
LABEL_6:
    v51 = 0;
    v34 = 0;
    v46 = 0;
    v49 = 0;
    v50 = 0;
    v47 = 0;
    v48 = 0;
    v44 = 0;
    v45 = 0;
    v42 = 0;
    v43 = 0;
  }
  v10 = (uint64_t *)(a1 + *(int *)(v5 + 28));
  v11 = *v10;
  v12 = v10[1];
  v13 = sub_1004872C4((uint64_t)&off_1010ABA08);
  swift_bridgeObjectRetain();
  v14 = Text.init(optional:options:)(v11, v12, v13);
  v16 = v15;
  v36 = v18;
  v37 = v17;
  v33 = static Font.subheadline.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100EB49A0);
  v32 = sub_100551E8C(3);
  v31 = swift_getKeyPath(&unk_100EB4CF0);
  v19 = (uint64_t *)(a1 + *(int *)(v5 + 32));
  v20 = *v19;
  v21 = v19[1];
  v22 = sub_1004872C4((uint64_t)&off_1010ABA30);
  swift_bridgeObjectRetain();
  v23 = Text.init(optional:options:)(v20, v21, v22);
  v40 = v25;
  v41 = v24;
  v39 = v26;
  v38 = static Font.subheadline.getter(v23);
  v29 = swift_getKeyPath(&unk_100EB49A0);
  v28 = sub_100551E8C(3);
  v30 = swift_getKeyPath(&unk_100EB4CF0);
  LOBYTE(v52[0]) = 0;
  v60 = 0;
  *(_QWORD *)a2 = v51;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v34;
  *(_QWORD *)(a2 + 24) = v46;
  *(_QWORD *)(a2 + 32) = v50;
  *(_QWORD *)(a2 + 40) = v49;
  *(_QWORD *)(a2 + 48) = v48;
  *(_QWORD *)(a2 + 56) = v47;
  *(_QWORD *)(a2 + 64) = v45;
  *(_QWORD *)(a2 + 72) = v44;
  *(_QWORD *)(a2 + 80) = v43;
  *(_QWORD *)(a2 + 88) = v42;
  *(_QWORD *)(a2 + 96) = v14;
  *(_QWORD *)(a2 + 104) = v16;
  *(_QWORD *)(a2 + 112) = v37;
  *(_QWORD *)(a2 + 120) = v36;
  *(_QWORD *)(a2 + 128) = KeyPath;
  *(_QWORD *)(a2 + 136) = v33;
  *(_QWORD *)(a2 + 144) = v31;
  *(_QWORD *)(a2 + 152) = v32;
  *(_BYTE *)(a2 + 160) = 0;
  *(_QWORD *)(a2 + 168) = v23;
  *(_QWORD *)(a2 + 176) = v41;
  *(_QWORD *)(a2 + 184) = v40;
  *(_QWORD *)(a2 + 192) = v39;
  *(_QWORD *)(a2 + 200) = v29;
  *(_QWORD *)(a2 + 208) = v38;
  *(_QWORD *)(a2 + 216) = v30;
  *(_QWORD *)(a2 + 224) = v28;
  *(_BYTE *)(a2 + 232) = 0;
  sub_100154CBC(v51, 0, v34, v46, v50, v49, v48);
  sub_1000E4440(v14, v16, v37, v36);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000E4440(v23, v41, v40, v39);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000E450C(v23, v41, v40, v39);
  swift_release();
  swift_release();
  swift_release();
  sub_1000E450C(v14, v16, v37, v36);
  swift_release();
  swift_release();
  swift_release();
  return sub_10031E00C(v51, 0, v34, v46, v50, v49, v48);
}

double sub_100313FE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  _QWORD v30[2];

  v30[0] = a1;
  v30[1] = a2;
  v5 = sub_100055B68();
  swift_bridgeObjectRetain();
  v6 = Text.init<A>(_:)(v30, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  v14 = static Font.callout.getter(v13);
  v15 = Text.font(_:)(v14, v6, v8, v12, v10);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_release();
  v22 = v19 & 1;
  sub_100055BAC(v6, v8, v12);
  swift_bridgeObjectRelease(v10);
  v23 = sub_100551E8C(2);
  KeyPath = swift_getKeyPath(&unk_100EB4CF0);
  v25 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for Poster(0) + 40));
  swift_retain();
  v27 = static Color.white.getter(v26);
  *(_QWORD *)a4 = v15;
  *(_QWORD *)(a4 + 8) = v17;
  *(_BYTE *)(a4 + 16) = v22;
  *(_QWORD *)(a4 + 24) = v21;
  *(_QWORD *)(a4 + 32) = KeyPath;
  *(_QWORD *)(a4 + 40) = v23;
  *(_BYTE *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = v25;
  *(_QWORD *)(a4 + 64) = v27;
  sub_100055BBC(v15, v17, v22);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BAC(v15, v17, v22);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  return result;
}

uint64_t sub_10031414C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B6C0(a1, a2, type metadata accessor for Poster);
  v8 = (int *)type metadata accessor for PosterView(0);
  v9 = a2 + v8[5];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_100EB4790);
  *(_BYTE *)(v9 + 8) = 0;
  v10 = (_QWORD *)(a2 + v8[6]);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v12 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v10 = EnvironmentObject.init()(v11, v12);
  v10[1] = v13;
  v14 = (_QWORD *)(a2 + v8[7]);
  v15 = type metadata accessor for NoticePresenter(0);
  v16 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v14 = EnvironmentObject.init()(v15, v16);
  v14[1] = v17;
  v18 = a2 + v8[8];
  *(_QWORD *)v18 = sub_1000DEC04;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  v19 = (_QWORD *)(a2 + v8[9]);
  v20 = type metadata accessor for NavigationPusher();
  v21 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v19 = EnvironmentObject.init()(v20, v21);
  v19[1] = v22;
  v23 = (_QWORD *)(a2 + v8[10]);
  v24 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v25 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v23 = EnvironmentObject.init()(v24, v25);
  v23[1] = v26;
  v27 = (_QWORD *)(a2 + v8[11]);
  v28 = type metadata accessor for TabSelectionManager(0);
  v29 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v27 = EnvironmentObject.init()(v28, v29);
  v27[1] = v30;
  v31 = a2 + v8[12];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100EB47B8);
  *(_QWORD *)(v31 + 8) = 0;
  *(_BYTE *)(v31 + 16) = 0;
  v32 = a2 + v8[13];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100EB47E0);
  *(_QWORD *)(v32 + 8) = 0;
  *(_BYTE *)(v32 + 16) = 0;
  v33 = a2 + v8[14];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_100EB4808);
  *(_QWORD *)(v33 + 8) = 0;
  *(_QWORD *)(v33 + 16) = 0;
  *(_QWORD *)(v33 + 24) = 0;
  *(_BYTE *)(v33 + 32) = 0;
  v37 = 0x4054800000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.title3(_:), v4);
  v34 = sub_1002011C4();
  return ScaledMetric.init(wrappedValue:relativeTo:)(&v37, v7, &type metadata for Double, v34);
}

uint64_t sub_100314430(_QWORD *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(__n128);
  char v15;
  uint64_t (*v16)(void);
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = type metadata accessor for Logger(0);
  v50 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - v8;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v49 - v12;
  v14 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x4C8);
  v15 = v14(v11);
  v16 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x4B0);
  v17 = v16();
  v18 = v17;
  if ((a2 & 1) != 0)
  {
    if (v15 == 2)
      goto LABEL_5;
    if ((v15 & 1) == 0)
    {
      if ((v17 & 1) != 0)
      {

        return 1;
      }
      v28 = Logger.scripting.unsafeMutableAddressor();
      v29 = v50;
      v30 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v9, v28, v4);
      v31 = a1;
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc(22, -1);
        v35 = swift_slowAlloc(64, -1);
        v52 = v35;
        *(_DWORD *)v34 = 136446466;
        v49 = v30;
        LOBYTE(v51) = ((uint64_t (*)(void))v14)();
        v36 = sub_100007E8C(&qword_1011A3670);
        v37 = String.init<A>(describing:)(&v51, v36);
        v51 = sub_100322200(v37, v38, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);

        v39 = swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2082;
        LOBYTE(v51) = ((uint64_t (*)(__n128))v16)(v39);
        v40 = String.init<A>(describing:)(&v51, v36);
        v51 = sub_100322200(v40, v41, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Poster.Layout.standard default fallback with isChinEnabled=%{public}s and %{public}s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v49);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v4);
      }
      return 0;
    }
    if ((v17 & 1) == 0)
    {
LABEL_5:

    }
    else
    {
      v42 = Logger.scripting.unsafeMutableAddressor();
      v43 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v13, v42, v4);
      v44 = a1;
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v47 = 67240192;
        v48 = (((uint64_t (*)(void))v14)() & 1) != 0 && (v16() & 1) != 0;
        LODWORD(v52) = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 4);

        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Malformed JSPosterItem. Both isChinEnabled + isGradientEnabled=%{BOOL,public}d. Ignoring isGradientEnabled.", v47, 8u);
        swift_slowDealloc(v47, -1, -1);
        v43 = v50;
      }
      else
      {

        v45 = v44;
      }

      (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v4);
    }
    return 0;
  }
  if ((v15 & 1) != 0)
  {
    v20 = Logger.scripting.unsafeMutableAddressor();
    v21 = v50;
    v22 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v6, v20, v4);
    v23 = a1;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v26 = 67240192;
      LOBYTE(v52) = ((uint64_t (*)(void))v14)() & 1;
      LODWORD(v52) = v52;
      v22 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 4);

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "isChinEnabled=%{BOOL,public}d. Not supported on Billboards.", v26, 8u);
      v27 = v26;
      v21 = v50;
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {

      v24 = v23;
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
    return 128;
  }
  else
  {

    return v18 & 1 ^ 0xFFFFFF81;
  }
}

uint64_t type metadata accessor for PosterView.BackgroundView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC560, (uint64_t)&nominal type descriptor for PosterView.BackgroundView);
}

unint64_t sub_100314970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC390;
  if (!qword_1011AC390)
  {
    v1 = sub_100044B54(&qword_1011AC348);
    sub_100048748(&qword_1011AC398, type metadata accessor for PosterView.BackgroundView, (uint64_t)&unk_100EB4950);
    sub_100049F28(&qword_1011AC3A0, &qword_1011AC388, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC390);
  }
  return result;
}

unint64_t sub_100314A0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011AC3A8;
  if (!qword_1011AC3A8)
  {
    v1 = sub_100044B54(&qword_1011AC358);
    v2[0] = sub_100044B54(&qword_1011AC348);
    v2[1] = sub_100314970();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC3A8);
  }
  return result;
}

uint64_t sub_100314AB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10031165C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100314AC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC3B8;
  if (!qword_1011AC3B8)
  {
    v1 = sub_100044B54(&qword_1011AC3B0);
    sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC3B8);
  }
  return result;
}

uint64_t sub_100314B44()
{
  return 16;
}

__n128 sub_100314B50(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_100314B5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  result = qword_1011AC3D0;
  if (!qword_1011AC3D0)
  {
    v1 = sub_100044B54(&qword_1011AC3C8);
    v2 = sub_100044B54(&qword_1011AC370);
    v3 = sub_100044B54(&qword_1011AC368);
    v4 = sub_100044B54(&qword_1011AC3B0);
    v5 = sub_100044B54(&qword_1011AC360);
    v11 = sub_100044B54(&qword_1011AC358);
    v12 = (ValueMetadata *)sub_100314A0C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v11 = v5;
    v12 = (ValueMetadata *)OpaqueTypeConformance2;
    v7 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v8 = sub_1000E3EE4();
    v9 = sub_100314AC0();
    v11 = v3;
    v12 = &type metadata for ActionType;
    v13 = v4;
    v14 = v7;
    v15 = v8;
    v16 = v9;
    v10 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v11 = v2;
    v12 = (ValueMetadata *)v10;
    swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    sub_100049F28(&qword_1011AC3D8, &qword_1011AC3E0, (uint64_t)&unk_100EBB0D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC3D0);
  }
  return result;
}

uint64_t type metadata accessor for PosterView.BadgeView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC4D0, (uint64_t)&nominal type descriptor for PosterView.BadgeView);
}

unint64_t sub_100314CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC430;
  if (!qword_1011AC430)
  {
    v1 = sub_100044B54(&qword_1011AC428);
    sub_100238A3C();
    sub_100049F28(&qword_1011AC3D8, &qword_1011AC3E0, (uint64_t)&unk_100EBB0D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC430);
  }
  return result;
}

uint64_t *sub_100314D68(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(type metadata accessor for Poster.Badge(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_100007E8C(&qword_1011AC088);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(v6 + 48);
      v11 = (uint64_t *)((char *)a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v13 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
      {
        v14 = type metadata accessor for Material(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
        v15 = 1;
      }
      else
      {
        *v11 = *v12;
        swift_retain();
        v15 = 0;
      }
      swift_storeEnumTagMultiPayload(v11, v13, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

_QWORD *sub_100314EB0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_100007E8C(&qword_1011AC088);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for Poster.Badge(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v4 + 48);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for Poster.CustomBadgeStyle(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for Material(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_100314FD0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_100007E8C(&qword_1011AC088);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v9 = *(int *)(v4 + 48);
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
      {
        v13 = type metadata accessor for Material(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
        v14 = 1;
      }
      else
      {
        *v10 = *v11;
        swift_retain();
        v14 = 0;
      }
      swift_storeEnumTagMultiPayload(v10, v12, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      return a1;
    }
LABEL_7:
    v15 = type metadata accessor for Poster.Badge(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011AC088);
    goto LABEL_7;
  }
  *a1 = *a2;
  v16 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  if (a1 != a2)
  {
    v17 = *(int *)(v4 + 48);
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    sub_10005B748((uint64_t)a1 + v17, type metadata accessor for Poster.CustomBadgeStyle);
    v20 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for Material(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
      swift_storeEnumTagMultiPayload(v18, v20, 0);
    }
  }
  return a1;
}

_OWORD *sub_1003151DC(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_100007E8C(&qword_1011AC088);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for Poster.Badge(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(v4 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1003152F0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_100007E8C(&qword_1011AC088);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v16 = *((_QWORD *)a2 + 1);
      v17 = *((_QWORD *)a1 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v16;
      swift_bridgeObjectRelease(v17);
      if (a1 == a2)
        return a1;
      v18 = *(int *)(v4 + 48);
      v19 = &a1[v18];
      a2 += v18;
      sub_10005B748((uint64_t)&a1[v18], type metadata accessor for Poster.CustomBadgeStyle);
      v20 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(a2, v20) == 1)
      {
        v21 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, a2, v21);
        swift_storeEnumTagMultiPayload(v19, v20, 1);
        return a1;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64);
      v15 = v19;
      goto LABEL_8;
    }
    sub_10004FF60((uint64_t)a1, &qword_1011AC088);
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Poster.Badge(0) - 8) + 64);
    v15 = a1;
LABEL_8:
    memcpy(v15, a2, v14);
    return a1;
  }
  if (v8)
    goto LABEL_7;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(int *)(v4 + 48);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Poster.CustomBadgeStyle(0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for Material(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1003154C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003154D4);
}

uint64_t sub_1003154D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Poster.Badge);
}

uint64_t sub_1003154E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003154EC);
}

uint64_t sub_1003154EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Poster.Badge);
}

uint64_t sub_1003154F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201510(a1, a2, a3, type metadata accessor for Poster.Badge);
}

uint64_t *sub_100315504(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *__dst;
  uint64_t *v94;
  unsigned int (*v95)(uint64_t *, uint64_t, uint64_t);
  uint64_t v96;
  int *v97;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v95 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v91 = v8;
    v92 = a3;
    v96 = v7;
    if (v95(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for Poster(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v11[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v11[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(uint64_t *)((char *)a1 + v11[9]) = *(uint64_t *)((char *)a2 + v11[9]);
    *(uint64_t *)((char *)a1 + v11[10]) = *(uint64_t *)((char *)a2 + v11[10]);
    v97 = v11;
    v28 = v11[11];
    __dst = (char *)a1 + v28;
    v94 = a2;
    v29 = (char *)a2 + v28;
    v30 = type metadata accessor for ArtworkImage.ViewModel(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = swift_retain();
    if (v32(v29, 1, v30, v33))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v35 = v97;
    }
    else
    {
      v36 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(__dst, v29, v36);
      v37 = *(int *)(v30 + 20);
      v38 = &__dst[v37];
      v39 = &v29[v37];
      v40 = type metadata accessor for Artwork.CropStyle(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v35 = v97;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    v43 = v35[12];
    v44 = (char *)a1 + v43;
    v45 = (char *)v94 + v43;
    v46 = type metadata accessor for MotionViewModel(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v44, v45, v49);
      v50 = *(int *)(v46 + 20);
      v51 = &v44[v50];
      v52 = &v45[v50];
      v53 = type metadata accessor for Artwork.CropStyle(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v56 = v35[13];
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)v94 + v56);
    v59 = type metadata accessor for Poster.Badge(0);
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = sub_100007E8C(&qword_1011AC090);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      v62 = v92;
    }
    else
    {
      v63 = sub_100007E8C(&qword_1011AC088);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v64 + 48))(v58, 1, v63))
      {
        memcpy(v57, v58, *(_QWORD *)(v60 + 64));
      }
      else
      {
        v90 = v64;
        v65 = v58[1];
        *v57 = *v58;
        v57[1] = v65;
        v66 = *(int *)(v63 + 48);
        v89 = (_QWORD *)((char *)v57 + v66);
        v67 = (_QWORD *)((char *)v58 + v66);
        v68 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
        {
          v69 = type metadata accessor for Material(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v89, v67, v69);
          v70 = 1;
        }
        else
        {
          *v89 = *v67;
          swift_retain();
          v70 = 0;
        }
        swift_storeEnumTagMultiPayload(v89, v68, v70);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v57, 0, 1, v63);
      }
      v62 = v92;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    *((_BYTE *)a1 + v35[14]) = *((_BYTE *)v94 + v35[14]);
    v71 = v35[15];
    v72 = (char *)a1 + v71;
    v73 = (char *)v94 + v71;
    v74 = *(void **)((char *)v94 + v71);
    *(uint64_t *)((char *)a1 + v71) = (uint64_t)v74;
    v75 = (int *)type metadata accessor for SegueContext(0);
    v76 = v75[5];
    v77 = &v72[v76];
    v78 = &v73[v76];
    v79 = v74;
    if (v95((uint64_t *)v78, 1, v96))
    {
      v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v77, v78, v96);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v77, 0, 1, v96);
    }
    v72[v75[6]] = v73[v75[6]];
    v81 = v75[7];
    v82 = &v72[v81];
    v83 = &v73[v81];
    if (*(_QWORD *)v83)
    {
      v84 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v84;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v82 = *(_OWORD *)v83;
    }
    v85 = v97[16];
    v86 = *(void **)((char *)v94 + v85);
    *(uint64_t *)((char *)a1 + v85) = (uint64_t)v86;
    *(uint64_t *)((char *)a1 + *(int *)(v62 + 20)) = *(uint64_t *)((char *)v94 + *(int *)(v62 + 20));
    v87 = v86;
  }
  return a1;
}

char *sub_100315B44(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  int *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *__dst;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  int *v97;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v93 = a3;
  v96 = v6;
  v90 = v7;
  if (v95(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Poster(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v18 = v9[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = v9[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  v97 = v9;
  v26 = v9[11];
  __dst = &a1[v26];
  v91 = a2;
  v27 = &a2[v26];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = swift_retain();
  if (v30(v27, 1, v28, v31))
  {
    v32 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    v33 = v97;
    v34 = v91;
  }
  else
  {
    v35 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(__dst, v27, v35);
    v36 = *(int *)(v28 + 20);
    v37 = &__dst[v36];
    v38 = &v27[v36];
    v39 = type metadata accessor for Artwork.CropStyle(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v33 = v97;
    v42 = v29;
    v34 = v91;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v28);
  }
  v43 = v33[12];
  v44 = &a1[v43];
  v45 = &v34[v43];
  v46 = type metadata accessor for MotionViewModel(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v49 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v44, v45, v49);
    v50 = *(int *)(v46 + 20);
    v51 = &v44[v50];
    v52 = &v45[v50];
    v53 = type metadata accessor for Artwork.CropStyle(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v56 = v33[13];
  v57 = &a1[v56];
  v58 = &v34[v56];
  v59 = type metadata accessor for Poster.Badge(0);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = sub_100007E8C(&qword_1011AC090);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    v62 = v93;
  }
  else
  {
    v63 = sub_100007E8C(&qword_1011AC088);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v58, 1, v63))
    {
      memcpy(v57, v58, *(_QWORD *)(v60 + 64));
    }
    else
    {
      v65 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v65;
      v66 = *(int *)(v63 + 48);
      v89 = &v57[v66];
      v92 = v64;
      v67 = &v58[v66];
      v68 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
      {
        v69 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v89, v67, v69);
        v70 = 1;
      }
      else
      {
        *(_QWORD *)v89 = *(_QWORD *)v67;
        swift_retain();
        v70 = 0;
      }
      swift_storeEnumTagMultiPayload(v89, v68, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v57, 0, 1, v63);
    }
    v62 = v93;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  a1[v33[14]] = v34[v33[14]];
  v71 = v33[15];
  v72 = &a1[v71];
  v73 = &v34[v71];
  v74 = *(void **)&v34[v71];
  *(_QWORD *)&a1[v71] = v74;
  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = v74;
  if (v95(v78, 1, v96))
  {
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v77, v78, v96);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v77, 0, 1, v96);
  }
  v72[v75[6]] = v73[v75[6]];
  v81 = v75[7];
  v82 = &v72[v81];
  v83 = &v73[v81];
  if (*(_QWORD *)v83)
  {
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v82 = *(_OWORD *)v83;
  }
  v85 = v97[16];
  v86 = *(void **)&v34[v85];
  *(_QWORD *)&a1[v85] = v86;
  *(_QWORD *)&a1[*(int *)(v62 + 20)] = *(_QWORD *)&v34[*(int *)(v62 + 20)];
  v87 = v86;
  return a1;
}

char *sub_100316168(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  size_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void *, uint64_t, uint64_t);
  int v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  size_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);
  int v96;
  int v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void **v110;
  char *v111;
  void *v112;
  void *v113;
  id v114;
  int *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  id v130;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t (*v143)(char *, uint64_t, uint64_t);
  uint64_t v144;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v144 = v6;
  v10 = v8(a2, 1, v6);
  v140 = v7;
  v143 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Poster(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = v12[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = v12[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = v12[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_retain();
  swift_release();
  v29 = v12[11];
  v30 = (uint64_t)&a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for ArtworkImage.ViewModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  LODWORD(v28) = v34(v30, 1, v32);
  v35 = v34((uint64_t)v31, 1, v32);
  v141 = a3;
  if (!(_DWORD)v28)
  {
    if (!v35)
    {
      v46 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v30, v31, v46);
      v47 = *(int *)(v32 + 20);
      v48 = (void *)(v30 + v47);
      v49 = &v31[v47];
      v50 = type metadata accessor for Artwork.CropStyle(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
      v53 = v52(v48, 1, v50);
      v54 = v52(v49, 1, v50);
      if (v53)
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
      }
      v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v44 = v48;
      v45 = v49;
LABEL_14:
      memcpy(v44, v45, v43);
      goto LABEL_21;
    }
    sub_10005B748(v30, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v44 = (void *)v30;
    v45 = v31;
    goto LABEL_14;
  }
  if (v35)
    goto LABEL_13;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v30, v31, v36);
  v37 = *(int *)(v32 + 20);
  v38 = (void *)(v30 + v37);
  v39 = &v31[v37];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_21:
  v55 = v12[12];
  v56 = (uint64_t)&a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for MotionViewModel(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60((uint64_t)v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      v73 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v56, v57, v73);
      v74 = *(int *)(v58 + 20);
      v75 = (void *)(v56 + v74);
      v76 = &v57[v74];
      v77 = type metadata accessor for Artwork.CropStyle(0);
      v78 = *(_QWORD *)(v77 - 8);
      v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
      v80 = v79(v75, 1, v77);
      v81 = v79(v76, 1, v77);
      if (v80)
      {
        if (!v81)
        {
          (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v81)
        {
          (*(void (**)(void *, char *, uint64_t))(v78 + 24))(v75, v76, v77);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
      }
      v70 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v71 = v75;
      v72 = v76;
LABEL_28:
      memcpy(v71, v72, v70);
      goto LABEL_34;
    }
    sub_10005B748(v56, type metadata accessor for MotionViewModel);
LABEL_27:
    v70 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v71 = (void *)v56;
    v72 = v57;
    goto LABEL_28;
  }
  if (v62)
    goto LABEL_27;
  v63 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v56, v57, v63);
  v64 = *(int *)(v58 + 20);
  v65 = (void *)(v56 + v64);
  v66 = &v57[v64];
  v67 = type metadata accessor for Artwork.CropStyle(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    v69 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_34:
  v82 = v12[13];
  v83 = &a1[v82];
  v84 = &a2[v82];
  v85 = type metadata accessor for Poster.Badge(0);
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  v88 = v87(v83, 1, v85);
  v89 = v87(v84, 1, v85);
  if (v88)
  {
    if (!v89)
    {
      v90 = sub_100007E8C(&qword_1011AC088);
      v91 = *(_QWORD *)(v90 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v84, 1, v90))
      {
        memcpy(v83, v84, *(_QWORD *)(v86 + 64));
      }
      else
      {
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
        v104 = *(int *)(v90 + 48);
        v139 = &v83[v104];
        v142 = &v84[v104];
        v105 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        v138 = v105;
        if (swift_getEnumCaseMultiPayload(v142, v105) == 1)
        {
          v106 = type metadata accessor for Material(0);
          v107 = v139;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v139, v142, v106);
          v108 = 1;
        }
        else
        {
          v107 = v139;
          *(_QWORD *)v139 = *(_QWORD *)v142;
          swift_retain();
          v108 = 0;
        }
        swift_storeEnumTagMultiPayload(v107, v138, v108);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v83, 0, 1, v90);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v89)
  {
    sub_10005B748((uint64_t)v83, type metadata accessor for Poster.Badge);
LABEL_40:
    v92 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8) + 64);
LABEL_41:
    memcpy(v83, v84, v92);
    goto LABEL_60;
  }
  v93 = sub_100007E8C(&qword_1011AC088);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
  v96 = v95(v83, 1, v93);
  v97 = v95(v84, 1, v93);
  if (v96)
  {
    if (!v97)
    {
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      v98 = *(int *)(v93 + 48);
      v99 = &v83[v98];
      v100 = &v84[v98];
      v101 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v100, v101) == 1)
      {
        v102 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v99, v100, v102);
        v103 = 1;
      }
      else
      {
        *(_QWORD *)v99 = *(_QWORD *)v100;
        swift_retain();
        v103 = 0;
      }
      swift_storeEnumTagMultiPayload(v99, v101, v103);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v83, 0, 1, v93);
      goto LABEL_60;
    }
    goto LABEL_56;
  }
  if (v97)
  {
    sub_10004FF60((uint64_t)v83, &qword_1011AC088);
LABEL_56:
    v92 = *(_QWORD *)(v86 + 64);
    goto LABEL_41;
  }
  *(_QWORD *)v83 = *(_QWORD *)v84;
  v132 = *((_QWORD *)v83 + 1);
  *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v132);
  if (a1 != a2)
  {
    v133 = *(int *)(v93 + 48);
    v134 = &v83[v133];
    v135 = &v84[v133];
    sub_10005B748((uint64_t)v134, type metadata accessor for Poster.CustomBadgeStyle);
    v136 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v135, v136) == 1)
    {
      v137 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v134, v135, v137);
      swift_storeEnumTagMultiPayload(v134, v136, 1);
    }
    else
    {
      *(_QWORD *)v134 = *(_QWORD *)v135;
      swift_retain();
      swift_storeEnumTagMultiPayload(v134, v136, 0);
    }
  }
LABEL_60:
  a1[v12[14]] = a2[v12[14]];
  v109 = v12[15];
  v110 = (void **)&a1[v109];
  v111 = &a2[v109];
  v112 = *(void **)&a2[v109];
  v113 = *v110;
  *v110 = v112;
  v114 = v112;

  v115 = (int *)type metadata accessor for SegueContext(0);
  v116 = v115[5];
  v117 = (char *)v110 + v116;
  v118 = &v111[v116];
  LODWORD(v113) = v143((char *)v110 + v116, 1, v144);
  v119 = v143(v118, 1, v144);
  if ((_DWORD)v113)
  {
    if (!v119)
    {
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v117, v118, v144);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v117, 0, 1, v144);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v119)
  {
    (*(void (**)(char *, uint64_t))(v140 + 8))(v117, v144);
LABEL_65:
    v120 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(v140 + 24))(v117, v118, v144);
LABEL_66:
  *((_BYTE *)v110 + v115[6]) = v111[v115[6]];
  v121 = v115[7];
  v122 = (void **)((char *)v110 + v121);
  v123 = &v111[v121];
  v124 = *(_QWORD *)&v111[v121];
  if (!*v122)
  {
    if (v124)
    {
      v126 = *((_QWORD *)v123 + 1);
      *v122 = v124;
      v122[1] = v126;
      swift_retain();
      goto LABEL_73;
    }
LABEL_72:
    *(_OWORD *)v122 = *(_OWORD *)v123;
    goto LABEL_73;
  }
  if (!v124)
  {
    swift_release();
    goto LABEL_72;
  }
  v125 = *((_QWORD *)v123 + 1);
  *v122 = v124;
  v122[1] = v125;
  swift_retain();
  swift_release();
LABEL_73:
  v127 = v12[16];
  v128 = *(void **)&a1[v127];
  v129 = *(void **)&a2[v127];
  *(_QWORD *)&a1[v127] = v129;
  v130 = v129;

  *(_QWORD *)&a1[*(int *)(v141 + 20)] = *(_QWORD *)&a2[*(int *)(v141 + 20)];
  return a1;
}

char *sub_100316C90(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *__src;
  uint64_t v65;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  char *__dstb;
  uint64_t v69;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v69 = v5;
  v65 = v6;
  if (v7(a2, 1, v5))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v9 = (int *)type metadata accessor for Poster(0);
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  v10 = v9[11];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    __dst = v7;
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    v18 = &v11[v17];
    v19 = &v12[v17];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v7 = __dst;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v23 = v9[12];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for MotionViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    __dsta = v7;
    v29 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v24, v25, v29);
    v30 = *(int *)(v26 + 20);
    v31 = &v24[v30];
    v32 = &v25[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v7 = __dsta;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v36 = v9[13];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for Poster.Badge(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C(&qword_1011AC090);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = sub_100007E8C(&qword_1011AC088);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      memcpy(v37, v38, *(_QWORD *)(v40 + 64));
    }
    else
    {
      *(_OWORD *)v37 = *(_OWORD *)v38;
      v44 = *(int *)(v42 + 48);
      __dstb = &v37[v44];
      v45 = &v38[v44];
      v46 = type metadata accessor for Poster.CustomBadgeStyle(0);
      __src = v45;
      v47 = v45;
      v48 = v46;
      if (swift_getEnumCaseMultiPayload(v47, v46) == 1)
      {
        v49 = type metadata accessor for Material(0);
        (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(__dstb, __src, v49);
        swift_storeEnumTagMultiPayload(__dstb, v48, 1);
      }
      else
      {
        memcpy(__dstb, __src, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  a1[v9[14]] = a2[v9[14]];
  v50 = v9[15];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *(_QWORD *)&a1[v50] = *(_QWORD *)&a2[v50];
  v53 = (int *)type metadata accessor for SegueContext(0);
  v54 = v53[5];
  v55 = &v51[v54];
  v56 = &v52[v54];
  if (v7(&v52[v54], 1, v69))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v55, v56, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v55, 0, 1, v69);
  }
  v51[v53[6]] = v52[v53[6]];
  v58 = v53[7];
  v59 = &v51[v58];
  v60 = &v52[v58];
  v61 = *(_QWORD *)v60;
  if (*(_QWORD *)v60)
  {
    v62 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = v61;
    *((_QWORD *)v59 + 1) = v62;
  }
  else
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
  }
  *(_QWORD *)&a1[v9[16]] = *(_QWORD *)&a2[v9[16]];
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100317230(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  size_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  size_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void *v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  char *__dst;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(char *, uint64_t, uint64_t);
  uint64_t v147;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v147 = v6;
  v10 = v8(a2, 1, v6);
  v144 = v7;
  v145 = a3;
  v146 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Poster(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease(v30);
  v31 = v12[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  v36 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_release();
  v37 = v12[11];
  v38 = (uint64_t)&a1[v37];
  v39 = &a2[v37];
  v40 = type metadata accessor for ArtworkImage.ViewModel(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42((uint64_t)v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      v55 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v38, v39, v55);
      v56 = *(int *)(v40 + 20);
      v57 = (void *)(v38 + v56);
      v58 = &v39[v56];
      v59 = type metadata accessor for Artwork.CropStyle(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v57, 1, v59);
      v63 = v61(v58, 1, v59);
      if (v62)
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 40))(v57, v58, v59);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v60 + 8))(v57, v59);
      }
      v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v53 = v57;
      v54 = v58;
LABEL_14:
      memcpy(v53, v54, v52);
      goto LABEL_21;
    }
    sub_10005B748(v38, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v53 = (void *)v38;
    v54 = v39;
    goto LABEL_14;
  }
  if (v44)
    goto LABEL_13;
  v45 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v38, v39, v45);
  v46 = *(int *)(v40 + 20);
  v47 = (void *)(v38 + v46);
  v48 = &v39[v46];
  v49 = type metadata accessor for Artwork.CropStyle(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_21:
  v64 = v12[12];
  v65 = (uint64_t)&a1[v64];
  v66 = &a2[v64];
  v67 = type metadata accessor for MotionViewModel(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69((uint64_t)v66, 1, v67);
  if (!v70)
  {
    if (!v71)
    {
      v82 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v65, v66, v82);
      v83 = *(int *)(v67 + 20);
      v84 = (void *)(v65 + v83);
      v85 = &v66[v83];
      v86 = type metadata accessor for Artwork.CropStyle(0);
      v87 = *(_QWORD *)(v86 - 8);
      v88 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v87 + 48);
      v89 = v88(v84, 1, v86);
      v90 = v88(v85, 1, v86);
      if (v89)
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 40))(v84, v85, v86);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v87 + 8))(v84, v86);
      }
      v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v80 = v84;
      v81 = v85;
LABEL_28:
      memcpy(v80, v81, v79);
      goto LABEL_34;
    }
    sub_10005B748(v65, type metadata accessor for MotionViewModel);
LABEL_27:
    v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v80 = (void *)v65;
    v81 = v66;
    goto LABEL_28;
  }
  if (v71)
    goto LABEL_27;
  v72 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v65, v66, v72);
  v73 = *(int *)(v67 + 20);
  v74 = (void *)(v65 + v73);
  v75 = &v66[v73];
  v76 = type metadata accessor for Artwork.CropStyle(0);
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_34:
  v91 = v12[13];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v94 = type metadata accessor for Poster.Badge(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      v99 = sub_100007E8C(&qword_1011AC088);
      v100 = *(_QWORD *)(v99 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v93, 1, v99))
      {
        memcpy(v92, v93, *(_QWORD *)(v95 + 64));
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      }
      else
      {
        *(_OWORD *)v92 = *(_OWORD *)v93;
        v113 = *(int *)(v99 + 48);
        __dst = &v92[v113];
        v114 = &v93[v113];
        v115 = type metadata accessor for Poster.CustomBadgeStyle(0);
        if (swift_getEnumCaseMultiPayload(v114, v115) == 1)
        {
          v116 = type metadata accessor for Material(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(__dst, v114, v116);
          swift_storeEnumTagMultiPayload(__dst, v115, 1);
        }
        else
        {
          memcpy(__dst, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v92, 0, 1, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      }
      goto LABEL_67;
    }
    goto LABEL_40;
  }
  if (v98)
  {
    sub_10005B748((uint64_t)v92, type metadata accessor for Poster.Badge);
LABEL_40:
    v101 = *(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8);
LABEL_41:
    v102 = *(_QWORD *)(v101 + 64);
LABEL_42:
    memcpy(v92, v93, v102);
    goto LABEL_67;
  }
  v103 = sub_100007E8C(&qword_1011AC088);
  v104 = *(_QWORD *)(v103 - 8);
  v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
  v106 = v105(v92, 1, v103);
  v107 = v105(v93, 1, v103);
  if (!v106)
  {
    if (!v107)
    {
      v117 = *((_QWORD *)v93 + 1);
      v118 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = v117;
      swift_bridgeObjectRelease(v118);
      if (a1 == a2)
        goto LABEL_67;
      v119 = *(int *)(v103 + 48);
      v92 += v119;
      v93 += v119;
      sub_10005B748((uint64_t)v92, type metadata accessor for Poster.CustomBadgeStyle);
      v120 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(v93, v120) == 1)
      {
        v121 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v92, v93, v121);
        swift_storeEnumTagMultiPayload(v92, v120, 1);
        goto LABEL_67;
      }
      v101 = *(_QWORD *)(v120 - 8);
      goto LABEL_41;
    }
    sub_10004FF60((uint64_t)v92, &qword_1011AC088);
LABEL_57:
    v102 = *(_QWORD *)(v95 + 64);
    goto LABEL_42;
  }
  if (v107)
    goto LABEL_57;
  *(_OWORD *)v92 = *(_OWORD *)v93;
  v108 = *(int *)(v103 + 48);
  v109 = &v92[v108];
  v110 = &v93[v108];
  v111 = type metadata accessor for Poster.CustomBadgeStyle(0);
  if (swift_getEnumCaseMultiPayload(v110, v111) == 1)
  {
    v112 = type metadata accessor for Material(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v109, v110, v112);
    swift_storeEnumTagMultiPayload(v109, v111, 1);
  }
  else
  {
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v92, 0, 1, v103);
LABEL_67:
  a1[v12[14]] = a2[v12[14]];
  v122 = v12[15];
  v123 = &a1[v122];
  v124 = &a2[v122];
  v125 = *(void **)&a1[v122];
  *(_QWORD *)v123 = *(_QWORD *)&a2[v122];

  v126 = (int *)type metadata accessor for SegueContext(0);
  v127 = v126[5];
  v128 = &v123[v127];
  v129 = &v124[v127];
  v130 = v146(&v123[v127], 1, v147);
  v131 = v146(v129, 1, v147);
  if (v130)
  {
    if (!v131)
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v128, v129, v147);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v128, 0, 1, v147);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v131)
  {
    (*(void (**)(char *, uint64_t))(v144 + 8))(v128, v147);
LABEL_72:
    v132 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v144 + 40))(v128, v129, v147);
LABEL_73:
  v123[v126[6]] = v124[v126[6]];
  v133 = v126[7];
  v134 = &v123[v133];
  v135 = &v124[v133];
  v136 = *(_QWORD *)&v123[v133];
  v137 = *(_QWORD *)&v124[v133];
  if (!v136)
  {
    if (v137)
    {
      v139 = *((_QWORD *)v135 + 1);
      *(_QWORD *)v134 = v137;
      *((_QWORD *)v134 + 1) = v139;
      goto LABEL_80;
    }
LABEL_79:
    *(_OWORD *)v134 = *(_OWORD *)v135;
    goto LABEL_80;
  }
  if (!v137)
  {
    swift_release();
    goto LABEL_79;
  }
  v138 = *((_QWORD *)v135 + 1);
  *(_QWORD *)v134 = v137;
  *((_QWORD *)v134 + 1) = v138;
  swift_release();
LABEL_80:
  v140 = v12[16];
  v141 = *(void **)&a1[v140];
  *(_QWORD *)&a1[v140] = *(_QWORD *)&a2[v140];

  *(_QWORD *)&a1[*(int *)(v145 + 20)] = *(_QWORD *)&a2[*(int *)(v145 + 20)];
  return a1;
}

uint64_t sub_100317CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100317CB8);
}

uint64_t sub_100317CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Poster);
}

uint64_t sub_100317CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100317CD0);
}

uint64_t sub_100317CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Poster);
}

uint64_t sub_100317CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031B1E4(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

uint64_t getEnumTagSinglePayload for Poster.Layout(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7F)
    goto LABEL_17;
  if (a2 + 129 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 129) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 129;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 129;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 129;
  }
LABEL_17:
  v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for Poster.Layout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 129 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 129) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7E)
    return ((uint64_t (*)(void))((char *)&loc_100317DD4 + 4 * byte_100EB4665[v4]))();
  *a1 = a2 - 127;
  return ((uint64_t (*)(void))((char *)sub_100317E08 + 4 * byte_100EB4660[v4]))();
}

uint64_t sub_100317E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100317E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100317E18);
  return result;
}

uint64_t sub_100317E30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100317E38);
  *(_BYTE *)result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  return result;
}

uint64_t sub_100317E3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100317E44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100317E50(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_100317E5C(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_100317E6C(_BYTE *result, char a2)
{
  *result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for Poster.Layout()
{
  return &type metadata for Poster.Layout;
}

unint64_t sub_100317E94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  result = qword_1011AC598;
  if (!qword_1011AC598)
  {
    v1 = sub_100044B54(&qword_1011AC380);
    sub_100314B5C();
    v2 = sub_100044B54(&qword_1011AC370);
    v3 = sub_100044B54(&qword_1011AC368);
    v4 = sub_100044B54(&qword_1011AC3B0);
    v5 = sub_100044B54(&qword_1011AC360);
    v11 = sub_100044B54(&qword_1011AC358);
    v12 = (ValueMetadata *)sub_100314A0C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v11 = v5;
    v12 = (ValueMetadata *)OpaqueTypeConformance2;
    v7 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v8 = sub_1000E3EE4();
    v9 = sub_100314AC0();
    v11 = v3;
    v12 = &type metadata for ActionType;
    v13 = v4;
    v14 = v7;
    v15 = v8;
    v16 = v9;
    v10 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v11 = v2;
    v12 = (ValueMetadata *)v10;
    swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC598);
  }
  return result;
}

uint64_t sub_100317FE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C444, 1);
}

uint64_t sub_100317FF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C41C, 1);
}

uint64_t type metadata accessor for PosterView.MotionArtwork(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC8A0, (uint64_t)&nominal type descriptor for PosterView.MotionArtwork);
}

uint64_t type metadata accessor for PosterView.OverlayTextStack(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC780, (uint64_t)&nominal type descriptor for PosterView.OverlayTextStack);
}

unint64_t sub_100318030()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC5F8;
  if (!qword_1011AC5F8)
  {
    v1 = sub_100044B54(&qword_1011AC5A8);
    sub_1003180B4();
    sub_100048748(&qword_1011AC610, type metadata accessor for PosterView.OverlayTextStack, (uint64_t)&unk_100EB4BC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC5F8);
  }
  return result;
}

unint64_t sub_1003180B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC600;
  if (!qword_1011AC600)
  {
    v1 = sub_100044B54(&qword_1011AC5D8);
    sub_100048748(&qword_1011AC608, type metadata accessor for PosterView.MotionArtwork, (uint64_t)&unk_100EB4C10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC600);
  }
  return result;
}

unint64_t sub_100318138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC618;
  if (!qword_1011AC618)
  {
    v1 = sub_100044B54(&qword_1011AC5C8);
    sub_1003181BC();
    sub_100048748(&qword_1011AC610, type metadata accessor for PosterView.OverlayTextStack, (uint64_t)&unk_100EB4BC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC618);
  }
  return result;
}

unint64_t sub_1003181BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC620;
  if (!qword_1011AC620)
  {
    v1 = sub_100044B54(&qword_1011AC5C0);
    sub_1003180B4();
    sub_100049F28(&qword_1011AC628, &qword_1011AC630, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC620);
  }
  return result;
}

uint64_t sub_100318240()
{
  return sub_10015FD08(&qword_1011AC638, &qword_1011AC5E8, (void (*)(void))sub_100318264, (void (*)(void))sub_100318138);
}

unint64_t sub_100318264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC640;
  if (!qword_1011AC640)
  {
    v1 = sub_100044B54(&qword_1011AC5E0);
    sub_1003180B4();
    sub_100049F28(&qword_1011AC648, &qword_1011AC650, (uint64_t)&unk_100EC3620);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC640);
  }
  return result;
}

uint64_t sub_1003182E8()
{
  return sub_10015FD08(&qword_1011AC658, &qword_1011AC5B0, (void (*)(void))sub_100318030, (void (*)(void))sub_100318138);
}

uint64_t sub_10031831C()
{
  return sub_10015FD08(&qword_1011AC690, &qword_1011AC678, (void (*)(void))sub_100318340, (void (*)(void))sub_1003183E4);
}

unint64_t sub_100318340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC698;
  if (!qword_1011AC698)
  {
    v1 = sub_100044B54(&qword_1011AC6A0);
    sub_10005610C(&qword_1011AC6A8, &qword_1011AC6B0, (void (*)(void))sub_1000F59AC);
    sub_100049F28(&qword_1011AC6B8, &qword_1011AC6C0, (uint64_t)&protocol conformance descriptor for _InsettableBackgroundShapeModifier<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC698);
  }
  return result;
}

unint64_t sub_1003183E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC6C8;
  if (!qword_1011AC6C8)
  {
    v1 = sub_100044B54(&qword_1011AC6D0);
    sub_10005610C(&qword_1011AC6A8, &qword_1011AC6B0, (void (*)(void))sub_1000F59AC);
    sub_100049F28(&qword_1011AC6D8, &qword_1011AC6E0, (uint64_t)&protocol conformance descriptor for _InsettableBackgroundShapeModifier<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC6C8);
  }
  return result;
}

unint64_t sub_100318488()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC6E8;
  if (!qword_1011AC6E8)
  {
    v1 = sub_100044B54(&qword_1011AC660);
    sub_10031831C();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC6E8);
  }
  return result;
}

unint64_t sub_10031850C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC6F8;
  if (!qword_1011AC6F8)
  {
    v1 = sub_100044B54(&qword_1011AC6F0);
    sub_100318590();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC6F8);
  }
  return result;
}

unint64_t sub_100318590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011BF7F0;
  if (!qword_1011BF7F0)
  {
    v1 = sub_100044B54(&qword_1011AC700);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011BF7F0);
  }
  return result;
}

uint64_t sub_100318614()
{
  return sub_10015FD08(&qword_1011AC708, &qword_1011AC670, (void (*)(void))sub_10031831C, (void (*)(void))sub_100318488);
}

uint64_t *sub_100318638(uint64_t *a1)
{
  sub_1000E4440(*a1, a1[1], a1[2], a1[3]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *sub_100318684(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  id v90;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *__dst;
  uint64_t *v97;
  unsigned int (*v98)(uint64_t *, uint64_t, uint64_t);
  uint64_t v99;
  int *v100;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v98 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v94 = v8;
    v95 = a3;
    v99 = v7;
    if (v98(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for Poster(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v11[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v11[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(uint64_t *)((char *)a1 + v11[9]) = *(uint64_t *)((char *)a2 + v11[9]);
    *(uint64_t *)((char *)a1 + v11[10]) = *(uint64_t *)((char *)a2 + v11[10]);
    v100 = v11;
    v28 = v11[11];
    __dst = (char *)a1 + v28;
    v97 = a2;
    v29 = (char *)a2 + v28;
    v30 = type metadata accessor for ArtworkImage.ViewModel(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = swift_retain();
    if (v32(v29, 1, v30, v33))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v35 = v100;
    }
    else
    {
      v36 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(__dst, v29, v36);
      v37 = *(int *)(v30 + 20);
      v38 = &__dst[v37];
      v39 = &v29[v37];
      v40 = type metadata accessor for Artwork.CropStyle(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v35 = v100;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    v43 = v35[12];
    v44 = (char *)a1 + v43;
    v45 = (char *)v97 + v43;
    v46 = type metadata accessor for MotionViewModel(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v44, v45, v49);
      v50 = *(int *)(v46 + 20);
      v51 = &v44[v50];
      v52 = &v45[v50];
      v53 = type metadata accessor for Artwork.CropStyle(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v56 = v35[13];
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)v97 + v56);
    v59 = type metadata accessor for Poster.Badge(0);
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = sub_100007E8C(&qword_1011AC090);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      v62 = v95;
    }
    else
    {
      v63 = sub_100007E8C(&qword_1011AC088);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v64 + 48))(v58, 1, v63))
      {
        memcpy(v57, v58, *(_QWORD *)(v60 + 64));
      }
      else
      {
        v93 = v64;
        v65 = v58[1];
        *v57 = *v58;
        v57[1] = v65;
        v66 = *(int *)(v63 + 48);
        v92 = (_QWORD *)((char *)v57 + v66);
        v67 = (_QWORD *)((char *)v58 + v66);
        v68 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
        {
          v69 = type metadata accessor for Material(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v92, v67, v69);
          v70 = 1;
        }
        else
        {
          *v92 = *v67;
          swift_retain();
          v70 = 0;
        }
        swift_storeEnumTagMultiPayload(v92, v68, v70);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v57, 0, 1, v63);
      }
      v62 = v95;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    *((_BYTE *)a1 + v35[14]) = *((_BYTE *)v97 + v35[14]);
    v71 = v35[15];
    v72 = (char *)a1 + v71;
    v73 = (char *)v97 + v71;
    v74 = *(void **)((char *)v97 + v71);
    *(uint64_t *)((char *)a1 + v71) = (uint64_t)v74;
    v75 = (int *)type metadata accessor for SegueContext(0);
    v76 = v75[5];
    v77 = &v72[v76];
    v78 = &v73[v76];
    v79 = v74;
    if (v98((uint64_t *)v78, 1, v99))
    {
      v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v77, v78, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v77, 0, 1, v99);
    }
    v72[v75[6]] = v73[v75[6]];
    v81 = v75[7];
    v82 = &v72[v81];
    v83 = &v73[v81];
    if (*(_QWORD *)v83)
    {
      v84 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v84;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v82 = *(_OWORD *)v83;
    }
    v85 = v100[16];
    v86 = *(void **)((char *)v97 + v85);
    *(uint64_t *)((char *)a1 + v85) = (uint64_t)v86;
    v87 = *(int *)(v62 + 20);
    v88 = (char *)a1 + v87;
    v89 = (char *)v97 + v87;
    *(_QWORD *)v88 = *(_QWORD *)v89;
    v88[8] = v89[8];
    v90 = v86;
  }
  return a1;
}

void sub_100318CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  char *v26;

  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v5 = (int *)type metadata accessor for Poster(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[8] + 8));
  swift_release();
  v6 = a1 + v5[11];
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = v6 + *(int *)(v7 + 20);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  v12 = a1 + v5[12];
  v13 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    v15 = v12 + *(int *)(v13 + 20);
    v16 = type metadata accessor for Artwork.CropStyle(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  v18 = a1 + v5[13];
  v19 = type metadata accessor for Poster.Badge(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    v20 = sub_100007E8C(&qword_1011AC088);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v18, 1, v20))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v18 + 8));
      v21 = v18 + *(int *)(v20 + 48);
      v22 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
      {
        v23 = type metadata accessor for Material(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
      }
      else
      {
        swift_release();
      }
    }
  }
  v24 = (id *)(a1 + v5[15]);

  v25 = type metadata accessor for SegueContext(0);
  v26 = (char *)v24 + *(int *)(v25 + 20);
  if (!v4((uint64_t)v26, 1, v2))
    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
  if (*(id *)((char *)v24 + *(int *)(v25 + 28)))
    swift_release();

}

char *sub_100318FC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  int *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  id v90;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *__dst;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  int *v100;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v96 = a3;
  v99 = v6;
  v93 = v7;
  if (v98(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Poster(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v18 = v9[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = v9[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  v100 = v9;
  v26 = v9[11];
  __dst = &a1[v26];
  v94 = a2;
  v27 = &a2[v26];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = swift_retain();
  if (v30(v27, 1, v28, v31))
  {
    v32 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    v33 = v100;
    v34 = v94;
  }
  else
  {
    v35 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(__dst, v27, v35);
    v36 = *(int *)(v28 + 20);
    v37 = &__dst[v36];
    v38 = &v27[v36];
    v39 = type metadata accessor for Artwork.CropStyle(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v33 = v100;
    v42 = v29;
    v34 = v94;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v28);
  }
  v43 = v33[12];
  v44 = &a1[v43];
  v45 = &v34[v43];
  v46 = type metadata accessor for MotionViewModel(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v49 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v44, v45, v49);
    v50 = *(int *)(v46 + 20);
    v51 = &v44[v50];
    v52 = &v45[v50];
    v53 = type metadata accessor for Artwork.CropStyle(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v56 = v33[13];
  v57 = &a1[v56];
  v58 = &v34[v56];
  v59 = type metadata accessor for Poster.Badge(0);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = sub_100007E8C(&qword_1011AC090);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    v62 = v96;
  }
  else
  {
    v63 = sub_100007E8C(&qword_1011AC088);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v58, 1, v63))
    {
      memcpy(v57, v58, *(_QWORD *)(v60 + 64));
    }
    else
    {
      v65 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v65;
      v66 = *(int *)(v63 + 48);
      v92 = &v57[v66];
      v95 = v64;
      v67 = &v58[v66];
      v68 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
      {
        v69 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v92, v67, v69);
        v70 = 1;
      }
      else
      {
        *(_QWORD *)v92 = *(_QWORD *)v67;
        swift_retain();
        v70 = 0;
      }
      swift_storeEnumTagMultiPayload(v92, v68, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v57, 0, 1, v63);
    }
    v62 = v96;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  a1[v33[14]] = v34[v33[14]];
  v71 = v33[15];
  v72 = &a1[v71];
  v73 = &v34[v71];
  v74 = *(void **)&v34[v71];
  *(_QWORD *)&a1[v71] = v74;
  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = v74;
  if (v98(v78, 1, v99))
  {
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v77, v78, v99);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v77, 0, 1, v99);
  }
  v72[v75[6]] = v73[v75[6]];
  v81 = v75[7];
  v82 = &v72[v81];
  v83 = &v73[v81];
  if (*(_QWORD *)v83)
  {
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v82 = *(_OWORD *)v83;
  }
  v85 = v100[16];
  v86 = *(void **)&v34[v85];
  *(_QWORD *)&a1[v85] = v86;
  v87 = *(int *)(v62 + 20);
  v88 = &a1[v87];
  v89 = &v34[v87];
  *(_QWORD *)v88 = *(_QWORD *)v89;
  v88[8] = v89[8];
  v90 = v86;
  return a1;
}

char *sub_1003195F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  size_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void *, uint64_t, uint64_t);
  int v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  size_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);
  int v96;
  int v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void **v111;
  char *v112;
  void *v113;
  void *v114;
  id v115;
  int *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  void *v130;
  id v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(char *, uint64_t, uint64_t);
  char *v150;
  uint64_t v151;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v151 = v6;
  v10 = v8(a2, 1, v6);
  v145 = v7;
  v149 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Poster(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = v12[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = v12[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = v12[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_retain();
  swift_release();
  v29 = v12[11];
  v30 = (uint64_t)&a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for ArtworkImage.ViewModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  LODWORD(v28) = v34(v30, 1, v32);
  v35 = v34((uint64_t)v31, 1, v32);
  if (!(_DWORD)v28)
  {
    if (!v35)
    {
      v46 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v30, v31, v46);
      v47 = *(int *)(v32 + 20);
      v48 = (void *)(v30 + v47);
      v49 = &v31[v47];
      v50 = type metadata accessor for Artwork.CropStyle(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
      v53 = v52(v48, 1, v50);
      v54 = v52(v49, 1, v50);
      if (v53)
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
      }
      v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v44 = v48;
      v45 = v49;
LABEL_14:
      memcpy(v44, v45, v43);
      goto LABEL_21;
    }
    sub_10005B748(v30, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v44 = (void *)v30;
    v45 = v31;
    goto LABEL_14;
  }
  if (v35)
    goto LABEL_13;
  v146 = a3;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v30, v31, v36);
  v37 = *(int *)(v32 + 20);
  v38 = (void *)(v30 + v37);
  v39 = &v31[v37];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  a3 = v146;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_21:
  v55 = v12[12];
  v56 = (uint64_t)&a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for MotionViewModel(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60((uint64_t)v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      v73 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v56, v57, v73);
      v74 = *(int *)(v58 + 20);
      v75 = (void *)(v56 + v74);
      v76 = &v57[v74];
      v77 = type metadata accessor for Artwork.CropStyle(0);
      v78 = *(_QWORD *)(v77 - 8);
      v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
      v80 = v79(v75, 1, v77);
      v81 = v79(v76, 1, v77);
      if (v80)
      {
        if (!v81)
        {
          (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v81)
        {
          (*(void (**)(void *, char *, uint64_t))(v78 + 24))(v75, v76, v77);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
      }
      v70 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v71 = v75;
      v72 = v76;
LABEL_28:
      memcpy(v71, v72, v70);
      goto LABEL_34;
    }
    sub_10005B748(v56, type metadata accessor for MotionViewModel);
LABEL_27:
    v70 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v71 = (void *)v56;
    v72 = v57;
    goto LABEL_28;
  }
  if (v62)
    goto LABEL_27;
  v147 = a3;
  v63 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v56, v57, v63);
  v64 = *(int *)(v58 + 20);
  v65 = (void *)(v56 + v64);
  v66 = &v57[v64];
  v67 = type metadata accessor for Artwork.CropStyle(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    v69 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  a3 = v147;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_34:
  v82 = v12[13];
  v83 = &a1[v82];
  v84 = &a2[v82];
  v85 = type metadata accessor for Poster.Badge(0);
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  v88 = v87(v83, 1, v85);
  v89 = v87(v84, 1, v85);
  v150 = a1;
  if (v88)
  {
    if (!v89)
    {
      v90 = sub_100007E8C(&qword_1011AC088);
      v91 = *(_QWORD *)(v90 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v84, 1, v90))
      {
        memcpy(v83, v84, *(_QWORD *)(v86 + 64));
      }
      else
      {
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
        v104 = *(int *)(v90 + 48);
        v143 = &v83[v104];
        v105 = &v84[v104];
        v106 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        v144 = v106;
        if (swift_getEnumCaseMultiPayload(v105, v106) == 1)
        {
          v107 = type metadata accessor for Material(0);
          v108 = v143;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v143, v105, v107);
          v109 = 1;
        }
        else
        {
          v108 = v143;
          *(_QWORD *)v143 = *(_QWORD *)v105;
          swift_retain();
          v109 = 0;
        }
        swift_storeEnumTagMultiPayload(v108, v144, v109);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v83, 0, 1, v90);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v89)
  {
    sub_10005B748((uint64_t)v83, type metadata accessor for Poster.Badge);
LABEL_40:
    v92 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8) + 64);
LABEL_41:
    memcpy(v83, v84, v92);
    goto LABEL_60;
  }
  v148 = a3;
  v93 = sub_100007E8C(&qword_1011AC088);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
  v96 = v95(v83, 1, v93);
  v97 = v95(v84, 1, v93);
  if (v96)
  {
    a3 = v148;
    if (!v97)
    {
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      v98 = *(int *)(v93 + 48);
      v99 = &v83[v98];
      v100 = &v84[v98];
      v101 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v100, v101) == 1)
      {
        v102 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v99, v100, v102);
        v103 = 1;
      }
      else
      {
        *(_QWORD *)v99 = *(_QWORD *)v100;
        swift_retain();
        v103 = 0;
      }
      swift_storeEnumTagMultiPayload(v99, v101, v103);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v83, 0, 1, v93);
      a3 = v148;
      goto LABEL_60;
    }
    goto LABEL_56;
  }
  a3 = v148;
  if (v97)
  {
    sub_10004FF60((uint64_t)v83, &qword_1011AC088);
LABEL_56:
    v92 = *(_QWORD *)(v86 + 64);
    goto LABEL_41;
  }
  *(_QWORD *)v83 = *(_QWORD *)v84;
  v137 = *((_QWORD *)v83 + 1);
  *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v137);
  if (a1 != a2)
  {
    v138 = *(int *)(v93 + 48);
    v139 = &v83[v138];
    v140 = &v84[v138];
    sub_10005B748((uint64_t)v139, type metadata accessor for Poster.CustomBadgeStyle);
    v141 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v140, v141) == 1)
    {
      v142 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v139, v140, v142);
      swift_storeEnumTagMultiPayload(v139, v141, 1);
    }
    else
    {
      *(_QWORD *)v139 = *(_QWORD *)v140;
      swift_retain();
      swift_storeEnumTagMultiPayload(v139, v141, 0);
    }
  }
LABEL_60:
  v150[v12[14]] = a2[v12[14]];
  v110 = v12[15];
  v111 = (void **)&v150[v110];
  v112 = &a2[v110];
  v113 = *(void **)&a2[v110];
  v114 = *v111;
  *v111 = v113;
  v115 = v113;

  v116 = (int *)type metadata accessor for SegueContext(0);
  v117 = v116[5];
  v118 = (char *)v111 + v117;
  v119 = &v112[v117];
  LODWORD(v114) = v149((char *)v111 + v117, 1, v151);
  v120 = v149(v119, 1, v151);
  if ((_DWORD)v114)
  {
    if (!v120)
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v118, v119, v151);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v118, 0, 1, v151);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v120)
  {
    (*(void (**)(char *, uint64_t))(v145 + 8))(v118, v151);
LABEL_65:
    v121 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(v145 + 24))(v118, v119, v151);
LABEL_66:
  *((_BYTE *)v111 + v116[6]) = v112[v116[6]];
  v122 = v116[7];
  v123 = (void **)((char *)v111 + v122);
  v124 = &v112[v122];
  v125 = *(_QWORD *)&v112[v122];
  if (!*v123)
  {
    if (v125)
    {
      v127 = *((_QWORD *)v124 + 1);
      *v123 = v125;
      v123[1] = v127;
      swift_retain();
      goto LABEL_73;
    }
LABEL_72:
    *(_OWORD *)v123 = *(_OWORD *)v124;
    goto LABEL_73;
  }
  if (!v125)
  {
    swift_release();
    goto LABEL_72;
  }
  v126 = *((_QWORD *)v124 + 1);
  *v123 = v125;
  v123[1] = v126;
  swift_retain();
  swift_release();
LABEL_73:
  v128 = v12[16];
  v129 = *(void **)&v150[v128];
  v130 = *(void **)&a2[v128];
  *(_QWORD *)&v150[v128] = v130;
  v131 = v130;

  v132 = *(int *)(a3 + 20);
  v133 = &v150[v132];
  v134 = &a2[v132];
  v135 = *(_QWORD *)v134;
  v133[8] = v134[8];
  *(_QWORD *)v133 = v135;
  return v150;
}

char *sub_10031A16C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *__src;
  uint64_t v68;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  char *__dstb;
  uint64_t v72;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v72 = v5;
  v68 = v6;
  if (v7(a2, 1, v5))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v9 = (int *)type metadata accessor for Poster(0);
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  v10 = v9[11];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    __dst = v7;
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    v18 = &v11[v17];
    v19 = &v12[v17];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v7 = __dst;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v23 = v9[12];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for MotionViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    __dsta = v7;
    v29 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v24, v25, v29);
    v30 = *(int *)(v26 + 20);
    v31 = &v24[v30];
    v32 = &v25[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v7 = __dsta;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v36 = v9[13];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for Poster.Badge(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C(&qword_1011AC090);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = sub_100007E8C(&qword_1011AC088);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      memcpy(v37, v38, *(_QWORD *)(v40 + 64));
    }
    else
    {
      *(_OWORD *)v37 = *(_OWORD *)v38;
      v44 = *(int *)(v42 + 48);
      __dstb = &v37[v44];
      v45 = &v38[v44];
      v46 = type metadata accessor for Poster.CustomBadgeStyle(0);
      __src = v45;
      v47 = v45;
      v48 = v46;
      if (swift_getEnumCaseMultiPayload(v47, v46) == 1)
      {
        v49 = type metadata accessor for Material(0);
        (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(__dstb, __src, v49);
        swift_storeEnumTagMultiPayload(__dstb, v48, 1);
      }
      else
      {
        memcpy(__dstb, __src, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  a1[v9[14]] = a2[v9[14]];
  v50 = v9[15];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *(_QWORD *)&a1[v50] = *(_QWORD *)&a2[v50];
  v53 = (int *)type metadata accessor for SegueContext(0);
  v54 = v53[5];
  v55 = &v51[v54];
  v56 = &v52[v54];
  if (v7(&v52[v54], 1, v72))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v55, v56, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v55, 0, 1, v72);
  }
  v51[v53[6]] = v52[v53[6]];
  v58 = v53[7];
  v59 = &v51[v58];
  v60 = &v52[v58];
  v61 = *(_QWORD *)v60;
  if (*(_QWORD *)v60)
  {
    v62 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = v61;
    *((_QWORD *)v59 + 1) = v62;
  }
  else
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
  }
  *(_QWORD *)&a1[v9[16]] = *(_QWORD *)&a2[v9[16]];
  v63 = *(int *)(a3 + 20);
  v64 = &a1[v63];
  v65 = &a2[v63];
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v64[8] = v65[8];
  return a1;
}

char *sub_10031A71C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  size_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  size_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void *v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *__dst;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(char *, uint64_t, uint64_t);
  uint64_t v150;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v150 = v6;
  v10 = v8(a2, 1, v6);
  v147 = v7;
  v148 = a3;
  v149 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Poster(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease(v30);
  v31 = v12[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  v36 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)&a1[v12[9]] = *(_QWORD *)&a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_release();
  v37 = v12[11];
  v38 = (uint64_t)&a1[v37];
  v39 = &a2[v37];
  v40 = type metadata accessor for ArtworkImage.ViewModel(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42((uint64_t)v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      v55 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v38, v39, v55);
      v56 = *(int *)(v40 + 20);
      v57 = (void *)(v38 + v56);
      v58 = &v39[v56];
      v59 = type metadata accessor for Artwork.CropStyle(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v57, 1, v59);
      v63 = v61(v58, 1, v59);
      if (v62)
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(void *, char *, uint64_t))(v60 + 40))(v57, v58, v59);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v60 + 8))(v57, v59);
      }
      v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v53 = v57;
      v54 = v58;
LABEL_14:
      memcpy(v53, v54, v52);
      goto LABEL_21;
    }
    sub_10005B748(v38, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v52 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v53 = (void *)v38;
    v54 = v39;
    goto LABEL_14;
  }
  if (v44)
    goto LABEL_13;
  v45 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v38, v39, v45);
  v46 = *(int *)(v40 + 20);
  v47 = (void *)(v38 + v46);
  v48 = &v39[v46];
  v49 = type metadata accessor for Artwork.CropStyle(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_21:
  v64 = v12[12];
  v65 = (uint64_t)&a1[v64];
  v66 = &a2[v64];
  v67 = type metadata accessor for MotionViewModel(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69((uint64_t)v66, 1, v67);
  if (!v70)
  {
    if (!v71)
    {
      v82 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v65, v66, v82);
      v83 = *(int *)(v67 + 20);
      v84 = (void *)(v65 + v83);
      v85 = &v66[v83];
      v86 = type metadata accessor for Artwork.CropStyle(0);
      v87 = *(_QWORD *)(v86 - 8);
      v88 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v87 + 48);
      v89 = v88(v84, 1, v86);
      v90 = v88(v85, 1, v86);
      if (v89)
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v90)
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 40))(v84, v85, v86);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v87 + 8))(v84, v86);
      }
      v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v80 = v84;
      v81 = v85;
LABEL_28:
      memcpy(v80, v81, v79);
      goto LABEL_34;
    }
    sub_10005B748(v65, type metadata accessor for MotionViewModel);
LABEL_27:
    v79 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v80 = (void *)v65;
    v81 = v66;
    goto LABEL_28;
  }
  if (v71)
    goto LABEL_27;
  v72 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v65, v66, v72);
  v73 = *(int *)(v67 + 20);
  v74 = (void *)(v65 + v73);
  v75 = &v66[v73];
  v76 = type metadata accessor for Artwork.CropStyle(0);
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_34:
  v91 = v12[13];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v94 = type metadata accessor for Poster.Badge(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      v99 = sub_100007E8C(&qword_1011AC088);
      v100 = *(_QWORD *)(v99 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v93, 1, v99))
      {
        memcpy(v92, v93, *(_QWORD *)(v95 + 64));
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      }
      else
      {
        *(_OWORD *)v92 = *(_OWORD *)v93;
        v113 = *(int *)(v99 + 48);
        __dst = &v92[v113];
        v114 = &v93[v113];
        v115 = type metadata accessor for Poster.CustomBadgeStyle(0);
        if (swift_getEnumCaseMultiPayload(v114, v115) == 1)
        {
          v116 = type metadata accessor for Material(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(__dst, v114, v116);
          swift_storeEnumTagMultiPayload(__dst, v115, 1);
        }
        else
        {
          memcpy(__dst, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v92, 0, 1, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      }
      goto LABEL_67;
    }
    goto LABEL_40;
  }
  if (v98)
  {
    sub_10005B748((uint64_t)v92, type metadata accessor for Poster.Badge);
LABEL_40:
    v101 = *(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8);
LABEL_41:
    v102 = *(_QWORD *)(v101 + 64);
LABEL_42:
    memcpy(v92, v93, v102);
    goto LABEL_67;
  }
  v103 = sub_100007E8C(&qword_1011AC088);
  v104 = *(_QWORD *)(v103 - 8);
  v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
  v106 = v105(v92, 1, v103);
  v107 = v105(v93, 1, v103);
  if (!v106)
  {
    if (!v107)
    {
      v117 = *((_QWORD *)v93 + 1);
      v118 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = v117;
      swift_bridgeObjectRelease(v118);
      if (a1 == a2)
        goto LABEL_67;
      v119 = *(int *)(v103 + 48);
      v92 += v119;
      v93 += v119;
      sub_10005B748((uint64_t)v92, type metadata accessor for Poster.CustomBadgeStyle);
      v120 = type metadata accessor for Poster.CustomBadgeStyle(0);
      if (swift_getEnumCaseMultiPayload(v93, v120) == 1)
      {
        v121 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v92, v93, v121);
        swift_storeEnumTagMultiPayload(v92, v120, 1);
        goto LABEL_67;
      }
      v101 = *(_QWORD *)(v120 - 8);
      goto LABEL_41;
    }
    sub_10004FF60((uint64_t)v92, &qword_1011AC088);
LABEL_57:
    v102 = *(_QWORD *)(v95 + 64);
    goto LABEL_42;
  }
  if (v107)
    goto LABEL_57;
  *(_OWORD *)v92 = *(_OWORD *)v93;
  v108 = *(int *)(v103 + 48);
  v109 = &v92[v108];
  v110 = &v93[v108];
  v111 = type metadata accessor for Poster.CustomBadgeStyle(0);
  if (swift_getEnumCaseMultiPayload(v110, v111) == 1)
  {
    v112 = type metadata accessor for Material(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v109, v110, v112);
    swift_storeEnumTagMultiPayload(v109, v111, 1);
  }
  else
  {
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v92, 0, 1, v103);
LABEL_67:
  a1[v12[14]] = a2[v12[14]];
  v122 = v12[15];
  v123 = &a1[v122];
  v124 = &a2[v122];
  v125 = *(void **)&a1[v122];
  *(_QWORD *)v123 = *(_QWORD *)&a2[v122];

  v126 = (int *)type metadata accessor for SegueContext(0);
  v127 = v126[5];
  v128 = &v123[v127];
  v129 = &v124[v127];
  v130 = v149(&v123[v127], 1, v150);
  v131 = v149(v129, 1, v150);
  if (v130)
  {
    if (!v131)
    {
      (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v128, v129, v150);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v128, 0, 1, v150);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v131)
  {
    (*(void (**)(char *, uint64_t))(v147 + 8))(v128, v150);
LABEL_72:
    v132 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v147 + 40))(v128, v129, v150);
LABEL_73:
  v123[v126[6]] = v124[v126[6]];
  v133 = v126[7];
  v134 = &v123[v133];
  v135 = &v124[v133];
  v136 = *(_QWORD *)&v123[v133];
  v137 = *(_QWORD *)&v124[v133];
  if (!v136)
  {
    if (v137)
    {
      v139 = *((_QWORD *)v135 + 1);
      *(_QWORD *)v134 = v137;
      *((_QWORD *)v134 + 1) = v139;
      goto LABEL_80;
    }
LABEL_79:
    *(_OWORD *)v134 = *(_OWORD *)v135;
    goto LABEL_80;
  }
  if (!v137)
  {
    swift_release();
    goto LABEL_79;
  }
  v138 = *((_QWORD *)v135 + 1);
  *(_QWORD *)v134 = v137;
  *((_QWORD *)v134 + 1) = v138;
  swift_release();
LABEL_80:
  v140 = v12[16];
  v141 = *(void **)&a1[v140];
  *(_QWORD *)&a1[v140] = *(_QWORD *)&a2[v140];

  v142 = *(int *)(v148 + 20);
  v143 = &a1[v142];
  v144 = &a2[v142];
  *(_QWORD *)v143 = *(_QWORD *)v144;
  v143[8] = v144[8];
  return a1;
}

uint64_t sub_10031B1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031B1B4);
}

uint64_t sub_10031B1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Poster);
}

uint64_t sub_10031B1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031B1CC);
}

uint64_t sub_10031B1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Poster);
}

uint64_t sub_10031B1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031B1E4(a1, a2, a3, (uint64_t)"\t");
}

uint64_t sub_10031B1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v7;
  _QWORD v8[2];

  result = type metadata accessor for Poster(319);
  if (v7 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    v8[1] = a4;
    swift_initStructMetadata(a1, 256, 2, v8, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10031B264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031B270);
}

uint64_t sub_10031B270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Poster);
}

uint64_t sub_10031B27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031B288);
}

uint64_t sub_10031B288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Poster);
}

uint64_t type metadata accessor for PosterView.TextContentView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC810, (uint64_t)&nominal type descriptor for PosterView.TextContentView);
}

uint64_t sub_10031B2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201510(a1, a2, a3, type metadata accessor for Poster);
}

uint64_t *sub_10031B2B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  int *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  _QWORD *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *__dst;
  unsigned int (*v94)(uint64_t *, uint64_t, uint64_t);
  uint64_t v95;
  int *v96;

  v4 = type metadata accessor for Poster(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v94 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v95 = v7;
    v90 = v8;
    if (v94(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = v6[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v6[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v6[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v6[8];
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    *(uint64_t *)((char *)a1 + v6[9]) = *(uint64_t *)((char *)a2 + v6[9]);
    *(uint64_t *)((char *)a1 + v6[10]) = *(uint64_t *)((char *)a2 + v6[10]);
    v96 = v6;
    v27 = v6[11];
    v91 = a2;
    __dst = (char *)a1 + v27;
    v28 = (char *)a2 + v27;
    v29 = type metadata accessor for ArtworkImage.ViewModel(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = swift_retain();
    if (v31(v28, 1, v29, v32))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      v34 = v96;
      v35 = v91;
    }
    else
    {
      v36 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(__dst, v28, v36);
      v37 = *(int *)(v29 + 20);
      v38 = &__dst[v37];
      v39 = &v28[v37];
      v40 = type metadata accessor for Artwork.CropStyle(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v34 = v96;
      v43 = v30;
      v35 = v91;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v29);
    }
    v44 = v34[12];
    v45 = (char *)a1 + v44;
    v46 = (char *)v35 + v44;
    v47 = type metadata accessor for MotionViewModel(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v50 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v45, v46, v50);
      v51 = *(int *)(v47 + 20);
      v52 = &v45[v51];
      v53 = &v46[v51];
      v54 = type metadata accessor for Artwork.CropStyle(0);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    v57 = v34[13];
    v58 = (uint64_t *)((char *)a1 + v57);
    v59 = (uint64_t *)((char *)v35 + v57);
    v60 = type metadata accessor for Poster.Badge(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = sub_100007E8C(&qword_1011AC090);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = sub_100007E8C(&qword_1011AC088);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v64 + 48))(v59, 1, v63))
      {
        memcpy(v58, v59, *(_QWORD *)(v61 + 64));
      }
      else
      {
        v92 = v64;
        v65 = v59[1];
        *v58 = *v59;
        v58[1] = v65;
        v66 = *(int *)(v63 + 48);
        v89 = (_QWORD *)((char *)v58 + v66);
        v67 = (_QWORD *)((char *)v59 + v66);
        v68 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
        {
          v69 = type metadata accessor for Material(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v89, v67, v69);
          v70 = 1;
        }
        else
        {
          *v89 = *v67;
          swift_retain();
          v70 = 0;
        }
        swift_storeEnumTagMultiPayload(v89, v68, v70);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v58, 0, 1, v63);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    *((_BYTE *)a1 + v34[14]) = *((_BYTE *)v35 + v34[14]);
    v71 = v34[15];
    v72 = (char *)a1 + v71;
    v73 = (uint64_t)v35 + v71;
    v74 = *(void **)((char *)v35 + v71);
    *(uint64_t *)((char *)a1 + v71) = (uint64_t)v74;
    v75 = (int *)type metadata accessor for SegueContext(0);
    v76 = v75[5];
    v77 = &v72[v76];
    v78 = (_QWORD *)(v73 + v76);
    v79 = v74;
    if (v94(v78, 1, v95))
    {
      v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v90 + 16))(v77, v78, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v77, 0, 1, v95);
    }
    v72[v75[6]] = *(_BYTE *)(v73 + v75[6]);
    v81 = v75[7];
    v82 = &v72[v81];
    v83 = (_QWORD *)(v73 + v81);
    if (*v83)
    {
      v84 = v83[1];
      *(_QWORD *)v82 = *v83;
      *((_QWORD *)v82 + 1) = v84;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v82 = *(_OWORD *)v83;
    }
    v85 = v96[16];
    v86 = *(void **)((char *)v35 + v85);
    *(uint64_t *)((char *)a1 + v85) = (uint64_t)v86;
    v87 = v86;
  }
  return a1;
}

char *sub_10031B8E4(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  int *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  uint64_t v87;
  char *v88;
  char *v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  int *v92;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v91 = v4;
  v87 = v5;
  if (v90(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for Poster(0);
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v11;
  v12 = v7[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v7[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = v7[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
  *(_QWORD *)&a1[v7[10]] = *(_QWORD *)&a2[v7[10]];
  v92 = v7;
  v24 = v7[11];
  v88 = a1;
  v89 = a2;
  v25 = &a1[v24];
  v26 = &v89[v24];
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = swift_retain();
  if (v29(v26, 1, v27, v30))
  {
    v31 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    v32 = v92;
    v33 = v88;
  }
  else
  {
    v34 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v25, v26, v34);
    v35 = *(int *)(v27 + 20);
    v36 = &v25[v35];
    v37 = &v26[v35];
    v38 = type metadata accessor for Artwork.CropStyle(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v32 = v92;
    v33 = v88;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v41 = v32[12];
  v42 = &v33[v41];
  v43 = &v89[v41];
  v44 = type metadata accessor for MotionViewModel(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v42, v43, v47);
    v48 = *(int *)(v44 + 20);
    v49 = &v42[v48];
    v50 = &v43[v48];
    v51 = type metadata accessor for Artwork.CropStyle(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    v32 = v92;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v54 = v32[13];
  v55 = &v33[v54];
  v56 = &v89[v54];
  v57 = type metadata accessor for Poster.Badge(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_100007E8C(&qword_1011AC090);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    v60 = sub_100007E8C(&qword_1011AC088);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v56, 1, v60))
    {
      memcpy(v55, v56, *(_QWORD *)(v58 + 64));
    }
    else
    {
      v62 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v62;
      v63 = *(int *)(v60 + 48);
      v64 = &v55[v63];
      v65 = &v56[v63];
      v66 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v65, v66) == 1)
      {
        v67 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v64, v65, v67);
        v68 = 1;
      }
      else
      {
        *(_QWORD *)v64 = *(_QWORD *)v65;
        swift_retain();
        v68 = 0;
      }
      swift_storeEnumTagMultiPayload(v64, v66, v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v55, 0, 1, v60);
    }
    v32 = v92;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v33[v32[14]] = v89[v32[14]];
  v69 = v32[15];
  v70 = &v33[v69];
  v71 = &v89[v69];
  v72 = *(void **)&v89[v69];
  *(_QWORD *)&v33[v69] = v72;
  v73 = (int *)type metadata accessor for SegueContext(0);
  v74 = v73[5];
  v75 = &v70[v74];
  v76 = &v71[v74];
  v77 = v72;
  if (v90(v76, 1, v91))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v75, v76, v91);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v75, 0, 1, v91);
  }
  v70[v73[6]] = v71[v73[6]];
  v79 = v73[7];
  v80 = &v70[v79];
  v81 = &v71[v79];
  if (*(_QWORD *)v81)
  {
    v82 = *((_QWORD *)v81 + 1);
    *(_QWORD *)v80 = *(_QWORD *)v81;
    *((_QWORD *)v80 + 1) = v82;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v80 = *(_OWORD *)v81;
  }
  v83 = v32[16];
  v84 = *(void **)&v89[v83];
  *(_QWORD *)&v33[v83] = v84;
  v85 = v84;
  return v33;
}

char *sub_10031BED8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *__src;
  uint64_t v63;
  void *__dst;
  void *__dsta;
  char *__dstb;
  unsigned int (*v67)(char *, uint64_t, uint64_t);

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v63 = v5;
  if (v67(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for Poster(0);
  *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
  *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
  *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
  *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
  *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
  *(_QWORD *)&a1[v7[10]] = *(_QWORD *)&a2[v7[10]];
  v8 = v7[11];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    __dst = (void *)v4;
    v14 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v9, v10, v14);
    v15 = *(int *)(v11 + 20);
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v4 = (uint64_t)__dst;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v21 = v7[12];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for MotionViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    __dsta = (void *)v4;
    v27 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v22, v23, v27);
    v28 = *(int *)(v24 + 20);
    v29 = &v22[v28];
    v30 = &v23[v28];
    v31 = type metadata accessor for Artwork.CropStyle(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v4 = (uint64_t)__dsta;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v34 = v7[13];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for Poster.Badge(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C(&qword_1011AC090);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = sub_100007E8C(&qword_1011AC088);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v36, 1, v40))
    {
      memcpy(v35, v36, *(_QWORD *)(v38 + 64));
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      v42 = *(int *)(v40 + 48);
      __dstb = &v35[v42];
      v43 = &v36[v42];
      v44 = type metadata accessor for Poster.CustomBadgeStyle(0);
      __src = v43;
      v45 = v43;
      v46 = v44;
      if (swift_getEnumCaseMultiPayload(v45, v44) == 1)
      {
        v47 = type metadata accessor for Material(0);
        (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(__dstb, __src, v47);
        swift_storeEnumTagMultiPayload(__dstb, v46, 1);
      }
      else
      {
        memcpy(__dstb, __src, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v40);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  a1[v7[14]] = a2[v7[14]];
  v48 = v7[15];
  v49 = &a1[v48];
  v50 = &a2[v48];
  *(_QWORD *)&a1[v48] = *(_QWORD *)&a2[v48];
  v51 = (int *)type metadata accessor for SegueContext(0);
  v52 = v51[5];
  v53 = &v49[v52];
  v54 = &v50[v52];
  if (v67(&v50[v52], 1, v4))
  {
    v55 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v53, v54, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v53, 0, 1, v4);
  }
  v49[v51[6]] = v50[v51[6]];
  v56 = v51[7];
  v57 = &v49[v56];
  v58 = &v50[v56];
  v59 = *(_QWORD *)v58;
  if (*(_QWORD *)v58)
  {
    v60 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = v59;
    *((_QWORD *)v57 + 1) = v60;
  }
  else
  {
    *(_OWORD *)v57 = *(_OWORD *)v58;
  }
  *(_QWORD *)&a1[v7[16]] = *(_QWORD *)&a2[v7[16]];
  return a1;
}

uint64_t sub_10031C464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031C470);
}

uint64_t sub_10031C470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Poster);
}

uint64_t sub_10031C47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031C488);
}

uint64_t sub_10031C488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Poster);
}

uint64_t storeEnumTagSinglePayload for Poster.FullWidthTextBackgroundTreatment(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10031C4D4 + 4 * byte_100EB466A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10031C4F4 + 4 * byte_100EB466F[v4]))();
}

_BYTE *sub_10031C4D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10031C4F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10031C4FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10031C504(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10031C50C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10031C514(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Poster.FullWidthTextBackgroundTreatment()
{
  return &type metadata for Poster.FullWidthTextBackgroundTreatment;
}

uint64_t storeEnumTagSinglePayload for Poster.StandardTextBackgroundTreatment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10031C57C + 4 * byte_100EB4679[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10031C5B0 + 4 * byte_100EB4674[v4]))();
}

uint64_t sub_10031C5B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10031C5B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10031C5C0);
  return result;
}

uint64_t sub_10031C5CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10031C5D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10031C5D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10031C5E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Poster.StandardTextBackgroundTreatment()
{
  return &type metadata for Poster.StandardTextBackgroundTreatment;
}

uint64_t sub_10031C5FC()
{
  return sub_10015FD08(&qword_1011AC8D8, &qword_1011AC8E0, (void (*)(void))sub_100318240, (void (*)(void))sub_1003182E8);
}

uint64_t sub_10031C630()
{
  return sub_10015FD08(&qword_1011AC8E8, &qword_1011AC8F0, (void (*)(void))sub_10031850C, (void (*)(void))sub_100318614);
}

unint64_t sub_10031C668()
{
  unint64_t result;

  result = qword_1011AC8F8;
  if (!qword_1011AC8F8)
  {
    result = swift_getWitnessTable(&unk_100EB4AE0, &type metadata for Poster.StandardTextBackgroundTreatment);
    atomic_store(result, (unint64_t *)&qword_1011AC8F8);
  }
  return result;
}

unint64_t sub_10031C6B0()
{
  unint64_t result;

  result = qword_1011AC900;
  if (!qword_1011AC900)
  {
    result = swift_getWitnessTable(&unk_100EB4B48, &type metadata for Poster.FullWidthTextBackgroundTreatment);
    atomic_store(result, (unint64_t *)&qword_1011AC900);
  }
  return result;
}

uint64_t sub_10031C6F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C4EC, 1);
}

uint64_t sub_10031C704(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C4C4, 1);
}

uint64_t sub_10031C714(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C49C, 1);
}

uint64_t type metadata accessor for PosterView.TextStack(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AC9C8, (uint64_t)&nominal type descriptor for PosterView.TextStack);
}

unint64_t sub_10031C738()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC948;
  if (!qword_1011AC948)
  {
    v1 = sub_100044B54(&qword_1011AC938);
    sub_100048748(&qword_1011AC950, type metadata accessor for PosterView.TextStack, (uint64_t)"ͩ ");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC948);
  }
  return result;
}

unint64_t sub_10031C7BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AC958;
  if (!qword_1011AC958)
  {
    v1 = sub_100044B54(&qword_1011AC928);
    sub_100049F28(&qword_1011AC960, &qword_1011AC920, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AC958);
  }
  return result;
}

char *sub_10031C840(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  size_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(void *, uint64_t, uint64_t);
  int v79;
  int v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  size_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void **v110;
  char *v111;
  void *v112;
  void *v113;
  id v114;
  int *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  void *v131;
  id v132;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t (*v143)(char *, uint64_t, uint64_t);
  uint64_t v144;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v143 = v6;
  v144 = v4;
  v141 = v5;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Poster(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v12 + 1);
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  v15 = v10[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v16 + 1);
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v18);
  v19 = v10[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v20 + 1);
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v22);
  v23 = v10[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v24 + 1);
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v26);
  *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
  *(_QWORD *)&a1[v10[10]] = *(_QWORD *)&a2[v10[10]];
  swift_retain();
  swift_release();
  v27 = v10[11];
  v28 = (uint64_t)&a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for ArtworkImage.ViewModel(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32((uint64_t)v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      v45 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v28, v29, v45);
      v46 = *(int *)(v30 + 20);
      v47 = (void *)(v28 + v46);
      v48 = &v29[v46];
      v49 = type metadata accessor for Artwork.CropStyle(0);
      v50 = *(_QWORD *)(v49 - 8);
      v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
      v52 = v51(v47, 1, v49);
      v53 = v51(v48, 1, v49);
      if (v52)
      {
        if (!v53)
        {
          (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v53)
        {
          (*(void (**)(void *, char *, uint64_t))(v50 + 24))(v47, v48, v49);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
      }
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v43 = v47;
      v44 = v48;
LABEL_14:
      memcpy(v43, v44, v42);
      goto LABEL_21;
    }
    sub_10005B748(v28, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v42 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v43 = (void *)v28;
    v44 = v29;
    goto LABEL_14;
  }
  if (v34)
    goto LABEL_13;
  v35 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v28, v29, v35);
  v36 = *(int *)(v30 + 20);
  v37 = (void *)(v28 + v36);
  v38 = &v29[v36];
  v39 = type metadata accessor for Artwork.CropStyle(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_21:
  v54 = v10[12];
  v55 = (uint64_t)&a1[v54];
  v56 = &a2[v54];
  v57 = type metadata accessor for MotionViewModel(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 1, v57);
  v61 = v59((uint64_t)v56, 1, v57);
  if (!v60)
  {
    if (!v61)
    {
      v72 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v55, v56, v72);
      v73 = *(int *)(v57 + 20);
      v74 = (void *)(v55 + v73);
      v75 = &v56[v73];
      v76 = type metadata accessor for Artwork.CropStyle(0);
      v77 = *(_QWORD *)(v76 - 8);
      v78 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v77 + 48);
      v79 = v78(v74, 1, v76);
      v80 = v78(v75, 1, v76);
      if (v79)
      {
        if (!v80)
        {
          (*(void (**)(void *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v80)
        {
          (*(void (**)(void *, char *, uint64_t))(v77 + 24))(v74, v75, v76);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v77 + 8))(v74, v76);
      }
      v69 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v70 = v74;
      v71 = v75;
LABEL_28:
      memcpy(v70, v71, v69);
      goto LABEL_34;
    }
    sub_10005B748(v55, type metadata accessor for MotionViewModel);
LABEL_27:
    v69 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v70 = (void *)v55;
    v71 = v56;
    goto LABEL_28;
  }
  if (v61)
    goto LABEL_27;
  v62 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v55, v56, v62);
  v63 = *(int *)(v57 + 20);
  v64 = (void *)(v55 + v63);
  v65 = &v56[v63];
  v66 = type metadata accessor for Artwork.CropStyle(0);
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    v68 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_34:
  v81 = v10[13];
  v82 = &a1[v81];
  v83 = &a2[v81];
  v84 = type metadata accessor for Poster.Badge(0);
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
  v87 = v86(v82, 1, v84);
  v88 = v86(v83, 1, v84);
  if (v87)
  {
    if (!v88)
    {
      v89 = sub_100007E8C(&qword_1011AC088);
      v90 = *(_QWORD *)(v89 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v83, 1, v89))
      {
        memcpy(v82, v83, *(_QWORD *)(v85 + 64));
      }
      else
      {
        v140 = v90;
        *(_QWORD *)v82 = *(_QWORD *)v83;
        *((_QWORD *)v82 + 1) = *((_QWORD *)v83 + 1);
        v103 = *(int *)(v89 + 48);
        v142 = &v82[v103];
        v104 = &v83[v103];
        v105 = type metadata accessor for Poster.CustomBadgeStyle(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload(v104, v105) == 1)
        {
          v106 = type metadata accessor for Material(0);
          v107 = v142;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v142, v104, v106);
          v108 = 1;
        }
        else
        {
          v107 = v142;
          *(_QWORD *)v142 = *(_QWORD *)v104;
          swift_retain();
          v108 = 0;
        }
        swift_storeEnumTagMultiPayload(v107, v105, v108);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v82, 0, 1, v89);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v88)
  {
    sub_10005B748((uint64_t)v82, type metadata accessor for Poster.Badge);
LABEL_40:
    v91 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8) + 64);
LABEL_41:
    memcpy(v82, v83, v91);
    goto LABEL_60;
  }
  v92 = sub_100007E8C(&qword_1011AC088);
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
  v95 = v94(v82, 1, v92);
  v96 = v94(v83, 1, v92);
  if (v95)
  {
    if (!v96)
    {
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = *((_QWORD *)v83 + 1);
      v97 = *(int *)(v92 + 48);
      v98 = &v82[v97];
      v99 = &v83[v97];
      v100 = type metadata accessor for Poster.CustomBadgeStyle(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload(v99, v100) == 1)
      {
        v101 = type metadata accessor for Material(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v98, v99, v101);
        v102 = 1;
      }
      else
      {
        *(_QWORD *)v98 = *(_QWORD *)v99;
        swift_retain();
        v102 = 0;
      }
      swift_storeEnumTagMultiPayload(v98, v100, v102);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v82, 0, 1, v92);
      goto LABEL_60;
    }
    goto LABEL_56;
  }
  if (v96)
  {
    sub_10004FF60((uint64_t)v82, &qword_1011AC088);
LABEL_56:
    v91 = *(_QWORD *)(v85 + 64);
    goto LABEL_41;
  }
  *(_QWORD *)v82 = *(_QWORD *)v83;
  v134 = *((_QWORD *)v82 + 1);
  *((_QWORD *)v82 + 1) = *((_QWORD *)v83 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v134);
  if (a1 != a2)
  {
    v135 = *(int *)(v92 + 48);
    v136 = &v82[v135];
    v137 = &v83[v135];
    sub_10005B748((uint64_t)v136, type metadata accessor for Poster.CustomBadgeStyle);
    v138 = type metadata accessor for Poster.CustomBadgeStyle(0);
    if (swift_getEnumCaseMultiPayload(v137, v138) == 1)
    {
      v139 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v136, v137, v139);
      swift_storeEnumTagMultiPayload(v136, v138, 1);
    }
    else
    {
      *(_QWORD *)v136 = *(_QWORD *)v137;
      swift_retain();
      swift_storeEnumTagMultiPayload(v136, v138, 0);
    }
  }
LABEL_60:
  a1[v10[14]] = a2[v10[14]];
  v109 = v10[15];
  v110 = (void **)&a1[v109];
  v111 = &a2[v109];
  v112 = *(void **)&a2[v109];
  v113 = *v110;
  *v110 = v112;
  v114 = v112;

  v115 = (int *)type metadata accessor for SegueContext(0);
  v116 = v115[5];
  v117 = (char *)v110 + v116;
  v118 = &v111[v116];
  v119 = v143((char *)v110 + v116, 1, v144);
  v120 = v143(v118, 1, v144);
  if (v119)
  {
    if (!v120)
    {
      (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v117, v118, v144);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v117, 0, 1, v144);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v120)
  {
    (*(void (**)(char *, uint64_t))(v141 + 8))(v117, v144);
LABEL_65:
    v121 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v117, v118, v144);
LABEL_66:
  *((_BYTE *)v110 + v115[6]) = v111[v115[6]];
  v122 = v115[7];
  v123 = (void **)((char *)v110 + v122);
  v124 = &v111[v122];
  v125 = *(uint64_t *)((char *)v110 + v122);
  v126 = *(_QWORD *)&v111[v122];
  if (!v125)
  {
    if (v126)
    {
      v128 = *((_QWORD *)v124 + 1);
      *v123 = v126;
      v123[1] = v128;
      swift_retain();
      goto LABEL_73;
    }
LABEL_72:
    *(_OWORD *)v123 = *(_OWORD *)v124;
    goto LABEL_73;
  }
  if (!v126)
  {
    swift_release();
    goto LABEL_72;
  }
  v127 = *((_QWORD *)v124 + 1);
  *v123 = v126;
  v123[1] = v127;
  swift_retain();
  swift_release();
LABEL_73:
  v129 = v10[16];
  v130 = *(void **)&a1[v129];
  v131 = *(void **)&a2[v129];
  *(_QWORD *)&a1[v129] = v131;
  v132 = v131;

  return a1;
}

char *sub_10031D348(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  size_t v77;
  void *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  size_t v101;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t, uint64_t);
  int v104;
  int v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  void *v120;
  int *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t (*v147)(char *, uint64_t, uint64_t);
  uint64_t v148;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v147 = v6;
  v148 = v4;
  v143 = v5;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Poster(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease(v16);
  v17 = v10[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  v22 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease(v22);
  v23 = v10[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  v28 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease(v28);
  v29 = v10[8];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  v34 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease(v34);
  *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
  *(_QWORD *)&a1[v10[10]] = *(_QWORD *)&a2[v10[10]];
  swift_release();
  v35 = v10[11];
  v36 = (uint64_t)&a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ViewModel(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40((uint64_t)v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      v53 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v36, v37, v53);
      v54 = *(int *)(v38 + 20);
      v55 = (void *)(v36 + v54);
      v56 = &v37[v54];
      v57 = type metadata accessor for Artwork.CropStyle(0);
      v58 = *(_QWORD *)(v57 - 8);
      v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
      v60 = v59(v55, 1, v57);
      v61 = v59(v56, 1, v57);
      if (v60)
      {
        if (!v61)
        {
          (*(void (**)(void *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v61)
        {
          (*(void (**)(void *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v58 + 8))(v55, v57);
      }
      v50 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v51 = v55;
      v52 = v56;
LABEL_14:
      memcpy(v51, v52, v50);
      goto LABEL_21;
    }
    sub_10005B748(v36, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v50 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v51 = (void *)v36;
    v52 = v37;
    goto LABEL_14;
  }
  if (v42)
    goto LABEL_13;
  v43 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v36, v37, v43);
  v44 = *(int *)(v38 + 20);
  v45 = (void *)(v36 + v44);
  v46 = &v37[v44];
  v47 = type metadata accessor for Artwork.CropStyle(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_21:
  v62 = v10[12];
  v63 = (uint64_t)&a1[v62];
  v64 = &a2[v62];
  v65 = type metadata accessor for MotionViewModel(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67((uint64_t)v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      v80 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v63, v64, v80);
      v81 = *(int *)(v65 + 20);
      v82 = (void *)(v63 + v81);
      v83 = &v64[v81];
      v84 = type metadata accessor for Artwork.CropStyle(0);
      v85 = *(_QWORD *)(v84 - 8);
      v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
      v87 = v86(v82, 1, v84);
      v88 = v86(v83, 1, v84);
      if (v87)
      {
        if (!v88)
        {
          (*(void (**)(void *, char *, uint64_t))(v85 + 32))(v82, v83, v84);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v88)
        {
          (*(void (**)(void *, char *, uint64_t))(v85 + 40))(v82, v83, v84);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v85 + 8))(v82, v84);
      }
      v77 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v78 = v82;
      v79 = v83;
LABEL_28:
      memcpy(v78, v79, v77);
      goto LABEL_34;
    }
    sub_10005B748(v63, type metadata accessor for MotionViewModel);
LABEL_27:
    v77 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v78 = (void *)v63;
    v79 = v64;
    goto LABEL_28;
  }
  if (v69)
    goto LABEL_27;
  v70 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v63, v64, v70);
  v71 = *(int *)(v65 + 20);
  v72 = (void *)(v63 + v71);
  v73 = &v64[v71];
  v74 = type metadata accessor for Artwork.CropStyle(0);
  v75 = *(_QWORD *)(v74 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
  {
    v76 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v75 + 32))(v72, v73, v74);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_34:
  v89 = v10[13];
  v90 = &a1[v89];
  v91 = &a2[v89];
  v92 = type metadata accessor for Poster.Badge(0);
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
  v95 = v94(v90, 1, v92);
  v96 = v94(v91, 1, v92);
  if (!v95)
  {
    v97 = v148;
    if (!v96)
    {
      v102 = sub_100007E8C(&qword_1011AC088);
      v145 = *(_QWORD *)(v102 - 8);
      v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 48);
      v104 = v103(v90, 1, v102);
      v105 = v103(v91, 1, v102);
      v97 = v148;
      if (v104)
      {
        if (!v105)
        {
          *(_OWORD *)v90 = *(_OWORD *)v91;
          v106 = *(int *)(v102 + 48);
          v107 = &v90[v106];
          v108 = &v91[v106];
          v109 = type metadata accessor for Poster.CustomBadgeStyle(0);
          if (swift_getEnumCaseMultiPayload(v108, v109) == 1)
          {
            v110 = type metadata accessor for Material(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v107, v108, v110);
            swift_storeEnumTagMultiPayload(v107, v109, 1);
          }
          else
          {
            memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v90, 0, 1, v102);
          goto LABEL_61;
        }
      }
      else
      {
        if (!v105)
        {
          v138 = *((_QWORD *)v91 + 1);
          v139 = *((_QWORD *)v90 + 1);
          *(_QWORD *)v90 = *(_QWORD *)v91;
          *((_QWORD *)v90 + 1) = v138;
          swift_bridgeObjectRelease(v139);
          if (a1 == a2)
            goto LABEL_61;
          v140 = *(int *)(v102 + 48);
          v90 += v140;
          v91 += v140;
          sub_10005B748((uint64_t)v90, type metadata accessor for Poster.CustomBadgeStyle);
          v141 = type metadata accessor for Poster.CustomBadgeStyle(0);
          if (swift_getEnumCaseMultiPayload(v91, v141) == 1)
          {
            v142 = type metadata accessor for Material(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v90, v91, v142);
            swift_storeEnumTagMultiPayload(v90, v141, 1);
            goto LABEL_61;
          }
          v100 = *(_QWORD *)(v141 - 8);
          goto LABEL_41;
        }
        sub_10004FF60((uint64_t)v90, &qword_1011AC088);
      }
      v101 = *(_QWORD *)(v93 + 64);
      goto LABEL_42;
    }
    sub_10005B748((uint64_t)v90, type metadata accessor for Poster.Badge);
LABEL_40:
    v100 = *(_QWORD *)(sub_100007E8C(&qword_1011AC090) - 8);
LABEL_41:
    v101 = *(_QWORD *)(v100 + 64);
LABEL_42:
    memcpy(v90, v91, v101);
    goto LABEL_61;
  }
  v97 = v148;
  if (v96)
    goto LABEL_40;
  v98 = sub_100007E8C(&qword_1011AC088);
  v99 = *(_QWORD *)(v98 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v91, 1, v98))
  {
    memcpy(v90, v91, *(_QWORD *)(v93 + 64));
  }
  else
  {
    *(_OWORD *)v90 = *(_OWORD *)v91;
    v111 = *(int *)(v98 + 48);
    v146 = &v90[v111];
    v112 = &v91[v111];
    v113 = type metadata accessor for Poster.CustomBadgeStyle(0);
    v144 = v112;
    v114 = v112;
    v115 = v113;
    if (swift_getEnumCaseMultiPayload(v114, v113) == 1)
    {
      v116 = type metadata accessor for Material(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v146, v144, v116);
      swift_storeEnumTagMultiPayload(v146, v115, 1);
    }
    else
    {
      memcpy(v146, v144, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v90, 0, 1, v98);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
LABEL_61:
  a1[v10[14]] = a2[v10[14]];
  v117 = v10[15];
  v118 = &a1[v117];
  v119 = &a2[v117];
  v120 = *(void **)&a1[v117];
  *(_QWORD *)v118 = *(_QWORD *)&a2[v117];

  v121 = (int *)type metadata accessor for SegueContext(0);
  v122 = v121[5];
  v123 = &v118[v122];
  v124 = &v119[v122];
  v125 = v147(&v118[v122], 1, v97);
  v126 = v147(v124, 1, v97);
  if (v125)
  {
    if (!v126)
    {
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v123, v124, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v123, 0, 1, v97);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v126)
  {
    (*(void (**)(char *, uint64_t))(v143 + 8))(v123, v97);
LABEL_66:
    v127 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v143 + 40))(v123, v124, v97);
LABEL_67:
  v118[v121[6]] = v119[v121[6]];
  v128 = v121[7];
  v129 = &v118[v128];
  v130 = &v119[v128];
  v131 = *(_QWORD *)&v118[v128];
  v132 = *(_QWORD *)&v119[v128];
  if (!v131)
  {
    if (v132)
    {
      v134 = *((_QWORD *)v130 + 1);
      *(_QWORD *)v129 = v132;
      *((_QWORD *)v129 + 1) = v134;
      goto LABEL_74;
    }
LABEL_73:
    *(_OWORD *)v129 = *(_OWORD *)v130;
    goto LABEL_74;
  }
  if (!v132)
  {
    swift_release();
    goto LABEL_73;
  }
  v133 = *((_QWORD *)v130 + 1);
  *(_QWORD *)v129 = v132;
  *((_QWORD *)v129 + 1) = v133;
  swift_release();
LABEL_74:
  v135 = v10[16];
  v136 = *(void **)&a1[v135];
  *(_QWORD *)&a1[v135] = *(_QWORD *)&a2[v135];

  return a1;
}

uint64_t sub_10031DDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031DDC8);
}

uint64_t sub_10031DDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Poster);
}

uint64_t sub_10031DDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031DDE0);
}

uint64_t sub_10031DDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Poster);
}

uint64_t sub_10031DDEC()
{
  return sub_100048748(&qword_1011AA900, type metadata accessor for MotionArtworkView, (uint64_t)&unk_100EC9360);
}

unint64_t sub_10031DE1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ACA00;
  if (!qword_1011ACA00)
  {
    v1 = sub_100044B54(&qword_1011AC908);
    sub_100049F28(&qword_1011ACA08, &qword_1011AC918, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011ACA10, &qword_1011AC910, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ACA00);
  }
  return result;
}

uint64_t sub_10031DEB8()
{
  return sub_10015FD08(&qword_1011ACA18, &qword_1011ACA20, (void (*)(void))sub_10031C738, (void (*)(void))sub_10031C7BC);
}

uint64_t sub_10031DEEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9C514, 1);
}

uint64_t sub_10031DEFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100313B64(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t *sub_10031DF14(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[12];
  v3 = a1[13];
  v4 = a1[14];
  v5 = a1[15];
  v6 = a1[21];
  v7 = a1[22];
  v9 = a1[24];
  v10 = a1[23];
  sub_10031E00C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_1000E450C(v2, v3, v4, v5);
  swift_release();
  swift_release();
  swift_release();
  sub_1000E450C(v6, v7, v10, v9);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

double sub_10031E00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  double result;

  if (a7)
  {
    sub_100055BAC(a4, a5, a6 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(a7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10031E07C()
{
  return sub_10005610C(&qword_1011ACA30, &qword_1011ACA38, (void (*)(void))sub_10031E0B0);
}

unint64_t sub_10031E0B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ACA40;
  if (!qword_1011ACA40)
  {
    v1 = sub_100044B54(&qword_1011ACA48);
    sub_10031E134();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ACA40);
  }
  return result;
}

unint64_t sub_10031E134()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ACA50;
  if (!qword_1011ACA50)
  {
    v1 = sub_100044B54(&qword_1011ACA58);
    sub_100049F28(&qword_1011ACA60, &qword_1011ACA68, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ACA50);
  }
  return result;
}

uint64_t sub_10031E1B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011B6950, (unint64_t *)&unk_1011ACAB0, (uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t sub_10031E1D4@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_1011A3D80, (unint64_t *)&qword_1011ACAC0, (uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t sub_10031E1F0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v8 = sub_100007E8C(a1);
  v9 = sub_100049F28(a2, a1, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v8);
  dispatch thunk of Collection.endIndex.getter(v17, v8, v9);
  if (v18 == v17[0])
  {
    v10 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v17, &v18, v8, v9);
    v14 = v13;
    v15 = a3(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a4, 0, 1, v15);
  }
}

uint64_t sub_10031E308@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011ACAE0, (unint64_t *)&unk_1011AE8F0, (uint64_t (*)(_QWORD))&type metadata accessor for Genre, a1);
}

uint64_t sub_10031E324@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011A96F0, (unint64_t *)&qword_1011A9760, (uint64_t (*)(_QWORD))&type metadata accessor for Track, a1);
}

uint64_t sub_10031E340@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_10119FE20, (unint64_t *)&unk_1011ACB30, (uint64_t (*)(_QWORD))&type metadata accessor for Curator, a1);
}

uint64_t sub_10031E35C@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011CF3D0, (unint64_t *)&unk_1011ACBA0, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, a1);
}

uint64_t sub_10031E378@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011CEA10, (unint64_t *)&unk_1011ACB90, (uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, a1);
}

uint64_t sub_10031E394@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011ACAD0, (unint64_t *)&unk_1011B56E0, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_10031E3B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_10119FDD0, (unint64_t *)&unk_1011ACB40, (uint64_t (*)(_QWORD))&type metadata accessor for RadioShow, a1);
}

uint64_t sub_10031E3CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011D0B50, (unint64_t *)&unk_1011ACB50, (uint64_t (*)(_QWORD))&type metadata accessor for RecordLabel, a1);
}

uint64_t sub_10031E3E8@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011B8DA0, &qword_1011ACBF0, (uint64_t (*)(_QWORD))&type metadata accessor for Song, a1);
}

uint64_t sub_10031E404@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_10119FDA0, (unint64_t *)&unk_1011ACB00, (uint64_t (*)(_QWORD))&type metadata accessor for Station, a1);
}

uint64_t sub_10031E420@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_1011BEB40, (unint64_t *)&unk_1011ACBB0, (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode, a1);
}

uint64_t sub_10031E43C@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_10119FD68, (unint64_t *)&unk_1011ACBC0, (uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t sub_10031E458@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_10119FD50, &qword_1011ACBD0, (uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t sub_10031E474@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_10119FD38, (unint64_t *)&unk_1011ACB60, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio, a1);
}

uint64_t sub_10031E490@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_10119FD18, (unint64_t *)&unk_1011ACB70, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo, a1);
}

uint64_t sub_10031E4AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011ACE60, (unint64_t *)&unk_1011ACB80, (uint64_t (*)(_QWORD))&type metadata accessor for Composer, a1);
}

uint64_t sub_10031E4C8(uint64_t a1)
{
  return sub_10031E570(a1, (unint64_t *)&unk_1011ACB10, UITouch_ptr);
}

uint64_t sub_10031E4DC(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;

  result = sub_100837CE0(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 2;
  else
    return sub_1003229D8(result, v3, 0, a1) & 1;
}

uint64_t sub_10031E540@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0((uint64_t *)&unk_1011ACC20, &qword_1011A60C0, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry, a1);
}

uint64_t sub_10031E55C(uint64_t a1)
{
  return sub_10031E570(a1, &qword_1011A4630, UIScene_ptr);
}

uint64_t sub_10031E570(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaSet.startIndex.getter(v7);
    v10 = v9;
    v11 = __CocoaSet.endIndex.getter(v7);
    v13 = static __CocoaSet.Index.== infix(_:_:)(v8, v10, v11, v12);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = sub_100322C8C(a1);
  if ((v17 & 1) == 0)
  {
    v10 = v16;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v16)
    {
      v8 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_10016AE14(v8, v10, v6 != 0);
        return 0;
      }
LABEL_10:
      sub_100322A2C(v8, v10, v6 != 0, a1, a2, a3);
      v14 = v18;
      sub_10016AE14(v8, v10, v6 != 0);
      return v14;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10031E694@<X0>(uint64_t a1@<X8>)
{
  return sub_10031E1F0(&qword_1011ACBD8, (unint64_t *)&unk_1011ACBE0, (uint64_t (*)(_QWORD))&type metadata accessor for GenericMusicItem, a1);
}

uint64_t sub_10031E6B0(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_100837CE0(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0xF000000000000000;
  v5 = sub_100322D14(result, v3, 0, a1);
  sub_10004A06C(v5);
  return v5;
}

uint64_t sub_10031E71C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v18[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  v2 = __chkstk_darwin();
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = Album.title.getter(v2);
  v7 = v6;
  v8 = swift_bridgeObjectRelease(v6);
  v9 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v9 = v5 & 0xFFFFFFFFFFFFLL;
  if (v9)
    return Album.title.getter(v8);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
  static Locale.current.getter(v11);
  v10 = String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, 0, v1, 0, 0, 256);
  v13 = v12;
  if (Album.trackCount.getter() <= 1)
  {
    v14 = Album.representativeTrackTitle.getter();
    if (v15)
    {
      v16 = v14;
      swift_bridgeObjectRelease(v13);
      return v16;
    }
  }
  return v10;
}

uint64_t sub_10031E87C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v14[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v14[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  v2 = __chkstk_darwin();
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = Album.artistName.getter(v2);
  v7 = v6;
  v8 = swift_bridgeObjectRelease(v6);
  v9 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v9 = v5 & 0xFFFFFFFFFFFFLL;
  if (v9)
    return Album.artistName.getter(v8);
  if ((Album.isCompilation.getter(v8) & 1) != 0)
  {
    v11 = 0x2073756F69726156;
    v12 = 0xEF73747369747241;
  }
  else
  {
    v11 = 0x206E776F6E6B6E55;
    v12 = 0xEE00747369747241;
  }
  v13 = String.LocalizationValue.init(stringLiteral:)(v11, v12);
  static Locale.current.getter(v13);
  return String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, 0, v1, 0, 0, 256);
}

uint64_t sub_10031E9D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[11];

  v0 = sub_100007E8C(&qword_1011A2290);
  v1 = __chkstk_darwin(v0);
  if ((Playlist.isOwner.getter(v1) & 1) != 0)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v3);
    sub_100065184(v3);
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_10031EBE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v0 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v25 = *(_QWORD *)(v0 - 8);
  v26 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date.FormatStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - v8;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MusicVideo.releaseYear.getter(v15);
  if ((v19 & 1) != 0)
  {
    MusicVideo.releaseDate.getter(v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A30A0);
      return 0;
    }
    else
    {
      v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
      v22 = static FormatStyle<>.dateTime.getter(v21);
      static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v22);
      Date.FormatStyle.year(_:)(v2);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v2, v26);
      v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v6, v3);
      v24 = sub_100048748((unint64_t *)&unk_1011ACB20, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
      Date.formatted<A>(_:)(&v27, v9, v3, v24);
      v23(v9, v3);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      return v27;
    }
  }
  else
  {
    v27 = v18;
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  }
}

uint64_t sub_10031EE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t);
  void *v9;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011ACAF0);
  v1 = type metadata accessor for Playlist.Variant(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + 6 * v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EB02A0;
  v7 = v6 + v5;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v8(v7, enum case for Playlist.Variant.regular(_:), v1);
  v8(v7 + v3, enum case for Playlist.Variant.smart(_:), v1);
  v8(v7 + 2 * v3, enum case for Playlist.Variant.genius(_:), v1);
  v8(v7 + 3 * v3, enum case for Playlist.Variant.favoriteSongs(_:), v1);
  v8(v7 + 4 * v3, enum case for Playlist.Variant.subscribed(_:), v1);
  v8(v7 + 5 * v3, enum case for Playlist.Variant.personalMix(_:), v1);
  v9 = sub_100047034(v6);
  swift_setDeallocating(v6);
  swift_arrayDestroy(v7, 6, v1);
  result = swift_deallocClassInstance(v6, 32, 7);
  qword_10124CD78 = (uint64_t)v9;
  return result;
}

uint64_t sub_10031EF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t);
  void *v9;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011ACAF0);
  v1 = type metadata accessor for Playlist.Variant(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 - v3 + 8 * v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA8160;
  v7 = v6 + v5;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v8(v7, enum case for Playlist.Variant.regular(_:), v1);
  v8(v7 + v3, enum case for Playlist.Variant.smart(_:), v1);
  v8(v7 + 2 * v3, enum case for Playlist.Variant.genius(_:), v1);
  v8(v7 + 3 * v3, enum case for Playlist.Variant.favoriteSongs(_:), v1);
  v8(v7 + 4 * v3, enum case for Playlist.Variant.subscribed(_:), v1);
  v8(v7 + 5 * v3, enum case for Playlist.Variant.personalMix(_:), v1);
  v8(v7 + 6 * v3, enum case for Playlist.Variant.folder(_:), v1);
  v9 = sub_100047034(v6);
  swift_setDeallocating(v6);
  swift_arrayDestroy(v7, 7, v1);
  result = swift_deallocClassInstance(v6, 32, 7);
  qword_10124CD80 = (uint64_t)v9;
  return result;
}

uint64_t Playlist.numberOfDuplicateTracks(_:library:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = type metadata accessor for Playlist(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v3[12] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicLibrary.AddToPlaylistAction(0);
  v3[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[14] = v7;
  v3[15] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10031F19C, 0, 0);
}

uint64_t sub_10031F19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v2 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v1);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 24), v1, v2);
  if (*(_QWORD *)(v0 + 16) == *(_QWORD *)(v0 + 24))
  {
    v3 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    static MusicLibraryAction<>.add(to:)(*(_QWORD *)(v0 + 72));
    v5 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.duplicateCount<A, B>(for:action:)[1]);
    *(_QWORD *)(v0 + 128) = v5;
    v6 = sub_100049F28((unint64_t *)&unk_1011B5730, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    *v5 = v0;
    v5[1] = sub_10031F2EC;
    return MusicLibrary.duplicateCount<A, B>(for:action:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 120), v1, *(_QWORD *)(v0 + 104), v6, &protocol witness table for MusicLibrary.AddToPlaylistAction, &protocol witness table for MusicLibrary.AddToPlaylistAction, &protocol witness table for Track);
  }
}

uint64_t sub_10031F2EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(_QWORD *)(*v2 + 128);
  v5 = *v2;
  *(_QWORD *)(v5 + 136) = v1;
  swift_task_dealloc(v4);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 + 112) + 8))(*(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 104));
  if (v1)
    return swift_task_switch(sub_10031F390, 0, 0);
  v7 = *(_QWORD *)(v5 + 96);
  swift_task_dealloc(*(_QWORD *)(v5 + 120));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_10031F390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  if (qword_10119BA00 != -1)
    swift_once(&qword_10119BA00, sub_100165EE4);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_10124C900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 80);
  if (v10)
  {
    v15 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v27 = v26;
    *(_DWORD *)v15 = 136446466;
    v16 = Playlist.description.getter(v26);
    v18 = v17;
    *(_QWORD *)(v0 + 32) = sub_100322200(v16, v17, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t, __n128))(v13 + 8))(v12, v14, v19);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 40) = v11;
    swift_errorRetain(v11);
    v20 = sub_100007E8C(&qword_1011A14B0);
    v21 = String.init<A>(describing:)(v0 + 40, v20);
    v23 = v22;
    *(_QWORD *)(v0 + 48) = sub_100322200(v21, v22, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to retrieve duplicate tracks count for playlist=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v11);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 136));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  v24 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t Playlist.addTracks(_:duplicatePolicy:duplicateCount:presentationSource:presentNotice:mpModel:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)(v8 + 536) = v7;
  *(_QWORD *)(v8 + 528) = a7;
  *(_BYTE *)(v8 + 905) = a6;
  *(_QWORD *)(v8 + 520) = a5;
  *(_BYTE *)(v8 + 904) = a4;
  *(_QWORD *)(v8 + 504) = a2;
  *(_QWORD *)(v8 + 512) = a3;
  *(_QWORD *)(v8 + 496) = a1;
  v9 = type metadata accessor for Locale(0);
  *(_QWORD *)(v8 + 544) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  *(_QWORD *)(v8 + 552) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicLibrary.AddToPlaylistError(0);
  *(_QWORD *)(v8 + 560) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 568) = v12;
  *(_QWORD *)(v8 + 576) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  *(_QWORD *)(v8 + 584) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 592) = v14;
  v15 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v8 + 600) = v15;
  *(_QWORD *)(v8 + 608) = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011ACA90);
  *(_QWORD *)(v8 + 616) = v16;
  *(_QWORD *)(v8 + 624) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A30F0);
  *(_QWORD *)(v8 + 632) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 640) = swift_task_alloc(v18);
  *(_QWORD *)(v8 + 648) = swift_task_alloc(v18);
  v19 = type metadata accessor for Notice.Variant(0);
  *(_QWORD *)(v8 + 656) = v19;
  v20 = (*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 664) = swift_task_alloc(v20);
  *(_QWORD *)(v8 + 672) = swift_task_alloc(v20);
  v21 = type metadata accessor for Notice(0);
  *(_QWORD *)(v8 + 680) = v21;
  v22 = (*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 688) = swift_task_alloc(v22);
  *(_QWORD *)(v8 + 696) = swift_task_alloc(v22);
  *(_QWORD *)(v8 + 704) = swift_task_alloc(v22);
  *(_QWORD *)(v8 + 712) = swift_task_alloc(v22);
  v23 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A9A00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 720) = swift_task_alloc(v23);
  *(_QWORD *)(v8 + 728) = swift_task_alloc(v23);
  v24 = type metadata accessor for Track(0);
  *(_QWORD *)(v8 + 736) = v24;
  v25 = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v8 + 744) = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 752) = swift_task_alloc(v26);
  *(_QWORD *)(v8 + 760) = swift_task_alloc(v26);
  *(_QWORD *)(v8 + 768) = swift_task_alloc(v26);
  v27 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  *(_QWORD *)(v8 + 776) = v27;
  v28 = *(_QWORD *)(v27 - 8);
  *(_QWORD *)(v8 + 784) = v28;
  *(_QWORD *)(v8 + 792) = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v8 + 800) = v29;
  v30 = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v8 + 808) = v30;
  v31 = *(_QWORD *)(v30 + 64);
  *(_QWORD *)(v8 + 816) = v31;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 824) = swift_task_alloc(v32);
  *(_QWORD *)(v8 + 832) = swift_task_alloc(v32);
  v33 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 840) = static MainActor.shared.getter(v34);
  v35 = dispatch thunk of Actor.unownedExecutor.getter(v33, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 848) = v35;
  *(_QWORD *)(v8 + 856) = v36;
  return swift_task_switch(sub_10031F91C, v35, v36);
}

uint64_t sub_10031F91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  *(_QWORD *)(v0 + 864) = v2;
  dispatch thunk of Collection.startIndex.getter(v1);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 456), v1, v2);
  if (*(_QWORD *)(v0 + 480) == *(_QWORD *)(v0 + 456))
  {
    swift_release();
    if (qword_10119BA00 != -1)
      swift_once(&qword_10119BA00, sub_100165EE4);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100048B14(v3, (uint64_t)qword_10124C900);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "No tracks to add to playlist.", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    v8 = *(_QWORD *)(v0 + 824);
    v9 = *(_QWORD *)(v0 + 792);
    v10 = *(_QWORD *)(v0 + 768);
    v11 = *(_QWORD *)(v0 + 760);
    v12 = *(_QWORD *)(v0 + 752);
    v13 = *(_QWORD *)(v0 + 728);
    v14 = *(_QWORD *)(v0 + 720);
    v15 = *(_QWORD *)(v0 + 712);
    v16 = *(_QWORD *)(v0 + 704);
    v21 = *(_QWORD *)(v0 + 696);
    v22 = *(_QWORD *)(v0 + 688);
    v23 = *(_QWORD *)(v0 + 672);
    v24 = *(_QWORD *)(v0 + 664);
    v25 = *(_QWORD *)(v0 + 648);
    v26 = *(_QWORD *)(v0 + 640);
    v27 = *(_QWORD *)(v0 + 632);
    v28 = *(_QWORD *)(v0 + 624);
    v29 = *(_QWORD *)(v0 + 608);
    v30 = *(_QWORD *)(v0 + 576);
    v31 = *(_QWORD *)(v0 + 552);
    v32 = *(_QWORD *)(v0 + 544);
    swift_task_dealloc(*(_QWORD *)(v0 + 832));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = type metadata accessor for MusicLibrary(0);
    *(_QWORD *)(v0 + 872) = static MusicLibrary.shared.getter(v18);
    v19 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)[1]);
    *(_QWORD *)(v0 + 880) = v19;
    v20 = sub_100049F28((unint64_t *)&unk_1011B5730, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    *(_QWORD *)(v0 + 888) = v20;
    *v19 = v0;
    v19[1] = sub_10031FC38;
    return MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 504), 0, 0, *(_QWORD *)(v0 + 584), v20);
  }
}

uint64_t sub_10031FC38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 880);
  *(_QWORD *)(*v1 + 896) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 856);
    v5 = *(_QWORD *)(v2 + 848);
    v6 = sub_1003209E8;
  }
  else
  {
    swift_release();
    v4 = *(_QWORD *)(v2 + 856);
    v5 = *(_QWORD *)(v2 + 848);
    v6 = sub_10031FCAC;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10031FCAC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __n128 v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t Strong;
  void *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, _QWORD);
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __n128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  double (**v146)();
  __n128 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;

  v1 = v0;
  v2 = *(unsigned __int8 *)(v0 + 905);
  v3 = swift_release();
  if (v2 != 1)
  {
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 808) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 800), v3);
    goto LABEL_65;
  }
  v4 = (_QWORD *)(v0 + 408);
  v5 = v0 + 400;
  v6 = *(_QWORD *)(v0 + 864);
  v7 = *(_QWORD *)(v0 + 792);
  v8 = *(_QWORD *)(v0 + 784);
  v9 = *(_QWORD *)(v1 + 776);
  v10 = *(_QWORD *)(v1 + 584);
  v11 = *(_QWORD *)(v1 + 504);
  v166 = v1;
  v12 = *(_BYTE *)(v1 + 904) & 1;
  dispatch thunk of Collection.startIndex.getter(v10);
  dispatch thunk of Collection.endIndex.getter(v4, v10, v6);
  v13 = dispatch thunk of Collection.distance(from:to:)(v5, v4, v10, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v11, v9);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9);
  LODWORD(v4) = enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.skipDuplicates(_:);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v16 = v14 == (_DWORD)v4 && v12 == 0;
  v1 = v166;
  if (v16)
  {
    v17 = *(_QWORD *)(v166 + 512);
    v18 = __OFSUB__(v13, v17);
    v13 -= v17;
    if (v18)
    {
      __break(1u);
      goto LABEL_67;
    }
  }
  v19 = *(void **)(v166 + 528);
  v20 = *(_QWORD *)(v166 + 864);
  v21 = *(_QWORD *)(v166 + 584);
  if (v19)
  {
    v22 = v13;
    v23 = v19;
    dispatch thunk of Collection.startIndex.getter(v21);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v166 + 472), v21, v20);
    if (dispatch thunk of Collection.distance(from:to:)(v166 + 464, v166 + 472, v21, v20) == 1)
    {
      v24 = *(_QWORD *)(v166 + 744);
      v25 = *(_QWORD *)(v166 + 736);
      v26 = *(_QWORD *)(v166 + 728);
      sub_10031E1F0((uint64_t *)&unk_1011A96F0, (unint64_t *)&qword_1011A9760, (uint64_t (*)(_QWORD))&type metadata accessor for Track, v26);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v26, 1, v25) == 1)
      {
        sub_10004FF60(*(_QWORD *)(v166 + 728), &qword_1011A9A00);
        v27 = 0;
      }
      else
      {
        v33 = *(_QWORD *)(v166 + 768);
        v34 = *(_QWORD *)(v166 + 744);
        v35 = *(_QWORD *)(v166 + 736);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 32))(v33, *(_QWORD *)(v166 + 728), v35);
        sub_10004A07C(0, (unint64_t *)&qword_10119E4F0, MPIdentifierSet_ptr);
        v36 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 3);
        v37 = swift_task_alloc(32);
        *(_QWORD *)(v37 + 16) = v33;
        sub_100321978(0xD000000000000019, 0x8000000100E35FA0, v36, (uint64_t)sub_100323120, v37);
        v27 = v38;
        swift_task_dealloc(v37);
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      }
    }
    else
    {
      v27 = 0;
    }
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v166 + 520));
    if (Strong)
    {
      v40 = (void *)Strong;
      v41 = UIViewController.noticePresenter.getter();

      v42 = *(_QWORD *)(v166 + 832);
      if (v41)
      {
        v43 = *(_QWORD **)(v166 + 672);
        v44 = *(_QWORD *)(v166 + 648);
        v45 = sub_100007E8C((uint64_t *)&unk_1011ACAA0);
        v46 = (char *)v43 + *(int *)(v45 + 48);
        *v43 = Playlist.name.getter(v47);
        v43[1] = v48;
        Playlist.artworkViewModel.getter(v44);
        v49 = type metadata accessor for ArtworkImage.ViewModel(0);
        v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v44, 1, v49);
        v51 = *(_QWORD *)(v166 + 648);
        if (v50 == 1)
        {
          sub_10004FF60(*(_QWORD *)(v166 + 648), (uint64_t *)&unk_1011A3E10);
          v52 = type metadata accessor for Artwork(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v46, 1, 1, v52);
        }
        else
        {
          v56 = type metadata accessor for Artwork(0);
          v57 = *(_QWORD *)(v56 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v46, v51, v56);
          sub_10005B748(v51, type metadata accessor for ArtworkImage.ViewModel);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v46, 0, 1, v56);
        }
        v58 = *(_QWORD *)(v166 + 672);
        v59 = *(_QWORD *)(v166 + 656);
        *(_QWORD *)(v58 + *(int *)(v45 + 64)) = v22;
        swift_storeEnumTagMultiPayload(v58, v59, 0);
        static Notice.variant(_:)(v58);
        sub_10005B748(v58, type metadata accessor for Notice.Variant);
        PresentationSource.windowScene.getter();
        if (!v60)
        {
          v66 = 0;
          goto LABEL_49;
        }
        v61 = v60;
        v62 = objc_msgSend(v60, "delegate");
        if (v62
          && (*(_QWORD *)(v166 + 488) = v62,
              v63 = sub_100007E8C(&qword_1011A9300),
              v64 = sub_100007E8C(&qword_1011A3120),
              (swift_dynamicCast(v166 + 296, v166 + 488, v63, v64, 6) & 1) != 0))
        {
          v65 = *(_QWORD *)(v166 + 320);
          if (v65)
          {
            v66 = *(_QWORD *)(*sub_100007E68((_QWORD *)(v166 + 296), v65)
                            + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
            swift_retain();
            _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v166 + 296));
LABEL_33:

LABEL_49:
            v103 = *(_QWORD *)(v166 + 808);
            v104 = *(_QWORD *)(v166 + 800);
            v105 = *(_QWORD *)(v166 + 632);
            v106 = v23;
            dispatch thunk of LegacyModelObjectConvertible.init(_:)(v106, v104, &protocol witness table for Playlist);
            v107 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v105, 1, v104);
            sub_10004FF60(v105, &qword_1011A30F0);
            v108 = *(_QWORD *)(v166 + 712);
            v109 = *(_QWORD *)(v166 + 704);
            if (v107 == 1)
            {
              sub_10032309C(*(_QWORD *)(v166 + 704), *(_QWORD *)(v166 + 712));
              swift_release();
            }
            else
            {
              v110 = *(_QWORD *)(v166 + 680);
              v111 = (_QWORD *)swift_allocObject(&unk_1010BF7E0, 40, 7);
              v111[2] = v106;
              v111[3] = v27;
              v111[4] = v66;
              sub_10032309C(v109, v108);
              v112 = (uint64_t *)(v108 + *(int *)(v110 + 32));
              v113 = *v112;
              v114 = v112[1];
              v27 = v27;
              v115 = v106;
              sub_10004BA30(v113, v114);
              *v112 = (uint64_t)sub_100323114;
              v112[1] = (uint64_t)v111;
            }
            v116 = *(_QWORD *)(v166 + 832);
            v117 = *(_QWORD *)(v166 + 808);
            v118 = *(_QWORD *)(v166 + 800);
            v119 = *(_QWORD *)(v166 + 712);
            sub_10005B748(*(_QWORD *)(v166 + 704), type metadata accessor for Notice);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v41 + 192))(v119, 0);

            swift_release();
            sub_10005B748(v119, type metadata accessor for Notice);
            (*(void (**)(uint64_t, uint64_t, __n128))(v117 + 8))(v116, v118, v120);
            goto LABEL_65;
          }
        }
        else
        {
          *(_QWORD *)(v166 + 328) = 0;
          *(_OWORD *)(v166 + 296) = 0u;
          *(_OWORD *)(v166 + 312) = 0u;
        }
        sub_10004FF60(v166 + 296, (uint64_t *)&unk_1011A3110);
        v66 = 0;
        goto LABEL_33;
      }
    }
    else
    {
      v42 = *(_QWORD *)(v166 + 832);
    }
    v53 = *(_QWORD *)(v166 + 808);
    v54 = *(_QWORD *)(v166 + 800);

    (*(void (**)(uint64_t, uint64_t, __n128))(v53 + 8))(v42, v54, v55);
LABEL_65:
    v148 = *(_QWORD *)(v1 + 832);
    v149 = *(_QWORD *)(v1 + 824);
    v150 = *(_QWORD *)(v1 + 792);
    v151 = *(_QWORD *)(v1 + 768);
    v152 = *(_QWORD *)(v1 + 760);
    v153 = *(_QWORD *)(v1 + 752);
    v154 = *(_QWORD *)(v1 + 728);
    v155 = *(_QWORD *)(v1 + 720);
    v156 = v1;
    v157 = *(_QWORD *)(v1 + 712);
    v158 = *(_QWORD *)(v156 + 704);
    v160 = *(_QWORD *)(v156 + 696);
    v162 = *(_QWORD *)(v156 + 688);
    v165 = *(_QWORD *)(v156 + 672);
    v167 = *(_QWORD *)(v156 + 664);
    v169 = *(_QWORD *)(v156 + 648);
    v171 = *(_QWORD *)(v156 + 640);
    v173 = *(_QWORD *)(v156 + 632);
    v175 = *(_QWORD *)(v156 + 624);
    v176 = *(_QWORD *)(v156 + 608);
    v179 = *(_QWORD *)(v156 + 576);
    v182 = *(_QWORD *)(v156 + 552);
    v184 = *(_QWORD *)(v156 + 544);
    swift_task_dealloc(v148);
    swift_task_dealloc(v149);
    swift_task_dealloc(v150);
    swift_task_dealloc(v151);
    swift_task_dealloc(v152);
    swift_task_dealloc(v153);
    swift_task_dealloc(v154);
    swift_task_dealloc(v155);
    swift_task_dealloc(v157);
    swift_task_dealloc(v158);
    swift_task_dealloc(v160);
    swift_task_dealloc(v162);
    swift_task_dealloc(v165);
    swift_task_dealloc(v167);
    swift_task_dealloc(v169);
    swift_task_dealloc(v171);
    swift_task_dealloc(v173);
    swift_task_dealloc(v175);
    swift_task_dealloc(v176);
    swift_task_dealloc(v179);
    swift_task_dealloc(v182);
    swift_task_dealloc(v184);
    return (*(uint64_t (**)(void))(v156 + 8))();
  }
  dispatch thunk of Collection.startIndex.getter(*(_QWORD *)(v166 + 584));
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v166 + 424), v21, v20);
  if (dispatch thunk of Collection.distance(from:to:)(v166 + 416, v166 + 424, v21, v20) == 1)
  {
    v28 = *(_QWORD *)(v166 + 744);
    v29 = *(_QWORD *)(v166 + 736);
    v30 = *(_QWORD *)(v166 + 720);
    sub_10031E1F0((uint64_t *)&unk_1011A96F0, (unint64_t *)&qword_1011A9760, (uint64_t (*)(_QWORD))&type metadata accessor for Track, v30);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v29);
    if ((_DWORD)v31 != 1)
    {
      v67 = *(_QWORD *)(v166 + 744);
      v68 = *(_QWORD *)(v166 + 736);
      v69 = *(_QWORD *)(v166 + 720);
      v161 = Track.id.getter(v31);
      v32 = v70;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v69, v68);
      goto LABEL_35;
    }
    sub_10004FF60(*(_QWORD *)(v166 + 720), &qword_1011A9A00);
  }
  v161 = 0;
  v32 = 0;
LABEL_35:
  if ((Playlist.hasActiveCollaboration.getter() & 1) == 0)
  {
LABEL_43:
    v89 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v166 + 520));
    if (!v89 || (v90 = (void *)v89, v91 = UIViewController.noticePresenter.getter(), v90, !v91))
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v166 + 808) + 8))(*(_QWORD *)(v166 + 832), *(_QWORD *)(v166 + 800));
      swift_bridgeObjectRelease(v32);
      goto LABEL_65;
    }
    v183 = v91;
    v164 = v32;
    v92 = v13;
    v93 = *(_QWORD **)(v166 + 664);
    v94 = *(_QWORD *)(v166 + 640);
    v95 = sub_100007E8C((uint64_t *)&unk_1011ACAA0);
    v96 = (char *)v93 + *(int *)(v95 + 48);
    *v93 = Playlist.name.getter(v97);
    v93[1] = v98;
    Playlist.artworkViewModel.getter(v94);
    v99 = type metadata accessor for ArtworkImage.ViewModel(0);
    v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v94, 1, v99);
    v101 = *(_QWORD *)(v166 + 640);
    if (v100 == 1)
    {
      sub_10004FF60(*(_QWORD *)(v166 + 640), (uint64_t *)&unk_1011A3E10);
      v102 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v96, 1, 1, v102);
    }
    else
    {
      v121 = type metadata accessor for Artwork(0);
      v122 = *(_QWORD *)(v121 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v96, v101, v121);
      sub_10005B748(v101, type metadata accessor for ArtworkImage.ViewModel);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v96, 0, 1, v121);
    }
    v123 = *(_QWORD *)(v166 + 664);
    v124 = *(_QWORD *)(v166 + 656);
    *(_QWORD *)(v123 + *(int *)(v95 + 64)) = v92;
    swift_storeEnumTagMultiPayload(v123, v124, 0);
    static Notice.variant(_:)(v123);
    sub_10005B748(v123, type metadata accessor for Notice.Variant);
    PresentationSource.windowScene.getter();
    if (!v125)
    {
      v178 = 0;
      goto LABEL_64;
    }
    v126 = v125;
    v127 = objc_msgSend(v125, "delegate");
    if (v127
      && (*(_QWORD *)(v166 + 440) = v127,
          v128 = sub_100007E8C(&qword_1011A9300),
          v129 = sub_100007E8C(&qword_1011A3120),
          (swift_dynamicCast(v166 + 256, v166 + 440, v128, v129, 6) & 1) != 0))
    {
      v130 = *(_QWORD *)(v166 + 280);
      if (v130)
      {
        v131 = *(_QWORD *)(*sub_100007E68((_QWORD *)(v166 + 256), v130)
                         + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
        swift_retain();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v166 + 256));
LABEL_62:
        v178 = v131;

LABEL_64:
        v181 = *(_QWORD *)(v166 + 832);
        v132 = *(_QWORD *)(v166 + 824);
        v133 = *(_QWORD *)(v166 + 816);
        v134 = *(_QWORD *)(v166 + 808);
        v135 = *(_QWORD *)(v166 + 800);
        v136 = *(_QWORD *)(v166 + 696);
        v137 = *(_QWORD *)(v166 + 688);
        v138 = *(_QWORD *)(v166 + 680);
        (*(void (**)(uint64_t))(v134 + 16))(v132);
        v139 = *(unsigned __int8 *)(v134 + 80);
        v140 = (v139 + 16) & ~v139;
        v141 = (v133 + v140 + 7) & 0xFFFFFFFFFFFFFFF8;
        v142 = (v141 + 23) & 0xFFFFFFFFFFFFFFF8;
        v143 = swift_allocObject(&unk_1010BF7B8, v142 + 8, v139 | 7);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v143 + v140, v132, v135);
        v144 = (uint64_t *)(v143 + v141);
        *v144 = v161;
        v144[1] = v164;
        *(_QWORD *)(v143 + v142) = v178;
        sub_10032309C(v137, v136);
        v145 = *(int *)(v138 + 32);
        v1 = v166;
        v146 = (double (**)())(v136 + v145);
        sub_10004BA30(*(_QWORD *)(v136 + v145), *(_QWORD *)(v136 + v145 + 8));
        *v146 = sub_10032304C;
        v146[1] = (double (*)())v143;
        sub_10005B748(v137, type metadata accessor for Notice);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v183 + 192))(v136, 0);
        swift_release();
        sub_10005B748(v136, type metadata accessor for Notice);
        (*(void (**)(uint64_t, uint64_t, __n128))(v134 + 8))(v181, v135, v147);
        goto LABEL_65;
      }
    }
    else
    {
      *(_QWORD *)(v166 + 288) = 0;
      *(_OWORD *)(v166 + 256) = 0u;
      *(_OWORD *)(v166 + 272) = 0u;
    }
    sub_10004FF60(v166 + 256, (uint64_t *)&unk_1011A3110);
    v131 = 0;
    goto LABEL_62;
  }
  v163 = v32;
  v159 = v13;
  v174 = v166 + 336;
  v71 = *(_QWORD *)(v166 + 888);
  v72 = *(_QWORD *)(v166 + 624);
  v73 = *(_QWORD *)(v166 + 616);
  v74 = *(_QWORD *)(v166 + 584);
  v170 = *(_QWORD *)(v166 + 592);
  v172 = *(_QWORD *)(v166 + 744);
  v168 = *(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 16);
  v168(*(_QWORD *)(v166 + 608), *(_QWORD *)(v166 + 496), v74);
  dispatch thunk of Sequence.makeIterator()(v74, v71);
  v75 = 0;
  v76 = (uint64_t *)(v72 + *(int *)(v73 + 36));
  while (1)
  {
    v77 = *v76;
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v166 + 448), *(_QWORD *)(v166 + 584), *(_QWORD *)(v166 + 864));
    if (v77 == *(_QWORD *)(v166 + 448))
      break;
    v78 = *(_QWORD *)(v166 + 760);
    v177 = *(_QWORD *)(v166 + 864);
    v180 = *(_QWORD *)(v166 + 752);
    v79 = *(_QWORD *)(v166 + 736);
    v80 = *(_QWORD *)(v166 + 624);
    v81 = *(_QWORD *)(v166 + 608);
    v82 = *(_QWORD *)(v166 + 584);
    v83 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v174, v76, v82, v177);
    (*(void (**)(uint64_t))(v172 + 16))(v78);
    v83(v174, 0);
    v168(v81, v80, v82);
    dispatch thunk of Collection.formIndex(after:)(v76, v82, v177);
    (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v81, v82);
    v84.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(v172 + 32))(v180, v78, v79);
    Track.catalogID.getter(v84);
    v86 = v85;
    v87 = swift_bridgeObjectRelease(v85);
    (*(void (**)(uint64_t, uint64_t, __n128))(v172 + 8))(v180, v79, v87);
    v88 = v86 == 0;
    v18 = __OFADD__(v75, v88);
    v75 += v88;
    if (v18)
    {
      __break(1u);
      break;
    }
  }
  result = sub_10004FF60(*(_QWORD *)(v166 + 624), (uint64_t *)&unk_1011ACA90);
  v13 = v159 - v75;
  if (!__OFSUB__(v159, v75))
  {
    v32 = v163;
    goto LABEL_43;
  }
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_1003209E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *aBlock;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98[3];

  v1 = v0 + 54;
  v2 = v0[112];
  v3 = v0[72];
  v4 = v0[70];
  swift_release();
  swift_release();
  v0[54] = v2;
  swift_errorRetain(v2);
  v5 = sub_100007E8C(&qword_1011A14B0);
  if ((swift_dynamicCast(v3, v0 + 54, v5, v4, 0) & 1) != 0)
  {
    v6 = (*(uint64_t (**)(_QWORD, _QWORD))(v0[71] + 88))(v0[72], v0[70]);
    if (v6 == enum case for MusicLibrary.AddToPlaylistError.duplicates(_:))
    {
      v84 = v0[108];
      v90 = v0[103];
      v7 = v0[101];
      v63 = v0[100];
      v64 = v0[76];
      v69 = v0[75];
      v71 = v0[102];
      v87 = v0[74];
      v65 = v0[73];
      v8 = (uint64_t *)v0[72];
      v9 = v0[71];
      v10 = v0[70];
      v11 = v0[69];
      v74 = v11;
      v12 = v0[68];
      v13 = v0[67];
      v14 = v0[65];
      v96 = v14;
      v15 = v0[62];
      v76 = v15;
      swift_errorRelease(v0[112]);
      (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v8, v10);
      v94 = *v8;
      v16 = String.LocalizationValue.init(stringLiteral:)(0x6961674120646441, 0xE90000000000006ELL);
      static Locale.current.getter(v16);
      String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v12, "Alert action to include duplicates when adding to playlist", 58, 2);
      v66 = v17;
      v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v78(v90, v13, v63);
      v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16);
      v77(v64, v15, v65);
      sub_100064AC8(v14, (uint64_t)(v0 + 2));
      v18 = *(unsigned __int8 *)(v7 + 80);
      v19 = (v18 + 16) & ~v18;
      v20 = *(unsigned __int8 *)(v87 + 80);
      v21 = (v71 + v20 + v19) & ~v20;
      v72 = v18 | v20 | 7;
      v73 = v19;
      v22 = v21;
      v23 = (v69 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
      v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
      v68 = v21;
      v70 = v24 + 72;
      v25 = swift_allocObject(&unk_1010BF718, v24 + 72, v72);
      v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v67(v25 + v19, v90, v63);
      v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32);
      v88(v25 + v22, v64, v65);
      *(_QWORD *)(v25 + v23) = v94;
      sub_100064EF0((uint64_t)(v0 + 2), v25 + v24);
      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v66);
      v0[24] = sub_1003227F0;
      v0[25] = v25;
      v0[20] = _NSConcreteStackBlock;
      v0[21] = 1107296256;
      v0[22] = sub_100223938;
      v0[23] = &unk_1010BF730;
      v27 = _Block_copy(v0 + 20);
      swift_release();
      aBlock = (void *)objc_opt_self(UIAlertAction);
      v92 = objc_msgSend(aBlock, "actionWithTitle:style:handler:", v26, 0, v27);
      _Block_release(v27);

      v28 = String.LocalizationValue.init(stringLiteral:)(1885956947, 0xE400000000000000);
      static Locale.current.getter(v28);
      String.init(localized:table:bundle:locale:comment:)(v74, 0, 0, 0, v12, "Alert action to skip duplicates when adding to playlist", 55, 2);
      v30 = v29;
      v78(v90, v13, v63);
      v77(v64, v76, v65);
      sub_100064AC8(v96, (uint64_t)(v0 + 11));
      v31 = swift_allocObject(&unk_1010BF768, v70, v72);
      v67(v31 + v73, v90, v63);
      v88(v31 + v68, v64, v65);
      *(_QWORD *)(v31 + v23) = v94;
      sub_100064EF0((uint64_t)(v0 + 11), v31 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      v0[30] = sub_10032291C;
      v0[31] = v31;
      v0[26] = _NSConcreteStackBlock;
      v0[27] = 1107296256;
      v0[28] = sub_100223938;
      v0[29] = &unk_1010BF780;
      v33 = _Block_copy(v0 + 26);
      v34 = objc_msgSend(aBlock, "actionWithTitle:style:handler:", v32, 0, v33, swift_release().n128_f64[0]);
      _Block_release(v33);

      dispatch thunk of Collection.startIndex.getter(v65);
      dispatch thunk of Collection.endIndex.getter(v0 + 49, v65, v84);
      v35 = dispatch thunk of Collection.distance(from:to:)(v0 + 48, v0 + 49, v65, v84);
      sub_100322D68(v94, v35, (uint64_t)v92, (uint64_t)v34);

      swift_errorRelease(v0[54]);
      goto LABEL_16;
    }
    if (v6 == enum case for MusicLibrary.AddToPlaylistError.noItemsToAdd(_:))
    {
      swift_errorRelease(v0[112]);
      if (qword_10119BA00 != -1)
        swift_once(&qword_10119BA00, sub_100165EE4);
      v36 = type metadata accessor for Logger(0);
      v37 = sub_100048B14(v36, (uint64_t)qword_10124C900);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "No tracks to add to playlist.", v40, 2u);
        swift_slowDealloc(v40, -1, -1);
      }

      swift_errorRelease(*v1);
      goto LABEL_16;
    }
    (*(void (**)(_QWORD, _QWORD))(v0[71] + 8))(v0[72], v0[70]);
  }
  swift_errorRelease(*v1);
  if (qword_10119BA00 != -1)
    swift_once(&qword_10119BA00, sub_100165EE4);
  v41 = v0[112];
  v42 = type metadata accessor for Logger(0);
  sub_100048B14(v42, (uint64_t)qword_10124C900);
  swift_errorRetain(v41);
  v43 = swift_errorRetain(v41);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.error.getter();
  v46 = os_log_type_enabled(v44, v45);
  v47 = v0[112];
  if (v46)
  {
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = swift_slowAlloc(32, -1);
    *(_DWORD *)v48 = 136446210;
    v98[0] = v49;
    v0[47] = v47;
    swift_errorRetain(v47);
    v50 = String.init<A>(describing:)(v0 + 47, v5);
    v52 = v51;
    v0[46] = sub_100322200(v50, v51, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 46, v0 + 47);
    swift_bridgeObjectRelease(v52);
    swift_errorRelease(v47);
    swift_errorRelease(v47);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Failed to add tracks to playlist with error=%{public}s", v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    swift_errorRelease(v47);
  }
  else
  {
    swift_errorRelease(v0[112]);
    swift_errorRelease(v47);
    swift_errorRelease(v47);

  }
LABEL_16:
  v53 = v0[103];
  v54 = v0[99];
  v55 = v0[96];
  v56 = v0[95];
  v57 = v0[94];
  v58 = v0[91];
  v59 = v0[90];
  v60 = v0[89];
  v61 = v0[88];
  v79 = v0[87];
  v80 = v0[86];
  v81 = v0[84];
  v82 = (void *)v0[83];
  v83 = v0[81];
  v85 = v0[80];
  v86 = v0[79];
  v89 = v0[78];
  v91 = v0[76];
  v93 = v0[72];
  v95 = v0[69];
  v97 = v0[68];
  swift_task_dealloc(v0[104]);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v97);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_100321314(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v4 = type metadata accessor for Track(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1010BF858, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v11 = swift_allocObject(&unk_1010BF880, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_1003231A0;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_100229354;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100273E14;
  aBlock[3] = &unk_1010BF898;
  v12 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(a1, "setUniversalStoreIdentifiersWithBlock:", v12, swift_release().n128_f64[0]);
  _Block_release(v12);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v11, "", 87, 97, 79, 1);
  swift_release();
  swift_release();
  if ((a1 & 1) != 0)
    __break(1u);
}

void sub_1003214AC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  uint64_t v46[2];
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for Track(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v46[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Track.catalogID.getter(v6);
  if (v10)
  {
    v11 = v10;
    v12 = HIBYTE(v10) & 0xF;
    v13 = v9 & 0xFFFFFFFFFFFFLL;
    if ((v11 & 0x2000000000000000) != 0)
      v14 = v12;
    else
      v14 = v9 & 0xFFFFFFFFFFFFLL;
    if (!v14)
    {
      *(_QWORD *)&v39 = swift_bridgeObjectRelease(v11).n128_u64[0];
      v40 = 0;
LABEL_54:
      objc_msgSend(a1, "setAdamID:", v40, v39);
      return;
    }
    if ((v11 & 0x1000000000000000) != 0)
    {
      v16 = sub_1001AF604(v9, v11, 10);
      v18 = v44;
LABEL_51:
      *(_QWORD *)&v39 = swift_bridgeObjectRelease(v11).n128_u64[0];
      if ((v18 & 1) != 0)
        v40 = 0;
      else
        v40 = v16;
      goto LABEL_54;
    }
    if ((v11 & 0x2000000000000000) == 0)
    {
      if ((v9 & 0x1000000000000000) != 0)
        v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v15 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v9, v11);
      v16 = (uint64_t)sub_1001AF5E4(v15, v13, 10);
      v18 = v17 & 1;
      goto LABEL_51;
    }
    v46[0] = v9;
    v46[1] = v11 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (!v12)
      {
LABEL_65:
        __break(1u);
        return;
      }
      if (v12 == 1 || (BYTE1(v9) - 48) > 9u)
        goto LABEL_38;
      v16 = (BYTE1(v9) - 48);
      if (v12 != 2)
      {
        if ((BYTE2(v9) - 48) > 9u)
          goto LABEL_38;
        v16 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
        v30 = v12 - 3;
        if (v30)
        {
          v31 = (unsigned __int8 *)v46 + 3;
          while (1)
          {
            v32 = *v31 - 48;
            if (v32 > 9)
              goto LABEL_38;
            v33 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
              goto LABEL_38;
            v16 = v33 + v32;
            if (__OFADD__(v33, v32))
              goto LABEL_38;
            v18 = 0;
            ++v31;
            if (!--v30)
              goto LABEL_51;
          }
        }
      }
    }
    else
    {
      if (v9 == 45)
      {
        if (v12)
        {
          if (v12 != 1 && (BYTE1(v9) - 48) <= 9u)
          {
            if (v12 == 2)
            {
              v18 = 0;
              v16 = -(uint64_t)(BYTE1(v9) - 48);
              goto LABEL_51;
            }
            if ((BYTE2(v9) - 48) <= 9u)
            {
              v16 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
              v38 = v12 - 3;
              if (!v38)
                goto LABEL_50;
              v41 = (unsigned __int8 *)v46 + 3;
              while (1)
              {
                v42 = *v41 - 48;
                if (v42 > 9)
                  break;
                v43 = 10 * v16;
                if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                  break;
                v16 = v43 - v42;
                if (__OFSUB__(v43, v42))
                  break;
                v18 = 0;
                ++v41;
                if (!--v38)
                  goto LABEL_51;
              }
            }
          }
LABEL_38:
          v16 = 0;
          v18 = 1;
          goto LABEL_51;
        }
        __break(1u);
        goto LABEL_65;
      }
      if (!v12 || (v9 - 48) > 9u)
        goto LABEL_38;
      v16 = (v9 - 48);
      if (v12 != 1)
      {
        if ((BYTE1(v9) - 48) > 9u)
          goto LABEL_38;
        v16 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
        v34 = v12 - 2;
        if (v34)
        {
          v35 = (unsigned __int8 *)v46 + 2;
          while (1)
          {
            v36 = *v35 - 48;
            if (v36 > 9)
              goto LABEL_38;
            v37 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
              goto LABEL_38;
            v16 = v37 + v36;
            if (__OFADD__(v37, v36))
              goto LABEL_38;
            v18 = 0;
            ++v35;
            if (!--v34)
              goto LABEL_51;
          }
        }
      }
    }
LABEL_50:
    v18 = 0;
    goto LABEL_51;
  }
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v19 = type metadata accessor for Logger(0);
  sub_100048B14(v19, (uint64_t)qword_10124DDD0);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v46[0] = v24;
    *(_DWORD *)v23 = 136315138;
    v25 = sub_100048748((unint64_t *)&unk_1011B6A00, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    v26 = dispatch thunk of CustomStringConvertible.description.getter(v4, v25);
    v28 = v27;
    v47 = sub_100322200(v26, v27, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    v29 = swift_bridgeObjectRelease(v28);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v29);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Catalog ID not present on track=%s.", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

}

void sub_100321978(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = swift_allocObject(&unk_1010BF808, 32, 7);
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  v13[4] = sub_100229354;
  v13[5] = v11;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004BF88;
  v13[3] = &unk_1010BF820;
  v12 = _Block_copy(v13);
  objc_msgSend(v9, "initWithSource:modelKind:block:", v10, a3, v12, swift_retain().n128_f64[0]);

  _Block_release(v12);
  swift_release();
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation(v11, "", 0, 0, 0, 1);
  swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
}

uint64_t sub_100321AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v7[6] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[7] = v9;
  v7[8] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[9] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[10] = v12;
  v7[11] = v13;
  return swift_task_switch(sub_100321B5C, v12, v13);
}

uint64_t sub_100321B5C()
{
  uint64_t *v0;
  uint64_t **v1;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[7] + 104))(v0[8], enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.includeDuplicates(_:), v0[6]);
  v1 = (uint64_t **)swift_task_alloc(dword_1011ACA8C);
  v0[12] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_100321BD8;
  return Playlist.addTracks(_:duplicatePolicy:duplicateCount:presentationSource:presentNotice:mpModel:)(v0[3], v0[8], v0[4], 0, v0[5], 1, 0);
}

uint64_t sub_100321BD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 56);
  v2 = *(_QWORD *)(*v0 + 64);
  v4 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100321C44, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_100321C44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100321C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[72];

  v36 = a4;
  v37 = a7;
  v34 = a5;
  v35 = a6;
  v33 = a3;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v9 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v32 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v8);
  sub_100064AC8(v34, (uint64_t)v38);
  type metadata accessor for MainActor(0);
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = *(unsigned __int8 *)(v9 + 80);
  v24 = (v13 + v23 + v22) & ~v23;
  v25 = (v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject(v35, v26 + 72, v21 | v23 | 7);
  *(_QWORD *)(v27 + 16) = v20;
  *(_QWORD *)(v27 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v27 + v22, v14, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v27 + v24, v32, v31);
  *(_QWORD *)(v27 + v25) = v36;
  sub_100064EF0((uint64_t)v38, v27 + v26);
  sub_100166D14((uint64_t)v17, v37, v27);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100321E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v7[6] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[7] = v9;
  v7[8] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[9] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[10] = v12;
  v7[11] = v13;
  return swift_task_switch(sub_100321F28, v12, v13);
}

uint64_t sub_100321F28()
{
  uint64_t *v0;
  uint64_t **v1;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[7] + 104))(v0[8], enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.skipDuplicates(_:), v0[6]);
  v1 = (uint64_t **)swift_task_alloc(dword_1011ACA8C);
  v0[12] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_100321FA4;
  return Playlist.addTracks(_:duplicatePolicy:duplicateCount:presentationSource:presentNotice:mpModel:)(v0[3], v0[8], v0[4], 0, v0[5], 1, 0);
}

uint64_t sub_100321FA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 56);
  v2 = *(_QWORD *)(*v0 + 64);
  v4 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_1003234CC, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_100322010()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v12[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  v2 = __chkstk_darwin();
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = Artist.name.getter(v2);
  v7 = v6;
  v8 = swift_bridgeObjectRelease(v6);
  v9 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v9 = v5 & 0xFFFFFFFFFFFFLL;
  if (v9)
    return Artist.name.getter(v8);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEE00747369747241);
  static Locale.current.getter(v11);
  return String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, 0, v1, 0, 0, 256);
}

uint64_t sub_10032213C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t static MPPropertySet.with(_:)(uint64_t (*a1)(void))
{
  return a1();
}

void sub_100322190(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a4();
  v8 = v7;
  v9 = sub_100322200(v6, v7, a3);
  v10 = *a1 + 8;
  v11 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
  swift_bridgeObjectRelease(v8);
  *a1 = v10;
}

uint64_t sub_100322200(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_1003222D0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10004FA40((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10004FA40((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v12);
  return v7;
}

uint64_t sub_1003222D0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100322488(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL, __dst);
}

uint64_t sub_100322488(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10032251C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100322690(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100322690(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10032251C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_1001AF4F4(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100322690(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011A4440);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_1003227DC(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

double sub_1003227F0(uint64_t a1)
{
  return sub_100322930(a1, (uint64_t)&unk_1010BF8F8, (uint64_t)&unk_1011ACC10);
}

uint64_t sub_100322804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100322814(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100322820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  v9 = v0 + v8;
  swift_unknownObjectWeakDestroy(v0 + v8, v10);
  v11 = *(unsigned __int8 *)(v0 + v8 + 48);
  if (v11 != 255)
    sub_100064AA4(*(id *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), v11);
  if (*(_QWORD *)(v9 + 56))
    swift_release();
  return swift_deallocObject(v0, v8 + 72);
}

double sub_10032291C(uint64_t a1)
{
  return sub_100322930(a1, (uint64_t)&unk_1010BF8D0, (uint64_t)&unk_1011ACC00);
}

double sub_100322930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v11 = (v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100321C7C(a1, v3 + v8, v3 + v11, *(_QWORD *)(v3 + v12), v3 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8), a2, a3);
}

uint64_t sub_1003229D8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + result);
LABEL_8:
  __break(1u);
  return result;
}

void sub_100322A2C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  id v25;
  uint64_t v26;
  unint64_t *v27;

  v10 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v15 = __CocoaSet.Index.element.getter(v10, a2);
        v26 = v15;
        v16 = sub_10004A07C(0, a5, a6);
        swift_unknownObjectRetain(v15, v17);
        swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
        a5 = v27;
        swift_unknownObjectRelease(v15);
        v18 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v19 = -1 << *(_BYTE *)(a4 + 32);
        v10 = v18 & ~v19;
        if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          v21 = static NSObject.== infix(_:_:)(v20, a5);

          if ((v21 & 1) == 0)
          {
            v22 = ~v19;
            do
            {
              v10 = (v10 + 1) & v22;
              if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                goto LABEL_24;
              v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
              v24 = static NSObject.== infix(_:_:)(v23, a5);

            }
            while ((v24 & 1) == 0);
          }

LABEL_20:
          v25 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v11 = a4;
  else
    v11 = a4 & 0xFFFFFFFFFFFFFF8;
  v12 = __CocoaSet.element(at:)(a1, a2, v11);
  v26 = v12;
  v13 = sub_10004A07C(0, a5, a6);
  swift_unknownObjectRetain(v12, v14);
  swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v12);
}

uint64_t sub_100322C8C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_100322D14(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

void sub_100322D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  const char *v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  _BYTE v25[16];

  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 < 2)
  {
    if (a1 == 1 && a2 >= 2)
    {
      v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002FLL, 0x8000000100E36050);
      static Locale.current.getter(v19);
      v15 = "Alert title for 1 duplicate track from container in playlist";
      v16 = v13;
      v17 = v10;
      v18 = 60;
    }
    else
    {
      v20 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000026, 0x8000000100E35FF0);
      static Locale.current.getter(v20);
      v15 = "Alert title for 1 duplicate track in playlist";
      v16 = v13;
      v17 = v10;
      v18 = 45;
    }
  }
  else
  {
    v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x8000000100E360C0);
    static Locale.current.getter(v14);
    v15 = "Alert title for multiple duplicate tracks from container in playlist";
    v16 = v13;
    v17 = v10;
    v18 = 68;
  }
  String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v17, v15, v18, 2);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v24 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v23, 0, 1);

  objc_msgSend(v24, "addAction:", a3);
  objc_msgSend(v24, "addAction:", a4);
  objc_msgSend(v24, "setPreferredAction:", a4);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v24, 1, (id)0xF, (void **)1, 0, 0);

}

uint64_t sub_100322FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

double sub_10032304C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100779490(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10032309C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003230E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100323114()
{
  uint64_t v0;

  return sub_1007799D0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_100323120(void *a1)
{
  uint64_t v1;

  sub_100321314(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100323130()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100323140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Track(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1003231A0(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Track(0) - 8) + 80);
  sub_1003214AC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1003231DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003231F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v1 + v5;
  v13 = v1 + v8;
  v14 = *(_QWORD *)(v1 + v9);
  v15 = v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)swift_task_alloc(dword_1011ACBFC);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10006AEE4;
  return sub_100321E90(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1003232DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v9);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  v10 = v0 + v8;
  swift_unknownObjectWeakDestroy(v0 + v8, v11);
  v12 = *(unsigned __int8 *)(v0 + v8 + 48);
  if (v12 != 255)
    sub_100064AA4(*(id *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), v12);
  if (*(_QWORD *)(v10 + 56))
    swift_release();
  return swift_deallocObject(v0, v8 + 72);
}

uint64_t sub_1003233E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v1 + v5;
  v13 = v1 + v8;
  v14 = *(_QWORD *)(v1 + v9);
  v15 = v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)swift_task_alloc(dword_1011ACC0C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10005AEE4;
  return sub_100321AC4(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1003234E8(uint64_t a1, char a2)
{
  if ((Feature.UIP.isEnabled.getter(0) & 1) != 0)
    __asm { BR              X10 }
  return 0;
}

id sub_100323678()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 0.75;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1011ACCF0 = (uint64_t)result;
  return result;
}

id sub_1003236B8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 40.0, 12.0, 0.0, 0.0);
  qword_1011ACCF8 = (uint64_t)result;
  return result;
}

char *sub_100323700()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char *v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC5Music17SingIndicatorView____lazy_storage___gradientView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Music17SingIndicatorView____lazy_storage___gradientView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC5Music17SingIndicatorView____lazy_storage___gradientView];
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(v0, "traitCollection");
    v6 = objc_msgSend(v5, "accessibilityContrast");

    if (v6 == (id)1)
      v7 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
    else
      v7 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v8 = v7;
    v9 = objc_allocWithZone((Class)type metadata accessor for LineProgressGradientView());
    v10 = LineProgressGradientView.init(color:featherWidth:direction:frame:)(v8, 0, 24.0, 0.0, 0.0, 0.0, 0.0);
    v11 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

uint64_t sub_1003237FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[4] = v4;
  v1[5] = v5;
  return swift_task_switch(sub_100323868, v4, v5);
}

uint64_t sub_100323868()
{
  uint64_t v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id v4;
  Class isa;
  Class v6;
  char *v7;
  _QWORD *v8;
  CGRect v10;

  objc_msgSend(*(id *)(v0 + 16), "bounds");
  CGRectGetWidth(v10);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v1);
  *(_QWORD *)(v0 + 48) = v2;

  objc_msgSend(v2, "setDuration:", 3.0);
  v3 = qword_10119BE70;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_10119BE70, sub_100323678);
  objc_msgSend(v4, "setTimingFunction:", qword_1011ACCF0);

  isa = CGPoint._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setFromValue:", isa);

  v6 = CGPoint._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setToValue:", v6);

  v7 = sub_100323700();
  *(_QWORD *)(v0 + 56) = objc_msgSend(v7, "layer");

  v8 = (_QWORD *)swift_task_alloc(dword_1011DCCBC);
  *(_QWORD *)(v0 + 64) = v8;
  *v8 = v0;
  v8[1] = sub_100323A24;
  return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v4, 0x6E6F697469736F70, 0xE800000000000000);
}

uint64_t sub_100323A24()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));

  return swift_task_switch(sub_100323A74, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100323A74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100323AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100323B1C, v4, v5);
}

uint64_t sub_100323B1C()
{
  uint64_t v0;
  NSString v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  Class isa;
  Class v8;
  NSString v9;
  id v10;
  Class v11;
  Class v12;
  void *v13;
  char *v14;
  id v15;
  NSString v16;
  void *v17;
  id v18;
  NSString v19;
  char *v20;
  id v21;
  double v22;
  id v23;
  double v24;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(CABasicAnimation);
  v3 = objc_msgSend(v2, "animationWithKeyPath:", v1);

  objc_msgSend(v3, "setDuration:", 2.0);
  v4 = qword_10119BE70;
  v5 = v3;
  if (v4 != -1)
    swift_once(&qword_10119BE70, sub_100323678);
  v6 = *(_QWORD *)(v0 + 16);
  objc_msgSend(v5, "setTimingFunction:", qword_1011ACCF0);

  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v5, "setFromValue:", isa);

  v8 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v5, "setToValue:", v8);

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v2, "animationWithKeyPath:", v9);

  objc_msgSend(v10, "setDuration:", 2.0);
  objc_msgSend(v10, "setTimingFunction:", qword_1011ACCF0);
  v11 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v10, "setFromValue:", v11);

  v12 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v10, "setToValue:", v12);

  v13 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v13, "begin");
  objc_msgSend(v13, "setDisableActions:", 1);
  v14 = sub_100323700();
  v15 = objc_msgSend(v14, "layer");

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "addAnimation:forKey:", v5, v16);

  v17 = *(void **)(v6 + OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel);
  v18 = objc_msgSend(v17, "layer");
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "addAnimation:forKey:", v10, v19);

  v20 = sub_100323700();
  v21 = objc_msgSend(v20, "layer");

  LODWORD(v22) = 0;
  objc_msgSend(v21, "setOpacity:", v22);

  v23 = objc_msgSend(v17, "layer");
  LODWORD(v24) = 0;
  objc_msgSend(v23, "setShadowOpacity:", v24);

  objc_msgSend(v13, "commit");
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100323E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v6);
  v4[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100323F08, v8, v9);
}

uint64_t sub_100323F08()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;

  swift_release(v0[5]);
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  if (qword_10119BE78 != -1)
    swift_once(&qword_10119BE78, sub_1003236B8);
  v1 = (void *)v0[2];
  v2 = (void *)qword_1011ACCF8;
  v3 = swift_allocObject(&unk_1010BF950, 24, 7);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = v1;
  static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v2, 0, sub_100324D1C, v3, 0, 0, 0.0);
  swift_release(v3);
  v5 = (_QWORD *)swift_task_alloc(dword_1011ACD3C);
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_100323FFC;
  return sub_1003237FC();
}

uint64_t sub_100323FFC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  v2 = (_QWORD *)swift_task_alloc(dword_1011ACD44);
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v4;
  v2[1] = sub_100324060;
  return sub_100323AB0();
}

uint64_t sub_100324060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10024AC14, v2, v3);
}

char *sub_1003241B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  objc_class *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _BYTE v30[16];
  objc_super v31;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17SingIndicatorView____lazy_storage___gradientView] = 0;
  v8 = OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel;
  v9 = objc_allocWithZone((Class)UILabel);
  v10 = v1;
  v11 = objc_msgSend(v9, "init");
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v12 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightSemibold);
  objc_msgSend(v11, "setFont:", v12);

  objc_msgSend(v11, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v1[v8] = v11;

  v13 = (objc_class *)type metadata accessor for SingIndicatorView();
  v31.receiver = v10;
  v31.super_class = v13;
  v14 = (char *)objc_msgSendSuper2(&v31, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel;
  v16 = *(void **)&v14[OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel];
  v17 = v14;
  v18 = v16;
  v19 = String.LocalizationValue.init(stringLiteral:)(1735289171, 0xE400000000000000);
  static Locale.current.getter(v19);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  objc_msgSend(v17, "addSubview:", *(_QWORD *)&v14[v15]);
  v23 = qword_10119C2F8;
  v24 = v17;
  if (v23 != -1)
    swift_once(&qword_10119C2F8, sub_1005D2E98);
  objc_msgSend(v24, "setBackgroundColor:", qword_10124D3D8);

  objc_msgSend(v24, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityLarge);
  v25 = objc_msgSend(v24, "traitCollection");
  v26 = objc_msgSend(v25, "accessibilityContrast");

  if (v26 != (id)1)
  {
    v27 = objc_msgSend(v24, "layer");
    v28 = kCAFilterPlusL;
    objc_msgSend(v27, "setCompositingFilter:", v28);

  }
  return v24;
}

void sub_100324518()
{
  char *v0;
  char *v1;
  char *v2;
  CGFloat v3;
  char *v4;
  double *v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;
  id v29;
  id v30;
  char v31[24];
  objc_super v32;
  CGRect v33;
  CGRect v34;

  v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for SingIndicatorView();
  objc_msgSendSuper2(&v32, "layoutSubviews");
  v2 = sub_100323700();
  objc_msgSend(v1, "addSubview:", v2);

  objc_msgSend(v1, "bounds");
  v3 = CGRectGetWidth(v33) + 24.0 + -5.0;
  v4 = sub_100323700();
  v5 = (double *)CGPoint.topLeft.unsafeMutableAddressor();
  swift_beginAccess(v5, v31, 0, 0);
  objc_msgSend(v4, "setAnchorPoint:", *v5, v5[1]);

  v6 = sub_100323700();
  objc_msgSend(v1, "bounds");
  objc_msgSend(v6, "setFrame:", -v3, 0.0, v3, CGRectGetHeight(v34));

  v7 = *(void **)&v1[OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel];
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setShadowOffset:", 0.0, 0.0);

  v9 = objc_msgSend(v7, "layer");
  LODWORD(v10) = 1058642330;
  objc_msgSend(v9, "setShadowOpacity:", v10);

  v11 = objc_msgSend(v7, "layer");
  objc_msgSend(v11, "setShadowRadius:", 3.0);

  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AB0;
  v15 = objc_msgSend(v1, "leadingAnchor");
  v16 = objc_msgSend(v7, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -5.0);

  *(_QWORD *)(v14 + 32) = v17;
  v18 = objc_msgSend(v1, "trailingAnchor");
  v19 = objc_msgSend(v7, "trailingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, 5.0);

  *(_QWORD *)(v14 + 40) = v20;
  v21 = objc_msgSend(v1, "topAnchor");
  v22 = objc_msgSend(v7, "topAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -5.0);

  *(_QWORD *)(v14 + 48) = v23;
  v24 = objc_msgSend(v1, "bottomAnchor");
  v25 = objc_msgSend(v7, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, 5.0);

  *(_QWORD *)(v14 + 56) = v26;
  specialized Array._endMutation()(v27);
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "activateConstraints:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v29 = objc_msgSend(v1, "layer");
  v30 = objc_msgSend(v7, "layer");
  objc_msgSend(v29, "setMask:", v30);

}

void sub_100324974(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for SingIndicatorView();
  objc_msgSendSuper2(&v13, "traitCollectionDidChange:", a1);
  if (a1)
    v3 = objc_msgSend(a1, "accessibilityContrast");
  else
    v3 = 0;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "accessibilityContrast");

  if (!a1 || v3 != v5)
  {
    v6 = objc_msgSend(v1, "traitCollection");
    v7 = objc_msgSend(v6, "accessibilityContrast");

    v8 = objc_msgSend(v1, "layer");
    if (v7 == (id)1)
    {
      v10 = 0;
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
      v12 = v11;
      v10 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v9 = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
    objc_msgSend(v8, "setCompositingFilter:", v10, v9);
    swift_unknownObjectRelease(v10);

  }
}

id sub_100324B30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingIndicatorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SingIndicatorView()
{
  return objc_opt_self(_TtC5Music17SingIndicatorView);
}

void sub_100324BB8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music17SingIndicatorView____lazy_storage___gradientView] = 0;
  v2 = OBJC_IVAR____TtC5Music17SingIndicatorView_singIndicatorLabel;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v4 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightSemibold);
  objc_msgSend(v3, "setFont:", v4);

  objc_msgSend(v3, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v1[v2] = v3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/SingIndicatorView.swift", 29, 2, 115, 0);
  __break(1u);
}

uint64_t sub_100324CCC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100324CF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100324D1C()
{
  uint64_t v0;
  void *v1;
  _QWORD v3[6];

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setAlpha:", 1.0);
  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  return objc_msgSend(v1, "setTransform:", v3);
}

id sub_100324D78(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  __int128 v30;
  objc_super v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _QWORD *v37;
  void *v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v1[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___headerRegistration];
  v11 = sub_100007E8C(&qword_1011A37B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &v1[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___listCellRegistration];
  v13 = sub_100007E8C(&qword_1011ACDC8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___searchController] = 0;
  type metadata accessor for MusicLibrary(0);
  v14 = v1;
  v32 = static MusicLibrary.shared.getter(v14);
  v33 = a1;
  v34 = 0;
  v35 = 0xE000000000000000;
  v36 = 16974083;
  v37 = _swiftEmptyArrayStorage;
  v38 = &_swiftEmptySetSingleton;
  v39 = 7;
  v40 = 0;
  v41 = 0xE000000000000000;
  v42 = _swiftEmptyArrayStorage;
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACDD0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController] = sub_10018C4C0((uint64_t)&v32);

  v31.receiver = v14;
  v31.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v31, "initWithNibName:bundle:", 0, 0);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x7265736F706D6F43, 0xE900000000000073);
  static Locale.current.getter(v17);
  String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setTitle:", v18, swift_bridgeObjectRelease().n128_f64[0]);

  v19 = v16;
  UIViewController.playActivityFeatureIdentifier.setter(4u);

  v20 = sub_100007E8C(&qword_1011A1750);
  v21 = swift_allocObject(v20, 48, 7);
  v30 = xmmword_100EA7AA0;
  *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
  v22 = sub_10018D478();
  *(_QWORD *)(v21 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v21 + 40) = v22;
  v23 = v19;
  v24 = UIViewController.registerForTraitChanges<A>(_:handler:)(v21, sub_100327698, 0, ObjectType);
  swift_unknownObjectRelease(v24);

  swift_bridgeObjectRelease();
  v25 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v25 + 16) = v30;
  v26 = sub_10013ADBC();
  *(_QWORD *)(v25 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v25 + 40) = v26;
  v27 = v23;
  v28 = UIViewController.registerForTraitChanges<A>(_:handler:)(v25, sub_10032769C, 0, ObjectType);
  swift_unknownObjectRelease(v28);
  swift_bridgeObjectRelease();

  return v27;
}

uint64_t sub_1003250C4()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD v15[4];
  _QWORD v16[4];
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, "viewDidLoad");
  v1 = sub_100325244();
  v2 = sub_100325244();
  v3 = sub_1005AEDD4((uint64_t)v2, 0, 0, 0, 0, 0);

  objc_msgSend(v1, "setCollectionViewLayout:", v3);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController];
  v5 = swift_allocObject(&unk_1010BF9A0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v0);
  v6 = *(_QWORD *)(v4 + 104);
  v7 = *(_QWORD *)(v4 + 112);
  *(_QWORD *)(v4 + 104) = sub_100327F58;
  *(_QWORD *)(v4 + 112) = v5;
  sub_10004BA30(v6, v7);
  v8 = sub_10032580C();
  v9 = swift_allocObject(&unk_1010BF9A0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v0);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v8 + 72) = sub_100327F60;
  *(_QWORD *)(v8 + 80) = v9;
  sub_10004BA30(v10, v11);
  swift_release();
  v15[3] = sub_100007E8C(&qword_1011A37B0);
  v12 = sub_100049F68(v15);
  sub_100325A8C((uint64_t)v12);
  v16[3] = sub_100007E8C(&qword_1011ACDC8);
  v13 = sub_100049F68(v16);
  sub_100325C80((uint64_t)v13);
  return swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
}

id sub_100325244()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  id result;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double Width;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  _BYTE v45[16];
  objc_super v46;
  objc_super v47;
  objc_super v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___collectionView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___collectionView];
  if (v11)
  {
    v12 = *(id *)&v1[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___collectionView];
LABEL_8:
    v44 = v11;
    return v12;
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v14);
  v15 = v13;
  v16 = sub_1001089FC(v15, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v48.receiver = v16;
    v48.super_class = v14;
    objc_msgSendSuper2(&v48, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v47.receiver = v16;
    v47.super_class = v14;
    objc_msgSendSuper2(&v47, "setFrame:", v20, v22, v24, v26);
    v49.origin.x = v28;
    v49.origin.y = v30;
    v49.size.width = v32;
    v49.size.height = v34;
    Width = CGRectGetWidth(v49);
    v46.receiver = v16;
    v46.super_class = v14;
    objc_msgSendSuper2(&v46, "frame");
    if (Width != CGRectGetWidth(v50))
      sub_100108B5C();
    objc_msgSend(v16, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "addSubview:", v16);

      objc_msgSend(v16, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v16, "setDataSource:", v1);
      objc_msgSend(v16, "setDelegate:", v1);
      objc_msgSend(v16, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v16, "setKeyboardDismissMode:", 1);
      objc_msgSend(v16, "setAllowsFocus:", 1);
      objc_msgSend(v16, "setRemembersLastFocusedIndexPath:", 1);
      v45[15] = 0;
      v37 = sub_10004D63C();
      v38 = v16;
      objc_msgSend(v38, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v37) & 1);

      v39 = AccessibilityIdentifier.libraryComposersView.unsafeMutableAddressor();
      v40 = *v39;
      v41 = v39[1];
      swift_bridgeObjectRetain();
      v42 = UIView.withAccessibilityIdentifier(_:)(v40, v41);

      swift_bridgeObjectRelease(v41);
      v43 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v42;
      v12 = v42;

      v11 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003255F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  char v21;
  __n128 v22;
  char v23;
  _BYTE v25[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011ACDF0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C((uint64_t *)&unk_1011CF3F0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v12 = (void *)result;
    sub_10004A160(a1, (uint64_t)v6, (uint64_t *)&unk_1011ACDF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011ACDF0);
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    objc_msgSend(v12, "setNeedsUpdateContentUnavailableConfiguration");
    v13 = sub_100325244();
    objc_msgSend(v13, "reloadData");

    v14 = sub_10032580C();
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      v15 = (uint64_t *)(*(_QWORD *)(sub_10032580C() + 104)
                      + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
      v16 = v15[1];
      if (v16)
      {
        v17 = *v15;
        swift_release();
        v18 = HIBYTE(v16) & 0xF;
        if ((v16 & 0x2000000000000000) == 0)
          v18 = v17 & 0xFFFFFFFFFFFFLL;
        v19 = v18 != 0;
        v20 = *(unsigned __int8 *)(v14 + 48);
        *(_BYTE *)(v14 + 48) = v19;
        if (v20 == v19)
          goto LABEL_12;
      }
      else
      {
        swift_release();
        v23 = *(_BYTE *)(v14 + 48);
        *(_BYTE *)(v14 + 48) = 0;
        if ((v23 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      v21 = *(_BYTE *)(v14 + 48);
      *(_BYTE *)(v14 + 48) = 1;
      if ((v21 & 1) != 0)
      {
LABEL_12:

        v22 = swift_release();
        return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v22);
      }
    }
    sub_100409F58();
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10032580C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___searchController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___searchController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___searchController];
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v4, 121, 7);
    v5 = v0;
    v2 = sub_10040A500(0, 0, 0, (uint64_t)v5);

    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double sub_1003258A4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _OWORD v37[5];
  uint64_t v38;

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController);
    swift_retain();

    if (a2)
      v10 = a1;
    else
      v10 = 0;
    v11 = 0xE000000000000000;
    if (a2)
      v11 = a2;
    v33 = v11;
    v34 = v10;
    swift_beginAccess(v9 + 16, v35, 1, 0);
    v12 = *(_QWORD *)(v9 + 16);
    v30 = *(_BYTE *)(v9 + 48);
    v27 = *(_BYTE *)(v9 + 49);
    v28 = *(_BYTE *)(v9 + 24);
    v25 = *(_BYTE *)(v9 + 50);
    v13 = *(_BYTE *)(v9 + 51);
    v14 = *(_QWORD *)(v9 + 56);
    v15 = *(_QWORD *)(v9 + 64);
    v16 = *(_BYTE *)(v9 + 72);
    v18 = *(_QWORD *)(v9 + 80);
    v17 = *(_QWORD *)(v9 + 88);
    v19 = *(_QWORD *)(v9 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
    v20 = *(_OWORD *)(v9 + 16);
    v21 = *(_OWORD *)(v9 + 32);
    v22 = *(_OWORD *)(v9 + 48);
    v23 = *(_OWORD *)(v9 + 80);
    v37[3] = *(_OWORD *)(v9 + 64);
    v37[4] = v23;
    v29 = *(_QWORD *)(v9 + 88);
    v38 = *(_QWORD *)(v9 + 96);
    v24 = v38;
    v37[1] = v21;
    v37[2] = v22;
    v37[0] = v20;
    v32 = *(_QWORD *)(v9 + 40);
    v31 = *(_QWORD *)(v9 + 56);
    v26 = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v9 + 16) = v12;
    *(_BYTE *)(v9 + 24) = v28;
    *(_QWORD *)(v9 + 32) = v34;
    *(_QWORD *)(v9 + 40) = v33;
    *(_BYTE *)(v9 + 48) = v30;
    *(_BYTE *)(v9 + 49) = v27;
    *(_BYTE *)(v9 + 50) = v25;
    *(_BYTE *)(v9 + 51) = v13;
    *(_QWORD *)(v9 + 56) = v14;
    *(_QWORD *)(v9 + 64) = v15;
    *(_BYTE *)(v9 + 72) = v16;
    *(_QWORD *)(v9 + 80) = v18;
    *(_QWORD *)(v9 + 88) = v17;
    *(_QWORD *)(v9 + 96) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A7DE4(v37);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v32);
    swift_release();
    sub_100181DAC((uint64_t *)v37);
    sub_1001A7E50((uint64_t *)v37);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100325A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010BF9A0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_100327F10, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_100325C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE10);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___listCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController____lazy_storage___listCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE10);
  v10 = sub_100007E8C(&qword_1011ACDC8);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE10);
  v12 = swift_allocObject(&unk_1010BF9A0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v14 = type metadata accessor for Composer(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100327EF8, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE10);
  return swift_endAccess(v16);
}

uint64_t sub_100325F4C(char a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v22[24];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for MetricsEvent.Page(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v23.receiver = v1;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidAppear:", a1 & 1, v5);
  v8 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  v9 = MetricsEvent.Page.libraryComposersList.unsafeMutableAddressor();
  sub_100166414(v9, (uint64_t)v7);
  sub_100540B34();
  v11 = v10;
  v13 = v12;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v14 = qword_10124C790;
  swift_retain();
  v15 = GroupActivitiesManager.hasJoined.getter();
  v16 = GroupActivitiesManager.participantsCount.getter();
  v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v22, 0, 0);
  v18 = *v17;
  v19 = swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v8) + 0xA0))(v7, v11, v13, v15 & 1, v16, v18, v19);

  swift_bridgeObjectRelease(v13);
  return sub_100327F1C((uint64_t)v7);
}

void sub_100326188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t KeyPath;
  unint64_t v27;
  _QWORD v28[2];
  unint64_t v29;
  _QWORD v30[5];
  _BYTE v31[24];
  _BYTE v32[24];

  v7 = sub_100007E8C((uint64_t *)&unk_1011CF3F0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3BB0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v28 - v16;
  a5 += 16;
  swift_beginAccess(a5, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v19 = (void *)Strong;
    v28[0] = a1;
    v20 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController)
                    + 112);
    v21 = swift_beginAccess(v20, v31, 0, 0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v20, 1, v7, v21))
    {

      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
    v22 = MusicLibrarySectionedResponse.sections.getter(v7);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v24 = IndexPath.section.getter(v23);
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(_QWORD *)(v22 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v24, v11);
      v25 = swift_bridgeObjectRelease(v22);
      (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 32))(v17, v14, v11, v25);
      KeyPath = swift_getKeyPath(&unk_100EB4E28);
      MusicLibrarySection.subscript.getter(KeyPath, v11);
      swift_release();
      v27 = v29;
      sub_10061170C(v28[1], v29, v30);
      swift_bridgeObjectRelease(v27);
      UICollectionViewCell.contentConfiguration.setter(v30);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return;
    }
    __break(1u);
  }
}

void sub_1003263D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  _BYTE v25[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE20);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v24 - v11;
  a4 += 16;
  swift_beginAccess(a4, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v14 = (void *)Strong;
    __chkstk_darwin(Strong);
    v24[-2] = a3;
    v15 = _s8TextCellVMa(0);
    v16 = sub_100048748((unint64_t *)&qword_1011AE8D0, _s8TextCellVMa, (uint64_t)&unk_100EC55FC);
    v17 = UIHostingConfiguration<>.init(content:)(sub_100327F00, &v24[-4], v15, v16);
    v18 = static Edge.Set.horizontal.getter(v17);
    v19 = (char *)sub_100325244();
    v20 = *(double *)&v19[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v18, v6, v20);
    v21 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v22 = v21(v9, v6);
    v23 = static Edge.Set.vertical.getter(v22);
    v24[3] = v6;
    v24[4] = sub_100049F28((unint64_t *)&unk_1011ACE30, (uint64_t *)&unk_1011ACE20, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v24);
    UIHostingConfiguration.margins(_:_:)(v23, v6, 0.0);
    v21(v12, v6);
    UICollectionViewCell.contentConfiguration.setter(v24);

  }
}

uint64_t sub_1003265CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t);
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for Font.TextStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Composer.name.getter(v4);
  v9 = v8;
  v10 = UIFontTextStyleBody;
  v12 = static Color.primary.getter(v11);
  v13 = _s8TextCellVMa(0);
  static SymbolRenderingMode.monochrome.getter();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = v7;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v12;
  v20 = 0x4044000000000000;
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v14(v6, enum case for Font.TextStyle.title(_:), v2);
  v15 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v20, v6, &type metadata for CGFloat, v15);
  v20 = 0x4028000000000000;
  v14(v6, enum case for Font.TextStyle.title3(_:), v2);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v20, v6, &type metadata for CGFloat, v15);
  v16 = (_QWORD *)((char *)a1 + *(int *)(v13 + 44));
  *v16 = swift_getKeyPath(&unk_100EB4DF8);
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v16, v17, 0);
}

uint64_t sub_1003269AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v14;
  char v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v7 = sub_100007E8C(&qword_1011A37B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v11 == a2 && v12 == a3)
    goto LABEL_7;
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) == 0)
  {
    strcpy((char *)v20, "Unknown kind=");
    HIWORD(v20[1]) = -4864;
    v16._countAndFlagsBits = a2;
    v16._object = a3;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v20[0], v20[1], "Music/LibraryComposersViewController.swift", 42, 2, 120, 0);
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease(a3);
  }
  sub_100325A8C((uint64_t)v10);
  v17 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v18 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

void *sub_100326C28(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v40[2];
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v3 = v2;
  v40[1] = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v6 = __chkstk_darwin(v5);
  v42 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011ACDC8);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011C7310);
  __chkstk_darwin(v19);
  v45 = (uint64_t)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)v40 - v22;
  sub_1008DDE80(a2, (uint64_t)v40 - v22);
  sub_100325C80((uint64_t)v18);
  v46 = v23;
  v24 = (void *)sub_100924068((uint64_t)v18, a2, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v25 = sub_100007E8C((uint64_t *)&unk_1011AD790);
  v26 = type metadata accessor for UICellAccessory(0);
  v27 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) | 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AA0;
  v28 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for UICellAccessory.DisplayedState.always(_:), v41);
  v29 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v30 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v42, 1, 1, v29);
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v30, 0);
  static UICellAccessory.disclosureIndicator(displayed:options:)(v14, v11);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v28);
  UICollectionViewListCell.accessories.setter(v27);
  v31 = objc_msgSend(v3, "traitCollection");
  v32 = objc_msgSend(v31, "userInterfaceIdiom");

  if (v32 != (id)6)
  {
    v33 = v24;

    objc_msgSend(v33, "directionalLayoutMargins");
    objc_msgSend(v33, "setDirectionalLayoutMargins:");

  }
  v35 = v45;
  v34 = (uint64_t)v46;
  sub_10004A160((uint64_t)v46, v45, (uint64_t *)&unk_1011C7310);
  v36 = type metadata accessor for Composer(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
  {
    sub_10004FF60(v35, (uint64_t *)&unk_1011C7310);
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
  }
  else
  {
    *((_QWORD *)&v48 + 1) = v36;
    v49 = sub_100048748(&qword_1011ACE08, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
    v38 = sub_100049F68(&v47);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v37 + 32))(v38, v35, v36);
  }

  sub_10004FF60(v34, (uint64_t *)&unk_1011C7310);
  sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011A3DD0);
  return v24;
}

uint64_t sub_1003271B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACDF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011CF3F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController)
     + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController) + 112);
  swift_beginAccess(v9, v15, 0, 0);
  sub_10004A160(v9, (uint64_t)v4, (uint64_t *)&unk_1011ACDF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011ACDF0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      *((_QWORD *)&v13 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
      v14 = &protocol witness table for UIContentUnavailableConfiguration;
      v10 = sub_100049F68(&v12);
      sub_1008DF560((uint64_t)v10);
      UIViewController.contentUnavailableConfiguration.setter(&v12);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  return UIViewController.contentUnavailableConfiguration.setter(&v12);
}

uint64_t sub_100327598()
{
  return type metadata accessor for LibraryComposersViewController(0);
}

uint64_t type metadata accessor for LibraryComposersViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011ACDA0;
  if (!qword_1011ACDA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryComposersViewController);
  return result;
}

void sub_1003275DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1001AB544(319, (unint64_t *)&unk_1011ACDB0, &qword_1011A37B0);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, &qword_1011ACDC0, &qword_1011ACDC8);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[4] = "\b";
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

uint64_t *sub_1003276A0(char *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _BYTE v23[24];
  _OWORD v24[2];
  _BYTE v25[32];
  _BYTE v26[24];

  v1 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController];
  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10018D478();
  UITraitCollection.subscript.getter(v24, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v3);

  v4 = *(_QWORD *)&v24[0];
  v5 = sub_1007607C4(*(uint64_t *)&v24[0]);
  swift_bridgeObjectRelease(v4);
  swift_beginAccess(v1 + 16, v23, 1, 0);
  v6 = *(_OWORD *)(v1 + 48);
  v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)&v25[16] = *(_OWORD *)(v1 + 64);
  *(_OWORD *)v26 = v7;
  *(_OWORD *)v25 = v6;
  v8 = *(_OWORD *)(v1 + 32);
  v24[0] = *(_OWORD *)(v1 + 16);
  v24[1] = v8;
  v10 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)&v26[16] = *(_QWORD *)(v1 + 96);
  v9 = *(_QWORD *)&v26[16];
  v11 = v25[24];
  v12 = BYTE2(v6);
  v13 = BYTE3(v6);
  v14 = v6;
  v15 = BYTE1(v6);
  v16 = v8;
  v17 = *(_QWORD *)(v1 + 40);
  v18 = *(_QWORD *)(v1 + 56);
  v19 = *(_QWORD *)(v1 + 64);
  v20 = *(_OWORD *)&v25[8];
  v21 = *(_OWORD *)&v26[8];
  *(_QWORD *)(v1 + 16) = *(_QWORD *)&v24[0];
  *(_BYTE *)(v1 + 24) = v5 & 1;
  *(_OWORD *)(v1 + 32) = v16;
  *(_BYTE *)(v1 + 48) = v14;
  *(_BYTE *)(v1 + 49) = v15;
  *(_BYTE *)(v1 + 50) = v12;
  *(_BYTE *)(v1 + 51) = v13;
  *(_OWORD *)(v1 + 56) = v20;
  *(_BYTE *)(v1 + 72) = v11;
  *(_QWORD *)(v1 + 80) = v7;
  *(_OWORD *)(v1 + 88) = v21;
  sub_1001A7DE4(v24);
  sub_1001A7DE4(v24);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_release();
  sub_100181DAC((uint64_t *)v24);
  return sub_1001A7E50((uint64_t *)v24);
}

uint64_t *sub_100327820(char *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE v27[24];
  _OWORD v28[3];
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController];
  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v28, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v3);

  v4 = *(_QWORD *)&v28[0];
  swift_beginAccess(v1 + 16, v27, 1, 0);
  v5 = *(_BYTE *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 49);
  v10 = *(_BYTE *)(v1 + 50);
  v11 = *(_BYTE *)(v1 + 51);
  v12 = *(_QWORD *)(v1 + 56);
  v14 = *(_BYTE *)(v1 + 72);
  v15 = *(_OWORD *)(v1 + 16);
  v16 = *(_OWORD *)(v1 + 32);
  v17 = *(_OWORD *)(v1 + 48);
  v18 = *(_OWORD *)(v1 + 80);
  v29 = *(_OWORD *)(v1 + 64);
  v13 = v29;
  v30 = v18;
  v19 = *(_QWORD *)(v1 + 80);
  v20 = *(_QWORD *)(v1 + 88);
  v31 = *(_QWORD *)(v1 + 96);
  v21 = v31;
  v28[1] = v16;
  v28[2] = v17;
  v28[0] = v15;
  v26 = *(_QWORD *)(v1 + 40);
  v22 = *(_QWORD *)(v1 + 56);
  v23 = *(_QWORD *)(v1 + 64);
  v24 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 16) = v4;
  *(_BYTE *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v6;
  *(_BYTE *)(v1 + 48) = v8;
  *(_BYTE *)(v1 + 49) = v9;
  *(_BYTE *)(v1 + 50) = v10;
  *(_BYTE *)(v1 + 51) = v11;
  *(_QWORD *)(v1 + 56) = v12;
  *(_QWORD *)(v1 + 64) = v13;
  *(_BYTE *)(v1 + 72) = v14;
  *(_QWORD *)(v1 + 80) = v19;
  *(_QWORD *)(v1 + 88) = v20;
  *(_QWORD *)(v1 + 96) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A7DE4(v28);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v26);
  swift_release();
  sub_100181DAC((uint64_t *)v28);
  return sub_1001A7E50((uint64_t *)v28);
}

uint64_t sub_1003279B0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26[8];
  char v27[24];

  v24 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACE60);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3BB0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011CF3F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music30LibraryComposersViewController_responseController) + 112);
  v14 = swift_beginAccess(v13, v27, 0, 0);
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v13, 1, v9, v14))
    return v15;
  v16 = v5;
  v17 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v18 = MusicLibrarySectionedResponse.sections.getter(v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v18 + 16) > v24)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24, v16);
    v20 = swift_bridgeObjectRelease(v18);
    MusicLibrarySection.items.getter(v16, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    v21 = sub_100049F28((unint64_t *)&unk_1011ACB80, (uint64_t *)&unk_1011ACE60, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v17);
    dispatch thunk of Collection.endIndex.getter(&v25, v17, v21);
    v15 = dispatch thunk of Collection.distance(from:to:)(v26, &v25, v17, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v17);
    return v15;
  }
  __break(1u);
  return result;
}

void sub_100327C14(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011ACE00);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011C7310);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Composer(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008DDE80(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011C7310);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v17 = objc_msgSend(v1, "traitCollection");
    v18 = sub_10018D478();
    UITraitCollection.subscript.getter(&v28, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v18);

    v19 = v28;
    v20 = sub_1007607C4(v28);
    swift_bridgeObjectRelease(v19);
    v21 = objc_allocWithZone((Class)type metadata accessor for LibraryAlbumsViewController(0));
    sub_100745220((uint64_t)v9, v20 & 1);
    v23 = v22;
    v24 = objc_msgSend(v2, "navigationController");
    if (v24)
    {
      v25 = v24;
      UIViewController.traitOverrides.getter();
      v26 = type metadata accessor for UITraitOverrides(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 0, 1, v26);
      UINavigationController.push(_:traitOverrides:animated:)(v23, (uint64_t)v6, 1);

      sub_10004FF60((uint64_t)v6, &qword_1011ACE00);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);

    }
  }
}

uint64_t sub_100327ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100327EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003263D4(a1, a2, a3, v3);
}

uint64_t sub_100327F00@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003265CC(a1);
}

void sub_100327F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100326188(a1, a2, a3, a4, v4);
}

uint64_t sub_100327F1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100327F58(uint64_t a1)
{
  uint64_t v1;

  return sub_1003255F0(a1, v1);
}

double sub_100327F60(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1003258A4(a1, a2, v2);
}

void sub_100327F68(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C((uint64_t *)&unk_10119D250);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v41);
    *(_QWORD *)&v40 = v19;
    *((_QWORD *)&v40 + 1) = v18;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v19;
    *((_QWORD *)&v38[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_100048ABC(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_100048ABC(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_100048ABC(v37, v38);
    sub_100048ABC(v38, &v34);
    v20 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v30;
    *(_OWORD *)(v10 + 16) = v31;
    *(_QWORD *)(v10 + 32) = v32;
    sub_100048ABC(&v34, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_10004FA7C(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_10032832C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  _OWORD v42[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C((uint64_t *)&unk_10119D250);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v32 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v31)
      goto LABEL_37;
    v14 = *(_QWORD *)(v32 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v31)
        goto LABEL_37;
      v14 = *(_QWORD *)(v32 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v31)
          goto LABEL_37;
        v14 = *(_QWORD *)(v32 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v31)
            goto LABEL_37;
          v14 = *(_QWORD *)(v32 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = 16 * v12;
    v18 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = v18[1];
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v17);
    v22 = *v20;
    v21 = v20[1];
    *(_QWORD *)&v42[0] = *v18;
    *((_QWORD *)&v42[0] + 1) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast(&v34, v42, &type metadata for String, &type metadata for AnyHashable, 7);
    v33[0] = v22;
    v33[1] = v21;
    swift_dynamicCast(v37, v33, &type metadata for String, (char *)&type metadata for Any + 8, 7);
    v38 = v34;
    v39 = v35;
    v40 = v36;
    sub_100048ABC(v37, v41);
    v34 = v38;
    v35 = v39;
    v36 = v40;
    sub_100048ABC(v41, v42);
    sub_100048ABC(v42, &v38);
    v23 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v24 = -1 << *((_BYTE *)v3 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)])) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)&v7[8 * v26];
      }
      while (v30 == -1);
      v9 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v34;
    *(_OWORD *)(v10 + 16) = v35;
    *(_QWORD *)(v10 + 32) = v36;
    sub_100048ABC(&v38, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v31)
  {
LABEL_37:
    swift_release(v3);
    sub_10004FA7C(a1);
    return;
  }
  v14 = *(_QWORD *)(v32 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v31)
      goto LABEL_37;
    v14 = *(_QWORD *)(v32 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_1003286E8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _OWORD v35[4];
  _OWORD v36[2];
  _OWORD v37[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C(&qword_1011AD4E0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v32 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_retain(v3);
  v33 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v33 << 6);
      goto LABEL_28;
    }
    v11 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v31)
      goto LABEL_37;
    v12 = *(_QWORD *)(v32 + 8 * v11);
    v13 = v33 + 1;
    if (!v12)
    {
      v13 = v33 + 2;
      if (v33 + 2 >= v31)
        goto LABEL_37;
      v12 = *(_QWORD *)(v32 + 8 * v13);
      if (!v12)
      {
        v13 = v33 + 3;
        if (v33 + 3 >= v31)
          goto LABEL_37;
        v12 = *(_QWORD *)(v32 + 8 * v13);
        if (!v12)
        {
          v13 = v33 + 4;
          if (v33 + 4 >= v31)
            goto LABEL_37;
          v12 = *(_QWORD *)(v32 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v33 = v13;
LABEL_28:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v37[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    *(_QWORD *)&v36[0] = v15;
    v16 = *(id *)&v37[0];
    swift_unknownObjectRetain(v15, v17);
    swift_dynamicCast((char *)v37 + 8, v36, (char *)&type metadata for Swift.AnyObject + 8, (char *)&type metadata for Any + 8, 7);
    v18 = *(_QWORD *)&v37[0];
    sub_100048ABC((_OWORD *)((char *)v37 + 8), v35);
    sub_100048ABC(v35, v37);
    sub_100048ABC(v37, v36);
    v19 = v3[5];
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;
    Hasher.init(_seed:)(&v34, v19);
    String.hash(into:)(&v34, v20, v22);
    v23 = Hasher._finalize()();
    swift_bridgeObjectRelease(v22);
    v24 = -1 << *((_BYTE *)v3 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)])) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)&v7[8 * v26];
      }
      while (v30 == -1);
      v8 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)&v7[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v18;
    sub_100048ABC(v36, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v33 + 5;
  if (v33 + 5 >= v31)
  {
LABEL_37:
    swift_release(v3);
    sub_10004FA7C(a1);
    return;
  }
  v12 = *(_QWORD *)(v32 + 8 * v14);
  if (v12)
  {
    v13 = v33 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      goto LABEL_37;
    v12 = *(_QWORD *)(v32 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_100328A8C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[2];
  _OWORD v40[2];
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C((uint64_t *)&unk_10119D250);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v30 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v29)
        goto LABEL_37;
      v14 = *(_QWORD *)(v30 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v29)
          goto LABEL_37;
        v14 = *(_QWORD *)(v30 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v29)
            goto LABEL_37;
          v14 = *(_QWORD *)(v30 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v42 + 8);
    *(_QWORD *)&v42[0] = v17;
    v40[0] = v42[0];
    v40[1] = v42[1];
    v41 = v43;
    *(_QWORD *)&v39[0] = v17;
    type metadata accessor for OpenURLOptionsKey(0);
    v19 = v18;
    v20 = v17;
    swift_dynamicCast(&v31, v39, v19, &type metadata for AnyHashable, 7);
    sub_100048ABC((_OWORD *)((char *)v40 + 8), v34);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_100048ABC(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_100048ABC(v38, v39);
    sub_100048ABC(v39, &v35);
    v21 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v22 = -1 << *((_BYTE *)v3 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~v7[v23 >> 6]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v23) & ~v7[v23 >> 6])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = v7[v24];
      }
      while (v28 == -1);
      v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v31;
    *(_OWORD *)(v10 + 16) = v32;
    *(_QWORD *)(v10 + 32) = v33;
    sub_100048ABC(&v35, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_10004FA7C(a1);
    return;
  }
  v14 = *(_QWORD *)(v30 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_100328E50(uint64_t a1)
{
  return sub_100328E80(a1, (uint64_t (*)(void))UnifiedMessages.MLI.sessionIDKey.unsafeMutableAddressor, &qword_10124CD88, &qword_10124CD90);
}

uint64_t sub_100328E68(uint64_t a1)
{
  return sub_100328E80(a1, (uint64_t (*)(void))UnifiedMessages.MLI.didCompleteTransferKey.unsafeMutableAddressor, &qword_10124CD98, &qword_10124CDA0);
}

uint64_t sub_100328E80(uint64_t a1, uint64_t (*a2)(void), _QWORD *a3, _QWORD *a4)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v6 = (uint64_t *)a2();
  v8 = *v6;
  v7 = v6[1];
  *a3 = v8;
  *a4 = v7;
  return swift_bridgeObjectRetain(v7);
}

uint64_t *sub_100328EB0()
{
  uint64_t v0;
  uint64_t *result;

  v0 = type metadata accessor for MLI.Observer(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100328EEC();
  qword_10124CDA8 = (uint64_t)result;
  return result;
}

uint64_t *sub_100328EEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  NSString v69;
  uint64_t v70;
  void *v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v78;
  void (*v79)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void **aBlock;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, char, void *);
  ValueMetadata *v87;
  uint64_t (*v88)(char, uint64_t (*)(uint64_t, __n128), uint64_t);
  uint64_t v89;
  _WORD v90[8];

  v1 = v0;
  v83 = *v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v82 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v78 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011AD3A0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v10);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v78 - v14;
  *((_BYTE *)v0 + 128) = 0;
  *((_OWORD *)v0 + 6) = 0u;
  *((_OWORD *)v0 + 7) = 0u;
  *((_OWORD *)v0 + 4) = 0u;
  *((_OWORD *)v0 + 5) = 0u;
  *((_OWORD *)v0 + 2) = 0u;
  *((_OWORD *)v0 + 3) = 0u;
  *((_OWORD *)v0 + 1) = 0u;
  v0[17] = 0;
  v0[18] = 0;
  v16 = (uint64_t)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer__viewModel;
  v17 = _s9ViewModelOMa(0);
  v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v79(v15, 1, 1, v17);
  sub_10004A160((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_1011BC820);
  Published.init(initialValue:)(v12, v10);
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011BC820);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v16, v9, v6);
  v18 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID);
  *v18 = 0;
  v18[1] = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests) = 0;
  v19 = OBJC_IVAR____TtCO5Music3MLI8Observer_sessionIDBinding;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionIDBinding) = 0;
  v20 = OBJC_IVAR____TtCO5Music3MLI8Observer_networkConnectivityBinding;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_networkConnectivityBinding) = 0;
  v80 = OBJC_IVAR____TtCO5Music3MLI8Observer_accountDidChangeObserver;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_accountDidChangeObserver) = 0;
  v21 = OBJC_IVAR____TtCO5Music3MLI8Observer_foregroundObserver;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_foregroundObserver) = 0;
  v22 = (uint64_t)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_stateHandler;
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  v23 = (uint64_t)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL;
  v24 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount) = 0;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentRetryDelay) = 2;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_hasNetworkConnectivity) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_didReceiveError) = 0;
  v79((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_queuedViewModel, 1, 1, v17);
  *((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_canUpdateViewModel) = 1;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_bagObserver) = 0;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_urlBagObserver) = 0;
  v25 = (void *)objc_opt_self(NSUserDefaults);
  v26 = objc_msgSend(v25, "standardUserDefaults");
  strcpy((char *)v90, "mliDidDismiss");
  v90[7] = -4864;
  v27 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)v90, (uint64_t)&type metadata for String, v27, (uint64_t)&aBlock);

  v81 = v21;
  if (v87)
  {
    if (swift_dynamicCast(v90, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    {
      v28 = v90[0];
      goto LABEL_6;
    }
  }
  else
  {
    sub_10004FF60((uint64_t)&aBlock, &qword_10119DCC0);
  }
  v28 = 0;
LABEL_6:
  v29 = (uint64_t)v78;
  *((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner) = v28;
  v30 = objc_msgSend(v25, "standardUserDefaults");
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "stringForKey:", v31);

  if (v32)
  {
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  URL.init(string:)(v33, v35, v29);
  swift_beginAccess(v23, &aBlock, 33, 0);
  sub_1000A5508(v29, v23, &qword_10119E460);
  swift_endAccess(&aBlock);
  type metadata accessor for Whitetail.Binding();
  if (qword_10119BE80 != -1)
    swift_once(&qword_10119BE80, sub_100328E50);
  UIScreen.Dimensions.size.getter(0);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v87 = &type metadata for UserDefaultsKeyValueTrigger;
  v88 = (uint64_t (*)(char, uint64_t (*)(uint64_t, __n128), uint64_t))&protocol witness table for UserDefaultsKeyValueTrigger;
  v44 = (void **)swift_allocObject(&unk_1010BFB88, 48, 7);
  aBlock = v44;
  v44[2] = v37;
  v44[3] = v39;
  v44[4] = v41;
  v44[5] = v43;
  v45 = swift_allocObject(&unk_1010BFBB0, 24, 7);
  swift_weakInit(v45 + 16, v1);
  v46 = swift_allocObject(&unk_1010BFBD8, 32, 7);
  v47 = v83;
  *(_QWORD *)(v46 + 16) = v45;
  *(_QWORD *)(v46 + 24) = v47;
  swift_bridgeObjectRetain();
  *(uint64_t *)((char *)v1 + v19) = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&aBlock, 0, (uint64_t)sub_100331850, v46);
  swift_release();
  v48 = (id)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v48);
  v87 = &type metadata for NotificationTrigger;
  v88 = (uint64_t (*)(char, uint64_t (*)(uint64_t, __n128), uint64_t))&protocol witness table for NotificationTrigger;
  aBlock = v49;
  v85 = v50;
  v51 = swift_allocObject(&unk_1010BFBB0, 24, 7);
  swift_weakInit(v51 + 16, v1);
  swift_retain();
  *(uint64_t *)((char *)v1 + v20) = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&aBlock, 1, (uint64_t)sub_100331858, v51);
  swift_release();
  v52 = (void *)ICActiveUserIdentityDidChangeNotification;
  v53 = (void *)objc_opt_self(ICUserIdentityStore);
  v54 = v52;
  v55 = objc_msgSend(v53, "defaultIdentityStore");
  v56 = type metadata accessor for NotificationObserver();
  swift_allocObject(v56, 64, 7);
  v57 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v54, (uint64_t)v55, 1, 1, (uint64_t)sub_1003344D4, 0);
  *(uint64_t *)((char *)v1 + v80) = v57;
  swift_release();
  v58 = swift_allocObject(&unk_1010BFBB0, 24, 7);
  swift_weakInit(v58 + 16, v1);
  swift_allocObject(v56, 64, 7);
  v59 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationWillEnterForegroundNotification, 0, 1, 1, (uint64_t)sub_100334624, v58);
  *(uint64_t *)((char *)v1 + v81) = v59;
  swift_release();
  v60 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v68 = (void *)static OS_dispatch_queue.main.getter(v60, v61, v62, v63, v64, v65, v66, v67);
  v69 = String._bridgeToObjectiveC()();
  v70 = swift_allocObject(&unk_1010BFBB0, 24, 7);
  swift_weakInit(v70 + 16, v1);
  v88 = sub_10033462C;
  v89 = v70;
  aBlock = _NSConcreteStackBlock;
  v85 = 1107296256;
  v86 = sub_10032A30C;
  v87 = (ValueMetadata *)&unk_1010BFBF0;
  v71 = _Block_copy(&aBlock);
  v72 = swift_release();
  v73 = MSVLogAddStateHandler(v68, v69, v71, v72);
  _Block_release(v71);

  *(_QWORD *)v22 = v73;
  *(_BYTE *)(v22 + 8) = 0;
  v74 = type metadata accessor for TaskPriority(0);
  v75 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v82, 1, 1, v74);
  v76 = (_QWORD *)swift_allocObject(&unk_1010BFC28, 48, 7);
  v76[2] = 0;
  v76[3] = 0;
  v76[4] = v1;
  v76[5] = v47;
  swift_retain();
  sub_100166D14(v75, (uint64_t)&unk_1011AD3B8, (uint64_t)v76);
  swift_release();
  sub_10032B734();
  sub_10032D3E4();
  return v1;
}

double sub_100329780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE v15[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v15, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v9 = Strong;
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    type metadata accessor for MainActor(0);
    v11 = swift_retain();
    v12 = static MainActor.shared.getter(v11);
    v13 = (_QWORD *)swift_allocObject(&unk_1010BFC78, 48, 7);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v9;
    v13[5] = a2;
    sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011AD408, (uint64_t)v13);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10032989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[3] = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  v4[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v4[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[6] = v7;
  v4[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100329954, v10, v11);
}

uint64_t sub_100329954()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSNumber v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  NSString v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;

  swift_release();
  sub_10032FFD4();
  sub_10032D3E4();
  v1 = (void *)objc_opt_self(NSUserDefaults);
  v2 = objc_msgSend(v1, "standardUserDefaults");
  if (qword_10119BE80 != -1)
    swift_once(&qword_10119BE80, sub_100328E50);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "stringForKey:", v3);

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = objc_msgSend(v1, "standardUserDefaults");
  v9.super.super.isa = Bool._bridgeToObjectiveC()().super.super.isa;
  if (qword_10119BE88 != -1)
    swift_once(&qword_10119BE88, sub_100328E68);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setValue:forKey:", v9.super.super.isa, v10);

  v11 = objc_msgSend(v1, "standardUserDefaults");
  v12 = v11;
  if (v7)
  {
    v13 = *(_QWORD *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 40);
    v16 = Date.init()(v11);
    Date.timeIntervalSinceReferenceDate.getter(v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setValue:forKey:", isa, v18);

    swift_unknownObjectRelease(isa);
    sub_10032D010();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 32);
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setValue:forKey:", 0, v20);

    v21 = _s9ViewModelOMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
    sub_10032DC54(v19);
    sub_10004FF60(v19, (uint64_t *)&unk_1011BC820);
  }
  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v22 = type metadata accessor for Logger(0);
  sub_100048B14(v22, (uint64_t)qword_10124CDB0);
  v23 = swift_bridgeObjectRetain();
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v33 = v27;
    *(_DWORD *)v26 = 136446210;
    swift_bridgeObjectRetain();
    v28 = Optional<A>.description.getter(v5, v7);
    v30 = v29;
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v0 + 16) = sub_100322200(v28, v30, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "sessionID: %{public}s", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  v31 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100329DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD v7[15];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, &v6, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    static ApplicationCapabilities.shared.getter((uint64_t)v7);
    sub_100065184(v7);
    v5 = *(_BYTE *)(v4 + OBJC_IVAR____TtCO5Music3MLI8Observer_hasNetworkConnectivity);
    *(_BYTE *)(v4 + OBJC_IVAR____TtCO5Music3MLI8Observer_hasNetworkConnectivity) = BYTE1(v7[0]);
    sub_10032D884(v5);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100329E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_10032DF74(1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100329E78(char a1, uint64_t (*a2)(uint64_t, __n128), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[15];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, &v15, 0, 0);
  if (!swift_weakLoadStrong(v6))
    return 0;
  if ((a1 & 1) != 0
    && (static ApplicationCapabilities.shared.getter((uint64_t)v16),
        v7 = v16[3],
        swift_bridgeObjectRetain(),
        sub_100065184(v16),
        v8 = sub_10075BDAC(0xAu, v7),
        swift_bridgeObjectRelease(v7),
        (v8 & 1) != 0))
  {
    v9 = sub_100329F68();
    sub_100327F68(v9);
    v11 = v10;
    v12 = swift_bridgeObjectRelease(v9);
    v13 = a2(v11, v12);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v13 = 0;
  }
  swift_release();
  return v13;
}

unint64_t sub_100329F68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v21[1] = *v0;
  v1 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011AD3E0);
  inited = swift_initStackObject(v4, &v23);
  *(_OWORD *)(inited + 16) = xmmword_100EB4E60;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000044;
  v6 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID);
  v7 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID + 8);
  swift_bridgeObjectRetain();
  v8 = Optional<A>.description.getter(v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  strcpy((char *)(inited + 80), "isInProgress");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(_BYTE *)(inited + 96) = *((_BYTE *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress);
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_QWORD *)(inited + 128) = 0xD000000000000014;
  *(_QWORD *)(inited + 136) = 0x8000000100E366A0;
  *(_BYTE *)(inited + 144) = sub_10032C26C() & 1;
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_QWORD *)(inited + 176) = 0xD000000000000012;
  *(_QWORD *)(inited + 184) = 0x8000000100E36520;
  *(_BYTE *)(inited + 192) = *((_BYTE *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests);
  *(_QWORD *)(inited + 216) = &type metadata for Bool;
  *(_QWORD *)(inited + 224) = 0x6965636552646964;
  *(_QWORD *)(inited + 232) = 0xEF726F7272456576;
  *(_BYTE *)(inited + 240) = *((_BYTE *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_didReceiveError);
  *(_QWORD *)(inited + 264) = &type metadata for Bool;
  *(_QWORD *)(inited + 272) = 0xD000000000000010;
  *(_QWORD *)(inited + 280) = 0x8000000100E36540;
  *(_BYTE *)(inited + 288) = *((_BYTE *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner);
  *(_QWORD *)(inited + 312) = &type metadata for Bool;
  *(_QWORD *)(inited + 320) = 0x5255776569766572;
  *(_QWORD *)(inited + 328) = 0xE90000000000004CLL;
  v11 = (uint64_t)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL;
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL, &v22, 0, 0);
  sub_10004A160(v11, (uint64_t)v3, &qword_10119E460);
  *(_QWORD *)(inited + 336) = String.init<A>(describing:)(v3, v1);
  *(_QWORD *)(inited + 344) = v12;
  *(_QWORD *)(inited + 360) = &type metadata for String;
  *(_QWORD *)(inited + 368) = 0xD000000000000013;
  *(_QWORD *)(inited + 376) = 0x8000000100E366C0;
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (qword_10119BE88 != -1)
    swift_once(&qword_10119BE88, sub_100328E68);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "stringForKey:", v14);

  if (!v15)
  {
    v19 = (uint64_t *)(inited + 384);
    *(_QWORD *)(inited + 408) = &type metadata for String;
    goto LABEL_7;
  }
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = (uint64_t *)(inited + 384);
  *(_QWORD *)(inited + 408) = &type metadata for String;
  if (!v18)
  {
LABEL_7:
    *v19 = 7104878;
    v18 = 0xE300000000000000;
    goto LABEL_8;
  }
  *v19 = v16;
LABEL_8:
  *(_QWORD *)(inited + 392) = v18;
  *(_QWORD *)(inited + 416) = 0xD000000000000010;
  *(_QWORD *)(inited + 424) = 0x8000000100E366E0;
  sub_100333D90((uint64_t *)(inited + 432));
  *(_QWORD *)(inited + 464) = 0x65646F4D77656976;
  *(_QWORD *)(inited + 472) = 0xE90000000000006CLL;
  sub_100333F30((uint64_t)v0, (unint64_t *)(inited + 480));
  return sub_100041ADC(inited);
}

uint64_t sub_10032A30C(uint64_t a1, char a2, void *aBlock)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t (*)(uint64_t), uint64_t, __n128);
  void *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;

  v3 = a2 & 1;
  v4 = *(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, __n128))(a1 + 32);
  v5 = _Block_copy(aBlock);
  v6 = swift_allocObject(&unk_1010BFC50, 24, 7);
  *(_QWORD *)(v6 + 16) = v5;
  v7 = swift_retain();
  v8 = v4(v3, sub_100334734, v6, v7);
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_10032A398(uint64_t a1, uint64_t a2)
{
  NSDictionary v3;
  uint64_t v4;

  if (a1)
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  v4 = (*(uint64_t (**)(uint64_t, Class))(a2 + 16))(a2, v3.super.isa);

  return v4;
}

uint64_t sub_10032A400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4[10] = a4;
  v5 = _s9ViewModelOMa(0);
  v4[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011BC820) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[14] = swift_task_alloc(v7);
  v4[15] = swift_task_alloc(v7);
  v8 = type metadata accessor for LibraryImportStatus(0);
  v4[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[17] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[18] = swift_task_alloc(v10);
  v4[19] = swift_task_alloc(v10);
  v4[20] = swift_task_alloc(v10);
  v4[21] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011AD3C0);
  v4[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AD3C8);
  v4[23] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[24] = v13;
  v4[25] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD3D0);
  v4[26] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[27] = v15;
  v4[28] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10032A560, 0, 0);
}

uint64_t sub_10032A560()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v0[29] = objc_opt_self(UIApplication);
  v1 = type metadata accessor for MainActor(0);
  v0[30] = v1;
  v0[31] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10032A5DC, v3, v4);
}

uint64_t sub_10032A5DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 256) = objc_msgSend(*(id *)(v0 + 232), "sharedApplication", swift_release().n128_f64[0]);
  return swift_task_switch(sub_10032A638, 0, 0);
}

uint64_t sub_10032A638(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v1 + 264) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10032A698, v3, v4);
}

void sub_10032A698()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = objc_msgSend(*(id *)(v0 + 256), "connectedScenes", swift_release().n128_f64[0]);
  v2 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v3 = sub_1000A569C();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  sub_10079470C(v4);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v8 = v6;
    else
      v8 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v6);
    if (v9)
      goto LABEL_3;
LABEL_11:

    swift_bridgeObjectRelease(v6);
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v14 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 144);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v6 + 32);
LABEL_6:
    *(_QWORD *)(v0 + 272) = v7;

    swift_bridgeObjectRelease(v6);
    swift_task_switch(sub_10032A880, 0, 0);
    return;
  }
  __break(1u);
}

uint64_t sub_10032A880(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v1 + 280) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10032A8E0, v3, v4);
}

uint64_t sub_10032A8E0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend(*(id *)(v0 + 272), "delegate", swift_release().n128_f64[0]);
  if (v1
    && (*(_QWORD *)(v0 + 56) = v1,
        v2 = sub_100007E8C(&qword_1011A9300),
        v3 = sub_100007E8C(&qword_1011A3120),
        (swift_dynamicCast(v0 + 16, v0 + 56, v2, v3, 6) & 1) != 0))
  {
    v4 = *(_QWORD *)(v0 + 40);
    if (v4)
    {
      v5 = *(void **)(v0 + 272);
      *(_QWORD *)(v0 + 288) = *(_QWORD *)(*sub_100007E68((_QWORD *)(v0 + 16), v4)
                                        + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
      swift_retain();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));

      return swift_task_switch(sub_10032AA88, 0, 0);
    }
  }
  else
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  v7 = *(void **)(v0 + 272);
  sub_10004FF60(v0 + 16, (uint64_t *)&unk_1011A3110);

  v8 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032AA88(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(v1 + 288))
  {
    v2 = *(_QWORD *)(v1 + 240);
    *(_QWORD *)(v1 + 296) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_10032AB9C, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 200);
    v8 = *(_QWORD *)(v1 + 168);
    v7 = *(_QWORD *)(v1 + 176);
    v10 = *(_QWORD *)(v1 + 152);
    v9 = *(_QWORD *)(v1 + 160);
    v11 = *(_QWORD *)(v1 + 144);
    v13 = *(_QWORD *)(v1 + 112);
    v12 = *(_QWORD *)(v1 + 120);
    v14 = *(_QWORD *)(v1 + 104);
    swift_task_dealloc(*(_QWORD *)(v1 + 224));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10032AB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 288);
  swift_release();
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 304) = v2;
  swift_retain();
  swift_release();
  if (v2)
  {
    v3 = (_QWORD *)swift_task_alloc(async function pointer to MusicPageProvider.libraryImportStatus.getter[1]);
    *(_QWORD *)(v0 + 312) = v3;
    *v3 = v0;
    v3[1] = sub_10032ACBC;
    return MusicPageProvider.libraryImportStatus.getter(*(_QWORD *)(v0 + 224));
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10032ACBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 312);
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10032B4C4;
  else
    v3 = sub_10032AD20;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10032AD20(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  AsyncStream.makeAsyncIterator()(*(_QWORD *)(v1 + 208), a1);
  v2 = OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress;
  *(_QWORD *)(v1 + 328) = OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner;
  *(_QWORD *)(v1 + 336) = v2;
  *(_DWORD *)(v1 + 352) = enum case for LibraryImportStatus.initialized(_:);
  *(_DWORD *)(v1 + 356) = enum case for LibraryImportStatus.dismissedReview(_:);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v1 + 344) = v3;
  *v3 = v1;
  v3[1] = sub_10032ADBC;
  return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v1 + 176), 0, 0, *(_QWORD *)(v1 + 184));
}

uint64_t sub_10032ADBC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  return swift_task_switch(sub_10032AE10, 0, 0);
}

uint64_t sub_10032AE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Class isa;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  __n128 v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __n128 v75;
  void (*v76)(uint64_t, uint64_t, __n128);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v7, v8, v10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v11 = *(_QWORD *)(v0 + 200);
    v13 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v21 = *(_DWORD *)(v0 + 352);
    v23 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v22, v1, v2);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v24(v23, v22, v2);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v23, v2);
    if (v25 == v21)
    {
      v26 = *(_QWORD **)(v0 + 160);
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v0 + 136) + 96))(v26, *(_QWORD *)(v0 + 128));
      v27 = v26[1];
      v28 = v26[2];
      v29 = v26[3];
      v30 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v27);
      if (qword_10119BE80 != -1)
        swift_once(&qword_10119BE80, sub_100328E50);
      v32 = *(_QWORD *)(v0 + 168);
      v33 = *(_QWORD *)(v0 + 128);
      v34 = *(_QWORD *)(v0 + 136);
      v35 = *(_QWORD *)(v0 + 80);
      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v30, "setValue:forKey:", v31, v36);

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      v37 = *(_QWORD *)(v35 + 144);
      *(_QWORD *)(v35 + 136) = v28;
      *(_QWORD *)(v35 + 144) = v29;
      swift_bridgeObjectRelease(v37);
    }
    else if (v25 == *(_DWORD *)(v0 + 356))
    {
      v38 = *(_QWORD *)(v0 + 328);
      v39 = *(_QWORD *)(v0 + 80);
      v40 = *(unsigned __int8 *)(v39 + v38);
      *(_BYTE *)(v39 + v38) = 0;
      if (v40 == 1)
      {
        v41 = *(_QWORD *)(v0 + 328);
        v42 = *(_QWORD *)(v0 + 80);
        v43 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        isa = Bool._bridgeToObjectiveC()().super.super.isa;
        v45 = String._bridgeToObjectiveC()();
        objc_msgSend(v43, "setValue:forKey:", isa, v45);

        if ((*(_BYTE *)(v42 + v41) & 1) != 0)
        {
          v46 = *(_QWORD *)(v0 + 120);
          (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(v46, 1, 1, *(_QWORD *)(v0 + 88));
          sub_10032DC54(v46);
          sub_10004FF60(v46, (uint64_t *)&unk_1011BC820);
        }
      }
      v47 = *(_QWORD *)(v0 + 80);
      *(_BYTE *)(v47 + *(_QWORD *)(v0 + 336)) = 1;
      *(_BYTE *)(v47 + 128) = 2;
      if (qword_10119BE90 != -1)
        swift_once(&qword_10119BE90, sub_100328EB0);
      v48 = *(_QWORD *)(qword_10124CDA8 + 24);
      if (v48)
      {
        v50 = *(_QWORD *)(v0 + 104);
        v49 = *(_QWORD *)(v0 + 112);
        v51 = *(_QWORD *)(v0 + 88);
        v52 = *(_QWORD *)(qword_10124CDA8 + 16);
        v53 = _s16ActionButtonViewV5ModelVMa(0);
        v54 = v50 + *(int *)(v53 + 48);
        v55 = _s12ClickMetricsVMa(0);
        v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
        v56(v54, 1, 1, v55);
        v56(v50 + *(int *)(v53 + 52), 1, 1, v55);
        *(_QWORD *)v50 = 0;
        *(_QWORD *)(v50 + 8) = 0;
        *(_QWORD *)(v50 + 16) = v52;
        *(_QWORD *)(v50 + 24) = v48;
        *(_OWORD *)(v50 + 32) = 0u;
        *(_OWORD *)(v50 + 48) = 0u;
        *(_OWORD *)(v50 + 64) = 0u;
        *(_OWORD *)(v50 + 80) = 0u;
        *(_OWORD *)(v50 + 96) = 0u;
        *(_OWORD *)(v50 + 112) = 0u;
        *(_OWORD *)(v50 + 128) = 0u;
        *(_BYTE *)(v50 + 144) = 0;
        swift_storeEnumTagMultiPayload(v50, v51, 1);
        sub_10005B6C0(v50, v49, _s9ViewModelOMa);
      }
      else
      {
        if (qword_10119BEA0 != -1)
          swift_once(&qword_10119BEA0, sub_100333A18);
        v78 = *(_QWORD *)(v0 + 112);
        v79 = sub_100048B14(*(_QWORD *)(v0 + 88), (uint64_t)qword_1011ACE80);
        sub_1003346CC(v79, v78);
      }
      v80 = *(_QWORD *)(v0 + 168);
      v81 = *(_QWORD *)(v0 + 128);
      v82 = *(_QWORD *)(v0 + 136);
      v83 = *(_QWORD *)(v0 + 112);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(v83, 0, 1, *(_QWORD *)(v0 + 88));
      swift_bridgeObjectRetain();
      sub_10032DC54(v83);
      sub_10004FF60(v83, (uint64_t *)&unk_1011BC820);
      sub_10032DF74(0);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
    }
    else
    {
      if (qword_10119BEB8 != -1)
        swift_once(&qword_10119BEB8, sub_100334480);
      v57 = *(_QWORD *)(v0 + 168);
      v58 = *(_QWORD *)(v0 + 152);
      v59 = *(_QWORD *)(v0 + 128);
      v60 = type metadata accessor for Logger(0);
      sub_100048B14(v60, (uint64_t)qword_10124CDB0);
      v61 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v58, v57, v59);
      v62 = Logger.logObject.getter(v61);
      v64 = static os_log_type_t.fault.getter(v63);
      v65 = os_log_type_enabled(v62, v64);
      v66 = *(_QWORD *)(v0 + 168);
      v67 = *(_QWORD *)(v0 + 152);
      if (v65)
      {
        v68 = *(_QWORD *)(v0 + 144);
        v85 = *(_QWORD *)(v0 + 136);
        v69 = *(_QWORD *)(v0 + 128);
        v70 = swift_slowAlloc(12, -1);
        v71 = swift_slowAlloc(32, -1);
        v86 = v71;
        *(_DWORD *)v70 = 136446210;
        v24(v68, v67, v69);
        v72 = String.init<A>(describing:)(v68, v69);
        v74 = v73;
        *(_QWORD *)(v70 + 4) = sub_100322200(v72, v73, &v86);
        v75 = swift_bridgeObjectRelease(v74);
        v76 = *(void (**)(uint64_t, uint64_t, __n128))(v85 + 8);
        v76(v67, v69, v75);
        _os_log_impl((void *)&_mh_execute_header, v62, v64, "Unknown MusicUI MLI Status: %{public}s", (uint8_t *)v70, 0xCu);
        swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v71, -1, -1);
        swift_slowDealloc(v70, -1, -1);

      }
      else
      {
        v69 = *(_QWORD *)(v0 + 128);
        v77 = *(_QWORD *)(v0 + 136);

        v76 = *(void (**)(uint64_t, uint64_t, __n128))(v77 + 8);
        ((void (*)(uint64_t, uint64_t))v76)(v67, v69);
      }
      ((void (*)(uint64_t, uint64_t))v76)(v66, v69);
      ((void (*)(_QWORD, _QWORD))v76)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128));
    }
    v84 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 344) = v84;
    *v84 = v0;
    v84[1] = sub_10032ADBC;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 176), 0, 0, *(_QWORD *)(v0 + 184));
  }
}

uint64_t sub_10032B4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v1 = *(_QWORD *)(v0 + 320);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124CDB0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 320);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v24 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 64) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 64, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 72) = sub_100322200(v11, v12, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to observe for MusicUI MLI Status updates. %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
    swift_release();

    swift_errorRelease(v7);
  }
  else
  {
    swift_release();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v14 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10032B734()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;

  v1 = v0;
  BagProvider.shared.unsafeMutableAddressor();
  swift_retain();
  v2 = (void *)BagProvider.bag.getter();
  swift_release();
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
    v4 = v3;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v2, "dictionaryForBagKey:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

    if (v6)
    {
      v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v8 = sub_100050AA8(v7);
      swift_bridgeObjectRelease(v7);
      if (v8)
      {
        if (*(_QWORD *)(v8 + 16) && (v9 = sub_10079C2C4(6909037, 0xE300000000000000), (v10 & 1) != 0))
        {
          sub_10004FA40(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v72);
          swift_bridgeObjectRelease(v8);
          if (*((_QWORD *)&v73 + 1))
          {
            v11 = sub_100007E8C((uint64_t *)&unk_1011A3090);
            if ((swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
            {
              v12 = v70;
              v13 = *(_QWORD *)(v70 + 16);
              if (v13)
              {
                v14 = sub_10079C2C4(0x72676F7250696C6DLL, 0xEF74786554737365);
                if ((v15 & 1) != 0)
                {
                  sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v14, (uint64_t)&v72);
                  v16 = swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                  v13 = v70;
                  v17 = v71;
                  if (!v16)
                  {
                    v13 = 0;
                    v17 = 0;
                  }
LABEL_26:
                  v32 = v1[3];
                  v1[2] = v13;
                  v1[3] = v17;
                  swift_bridgeObjectRelease(v32);
                  if (*(_QWORD *)(v12 + 16)
                    && (v33 = sub_10079C2C4(0xD000000000000010, 0x8000000100E36790), (v34 & 1) != 0))
                  {
                    sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v33, (uint64_t)&v72);
                    v35 = swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                    if (v35)
                      v36 = v70;
                    else
                      v36 = 0;
                    if (v35)
                      v37 = v71;
                    else
                      v37 = 0;
                  }
                  else
                  {
                    v36 = 0;
                    v37 = 0;
                  }
                  v38 = *(_QWORD *)(v12 + 16);
                  if (v38)
                  {
                    v39 = sub_10079C2C4(0xD000000000000016, 0x8000000100E367B0);
                    if ((v40 & 1) != 0)
                    {
                      sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v39, (uint64_t)&v72);
                      v41 = swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                      v38 = v70;
                      v42 = v71;
                      if (!v41)
                      {
                        v38 = 0;
                        v42 = 0;
                      }
                      goto LABEL_41;
                    }
                    v38 = 0;
                  }
                  v42 = 0;
LABEL_41:
                  v43 = v1[5];
                  v44 = v1[7];
                  v1[4] = v36;
                  v1[5] = v37;
                  v1[6] = v38;
                  v1[7] = v42;
                  swift_bridgeObjectRelease(v43);
                  swift_bridgeObjectRelease(v44);
                  if (*(_QWORD *)(v12 + 16))
                  {
                    v45 = sub_10079C2C4(0xD000000000000018, 0x8000000100E367D0);
                    if ((v46 & 1) != 0)
                    {
                      sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v45, (uint64_t)&v72);
                      v47 = swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                      v48 = v70;
                      if (!v47)
                        v48 = 0;
                      v69 = v48;
                      if (v47)
                        v49 = v71;
                      else
                        v49 = 0;
                    }
                    else
                    {
                      v69 = 0;
                      v49 = 0;
                    }
                  }
                  else
                  {
                    v69 = 0;
                    v49 = 0;
                  }
                  if (*(_QWORD *)(v12 + 16)
                    && (v50 = sub_10079C2C4(0xD000000000000017, 0x8000000100E367F0), (v51 & 1) != 0))
                  {
                    sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v50, (uint64_t)&v72);
                    v52 = swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                    if (v52)
                      v53 = v70;
                    else
                      v53 = 0;
                    if (v52)
                      v54 = v71;
                    else
                      v54 = 0;
                  }
                  else
                  {
                    v53 = 0;
                    v54 = 0;
                  }
                  if (*(_QWORD *)(v12 + 16)
                    && (v55 = sub_10079C2C4(0xD00000000000001ALL, 0x8000000100E36810), (v56 & 1) != 0))
                  {
                    sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v55, (uint64_t)&v72);
                    v57 = swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                    if (v57)
                      v58 = v70;
                    else
                      v58 = 0;
                    if (v57)
                      v59 = v71;
                    else
                      v59 = 0;
                  }
                  else
                  {
                    v58 = 0;
                    v59 = 0;
                  }
                  if (*(_QWORD *)(v12 + 16)
                    && (v60 = sub_10079C2C4(0xD00000000000001BLL, 0x8000000100E36830), (v61 & 1) != 0))
                  {
                    sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v60, (uint64_t)&v72);
                  }
                  else
                  {
                    v72 = 0u;
                    v73 = 0u;
                  }

                  swift_bridgeObjectRelease(v12);
                  if (*((_QWORD *)&v73 + 1))
                  {
                    v62 = swift_dynamicCast(&v70, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                    v63 = v70;
                    v64 = v71;
                    if (!v62)
                    {
                      v63 = 0;
                      v64 = 0;
                    }
                  }
                  else
                  {
                    sub_10004FF60((uint64_t)&v72, &qword_10119DCC0);
                    v63 = 0;
                    v64 = 0;
                  }
                  v65 = v1[9];
                  v66 = v1[11];
                  v67 = v1[13];
                  v68 = v1[15];
                  v1[8] = v69;
                  v1[9] = v49;
                  v1[10] = v53;
                  v1[11] = v54;
                  v1[12] = v58;
                  v1[13] = v59;
                  v1[14] = v63;
                  v1[15] = v64;
                  swift_bridgeObjectRelease(v65);
                  swift_bridgeObjectRelease(v66);
                  swift_bridgeObjectRelease(v67);
                  *(_QWORD *)&result = swift_bridgeObjectRelease(v68).n128_u64[0];
                  return result;
                }
                v13 = 0;
              }
              v17 = 0;
              goto LABEL_26;
            }
            goto LABEL_19;
          }
        }
        else
        {
          v72 = 0u;
          v73 = 0u;
          swift_bridgeObjectRelease(v8);
        }
        sub_10004FF60((uint64_t)&v72, &qword_10119DCC0);
      }
    }
LABEL_19:
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100048B14(v27, (uint64_t)qword_10124CDB0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to find mli key from bag", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    return result;
  }
  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100048B14(v18, (uint64_t)qword_10124CDB0);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to receive, creating bag observer", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = swift_allocObject(&unk_1010BFBB0, 24, 7);
  swift_weakInit(v23 + 16, v1);
  swift_retain();
  swift_retain();
  v24 = BagProvider.createObserver(handler:)((uint64_t)sub_1003356D4, v23);
  swift_release_n(v23, 2, v25);
  swift_release();
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_bagObserver) = v24;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10032BE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_10124CDB0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received bag, retrying", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v11, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    *(_QWORD *)(Strong + OBJC_IVAR____TtCO5Music3MLI8Observer_bagObserver) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess(v2, &v10, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_10032B734();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10032BFB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005D08E4(*a1, *a2);
}

Swift::Int sub_10032BFBC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE700000000000000;
  v3 = 0x64657472617473;
  if (v1 != 1)
  {
    v3 = 0x6465776569766572;
    v2 = 0xE800000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6E776F6E6B6E75;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10032C05C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x64657472617473;
  if (*v1 != 1)
  {
    v3 = 0x6465776569766572;
    v2 = 0xE800000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6E776F6E6B6E75;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10032C0D8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE700000000000000;
  v4 = 0x64657472617473;
  if (v2 != 1)
  {
    v4 = 0x6465776569766572;
    v3 = 0xE800000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x6E776F6E6B6E75;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE700000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_10032C174@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_1010ABA58;
  result = sub_10033597C(*a1, v3);
  *a2 = result;
  return result;
}

void sub_10032C1A8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x64657472617473;
  if (v2 != 1)
  {
    v5 = 0x6465776569766572;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10032C208@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB4FD8);
  v4 = swift_getKeyPath(&unk_100EB5000);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  return swift_release(KeyPath);
}

uint64_t sub_10032C26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  int v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID + 8))
    v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner) ^ 1;
  else
    v3 = 0;
  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v4 = type metadata accessor for Logger(0);
  sub_100048B14(v4, (uint64_t)qword_10124CDB0);
  v5 = swift_retain_n(v0, 4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(24, -1);
    v9 = swift_slowAlloc(32, -1);
    v20 = v9;
    *(_DWORD *)v8 = 67240706;
    LODWORD(v19) = v3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, (char *)&v19 + 4);
    *(_WORD *)(v8 + 8) = 2082;
    v10 = *v2;
    v11 = v2[1];
    swift_bridgeObjectRetain();
    v12 = Optional<A>.description.getter(v10, v11);
    v14 = v13;
    swift_bridgeObjectRelease(v11);
    v19 = sub_100322200(v12, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_release_n(v1, 2, v15);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v8 + 18) = 1026;
    v16 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner);
    swift_release();
    LODWORD(v19) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, (char *)&v19 + 4);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "shouldShowMLIBannerView = %{BOOL,public}d\nsessionID: %{public}s\ndidDismissBanner: %{BOOL,public}d", (uint8_t *)v8, 0x18u);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v1, 4, v17);
  }
  return v3 & 1;
}

void sub_10032C4CC(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  Class isa;
  NSString v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1 & 1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner;
  LODWORD(v5) = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner) = a1;
  if ((_DWORD)v5 != v3)
  {
    v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "setValue:forKey:", isa, v10);

    if ((*(_BYTE *)(v1 + v7) & 1) != 0)
    {
      v11 = _s9ViewModelOMa(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
      sub_10032DC54((uint64_t)v6);
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011BC820);
    }
  }
}

void sub_10032C610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  Class isa;
  NSObject *v63;
  uint64_t v64;
  unint64_t v65;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v1);
  v60 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MusicDataRequest(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v58 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v59 = (char *)&v54 - v7;
  v8 = type metadata accessor for URLRequest(0);
  isa = v8[-1].isa;
  v63 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (char *)&v54 - v12;
  v13 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = *(void **)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID + 8);
  if (v22)
  {
    v55 = v3;
    v56 = (char *)&v54 - v21;
    v54 = v4;
    v57 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID);
    v23 = (void *)objc_opt_self(NSUserDefaults);
    swift_bridgeObjectRetain();
    v24 = objc_msgSend(v23, "standardUserDefaults");
    if (qword_10119BE80 != -1)
      swift_once(&qword_10119BE80, sub_100328E50);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "removeObjectForKey:", v25);

    v26 = sub_1003307F8();
    if (v27)
    {
      v28 = v27;
      v64 = 0x2F2F3A7370747468;
      v65 = 0xE800000000000000;
      String.append(_:)(*(Swift::String *)&v26);
      swift_bridgeObjectRelease(v28);
      v29._countAndFlagsBits = 47;
      v29._object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      v30._countAndFlagsBits = v57;
      v30._object = v22;
      String.append(_:)(v30);
      swift_bridgeObjectRelease(v22);
      v31 = v65;
      URL.init(string:)(v64, v65);
      v32 = swift_bridgeObjectRelease(v31);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))(v15, 1, v16, v32) != 1)
      {
        v42 = v56;
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v56, v15, v16);
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v42, v16);
        v43 = v61;
        URLRequest.init(url:cachePolicy:timeoutInterval:)(v19, 0, 60.0);
        URLRequest.httpMethod.setter(0x4554454C4544, 0xE600000000000000);
        (*((void (**)(char *, char *, NSObject *))isa + 2))(v10, v43, v63);
        v44 = v59;
        MusicDataRequest.init(urlRequest:)(v10);
        v45 = type metadata accessor for TaskPriority(0);
        v46 = (uint64_t)v60;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v60, 1, 1, v45);
        v48 = v54;
        v47 = v55;
        v49 = v58;
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v58, v44, v55);
        v50 = *(unsigned __int8 *)(v48 + 80);
        v51 = (v50 + 32) & ~v50;
        v52 = swift_allocObject(&unk_1010BFD90, v51 + v5, v50 | 7);
        *(_QWORD *)(v52 + 16) = 0;
        *(_QWORD *)(v52 + 24) = 0;
        (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v52 + v51, v49, v47);
        sub_100166D88(v46, (uint64_t)&unk_1011AD4D8, v52);
        v53 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v44, v47, v53);
        (*((void (**)(char *, NSObject *))isa + 1))(v61, v63);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v56, v16);
        return;
      }
      sub_10004FF60((uint64_t)v15, &qword_10119E460);
    }
    else
    {
      swift_bridgeObjectRelease(v22);
    }
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_100048B14(v37, (uint64_t)qword_10124CDB0);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unable to create a url to delete the session", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

  }
  else
  {
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100048B14(v33, (uint64_t)qword_10124CDB0);
    v63 = Logger.logObject.getter(v34);
    v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v63, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v35, "Attempting to delete the session without a sessionID", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

  }
}

void sub_10032CBE4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  NSURL *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  Class isa;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v1 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100335148(v0, &v16);
  if (v21 == 1)
  {
    if (v20 || v17 | (unint64_t)v16 | v18 | v19 | *((_QWORD *)&v16 + 1))
    {
      v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      if (qword_10119BE80 != -1)
        swift_once(&qword_10119BE80, sub_100328E50);
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "removeObjectForKey:", v9);

    }
    else
    {
      if (qword_10119BE90 != -1)
        swift_once(&qword_10119BE90, sub_100328EB0);
      sub_10032C610();
      sub_100331EF8();
    }
  }
  else
  {
    sub_100331860((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v3, &qword_10119E460);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      URL._bridgeToObjectiveC()(v11);
      v13 = v12;
      v14 = sub_100043474((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_100048748((unint64_t *)&qword_10119D840, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EA7788);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v10, "openURL:options:completionHandler:", v13, isa, 0, swift_bridgeObjectRelease(v14).n128_f64[0]);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_10032CEA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  *(_QWORD *)(v1 + 16) = a1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to MusicDataRequest.response()[1]);
  *(_QWORD *)(v1 + 24) = v3;
  *v3 = v1;
  v3[1] = sub_10032CF04;
  return MusicDataRequest.response()(a1);
}

uint64_t sub_10032CF04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 24));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_10032CFC0;
  }
  else
  {
    v2 = sub_10032CF70;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10032CF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for MusicDataResponse(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032CFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for MusicDataResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10032D010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  double result;
  uint64_t v18;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - v8;
  if (qword_10119BEA8 != -1)
    swift_once(&qword_10119BEA8, sub_100333B30);
  v10 = _s9ViewModelOMa(0);
  v11 = sub_100048B14(v10, (uint64_t)qword_1011ACE98);
  sub_1003346CC(v11, (uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  KeyPath = swift_getKeyPath(&unk_100EB4FD8);
  v13 = swift_getKeyPath(&unk_100EB5000);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1011BC820);
  swift_retain();
  static Published.subscript.setter(v6, v0, KeyPath, v13);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011BC820);
  v14 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests) = 1;
  if (v14 != 1)
    sub_10032DF74(0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject(&unk_1010BFD68, 40, 7);
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v0;
  swift_retain();
  sub_100166D14((uint64_t)v3, (uint64_t)&unk_1011AD4C8, (uint64_t)v16);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10032D21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v4[5] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10032D27C, 0, 0);
}

uint64_t sub_10032D27C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtCO5Music3MLI8Observer_canUpdateViewModel) = 0;
  ContinuousClock.init()();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1011CA2C8 + dword_1011CA2C8);
  v1 = (_QWORD *)swift_task_alloc(unk_1011CA2CC);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10032D30C;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10032D30C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 48));
  v4 = v2[4];
  v3 = v2[5];
  v5 = v2[3];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_100337770;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_10032D3A4;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10032D3A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_10032DAB0(1);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10032D3E4()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  _QWORD v10[2];
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (qword_10119BE80 != -1)
    swift_once(&qword_10119BE80, sub_100328E50);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "valueForKey:", v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)(v11, v3);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_100065228((uint64_t)v11, (uint64_t)v12, &qword_10119DCC0);
  if (v13)
  {
    if ((swift_dynamicCast(v10, v12, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v4 = v10[0];
      v5 = v10[1];
      v6 = 1;
      goto LABEL_11;
    }
  }
  else
  {
    sub_10004FF60((uint64_t)v12, &qword_10119DCC0);
  }
  v6 = 0;
  v4 = 0;
  v5 = 0;
LABEL_11:
  v7 = (_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID + 8);
  *v7 = v4;
  v7[1] = v5;
  swift_bridgeObjectRelease(v8);
  v9 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress) = v6;
  if (v6 != v9)
    *(_BYTE *)(v0 + 128) = v6;
}

void sub_10032D558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  _QWORD v27[2];
  _BYTE v28[24];

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011AD430);
  __chkstk_darwin(v10);
  v12 = (char *)&v27[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL;
  swift_beginAccess(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL, v28, 0, 0);
  v14 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_10004A160(a1, (uint64_t)v12, &qword_10119E460);
  sub_10004A160(v13, v14, &qword_10119E460);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v15((uint64_t)v12, 1, v3) == 1)
  {
    if (v15(v14, 1, v3) == 1)
    {
      sub_10004FF60((uint64_t)v12, &qword_10119E460);
      return;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_10119E460);
    if (v15(v14, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v14, v3);
      v16 = sub_100048748((unint64_t *)&qword_1011AD438, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v3, v16);
      v18 = *(void (**)(char *, uint64_t))(v4 + 8);
      v18(v6, v3);
      v18(v9, v3);
      sub_10004FF60((uint64_t)v12, &qword_10119E460);
      if ((v17 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  sub_10004FF60((uint64_t)v12, &qword_1011AD430);
LABEL_8:
  v19 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (v15(v13, 1, v3))
  {
    v20 = 0;
  }
  else
  {
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
    v22 = URL.absoluteString.getter(v21);
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v27[0] = v22;
    v27[1] = v24;
    v20 = _bridgeAnythingToObjectiveC<A>(_:)(v27, &type metadata for String);
    sub_100334854((uint64_t)v27);
  }
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setObject:forKey:", v20, v25);

  swift_unknownObjectRelease(v20);
}

void sub_10032D884(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a1 & 1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v9 = OBJC_IVAR____TtCO5Music3MLI8Observer_hasNetworkConnectivity;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_hasNetworkConnectivity) != v2)
  {
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
      if ((*(_BYTE *)(v1 + v9) & 1) != 0)
      {
LABEL_4:
        sub_10032DF74(0);
        return;
      }
    }
    else if (*(_BYTE *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_hasNetworkConnectivity))
    {
      goto LABEL_4;
    }
    KeyPath = swift_getKeyPath(&unk_100EB4FD8);
    v11 = swift_getKeyPath(&unk_100EB5000);
    static Published.subscript.getter(v8, v1, KeyPath, v11);
    swift_release();
    swift_release();
    v12 = _s9ViewModelOMa(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      v14 = (uint64_t)v8;
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v8, v12) == 1)
      {
        sub_10005B748((uint64_t)v8, _s9ViewModelOMa);
        return;
      }
      v15 = v8[1];
      v16 = v8[3];
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v16);
      if (qword_10119BEB0 != -1)
        swift_once(&qword_10119BEB0, sub_100333BD8);
      v17 = sub_100048B14(v12, (uint64_t)qword_1011ACEB0);
      sub_1003346CC(v17, (uint64_t)v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v5, 0, 1, v12);
      sub_10032DC54((uint64_t)v5);
      v14 = (uint64_t)v5;
    }
    sub_10004FF60(v14, (uint64_t *)&unk_1011BC820);
  }
}

void sub_10032DAB0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  _BYTE v16[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v16[-v7 - 8];
  v9 = _s9ViewModelOMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *(_BYTE *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_canUpdateViewModel);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_canUpdateViewModel) = a1;
  if ((v13 & 1) == 0 && (a1 & 1) != 0)
  {
    v14 = v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_queuedViewModel;
    swift_beginAccess(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_queuedViewModel, v16, 0, 0);
    sub_10004A160(v14, (uint64_t)v8, (uint64_t *)&unk_1011BC820);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011BC820);
    }
    else
    {
      sub_10005B6C0((uint64_t)v8, (uint64_t)v12, _s9ViewModelOMa);
      sub_1003346CC((uint64_t)v12, (uint64_t)v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
      sub_10032DC54((uint64_t)v5);
      sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011BC820);
      sub_10005B748((uint64_t)v12, _s9ViewModelOMa);
    }
  }
}

uint64_t sub_10032DC54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE v27[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v27[-v7 - 8];
  __chkstk_darwin(v9);
  v11 = &v27[-v10 - 8];
  v12 = _s9ViewModelOMa(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10004A160(a1, (uint64_t)v11, (uint64_t *)&unk_1011BC820);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011BC820);
    v16 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v16(v8, 1, 1, v12);
    KeyPath = swift_getKeyPath(&unk_100EB4FD8);
    v18 = swift_getKeyPath(&unk_100EB5000);
    sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011BC820);
    swift_retain();
    static Published.subscript.setter(v5, v1, KeyPath, v18);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011BC820);
    v16(v8, 1, 1, v12);
    v19 = v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_queuedViewModel;
    swift_beginAccess(v19, v27, 33, 0);
    v20 = (uint64_t)v8;
    v21 = v19;
  }
  else
  {
    sub_10005B6C0((uint64_t)v11, (uint64_t)v15, _s9ViewModelOMa);
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_canUpdateViewModel) == 1)
    {
      sub_1003346CC((uint64_t)v15, (uint64_t)v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      v22 = swift_getKeyPath(&unk_100EB4FD8);
      v23 = swift_getKeyPath(&unk_100EB5000);
      sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011BC820);
      swift_retain();
      static Published.subscript.setter(v5, v1, v22, v23);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011BC820);
      return sub_10005B748((uint64_t)v15, _s9ViewModelOMa);
    }
    sub_10005B6C0((uint64_t)v15, (uint64_t)v8, _s9ViewModelOMa);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    sub_100065228((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011BC820);
    v25 = v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_queuedViewModel;
    swift_beginAccess(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_queuedViewModel, v27, 33, 0);
    v20 = (uint64_t)v5;
    v21 = v25;
  }
  sub_1000A5508(v20, v21, (uint64_t *)&unk_1011BC820);
  return swift_endAccess(v27);
}

void sub_10032DF74(int a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (**v18)(char *, char *, uint64_t);
  uint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;

  v36 = a1;
  v33 = *v1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v34 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for MusicDataRequest(0);
  v37 = *(_QWORD *)(v35 - 8);
  v4 = *(_QWORD *)(v37 + 64);
  __chkstk_darwin(v35);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v32 = (char *)&v32 - v7;
  v8 = sub_100007E8C(&qword_1011AD470);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URLRequest(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  v18 = *(uint64_t (***)(char *, char *, uint64_t))((char *)v1
                                                           + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID
                                                           + 8);
  if (v18)
  {
    if (*((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_hasNetworkConnectivity) == 1)
    {
      v19 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID);
      if ((*((_BYTE *)v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress) & 1) != 0 || (v36 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1003301E4(v19, v18, (uint64_t)v10);
        v20 = swift_bridgeObjectRelease(v18);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48))(v10, 1, v11, v20) == 1)
        {
          sub_10004FF60((uint64_t)v10, &qword_1011AD470);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
          v21 = v32;
          MusicDataRequest.init(urlRequest:)(v14);
          v22 = type metadata accessor for TaskPriority(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v34, 1, 1, v22);
          v23 = v37;
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v5, v21, v35);
          v24 = *(unsigned __int8 *)(v23 + 80);
          v25 = (v24 + 32) & ~v24;
          v26 = (v4 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
          v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
          v28 = swift_allocObject(&unk_1010BFCF0, v27 + 8, v24 | 7);
          v29 = v28 + v25;
          *(_QWORD *)(v28 + 16) = 0;
          *(_QWORD *)(v28 + 24) = 0;
          v30 = v35;
          (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v29, v5, v35);
          *(_QWORD *)(v28 + v26) = v1;
          *(_QWORD *)(v28 + v27) = v33;
          swift_retain();
          sub_100166D14(v34, (uint64_t)&unk_1011AD480, v28);
          v31 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v21, v30, v31);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        }
      }
    }
  }
}

uint64_t sub_10032E294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v5[60] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[61] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicDataResponse(0);
  v5[62] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[63] = v8;
  v9 = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[64] = v9;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicDataRequest.response()[1]);
  v5[65] = v10;
  *v10 = v5;
  v10[1] = sub_10032E33C;
  return MusicDataRequest.response()(v9);
}

uint64_t sub_10032E33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 520);
  *(_QWORD *)(*(_QWORD *)v1 + 528) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10032EC80;
  else
    v3 = sub_10032E3A0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10032E3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t *v53;

  v1 = *(_QWORD *)(v0 + 528);
  v2 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  JSONDecoder.init()();
  v3 = MusicDataResponse.data.getter();
  v5 = v4;
  v6 = sub_1003353A8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)((_QWORD *)(v0 + 16), &type metadata for MLI.Response, v3, v5, &type metadata for MLI.Response, v6);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));
    sub_1000652DC(v3, v5);
    swift_release();
    *(_QWORD *)(v0 + 544) = v1;
    v7 = (void *)_convertErrorToNSError(_:)(v1);
    v8 = objc_msgSend(v7, "userInfo");

    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreURLRequestHTTPStatusCodeUserInfoKey);
    v12 = v11;
    if (*(_QWORD *)(v9 + 16) && (v13 = sub_10079C2C4(v10, v11), (v14 & 1) != 0))
    {
      sub_10004FA40(*(_QWORD *)(v9 + 56) + 32 * v13, v0 + 400);
    }
    else
    {
      *(_OWORD *)(v0 + 400) = 0u;
      *(_OWORD *)(v0 + 416) = 0u;
    }
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v9);
    if (*(_QWORD *)(v0 + 424))
    {
      if ((swift_dynamicCast(v0 + 472, v0 + 400, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0
        && *(_QWORD *)(v0 + 472) == 404)
      {
        v15 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        if (qword_10119BE80 != -1)
          swift_once(&qword_10119BE80, sub_100328E50);
        v16 = String._bridgeToObjectiveC()();
        objc_msgSend(v15, "removeObjectForKey:", v16);

        if (qword_10119BEB8 != -1)
          swift_once(&qword_10119BEB8, sub_100334480);
        v17 = type metadata accessor for Logger(0);
        v18 = sub_100048B14(v17, (uint64_t)qword_10124CDB0);
        v19 = Logger.logObject.getter(v18);
        v20 = static os_log_type_t.default.getter(v19);
        if (!os_log_type_enabled(v19, v20))
        {
          swift_errorRelease(v1);

          goto LABEL_22;
        }
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[PB] closing session", v21, 2u);
        swift_slowDealloc(v21, -1, -1);

LABEL_21:
        swift_errorRelease(v1);
LABEL_22:
        v41 = *(_QWORD *)(v0 + 488);
        swift_task_dealloc(*(_QWORD *)(v0 + 512));
        swift_task_dealloc(v41);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    else
    {
      sub_10004FF60(v0 + 400, &qword_10119DCC0);
    }
    v34 = *(_QWORD *)(v0 + 480);
    v35 = OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount;
    *(_QWORD *)(v0 + 552) = OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount;
    if (*(uint64_t *)(v34 + v35) <= 2)
    {
      v36 = *(_QWORD *)(v0 + 488);
      v37 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
      v38 = (_QWORD *)swift_allocObject(&unk_1010BFD18, 40, 7);
      v38[2] = 0;
      v38[3] = 0;
      v38[4] = v34;
      swift_retain();
      v39 = sub_100166D14(v36, (uint64_t)&unk_1011AD498, (uint64_t)v38);
      v40 = *(_QWORD *)(v34 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask);
      *(_QWORD *)(v34 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask) = v39;
      swift_retain();
      if (v40)
      {
        Task.cancel()();
        swift_release();
      }
      swift_release();
      goto LABEL_21;
    }
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v43 = type metadata accessor for Logger(0);
    sub_100048B14(v43, (uint64_t)qword_10124CDB0);
    swift_errorRetain(v1);
    v44 = swift_errorRetain(v1);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v47 = 138543362;
      swift_errorRetain(v1);
      v48 = _swift_stdlib_bridgeErrorToNSError(v1);
      *(_QWORD *)(v0 + 464) = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
      *v53 = v48;
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[PB] Request failed with error: %{public}@", v47, 0xCu);
      v49 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v53, 1, v49);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v47, -1, -1);
    }
    else
    {
      swift_errorRelease(v1);
      swift_errorRelease(v1);
    }

    v50 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 560) = static MainActor.shared.getter(v51);
    v30 = dispatch thunk of Actor.unownedExecutor.getter(v50, &protocol witness table for MainActor);
    v32 = v52;
    v33 = sub_10032EBD4;
  }
  else
  {
    sub_1000652DC(v3, v5);
    swift_release();
    v22 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 352) = v22;
    v23 = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v0 + 384) = v23;
    v24 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 288) = v24;
    v25 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 320) = v25;
    v26 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 224) = v26;
    v27 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 256) = v27;
    v28 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 536) = static MainActor.shared.getter(v29);
    v30 = dispatch thunk of Actor.unownedExecutor.getter(v28, &protocol witness table for MainActor);
    v32 = v31;
    v33 = sub_10032E9E8;
  }
  return swift_task_switch(v33, v30, v32);
}

uint64_t sub_10032E9E8()
{
  uint64_t v0;

  swift_release();
  sub_10032F724(v0 + 208);
  return swift_task_switch(sub_10032EA34, 0, 0);
}

uint64_t sub_10032EA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 480) + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests) == 1)
  {
    sub_1003353EC((_QWORD *)(v0 + 208));
    sub_100065228(v0 + 224, v0 + 432, &qword_10119FA78);
    sub_100065228(v0 + 432, v0 + 448, &qword_10119FA78);
    if (*(_BYTE *)(v0 + 456) == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));
    }
    else
    {
      v2 = *(_QWORD *)(v0 + 480);
      v1 = *(_QWORD *)(v0 + 488);
      v3 = *(_QWORD *)(v0 + 448);
      v4 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
      v5 = (_QWORD *)swift_allocObject(&unk_1010BFD40, 48, 7);
      v5[2] = 0;
      v5[3] = 0;
      v5[4] = v3;
      v5[5] = v2;
      swift_retain();
      v6 = sub_100166D14(v1, (uint64_t)&unk_1011AD4B8, (uint64_t)v5);
      v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask);
      *(_QWORD *)(v2 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask) = v6;
      swift_retain();
      if (v7)
      {
        Task.cancel()();
        swift_release();
      }
      v9 = *(_QWORD *)(v0 + 504);
      v8 = *(_QWORD *)(v0 + 512);
      v10 = *(_QWORD *)(v0 + 496);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));
    sub_1003353EC((_QWORD *)(v0 + 208));
  }
  v11 = *(_QWORD *)(v0 + 488);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032EBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 480);
  swift_release();
  *(_QWORD *)(v2 + v1) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentRetryDelay) = 2;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCO5Music3MLI8Observer_didReceiveError) = 1;
  return swift_task_switch(sub_10032EC3C, 0, 0);
}

uint64_t sub_10032EC3C()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 544));
  v1 = *(_QWORD *)(v0 + 488);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032EC80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;

  v1 = *(_QWORD *)(v0 + 528);
  *(_QWORD *)(v0 + 544) = v1;
  v2 = (void *)_convertErrorToNSError(_:)(v1);
  v3 = objc_msgSend(v2, "userInfo");

  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreURLRequestHTTPStatusCodeUserInfoKey);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16) && (v8 = sub_10079C2C4(v5, v6), (v9 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v4 + 56) + 32 * v8, v0 + 400);
  }
  else
  {
    *(_OWORD *)(v0 + 400) = 0u;
    *(_OWORD *)(v0 + 416) = 0u;
  }
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v4);
  if (*(_QWORD *)(v0 + 424))
  {
    if ((swift_dynamicCast(v0 + 472, v0 + 400, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0
      && *(_QWORD *)(v0 + 472) == 404)
    {
      v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      if (qword_10119BE80 != -1)
        swift_once(&qword_10119BE80, sub_100328E50);
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "removeObjectForKey:", v11);

      if (qword_10119BEB8 != -1)
        swift_once(&qword_10119BEB8, sub_100334480);
      v12 = type metadata accessor for Logger(0);
      v13 = sub_100048B14(v12, (uint64_t)qword_10124CDB0);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.default.getter(v14);
      if (!os_log_type_enabled(v14, v15))
      {
        swift_errorRelease(v1);

        goto LABEL_20;
      }
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "[PB] closing session", v16, 2u);
      swift_slowDealloc(v16, -1, -1);

LABEL_19:
      swift_errorRelease(v1);
LABEL_20:
      v24 = *(_QWORD *)(v0 + 488);
      swift_task_dealloc(*(_QWORD *)(v0 + 512));
      swift_task_dealloc(v24);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    sub_10004FF60(v0 + 400, &qword_10119DCC0);
  }
  v17 = *(_QWORD *)(v0 + 480);
  v18 = OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount;
  *(_QWORD *)(v0 + 552) = OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount;
  if (*(uint64_t *)(v17 + v18) <= 2)
  {
    v19 = *(_QWORD *)(v0 + 488);
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    v21 = (_QWORD *)swift_allocObject(&unk_1010BFD18, 40, 7);
    v21[2] = 0;
    v21[3] = 0;
    v21[4] = v17;
    swift_retain();
    v22 = sub_100166D14(v19, (uint64_t)&unk_1011AD498, (uint64_t)v21);
    v23 = *(_QWORD *)(v17 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask);
    *(_QWORD *)(v17 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask) = v22;
    swift_retain();
    if (v23)
    {
      Task.cancel()();
      swift_release();
    }
    swift_release();
    goto LABEL_19;
  }
  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v26 = type metadata accessor for Logger(0);
  sub_100048B14(v26, (uint64_t)qword_10124CDB0);
  swift_errorRetain(v1);
  v27 = swift_errorRetain(v1);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v30 = 138543362;
    swift_errorRetain(v1);
    v31 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 464) = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 464, v0 + 472);
    *v37 = v31;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[PB] Request failed with error: %{public}@", v30, 0xCu);
    v32 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v37, 1, v32);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v33 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 560) = static MainActor.shared.getter(v34);
  v35 = dispatch thunk of Actor.unownedExecutor.getter(v33, &protocol witness table for MainActor);
  return swift_task_switch(sub_10032EBD4, v35, v36);
}

uint64_t sub_10032F1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for ContinuousClock(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10032F21C, 0, 0);
}

uint64_t sub_10032F21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = 1000000000000000000 * v1;
  v3 = ((v1 >> 63) & 0xF21F494C589C0000) + (((unint64_t)v1 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64);
  ContinuousClock.init()();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1011CA2C8 + dword_1011CA2C8);
  v4 = (_QWORD *)swift_task_alloc(unk_1011CA2CC);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_10032F2C8;
  return v6(v2, v3, 0, 0, 1);
}

uint64_t sub_10032F2C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 56));
  v4 = v2[5];
  v3 = v2[6];
  v5 = v2[4];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_100337768;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_10032F360;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10032F360()
{
  uint64_t v0;

  if ((static Task<>.isCancelled.getter() & 1) == 0)
    sub_10032DF74(0);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032F3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10032F404, 0, 0);
}

uint64_t sub_10032F404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = v0[3];
  v2 = OBJC_IVAR____TtCO5Music3MLI8Observer_currentRetryDelay;
  v0[7] = OBJC_IVAR____TtCO5Music3MLI8Observer_currentRetryDelay;
  v3 = *(_QWORD *)(v1 + v2);
  v4 = 1000000000000000000 * v3;
  v5 = ((v3 >> 63) & 0xF21F494C589C0000) + (((unint64_t)v3 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64);
  ContinuousClock.init()();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1011CA2C8 + dword_1011CA2C8);
  v6 = (_QWORD *)swift_task_alloc(unk_1011CA2CC);
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_10032F4C0;
  return v8(v4, v5, 0, 0, 1);
}

uint64_t sub_10032F4C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 64));
  v4 = v2[5];
  v3 = v2[6];
  v5 = v2[4];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_100337774;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_10032F558;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10032F558()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = static Task<>.isCancelled.getter();
  v3 = OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount;
  if ((v2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount) = 0;
    *(_QWORD *)(v5 + v4) = 2;
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
  {
    __break(1u);
    goto LABEL_12;
  }
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount) = v8;
  v11 = *(_QWORD *)(v10 + v9);
  if (v11 + 0x4000000000000000 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 56)) = 2 * v11;
  if (qword_10119BEB8 != -1)
LABEL_13:
    swift_once(&qword_10119BEB8, sub_100334480);
  v12 = type metadata accessor for Logger(0);
  sub_100048B14(v12, (uint64_t)qword_10124CDB0);
  swift_retain();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v16 = 134349056;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + v3);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[PB] Retrying request (attempt #%{public}ld)", v16, 0xCu);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    swift_release();
  }

  sub_10032DF74(0);
LABEL_10:
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032F724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011AD440);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v7);
  v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v35 = (uint64_t)&v34 - v10;
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v34 - v12);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v17 = _s9ViewModelOMa(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v34 = (uint64_t)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v34 - v21;
  v37 = a1;
  sub_10032FAEC((uint64_t)&v34 - v21);
  sub_1003346CC((uint64_t)v22, (uint64_t)v16);
  v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v36(v16, 0, 1, v17);
  KeyPath = swift_getKeyPath(&unk_100EB4FD8);
  v24 = swift_getKeyPath(&unk_100EB5000);
  v39 = v2;
  static Published.subscript.getter(v13, v2, KeyPath, v24);
  swift_release();
  swift_release();
  v25 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10004A160((uint64_t)v16, (uint64_t)v6, (uint64_t *)&unk_1011BC820);
  sub_10004A160((uint64_t)v13, v25, (uint64_t *)&unk_1011BC820);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v26((uint64_t)v6, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011BC820);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011BC820);
    if (v26(v25, 1, v17) == 1)
    {
LABEL_11:
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011BC820);
      return sub_10005B748((uint64_t)v22, _s9ViewModelOMa);
    }
    goto LABEL_6;
  }
  v27 = v35;
  sub_10004A160((uint64_t)v6, v35, (uint64_t *)&unk_1011BC820);
  if (v26(v25, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011BC820);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011BC820);
    sub_10005B748(v27, _s9ViewModelOMa);
LABEL_6:
    sub_10004FF60((uint64_t)v6, &qword_1011AD440);
LABEL_8:
    v30 = *(unsigned __int8 *)(v37 + 24);
    v31 = v39;
    v32 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress);
    *(_BYTE *)(v39 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress) = v30 ^ 1;
    if (v30 == v32)
      *(_BYTE *)(v31 + 128) = v30 ^ 1;
    v6 = v38;
    sub_1003346CC((uint64_t)v22, (uint64_t)v38);
    v36(v6, 0, 1, v17);
    sub_10032DC54((uint64_t)v6);
    goto LABEL_11;
  }
  v28 = v34;
  sub_10005B6C0(v25, v34, _s9ViewModelOMa);
  v29 = sub_100646794(v27, v28);
  sub_10005B748(v28, _s9ViewModelOMa);
  sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011BC820);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011BC820);
  sub_10005B748(v27, _s9ViewModelOMa);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011BC820);
  if ((v29 & 1) == 0)
    goto LABEL_8;
  return sub_10005B748((uint64_t)v22, _s9ViewModelOMa);
}

uint64_t sub_10032FAEC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)();
  uint64_t v36;
  void (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  _BYTE v47[48];
  _BYTE v48[48];
  _BYTE v49[48];
  _BYTE v50[48];
  __int128 v51[2];
  char v52;
  __int128 v53[3];
  __int128 v54[2];
  char v55;
  __int128 v56[3];
  _BYTE v57[48];
  _BYTE v58[16];
  _BYTE v59[16];
  _BYTE v60[16];
  _QWORD v61[6];
  double v62;
  char v63;
  char v64[8];
  uint64_t v65;
  char v66[8];
  uint64_t v67;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011AD448);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  sub_100065228((uint64_t)v2, (uint64_t)v60, &qword_1011AD450);
  sub_100065228((uint64_t)v60, (uint64_t)&v62, &qword_1011AD450);
  if ((v63 & 1) != 0)
  {
    v11 = v2[4];
    v10 = v2[5];
    if (!v10
      || (sub_100065228((uint64_t)(v2 + 6), (uint64_t)v59, &qword_10119DCA0),
          sub_100065228((uint64_t)v59, (uint64_t)v64, &qword_10119DCA0),
          v65)
      || (sub_100065228((uint64_t)(v2 + 10), (uint64_t)v58, &qword_10119DCA0),
          sub_100065228((uint64_t)v58, (uint64_t)v66, &qword_10119DCA0),
          v67))
    {
      v40 = v11;
      v12 = v2[7];
      v44 = v2[6];
      v42 = v2[8];
      v13 = v10;
      v14 = v2[9];
      v15 = v2[10];
      v16 = v2[11];
      sub_100065228((uint64_t)(v2 + 16), (uint64_t)v57, &qword_1011AD458);
      v41 = v14;
      v17 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n(v16, 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(_QWORD *)&v46 = v15;
      sub_100334C00(v15, v16, (uint64_t)v57, (uint64_t)v47);
      sub_100065228((uint64_t)v47, (uint64_t)v54, &qword_1011AD460);
      if ((v55 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
      }
      else
      {
        sub_100335148(v54, v56);
        v38 = swift_allocObject(&unk_1010BFCC8, 58, 7);
        sub_100335148(v56, (_OWORD *)(v38 + 16));
        v37 = sub_100335188;
      }
      swift_bridgeObjectRetain();
      sub_100334C00(v46, v16, (uint64_t)v57, (uint64_t)v48);
      sub_100065228((uint64_t)v48, (uint64_t)v51, &qword_1011AD460);
      v43 = v12;
      v22 = (uint64_t)v6;
      if ((v52 & 1) != 0)
      {
        v35 = 0;
        v36 = 0;
      }
      else
      {
        sub_100335148(v51, v53);
        v36 = swift_allocObject(&unk_1010BFCA0, 58, 7);
        sub_100335148(v53, (_OWORD *)(v36 + 16));
        v35 = sub_100335170;
      }
      v23 = v40;
      v24 = v2[12];
      v25 = v2[13];
      v26 = v2[15];
      v39 = v2[14];
      v40 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100334C00(v46, v16, (uint64_t)v57, (uint64_t)v49);
      sub_100065228((uint64_t)v49, (uint64_t)v50, &qword_1011AD460);
      v45 = v17;
      v27 = (v50[42] & 1) == 0 && v50[41] != 1;
      sub_100332670((uint64_t)v2, (uint64_t)v9);
      sub_100332814((uint64_t)v2, v22);
      v61[0] = v40;
      v61[1] = v25;
      v61[2] = v39;
      v61[3] = v26;
      v61[4] = sub_1003337B8;
      v61[5] = 0;
      sub_10063C1B8(v23, v45, v44, v43, v42, v41, v46, v16, a1, (uint64_t)v37, v38, (uint64_t)v35, v36, (uint64_t)v61, v27, (uint64_t)v9, v22);
      v28 = _s9ViewModelOMa(0);
      return swift_storeEnumTagMultiPayload(a1, v28, 1);
    }
    else
    {
      v29 = _s16ActionButtonViewV5ModelVMa(0);
      v30 = a1 + *(int *)(v29 + 48);
      v31 = _s12ClickMetricsVMa(0);
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
      v32(v30, 1, 1, v31);
      v32(a1 + *(int *)(v29 + 52), 1, 1, v31);
      sub_100065228((uint64_t)v58, a1, &qword_10119DCA0);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v10;
      sub_100065228((uint64_t)v58, a1 + 32, &qword_10119DCA0);
      sub_100065228((uint64_t)v58, a1 + 48, &qword_10119DCA0);
      v33 = _s9ViewModelOMa(0);
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_BYTE *)(a1 + 144) = 0;
      swift_storeEnumTagMultiPayload(a1, v33, 1);
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    v18 = v62;
    if (v62 < 0.0)
      v18 = 0.0;
    if (v18 > 1.0)
      v18 = 1.0;
    v19 = v2[7];
    *(_QWORD *)a1 = v2[4];
    v46 = *(_OWORD *)(v2 + 5);
    *(_OWORD *)(a1 + 8) = v46;
    *(_QWORD *)(a1 + 24) = v19;
    *(double *)(a1 + 32) = v18;
    *(_QWORD *)(a1 + 40) = 0x3FF4000000000000;
    *(_BYTE *)(a1 + 48) = 0;
    v20 = _s9ViewModelOMa(0);
    swift_storeEnumTagMultiPayload(a1, v20, 0);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

void sub_10032FFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v1 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v1);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v13[-v5];
  v7 = *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_shouldMakeRequests) = 0;
  if ((v7 & 1) != 0 && *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  v8 = *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_isInProgress) = 0;
  if ((v8 & 1) != 0)
    *(_BYTE *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_didReceiveError) = 0;
  sub_10032C4CC(0);
  v9 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL;
  swift_beginAccess(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL, v14, 0, 0);
  sub_10004A160(v10, (uint64_t)v3, &qword_10119E460);
  swift_beginAccess(v10, v13, 33, 0);
  sub_10015E72C((uint64_t)v6, v10);
  swift_endAccess(v13);
  sub_10032D558((uint64_t)v3);
  sub_10004FF60((uint64_t)v6, &qword_10119E460);
  sub_10004FF60((uint64_t)v3, &qword_10119E460);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentTask) = 0;
  if (v11)
  {
    Task.cancel()();
    swift_release();
  }
  v12 = *(_QWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_retryCount) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_currentRetryDelay) = 2;
}

uint64_t sub_1003301E4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t (**v6)(char *, char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  unint64_t v31;
  __n128 v32;
  uint64_t (*v33)(char *, char *, uint64_t);
  uint64_t (**v34)(char *, char *, uint64_t);
  __n128 v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (**v75)(char *, char *, uint64_t);
  uint64_t v76;
  unint64_t v77;

  v75 = a2;
  v5 = type metadata accessor for URLComponents(0);
  v6 = *(uint64_t (***)(char *, char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5);
  v71 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v74 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v70 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v69 = (char *)&v66 - v14;
  v15 = sub_100007E8C((uint64_t *)&unk_1011AD410);
  __chkstk_darwin(v15);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1003307F8();
  if (!v19)
  {
    v36 = type metadata accessor for URLRequest(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a3, 1, 1, v36);
  }
  v20 = v18;
  v21 = v19;
  v72 = v11;
  v73 = a3;
  v22 = (_QWORD *)static Locale.preferredLanguages.getter(v18);
  v23 = objc_msgSend((id)objc_opt_self(ICDeviceInfo), "currentDeviceInfo");
  v24 = objc_msgSend(v23, "isIPad");

  v25 = 1684107369;
  if (!v24)
    v25 = 0x656E6F687069;
  v68 = v25;
  if (v24)
    v26 = 0xE400000000000000;
  else
    v26 = 0xE600000000000000;
  v76 = 0;
  v77 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v77);
  v76 = 0x2F2F3A7370747468;
  v77 = 0xE800000000000000;
  v27._countAndFlagsBits = v20;
  v27._object = v21;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v21);
  v28._countAndFlagsBits = 47;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  v29._countAndFlagsBits = a1;
  v29._object = v75;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0x736572676F72702FLL;
  v30._object = (void *)0xE900000000000073;
  String.append(_:)(v30);
  v31 = v77;
  URLComponents.init(string:)(v76, v77);
  v32 = swift_bridgeObjectRelease(v31);
  v33 = v6[6];
  v34 = v6;
  if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v33)(v17, 1, v5, v32))
  {
    swift_bridgeObjectRelease(v22);
    v35 = swift_bridgeObjectRelease(v26);
    goto LABEL_12;
  }
  v38 = sub_100007E8C(&qword_1011AE1F0);
  v39 = type metadata accessor for URLQueryItem(0);
  result = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
  *(_OWORD *)(result + 16) = xmmword_100EA7AC0;
  if (v22[2])
  {
    v66 = v26;
    v67 = result;
    v40 = v22[4];
    v41 = v22[5];
    swift_bridgeObjectRetain();
    URLQueryItem.init(name:value:)(108, 0xE100000000000000, v40, v41);
    swift_bridgeObjectRelease(v41);
    v76 = (uint64_t)v22;
    v42 = sub_100007E8C((uint64_t *)&unk_1011AD420);
    v75 = v6;
    v43 = v42;
    v44 = sub_100334808();
    v45 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v43, v44);
    v47 = v46;
    swift_bridgeObjectRelease(v22);
    URLQueryItem.init(name:value:)(0x614C747065636361, 0xEE0065676175676ELL, v45, v47);
    v48 = v47;
    v34 = v75;
    swift_bridgeObjectRelease(v48);
    v49 = v66;
    URLQueryItem.init(name:value:)(0x6D726F6674616C70, 0xE800000000000000, v68, v66);
    v50 = swift_bridgeObjectRelease(v49);
    URLComponents.queryItems.setter(v67, v50);
LABEL_12:
    v51 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v33)(v17, 1, v5, v35);
    v52 = v72;
    v53 = v73;
    v54 = v74;
    if (v51)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v10, 1, 1, v72);
    }
    else
    {
      v55 = v71;
      v56 = v34[2](v71, v17, v5);
      URLComponents.url.getter(v56);
      ((void (*)(char *, uint64_t))v34[1])(v55, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v10, 1, v52) != 1)
      {
        v63 = v69;
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v69, v10, v52);
        v64 = v70;
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v70, v63, v52);
        URLRequest.init(url:cachePolicy:timeoutInterval:)(v64, 0, 60.0);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v63, v52);
        v65 = type metadata accessor for URLRequest(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v53, 0, 1, v65);
        return sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011AD410);
      }
    }
    sub_10004FF60((uint64_t)v10, &qword_10119E460);
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v57 = type metadata accessor for Logger(0);
    v58 = sub_100048B14(v57, (uint64_t)qword_10124CDB0);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Unable to create a urlRequest", v61, 2u);
      swift_slowDealloc(v61, -1, -1);
    }

    v62 = type metadata accessor for URLRequest(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v53, 1, 1, v62);
    return sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011AD410);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003307F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  const char *v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;

  v1 = v0;
  BagProvider.shared.unsafeMutableAddressor();
  swift_retain();
  v2 = (void *)BagProvider.bag.getter();
  swift_release();
  if (!v2)
  {
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100048B14(v18, (uint64_t)qword_10124CDB0);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Bag is nil, creating url bag observer", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    v23 = swift_allocObject(&unk_1010BFBB0, 24, 7);
    swift_weakInit(v23 + 16, v1);
    swift_retain();
    swift_retain();
    v24 = BagProvider.createObserver(handler:)((uint64_t)sub_100334800, v23);
    swift_release_n(v23, 2, v25);
    swift_release();
    *(_QWORD *)(v1 + OBJC_IVAR____TtCO5Music3MLI8Observer_urlBagObserver) = v24;
    swift_release();
    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicCommon);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "dictionaryForBagKey:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  if (!v6)
    goto LABEL_18;
  v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v8 = sub_100050AA8(v7);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_18;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyAMPMusicAPIDomains);
  v11 = v10;
  if (!*(_QWORD *)(v8 + 16) || (v12 = sub_10079C2C4(v9, v10), (v13 & 1) == 0))
  {
    v54 = 0u;
    v55 = 0u;
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v11);
    goto LABEL_17;
  }
  sub_10004FA40(*(_QWORD *)(v8 + 56) + 32 * v12, (uint64_t)&v54);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v11);
  if (!*((_QWORD *)&v55 + 1))
    goto LABEL_17;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3090);
  if ((swift_dynamicCast(&v52, &v54, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
  {
LABEL_18:
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100048B14(v26, (uint64_t)qword_10124CDB0);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v28, v29))
      goto LABEL_23;
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    v31 = "Unable to get the domain";
    goto LABEL_22;
  }
  v15 = v52;
  if (*(_QWORD *)(v52 + 16) && (v16 = sub_10079C2C4(0x746C7561666564, 0xE700000000000000), (v17 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  swift_bridgeObjectRelease(v15);
  if (!*((_QWORD *)&v55 + 1))
  {
LABEL_17:
    sub_10004FF60((uint64_t)&v54, &qword_10119DCC0);
    goto LABEL_18;
  }
  if ((swift_dynamicCast(&v52, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_18;
  v34 = v52;
  v33 = v53;
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
  v36 = v35;
  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v2, "dictionaryForBagKey:", v37, swift_bridgeObjectRelease(v36).n128_f64[0]);

  if (!v38)
    goto LABEL_43;
  v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v40 = sub_100050AA8(v39);
  swift_bridgeObjectRelease(v39);
  if (!v40)
    goto LABEL_43;
  if (*(_QWORD *)(v40 + 16) && (v41 = sub_10079C2C4(6909037, 0xE300000000000000), (v42 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v40 + 56) + 32 * v41, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  swift_bridgeObjectRelease(v40);
  if (!*((_QWORD *)&v55 + 1))
    goto LABEL_48;
  if ((swift_dynamicCast(&v52, &v54, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
  {
LABEL_43:
    swift_bridgeObjectRelease(v33);
LABEL_44:
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v50 = type metadata accessor for Logger(0);
    v51 = sub_100048B14(v50, (uint64_t)qword_10124CDB0);
    v28 = Logger.logObject.getter(v51);
    v29 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v28, v29))
      goto LABEL_23;
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    v31 = "Unable to get the path";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v28, v29, v31, v30, 2u);
    swift_slowDealloc(v30, -1, -1);
LABEL_23:

    return 0;
  }
  v43 = v52;
  if (*(_QWORD *)(v52 + 16) && (v44 = sub_10079C2C4(0x6150495041696C6DLL, 0xEA00000000006874), (v45 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v43 + 56) + 32 * v44, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  swift_bridgeObjectRelease(v43);
  if (!*((_QWORD *)&v55 + 1))
  {
LABEL_48:
    swift_bridgeObjectRelease(v33);
    sub_10004FF60((uint64_t)&v54, &qword_10119DCC0);
    goto LABEL_44;
  }
  if ((swift_dynamicCast(&v52, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_43;
  v46 = v52;
  v47 = v53;
  *(_QWORD *)&v54 = v34;
  *((_QWORD *)&v54 + 1) = v33;
  v48._countAndFlagsBits = 3241519;
  v48._object = (void *)0xE300000000000000;
  String.append(_:)(v48);
  v49._countAndFlagsBits = v46;
  v49._object = v47;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v47);

  return v54;
}

double sub_100330E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_10124CDB0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received bag, retrying", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v11, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    *(_QWORD *)(Strong + OBJC_IVAR____TtCO5Music3MLI8Observer_urlBagObserver) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess(v2, &v10, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_10032DF74(0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_100330F78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  swift_bridgeObjectRelease(v0[3]);
  v1 = v0[7];
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v1);
  v2 = v0[11];
  v3 = v0[13];
  v4 = v0[15];
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v0[18]);
  v5 = (char *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer__viewModel;
  v6 = sub_100007E8C((uint64_t *)&unk_1011AD3A0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10004FF60((uint64_t)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL, &qword_10119E460);
  swift_release();
  sub_10004FF60((uint64_t)v0 + OBJC_IVAR____TtCO5Music3MLI8Observer_queuedViewModel, (uint64_t *)&unk_1011BC820);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1003310CC()
{
  uint64_t v0;

  sub_100330F78();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003310F0()
{
  return type metadata accessor for MLI.Observer(0);
}

uint64_t type metadata accessor for MLI.Observer(uint64_t a1)
{
  uint64_t result;

  result = qword_1011ACF70;
  if (!qword_1011ACF70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MLI.Observer);
  return result;
}

void sub_100331134(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[24];

  v8[0] = &unk_100EB4EC8;
  v8[1] = &unk_100EB4EE0;
  v8[2] = &unk_100EB4EF8;
  v8[3] = &unk_100EB4F10;
  sub_100331268(319);
  if (v3 <= 0x3F)
  {
    v8[4] = *(_QWORD *)(v2 - 8) + 64;
    v8[5] = &unk_100EB4EC8;
    v8[6] = &unk_100EB4F28;
    v8[7] = &unk_100EB4F28;
    v8[8] = &unk_100EB4F40;
    v8[9] = &unk_100EB4F40;
    v8[10] = &unk_100EB4F40;
    v8[11] = &unk_100EB4F40;
    v8[12] = &unk_100EB4F58;
    sub_10015C698(319, qword_1011ACF90, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    if (v5 <= 0x3F)
    {
      v8[13] = *(_QWORD *)(v4 - 8) + 64;
      v8[14] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[15] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[16] = &unk_100EB4F40;
      v8[17] = &unk_100EB4F28;
      v8[18] = &unk_100EB4F28;
      v8[19] = &unk_100EB4F28;
      sub_10015C698(319, &qword_1011ADD90, _s9ViewModelOMa);
      if (v7 <= 0x3F)
      {
        v8[20] = *(_QWORD *)(v6 - 8) + 64;
        v8[21] = &unk_100EB4F28;
        v8[22] = &unk_100EB4F40;
        v8[23] = &unk_100EB4F40;
        swift_updateClassMetadata2(a1, 256, 24, v8, a1 + 80);
      }
    }
  }
}

void sub_100331268(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011ACF80)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011BC820);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011ACF80);
  }
}

uint64_t destroy for TransportControlsController.ButtonConfiguration(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t _s5Music3MLIO8ObserverC11MetricsDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for MLI.Observer.MetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for MLI.Observer.MetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Badge(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Badge(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLI.Observer.MetricsData()
{
  return &type metadata for MLI.Observer.MetricsData;
}

uint64_t destroy for MLI.Observer.AlertText(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

_QWORD *initializeWithCopy for MLI.Observer.AlertText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithCopy for MLI.Observer.AlertText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

__n128 initializeWithTake for NowPlayingViewController.QueueModeData(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for MLI.Observer.AlertText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLI.Observer.AlertText(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLI.Observer.AlertText(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLI.Observer.AlertText()
{
  return &type metadata for MLI.Observer.AlertText;
}

ValueMetadata *type metadata accessor for MLI()
{
  return &type metadata for MLI;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Background(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Background(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLI.Observer.DeepLinkURLs()
{
  return &type metadata for MLI.Observer.DeepLinkURLs;
}

uint64_t sub_1003317A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for MLI.Observer(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1003317DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100331808()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033182C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100331850()
{
  uint64_t v0;

  return sub_100329780(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_100331858()
{
  uint64_t v0;

  return sub_100329DA8(v0);
}

void sub_100331860(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  Swift::String v22;
  unint64_t v23;
  __n128 v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  Swift::String v47;
  void *object;
  unint64_t v49;
  uint64_t v50;
  Swift::String v51;
  void *v52;
  unint64_t v53;
  __n128 v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  char v77;

  v3 = type metadata accessor for URLComponents(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011AD410);
  __chkstk_darwin(v7);
  v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100335148(v1, &v71);
  v10 = v71;
  if (v76 == 1)
  {
    if (v75 || v72 | (unint64_t)v71 | v73 | v74 | *((_QWORD *)&v71 + 1))
      goto LABEL_28;
    if (qword_10119BE90 != -1)
      swift_once(&qword_10119BE90, sub_100328EB0);
    v11 = *(void **)(qword_10124CDA8 + 40);
    if (v11)
    {
      v12 = *(_QWORD *)(qword_10124CDA8 + 32);
      v69 = 0x2F2F3A636973756DLL;
      v70 = 0xE800000000000000;
      swift_bridgeObjectRetain();
      v13._countAndFlagsBits = v12;
      v13._object = v11;
      String.append(_:)(v13);
      swift_bridgeObjectRelease(v11);
      v14 = v70;
      URL.init(string:)(v69, v70);
      swift_bridgeObjectRelease(v14);
      return;
    }
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_10124CDB0);
    v29 = Logger.logObject.getter(v36);
    v30 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v29, v30))
    {
LABEL_27:

LABEL_28:
      v37 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a1, 1, 1, v37);
      return;
    }
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    v32 = "No deep link";
LABEL_26:
    _os_log_impl((void *)&_mh_execute_header, v29, v30, v32, v31, 2u);
    swift_slowDealloc(v31, -1, -1);
    goto LABEL_27;
  }
  v15 = BYTE8(v71);
  v16 = v72;
  v77 = v73;
  v17 = v74;
  v18 = v75;
  if (qword_10119BE90 != -1)
  {
    v59 = BYTE8(v71);
    v60 = v74;
    swift_once(&qword_10119BE90, sub_100328EB0);
    v17 = v60;
    v15 = v59;
  }
  v19 = *(_QWORD *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID + 8);
  if (!v19)
  {
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100048B14(v27, (uint64_t)qword_10124CDB0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v29, v30))
      goto LABEL_27;
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    v32 = "Trying to open url with no sessionID";
    goto LABEL_26;
  }
  v20 = *(void **)(qword_10124CDA8 + 56);
  if (!v20)
  {
    if (qword_10119BEB8 != -1)
      swift_once(&qword_10119BEB8, sub_100334480);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100048B14(v33, (uint64_t)qword_10124CDB0);
    v29 = Logger.logObject.getter(v34);
    v30 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v29, v30))
      goto LABEL_27;
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    v32 = "No review deep link";
    goto LABEL_26;
  }
  v66 = v15;
  v63 = v16;
  v67 = a1;
  v64 = *(_QWORD *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_sessionID);
  v65 = v17;
  v21 = *(_QWORD *)(qword_10124CDA8 + 48);
  v69 = 0x2F2F3A636973756DLL;
  v70 = 0xE800000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = v21;
  v22._object = v20;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v20);
  v23 = v70;
  URLComponents.init(string:)(v69, v70);
  v24 = swift_bridgeObjectRelease(v23);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v4 + 48);
  if (v25(v9, 1, v3, v24))
  {
    v26 = swift_bridgeObjectRelease(v19);
  }
  else
  {
    v38 = sub_100007E8C(&qword_1011AE1F0);
    v39 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
    v40 = *(_QWORD *)(v39 + 72);
    v41 = *(unsigned __int8 *)(v39 + 80);
    v61[1] = v40;
    v42 = swift_allocObject(v38, ((v41 + 32) & ~v41) + 3 * v40, v41 | 7);
    *(_OWORD *)(v42 + 16) = xmmword_100EA7AC0;
    v62 = v42;
    URLQueryItem.init(name:value:)(0x496E6F6973736573, 0xE900000000000044, v64, v19);
    swift_bridgeObjectRelease(v19);
    v69 = 0;
    v70 = 0xE000000000000000;
    if ((v66 & 1) != 0)
      v43 = 0;
    else
      v43 = v10;
    v44 = v65;
    if ((v18 & 1) != 0)
      v44 = 0;
    v45 = __OFADD__(v43, v44);
    v46 = v43 + v44;
    if (v45)
    {
      __break(1u);
      return;
    }
    v68 = v46;
    v47._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v47._object;
    String.append(_:)(v47);
    swift_bridgeObjectRelease(object);
    v49 = v70;
    URLQueryItem.init(name:value:)(0x756F4373676E6F73, 0xEA0000000000746ELL, v69, v70);
    swift_bridgeObjectRelease(v49);
    v69 = 0;
    v70 = 0xE000000000000000;
    v50 = v63;
    if (v77)
      v50 = 0;
    v68 = v50;
    v51._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v52 = v51._object;
    String.append(_:)(v51);
    swift_bridgeObjectRelease(v52);
    v53 = v70;
    URLQueryItem.init(name:value:)(0x6F43736D75626C61, 0xEB00000000746E75, v69, v70);
    v54 = swift_bridgeObjectRelease(v53);
    URLComponents.queryItems.setter(v62, v54);
  }
  v55 = v25(v9, 1, v3, v26);
  v56 = v67;
  if (v55)
  {
    v57 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 1, 1, v57);
  }
  else
  {
    v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    URLComponents.url.getter(v58);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011AD410);
}

uint64_t sub_100331EF8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  Class isa;
  uint64_t v14;

  v0 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100331860((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_10004FF60((uint64_t)v2, &qword_10119E460);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v9);
  v11 = v10;
  v12 = sub_100043474((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100048748((unint64_t *)&qword_10119D840, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EA7788);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "openURL:options:completionHandler:", v11, isa, 0, swift_bridgeObjectRelease(v12).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003320B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005D07CC(*a1, *a2);
}

Swift::Int sub_1003320BC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE600000000000000;
  v3 = 0x736D75626C61;
  if (v1 != 1)
  {
    v3 = 0x69762D636973756DLL;
    v2 = 0xEC000000736F6564;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x73676E6F73;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE500000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10033215C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x736D75626C61;
  if (*v1 != 1)
  {
    v3 = 0x69762D636973756DLL;
    v2 = 0xEC000000736F6564;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x73676E6F73;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE500000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1003321D8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE600000000000000;
  v4 = 0x736D75626C61;
  if (v2 != 1)
  {
    v4 = 0x69762D636973756DLL;
    v3 = 0xEC000000736F6564;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x73676E6F73;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE500000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100332274@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_1010ABAC0;
  result = sub_10033597C(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1003322A8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x736D75626C61;
  if (v2 != 1)
  {
    v5 = 0x69762D636973756DLL;
    v4 = 0xEC000000736F6564;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x73676E6F73;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100332308()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736D75626C61;
  if (*v0 != 1)
    v1 = 0x69762D636973756DLL;
  if (*v0)
    return v1;
  else
    return 0x73676E6F73;
}

unint64_t sub_100332364@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_1010ABAC0;
  result = sub_10033597C(a1, v3);
  *a2 = result;
  return result;
}

void sub_100332390(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10033239C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100336A30();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003323C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100336A30();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003323EC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011AD540);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100336A30();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MLI.Response.ItemsToReview.CodingKeys, &type metadata for MLI.Response.ItemsToReview.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = *((unsigned __int8 *)v3 + 8);
  v22 = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v22, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = *((unsigned __int8 *)v3 + 24);
    v21 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v14, v15, &v21, v5);
    v16 = v3[4];
    v17 = *((unsigned __int8 *)v3 + 40);
    v20 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v20, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_100332534@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_1003359C0(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_100332574(_QWORD *a1)
{
  return sub_1003323EC(a1);
}

BOOL sub_100332588(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a2 + 25);
  return sub_100334888((uint64_t)&v5, (uint64_t)&v7);
}

void sub_1003325D0(__int128 *a1)
{
  BOOL v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  sub_100335148(a1, &v2);
  if (v7 == 1)
  {
    if (v6)
      v1 = 0;
    else
      v1 = (v3 | (unint64_t)v2 | v4 | v5 | *((_QWORD *)&v2 + 1)) == 0;
    if (v1)
    {
      if (qword_10119BE90 != -1)
        swift_once(&qword_10119BE90, sub_100328EB0);
      sub_10032C610();
    }
    else
    {
      sub_10032CBE4();
    }
  }
}

uint64_t *sub_100332670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[2];
  _QWORD v20[2];

  v4 = (int *)_s12ClickMetricsVMa(0);
  v5 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_100065228(a1 + 176, (uint64_t)v19, &qword_1011AD468);
  sub_100065228((uint64_t)v19, (uint64_t)v20, &qword_1011AD468);
  v13 = v20[0];
  v12 = v20[1];
  v7[v4[8]] = 4;
  *v7 = 16;
  sub_100065228((uint64_t)v10, (uint64_t)&v7[v4[5]], &qword_10119E460);
  v14 = &v7[v4[6]];
  *v14 = 0x65736F6C43;
  v14[1] = 0xE500000000000000;
  v15 = &v7[v4[7]];
  if (v12 >= 2)
    v16 = v13;
  else
    v16 = 0;
  v17 = 9;
  if (v12 >= 2)
    v17 = v12;
  *v15 = v16;
  v15[1] = v17;
  sub_10005B6C0((uint64_t)v7, a2, _s12ClickMetricsVMa);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v5 + 56))(a2, 0, 1, v4);
  return sub_1003351A8(v19);
}

uint64_t *sub_100332814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int8x16_t v14;
  BOOL v15;
  int8x16_t v17;
  _BOOL4 v18;
  _BOOL4 v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE v34[48];
  _BYTE v35[48];
  _BYTE v36[48];
  __int128 v37[2];
  char v38;
  __int128 v39[3];
  __int128 v40[2];
  char v41;
  __int128 v42[3];
  uint64_t v43;
  int8x16_t v44;
  int8x16_t v45;
  char v46;
  char v47;
  __int128 v48[2];
  char v49;
  __int128 v50[3];
  uint64_t v51;
  int8x16_t v52;
  int8x16_t v53;
  char v54;
  char v55;
  uint64_t v56[2];
  _BYTE v57[48];
  _QWORD v58[3];

  v4 = (int *)_s12ClickMetricsVMa(0);
  v5 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  sub_100065228(a1 + 128, (uint64_t)v57, &qword_1011AD458);
  swift_bridgeObjectRetain();
  sub_100334C00(v11, v12, (uint64_t)v57, (uint64_t)v34);
  sub_100065228((uint64_t)v34, (uint64_t)v48, &qword_1011AD460);
  if ((v49 & 1) != 0)
    return (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, 1, 1, v4);
  sub_100335148(v48, v50);
  sub_100335148(v50, &v51);
  v13 = 23;
  if (v55 == 1)
  {
    v14 = vorrq_s8(v52, v53);
    if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)) | v51)
      v15 = 0;
    else
      v15 = v54 == 0;
    if (v15)
      v13 = 23;
    else
      v13 = 16;
  }
  swift_bridgeObjectRetain();
  sub_100334C00(v11, v12, (uint64_t)v57, (uint64_t)v35);
  sub_100065228((uint64_t)v35, (uint64_t)v40, &qword_1011AD460);
  if ((v41 & 1) != 0)
    return (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, 1, 1, v4);
  sub_100335148(v40, v42);
  sub_100335148(v42, &v43);
  if (v47 == 1)
  {
    v17 = vorrq_s8(v44, v45);
    v18 = (*(_QWORD *)&vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)) | v43) == 0;
    v19 = v46 == 0;
    v20 = !v19 || !v18;
    if (v19 && v18)
      v21 = 0x7972746552;
    else
      v21 = 19279;
    v22 = 0xE200000000000000;
    if (!v20)
      v22 = 0xE500000000000000;
    v32 = v22;
    v33 = v21;
  }
  else
  {
    v32 = 0xE900000000000077;
    v33 = 0x6F4E776569766552;
  }
  swift_bridgeObjectRetain();
  sub_100334C00(v11, v12, (uint64_t)v57, (uint64_t)v36);
  sub_100065228((uint64_t)v36, (uint64_t)v37, &qword_1011AD460);
  if ((v38 & 1) != 0)
  {
    v23 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  }
  else
  {
    sub_100335148(v37, v39);
    sub_100331860((uint64_t)v10);
  }
  sub_100065228(a1 + 176, (uint64_t)v56, &qword_1011AD468);
  sub_100065228((uint64_t)v56, (uint64_t)v58, &qword_1011AD468);
  v25 = v58[0];
  v24 = v58[1];
  v7[v4[8]] = 4;
  *v7 = v13;
  sub_100065228((uint64_t)v10, (uint64_t)&v7[v4[5]], &qword_10119E460);
  v26 = (uint64_t *)&v7[v4[6]];
  v27 = v32;
  *v26 = v33;
  v26[1] = v27;
  v28 = &v7[v4[7]];
  if (v24 >= 2)
    v29 = v25;
  else
    v29 = 0;
  v30 = 9;
  if (v24 >= 2)
    v30 = v24;
  *(_QWORD *)v28 = v29;
  *((_QWORD *)v28 + 1) = v30;
  sub_10005B6C0((uint64_t)v7, a2, _s12ClickMetricsVMa);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v5 + 56))(a2, 0, 1, v4);
  return sub_1003351A8(v56);
}

uint64_t sub_100332BAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100332BE0 + 4 * byte_100EB4E70[a1]))(0x73736572676F7270, 0xE800000000000000);
}

unint64_t sub_100332BE0()
{
  return 0xD000000000000014;
}

uint64_t sub_100332BFC()
{
  return 0x656C746974;
}

uint64_t sub_100332C10()
{
  return 0x656C746974627573;
}

uint64_t sub_100332C24()
{
  return 0x74536E6F69746361;
}

uint64_t sub_100332C44()
{
  return 0x6E6F69746361;
}

uint64_t sub_100332C58()
{
  return 0x547373696D736964;
}

uint64_t sub_100332C78()
{
  return 0x537373696D736964;
}

uint64_t sub_100332C9C()
{
  return 0x526F54736D657469;
}

uint64_t sub_100332CC0()
{
  return 0x7363697274656DLL;
}

uint64_t sub_100332CD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _BYTE v30[47];
  char v31;
  _BYTE v32[16];
  _BYTE v33[48];
  _BYTE v34[16];

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011AD5B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100337354();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MLI.Response.Results.CodingKeys, &type metadata for MLI.Response.Results.CodingKeys, v11, v9, v10);
  sub_100065228(v3, (uint64_t)v34, &qword_1011AD450);
  sub_100065228((uint64_t)v34, (uint64_t)v30, &qword_1011AD450);
  v31 = 0;
  v12 = sub_100228EE8();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v30, &v31, v5, &type metadata for CGFloat, v12);
  if (!v2)
  {
    v13 = *(_QWORD *)(v3 + 16);
    v14 = *(unsigned __int8 *)(v3 + 24);
    v30[0] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v13, v14, v30, v5);
    v15 = *(_QWORD *)(v3 + 32);
    v16 = *(_QWORD *)(v3 + 40);
    v30[0] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, v16, v30, v5);
    v17 = *(_QWORD *)(v3 + 48);
    v18 = *(_QWORD *)(v3 + 56);
    v30[0] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17, v18, v30, v5);
    v19 = *(_QWORD *)(v3 + 64);
    v20 = *(_QWORD *)(v3 + 72);
    v30[0] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, v30, v5);
    v21 = *(_QWORD *)(v3 + 80);
    v22 = *(_QWORD *)(v3 + 88);
    v30[0] = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, v30, v5);
    v23 = *(_QWORD *)(v3 + 96);
    v24 = *(_QWORD *)(v3 + 104);
    v30[0] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v23, v24, v30, v5);
    v25 = *(_QWORD *)(v3 + 112);
    v26 = *(_QWORD *)(v3 + 120);
    v30[0] = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v25, v26, v30, v5);
    sub_100065228(v3 + 128, (uint64_t)v33, &qword_1011AD458);
    sub_100065228((uint64_t)v33, (uint64_t)v30, &qword_1011AD458);
    v31 = 8;
    v27 = sub_1003374AC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v30, &v31, v5, &type metadata for MLI.Response.ItemsToReview, v27);
    sub_100065228(v3 + 176, (uint64_t)v32, &qword_1011AD468);
    sub_100065228((uint64_t)v32, (uint64_t)v30, &qword_1011AD468);
    v31 = 9;
    v28 = sub_1003374F0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v30, &v31, v5, &type metadata for MLI.Response.Metrics, v28);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100332FD8(_QWORD *a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD v21[12];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011AD520);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_100007E68(a1, v8);
  v10 = sub_100336920();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MLI.Response.CodingKeys, &type metadata for MLI.Response.CodingKeys, v10, v8, v9);
  v11 = v2[9];
  v21[8] = v2[8];
  v21[9] = v11;
  v12 = v2[11];
  v21[10] = v2[10];
  v21[11] = v12;
  v13 = v2[5];
  v21[4] = v2[4];
  v21[5] = v13;
  v14 = v2[7];
  v21[6] = v2[6];
  v21[7] = v14;
  v15 = v2[1];
  v21[0] = *v2;
  v16 = v2[2];
  v17 = v2[3];
  v21[1] = v15;
  v21[2] = v16;
  v21[3] = v17;
  v18 = sub_1003369EC();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v21, v19, v4, &type metadata for MLI.Response.Results, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10033310C()
{
  unsigned __int8 *v0;

  return sub_100332BAC(*v0);
}

uint64_t sub_100333114@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100335B70(a1, a2);
  *a3 = result;
  return result;
}

void sub_100333138(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_100333144(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100337354();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10033316C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100337354();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100333194@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  sub_100335FE0(a1, v11);
  if (!v2)
  {
    v5 = v19;
    a2[8] = v18;
    a2[9] = v5;
    v6 = v21;
    a2[10] = v20;
    a2[11] = v6;
    v7 = v15;
    a2[4] = v14;
    a2[5] = v7;
    v8 = v17;
    a2[6] = v16;
    a2[7] = v8;
    v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
    result = *(double *)&v12;
    v10 = v13;
    a2[2] = v12;
    a2[3] = v10;
  }
  return result;
}

uint64_t sub_1003331F4(_QWORD *a1)
{
  return sub_100332CD8(a1);
}

BOOL sub_10033324C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[12];

  v2 = a1[9];
  v15[8] = a1[8];
  v15[9] = v2;
  v3 = a1[11];
  v15[10] = a1[10];
  v15[11] = v3;
  v4 = a1[5];
  v15[4] = a1[4];
  v15[5] = v4;
  v5 = a1[7];
  v15[6] = a1[6];
  v15[7] = v5;
  v6 = a1[1];
  v15[0] = *a1;
  v15[1] = v6;
  v7 = a1[3];
  v15[2] = a1[2];
  v15[3] = v7;
  v8 = a2[9];
  v16[8] = a2[8];
  v16[9] = v8;
  v9 = a2[11];
  v16[10] = a2[10];
  v16[11] = v9;
  v10 = a2[5];
  v16[4] = a2[4];
  v16[5] = v10;
  v11 = a2[7];
  v16[6] = a2[6];
  v16[7] = v11;
  v12 = a2[1];
  v16[0] = *a2;
  v16[1] = v12;
  v13 = a2[3];
  v16[2] = a2[2];
  v16[3] = v13;
  return sub_10033490C((uint64_t)v15, (uint64_t)v16);
}

uint64_t sub_1003332E4()
{
  return 0x6E6F73616572;
}

uint64_t sub_1003332F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease(0xE600000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F73616572, 0xE600000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

void sub_100333384(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100333390(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003369A8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003333B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003369A8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003333E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_100007E8C(&qword_1011AD508);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_1003369A8();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MLI.Response.Metrics.CodingKeys, &type metadata for MLI.Response.Metrics.CodingKeys, v11, v9, v10);
  if (v2)
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v12, v5);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_100333504(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_100007E8C(&qword_1011AD518);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_1003369A8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MLI.Response.Metrics.CodingKeys, &type metadata for MLI.Response.Metrics.CodingKeys, v11, v9, v10);
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v7, v8, v12, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003335F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1;
      v6 = v5 == *a2 && v3 == v4;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, *a2, v4, 0) & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_100333648()
{
  return 0x73746C75736572;
}

uint64_t sub_100333660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease(0xE700000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73746C75736572, 0xE700000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1003336F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100336920();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10033371C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100336920();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100333744@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  sub_1003367B8(a1, v11);
  if (!v2)
  {
    v5 = v19;
    a2[8] = v18;
    a2[9] = v5;
    v6 = v21;
    a2[10] = v20;
    a2[11] = v6;
    v7 = v15;
    a2[4] = v14;
    a2[5] = v7;
    v8 = v17;
    a2[6] = v16;
    a2[7] = v8;
    v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
    result = *(double *)&v12;
    v10 = v13;
    a2[2] = v12;
    a2[3] = v10;
  }
  return result;
}

uint64_t sub_1003337A4(_QWORD *a1)
{
  return sub_100332FD8(a1);
}

void sub_1003337B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  Class isa;
  NSString v8;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119BE90 != -1)
    swift_once(&qword_10119BE90, sub_100328EB0);
  v3 = qword_10124CDA8;
  v4 = OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner;
  v5 = *(_BYTE *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner);
  *(_BYTE *)(qword_10124CDA8 + OBJC_IVAR____TtCO5Music3MLI8Observer_didDismissBanner) = 1;
  if ((v5 & 1) == 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setValue:forKey:", isa, v8);

    if ((*(_BYTE *)(v3 + v4) & 1) != 0)
    {
      v9 = _s9ViewModelOMa(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
      sub_10032DC54((uint64_t)v2);
      sub_10004FF60((uint64_t)v2, (uint64_t *)&unk_1011BC820);
    }
  }
}

uint64_t sub_100333924()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v7[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0x676E6964616F4CLL, 0xE700000000000000);
  static Locale.current.getter(v4);
  result = String.init(localized:table:bundle:locale:comment:)(v3, 0x617A696C61636F4CLL, 0xEF696C6D2D656C62, 0, v1, 0, 0, 256);
  qword_1011ACE70 = result;
  *(_QWORD *)algn_1011ACE78 = v6;
  return result;
}

uint64_t sub_100333A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v0 = _s9ViewModelOMa(0);
  sub_10004FACC(v0, qword_1011ACE80);
  v1 = sub_100048B14(v0, (uint64_t)qword_1011ACE80);
  if (qword_10119BE98 != -1)
    swift_once(&qword_10119BE98, sub_100333924);
  v3 = qword_1011ACE70;
  v2 = *(_QWORD *)algn_1011ACE78;
  v4 = _s16ActionButtonViewV5ModelVMa(0);
  v5 = v1 + *(int *)(v4 + 48);
  v6 = _s12ClickMetricsVMa(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(v1 + *(int *)(v4 + 52), 1, 1, v6);
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v2;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_BYTE *)(v1 + 144) = 0;
  swift_storeEnumTagMultiPayload(v1, v0, 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100333B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = _s9ViewModelOMa(0);
  sub_10004FACC(v0, qword_1011ACE98);
  v1 = sub_100048B14(v0, (uint64_t)qword_1011ACE98);
  if (qword_10119BE98 != -1)
    swift_once(&qword_10119BE98, sub_100333924);
  v2 = *(_QWORD *)algn_1011ACE78;
  *(_QWORD *)v1 = qword_1011ACE70;
  *(_QWORD *)(v1 + 8) = v2;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_BYTE *)(v1 + 48) = 1;
  swift_storeEnumTagMultiPayload(v1, v0, 0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100333BD8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = _s9ViewModelOMa(0);
  sub_10004FACC(v6, qword_1011ACEB0);
  v7 = sub_100048B14(v6, (uint64_t)qword_1011ACEB0);
  v8 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000010, 0x8000000100E36740);
  static Locale.current.getter(v8);
  v9 = String.init(localized:table:bundle:locale:comment:)(v5, 0x617A696C61636F4CLL, 0xEF696C6D2D656C62, 0, v2, 0, 0, 256);
  v11 = v10;
  v12 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100E36760);
  static Locale.current.getter(v12);
  v13 = String.init(localized:table:bundle:locale:comment:)(v5, 0x617A696C61636F4CLL, 0xEF696C6D2D656C62, 0, v2, 0, 0, 256);
  *(_QWORD *)v7 = v9;
  *(_QWORD *)(v7 + 8) = v11;
  *(_QWORD *)(v7 + 16) = v13;
  *(_QWORD *)(v7 + 24) = v14;
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = 0;
  *(_BYTE *)(v7 + 48) = 1;
  return swift_storeEnumTagMultiPayload(v7, v6, 0);
}

uint64_t sub_100333D90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "valueForKey:", v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)(v16, v8);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_100065228((uint64_t)v16, (uint64_t)v17, &qword_10119DCC0);
  if (!v18)
  {
    result = sub_10004FF60((uint64_t)v17, &qword_10119DCC0);
    goto LABEL_8;
  }
  result = swift_dynamicCast(&v15, v17, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
  {
LABEL_8:
    v13 = 0xE300000000000000;
    v11 = 7104878;
    goto LABEL_9;
  }
  v10 = Date.init(timeIntervalSinceReferenceDate:)(v15);
  v11 = Date.description.getter(v10);
  v13 = v12;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_9:
  a1[3] = (uint64_t)&type metadata for String;
  *a1 = v11;
  a1[1] = v13;
  return result;
}

uint64_t sub_100333F30@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = _s16ActionButtonViewV5ModelVMa(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100EB4FD8);
  v11 = swift_getKeyPath(&unk_100EB5000);
  static Published.subscript.getter(v9, a1, KeyPath, v11);
  swift_release();
  swift_release();
  v12 = _s9ViewModelOMa(0);
  result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12);
  if ((_DWORD)result == 1)
  {
    a2[3] = (unint64_t)&type metadata for String;
    *a2 = 7104878;
    a2[1] = 0xE300000000000000;
  }
  else if (swift_getEnumCaseMultiPayload(v9, v12) == 1)
  {
    sub_10005B6C0((uint64_t)v9, (uint64_t)v6, _s16ActionButtonViewV5ModelVMa);
    v14 = sub_100007E8C((uint64_t *)&unk_1011AD3E0);
    inited = swift_initStackObject(v14, &v41);
    v16 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EB02A0;
    *(_QWORD *)(inited + 32) = 1701869940;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    strcpy((char *)(inited + 48), "actionButton");
    *(_BYTE *)(inited + 61) = 0;
    *(_WORD *)(inited + 62) = -5120;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 80) = 0x656C746974;
    v17 = *v6;
    v18 = v6[1];
    if (!v18)
      v17 = 7104878;
    v19 = 0xE300000000000000;
    if (v18)
      v20 = v6[1];
    else
      v20 = 0xE300000000000000;
    *(_QWORD *)(inited + 88) = 0xE500000000000000;
    *(_QWORD *)(inited + 96) = v17;
    *(_QWORD *)(inited + 104) = v20;
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 128) = 0x656C746974627573;
    v21 = v6[2];
    if (v6[3])
    {
      v22 = v6[3];
    }
    else
    {
      v21 = 7104878;
      v22 = 0xE300000000000000;
    }
    *(_QWORD *)(inited + 136) = 0xE800000000000000;
    *(_QWORD *)(inited + 144) = v21;
    *(_QWORD *)(inited + 152) = v22;
    *(_QWORD *)(inited + 168) = &type metadata for String;
    *(_QWORD *)(inited + 176) = 0x614C6E6F69746361;
    v23 = v6[4];
    if (v6[5])
    {
      v24 = v6[5];
    }
    else
    {
      v23 = 7104878;
      v24 = 0xE300000000000000;
    }
    *(_QWORD *)(inited + 184) = 0xEB000000006C6562;
    *(_QWORD *)(inited + 192) = v23;
    *(_QWORD *)(inited + 200) = v24;
    *(_QWORD *)(inited + 216) = &type metadata for String;
    *(_QWORD *)(inited + 224) = 0x6E6F69746361;
    v25 = v6[6];
    if (v6[7])
      v19 = v6[7];
    else
      v25 = 7104878;
    *(_QWORD *)(inited + 232) = 0xE600000000000000;
    *(_QWORD *)(inited + 240) = v25;
    *(_QWORD *)(inited + 248) = v19;
    *(_QWORD *)(inited + 264) = &type metadata for String;
    *(_QWORD *)(inited + 272) = 0xD000000000000011;
    *(_QWORD *)(inited + 280) = 0x8000000100E36700;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100334330(v6, (unint64_t *)(v16 + 288));
    v26 = sub_100041ADC(v16);
    a2[3] = sub_100007E8C((uint64_t *)&unk_1011A3090);
    *a2 = v26;
    return sub_10005B748((uint64_t)v6, _s16ActionButtonViewV5ModelVMa);
  }
  else
  {
    v27 = *v9;
    v28 = v9[1];
    v30 = v9[2];
    v29 = v9[3];
    v31 = v9[4];
    v32 = sub_100007E8C((uint64_t *)&unk_1011AD3E0);
    v33 = swift_initStackObject(v32, &v40);
    *(_OWORD *)(v33 + 16) = xmmword_100EA7BA0;
    *(_QWORD *)(v33 + 32) = 1701869940;
    *(_QWORD *)(v33 + 40) = 0xE400000000000000;
    *(_QWORD *)(v33 + 48) = 0x6572676F72506E69;
    *(_QWORD *)(v33 + 56) = 0xEA00000000007373;
    *(_QWORD *)(v33 + 72) = &type metadata for String;
    *(_QWORD *)(v33 + 80) = 0x656C746974;
    if (v28)
      v34 = v27;
    else
      v34 = 7104878;
    v35 = 0xE300000000000000;
    if (v28)
      v36 = v28;
    else
      v36 = 0xE300000000000000;
    *(_QWORD *)(v33 + 88) = 0xE500000000000000;
    *(_QWORD *)(v33 + 96) = v34;
    *(_QWORD *)(v33 + 104) = v36;
    *(_QWORD *)(v33 + 120) = &type metadata for String;
    *(_QWORD *)(v33 + 128) = 0x656C746974627573;
    if (v29)
      v37 = v30;
    else
      v37 = 7104878;
    if (v29)
      v35 = v29;
    *(_QWORD *)(v33 + 136) = 0xE800000000000000;
    *(_QWORD *)(v33 + 144) = v37;
    *(_QWORD *)(v33 + 152) = v35;
    *(_QWORD *)(v33 + 168) = &type metadata for String;
    *(_QWORD *)(v33 + 176) = 0x73736572676F7270;
    *(_QWORD *)(v33 + 184) = 0xE800000000000000;
    *(_QWORD *)(v33 + 216) = &type metadata for CGFloat;
    *(_QWORD *)(v33 + 192) = v31;
    v38 = sub_100041ADC(v33);
    result = sub_100007E8C((uint64_t *)&unk_1011A3090);
    a2[3] = result;
    *a2 = v38;
  }
  return result;
}

void sub_100334330(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v3 = a1[16];
  if (v3)
  {
    v4 = a1[17];
    v6 = a1[14];
    v5 = a1[15];
    v8 = a1[12];
    v7 = a1[13];
    v9 = sub_100007E8C(&qword_1011AD3F0);
    inited = swift_initStackObject(v9, &v17);
    v11 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = 0x656C746974;
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    if (v7)
      v12 = v8;
    else
      v12 = 7104878;
    v13 = 0xE300000000000000;
    if (v7)
      v14 = v7;
    else
      v14 = 0xE300000000000000;
    *(_QWORD *)(inited + 48) = v12;
    *(_QWORD *)(inited + 56) = v14;
    *(_QWORD *)(inited + 64) = 0x656C746974627573;
    *(_QWORD *)(inited + 72) = 0xE800000000000000;
    if (v5)
      v15 = v6;
    else
      v15 = 7104878;
    if (v5)
      v13 = v5;
    *(_QWORD *)(inited + 80) = v15;
    *(_QWORD *)(inited + 88) = v13;
    sub_100334744(v8, v7, v6, v5, v3, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_100041F44(v11);
    a2[3] = sub_100007E8C(&qword_1011AD3F8);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v7);
    *a2 = v16;
    swift_release();
  }
  else
  {
    a2[3] = (unint64_t)&type metadata for String;
    *a2 = 7104878;
    a2[1] = 0xE300000000000000;
  }
}

uint64_t sub_100334480()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124CDB0);
  sub_100048B14(v0, (uint64_t)qword_10124CDB0);
  return static Logger.music(_:)(6909037, 0xE300000000000000);
}

void sub_1003344D4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;

  if (qword_10119BEB8 != -1)
    swift_once(&qword_10119BEB8, sub_100334480);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100048B14(v0, (uint64_t)qword_10124CDB0);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Active user changed, reset user defaults", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (qword_10119BE80 != -1)
    swift_once(&qword_10119BE80, sub_100328E50);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "removeObjectForKey:", v6);

}

double sub_100334624(uint64_t a1)
{
  uint64_t v1;

  return sub_100329E20(a1, v1);
}

uint64_t sub_10033462C(char a1, uint64_t (*a2)(uint64_t, __n128), uint64_t a3)
{
  uint64_t v3;

  return sub_100329E78(a1, a2, a3, v3);
}

uint64_t sub_100334634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100334644(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10033464C()
{
  return sub_100335524(48);
}

uint64_t sub_100334654(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011AD3B4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10032A400(a1, v4, v5, v6);
}

uint64_t sub_1003346CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s9ViewModelOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100334710()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100334734(uint64_t a1)
{
  uint64_t v1;

  return sub_10032A398(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100334744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRetain(a4);
    swift_retain(a6);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

uint64_t sub_100334780()
{
  return sub_100335524(48);
}

uint64_t sub_100334788(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011AD404);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10032989C(a1, v4, v5, v6);
}

double sub_100334800(uint64_t a1)
{
  uint64_t v1;

  return sub_100330E30(a1, v1);
}

unint64_t sub_100334808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2420;
  if (!qword_1011A2420)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011AD420);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011A2420);
  }
  return result;
}

uint64_t sub_100334854(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for String - 1) + 8))();
  return a1;
}

BOOL sub_100334888(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  v4 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v4 = 1;
    return (v4 & 1) == 0;
  }
  return (*(_BYTE *)(a2 + 40) & 1) != 0;
}

BOOL sub_10033490C(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  if (!v6)
  {
    if (v7)
      return 0;
    goto LABEL_20;
  }
  if (!v7)
    return 0;
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  if (v8 == v9 && v6 == v7
    || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v6, v9, v7, 0), result = 0, (v10 & 1) != 0))
  {
LABEL_20:
    v12 = *(_QWORD *)(a1 + 56);
    v13 = *(_QWORD *)(a2 + 56);
    if (v12)
    {
      if (!v13)
        return 0;
      v14 = *(_QWORD *)(a1 + 48);
      v15 = *(_QWORD *)(a2 + 48);
      if (v14 != v15 || v12 != v13)
      {
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v12, v15, v13, 0);
        result = 0;
        if ((v16 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    v17 = *(_QWORD *)(a1 + 72);
    v18 = *(_QWORD *)(a2 + 72);
    if (v17)
    {
      if (!v18)
        return 0;
      v19 = *(_QWORD *)(a1 + 64);
      v20 = *(_QWORD *)(a2 + 64);
      if (v19 != v20 || v17 != v18)
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v17, v20, v18, 0);
        result = 0;
        if ((v21 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    v22 = *(_QWORD *)(a1 + 88);
    v23 = *(_QWORD *)(a2 + 88);
    if (v22)
    {
      if (!v23)
        return 0;
      v24 = *(_QWORD *)(a1 + 80);
      v25 = *(_QWORD *)(a2 + 80);
      if (v24 != v25 || v22 != v23)
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v22, v25, v23, 0);
        result = 0;
        if ((v26 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    v27 = *(_QWORD *)(a1 + 104);
    v28 = *(_QWORD *)(a2 + 104);
    if (v27)
    {
      if (!v28)
        return 0;
      v29 = *(_QWORD *)(a1 + 96);
      v30 = *(_QWORD *)(a2 + 96);
      if (v29 != v30 || v27 != v28)
      {
        v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v27, v30, v28, 0);
        result = 0;
        if ((v31 & 1) == 0)
          return result;
      }
    }
    else if (v28)
    {
      return 0;
    }
    v32 = *(_QWORD *)(a1 + 120);
    v33 = *(_QWORD *)(a2 + 120);
    if (v32)
    {
      if (!v33)
        return 0;
      v34 = *(_QWORD *)(a1 + 112);
      v35 = *(_QWORD *)(a2 + 112);
      if (v34 != v35 || v32 != v33)
      {
        v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v32, v35, v33, 0);
        result = 0;
        if ((v36 & 1) == 0)
          return result;
      }
    }
    else if (v33)
    {
      return 0;
    }
    if ((*(_BYTE *)(a1 + 169) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 169))
        return 0;
    }
    else
    {
      if ((*(_BYTE *)(a2 + 169) & 1) != 0)
        return 0;
      v39 = *(_QWORD *)(a2 + 136);
      v40 = *(_QWORD *)(a2 + 152);
      if ((*(_QWORD *)(a1 + 136) & 1) != 0)
      {
        if ((v39 & 1) == 0)
          return 0;
      }
      else
      {
        result = 0;
        if ((v39 & 1) != 0 || *(_QWORD *)(a1 + 128) != *(_QWORD *)(a2 + 128))
          return result;
      }
      if ((*(_QWORD *)(a1 + 152) & 1) != 0)
      {
        if ((v40 & 1) == 0)
          return 0;
      }
      else
      {
        result = 0;
        if ((v40 & 1) != 0 || *(_QWORD *)(a1 + 144) != *(_QWORD *)(a2 + 144))
          return result;
      }
      if ((*(_BYTE *)(a1 + 168) & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 168) & 1) == 0)
          return 0;
      }
      else
      {
        result = 0;
        if ((*(_BYTE *)(a2 + 168) & 1) != 0 || *(_QWORD *)(a1 + 160) != *(_QWORD *)(a2 + 160))
          return result;
      }
    }
    v37 = *(_QWORD *)(a1 + 184);
    v38 = *(_QWORD *)(a2 + 184);
    if (v37 == 1)
    {
      if (v38 == 1)
        return 1;
    }
    else if (v38 != 1)
    {
      if (v37)
      {
        if (!v38)
          return 0;
        v41 = *(_QWORD *)(a1 + 176);
        v42 = *(_QWORD *)(a2 + 176);
        return v41 == v42 && v37 == v38
            || (_stringCompareWithSmolCheck(_:_:expecting:)(v41, v37, v42, v38, 0) & 1) != 0;
      }
      if (!v38)
        return 1;
    }
    return 0;
  }
  return result;
}

void sub_100334C00(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int16 v26;
  id v27;
  NSNumber v28;
  NSString v29;
  __int16 v30;
  __int16 v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  _BYTE v37[12];
  int v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  _BYTE v48[48];
  _QWORD v49[5];
  char v50;
  char v51;

  sub_100065228(a3, (uint64_t)&v42, &qword_1011AD458);
  v8 = v42;
  v9 = v43;
  v10 = v45;
  v39 = v44;
  v11 = v46;
  v38 = v47;
  v12 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v12);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v37[-v16];
  if (!a2)
    goto LABEL_30;
  if ((a1 != 0x7472617473 || a2 != 0xE500000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x7472617473, 0xE500000000000000, a1, a2, 0) & 1) == 0)
  {
    if (a1 == 0x776569766572 && a2 == 0xE600000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x776569766572, 0xE600000000000000, a1, a2, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      sub_100065228(a3, (uint64_t)v48, &qword_1011AD458);
      if ((v48[41] & 1) != 0)
      {
        v8 = 0;
        v23 = 0;
        v11 = 0;
        v22 = 1;
        v24 = 1;
        v32 = 1;
      }
      else
      {
        v22 = v9 & 1;
        v24 = v10 & 1;
        v32 = v38 & 1;
        v23 = v39;
      }
      v49[0] = v8;
      v49[1] = v22;
      v49[2] = v23;
      v49[3] = v24;
      v49[4] = v11;
      LODWORD(v39) = v32;
      v50 = v32;
      v51 = 0;
      if (qword_10119BE90 != -1)
        swift_once(&qword_10119BE90, sub_100328EB0);
      v33 = qword_10124CDA8;
      sub_100331860((uint64_t)v17);
      v34 = v33 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL;
      swift_beginAccess(v33 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL, v41, 0, 0);
      sub_10004A160(v34, (uint64_t)v14, &qword_10119E460);
      swift_beginAccess(v34, v40, 33, 0);
      sub_10015E72C((uint64_t)v17, v34);
      swift_endAccess(v40);
      sub_10032D558((uint64_t)v14);
      sub_10004FF60((uint64_t)v17, &qword_10119E460);
      sub_10004FF60((uint64_t)v14, &qword_10119E460);
      v31 = 0;
      v30 = v39;
      goto LABEL_23;
    }
    if (a1 == 0x65736F6C63 && a2 == 0xE500000000000000)
    {
      v18 = 0;
      goto LABEL_6;
    }
    v36 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65736F6C63, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v18 = 0;
    if ((v36 & 1) != 0)
      goto LABEL_7;
LABEL_30:
    v8 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v11 = 0;
    v26 = 0;
    v25 = 1;
    goto LABEL_31;
  }
  v18 = 1;
LABEL_6:
  swift_bridgeObjectRelease(a2);
LABEL_7:
  if (qword_10119BE90 != -1)
    swift_once(&qword_10119BE90, sub_100328EB0);
  v19 = qword_10124CDA8;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
  v21 = v19 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL;
  swift_beginAccess(v19 + OBJC_IVAR____TtCO5Music3MLI8Observer_mliReviewURL, v49, 0, 0);
  sub_10004A160(v21, (uint64_t)v14, &qword_10119E460);
  swift_beginAccess(v21, v48, 33, 0);
  sub_10015E72C((uint64_t)v17, v21);
  swift_endAccess(v48);
  sub_10032D558((uint64_t)v14);
  sub_10004FF60((uint64_t)v17, &qword_10119E460);
  sub_10004FF60((uint64_t)v14, &qword_10119E460);
  if ((v18 & 1) != 0)
  {
    v8 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v11 = 0;
    v25 = 0;
    v26 = 256;
    goto LABEL_31;
  }
  v27 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v28.super.super.isa = Bool._bridgeToObjectiveC()().super.super.isa;
  if (qword_10119BE88 != -1)
    swift_once(&qword_10119BE88, sub_100328E68);
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setValue:forKey:", v28.super.super.isa, v29);

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v11 = 0;
  v30 = 0;
  v31 = 256;
  v8 = 1;
LABEL_23:
  if (qword_10119BA08 != -1)
    swift_once(&qword_10119BA08, sub_1001674DC);
  v35 = *(_BYTE *)(static UnifiedMessages.Coordinator.shared
                 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState);
  *(_BYTE *)(static UnifiedMessages.Coordinator.shared
           + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState) = 3;
  sub_1001676A8(v35);
  v25 = 0;
  v26 = v31 | v30;
LABEL_31:
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v22;
  *(_QWORD *)(a4 + 16) = v23;
  *(_QWORD *)(a4 + 24) = v24;
  *(_QWORD *)(a4 + 32) = v11;
  *(_WORD *)(a4 + 40) = v26;
  *(_BYTE *)(a4 + 42) = v25;
}

_OWORD *sub_100335148(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 26) = *(__int128 *)((char *)a1 + 26);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_100335160()
{
  uint64_t v0;

  return swift_deallocObject(v0, 58, 7);
}

void sub_100335170()
{
  uint64_t v0;

  sub_1003325D0((__int128 *)(v0 + 16));
}

uint64_t sub_100335178()
{
  uint64_t v0;

  return swift_deallocObject(v0, 58, 7);
}

void sub_100335188()
{
  sub_10032CBE4();
}

uint64_t *sub_1003351A8(uint64_t *a1)
{
  sub_1003351D4(*a1, a1[1]);
  return a1;
}

uint64_t sub_1003351D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1003351E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for MusicDataRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100335280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for MusicDataRequest(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011AD47C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_10032E294(a1, v6, v7, v8, v9);
}

uint64_t sub_100335334()
{
  return sub_100335524(40);
}

uint64_t sub_10033533C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011AD494);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10032F3A4(a1, v4, v5, v6);
}

unint64_t sub_1003353A8()
{
  unint64_t result;

  result = qword_1011AD4A0;
  if (!qword_1011AD4A0)
  {
    result = swift_getWitnessTable(&unk_100EB5210, &type metadata for MLI.Response);
    atomic_store(result, (unint64_t *)&qword_1011AD4A0);
  }
  return result;
}

_QWORD *sub_1003353EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[7];
  v3 = a1[9];
  v4 = a1[11];
  v5 = a1[13];
  v6 = a1[15];
  v7 = a1[22];
  v8 = a1[23];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  sub_10013B670(v7, v8);
  return a1;
}

uint64_t sub_100335478()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003354A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011AD4B4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10032F1BC(a1, v4, v5, v7, v6);
}

uint64_t sub_10033551C()
{
  return sub_100335524(40);
}

uint64_t sub_100335524(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10033555C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011AD4C4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10032D21C(a1, v4, v5, v6);
}

uint64_t sub_1003355C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for MusicDataRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10033563C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  type metadata accessor for MusicDataRequest(0);
  v3 = (_QWORD *)swift_task_alloc(dword_1011AD4D4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to MusicDataRequest.response()[1]);
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_10032CF04;
  return MusicDataRequest.response()(a1);
}

double sub_1003356D4(uint64_t a1)
{
  uint64_t v1;

  return sub_10032BE6C(a1, v1);
}

uint64_t getEnumTagSinglePayload for MLI.Response.Metrics(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLI.Response.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLI.Response.Metrics()
{
  return &type metadata for MLI.Response.Metrics;
}

__n128 initializeWithCopy for MLI.Action(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MLI.Action(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MLI.Action(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 26) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 42) = v3;
  return result;
}

uint64_t sub_100335800(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10033581C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    *(_BYTE *)(result + 41) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLI.Action()
{
  return &type metadata for MLI.Action;
}

__n128 initializeWithTake for MLI.Response.Results(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

ValueMetadata *type metadata accessor for MLI.Response()
{
  return &type metadata for MLI.Response;
}

uint64_t getEnumTagSinglePayload for MLI.Response.ItemsToReview(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MLI.Response.ItemsToReview(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MLI.Response.ItemsToReview()
{
  return &type metadata for MLI.Response.ItemsToReview;
}

ValueMetadata *type metadata accessor for MLI.Observer.MetricsData.ReferralStatus()
{
  return &type metadata for MLI.Observer.MetricsData.ReferralStatus;
}

unint64_t sub_100335938()
{
  unint64_t result;

  result = qword_1011AD4E8;
  if (!qword_1011AD4E8)
  {
    result = swift_getWitnessTable(&unk_100EB50D0, &type metadata for MLI.Observer.MetricsData.ReferralStatus);
    atomic_store(result, (unint64_t *)&qword_1011AD4E8);
  }
  return result;
}

unint64_t sub_10033597C(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 >= 3)
    return 3;
  else
    return v5;
}

uint64_t sub_1003359C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v5 = sub_100007E8C(&qword_1011AD530);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100336A30();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MLI.Response.ItemsToReview.CodingKeys, &type metadata for MLI.Response.ItemsToReview.CodingKeys, v11, v9, v10);
  if (v2)
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  v27 = 0;
  v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v27, v5);
  v14 = v13;
  v26 = 1;
  v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v26, v5);
  v24 = v16;
  v23 = v15;
  v25 = 2;
  v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v25, v5);
  v18 = v8;
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  *(_QWORD *)a2 = v12;
  *(_BYTE *)(a2 + 8) = v14 & 1;
  *(_QWORD *)(a2 + 16) = v23;
  *(_BYTE *)(a2 + 24) = v24 & 1;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v20 & 1;
  return result;
}

uint64_t sub_100335B70(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;

  if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73736572676F7270, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000014)
  {
    v7 = 0x8000000100E36850;
    if (a2 == 0x8000000100E36850)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100E36850, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x74536E6F69746361 && a2 == 0xEC000000676E6972)
  {
    v10 = 0xEC000000676E6972;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74536E6F69746361, 0xEC000000676E6972, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    v11 = 0xE600000000000000;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69746361, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0x547373696D736964 && a2 == 0xEC000000656C7469)
  {
    v12 = 0xEC000000656C7469;
LABEL_43:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x547373696D736964, 0xEC000000656C7469, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_43;
  }
  if (a1 == 0x537373696D736964 && a2 == 0xEF656C7469746275)
  {
    v13 = 0xEF656C7469746275;
LABEL_49:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x537373696D736964, 0xEF656C7469746275, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_49;
  }
  if (a1 == 0x526F54736D657469 && a2 == 0xED00007765697665)
  {
    v14 = 0xED00007765697665;
LABEL_55:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x526F54736D657469, 0xED00007765697665, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_55;
  }
  if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 9;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7363697274656DLL, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v15 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

void sub_100335FE0(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  int v111;
  __int16 v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  int v116;
  __int16 v117;
  char v118;
  char v119;
  char v120;
  char v121;

  v5 = sub_100007E8C(&qword_1011AD590);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v75 = a1;
  sub_100007E68(a1, v9);
  v11 = sub_100337354();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MLI.Response.Results.CodingKeys, &type metadata for MLI.Response.Results.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v75);
  }
  else
  {
    v12 = v6;
    v70 = a2;
    LOBYTE(v76) = 0;
    v13 = sub_100228EA4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v88, &type metadata for CGFloat, &v76, v5, &type metadata for CGFloat, v13);
    v14 = v88;
    v15 = v89;
    v119 = v89;
    LOBYTE(v88) = 1;
    v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v88, v5);
    v68 = v14;
    v69 = v12;
    v67 = v15;
    v118 = v17 & 1;
    LOBYTE(v88) = 2;
    LOBYTE(v15) = v17;
    v65 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v88, v5);
    v66 = v16;
    LOBYTE(v88) = 3;
    v19 = v18;
    swift_bridgeObjectRetain();
    v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v88, v5);
    v74 = v19;
    v64 = v20;
    LOBYTE(v88) = 4;
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v88, v5);
    v73 = v22;
    v63 = v23;
    LOBYTE(v88) = 5;
    v25 = v24;
    swift_bridgeObjectRetain();
    v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v88, v5);
    v72 = v25;
    v27 = v26;
    LOBYTE(v88) = 6;
    v29 = v28;
    swift_bridgeObjectRetain();
    v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v88, v5);
    v71 = v29;
    v61 = v30;
    v62 = v31;
    LOBYTE(v88) = 7;
    swift_bridgeObjectRetain();
    v60 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v88, v5);
    v69 = v27;
    v32 = v62;
    LOBYTE(v76) = 8;
    v34 = v33;
    v35 = sub_100337398();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v88, &type metadata for MLI.Response.ItemsToReview, &v76, v5, &type metadata for MLI.Response.ItemsToReview, v35);
    v58 = v89;
    v59 = v88;
    v56 = v91;
    v57 = v90;
    v55 = v92;
    v53 = BYTE1(v93);
    v54 = v93;
    v121 = BYTE1(v93);
    v120 = 9;
    v36 = sub_1003373DC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v115, &type metadata for MLI.Response.Metrics, &v120, v5, &type metadata for MLI.Response.Metrics, v36);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v5);
    v51 = *((_QWORD *)&v115 + 1);
    v52 = v115;
    *(_QWORD *)&v76 = v68;
    BYTE8(v76) = v67;
    *(_QWORD *)&v77 = v66;
    BYTE8(v77) = v15 & 1;
    v38 = v73;
    v37 = v74;
    *(_QWORD *)&v78 = v65;
    *((_QWORD *)&v78 + 1) = v74;
    *(_QWORD *)&v79 = v64;
    *((_QWORD *)&v79 + 1) = v73;
    v40 = v71;
    v39 = v72;
    *(_QWORD *)&v80 = v63;
    *((_QWORD *)&v80 + 1) = v72;
    *(_QWORD *)&v81 = v69;
    *((_QWORD *)&v81 + 1) = v71;
    *(_QWORD *)&v82 = v61;
    *((_QWORD *)&v82 + 1) = v32;
    v41 = v32;
    v42 = v60;
    *(_QWORD *)&v83 = v60;
    *((_QWORD *)&v83 + 1) = v34;
    *(_QWORD *)&v84 = v59;
    *((_QWORD *)&v84 + 1) = v58;
    *(_QWORD *)&v85 = v57;
    *((_QWORD *)&v85 + 1) = v56;
    *(_QWORD *)&v86 = v55;
    BYTE8(v86) = v54;
    BYTE9(v86) = v53;
    v87 = v115;
    sub_100337420((uint64_t)&v76);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v34);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v75);
    v88 = v68;
    LOBYTE(v89) = v119;
    v90 = v66;
    LOBYTE(v91) = v118;
    v92 = v65;
    v93 = v37;
    v94 = v64;
    v95 = v38;
    v96 = v63;
    v97 = v39;
    v98 = v69;
    v99 = v40;
    v100 = v61;
    v101 = v41;
    v102 = v42;
    v103 = v34;
    v104 = v59;
    v105 = v58;
    v106 = v57;
    v107 = v56;
    v108 = v55;
    v109 = v54;
    v110 = v121;
    v111 = v116;
    v112 = v117;
    v113 = v52;
    v114 = v51;
    sub_1003353EC(&v88);
    v43 = v85;
    v44 = v70;
    v70[8] = v84;
    v44[9] = v43;
    v45 = v87;
    v44[10] = v86;
    v44[11] = v45;
    v46 = v81;
    v44[4] = v80;
    v44[5] = v46;
    v47 = v83;
    v44[6] = v82;
    v44[7] = v47;
    v48 = v77;
    *v44 = v76;
    v44[1] = v48;
    v49 = v79;
    v44[2] = v78;
    v44[3] = v49;
  }
}

uint64_t sub_1003367B8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21;
  _OWORD v22[12];

  v5 = sub_100007E8C(&qword_1011AD4F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100336920();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MLI.Response.CodingKeys, &type metadata for MLI.Response.CodingKeys, v11, v9, v10);
  if (!v2)
  {
    v12 = sub_100336964();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v22, &type metadata for MLI.Response.Results, v13, v5, &type metadata for MLI.Response.Results, v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v22[9];
    a2[8] = v22[8];
    a2[9] = v14;
    v15 = v22[11];
    a2[10] = v22[10];
    a2[11] = v15;
    v16 = v22[5];
    a2[4] = v22[4];
    a2[5] = v16;
    v17 = v22[7];
    a2[6] = v22[6];
    a2[7] = v17;
    v18 = v22[1];
    *a2 = v22[0];
    a2[1] = v18;
    v19 = v22[3];
    a2[2] = v22[2];
    a2[3] = v19;
  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
}

unint64_t sub_100336920()
{
  unint64_t result;

  result = qword_1011AD4F8;
  if (!qword_1011AD4F8)
  {
    result = swift_getWitnessTable(&unk_100EB55C4, &type metadata for MLI.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD4F8);
  }
  return result;
}

unint64_t sub_100336964()
{
  unint64_t result;

  result = qword_1011AD500;
  if (!qword_1011AD500)
  {
    result = swift_getWitnessTable(&unk_100EB559C, &type metadata for MLI.Response.Results);
    atomic_store(result, (unint64_t *)&qword_1011AD500);
  }
  return result;
}

unint64_t sub_1003369A8()
{
  unint64_t result;

  result = qword_1011AD510;
  if (!qword_1011AD510)
  {
    result = swift_getWitnessTable(&unk_100EB554C, &type metadata for MLI.Response.Metrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD510);
  }
  return result;
}

unint64_t sub_1003369EC()
{
  unint64_t result;

  result = qword_1011AD528;
  if (!qword_1011AD528)
  {
    result = swift_getWitnessTable(&unk_100EB5524, &type metadata for MLI.Response.Results);
    atomic_store(result, (unint64_t *)&qword_1011AD528);
  }
  return result;
}

unint64_t sub_100336A30()
{
  unint64_t result;

  result = qword_1011AD538;
  if (!qword_1011AD538)
  {
    result = swift_getWitnessTable(&unk_100EB54D4, &type metadata for MLI.Response.ItemsToReview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD538);
  }
  return result;
}

uint64_t _s5Music3MLIO8ObserverC11MetricsDataV14ReferralStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100336AC0 + 4 * byte_100EB4E7F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100336AF4 + 4 * byte_100EB4E7A[v4]))();
}

uint64_t sub_100336AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100336AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100336B04);
  return result;
}

uint64_t sub_100336B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100336B18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100336B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100336B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLI.Response.ItemsToReview.CodingKeys()
{
  return &type metadata for MLI.Response.ItemsToReview.CodingKeys;
}

ValueMetadata *type metadata accessor for MLI.Response.Metrics.CodingKeys()
{
  return &type metadata for MLI.Response.Metrics.CodingKeys;
}

uint64_t _s5Music3MLIO8ResponseV7MetricsV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100336B98 + 4 * byte_100EB4E84[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100336BB8 + 4 * byte_100EB4E89[v4]))();
}

_BYTE *sub_100336B98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100336BB8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100336BC0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100336BC8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100336BD0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100336BD8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MLI.Response.CodingKeys()
{
  return &type metadata for MLI.Response.CodingKeys;
}

uint64_t _s5Music3MLIO8ResponseV7ResultsVwxx_0(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(a1[15]);
  result = a1[23];
  if (result != 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s5Music3MLIO8ResponseV7ResultsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  *(_OWORD *)(a1 + 154) = *(_OWORD *)(a2 + 154);
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  v10 = (_OWORD *)(a2 + 176);
  v11 = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  if (v11 == 1)
  {
    *(_OWORD *)(a1 + 176) = *v10;
  }
  else
  {
    *(_QWORD *)(a1 + 176) = *(_QWORD *)v10;
    *(_QWORD *)(a1 + 184) = v11;
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t _s5Music3MLIO8ResponseV7ResultsVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = a2[4];
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 48) = a2[6];
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 64) = a2[8];
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 80) = a2[10];
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 96) = a2[12];
  v10 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 112) = a2[14];
  v11 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  v12 = *((_OWORD *)a2 + 8);
  v13 = *((_OWORD *)a2 + 9);
  *(_OWORD *)(a1 + 154) = *(_OWORD *)((char *)a2 + 154);
  *(_OWORD *)(a1 + 128) = v12;
  *(_OWORD *)(a1 + 144) = v13;
  v14 = *(_QWORD *)(a1 + 184);
  v15 = a2[23];
  if (v14 != 1)
  {
    if (v15 != 1)
    {
      *(_QWORD *)(a1 + 176) = a2[22];
      *(_QWORD *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(v14);
      return a1;
    }
    sub_1001C7464(a1 + 176);
    goto LABEL_6;
  }
  if (v15 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    return a1;
  }
  *(_QWORD *)(a1 + 176) = a2[22];
  *(_QWORD *)(a1 + 184) = a2[23];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5Music3MLIO8ResponseV7ResultsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 104);
  v13 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 120);
  v15 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v14;
  swift_bridgeObjectRelease(v15);
  v16 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v16;
  *(_OWORD *)(a1 + 154) = *(_OWORD *)(a2 + 154);
  v17 = (_QWORD *)(a2 + 176);
  v18 = *(_QWORD *)(a1 + 184);
  if (v18 != 1)
  {
    v19 = *(_QWORD *)(a2 + 184);
    if (v19 != 1)
    {
      *(_QWORD *)(a1 + 176) = *v17;
      *(_QWORD *)(a1 + 184) = v19;
      swift_bridgeObjectRelease(v18);
      return a1;
    }
    sub_1001C7464(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)v17;
  return a1;
}

uint64_t _s5Music3MLIO8ResponseV7ResultsVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5Music3MLIO8ResponseV7ResultsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLI.Response.Results()
{
  return &type metadata for MLI.Response.Results;
}

unint64_t sub_1003370D0()
{
  unint64_t result;

  result = qword_1011AD548;
  if (!qword_1011AD548)
  {
    result = swift_getWitnessTable(&unk_100EB5304, &type metadata for MLI.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD548);
  }
  return result;
}

unint64_t sub_100337118()
{
  unint64_t result;

  result = qword_1011AD550;
  if (!qword_1011AD550)
  {
    result = swift_getWitnessTable(&unk_100EB53BC, &type metadata for MLI.Response.Metrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD550);
  }
  return result;
}

unint64_t sub_100337160()
{
  unint64_t result;

  result = qword_1011AD558;
  if (!qword_1011AD558)
  {
    result = swift_getWitnessTable(&unk_100EB54AC, &type metadata for MLI.Response.ItemsToReview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD558);
  }
  return result;
}

unint64_t sub_1003371A8()
{
  unint64_t result;

  result = qword_1011AD560;
  if (!qword_1011AD560)
  {
    result = swift_getWitnessTable(&unk_100EB53E4, &type metadata for MLI.Response.ItemsToReview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD560);
  }
  return result;
}

unint64_t sub_1003371F0()
{
  unint64_t result;

  result = qword_1011AD568;
  if (!qword_1011AD568)
  {
    result = swift_getWitnessTable(&unk_100EB540C, &type metadata for MLI.Response.ItemsToReview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD568);
  }
  return result;
}

unint64_t sub_100337238()
{
  unint64_t result;

  result = qword_1011AD570;
  if (!qword_1011AD570)
  {
    result = swift_getWitnessTable(&unk_100EB532C, &type metadata for MLI.Response.Metrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD570);
  }
  return result;
}

unint64_t sub_100337280()
{
  unint64_t result;

  result = qword_1011AD578;
  if (!qword_1011AD578)
  {
    result = swift_getWitnessTable(&unk_100EB5354, &type metadata for MLI.Response.Metrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD578);
  }
  return result;
}

unint64_t sub_1003372C8()
{
  unint64_t result;

  result = qword_1011AD580;
  if (!qword_1011AD580)
  {
    result = swift_getWitnessTable(&unk_100EB5274, &type metadata for MLI.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD580);
  }
  return result;
}

unint64_t sub_100337310()
{
  unint64_t result;

  result = qword_1011AD588;
  if (!qword_1011AD588)
  {
    result = swift_getWitnessTable(&unk_100EB529C, &type metadata for MLI.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD588);
  }
  return result;
}

unint64_t sub_100337354()
{
  unint64_t result;

  result = qword_1011AD598;
  if (!qword_1011AD598)
  {
    result = swift_getWitnessTable(&unk_100EB56CC, &type metadata for MLI.Response.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD598);
  }
  return result;
}

unint64_t sub_100337398()
{
  unint64_t result;

  result = qword_1011AD5A8;
  if (!qword_1011AD5A8)
  {
    result = swift_getWitnessTable(&unk_100EB5148, &type metadata for MLI.Response.ItemsToReview);
    atomic_store(result, (unint64_t *)&qword_1011AD5A8);
  }
  return result;
}

unint64_t sub_1003373DC()
{
  unint64_t result;

  result = qword_1011AD5B0;
  if (!qword_1011AD5B0)
  {
    result = swift_getWitnessTable(&unk_100EB51E8, &type metadata for MLI.Response.Metrics);
    atomic_store(result, (unint64_t *)&qword_1011AD5B0);
  }
  return result;
}

uint64_t sub_100337420(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 176);
  v3 = *(_QWORD *)(a1 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1003351D4(v2, v3);
  return a1;
}

unint64_t sub_1003374AC()
{
  unint64_t result;

  result = qword_1011AD5C8;
  if (!qword_1011AD5C8)
  {
    result = swift_getWitnessTable(&unk_100EB5120, &type metadata for MLI.Response.ItemsToReview);
    atomic_store(result, (unint64_t *)&qword_1011AD5C8);
  }
  return result;
}

unint64_t sub_1003374F0()
{
  unint64_t result;

  result = qword_1011AD5D0;
  if (!qword_1011AD5D0)
  {
    result = swift_getWitnessTable(&unk_100EB51C0, &type metadata for MLI.Response.Metrics);
    atomic_store(result, (unint64_t *)&qword_1011AD5D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JSApplication.SubscriptionFlowConfiguration.Placement(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MLI.Response.Results.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_100337610 + 4 * byte_100EB4E93[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_100337644 + 4 * byte_100EB4E8E[v4]))();
}

uint64_t sub_100337644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033764C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100337654);
  return result;
}

uint64_t sub_100337660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100337668);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_10033766C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100337674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLI.Response.Results.CodingKeys()
{
  return &type metadata for MLI.Response.Results.CodingKeys;
}

unint64_t sub_100337694()
{
  unint64_t result;

  result = qword_1011AD5D8;
  if (!qword_1011AD5D8)
  {
    result = swift_getWitnessTable(&unk_100EB56A4, &type metadata for MLI.Response.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD5D8);
  }
  return result;
}

unint64_t sub_1003376DC()
{
  unint64_t result;

  result = qword_1011AD5E0;
  if (!qword_1011AD5E0)
  {
    result = swift_getWitnessTable(&unk_100EB5614, &type metadata for MLI.Response.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD5E0);
  }
  return result;
}

unint64_t sub_100337724()
{
  unint64_t result;

  result = qword_1011AD5E8;
  if (!qword_1011AD5E8)
  {
    result = swift_getWitnessTable(&unk_100EB563C, &type metadata for MLI.Response.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011AD5E8);
  }
  return result;
}

uint64_t sub_100337778@<X0>(uint64_t a1@<X8>)
{
  return sub_1003377E0((void (*)(uint64_t, void *))&EditorialArtworkVending.brickEditorialArtwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.featuredContentCrop270.getter, a1);
}

uint64_t sub_10033778C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A1440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003377CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1003377E0((void (*)(uint64_t, void *))&EditorialArtworkVending.flowcaseEditorialArtwork.getter, (void (*)(uint64_t))&static Artwork.CropStyle.specificRectangle.getter, a1);
}

uint64_t sub_1003377E0@<X0>(void (*a1)(uint64_t, void *)@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t, void *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  void (*v67)(uint64_t, void *);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  __n128 v77;
  os_log_type_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  void (*v86)(char *, uint64_t, __n128);
  NSObject *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, NSObject *, uint64_t);
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  void (*v142)(uint64_t);
  char *v143;
  void (*v144)(uint64_t, void *);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  uint64_t v150;
  uint64_t v151;

  v142 = a2;
  v144 = a1;
  v148 = a3;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v3);
  v143 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artwork(0);
  v146 = *(_QWORD *)(v5 - 8);
  v147 = v5;
  v6 = __chkstk_darwin(v5);
  v141 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v140 = (char *)&v89 - v8;
  v97 = type metadata accessor for Logger(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for UploadedVideo(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for UploadedAudio(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for RecordLabel(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for RadioShow(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for TVShow(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for TVSeason(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for TVEpisode(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for Station(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for Song(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for Playlist(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for MusicVideo(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for MusicMovie(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Genre(0);
  v132 = *(_QWORD *)(v22 - 8);
  v133 = v22;
  __chkstk_darwin(v22);
  v131 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for EditorialItem(0);
  v135 = *(_QWORD *)(v24 - 8);
  v136 = v24;
  __chkstk_darwin(v24);
  v134 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Curator(0);
  v138 = *(_QWORD *)(v26 - 8);
  v139 = v26;
  __chkstk_darwin(v26);
  v137 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Artist(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Album(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = (char *)&v89 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for GenericMusicItem(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = __chkstk_darwin(v36);
  v91 = (char *)&v89 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v41 = (char *)&v89 - v40;
  v42 = sub_100007E8C(&qword_1011A1440);
  v43 = __chkstk_darwin(v42);
  v145 = (uint64_t)&v89 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v46 = (char *)&v89 - v45;
  v90 = *(void (**)(char *, NSObject *, uint64_t))(v37 + 16);
  v90(v41, v149, v36);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v41, v36);
  if (v47 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v35, v41, v32);
    v144(v32, &protocol witness table for Album);
    v48 = *(void (**)(char *, uint64_t))(v33 + 8);
LABEL_3:
    v49 = v35;
LABEL_4:
    v50 = v32;
LABEL_7:
    v48(v49, v50);
LABEL_8:
    v53 = v146;
    v52 = v147;
    goto LABEL_9;
  }
  v51 = v144;
  if (v47 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v41, v28);
    v51(v28, &protocol witness table for Artist);
    v48 = *(void (**)(char *, uint64_t))(v29 + 8);
    v49 = v31;
    v50 = v28;
    goto LABEL_7;
  }
  if (v47 == enum case for GenericMusicItem.composer(_:) || v47 == enum case for GenericMusicItem.creditArtist(_:))
    goto LABEL_15;
  if (v47 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v65 = v137;
    v64 = v138;
    v32 = v139;
    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v137, v41, v139);
    v66 = &protocol witness table for Curator;
LABEL_21:
    v51(v32, v66);
    v48 = *(void (**)(char *, uint64_t))(v64 + 8);
    v49 = v65;
    goto LABEL_4;
  }
  if (v47 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v65 = v134;
    v64 = v135;
    v32 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v41, v136);
    v66 = &protocol witness table for EditorialItem;
    goto LABEL_21;
  }
  v67 = v144;
  if (v47 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v69 = v131;
    v68 = v132;
    v70 = v133;
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v131, v41, v133);
    v71 = &protocol witness table for Genre;
LABEL_37:
    v67(v70, v71);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    goto LABEL_8;
  }
  if (v47 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v68 = v129;
    v69 = v128;
    v70 = v130;
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v41, v130);
    v71 = &protocol witness table for MusicMovie;
    goto LABEL_37;
  }
  if (v47 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v68 = v126;
    v69 = v125;
    v70 = v127;
    (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v125, v41, v127);
    v71 = &protocol witness table for MusicVideo;
    goto LABEL_37;
  }
  if (v47 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v68 = v123;
    v69 = v122;
    v70 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v41, v124);
    v71 = &protocol witness table for Playlist;
    goto LABEL_37;
  }
  if (v47 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v68 = v120;
    v69 = v119;
    v70 = v121;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v41, v121);
    v71 = &protocol witness table for RadioShow;
    goto LABEL_37;
  }
  if (v47 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v68 = v117;
    v69 = v116;
    v70 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v41, v118);
    v71 = &protocol witness table for RecordLabel;
    goto LABEL_37;
  }
  if (v47 == enum case for GenericMusicItem.socialProfile(_:))
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v36);
LABEL_16:
    v53 = v146;
    v52 = v147;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v46, 1, 1, v147);
    goto LABEL_9;
  }
  if (v47 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v68 = v114;
    v69 = v113;
    v70 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v41, v115);
    v71 = &protocol witness table for Song;
    goto LABEL_37;
  }
  if (v47 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v72 = v111;
    v35 = v110;
    v32 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v41, v112);
    v73 = &protocol witness table for Station;
LABEL_50:
    v51(v32, v73);
    v48 = *(void (**)(char *, uint64_t))(v72 + 8);
    goto LABEL_3;
  }
  if (v47 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v72 = v108;
    v35 = v107;
    v32 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v41, v109);
    v73 = &protocol witness table for TVEpisode;
    goto LABEL_50;
  }
  if (v47 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v72 = v105;
    v35 = v104;
    v32 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v41, v106);
    v73 = &protocol witness table for TVSeason;
    goto LABEL_50;
  }
  if (v47 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v72 = v102;
    v35 = v101;
    v32 = v103;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v41, v103);
    v73 = &protocol witness table for TVShow;
    goto LABEL_50;
  }
  if (v47 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v72 = v99;
    v35 = v98;
    v32 = v100;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v41, v100);
    v73 = &protocol witness table for UploadedAudio;
    goto LABEL_50;
  }
  if (v47 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    v72 = v93;
    v35 = v92;
    v32 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v41, v94);
    v73 = &protocol witness table for UploadedVideo;
    goto LABEL_50;
  }
  if (v47 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v36);
    swift_bridgeObjectRelease(*((_QWORD *)v41 + 1));
    goto LABEL_16;
  }
  v74 = Logger.musicKit.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v74, v97);
  v75 = ((uint64_t (*)(char *, NSObject *, uint64_t))v90)(v91, v149, v36);
  v76 = Logger.logObject.getter(v75);
  v78 = static os_log_type_t.fault.getter(v77);
  v149 = v76;
  LODWORD(v144) = v78;
  if (os_log_type_enabled(v76, v78))
  {
    v79 = swift_slowAlloc(22, -1);
    v139 = swift_slowAlloc(64, -1);
    v151 = v139;
    *(_DWORD *)v79 = 136446466;
    v150 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151);
    *(_WORD *)(v79 + 12) = 2082;
    v80 = sub_1000FDBCC();
    v81 = v91;
    v82 = dispatch thunk of CustomStringConvertible.description.getter(v36, v80);
    v84 = v83;
    v150 = sub_100322200(v82, v83, &v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151);
    v85 = swift_bridgeObjectRelease(v84);
    v86 = *(void (**)(char *, uint64_t, __n128))(v37 + 8);
    v86(v81, v36, v85);
    v87 = v149;
    _os_log_impl((void *)&_mh_execute_header, v149, (os_log_type_t)v144, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v79, 0x16u);
    v88 = v139;
    swift_arrayDestroy(v139, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v88, -1, -1);
    swift_slowDealloc(v79, -1, -1);

  }
  else
  {
    v86 = *(void (**)(char *, uint64_t, __n128))(v37 + 8);
    ((void (*)(char *, uint64_t))v86)(v91, v36);

  }
  (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v97);
  v53 = v146;
  v52 = v147;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v46, 1, 1, v147);
  ((void (*)(char *, uint64_t))v86)(v41, v36);
LABEL_9:
  v54 = v145;
  sub_10013EF64((uint64_t)v46, v145);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v54, 1, v52) == 1)
  {
    sub_10033778C((uint64_t)v46);
    sub_10033778C(v54);
    v55 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v148, 1, 1, v55);
  }
  else
  {
    v57 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v140, v54, v52);
    v58 = (uint64_t)v141;
    v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v53 + 16))(v141, v57, v52);
    v60 = (uint64_t)v143;
    v142(v59);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v57, v52);
    sub_10033778C((uint64_t)v46);
    v61 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
    v62 = v148;
    ArtworkImage.ViewModel.init(artwork:cropStyle:)(v58, v60, v148);
    v63 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
}

int64x2_t sub_10033888C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4050000000000000uLL);
  xmmword_1011AD5F0 = (__int128)result;
  return result;
}

id sub_1003388A4(uint64_t *a1, int a2, int a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_class *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  _BYTE v57[4];
  int v58;
  objc_class *ObjectType;
  __int128 v60;
  objc_super v61;

  v4 = v3;
  v58 = a3;
  LODWORD(v60) = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)&v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = (uint64_t *)&v57[-v10];
  v12 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v12);
  v14 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = &v3[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem];
  v16 = type metadata accessor for Playlist.Folder.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v4[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___globalHeaderRegistration];
  v18 = sub_100007E8C(&qword_1011A37B0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  v19(&v4[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___headerRegistration], 1, 1, v18);
  v20 = &v4[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listPlaylistCellRegistration];
  v21 = sub_100007E8C(&qword_1011AD6C0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = &v4[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listFolderCellRegistration];
  v23 = sub_100007E8C(&qword_1011AD6D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = &v4[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridPlaylistCellRegistration];
  v25 = sub_100007E8C(&qword_1011AD6E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = &v4[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridFolderCellRegistration];
  v27 = sub_100007E8C((uint64_t *)&unk_1011AD6F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___collectionView] = 0;
  v28 = OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_prefetchingController;
  v29 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  v30 = v4;
  *(_QWORD *)&v4[v28] = sub_1001EA3C8(0xD000000000000020, 0x8000000100E369B0);
  *(_QWORD *)&v30[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_dragDropController] = 0;
  *(_QWORD *)&v30[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___searchController] = 0;
  v31 = &v30[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___actionMetricsReportingContext];
  v32 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  sub_10005B704((uint64_t)a1, (uint64_t)&v30[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope], _s9PlaylistsV5ScopeVMa);
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v33 = v58 & 1;
  v34 = (uint64_t *)sub_100048B14(v6, (uint64_t)qword_10124C8A8);
  v35 = sub_10010DC18(a1, v34);
  if (v35)
    v36 = 0xD000000000000011;
  else
    v36 = 0xD000000000000010;
  if (v35)
    v37 = 0x8000000100E2D170;
  else
    v37 = 0x8000000100E2D150;
  v38 = _s23LayoutVariantControllerCMa();
  swift_allocObject(v38, 56, 7);
  *(_QWORD *)&v30[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_layoutVariantController] = sub_1005AE0DC(v36, v37, v33);
  sub_10005B704((uint64_t)a1, (uint64_t)v11, _s9PlaylistsV5ScopeVMa);
  sub_10010B13C(v11, v60 & 1, (uint64_t)v14);
  v39 = sub_100007E8C((uint64_t *)&unk_1011AD700);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  *(_QWORD *)&v30[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController] = sub_10018C76C((uint64_t)v14);

  v40 = ObjectType;
  v61.receiver = v30;
  v61.super_class = ObjectType;
  v41 = objc_msgSendSuper2(&v61, "initWithNibName:bundle:", 0, 0);
  sub_100338E40();
  v43 = v42;
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setTitle:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

  sub_10005B704((uint64_t)a1, (uint64_t)v8, _s9PlaylistsV5ScopeVMa);
  LOBYTE(v43) = sub_10010DC18(v34, v8);
  sub_10005B748((uint64_t)v8, _s9PlaylistsV5ScopeVMa);
  v45 = v41;
  if ((v43 & 1) != 0)
    v46 = 6;
  else
    v46 = 9;
  UIViewController.playActivityFeatureIdentifier.setter(v46);

  v47 = sub_100007E8C(&qword_1011A1750);
  v48 = swift_allocObject(v47, 48, 7);
  v60 = xmmword_100EA7AA0;
  *(_OWORD *)(v48 + 16) = xmmword_100EA7AA0;
  v49 = sub_10018D478();
  *(_QWORD *)(v48 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v48 + 40) = v49;
  v50 = v45;
  v51 = UIViewController.registerForTraitChanges<A>(_:handler:)(v48, sub_100344928, 0, v40);
  swift_unknownObjectRelease(v51);

  swift_bridgeObjectRelease(v48);
  v52 = swift_allocObject(v47, 48, 7);
  *(_OWORD *)(v52 + 16) = v60;
  v53 = sub_10013ADBC();
  *(_QWORD *)(v52 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v52 + 40) = v53;
  v54 = v50;
  v55 = UIViewController.registerForTraitChanges<A>(_:handler:)(v52, sub_10034492C, 0, v40);
  swift_unknownObjectRelease(v55);
  swift_bridgeObjectRelease(v52);

  sub_10005B748((uint64_t)a1, _s9PlaylistsV5ScopeVMa);
  return v54;
}

uint64_t sub_100338E40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[16];

  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = &v31[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v7);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Playlist.Folder(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160((uint64_t)v0 + *(int *)(v14 + 20), (uint64_t)v9, (uint64_t *)&unk_1011B5660);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011B5660);
    v15 = *v0;
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACAF0);
    v17 = type metadata accessor for Playlist.Variant(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = swift_allocObject(v16, v20 + *(_QWORD *)(v18 + 72), v19 | 7);
    *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
    v22 = v21 + v20;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v22, enum case for Playlist.Variant.personalMix(_:), v17);
    v23 = sub_100047034(v21);
    swift_setDeallocating(v21);
    swift_arrayDestroy(v22, 1, v17);
    swift_deallocClassInstance(v21, 32, 7);
    sub_10016D044(v15, (uint64_t)v23);
    LOBYTE(v15) = v24;
    swift_bridgeObjectRelease(v23);
    if ((v15 & 1) != 0)
    {
      v25 = 0x726F66206564614DLL;
      v26 = 0xEC000000756F5920;
    }
    else
    {
      v25 = 0x7473696C79616C50;
      v26 = 0xE900000000000073;
    }
    v29 = String.LocalizationValue.init(stringLiteral:)(v25, v26);
    static Locale.current.getter(v29);
    return String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, 0, 0, 256);
  }
  else
  {
    v27.n128_f64[0] = (*(double (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
    v28 = Playlist.Folder.name.getter(v27);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v28;
}

void sub_100339114()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;
  void *v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSString v43;
  id v44;
  NSString v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  NSString v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  NSString v73;
  char *v74;
  id v75;
  __n128 v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  NSString v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  NSString v91;
  id v92;
  __n128 v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  objc_class *v100;
  uint64_t v101;
  NSArray v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  Class isa;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  objc_class *v116;
  uint64_t v117;
  char v118[24];
  _QWORD aBlock[6];
  uint64_t v120;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A3C60);
  v113 = *(_QWORD *)(v2 - 8);
  v114 = v2;
  __chkstk_darwin(v2);
  v112 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v4);
  v115 = (uint64_t)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = (uint64_t)_swiftEmptyArrayStorage;
  v117 = sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  v18 = static UIButton.contextBarButton()();
  v19 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v1);
  aBlock[4] = sub_100344D0C;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100170D48;
  aBlock[3] = &unk_1010C0480;
  v20 = _Block_copy(aBlock);
  objc_msgSend(v18, "_setMenuProvider:", v20, swift_release().n128_f64[0]);
  _Block_release(v20);
  v21 = objc_allocWithZone((Class)UIBarButtonItem);
  v116 = (objc_class *)v18;
  v22 = objc_msgSend(v21, "initWithCustomView:", v18);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v24 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v23 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v24 >= v23 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
  v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
  specialized Array._endMutation()(v25);
  v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
  v27 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 96);
  swift_beginAccess(v27, aBlock, 0, 0);
  sub_10005B704(v27, (uint64_t)v17, _s9PlaylistsVMa);
  v28 = sub_10010E2B0();
  swift_bridgeObjectRetain();
  sub_10005B748((uint64_t)v17, _s9PlaylistsVMa);
  v29 = v28[2];
  swift_bridgeObjectRelease(v28);
  if (v29)
  {
    v30 = sub_100188764();
    v31 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v30);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v33 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v32 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
    specialized Array._endMutation()(v34);

  }
  v35 = v14;
  if (sub_100343870())
  {
    static UIButton.Configuration.barButtonConfiguration(imageName:)(1937075312, 0xE400000000000000);
    sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
    v36 = swift_allocObject(&unk_1010C0468, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v1);
    v37 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100344D74, v36);
    v38 = (void *)UIButton.init(configuration:primaryAction:)(v14, v37);
    v39 = String.LocalizationValue.init(stringLiteral:)(0x79616C502077654ELL, 0xEC0000007473696CLL);
    static Locale.current.getter(v39);
    String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, 0, 0, 256);
    v41 = v40;
    v42 = v38;
    v43 = String._bridgeToObjectiveC()();
    objc_msgSend(v42, "setAccessibilityLabel:", v43);

    v44 = v42;
    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v44, "setLargeContentTitle:", v45, swift_bridgeObjectRelease(v41).n128_f64[0]);

    objc_msgSend(v44, "setShowsLargeContentViewer:", 1);
    v46 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v44);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
    v48 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v47 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v48 >= v47 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
    v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
    specialized Array._endMutation()(v49);

  }
  v50 = objc_msgSend(v1, "traitCollection");
  v51 = objc_msgSend(v50, "horizontalSizeClass");

  if (v51 != (id)1)
  {
    v52 = &v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope];
    v53 = _s9PlaylistsV5ScopeVMa(0);
    v54 = v115;
    sub_10004A160((uint64_t)&v52[*(int *)(v53 + 20)], v115, (uint64_t *)&unk_1011B5660);
    v55 = type metadata accessor for Playlist.Folder(0);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55);
    sub_10004FF60(v54, (uint64_t *)&unk_1011B5660);
    if (v56 != 1)
    {
      v57 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 112);
      v58 = swift_beginAccess(v57, v118, 0, 0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v113 + 48))(v57, 1, v114, v58))
      {
        v59 = v112;
        v60 = v113;
        v61 = v114;
        (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v112, v57, v114);
        v62 = MusicLibrarySectionedResponse.isEmpty.getter();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
        if (!v62)
        {
          v63 = swift_allocObject(&unk_1010C0468, 24, 7);
          swift_unknownObjectWeakInit(v63 + 16, v1);
          swift_retain();
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0x656C6666756873, 0xE700000000000000);
          sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
          v64 = swift_allocObject(&unk_1010C04B8, 33, 7);
          *(_QWORD *)(v64 + 16) = sub_100344D2C;
          *(_QWORD *)(v64 + 24) = v63;
          *(_BYTE *)(v64 + 32) = 1;
          swift_retain();
          v65 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100344D68, v64);
          v66 = (id)UIButton.init(configuration:primaryAction:)(v35, v65);
          SymbolButton.Intent.title.getter(1);
          v68 = v67;
          v69 = String._bridgeToObjectiveC()();
          objc_msgSend(v66, "setAccessibilityLabel:", v69, swift_bridgeObjectRelease(v68).n128_f64[0]);

          v70 = v66;
          SymbolButton.Intent.title.getter(1);
          v72 = v71;
          v73 = String._bridgeToObjectiveC()();
          objc_msgSend(v70, "setLargeContentTitle:", v73, swift_bridgeObjectRelease(v72).n128_f64[0]);

          objc_msgSend(v70, "setShowsLargeContentViewer:", 1);
          v74 = v35;
          v75 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v70);
          swift_release_n(v63, 2, v76);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
          v79 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v78 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v79 >= v78 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
          v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v75);
          specialized Array._endMutation()(v80);
          v81 = swift_allocObject(&unk_1010C0468, 24, 7);
          swift_unknownObjectWeakInit(v81 + 16, v1);
          swift_retain();
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0x6C69662E79616C70, 0xE90000000000006CLL);
          v82 = swift_allocObject(&unk_1010C04E0, 33, 7);
          *(_QWORD *)(v82 + 16) = sub_100344D2C;
          *(_QWORD *)(v82 + 24) = v81;
          *(_BYTE *)(v82 + 32) = 0;
          swift_retain();
          v83 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100346218, v82);
          v84 = (id)UIButton.init(configuration:primaryAction:)(v74, v83);
          SymbolButton.Intent.title.getter(0);
          v86 = v85;
          v87 = String._bridgeToObjectiveC()();
          objc_msgSend(v84, "setAccessibilityLabel:", v87, swift_bridgeObjectRelease(v86).n128_f64[0]);

          v88 = v84;
          SymbolButton.Intent.title.getter(0);
          v90 = v89;
          v91 = String._bridgeToObjectiveC()();
          objc_msgSend(v88, "setLargeContentTitle:", v91, swift_bridgeObjectRelease(v90).n128_f64[0]);

          objc_msgSend(v88, "setShowsLargeContentViewer:", 1);
          v92 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v88);
          swift_release_n(v81, 2, v93);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v94);
          v96 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v95 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v96 >= v95 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v95 > 1, v96 + 1, 1);
          v97 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v96, v92);
          specialized Array._endMutation()(v97);
        }
      }
    }
  }
  v98 = objc_msgSend(v1, "traitCollection");
  v99 = objc_msgSend(v98, "userInterfaceIdiom");

  v100 = (objc_class *)objc_msgSend(v1, "navigationItem");
  v101 = v120;
  if (v99 == (id)6)
  {
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v102.super.isa = Array._bridgeToObjectiveC()().super.isa;
    -[objc_class setRightBarButtonItems:animated:](v100, "setRightBarButtonItems:animated:", v102.super.isa, 0, swift_bridgeObjectRelease(v101).n128_f64[0]);

    v100 = v116;
  }
  else
  {
    if (sub_1008EC8F4(v120))
      goto LABEL_25;
    v103 = -[objc_class rightBarButtonItems](v100, "rightBarButtonItems");
    if (!v103)
      goto LABEL_26;
    v104 = v103;
    v105 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v106 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v104, v105);

    v107 = sub_1008EC9EC(v106);
    swift_bridgeObjectRelease(v106);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v106) = sub_1002EC758((uint64_t)v107, v101);
    swift_bridgeObjectRelease_n(v107, 2);
    swift_bridgeObjectRelease(v101);
    if ((v106 & 1) != 0)
    {
LABEL_25:
      swift_bridgeObjectRelease(v101);
      v102.super.isa = v116;
    }
    else
    {
LABEL_26:
      v108 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
      v109 = Array.inserting(separator:)((uint64_t)sub_1008ECB38, 0, v101, v108);
      isa = Array._bridgeToObjectiveC()().super.isa;
      -[objc_class setRightBarButtonItems:animated:](v100, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease(v109).n128_f64[0]);

      swift_bridgeObjectRelease(v101);
      v102.super.isa = v116;
      v100 = isa;
    }
  }

}

uint64_t sub_100339D68@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _BYTE v27[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v3);
  v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem], v27, 0, 0);
  sub_10004A160(v11, (uint64_t)v10, (uint64_t *)&unk_1011AD730);
  v12 = type metadata accessor for Playlist.Folder.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011AD730);
  if (v14 != 1)
    return sub_10004A160(v11, a1, (uint64_t *)&unk_1011AD730);
  v15 = a1;
  if (!objc_msgSend(v1, "isViewLoaded"))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v15, 1, 1, v12);
  v16 = sub_10033A038();
  v17 = objc_msgSend(v16, "indexPathsForSelectedItems");

  if (!v17)
  {
    v19 = (uint64_t)v26;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v26, 1, 1, v5);
LABEL_10:
    sub_10004FF60(v19, (uint64_t *)&unk_1011A3D50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v15, 1, 1, v12);
  }
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v5);

  if (*(_QWORD *)(v18 + 16))
  {
    v19 = (uint64_t)v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v26, v18 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    v20 = 0;
  }
  else
  {
    v20 = 1;
    v19 = (uint64_t)v26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v19, v20, 1, v5);
  v22 = swift_bridgeObjectRelease(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v19, 1, v5, v22) == 1)
    goto LABEL_10;
  v23 = (uint64_t)v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v25, v19, v5);
  sub_1008DDBA4(v23, v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v23, v5);
}

id sub_10033A038()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  id result;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double Width;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  _BYTE v45[16];
  objc_super v46;
  objc_super v47;
  objc_super v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___collectionView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___collectionView];
  if (v11)
  {
    v12 = *(id *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___collectionView];
LABEL_8:
    v44 = v11;
    return v12;
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v14);
  v15 = v13;
  v16 = sub_1001089FC(v15, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v48.receiver = v16;
    v48.super_class = v14;
    objc_msgSendSuper2(&v48, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v47.receiver = v16;
    v47.super_class = v14;
    objc_msgSendSuper2(&v47, "setFrame:", v20, v22, v24, v26);
    v49.origin.x = v28;
    v49.origin.y = v30;
    v49.size.width = v32;
    v49.size.height = v34;
    Width = CGRectGetWidth(v49);
    v46.receiver = v16;
    v46.super_class = v14;
    objc_msgSendSuper2(&v46, "frame");
    if (Width != CGRectGetWidth(v50))
      sub_100108B5C();
    objc_msgSend(v16, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "addSubview:", v16);

      objc_msgSend(v16, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v16, "setDataSource:", v1);
      objc_msgSend(v16, "setDelegate:", v1);
      objc_msgSend(v16, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v16, "setKeyboardDismissMode:", 1);
      objc_msgSend(v16, "setAllowsFocus:", 1);
      objc_msgSend(v16, "setRemembersLastFocusedIndexPath:", 1);
      v45[15] = 0;
      v37 = sub_10004D63C();
      v38 = v16;
      objc_msgSend(v38, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v37) & 1);

      v39 = sub_10033FF7C();
      v41 = v40;
      v42 = UIView.withAccessibilityIdentifier(_:)(v39, v40);

      swift_bridgeObjectRelease(v41);
      v43 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v42;
      v12 = v42;

      v11 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10033A3E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v36;
  id v37;
  Class isa;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v47 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A3C60);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin(v6);
  v41 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v8);
  v46 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - v11;
  v13 = type metadata accessor for Playlist.Folder.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v48 = (uint64_t)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v42 = (char *)&v41 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v41 - v22;
  v24 = v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem, v52, 33, 0);
  v45 = v24;
  sub_100344DB4(a1, v24);
  swift_endAccess(v52);
  v49 = v3;
  v50 = v4;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v25(v23, 1, 1, v3);
  v51 = a1;
  sub_10004A160(a1, (uint64_t)v12, (uint64_t *)&unk_1011AD730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011AD730);
    v26 = v49;
    v27 = v50;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v48, v12, v13);
    v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
                    + 112);
    v29 = swift_beginAccess(v28, v52, 32, 0);
    v31 = v43;
    v30 = v44;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v43 + 48))(v28, 1, v44, v29))
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v48, v13);
      sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011A3D50);
      swift_endAccess(v52);
      v32 = (uint64_t)v42;
      v26 = v49;
      v25(v42, 1, 1, v49);
    }
    else
    {
      v33 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v41, v28, v30);
      swift_endAccess(v52);
      v32 = (uint64_t)v42;
      v34 = v48;
      sub_1007CF724(v48, (uint64_t)v42);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
      sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011A3D50);
      v26 = v49;
    }
    sub_100065228(v32, (uint64_t)v23, (uint64_t *)&unk_1011A3D50);
    v27 = v50;
  }
  sub_10004A160((uint64_t)v23, (uint64_t)v18, (uint64_t *)&unk_1011A3D50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26) == 1)
  {
    sub_10004FF60(v51, (uint64_t *)&unk_1011AD730);
    sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011A3D50);
    return sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A3D50);
  }
  else
  {
    v36 = v47;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v47, v18, v26);
    v37 = sub_10033A038();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

    sub_10004FF60(v51, (uint64_t *)&unk_1011AD730);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v26);
    sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011A3D50);
    v39 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v46, 1, 1, v13);
    v40 = v45;
    swift_beginAccess(v45, v52, 33, 0);
    sub_1000A5508(v39, v40, (uint64_t *)&unk_1011AD730);
    return swift_endAccess(v52);
  }
}

void sub_10033A8B0()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (**v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t (**v12)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (**v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _QWORD v54[4];
  _QWORD v55[4];
  _QWORD v56[4];
  _QWORD v57[4];
  _QWORD v58[4];
  _QWORD v59[4];
  objc_super v60;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v60.receiver = v0;
  v60.super_class = ObjectType;
  objc_msgSendSuper2(&v60, "viewDidLoad");
  v3 = sub_10033A038();
  v4 = sub_10033ADD0();
  objc_msgSend(v3, "setCollectionViewLayout:", v4);

  v5 = sub_10033A038();
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_prefetchingController];
  objc_msgSend(v5, "setPrefetchDataSource:", v6);

  v7 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v1);
  v8 = swift_allocObject(&unk_1010C06C0, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v9 = (double (**)(uint64_t, uint64_t))(v6
                                                + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider + 8);
  *v9 = sub_1003461DC;
  v9[1] = (double (*)(uint64_t, uint64_t))v8;
  sub_10004BA30(v11, v10);
  v12 = (unint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))(v6
                                                                                        + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v13 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v14 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider + 8);
  *v12 = sub_10033B0AC;
  v12[1] = 0;
  sub_10004BA30(v13, v14);
  sub_100339114();
  v15 = (char *)sub_10033A038();
  v16 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v1);
  v17 = (void (**)(uint64_t, uint64_t))&v15[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate + 8];
  *v17 = sub_1003461E4;
  v17[1] = (void (*)(uint64_t, uint64_t))v16;
  sub_10004BA30(v18, v19);

  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_layoutVariantController];
  v21 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, v1);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v20 + 16) = sub_1003461EC;
  *(_QWORD *)(v20 + 24) = v21;
  sub_10004BA30(v22, v23);
  v24 = sub_10033B4E8();
  v25 = objc_msgSend(v1, "traitCollection");
  v26 = objc_msgSend(v25, "horizontalSizeClass");

  objc_msgSend(*(id *)(v24 + 16), "setHidesNavigationBarDuringPresentation:", v26 == (id)1);
  swift_release();
  v27 = sub_100007E8C(&qword_1011A1750);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v29 = UIViewController.registerForTraitChanges<A>(_:handler:)(v28, sub_100344930, 0, ObjectType);
  swift_unknownObjectRelease(v29);
  swift_bridgeObjectRelease(v28);
  v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
  v31 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, v1);
  v32 = (uint64_t *)(v30 + *(_QWORD *)(*(_QWORD *)v30 + 104));
  v33 = *v32;
  v34 = v32[1];
  *v32 = (uint64_t)sub_1003461F8;
  v32[1] = v31;
  sub_10004BA30(v33, v34);
  v35 = sub_10033B4E8();
  v36 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v1);
  v37 = *(_QWORD *)(v35 + 72);
  v38 = *(_QWORD *)(v35 + 80);
  *(_QWORD *)(v35 + 72) = sub_100346200;
  *(_QWORD *)(v35 + 80) = v36;
  sub_10004BA30(v37, v38);
  swift_release();
  v39 = sub_100007E8C(&qword_1011A37B0);
  v54[3] = v39;
  v40 = sub_100049F68(v54);
  sub_10033BC18((uint64_t)v40);
  v55[3] = v39;
  v41 = sub_100049F68(v55);
  sub_10033BE08((uint64_t)v41);
  v56[3] = sub_100007E8C(&qword_1011AD6C0);
  v42 = sub_100049F68(v56);
  sub_10033BFFC((uint64_t)v42);
  v57[3] = sub_100007E8C(&qword_1011AD6D0);
  v43 = sub_100049F68(v57);
  sub_10033C20C((uint64_t)v43);
  v58[3] = sub_100007E8C(&qword_1011AD6E0);
  v44 = sub_100049F68(v58);
  sub_10033C3E8((uint64_t)v44);
  v59[3] = sub_100007E8C((uint64_t *)&unk_1011AD6F0);
  v45 = sub_100049F68(v59);
  sub_10033C5C4((uint64_t)v45);
  swift_arrayDestroy(v54, 6, (char *)&type metadata for Any + 8);
  v46 = sub_10033A038();
  objc_msgSend(v46, "setSpringLoaded:", 1);

  v47 = sub_10033A038();
  v48 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v48 + 16, v1);
  v49 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16, v1);
  v50 = type metadata accessor for CollectionViewDragDropController(0);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v51 = sub_1002E3B4C(v47, (uint64_t)sub_100346208, v48, (uint64_t)sub_100346210, v49, 0, 0, 0, 0);

  swift_release();
  swift_release();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_dragDropController] = v51;
  swift_release();
  v52 = *(_QWORD *)(*(_QWORD *)v30 + 128);
  v53 = *(_BYTE *)(v30 + v52);
  *(_BYTE *)(v30 + v52) = 1;
  sub_1008E3AA0(v53);
}

id sub_10033ADD0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE *v4;
  char v5;
  char v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v1 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10033A038();
  v5 = v4[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  if ((v5 & 1) != 0)
    v6 = 1;
  else
    v6 = *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_layoutVariantController] + 32);
  v7 = sub_10033A038();
  v8 = &v0[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope];
  v9 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160((uint64_t)&v8[*(int *)(v9 + 20)], (uint64_t)v3, (uint64_t *)&unk_1011B5660);
  v10 = type metadata accessor for Playlist.Folder(0);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v3, 1, v10);
  sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011B5660);
  if (v11 != 1)
  {
    v15 = objc_msgSend(v0, "traitCollection");
    v16 = objc_msgSend(v15, "horizontalSizeClass");

    v12 = v16 == (id)1;
    v13 = (uint64_t)v7;
    if ((v6 & 1) == 0)
      goto LABEL_6;
LABEL_8:
    v14 = sub_1005AEDD4(v13, v12, 0, 0, 0, 0);
    goto LABEL_9;
  }
  v12 = 0;
  v13 = (uint64_t)v7;
  if ((v6 & 1) != 0)
    goto LABEL_8;
LABEL_6:
  v14 = sub_1005AEAE0(v13, v12);
LABEL_9:
  v17 = v14;

  return v17;
}

double sub_10033AF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  double v8;
  id v9;
  id v10;
  double (*v11)(uint64_t, uint64_t);
  _BYTE v13[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0.0;
  v7 = (void *)Strong;
  if (*(_BYTE *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_layoutVariantController)
                + 32) == 1)
  {
    if (qword_10119BEC0 != -1)
      swift_once(&qword_10119BEC0, sub_10033888C);
    v8 = *(double *)&xmmword_1011AD5F0;
    v9 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    objc_msgSend(v9, "displayScale");

  }
  else
  {
    v10 = sub_10033A038();
    v11 = sub_1001091D0();

    v8 = v11(a1, a2);
    swift_release();
  }
  return v8;
}

unint64_t sub_10033B0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  unint64_t result;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v34 = a2;
  v35 = a3;
  v4 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist.Folder.Item(0);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3C50);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A3C60);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v36, &qword_10119DCC0);
  if (!v37)
  {
    sub_10004FF60((uint64_t)v36, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_7;
  }
  v21 = swift_dynamicCast(v16, v36, (char *)&type metadata for Any + 8, v17, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v21 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_7:
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A3C50);
    v29 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v22 = MusicLibrarySectionedResponse.sections.getter(v17);
  result = IndexPath.section.getter(v22);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v22 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v22+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * result, v7);
    v24 = swift_bridgeObjectRelease(v22);
    MusicLibrarySection.items.getter(v7, v24);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v26 = IndexPath.item.getter(v25);
    v27 = v33;
    MusicItemCollection.subscript.getter(v26, v33);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v6, v27);
    Playlist.Folder.Item.artwork.getter(v28);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  __break(1u);
  return result;
}

void sub_10033B3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  id v9;
  _BYTE v10[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if ((*(_BYTE *)(a1 + 56) & 1) != (*(_BYTE *)(a2 + 56) & 1))
    {
      v8 = sub_10033A038();
      v9 = sub_10033ADD0();
      sub_100108F1C(v9);

    }
  }
}

void sub_10033B470(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_10033A038();
    v6 = sub_10033ADD0();
    sub_100108F1C(v6);

  }
}

uint64_t sub_10033B4E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___searchController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___searchController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___searchController];
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v4, 121, 7);
    v5 = v0;
    v2 = sub_10040A500(0, 0, 0, (uint64_t)v5);

    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_10033B580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Class isa;
  id v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  char v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  _BYTE v54[24];
  _QWORD v55[4];
  char v56[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v52 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - v10;
  v12 = type metadata accessor for Playlist.Folder.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v53 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3C50);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A3C60);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v23 = (char *)Strong;
  sub_10004A160(a1, (uint64_t)v17, (uint64_t *)&unk_1011A3C50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {

    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A3C50);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_prefetchingController];
  v55[3] = v18;
  v25 = sub_100049F68(v55);
  (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 16))(v25, v21, v18);
  v26 = v24 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
  swift_beginAccess(v26, v54, 33, 0);
  sub_1000A5508((uint64_t)v55, v26, &qword_10119DCC0);
  swift_endAccess(v54);
  objc_msgSend(v23, "setNeedsUpdateContentUnavailableConfiguration");
  v27 = sub_10033A038();
  objc_msgSend(v27, "reloadData");

  sub_100339114();
  v28 = sub_10033B4E8();
  if (!MusicLibrarySectionedResponse.isEmpty.getter())
  {
    v36 = *(_BYTE *)(v28 + 48);
    *(_BYTE *)(v28 + 48) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_12;
    goto LABEL_11;
  }
  v29 = (uint64_t *)(*(_QWORD *)(sub_10033B4E8() + 104)
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
  v30 = v29[1];
  if (v30)
  {
    v51 = v8;
    v31 = *v29;
    swift_release();
    v32 = HIBYTE(v30) & 0xF;
    v33 = v31 & 0xFFFFFFFFFFFFLL;
    v8 = v51;
    if ((v30 & 0x2000000000000000) == 0)
      v32 = v33;
    v34 = v32 != 0;
    v35 = *(unsigned __int8 *)(v28 + 48);
    *(_BYTE *)(v28 + 48) = v34;
    if (v35 == v34)
      goto LABEL_12;
    goto LABEL_11;
  }
  swift_release();
  v47 = *(_BYTE *)(v28 + 48);
  *(_BYTE *)(v28 + 48) = 0;
  if ((v47 & 1) != 0)
LABEL_11:
    sub_100409F58();
LABEL_12:
  swift_release();
  v37 = (uint64_t)&v23[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem];
  swift_beginAccess(&v23[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem], v55, 0, 0);
  sub_10004A160(v37, (uint64_t)v11, (uint64_t *)&unk_1011AD730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);

    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011AD730);
  }
  else
  {
    v51 = v8;
    v38 = (uint64_t)v53;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v53, v11, v12);
    v50 = v12;
    v49 = sub_10033A038();
    v39 = v52;
    sub_1007CF724(v38, v52);
    v40 = type metadata accessor for IndexPath(0);
    v41 = *(_QWORD *)(v40 - 8);
    isa = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) != 1)
    {
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
    }
    v43 = v49;
    objc_msgSend(v49, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

    v44 = v50;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v53, v50);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v46 = (uint64_t)v51;
    v45(v51, 1, 1, v44);
    swift_beginAccess(v37, v54, 33, 0);
    sub_1000A5508(v46, v37, (uint64_t *)&unk_1011AD730);
    swift_endAccess(v54);

  }
}

double sub_10033BA70(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t Strong;
  double result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v6 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v22[-v10 - 8];
  a3 += 16;
  swift_beginAccess(a3, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController);
    swift_retain();

    if (a2)
      v16 = a1;
    else
      v16 = 0;
    if (a2)
      v17 = a2;
    else
      v17 = 0xE000000000000000;
    v18 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 96);
    swift_beginAccess(v18, v23, 0, 0);
    sub_10005B704(v18, (uint64_t)v11, _s9PlaylistsVMa);
    v19 = &v11[*(int *)(v6 + 28)];
    v20 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v20);
    *v19 = v16;
    v19[1] = v17;
    sub_10005B704(v18, (uint64_t)v8, _s9PlaylistsVMa);
    swift_beginAccess(v18, v22, 33, 0);
    sub_100344CA4((uint64_t)v11, v18);
    swift_endAccess(v22);
    sub_10018241C(v8);
    sub_10005B748((uint64_t)v11, _s9PlaylistsVMa);
    sub_10005B748((uint64_t)v8, _s9PlaylistsVMa);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10033BC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___globalHeaderRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___globalHeaderRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = (uint64_t *)UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  swift_bridgeObjectRetain();
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v13, v14, sub_100346140, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_10033BE08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_1003461C8, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_10033BFFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_100007E8C(&qword_1011B5740);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v19[-v9];
  v11 = v2 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listPlaylistCellRegistration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listPlaylistCellRegistration, v20, 0, 0);
  sub_10004A160(v11, (uint64_t)v10, &qword_1011B5740);
  v12 = sub_100007E8C(&qword_1011AD6C0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_10004FF60((uint64_t)v10, &qword_1011B5740);
  v14 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v2);
  v15 = swift_allocObject(&unk_1010C0670, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v17 = type metadata accessor for Playlist(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10034612C, v15, v16, v17);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess(v11, v19, 33, 0);
  sub_1000A5508((uint64_t)v7, v11, &qword_1011B5740);
  return swift_endAccess(v19);
}

uint64_t sub_10033C20C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011AD810);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listFolderCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listFolderCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011AD810);
  v10 = sub_100007E8C(&qword_1011AD6D0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011AD810);
  v12 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v14 = type metadata accessor for Playlist.Folder(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10034605C, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011AD810);
  return swift_endAccess(v16);
}

uint64_t sub_10033C3E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C(&qword_1011AD7F8);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridPlaylistCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridPlaylistCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, &qword_1011AD7F8);
  v10 = sub_100007E8C(&qword_1011AD6E0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, &qword_1011AD7F8);
  v12 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v14 = type metadata accessor for Playlist(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10034604C, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, &qword_1011AD7F8);
  return swift_endAccess(v16);
}

uint64_t sub_10033C5C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011AD7A0);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridFolderCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridFolderCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011AD7A0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011AD6F0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011AD7A0);
  v12 = swift_allocObject(&unk_1010C0468, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v14 = type metadata accessor for Playlist.Folder(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100345F98, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011AD7A0);
  return swift_endAccess(v16);
}

uint64_t sub_10033C7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  char v64[24];
  char v65[24];

  v6 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v6);
  v59 = (uint64_t *)((char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v8);
  v60 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v61 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v62 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v57 - v16;
  v18 = type metadata accessor for Playlist.Folder.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v57 - v23;
  a2 += 16;
  swift_beginAccess(a2, v65, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    goto LABEL_4;
  v26 = (char *)Strong;
  v58 = v10;
  v63 = a3;
  v27 = OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController;
  swift_retain();
  sub_1008DDBA4(a1, (uint64_t)v17);
  v28 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v19 + 48))(v17, 1, v18, v28) == 1)
  {

    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011AD730);
    a3 = v63;
LABEL_4:
    v29 = type metadata accessor for DragItem(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a3, 1, 1, v29);
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v17, v18);
  v31 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v31(v21, v24, v18);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v32 == enum case for Playlist.Folder.Item.folder(_:) || v32 != enum case for Playlist.Folder.Item.playlist(_:))
  {
    v44 = *(void (**)(char *, uint64_t))(v19 + 8);
    v44(v24, v18);

    v45 = type metadata accessor for DragItem(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v63, 1, 1, v45);
    return ((uint64_t (*)(char *, uint64_t))v44)(v21, v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v62, v21, v58);
    v33 = *(_QWORD *)&v26[v27] + *(_QWORD *)(**(_QWORD **)&v26[v27] + 96);
    swift_beginAccess(v33, v64, 0, 0);
    v34 = v59;
    sub_10005B704(v33, (uint64_t)v59, _s9PlaylistsVMa);
    v35 = sub_100007E8C((uint64_t *)&unk_1011AD770);
    v36 = *(unsigned __int8 *)(v19 + 80);
    v37 = (v36 + 32) & ~v36;
    v38 = swift_allocObject(v35, v37 + *(_QWORD *)(v19 + 72), v36 | 7);
    *(_OWORD *)(v38 + 16) = xmmword_100EA7AA0;
    v31((char *)(v38 + v37), v24, v18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v14, 1, 1, v18);
    v39 = v60;
    sub_10010C264(v38, (uint64_t)v14, (uint64_t)v60);
    swift_bridgeObjectRelease(v38);
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011AD730);
    sub_10005B748((uint64_t)v34, _s9PlaylistsVMa);
    v40 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40);
    if ((_DWORD)v42 == 1)
    {
      sub_10004FF60((uint64_t)v39, (uint64_t *)&unk_1011A3D60);
      v43 = 0;
    }
    else
    {
      v43 = (char *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v42);
      (*(void (**)(id, uint64_t))(v41 + 8))(v39, v40);
    }
    v60 = v43;
    v46 = v62;
    v47 = sub_100869080(v43);
    v48 = sub_100869D18(v47, (uint64_t)&off_1010ABB28);
    swift_bridgeObjectRelease(v47);
    v59 = sub_10047D540((uint64_t)v48);
    swift_bridgeObjectRelease(v48);
    v49 = type metadata accessor for DragItem(0);
    v50 = v63;
    v51 = (char *)v63 + *(int *)(v49 + 20);
    v52 = v61;
    v53 = v58;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v51, v46, v58);
    v54 = enum case for GenericMusicItem.playlist(_:);
    v55 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v51, v54, v55);
    v56 = type metadata accessor for DragItem.Source(0);
    swift_storeEnumTagMultiPayload(v51, v56, 1);
    *v50 = v59;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v50, 0, 1, v49);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v62, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v24, v18);
  }
}

_QWORD *sub_10033CD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  void *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  void (*v38)(char *, uint64_t);
  _QWORD *v39;
  id v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char v69[32];

  v4 = sub_100007E8C(&qword_1011AD888);
  __chkstk_darwin(v4);
  v58 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for DragDropToPlaylist.Destination(0);
  __chkstk_darwin(v59);
  v60 = (uint64_t *)((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Playlist(0);
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  __chkstk_darwin(v7);
  v63 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist.Folder.Item(0);
  v65 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v64 = (char *)&v55 - v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v55 - v21;
  v23 = type metadata accessor for IndexPath(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v69, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v28 = (void *)Strong;
  sub_10004A160(a1, (uint64_t)v22, (uint64_t *)&unk_1011A3D50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {

    sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A3D50);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
  swift_retain();
  sub_1008DDBA4((uint64_t)v26, (uint64_t)v11);
  v29 = swift_release();
  v30 = v65;
  v31 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v65 + 48))(v11, 1, v12, v29) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);

    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011AD730);
    return _swiftEmptyArrayStorage;
  }
  v32 = v64;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v64, v11, v31);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v14, v32, v31);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v14, v31);
  if (v33 == enum case for Playlist.Folder.Item.folder(_:) || v33 != enum case for Playlist.Folder.Item.playlist(_:))
  {

    v38 = *(void (**)(char *, uint64_t))(v30 + 8);
    v38(v32, v31);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    v38(v14, v31);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t))(v30 + 96))(v14, v31);
  v34 = v61;
  v35 = v62;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v63, v14, v62);
  v36 = sub_10033A038();
  v37 = UICollectionView.isDraggingCell(at:)();

  if ((v37 & 1) != 0)
  {

    (*(void (**)(char *, uint64_t))(v34 + 8))(v63, v35);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v31);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    return _swiftEmptyArrayStorage;
  }
  v41 = v28;
  v57 = v41;
  v42 = objc_msgSend(v41, "traitCollection");
  v43 = sub_10013ADBC();
  UITraitCollection.subscript.getter(&v66, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v43);

  v56 = v66;
  v44 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v58, v63, v35);
  v45 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v46(v44 + *(int *)(v45 + 20), 1, 1, v23);
  v47 = (_QWORD *)(v44 + *(int *)(v45 + 24));
  *v47 = 0;
  v47[1] = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  v46((uint64_t)v19, 1, 1, v23);
  sub_1008DC524((uint64_t)v19, (uint64_t)&v66);
  sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011A3D50);
  v49 = v59;
  v48 = (uint64_t)v60;
  *v60 = v56;
  sub_100065228(v44, v48 + *(int *)(v49 + 20), &qword_1011AD888);
  sub_100064EF0((uint64_t)&v66, v48 + *(int *)(v49 + 24));
  v50 = sub_100432944(0, 1, 1, _swiftEmptyArrayStorage);
  v52 = v50[2];
  v51 = v50[3];
  if (v52 >= v51 >> 1)
    v50 = sub_100432944((_QWORD *)(v51 > 1), v52 + 1, 1, v50);
  v67 = v49;
  v68 = sub_100048748(&qword_1011AD890, type metadata accessor for DragDropToPlaylist.Destination, (uint64_t)&unk_100ED0FE8);
  v53 = sub_100049F68(&v66);
  sub_10005B704(v48, (uint64_t)v53, type metadata accessor for DragDropToPlaylist.Destination);
  v50[2] = v52 + 1;
  sub_100064C48(&v66, (uint64_t)&v50[5 * v52 + 4]);
  sub_10005B748(v48, type metadata accessor for DragDropToPlaylist.Destination);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
  v39 = sub_10047D8EC((uint64_t)v50);

  v54 = swift_bridgeObjectRelease(v50);
  (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v64, v31, v54);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  return v39;
}

void sub_10033D3A4(int a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v13[6];
  objc_super v14;

  v2 = v1;
  v14.receiver = v1;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "viewWillAppear:", a1 & 1);
  v4 = sub_10033A038();
  v5 = objc_msgSend(v2, "transitionCoordinator");
  UICollectionView.clearSelection(using:animated:)(v5, a1);

  v6 = objc_msgSend(v2, "transitionCoordinator", swift_unknownObjectRelease(v5).n128_f64[0]);
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject(&unk_1010C0468, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v2);
    v13[4] = sub_1003461D4;
    v13[5] = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1005CE710;
    v13[3] = &unk_1010C0688;
    v9 = _Block_copy(v13);
    objc_msgSend(v7, "animateAlongsideTransition:completion:", 0, v9, swift_release().n128_f64[0]);
    _Block_release(v9);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
    v11 = *(_QWORD *)(*(_QWORD *)v10 + 128);
    v12 = *(_BYTE *)(v10 + v11);
    *(_BYTE *)(v10 + v11) = 1;
    sub_1008E3AA0(v12);
  }
}

double sub_10033D510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController);
    swift_retain();

    v7 = *(_QWORD *)(*(_QWORD *)v6 + 128);
    v8 = *(_BYTE *)(v6 + v7);
    *(_BYTE *)(v6 + v7) = 1;
    sub_1008E3AA0(v8);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10033D5D0(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __n128 v28;
  char v31[24];
  objc_super v32;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = &v31[-v10 - 8];
  v32.receiver = v2;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, "viewDidAppear:", a1 & 1, v9);
  v12 = MetricsReportingController.shared.unsafeMutableAddressor();
  v13 = (uint64_t *)&v2[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope];
  v14 = qword_10119B938;
  v15 = (id)*v12;
  if (v14 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v16 = _s9PlaylistsV5ScopeVMa(0);
  v17 = (uint64_t *)sub_100048B14(v16, (uint64_t)qword_10124C8A8);
  if (sub_10010DC18(v13, v17))
    v18 = MetricsEvent.Page.libraryMadeForYou.unsafeMutableAddressor();
  else
    v18 = MetricsEvent.Page.libraryPlaylistsList.unsafeMutableAddressor();
  sub_10005B704(v18, (uint64_t)v7, type metadata accessor for MetricsEvent.Page);
  sub_10005B6C0((uint64_t)v7, (uint64_t)v11, type metadata accessor for MetricsEvent.Page);
  sub_100540B34();
  v20 = v19;
  v22 = v21;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v23 = qword_10124C790;
  swift_retain();
  v24 = GroupActivitiesManager.hasJoined.getter();
  v25 = GroupActivitiesManager.participantsCount.getter();
  v26 = (uint64_t *)(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v31, 0, 0);
  v27 = *v26;
  v28 = swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v15) + 0xA0))(v11, v20, v22, v24 & 1, v25, v27, v28);

  swift_bridgeObjectRelease(v22);
  return sub_10005B748((uint64_t)v11, type metadata accessor for MetricsEvent.Page);
}

void sub_10033D8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  __n128 v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _BYTE v33[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011AD860);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = sub_100007E8C(&qword_1011A3C60);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a5 += 16;
  swift_beginAccess(a5, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
                    + 112);
    v20 = swift_beginAccess(v19, v29, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(v19, 1, v13, v20))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v19, v13);
      v21 = MusicLibrarySectionedResponse.isEmpty.getter();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      if (!v21)
      {
        sub_10033DB90((uint64_t)v12);
        v22 = swift_allocObject(&unk_1010C0468, 24, 7);
        v23 = swift_unknownObjectWeakInit(v22 + 16, v18);
        __chkstk_darwin(v23);
        *(&v28 - 4) = (uint64_t)v12;
        *(&v28 - 3) = (uint64_t)sub_100346148;
        *(&v28 - 2) = v22;
        swift_retain();
        v24 = sub_100007E8C((uint64_t *)&unk_1011AD870);
        v25 = sub_10034615C();
        v26 = UIHostingConfiguration<>.init(content:)(sub_100346150, &v28 - 6, v24, v25);
        v27 = static Edge.Set.all.getter(v26);
        *((_QWORD *)&v31 + 1) = v6;
        v32 = sub_100049F28((unint64_t *)&unk_1011B8D90, (uint64_t *)&unk_1011AD860, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
        sub_100049F68(&v30);
        UIHostingConfiguration.margins(_:_:)(v27, v6, 0.0);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_release();
        sub_10004FF60((uint64_t)v12, &qword_1011A9A10);
        swift_release();
        UICollectionViewCell.contentConfiguration.setter(&v30);

        return;
      }
    }

  }
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  UICollectionViewCell.contentConfiguration.setter(&v30);
}

uint64_t sub_10033DB90@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  double (*v38)(char *, unint64_t, uint64_t);
  __n128 v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[2];
  uint64_t v69;
  char v70[24];
  char v71[32];

  v2 = v1;
  v67 = a1;
  v59 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v59);
  v60 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v11);
  v61 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v13);
  v66 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v15);
  v62 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v63 = *(_QWORD *)(v17 - 8);
  v64 = v17;
  __chkstk_darwin(v17);
  v58 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3C50);
  __chkstk_darwin(v19);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A3C60);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v2;
  v26 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
  v27 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 112);
  swift_beginAccess(v27, v71, 0, 0);
  v28 = v27;
  v29 = v22;
  sub_10004A160(v28, (uint64_t)v21, (uint64_t *)&unk_1011A3C50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3C50);
    v30 = v67;
LABEL_10:
    v48 = type metadata accessor for PlaybackIntentDescriptor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v30, 1, 1, v48);
  }
  v57 = v23;
  v31 = v25;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v29);
  v32 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 96);
  swift_beginAccess(v32, v70, 0, 0);
  sub_10005B704(v32, v66, _s9PlaylistsVMa);
  v33 = MusicLibrarySectionedResponse.sections.getter(v29);
  v34 = v33;
  *(_QWORD *)&v68[0] = _swiftEmptyArrayStorage;
  v35 = *(_QWORD *)(v33 + 16);
  if (v35)
  {
    v55 = v31;
    v56 = v29;
    v36 = v33 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v37 = *(_QWORD *)(v8 + 72);
    v38 = *(double (**)(char *, unint64_t, uint64_t))(v8 + 16);
    do
    {
      v39.n128_f64[0] = v38(v10, v36, v7);
      MusicLibrarySection.items.getter(v7, v39);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_100806758((uint64_t)v6);
      v36 += v37;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease(v34);
    v30 = v67;
    v40 = *(_QWORD **)&v68[0];
    v41 = v65;
    v29 = v56;
    v31 = v55;
  }
  else
  {
    swift_bridgeObjectRelease(v33);
    v40 = _swiftEmptyArrayStorage;
    v30 = v67;
    v41 = v65;
  }
  v42 = type metadata accessor for Playlist.Folder.Item(0);
  v43 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v61, 1, 1, v42);
  v44 = v62;
  v45 = v66;
  sub_10010C264((uint64_t)v40, v43, v62);
  swift_bridgeObjectRelease(v40);
  sub_10004FF60(v43, (uint64_t *)&unk_1011AD730);
  sub_10005B748(v45, _s9PlaylistsVMa);
  v47 = v63;
  v46 = v64;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v44, 1, v64) == 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v29);
    sub_10004FF60(v44, (uint64_t *)&unk_1011A3D60);
    goto LABEL_10;
  }
  v50 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v58, v44, v46);
  v51 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v50, v46);
  swift_storeEnumTagMultiPayload(v51, v59, 1);
  v69 = 0;
  memset(v68, 0, sizeof(v68));
  v52 = v41;
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v51, (uint64_t)v68, 3, 0, 0, 1, 0, 1, v30, (objc_class *)v41);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v29);
  v53 = type metadata accessor for PlaybackIntentDescriptor(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v30, 0, 1, v53);
}

void sub_10033E128(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "navigationItem");

    v5 = objc_msgSend(v4, "searchController");
    if (v5)
    {
      v6 = objc_msgSend(v5, "searchBar");

      objc_msgSend(v6, "resignFirstResponder");
    }
  }
}

void sub_10033E1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t KeyPath;
  unint64_t v27;
  _QWORD v28[2];
  unint64_t v29;
  _QWORD v30[5];
  _BYTE v31[24];
  _BYTE v32[24];

  v7 = sub_100007E8C(&qword_1011A3C60);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v28 - v16;
  a5 += 16;
  swift_beginAccess(a5, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v19 = (void *)Strong;
    v28[0] = a1;
    v20 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
                    + 112);
    v21 = swift_beginAccess(v20, v31, 0, 0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v20, 1, v7, v21))
    {

      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
    v22 = MusicLibrarySectionedResponse.sections.getter(v7);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v24 = IndexPath.section.getter(v23);
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(_QWORD *)(v22 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v24, v11);
      v25 = swift_bridgeObjectRelease(v22);
      (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 32))(v17, v14, v11, v25);
      KeyPath = swift_getKeyPath(&unk_100EB57E0);
      MusicLibrarySection.subscript.getter(KeyPath, v11);
      swift_release();
      v27 = v29;
      sub_10061170C(v28[1], v29, v30);
      swift_bridgeObjectRelease(v27);
      UICollectionViewCell.contentConfiguration.setter(v30);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return;
    }
    __break(1u);
  }
}

void sub_10033E430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _BYTE v30[24];

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E50);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v29 - v13;
  a4 += 16;
  swift_beginAccess(a4, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v16 = (void *)Strong;
    __chkstk_darwin(Strong);
    v29[-4] = a3;
    v29[-3] = v17;
    v29[-2] = a5;
    v18 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
    v19 = _s8ListCellVMa(255);
    v20 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    v29[0] = v19;
    v29[1] = v20;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v29, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v22 = UIHostingConfiguration<>.init(content:)(sub_100346134, &v29[-6], v18, OpaqueTypeConformance2);
    v23 = static Edge.Set.horizontal.getter(v22);
    v24 = (char *)sub_10033A038();
    v25 = *(double *)&v24[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v23, v8, v25);
    v26 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
    v27 = v26(v11, v8);
    v28 = static Edge.Set.vertical.getter(v27);
    v29[3] = v8;
    v29[4] = sub_100049F28((unint64_t *)&unk_1011AD850, (uint64_t *)&unk_1011A3E50, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v29);
    UIHostingConfiguration.margins(_:_:)(v28, v8, 8.0);
    v26(v14, v8);
    UICollectionViewCell.contentConfiguration.setter(v29);

  }
}

uint64_t sub_10033E658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  _BOOL8 v41;
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  NSString *v66;
  __n128 v67;
  int v68;
  char *v69;
  NSString *v70;
  int v71;
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  __n128 v78;
  char *v79;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[56];

  v97 = a3;
  v91 = type metadata accessor for MusicFavoriteStatus(0);
  v85 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v84 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v83 = (char *)&v81 - v7;
  v8 = type metadata accessor for Playlist(0);
  v89 = *(_QWORD *)(v8 - 8);
  v90 = v8;
  __chkstk_darwin(v8);
  v88 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v81 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v18);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)_s8ListCellVMa(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
  v94 = *(_QWORD *)(v27 - 8);
  v95 = v27;
  __chkstk_darwin(v27);
  v93 = (char *)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = Playlist.artworkViewModel.getter((uint64_t)v20);
  Playlist.variant.getter(v29);
  v30 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 0, 10, v30);
  if (qword_10119BEC0 != -1)
    swift_once(&qword_10119BEC0, sub_10033888C);
  ArtworkImage.Size.init(cgSize:)(xmmword_1011AD5F0, *((uint64_t *)&xmmword_1011AD5F0 + 1), 0, (uint64_t)v98);
  v31 = Corner.small.unsafeMutableAddressor();
  v32 = *v31;
  v33 = v31[1];
  v34 = *((_BYTE *)v31 + 16);
  v92 = v23;
  v35 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v20, (uint64_t)v17, 0, 1, (uint64_t)v98, v32, v33, v34, (uint64_t)v23);
  v36 = Playlist.name.getter(v35);
  v86 = v37;
  v87 = v36;
  v38 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope);
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v39 = _s9PlaylistsV5ScopeVMa(0);
  v40 = (uint64_t *)sub_100048B14(v39, (uint64_t)qword_10124C8A8);
  v41 = sub_10010DC18(v38, v40);
  v42 = v88;
  v96 = a2;
  if (v41)
  {
    Playlist.lastModifiedDate.getter(v41);
    v43 = v10;
    v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    v45 = v82;
    v46 = v44(v14, 1, v82);
    if ((_DWORD)v46 == 1)
    {
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A30A0);
      v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 16))(v42, a1, v90);
    }
    else
    {
      v55 = v81;
      static Date.now.getter(v46);
      Date.lastUpdatedDateString(relativeTo:)();
      v49 = v56;
      v57 = v43;
      v51 = v58;
      v59 = *(void (**)(char *, uint64_t))(v57 + 8);
      v59(v55, v45);
      v59(v14, v45);
      v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 16))(v42, a1, v90);
      if (v51)
      {
LABEL_11:
        v53 = v84;
        v52 = v85;
        v54 = v83;
        v48 = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v42, v90);
        goto LABEL_12;
      }
    }
    v49 = Playlist.curatorName.getter(v47);
    v51 = v60;
    goto LABEL_11;
  }
  v48 = Playlist.curatorName.getter(v41);
  v49 = v48;
  v51 = v50;
  v53 = v84;
  v52 = v85;
  v54 = v83;
LABEL_12:
  Playlist.favoriteStatus.getter(v48);
  v61 = v91;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v53, enum case for MusicFavoriteStatus.favorited(_:), v91);
  v62 = static MusicFavoriteStatus.== infix(_:_:)(v54, v53);
  v63 = *(void (**)(char *, uint64_t))(v52 + 8);
  v63(v53, v61);
  v63(v54, v61);
  v64 = &v26[v24[8]];
  v65 = type metadata accessor for ContentRating(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 1, 1, v65);
  v66 = UIFontTextStyleBody;
  v68 = static HierarchicalShapeStyle.primary.getter(v67);
  v69 = &v26[v24[9]];
  *((_QWORD *)v69 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v69 + 5) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v69 + 2) = v68;
  v70 = UIFontTextStyleSubheadline;
  v71 = static HierarchicalShapeStyle.secondary.getter(v70);
  *((_QWORD *)v69 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v69 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v69 + 14) = v71;
  *(_QWORD *)v69 = v66;
  *((_QWORD *)v69 + 6) = v70;
  v69[96] = 0;
  sub_10005B6C0((uint64_t)v92, (uint64_t)v26, type metadata accessor for ArtworkImage.Info);
  v72 = &v26[v24[5]];
  v73 = v86;
  *(_QWORD *)v72 = v87;
  *((_QWORD *)v72 + 1) = v73;
  v74 = (uint64_t *)&v26[v24[6]];
  *v74 = v49;
  v74[1] = v51;
  v26[v24[7]] = v62 & 1;
  v75 = &v26[v24[10]];
  *(_QWORD *)v75 = 0;
  *((_QWORD *)v75 + 1) = 0;
  v76 = &v26[v24[11]];
  *(_QWORD *)v76 = swift_getKeyPath(&unk_100EB57B0);
  v77 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v76, v77, 0);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  v78 = swift_retain();
  v79 = v93;
  View.artworkCaching(owner:)(v78);
  swift_release();
  sub_10005B748((uint64_t)v26, _s8ListCellVMa);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v94 + 32))(v97, v79, v95);
}

void sub_10033ED00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  _BYTE v25[24];

  v6 = sub_100007E8C(&qword_1011AD820);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v24 - v11;
  a4 += 16;
  swift_beginAccess(a4, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v14 = (void *)Strong;
    __chkstk_darwin(Strong);
    v24[-2] = a3;
    v15 = sub_100007E8C(&qword_1011AD828);
    v16 = sub_10034606C();
    v17 = UIHostingConfiguration<>.init(content:)(sub_100346064, &v24[-4], v15, v16);
    v18 = static Edge.Set.horizontal.getter(v17);
    v19 = (char *)sub_10033A038();
    v20 = *(double *)&v19[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v18, v6, v20);
    v21 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v22 = v21(v9, v6);
    v23 = static Edge.Set.vertical.getter(v22);
    v24[3] = v6;
    v24[4] = sub_100049F28((unint64_t *)&unk_1011AD840, &qword_1011AD820, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v24);
    UIHostingConfiguration.margins(_:_:)(v23, v6, 8.0);
    v21(v12, v6);
    UICollectionViewCell.contentConfiguration.setter(v24);

  }
}

uint64_t sub_10033EEE4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  NSString *v21;
  __n128 v22;
  int v23;
  _BYTE *v24;
  NSString *v25;
  int v26;
  uint64_t *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[48];

  v0 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v0);
  v2 = &v34[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v3);
  v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (int *)_s8ListCellVMa(0);
  __chkstk_darwin(v6);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v10 = enum case for Playlist.Variant.folder(_:);
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 104))(v2, v10, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v2, 0, 1, v11);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v2, 0, 10, v13);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4050000000000000, 0, 0x4050000000000000, 0, 0x3FF0000000000000, 0, 2, (uint64_t)v34);
  v14 = Corner.small.unsafeMutableAddressor();
  v15 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v5, (uint64_t)v2, 0, 1, (uint64_t)v34, *v14, v14[1], *((_BYTE *)v14 + 16), (uint64_t)v8);
  v16 = Playlist.Folder.name.getter(v15);
  v18 = v17;
  v19 = &v8[v6[8]];
  v20 = type metadata accessor for ContentRating(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = UIFontTextStyleBody;
  v23 = static HierarchicalShapeStyle.primary.getter(v22);
  v24 = &v8[v6[9]];
  *((_QWORD *)v24 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v24 + 5) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v24 + 2) = v23;
  v25 = UIFontTextStyleSubheadline;
  v26 = static HierarchicalShapeStyle.secondary.getter(v25);
  *((_QWORD *)v24 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v24 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v24 + 14) = v26;
  *(_QWORD *)v24 = v21;
  *((_QWORD *)v24 + 6) = v25;
  v24[96] = 0;
  v27 = (uint64_t *)&v8[v6[5]];
  *v27 = v16;
  v27[1] = v18;
  v28 = &v8[v6[6]];
  *v28 = 0;
  v28[1] = 0;
  v8[v6[7]] = 0;
  v29 = &v8[v6[10]];
  *v29 = 0;
  v29[1] = 0;
  v30 = &v8[v6[11]];
  *v30 = swift_getKeyPath(&unk_100EB57B0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v30, v31, 0);
  v32 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  View.placeholderStyle(_:)((uint64_t)sub_10033F1F8, 0, (uint64_t)v6, v32);
  return sub_10005B748((uint64_t)v8, _s8ListCellVMa);
}

void sub_10033F1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3DF0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (void *)Strong;
    __chkstk_darwin(Strong);
    v19[-2] = a3;
    v19[-1] = v12;
    v13 = sub_100007E8C(&qword_1011C6B50);
    v14 = _s8GridCellVMa(255);
    v15 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
    v19[0] = v14;
    v19[1] = v15;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v17 = UIHostingConfiguration<>.init(content:)(sub_100346054, &v19[-4], v13, OpaqueTypeConformance2);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v6;
    v19[4] = sub_100049F28((unint64_t *)&unk_1011AD800, (uint64_t *)&unk_1011A3DF0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

uint64_t sub_10033F3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  _BOOL8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  char *v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _BYTE v91[56];

  v89 = a3;
  v87 = type metadata accessor for MusicFavoriteStatus(0);
  v78 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v81 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v77 = (char *)&v74 - v7;
  v76 = type metadata accessor for Playlist(0);
  v83 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v90 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Date(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v17);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)_s8GridCellVMa(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C(&qword_1011C6B50);
  v85 = *(_QWORD *)(v26 - 8);
  v86 = v26;
  __chkstk_darwin(v26);
  v84 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = Playlist.artworkViewModel.getter((uint64_t)v19);
  Playlist.variant.getter(v28);
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v16, 0, 10, v29);
  v30 = (char *)sub_10033A038();
  v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];

  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v31, 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v91);
  v32 = Corner.medium.unsafeMutableAddressor();
  v33 = *v32;
  v34 = v32[1];
  v35 = *((_BYTE *)v32 + 16);
  v82 = v22;
  v36 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v19, (uint64_t)v16, 0, 1, (uint64_t)v91, v33, v34, v35, (uint64_t)v22);
  v37 = Playlist.name.getter(v36);
  v79 = v38;
  v80 = v37;
  v88 = a2;
  v39 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope);
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v40 = _s9PlaylistsV5ScopeVMa(0);
  v41 = (uint64_t *)sub_100048B14(v40, (uint64_t)qword_10124C8A8);
  v42 = sub_10010DC18(v39, v41);
  if (v42)
  {
    Playlist.lastModifiedDate.getter(v42);
    v43 = v74;
    v44 = v75;
    v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48))(v13, 1, v75);
    if ((_DWORD)v45 == 1)
    {
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A30A0);
      v46 = v76;
      v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 16))(v90, a1, v76);
    }
    else
    {
      static Date.now.getter(v45);
      Date.lastUpdatedDateString(relativeTo:)();
      v49 = v54;
      v51 = v55;
      v56 = *(void (**)(char *, uint64_t))(v43 + 8);
      v56(v10, v44);
      v56(v13, v44);
      v57 = v90;
      v46 = v76;
      v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 16))(v90, a1, v76);
      if (v51)
      {
LABEL_9:
        v53 = v77;
        v52 = v78;
        v48 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v57, v46);
        goto LABEL_10;
      }
    }
    v58 = Playlist.curatorName.getter(v47);
    v57 = v90;
    v49 = v58;
    v51 = v59;
    goto LABEL_9;
  }
  v48 = Playlist.curatorName.getter(v42);
  v49 = v48;
  v51 = v50;
  v53 = v77;
  v52 = v78;
LABEL_10:
  Playlist.favoriteStatus.getter(v48);
  v60 = v81;
  v61 = v87;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v81, enum case for MusicFavoriteStatus.favorited(_:), v87);
  v62 = static MusicFavoriteStatus.== infix(_:_:)(v53, v60);
  v63 = *(void (**)(char *, uint64_t))(v52 + 8);
  v63(v60, v61);
  v63(v53, v61);
  v64 = &v25[v23[9]];
  v65 = type metadata accessor for ContentRating(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 1, 1, v65);
  sub_10005B6C0((uint64_t)v82, (uint64_t)v25, type metadata accessor for ArtworkImage.Info);
  *(_QWORD *)&v25[v23[5]] = 0x3FF0000000000000;
  v66 = &v25[v23[6]];
  v67 = v79;
  *(_QWORD *)v66 = v80;
  *((_QWORD *)v66 + 1) = v67;
  v68 = &v25[v23[7]];
  *(_QWORD *)v68 = v49;
  *((_QWORD *)v68 + 1) = v51;
  v25[v23[8]] = v62 & 1;
  v69 = &v25[v23[10]];
  *(_QWORD *)v69 = swift_getKeyPath(&unk_100EB57B0);
  v70 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v69, v70, 0);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
  v71 = swift_retain();
  v72 = v84;
  View.artworkCaching(owner:)(v71);
  swift_release();
  sub_10005B748((uint64_t)v25, _s8GridCellVMa);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v85 + 32))(v89, v72, v86);
}

void sub_10033FA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v6 = sub_100007E8C(&qword_1011AD7B0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (void *)Strong;
    __chkstk_darwin(Strong);
    v19[-2] = v12;
    v19[-1] = a3;
    v13 = sub_100007E8C(&qword_1011AD7B8);
    v14 = sub_100044B54(&qword_1011AD7C0);
    v15 = sub_100345FA8();
    v19[0] = v14;
    v19[1] = v15;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v17 = UIHostingConfiguration<>.init(content:)(sub_100345FA0, &v19[-4], v13, OpaqueTypeConformance2);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v6;
    v19[4] = sub_100049F28(&qword_1011AD7E0, &qword_1011AD7B0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

uint64_t sub_10033FB9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  _QWORD v35[2];
  _BYTE v36[48];

  v35[0] = a1;
  v35[1] = a2;
  v2 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v2);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)_s8GridCellVMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AD7C0);
  __chkstk_darwin(v11);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  v15 = enum case for Playlist.Variant.folder(_:);
  v16 = type metadata accessor for Playlist.Variant(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v4, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 0, 10, v18);
  v19 = (char *)sub_10033A038();
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];

  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v20, 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v36);
  v21 = Corner.medium.unsafeMutableAddressor();
  v22 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v7, (uint64_t)v4, 0, 1, (uint64_t)v36, *v21, v21[1], *((_BYTE *)v21 + 16), (uint64_t)v10);
  v23 = Playlist.Folder.name.getter(v22);
  v25 = v24;
  v26 = &v10[v8[9]];
  v27 = type metadata accessor for ContentRating(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_QWORD *)&v10[v8[5]] = 0x3FF0000000000000;
  v28 = (uint64_t *)&v10[v8[6]];
  *v28 = v23;
  v28[1] = v25;
  v29 = &v10[v8[7]];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v10[v8[8]] = 0;
  v30 = &v10[v8[10]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EB57B0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v30, v31, 0);
  v32 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
  View.placeholderStyle(_:)((uint64_t)sub_10033F1F8, 0, (uint64_t)v8, v32);
  sub_10005B748((uint64_t)v10, _s8GridCellVMa);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100345FA8();
  v33 = swift_retain();
  View.artworkCaching(owner:)(v33);
  swift_release();
  return sub_10004FF60((uint64_t)v13, &qword_1011AD7C0);
}

uint64_t sub_10033FF28(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  v4[3] = &type metadata for Color;
  v4[4] = &protocol witness table for Color;
  v4[0] = static Color.accentColor.getter(a1, a2);
  return sub_1000A5508((uint64_t)v4, a1, &qword_1011AD7E8);
}

uint64_t sub_10033FF7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  uint64_t *v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160((uint64_t)v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t *)&unk_1011B5660);
  v5 = type metadata accessor for Playlist.Folder(0);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5);
  sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011B5660);
  if (v6 == 1)
  {
    if (qword_10119B938 != -1)
      swift_once(&qword_10119B938, sub_10010BB4C);
    v7 = (uint64_t *)sub_100048B14(v4, (uint64_t)qword_10124C8A8);
    if (sub_10010DC18(v0, v7))
      v8 = AccessibilityIdentifier.libraryMadeForYouView.unsafeMutableAddressor();
    else
      v8 = AccessibilityIdentifier.libraryPlaylistsView.unsafeMutableAddressor();
    v10 = *v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9._object = (void *)0x8000000100E369E0;
    v9._countAndFlagsBits = 0xD00000000000001CLL;
    return AccessibilityIdentifier.init(name:)(v9).rawValue._countAndFlagsBits;
  }
  return v10;
}

uint64_t sub_1003400CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  v15 = v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___actionMetricsReportingContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___actionMetricsReportingContext, v40, 0, 0);
  sub_10004A160(v15, (uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
    return sub_10005B6C0((uint64_t)v14, (uint64_t)a1, type metadata accessor for Actions.MetricsReportingContext);
  v36 = v17;
  v37 = a1;
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v18 = MetricsEvent.Page.libraryPlaylistsList.unsafeMutableAddressor();
  sub_10005B704(v18, (uint64_t)v8, type metadata accessor for MetricsEvent.Page);
  v19 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
  sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011A8780);
  v20 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v34 = v22;
  v35 = v21;
  v23 = qword_10119B8B8;
  v24 = (id)*v20;
  if (v23 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v25 = qword_10124C790;
  swift_retain();
  v26 = GroupActivitiesManager.hasJoined.getter();
  v27 = GroupActivitiesManager.participantsCount.getter();
  v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v39, 0, 0);
  v29 = *v28;

  swift_release();
  v30 = v26 & 1;
  v31 = v37;
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v5, v35, v34, 0, 0, v30, v37, v27, v29);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A8780);
  sub_10005B704((uint64_t)v31, (uint64_t)v11, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v16);
  swift_beginAccess(v15, v38, 33, 0);
  sub_1000A5508((uint64_t)v11, v15, (uint64_t *)&unk_1011A9990);
  return swift_endAccess(v38);
}

uint64_t sub_1003403C8()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  unint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16[9];
  char v17[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10018D478();
  UITraitCollection.subscript.getter(v16, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v3);

  v4 = v16[0];
  v5 = sub_1007607C4(v16[0]);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0
    || (v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController]
           + *(_QWORD *)(**(_QWORD **)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController]
                       + 96),
        swift_beginAccess(v6, v17, 0, 0),
        (*(_BYTE *)(v6 + 8) & 1) != 0))
  {
    v7 = 1;
    return v7 & 1;
  }
  v9 = *(_QWORD *)(v6 + *(int *)(_s9PlaylistsVMa(0) + 32));
  if (!*(_QWORD *)(v9 + 16))
  {
    v7 = 0;
    return v7 & 1;
  }
  Hasher.init(_seed:)(v16, *(_QWORD *)(v9 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v16, 0x64616F6C6E776F64, 0xE900000000000073);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
    v7 = 0;
    goto LABEL_18;
  }
  v13 = ~v11;
  while (!*(_BYTE *)(*(_QWORD *)(v9 + 48) + v12))
  {
    v15 = 0xE300000000000000;
    v14 = 7105633;
LABEL_12:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0x64616F6C6E776F64, 0xE900000000000073, 0);
    swift_bridgeObjectRelease(v15);
    if ((v7 & 1) == 0)
    {
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
        continue;
    }
    goto LABEL_18;
  }
  if (*(_BYTE *)(*(_QWORD *)(v9 + 48) + v12) == 1)
  {
    v14 = 0x657469726F766166;
    v15 = 0xE900000000000073;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease(v9);
  v7 = 1;
  v9 = 0xE900000000000073;
LABEL_18:
  swift_bridgeObjectRelease(v9);
  return v7 & 1;
}

uint64_t sub_10034081C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  BOOL v13;
  uint64_t v14;
  void *v15;
  void *v17;
  char v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v7 = sub_100007E8C(&qword_1011A37B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v12 = (void *)v11[1];
  v13 = *v11 == a2 && v12 == a3;
  if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a2, a3, 0) & 1) == 0)
  {
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    if (v14 != a2 || v15 != a3)
    {
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a2, a3, 0);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) != 0)
      {
LABEL_14:
        sub_10033BE08((uint64_t)v10);
        goto LABEL_15;
      }
      strcpy((char *)v23, "Unknown kind=");
      HIWORD(v23[1]) = -4864;
      v19._countAndFlagsBits = a2;
      v19._object = a3;
      String.append(_:)(v19);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v23[0], v23[1], "Music/LibraryPlaylistsViewController.swift", 42, 2, 396, 0);
      __break(1u);
    }
    swift_bridgeObjectRelease(a3);
    goto LABEL_14;
  }
  sub_10033BC18((uint64_t)v10);
LABEL_15:
  v20 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v21 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v21;
}

id sub_100340AD4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _BYTE *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(_QWORD, _QWORD, _QWORD);
  void *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  id v83;
  id v84;
  void *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  void (*v91)(_QWORD, _QWORD, _QWORD);
  id v92;
  _QWORD *v93;
  void (*v94)(_QWORD, _QWORD);
  id v95;
  uint64_t v96;
  char *v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[3];
  uint64_t v128;
  void *v129;

  v3 = v2;
  v125 = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v6 = __chkstk_darwin(v5);
  v116 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v117 = *(_QWORD *)(v8 - 8);
  v118 = v8;
  v9 = __chkstk_darwin(v8);
  v115 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v113 = *(_QWORD *)(v11 - 8);
  v114 = v11;
  __chkstk_darwin(v11);
  v112 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100007E8C(&qword_1011AD6D0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011AD6C0);
  v119 = *(_QWORD *)(v14 - 8);
  v120 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011AD780);
  __chkstk_darwin(v17);
  v121 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v19);
  v109 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100007E8C((uint64_t *)&unk_1011AD6F0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for Playlist.Folder(0);
  v108 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v107 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v23);
  v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100007E8C(&qword_1011AD6E0);
  v26 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Playlist(0);
  v122 = *(_QWORD *)(v29 - 8);
  v123 = v29;
  __chkstk_darwin(v29);
  v102 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v31);
  v33 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v99 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v99 - v38;
  __chkstk_darwin(v40);
  v111 = (uint64_t)&v99 - v41;
  __chkstk_darwin(v42);
  v126 = (uint64_t)&v99 - v43;
  v124 = a2;
  sub_1008DDBA4(a2, (uint64_t)&v99 - v43);
  v44 = v2;
  v45 = sub_10033A038();
  v46 = v45[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  if ((v46 & 1) == 0
    && (*(_BYTE *)(*(_QWORD *)&v3[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_layoutVariantController] + 32) & 1) == 0)
  {
    v59 = v111;
    sub_10004A160(v126, v111, (uint64_t *)&unk_1011AD730);
    v60 = type metadata accessor for Playlist.Folder.Item(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) != 1)
    {
      sub_10004A160(v59, (uint64_t)v39, (uint64_t *)&unk_1011AD730);
      v62 = (*(uint64_t (**)(char *, uint64_t))(v61 + 88))(v39, v60);
      if (v62 == enum case for Playlist.Folder.Item.folder(_:))
      {
        (*(void (**)(char *, uint64_t))(v61 + 96))(v39, v60);
        v63 = v108;
        v64 = v107;
        v65 = v110;
        (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v39, v110);
        v66 = v99;
        sub_10033C5C4(v99);
        v67 = (uint64_t)v109;
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v109, v64, v65);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v65);
        v56 = sub_100924090(v66, v124, v67);
        sub_10004FF60(v67, (uint64_t *)&unk_1011B5660);
        (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v66, v101);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
LABEL_19:
        sub_10004FF60(v59, (uint64_t *)&unk_1011AD730);
        UICollectionViewCell.configurationUpdateHandler.setter(sub_100341758, 0);
        v47 = v126;
        goto LABEL_20;
      }
      if (v62 == enum case for Playlist.Folder.Item.playlist(_:))
      {
        (*(void (**)(char *, uint64_t))(v61 + 96))(v39, v60);
        v89 = v122;
        v88 = v123;
        v90 = v102;
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v102, v39, v123);
        sub_10033C3E8((uint64_t)v28);
        v91 = *(void (**)(_QWORD, _QWORD, _QWORD))(v89 + 16);
        v91(v25, v90, v88);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v25, 0, 1, v88);
        v92 = sub_10092407C((uint64_t)v28, v124, (uint64_t)v25);
        sub_10004FF60((uint64_t)v25, &qword_1011A30F0);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v103);
        v128 = v88;
        v129 = &protocol witness table for Playlist;
        v93 = sub_100049F68(v127);
        v91(v93, v90, v88);
        v56 = v92;

        v94 = *(void (**)(_QWORD, _QWORD))(v89 + 8);
        v59 = v111;
        v94(v90, v88);
        sub_10004FF60((uint64_t)v127, (uint64_t *)&unk_1011A3DD0);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v60);
    }
    sub_10033C3E8((uint64_t)v28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v25, 1, 1, v123);
    v95 = sub_10092407C((uint64_t)v28, v124, (uint64_t)v25);
    sub_10004FF60((uint64_t)v25, &qword_1011A30F0);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v103);
    v96 = type metadata accessor for EntityIdentifier(0);
    v97 = v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v121, 1, 1, v96);
    v56 = v95;
    UIView.appEntityIdentifier.setter(v97);

    goto LABEL_19;
  }
  v47 = v126;
  sub_10004A160(v126, (uint64_t)v36, (uint64_t *)&unk_1011AD730);
  v48 = type metadata accessor for Playlist.Folder.Item(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v36, 1, v48) == 1)
  {
LABEL_14:
    sub_10033BFFC((uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v25, 1, 1, v123);
    v85 = (void *)sub_1009240A4((uint64_t)v16, v124, (uint64_t)v25);
    sub_10004FF60((uint64_t)v25, &qword_1011A30F0);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v16, v120);
    v86 = type metadata accessor for EntityIdentifier(0);
    v87 = v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v121, 1, 1, v86);
    v56 = v85;
    UIView.appEntityIdentifier.setter(v87);

    sub_10004FF60(v47, (uint64_t *)&unk_1011AD730);
    v47 = (uint64_t)v36;
    goto LABEL_20;
  }
  sub_10004A160((uint64_t)v36, (uint64_t)v33, (uint64_t *)&unk_1011AD730);
  v50 = (*(uint64_t (**)(char *, uint64_t))(v49 + 88))(v33, v48);
  if (v50 == enum case for Playlist.Folder.Item.folder(_:))
  {
    (*(void (**)(char *, uint64_t))(v49 + 96))(v33, v48);
    v51 = v108;
    v52 = v107;
    v53 = v110;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v33, v110);
    v54 = v104;
    sub_10033C20C(v104);
    v55 = (uint64_t)v109;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v109, v52, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v55, 0, 1, v53);
    v56 = (id)sub_1009240B8(v54, v124, v55);
    sub_10004FF60(v55, (uint64_t *)&unk_1011B5660);
    v57 = v54;
    v58 = v44;
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v57, v106);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    goto LABEL_11;
  }
  if (v50 != enum case for Playlist.Folder.Item.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v48);
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t))(v49 + 96))(v33, v48);
  v69 = v122;
  v68 = v123;
  v70 = v102;
  (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v102, v33, v123);
  v58 = v44;
  sub_10033BFFC((uint64_t)v16);
  v71 = *(void (**)(_QWORD, _QWORD, _QWORD))(v69 + 16);
  v71(v25, v70, v68);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v25, 0, 1, v68);
  v72 = (void *)sub_1009240A4((uint64_t)v16, v124, (uint64_t)v25);
  sub_10004FF60((uint64_t)v25, &qword_1011A30F0);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v16, v120);
  v128 = v68;
  v129 = &protocol witness table for Playlist;
  v73 = sub_100049F68(v127);
  v71(v73, v70, v68);
  v56 = v72;

  (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v68);
  sub_10004FF60((uint64_t)v127, (uint64_t *)&unk_1011A3DD0);
LABEL_11:
  sub_10004FF60((uint64_t)v36, (uint64_t *)&unk_1011AD730);
  v74 = sub_100007E8C((uint64_t *)&unk_1011AD790);
  v75 = type metadata accessor for UICellAccessory(0);
  v76 = swift_allocObject(v74, ((*(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v75 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80) | 7);
  *(_OWORD *)(v76 + 16) = xmmword_100EA7AA0;
  v78 = v113;
  v77 = v114;
  v79 = v112;
  (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v112, enum case for UICellAccessory.DisplayedState.always(_:), v114);
  v80 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v81 = v116;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v116, 1, 1, v80);
  v82 = v115;
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v81, 0);
  static UICellAccessory.disclosureIndicator(displayed:options:)(v79, v82);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v82, v118);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v77);
  UICollectionViewListCell.accessories.setter(v76);
  v83 = objc_msgSend(v58, "traitCollection");
  v84 = objc_msgSend(v83, "userInterfaceIdiom");

  if (v84 != (id)6)
  {
    v56 = v56;

    objc_msgSend(v56, "directionalLayoutMargins");
    objc_msgSend(v56, "setDirectionalLayoutMargins:");

  }
LABEL_20:
  sub_10004FF60(v47, (uint64_t *)&unk_1011AD730);
  return v56;
}

uint64_t sub_100341758(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(char *, uint64_t);
  double v32;
  uint64_t v33;
  double v34;
  char *v35;
  uint64_t v37;
  uint64_t *v38;
  double v39;
  int v40;
  char *v41;
  double v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD v52[5];

  v51 = a1;
  v3 = sub_100007E8C(&qword_1011AD7F0);
  __chkstk_darwin(v3);
  v49 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v50 = (char *)&v47 - v6;
  v7 = type metadata accessor for UIBackgroundConfiguration(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v48 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v47 - v15;
  v17 = type metadata accessor for UICellConfigurationState.DropState(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v47 - v23;
  UICellConfigurationState.cellDropState.getter(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for UICellConfigurationState.DropState.targeted(_:), v17);
  v25 = static UICellConfigurationState.DropState.== infix(_:_:)(v24, v20);
  v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v26(v20, v17);
  v27 = ((uint64_t (*)(char *, uint64_t))v26)(v24, v17);
  if ((v25 & 1) != 0)
  {
    static UIBackgroundConfiguration.listCell()(v27);
    v29 = type metadata accessor for UICellConfigurationState(0);
    v52[3] = v29;
    v52[4] = &protocol witness table for UICellConfigurationState;
    v30 = sub_100049F68(v52);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v30, a2, v29);
    UIBackgroundConfiguration.updated(for:)(v52);
    v31 = *(void (**)(char *, uint64_t))(v8 + 8);
    v31(v12, v7);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v52);
    if (qword_10119B900 != -1)
      swift_once(&qword_10119B900, sub_1000F7FD4);
    UIBackgroundConfiguration.cornerRadius.setter(*(double *)&qword_10124C848);
    if (qword_10119BBA0 != -1)
      swift_once(&qword_10119BBA0, sub_1001CFEE0);
    v32 = -*(double *)&qword_10124CAF8;
    NSDirectionalEdgeInsets.Edge.all.unsafeMutableAddressor();
    v33 = swift_bridgeObjectRetain();
    v34 = NSDirectionalEdgeInsets.init(edge:length:)(v33, v32);
    UIBackgroundConfiguration.backgroundInsets.setter(v34);
    v35 = v50;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v50, v16, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v7);
    UICollectionViewCell.backgroundConfiguration.setter(v35);
    return ((uint64_t (*)(char *, uint64_t))v31)(v16, v7);
  }
  else
  {
    v37 = UICellConfigurationState.isFocused.getter(v28);
    if ((v37 & 1) != 0)
    {
      v38 = Corner.medium.unsafeMutableAddressor();
      v39 = *(double *)v38;
      v40 = *((unsigned __int8 *)v38 + 16);
      v41 = v48;
      static UIBackgroundConfiguration.clear()(v38);
      v42 = 8.0;
      if (!v40)
        v42 = v39;
      UIBackgroundConfiguration.cornerRadius.setter(v42);
      v43 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
      v44 = UIBackgroundConfiguration.strokeColor.setter(v43);
      v45 = UIBackgroundConfiguration.strokeWidth.setter(v44, 3.0);
      UIBackgroundConfiguration.strokeOutset.setter(v45, 5.0);
      v46 = v49;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v41, v7);
    }
    else
    {
      v46 = v50;
      static UIBackgroundConfiguration.clear()(v37);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v46, 0, 1, v7);
    return UICollectionViewCell.backgroundConfiguration.setter(v46);
  }
}

uint64_t sub_100341BC8(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  Class v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v49)(char *, char *, uint64_t);
  int v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  char *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _BYTE *v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  char *v96;
  id v97;
  id v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t *v101;
  _BOOL8 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  __n128 v123;
  id v124;
  char *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  char *v152;
  void (**ObjectType)(char *, uint64_t);
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  _QWORD aBlock[6];

  v136 = a1;
  ObjectType = (void (**)(char *, uint64_t))swift_getObjectType();
  v4 = sub_100007E8C(&qword_1011ACE00);
  __chkstk_darwin(v4);
  v146 = (char *)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v156);
  v151 = (uint64_t *)((char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v152 = (char *)&v129 - v8;
  v9 = type metadata accessor for Playlist.Folder(0);
  v149 = *(_QWORD *)(v9 - 8);
  v150 = v9;
  __chkstk_darwin(v9);
  v148 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v11);
  v140 = (uint64_t *)((char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v13);
  v138 = (uint64_t)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v139 = (uint64_t)&v129 - v16;
  v17 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v17);
  v145 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for IndexPath(0);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = v19;
  v132 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v20);
  v137 = (char *)&v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v143 = (uint64_t)&v129 - v23;
  __chkstk_darwin(v24);
  v144 = (char *)&v129 - v25;
  v26 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v26);
  v141 = (uint64_t)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v129 - v29;
  v154 = type metadata accessor for Playlist(0);
  v147 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v32 = (char *)&v129 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v142 = (char *)&v129 - v34;
  __chkstk_darwin(v35);
  v155 = (char *)&v129 - v36;
  v37 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v37);
  v39 = (char *)&v129 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for Playlist.Folder.Item(0);
  v41 = *(Class *)(v40 - 8);
  __chkstk_darwin(v40);
  v43 = (char *)&v129 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v129 - v45;
  v157 = v2;
  v47 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
  v135 = a2;
  sub_1008DDBA4(a2, (uint64_t)v39);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v41 + 6))(v39, 1, v40) == 1)
    return sub_10004FF60((uint64_t)v39, (uint64_t *)&unk_1011AD730);
  (*((void (**)(char *, char *, uint64_t))v41 + 4))(v46, v39, v40);
  v49 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 2);
  v130 = v46;
  v49(v43, v46, v40);
  v50 = (*((uint64_t (**)(char *, uint64_t))v41 + 11))(v43, v40);
  if (v50 == enum case for Playlist.Folder.Item.folder(_:))
  {
    v51 = (void (*)(char *, uint64_t))*((_QWORD *)v41 + 12);
    v129 = v40;
    v51(v43, v40);
    v52 = v148;
    v53 = v149;
    v54 = v150;
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v148, v43, v150);
    v55 = v47 + *(_QWORD *)(*(_QWORD *)v47 + 96);
    swift_beginAccess(v55, aBlock, 0, 0);
    v56 = _s9PlaylistsVMa(0);
    v57 = (uint64_t)v152;
    sub_10005B704(v55 + *(int *)(v56 + 24), (uint64_t)v152, _s9PlaylistsV5ScopeVMa);
    v58 = v57 + *(int *)(v156 + 20);
    sub_10004FF60(v58, (uint64_t *)&unk_1011B5660);
    v59 = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v58, v52, v54);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v58, 0, 1, v54);
    v60 = v151;
    sub_10005B704(v57, (uint64_t)v151, _s9PlaylistsV5ScopeVMa);
    v61 = v157;
    LOBYTE(v58) = sub_1003403C8();
    v62 = objc_msgSend(v61, "traitCollection");
    v63 = objc_msgSend(v62, "horizontalSizeClass");

    v64 = objc_allocWithZone((Class)ObjectType);
    v65 = sub_1003388A4(v60, v58 & 1, v63 != (id)2);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v59, v54);
    sub_10005B748(v57, _s9PlaylistsV5ScopeVMa);
  }
  else
  {
    ObjectType = (void (**)(char *, uint64_t))v41;
    if (v50 != enum case for Playlist.Folder.Item.playlist(_:))
    {
      v108 = ObjectType[1];
      v108(v130, v40);
      return ((uint64_t (*)(char *, uint64_t))v108)(v43, v40);
    }
    v66 = ObjectType[12];
    v129 = v40;
    v66(v43, v40);
    v67 = v147;
    v69 = v154;
    v68 = v155;
    (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v155, v43, v154);
    v70 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v71 = v142;
    v70(v142, v68, v69);
    v72 = sub_100007E8C((uint64_t *)&unk_1011AD760);
    v73 = *(int *)(v72 + 48);
    v74 = *(int *)(v72 + 64);
    v75 = _s6AlbumsV5ScopeOMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v30, 1, 1, v75);
    v76 = v157;
    v30[v73] = sub_1003403C8() & 1;
    v30[v74] = 0;
    swift_storeEnumTagMultiPayload(v30, v26, 0);
    v77 = type metadata accessor for URL(0);
    v78 = *(uint64_t **)(*(_QWORD *)(v77 - 8) + 56);
    v79 = (uint64_t)v144;
    v150 = v77;
    v151 = v78;
    ((void (*)(char *, uint64_t, uint64_t))v78)(v144, 1, 1);
    v70(v32, v71, v69);
    v80 = v141;
    sub_10005B704((uint64_t)v30, v141, type metadata accessor for ContainerDetail.Source);
    v81 = v143;
    sub_10004A160(v79, v143, &qword_10119E460);
    v82 = sub_10096EE44((uint64_t)v32, v80, 0, 0, v81);
    v83 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v84 = sub_1003728E0(v82, 0, v83);
    sub_10004FF60(v79, &qword_10119E460);
    sub_10005B748((uint64_t)v30, type metadata accessor for ContainerDetail.Source);
    v85 = *(void (**)(char *, uint64_t))(v147 + 8);
    v61 = v76;
    v85(v71, v69);
    v86 = *(_QWORD *)(*(_QWORD *)&v76[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_prefetchingController]
                    + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference);
    v152 = v84;
    *(_QWORD *)&v84[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference] = v86;
    swift_retain();
    swift_release();
    if ((Feature.UIP.isEnabled.getter(1) & 1) != 0)
    {
      v87 = (void *)objc_opt_self(_UIViewControllerTransition);
      v88 = v133;
      v89 = v132;
      v90 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v132, v135, v134);
      v91 = *(unsigned __int8 *)(v88 + 80);
      v92 = (v91 + 24) & ~v91;
      v93 = swift_allocObject(&unk_1010C0580, v92 + v131, v91 | 7);
      v94 = v136;
      *(_QWORD *)(v93 + 16) = v136;
      (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v93 + v92, v89, v90);
      aBlock[4] = sub_1001AA174;
      aBlock[5] = v93;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100264780;
      aBlock[3] = &unk_1010C0598;
      v95 = _Block_copy(aBlock);
      v96 = v152;
      v97 = v94;
      v98 = objc_msgSend(v87, "zoomWithSourceViewProvider:", v95, swift_release().n128_f64[0]);
      _Block_release(v95);
      objc_msgSend(v96, "_setPreferredTransition:", v98);

    }
    v99 = (uint64_t *)&v61[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope];
    v100 = (uint64_t)v145;
    if (qword_10119B938 != -1)
      swift_once(&qword_10119B938, sub_10010BB4C);
    v101 = (uint64_t *)sub_100048B14(v156, (uint64_t)qword_10124C8A8);
    v102 = sub_10010DC18(v99, v101);
    if (v102)
    {
      v103 = Playlist.id.getter(v102);
      v105 = v104;
      v106 = (uint64_t)v137;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v151)(v137, 1, 1, v150);
      if (sub_10010DC18(v99, v101))
        v107 = MetricsEvent.Page.libraryMadeForYou.unsafeMutableAddressor();
      else
        v107 = MetricsEvent.Page.libraryPlaylistsList.unsafeMutableAddressor();
      v109 = v138;
      sub_10005B704(v107, v138, type metadata accessor for MetricsEvent.Page);
      v110 = v109;
      v111 = v139;
      sub_10005B6C0(v110, v139, type metadata accessor for MetricsEvent.Page);
      v112 = v140;
      MetricsEvent.Page.metricsPageProperties.getter(v140);
      sub_10005B748(v111, type metadata accessor for MetricsEvent.Page);
      MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v103, v105, 16, 23, v106, 0, 0, 9, v100, 0, 0, 0xFF00u, v112, 0);
      v113 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
      sub_100540B34();
      v115 = v114;
      v117 = v116;
      if (qword_10119B8B8 != -1)
        swift_once(&qword_10119B8B8, sub_1000E968C);
      v118 = qword_10124C790;
      swift_retain();
      v119 = GroupActivitiesManager.hasJoined.getter();
      v120 = GroupActivitiesManager.participantsCount.getter();
      v121 = (uint64_t *)(v118 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
      swift_beginAccess(v118 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, aBlock, 0, 0);
      v122 = *v121;
      v123 = swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v113)
                                                                                          + 0xB8))(v100, v115, v117, v119 & 1, v120, v122, v123);

      swift_bridgeObjectRelease(v117);
      sub_10005B748(v100, type metadata accessor for MetricsEvent.Click);
    }
    v85(v155, v154);
    v65 = v152;
    v41 = (Class)ObjectType;
  }
  v124 = objc_msgSend(v61, "navigationController");
  v125 = v130;
  if (v124)
  {
    v126 = v124;
    v127 = (uint64_t)v146;
    UIViewController.traitOverrides.getter();
    v128 = type metadata accessor for UITraitOverrides(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v127, 0, 1, v128);
    UINavigationController.push(_:traitOverrides:animated:)(v65, v127, 1);

    sub_10004FF60(v127, &qword_1011ACE00);
  }
  else
  {

  }
  return (*((uint64_t (**)(char *, uint64_t))v41 + 1))(v125, v129);
}

uint64_t sub_1003428E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, v5, v7);
  sub_1001D29A4((uint64_t)v4);
  v10 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_1001CFEF0((uint64_t)v4);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v12;
}

unint64_t sub_1003429D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  char *v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  _BYTE v62[72];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[10];
  _OWORD v67[10];
  _OWORD v68[6];

  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v10);
  v61 = (_QWORD *)((char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v12);
  v60 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v20);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a2 + 16, &v65, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    return 0;
  v24 = (char *)Strong;
  v57 = a4;
  v58 = v9;
  v25 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
  inited = swift_initStackObject(v25, &v64);
  v56 = xmmword_100EA7AA0;
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v59 = inited;
  v27 = a3;
  sub_10048DDF0((_QWORD *)(inited + 32));
  v28 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController]
      + *(_QWORD *)(**(_QWORD **)&v24[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController] + 96);
  swift_beginAccess(v28, &v63, 0, 0);
  sub_10005B704(v28, (uint64_t)v19, _s9PlaylistsVMa);
  v29 = sub_100007E8C((uint64_t *)&unk_1011AD770);
  v30 = type metadata accessor for Playlist.Folder.Item(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = swift_allocObject(v29, v33 + *(_QWORD *)(v31 + 72), v32 | 7);
  *(_OWORD *)(v34 + 16) = v56;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34 + v33, v27, v30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v16, 1, 1, v30);
  sub_10010C264(v34, (uint64_t)v16, (uint64_t)v22);
  swift_bridgeObjectRelease(v34);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011AD730);
  sub_10005B748((uint64_t)v19, _s9PlaylistsVMa);
  v35 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v22, 1, v35);
  if ((_DWORD)v37 == 1)
  {
    sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A3D60);
    v38 = 0;
  }
  else
  {
    v38 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v37);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v35);
  }
  v40 = (unint64_t)v60;
  v41 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  v42 = v24;
  v43 = objc_msgSend(v42, "traitCollection");
  v44 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v68, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v44);

  v45 = *(_QWORD *)&v68[0];
  v46 = v61;
  sub_1003400CC(v61);
  v47 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
  memset(v68, 0, 80);
  v48 = type metadata accessor for IndexPath(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v58, v57, v48);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
  sub_1008DC524(v50, (uint64_t)v62);
  sub_10004FF60(v50, (uint64_t *)&unk_1011A3D50);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v51 = qword_10119B8C8;
  v52 = (id)qword_10124C798;
  v53 = v59;
  if (v51 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v54 = qword_10124C7A0;
  swift_retain();
  sub_100495120(v53, v38, v40, v45, v52, v54, (unint64_t)v46, (uint64_t)v68, v66, (uint64_t)v62, 1);
  sub_100065228((uint64_t)v66, (uint64_t)v67, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v67[0] + 1))
  {
    v67[7] = v67[2];
    v67[8] = v67[3];
    v67[9] = v67[4];
    v67[5] = v67[0];
    v67[6] = v67[1];
    sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v39 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    sub_1000E411C((uint64_t)v66);
  }
  else
  {
    v39 = 0;
  }

  swift_release();
  swift_bridgeObjectRelease(v53);
  swift_release();

  sub_10004FF60((uint64_t)v62, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60((uint64_t)v46, (uint64_t *)&unk_1011A9990);
  sub_10004FF60(v40, (uint64_t *)&unk_1011A20C0);
  return v39;
}

id sub_1003430D8(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v30;
  id v31;
  _QWORD aBlock[6];

  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v30 - v16;
  aBlock[0] = objc_msgSend(a2, "identifier", v15);
  v18 = sub_100007E8C(&qword_1011A9960);
  v19 = swift_dynamicCast(v9, aBlock, v18, v10, 6);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v19)
  {
    v20(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v21(v17, v9, v10);
      v22 = swift_allocObject(&unk_1010C0468, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16, v3);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
      v23 = *(unsigned __int8 *)(v11 + 80);
      v31 = a3;
      v24 = a1;
      v25 = (v23 + 32) & ~v23;
      v26 = swift_allocObject(&unk_1010C0530, v25 + v12, v23 | 7);
      *(_QWORD *)(v26 + 16) = v22;
      *(_QWORD *)(v26 + 24) = v24;
      v21((char *)(v26 + v25), v13, v10);
      aBlock[4] = sub_100345D40;
      aBlock[5] = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001DBD98;
      aBlock[3] = &unk_1010C0548;
      v27 = _Block_copy(aBlock);
      v28 = v24;
      objc_msgSend(v31, "addAnimations:", v27, swift_release().n128_f64[0]);
      _Block_release(v27);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }
  }
  else
  {
    v20(v9, 1, 1, v10);
  }
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3D50);
  return objc_msgSend(a3, "setPreferredCommitStyle:", 0);
}

void sub_100343370(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_100341BC8(a2, a3);

  }
}

uint64_t sub_100343624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3C50);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3C60);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
     + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController) + 112);
  swift_beginAccess(v9, v15, 0, 0);
  sub_10004A160(v9, (uint64_t)v4, (uint64_t *)&unk_1011A3C50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3C50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      *((_QWORD *)&v13 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
      v14 = &protocol witness table for UIContentUnavailableConfiguration;
      v10 = sub_100049F68(&v12);
      sub_1008DF9A0((uint64_t)v10);
      UIViewController.contentUnavailableConfiguration.setter(&v12);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  return UIViewController.contentUnavailableConfiguration.setter(&v12);
}

BOOL sub_100343870()
{
  char *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  BOOL v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v18;

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope];
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v3 = _s9PlaylistsV5ScopeVMa(0);
  v4 = (uint64_t *)sub_100048B14(v3, (uint64_t)qword_10124C8A8);
  v5 = sub_10010DC18(v2, v4);
  type metadata accessor for MusicLibrary(0);
  v6 = objc_msgSend(v0, "traitCollection");
  v7 = sub_10013ADBC();
  UITraitCollection.subscript.getter(&v18, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v7);

  v8 = v18;
  v10 = static MusicLibrary.shared.getter(v9);
  LOBYTE(v6) = static MusicLibrary.== infix(_:_:)(v8, v10);
  swift_release();
  *(_QWORD *)&v11 = swift_release().n128_u64[0];
  if ((v6 & 1) != 0
    && (v12 = objc_msgSend(v1, "traitCollection", v11),
        v13 = sub_10018D478(),
        UITraitCollection.subscript.getter(&v18, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v13), v12, v14 = v18, v15 = sub_1007607C4(v18), swift_bridgeObjectRelease(v14), (v15 & 1) == 0))
  {
    return !v5;
  }
  else
  {
    return 0;
  }
}

Class sub_1003439E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  _BYTE *v11;
  char v12;
  Class isa;
  uint64_t v14;
  UIMenuElementSize v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  uint64_t v21;
  UIMenuElementSize v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  UIMenuElementSize v33;
  Swift::String v34;
  UIMenu v35;
  UIMenuElementSize v37;
  Swift::OpaquePointer v38;
  uint64_t v39;
  UIMenuElementSize v40;
  _BYTE v41[24];
  _BYTE v42[48];
  _BYTE v43[24];
  UIImage_optional v44;
  UIImage_optional v45;

  v4 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return 0;
  v8 = (char *)Strong;
  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v9 = sub_100007E8C((uint64_t *)&unk_1011AD740);
  inited = swift_initStackObject(v9, v42);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v11 = sub_10033A038();
  v12 = v11[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  isa = 0;
  if ((v12 & 1) == 0)
  {
    v14 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_layoutVariantController];
    swift_retain();
    sub_1008E95AC((uint64_t)&off_1010ABB50, v14);
    v37 = v15;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v44.value.super.isa = 0;
    v44.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v44, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v37, v38).super.super.isa;
    swift_release();
  }
  *(_QWORD *)(inited + 32) = isa;
  v17 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
  v18 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 96);
  swift_beginAccess(v18, v41, 0, 0);
  sub_10005B704(v18, (uint64_t)v6, _s9PlaylistsVMa);
  v19 = swift_allocObject(&unk_1010C0508, 24, 7);
  swift_weakInit(v19 + 16, v17);
  swift_retain();
  v20 = sub_1008BA6D0((uint64_t)sub_100344DA8, v19).super.super.isa;
  swift_release();
  sub_10005B748((uint64_t)v6, _s9PlaylistsVMa);
  swift_release();
  *(_QWORD *)(inited + 40) = v20;
  v40 = inited;
  specialized Array._endMutation()(v21);
  v22 = v40;
  v40 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v23 = *(void **)(v22 + 32);
  if (v23)
  {
    v24 = v23;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);
  }
  v28 = *(void **)(v22 + 40);
  if (v28)
  {
    v29 = v28;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    specialized Array._endMutation()(v32);
  }
  v33 = v40;
  swift_bridgeObjectRelease(v22);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v45.value.super.isa = 0;
  v45.is_nil = 0;
  v35.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v45, 0, 0xFFFFFFFFFFFFFFFFLL, v33, v38).super.super.isa;

  return v35.super.super.isa;
}

void sub_100343D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100343D54();

  }
}

uint64_t sub_100343D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t (**v19)(uint64_t);
  uint64_t v21;

  v1 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  v13 = v0 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_scope;
  v14 = _s9PlaylistsV5ScopeVMa(0);
  sub_10004A160(v13 + *(int *)(v14 + 20), (uint64_t)v12, (uint64_t *)&unk_1011B5660);
  if (sub_10076BBD4())
  {
    sub_10004A160((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1011B5660);
    v15 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
    v16 = swift_allocObject(&unk_1010C0468, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v0);
    sub_100065228((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1011B5660);
    v17 = (int *)type metadata accessor for PlaylistCreation.Context(0);
    v18 = &v6[v17[5]];
    *(_QWORD *)v18 = 0;
    *((_QWORD *)v18 + 1) = 0;
    sub_100065228((uint64_t)v3, (uint64_t)&v6[v17[6]], &qword_1011B1F10);
    v19 = (uint64_t (**)(uint64_t))&v6[v17[7]];
    *v19 = sub_100344D7C;
    v19[1] = (uint64_t (*)(uint64_t))v16;
    swift_storeEnumTagMultiPayload(v6, v4, 3);
    sub_100770824((uint64_t)v6, 0, 0);
    swift_release();
    sub_10005B748((uint64_t)v6, type metadata accessor for AppInterfaceContext.Activity);
  }
  return sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011B5660);
}

void sub_100343F90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10033DB90(a2);

  }
  else
  {
    v6 = type metadata accessor for PlaybackIntentDescriptor(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
}

uint64_t sub_10034400C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  char *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];

  v56 = a2;
  v3 = sub_100007E8C(&qword_1011B6C70);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for AppInterfaceContext.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for Playlist(0);
  v57 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  sub_10005B704(a1, (uint64_t)&v53 - v17, type metadata accessor for PlaylistCreation.FlowResult);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v13);
  result = sub_10005B748((uint64_t)v18, type metadata accessor for PlaylistCreation.FlowResult);
  if (EnumCaseMultiPayload != 2)
  {
    sub_10005B704(a1, (uint64_t)v15, type metadata accessor for PlaylistCreation.FlowResult);
    if (swift_getEnumCaseMultiPayload(v15, v13))
    {
      return sub_10005B748((uint64_t)v15, type metadata accessor for PlaylistCreation.FlowResult);
    }
    else
    {
      v21 = v56 + 16;

      v22 = v57;
      v23 = (uint64_t)v12;
      v24 = v55;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v12, v15, v55);
      swift_beginAccess(v21, v60, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v21);
      if (Strong && (v26 = (void *)Strong, v27 = sub_10076BBD4(), v26, v27))
      {
        sub_10076D5A0(v23, 0, 0, v5);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {
          sub_10004FF60((uint64_t)v5, &qword_1011B6C70);
          if (qword_10119BA00 != -1)
            swift_once(&qword_10119BA00, sub_100165EE4);
          v28 = type metadata accessor for Logger(0);
          sub_100048B14(v28, (uint64_t)qword_10124C900);
          v29 = v54;
          v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16))(v54, v23, v24);
          v31 = Logger.logObject.getter(v30);
          v32 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v31, v32))
          {
            v33 = v29;
            v34 = (uint8_t *)swift_slowAlloc(12, -1);
            v35 = swift_slowAlloc(32, -1);
            v59 = v35;
            *(_DWORD *)v34 = 136446210;
            v56 = v23;
            v36 = sub_100048748(&qword_1011A4F50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
            v37 = v33;
            v38 = dispatch thunk of CustomStringConvertible.description.getter(v24, v36);
            v40 = v39;
            v58 = sub_100322200(v38, v39, &v59);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
            v41 = swift_bridgeObjectRelease(v40);
            v42 = *(void (**)(char *, uint64_t, __n128))(v57 + 8);
            v42(v37, v24, v41);
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to generate navigation activity to playlist=%{public}s", v34, 0xCu);
            swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v35, -1, -1);
            swift_slowDealloc(v34, -1, -1);

            v43 = swift_release();
            v44 = v56;
          }
          else
          {

            v52 = swift_release();
            v42 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
            v42(v29, v24, v52);
            v44 = v23;
          }
          return ((uint64_t (*)(uint64_t, uint64_t, __n128))v42)(v44, v24, v43);
        }
        else
        {
          v50 = (uint64_t)v5;
          v51 = v53;
          sub_10005B6C0(v50, v53, type metadata accessor for AppInterfaceContext.Activity);
          sub_100770824(v51, 0, 0);
          swift_release();
          sub_10005B748(v51, type metadata accessor for AppInterfaceContext.Activity);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
        }
      }
      else
      {
        if (qword_10119BA00 != -1)
          swift_once(&qword_10119BA00, sub_100165EE4);
        v45 = type metadata accessor for Logger(0);
        v46 = sub_100048B14(v45, (uint64_t)qword_10124C900);
        v47 = Logger.logObject.getter(v46);
        v48 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v49 = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Failed to navigate to playlist: missing interface context", v49, 2u);
          swift_slowDealloc(v49, -1, -1);
        }

        return (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v23, v24);
      }
    }
  }
  return result;
}

uint64_t sub_100344720()
{
  return type metadata accessor for LibraryPlaylistsViewController(0);
}

uint64_t type metadata accessor for LibraryPlaylistsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AD6A0;
  if (!qword_1011AD6A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryPlaylistsViewController);
  return result;
}

void sub_100344764(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  const char *v30;
  const char *v31;
  uint64_t v32;

  sub_10015C698(319, (unint64_t *)&unk_1011AD6B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item);
  if (v3 <= 0x3F)
  {
    v18 = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, (unint64_t *)&unk_1011ACDB0, &qword_1011A37B0);
    if (v5 <= 0x3F)
    {
      v19 = *(_QWORD *)(v4 - 8) + 64;
      v20 = v19;
      sub_1001AB544(319, (unint64_t *)&unk_1011D0A20, &qword_1011AD6C0);
      if (v7 <= 0x3F)
      {
        v21 = *(_QWORD *)(v6 - 8) + 64;
        sub_1001AB544(319, &qword_1011AD6C8, &qword_1011AD6D0);
        if (v9 <= 0x3F)
        {
          v22 = *(_QWORD *)(v8 - 8) + 64;
          sub_1001AB544(319, &qword_1011AD6D8, &qword_1011AD6E0);
          if (v11 <= 0x3F)
          {
            v23 = *(_QWORD *)(v10 - 8) + 64;
            sub_1001AB544(319, &qword_1011AD6E8, (uint64_t *)&unk_1011AD6F0);
            if (v13 <= 0x3F)
            {
              v24 = *(_QWORD *)(v12 - 8) + 64;
              v25 = "\b";
              v14 = _s9PlaylistsV5ScopeVMa(319);
              if (v15 <= 0x3F)
              {
                v26 = *(_QWORD *)(v14 - 8) + 64;
                v27 = (char *)&value witness table for Builtin.NativeObject + 64;
                v28 = (char *)&value witness table for Builtin.NativeObject + 64;
                v29 = (char *)&value witness table for Builtin.UnknownObject + 64;
                v30 = "\b";
                v31 = "\b";
                sub_10015C698(319, &qword_1011B8BE0, type metadata accessor for Actions.MetricsReportingContext);
                if (v17 <= 0x3F)
                {
                  v32 = *(_QWORD *)(v16 - 8) + 64;
                  swift_updateClassMetadata2(a1, 256, 15, &v18, a1 + 80);
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100344934(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16[3];

  v2 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v15[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_10018D478();
  UITraitCollection.subscript.getter(v16, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v11);

  v12 = v16[0];
  v13 = sub_1007607C4(v16[0]);
  swift_bridgeObjectRelease(v12);
  v14 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v14, v16, 0, 0);
  sub_10005B704(v14, (uint64_t)v8, _s9PlaylistsVMa);
  v8[8] = v13 & 1;
  sub_10005B704(v14, (uint64_t)v4, _s9PlaylistsVMa);
  swift_beginAccess(v14, v15, 33, 0);
  sub_100344CA4((uint64_t)v8, v14);
  swift_endAccess(v15);
  sub_10018241C(v4);
  sub_10005B748((uint64_t)v8, _s9PlaylistsVMa);
  sub_10005B748((uint64_t)v4, _s9PlaylistsVMa);
  sub_100339114();
}

void sub_100344AC4(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  __int16 v15;
  __int16 v16;
  __int16 v17;
  _BYTE v18[24];
  _QWORD v19[3];

  v2 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v18[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v19, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v11);

  v12 = v19[0];
  v13 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v13, v19, 0, 0);
  sub_10005B704(v13, (uint64_t)v8, _s9PlaylistsVMa);
  swift_retain();
  swift_release();
  *v8 = v12;
  v14 = (unsigned __int8 *)v8 + *(int *)(v2 + 36);
  if (v14[1])
    v15 = 256;
  else
    v15 = 0;
  v16 = v15 | *v14;
  v17 = sub_10016B228();
  *v14 = v17;
  v14[1] = HIBYTE(v17) & 1;
  sub_10010B8F4(v16);
  swift_release();
  sub_10005B704(v13, (uint64_t)v4, _s9PlaylistsVMa);
  swift_beginAccess(v13, v18, 33, 0);
  sub_100344CA4((uint64_t)v8, v13);
  swift_endAccess(v18);
  sub_10018241C(v4);
  sub_10005B748((uint64_t)v8, _s9PlaylistsVMa);
  sub_10005B748((uint64_t)v4, _s9PlaylistsVMa);
  sub_100339114();
}

uint64_t sub_100344CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s9PlaylistsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100344CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

Class sub_100344D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003439E4(a1, a2, v2);
}

uint64_t sub_100344D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100344D24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100344D2C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100343F90(v1, a1);
}

uint64_t sub_100344D44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100344D68(uint64_t a1)
{
  uint64_t v1;

  return sub_1003F2FE4(a1, *(void (**)(__n128))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

void sub_100344D74(uint64_t a1)
{
  uint64_t v1;

  sub_100343D04(a1, v1);
}

uint64_t sub_100344D7C(uint64_t a1)
{
  uint64_t v1;

  return sub_10034400C(a1, v1);
}

uint64_t sub_100344D84()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100344DA8(__int16 a1)
{
  uint64_t v1;

  return sub_1008ABA20(a1 & 0x1FF, v1);
}

uint64_t sub_100344DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_100344DFC(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  double result;

  v2 = sub_10033A038();
  v3 = sub_10033ADD0();
  objc_msgSend(v2, "setCollectionViewLayout:", v3);

  sub_100339114();
  v4 = sub_10033B4E8();
  v5 = objc_msgSend(a1, "traitCollection");
  v6 = objc_msgSend(v5, "horizontalSizeClass");

  objc_msgSend(*(id *)(v4 + 16), "setHidesNavigationBarDuringPresentation:", v6 == (id)1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100344EA4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26[8];
  char v27[24];

  v24 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3C60);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_responseController) + 112);
  v14 = swift_beginAccess(v13, v27, 0, 0);
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v13, 1, v9, v14))
    return v15;
  v16 = v5;
  v17 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v18 = MusicLibrarySectionedResponse.sections.getter(v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v18 + 16) > v24)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24, v16);
    v20 = swift_bridgeObjectRelease(v18);
    MusicLibrarySection.items.getter(v16, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    v21 = sub_100049F28((unint64_t *)&qword_1011AD880, (uint64_t *)&unk_1011AD720, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v17);
    dispatch thunk of Collection.endIndex.getter(&v25, v17, v21);
    v15 = dispatch thunk of Collection.distance(from:to:)(v26, &v25, v17, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v17);
    return v15;
  }
  __break(1u);
  return result;
}

id sub_100345108(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  double v45;
  Class v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  Class isa;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(uint64_t, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void **aBlock;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;

  v2 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v63 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v63 + 64);
  __chkstk_darwin(v5);
  v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (char *)&v47 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v47 - v21;
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v14, 1, 1, v15, v20);
    goto LABEL_6;
  }
  v58 = v19;
  v61 = v11;
  v23 = v5;
  v24 = *(unsigned __int8 *)(v16 + 80);
  v25 = a1 + ((v24 + 32) & ~v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  v26(v14, v25, v15, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    v28 = (uint64_t *)&unk_1011A3D50;
    v29 = (uint64_t)v14;
    goto LABEL_7;
  }
  v56 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v57 = (void (*)(uint64_t, char *, uint64_t))v26;
  v56(v22, v14, v15);
  sub_1008DDBA4((uint64_t)v22, (uint64_t)v4);
  v27 = v63;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v4, 1, v23) != 1)
  {
    v51 = ~v24;
    v55 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v55(v61, v4, v23);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v48 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v32 = v59;
    v48(v59, v61, v23);
    v33 = *(unsigned __int8 *)(v27 + 80);
    v34 = (v33 + 16) & ~v33;
    v49 = v33 | 7;
    v50 = swift_allocObject(&unk_1010C05D0, v34 + v6, v33 | 7);
    v55((char *)(v50 + v34), v32, v23);
    v35 = swift_allocObject(&unk_1010C0468, 24, 7);
    v36 = v22;
    v53 = v22;
    v59 = (char *)v35;
    swift_unknownObjectWeakInit(v35 + 16, v62);
    v37 = v23;
    v38 = v60;
    v52 = v37;
    v48(v60, v61, v37);
    v57((uint64_t)v58, v36, v15);
    v39 = (v33 + 24) & ~v33;
    v40 = (v6 + v24 + v39) & v51;
    v41 = swift_allocObject(&unk_1010C05F8, v40 + v17, v49 | v24);
    *(_QWORD *)(v41 + 16) = v59;
    v55((char *)(v41 + v39), v38, v37);
    v56((char *)(v41 + v40), v58, v15);
    v42 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v68 = sub_100345E44;
    v69 = v50;
    aBlock = _NSConcreteStackBlock;
    v65 = 1107296256;
    v66 = sub_1000FA900;
    v67 = &unk_1010C0610;
    v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v68 = sub_100345F2C;
    v69 = v41;
    aBlock = _NSConcreteStackBlock;
    v65 = 1107296256;
    v66 = sub_100968BE4;
    v67 = &unk_1010C0638;
    v44 = _Block_copy(&aBlock);
    swift_retain();
    *(_QWORD *)&v45 = swift_release().n128_u64[0];
    v46 = isa;
    v30 = objc_msgSend(v42, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v43, v44, v45);

    swift_release();
    swift_release();
    _Block_release(v44);
    _Block_release(v43);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v52);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v53, v15);
    swift_release();
    return v30;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  v28 = (uint64_t *)&unk_1011AD730;
  v29 = (uint64_t)v4;
LABEL_7:
  sub_10004FF60(v29, v28);
  return 0;
}

uint64_t sub_100345640(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  char *v27;
  char v28;
  int v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;

  v59 = a1;
  v3 = type metadata accessor for Playlist.EditableComponents(0);
  v4 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  v56 = v4;
  __chkstk_darwin(v3);
  v54 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v6);
  v58 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - v12;
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist.Folder.Item(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v52 - v22;
  sub_1008DDBA4(a2, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v24 = (uint64_t *)&unk_1011AD730;
    v25 = (uint64_t)v16;
    goto LABEL_3;
  }
  v52 = v8;
  v53 = v13;
  v27 = v58;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
  v28 = UICollectionView.isDraggingCell(at:)();
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v23, v17);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v29 != enum case for Playlist.Folder.Item.folder(_:))
  {
    if (v29 != enum case for Playlist.Folder.Item.playlist(_:))
    {
      v39 = *(void (**)(char *, uint64_t))(v18 + 8);
      v39(v23, v17);
      v39(v20, v17);
      goto LABEL_4;
    }
    v59 = v23;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    v32 = v53;
    v33 = v20;
    v34 = v52;
    v35 = v57;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v53, v33, v57);
    v36 = v10;
    v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v34 + 16))(v10, v32, v35);
    if ((v28 & 1) != 0)
    {
      v38 = *(void (**)(char *, uint64_t))(v34 + 8);
      v38(v10, v35);
      v38(v32, v35);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v59, v17);
      goto LABEL_4;
    }
    v40 = v17;
    v41 = v27;
    Playlist.editableComponents.getter(v37);
    v43 = v55;
    v42 = v56;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v27, 1, v55) != 1)
    {
      v46 = v54;
      static Playlist.EditableComponents.tracklist.getter();
      v47 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
      v26 = dispatch thunk of SetAlgebra.isSuperset(of:)(v46, v43, v47);
      v48 = *(void (**)(char *, uint64_t))(v42 + 8);
      v48(v46, v43);
      v49 = v41;
      v50 = *(void (**)(char *, uint64_t))(v52 + 8);
      v51 = v57;
      v50(v36, v57);
      v50(v53, v51);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v59, v40);
      v48(v49, v43);
      return v26 & 1;
    }
    v44 = *(void (**)(char *, uint64_t))(v52 + 8);
    v45 = v57;
    v44(v36, v57);
    v44(v53, v45);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v59, v40);
    v24 = (uint64_t *)&unk_1011C65F0;
    v25 = (uint64_t)v27;
LABEL_3:
    sub_10004FF60(v25, v24);
LABEL_4:
    v26 = 0;
    return v26 & 1;
  }
  v30 = *(void (**)(char *, uint64_t))(v18 + 8);
  v30(v23, v17);
  v26 = v28 ^ 1;
  v30(v20, v17);
  return v26 & 1;
}

void sub_100345A74()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_pendingSelectedPlaylistItem];
  v3 = type metadata accessor for Playlist.Folder.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___globalHeaderRegistration];
  v5 = sub_100007E8C(&qword_1011A37B0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___headerRegistration], 1, 1, v5);
  v7 = &v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listPlaylistCellRegistration];
  v8 = sub_100007E8C(&qword_1011AD6C0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___listFolderCellRegistration];
  v10 = sub_100007E8C(&qword_1011AD6D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridPlaylistCellRegistration];
  v12 = sub_100007E8C(&qword_1011AD6E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___gridFolderCellRegistration];
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD6F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___collectionView] = 0;
  v15 = OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_prefetchingController;
  v16 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  *(_QWORD *)&v1[v15] = sub_1001EA3C8(0xD000000000000020, 0x8000000100E369B0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController_dragDropController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___searchController] = 0;
  v17 = &v1[OBJC_IVAR____TtC5Music30LibraryPlaylistsViewController____lazy_storage___actionMetricsReportingContext];
  v18 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LibraryPlaylistsViewController.swift", 42, 2, 641, 0);
  __break(1u);
}

uint64_t sub_100345CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100345D40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_100343370(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_100345D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100345DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist.Folder.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100345E44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Folder.Item(0) - 8) + 80);
  return sub_1003428E4(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_100345E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Folder.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_100345F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Playlist.Folder.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_1003429D0(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

void sub_100345F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10033FA04(a1, a2, a3, v3);
}

uint64_t sub_100345FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10033FB9C(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100345FA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AD7C8;
  if (!qword_1011AD7C8)
  {
    v1 = sub_100044B54(&qword_1011AD7C0);
    sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
    sub_100048748(&qword_1011AD7D8, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AD7C8);
  }
  return result;
}

void sub_10034604C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10033F1FC(a1, a2, a3, v3);
}

uint64_t sub_100346054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10033F3A8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_10034605C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10033ED00(a1, a2, a3, v3);
}

uint64_t sub_100346064()
{
  return sub_10033EEE4();
}

unint64_t sub_10034606C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AD830;
  if (!qword_1011AD830)
  {
    v1 = sub_100044B54(&qword_1011AD828);
    sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    sub_100048748(&qword_1011AD7D8, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AD830);
  }
  return result;
}

uint64_t sub_100346108()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10034612C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10033E430(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_100346134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10033E658(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_100346140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10033D8B0(a1, a2, a3, a4, v4);
}

void sub_100346148()
{
  uint64_t v0;

  sub_10033E128(v0);
}

void sub_100346150(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_10061DCDC(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_10034615C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B8D80;
  if (!qword_1011B8D80)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011AD870);
    sub_1001AA6D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B8D80);
  }
  return result;
}

void sub_1003461C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10033E1E4(a1, a2, a3, a4, v4);
}

double sub_1003461D4(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D510(a1, v1);
}

double sub_1003461DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10033AF50(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1003461E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10033B3D8(a1, a2, v2);
}

void sub_1003461EC(char a1)
{
  uint64_t v1;

  sub_10033B470(a1 & 1, v1);
}

void sub_1003461F8(uint64_t a1)
{
  uint64_t v1;

  sub_10033B580(a1, v1);
}

double sub_100346200(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_10033BA70(a1, a2, v2);
}

uint64_t sub_100346208@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_10033C7A0(a1, v2, a2);
}

_QWORD *sub_100346210(uint64_t a1)
{
  uint64_t v1;

  return sub_10033CD14(a1, v1);
}

id sub_10034624C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for QuickActionsController()), "init");
  qword_10124CDE8 = (uint64_t)result;
  return result;
}

char *sub_100346278()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t inited;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  __int128 v52;
  char v53[72];
  char v54[72];
  _BYTE v55[24];
  id v56[5];
  objc_super v57;

  v1 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v1);
  v3 = &v53[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_100007E8C((uint64_t *)&unk_1011A8EE0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100007E8C(&qword_1011B85B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music22QuickActionsController_nowPlaying] = 0;
  v12 = &v0[OBJC_IVAR____TtC5Music22QuickActionsController_nowPlayingSubscription];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music22QuickActionsController_bindings] = _swiftEmptyArrayStorage;
  v13 = OBJC_IVAR____TtC5Music22QuickActionsController_searchShortcutItem;
  v14 = v0;
  *(_QWORD *)&v0[v13] = sub_100346CBC();
  v15 = OBJC_IVAR____TtC5Music22QuickActionsController_playMyStationShortcutItem;
  *(_QWORD *)&v14[v15] = sub_100346E74();
  v14[OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites] = 0;

  v16 = (objc_class *)type metadata accessor for QuickActionsController();
  v57.receiver = v14;
  v57.super_class = v16;
  v17 = (char *)objc_msgSendSuper2(&v57, "init");
  sub_1003476B8();
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  (*(void (**)(void))(*(_QWORD *)qword_10124C788 + 456))();
  v18 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v56[0] = (id)static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25);
  v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 1, 1, v26);
  v27 = sub_100049F28((unint64_t *)&unk_1011A8F00, (uint64_t *)&unk_1011A8EE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v28 = sub_10006A92C();
  Publisher.receive<A>(on:options:)(v56, v3, v4, v18, v27, v28);
  sub_10004FF60((uint64_t)v3, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v29 = swift_allocObject(&unk_1010C0700, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16, v17);
  v30 = sub_100049F28((unint64_t *)&unk_1011A8F10, &qword_1011B85B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v31 = (void *)Publisher<>.sink(receiveValue:)(sub_100347CE4, v29, v8, v30);
  v32 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v32);
  v56[3] = (id)type metadata accessor for AnyCancellable(0);
  v56[4] = &protocol witness table for AnyCancellable;
  v56[0] = v31;
  v33 = (uint64_t)&v17[OBJC_IVAR____TtC5Music22QuickActionsController_nowPlayingSubscription];
  swift_beginAccess(&v17[OBJC_IVAR____TtC5Music22QuickActionsController_nowPlayingSubscription], v55, 33, 0);
  sub_1000D98B0((uint64_t)v56, v33);
  swift_endAccess(v55);
  v34 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v35 = swift_allocObject(v34, 48, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100EA7DB0;
  v36 = sub_100007E8C(&qword_1011A23A8);
  inited = swift_initStackObject(v36, v54);
  v52 = xmmword_100EA7AA0;
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v38 = (id)*ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.unsafeMutableAddressor();
  ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v38);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v39;
  *(_QWORD *)(inited + 40) = v40;
  v41 = swift_allocObject(&unk_1010C0700, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16, v17);
  v42 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v42, 48, 7);
  swift_retain();
  *(_QWORD *)(v35 + 32) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 0, (uint64_t)sub_100347CEC, v41);
  v43 = swift_initStackObject(v36, v53);
  *(_OWORD *)(v43 + 16) = v52;
  sub_10004A07C(0, (unint64_t *)&qword_1011A9920, MPMediaLibrary_ptr);
  v44 = MPMediaLibraryDidChangeNotification;
  static MPMediaLibrary.device.getter();
  UIScreen.Dimensions.size.getter(v44);
  *(_QWORD *)(v43 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v43 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v43 + 32) = v45;
  *(_QWORD *)(v43 + 40) = v46;
  v47 = swift_allocObject(&unk_1010C0700, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16, v17);
  swift_allocObject(v42, 48, 7);
  v48 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v43, 1, (uint64_t)sub_100347CF4, v47);
  *(_QWORD *)(v35 + 40) = v48;
  v56[0] = (id)v35;
  specialized Array._endMutation()(v48);
  v49 = v56[0];

  v50 = *(_QWORD *)&v17[OBJC_IVAR____TtC5Music22QuickActionsController_bindings];
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Music22QuickActionsController_bindings] = v49;
  swift_bridgeObjectRelease(v50);
  return v17;
}

void sub_1003467A0(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Music22QuickActionsController_nowPlaying);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music22QuickActionsController_nowPlaying) = v2;
    v7 = v2;

    sub_1003476B8();
  }
}

void sub_100346820(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1003476B8();

  }
}

void sub_100346870(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  uint64_t v7;
  int v8;
  _QWORD aBlock[6];
  _BYTE v10[24];

  v1 = a1 + 16;
  sub_10004A07C(0, (unint64_t *)&unk_1011A92E0, MPModelPlaylist_ptr);
  v2 = static MPModelPlaylist.favoriteSongsRequest(labeled:)(0, 0);
  if (v2)
  {
    v3 = v2;
    v4 = swift_allocObject(&unk_1010C0700, 24, 7);
    swift_beginAccess(v1, v10, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
    swift_unknownObjectWeakInit(v4 + 16, Strong);

    aBlock[4] = sub_100347CFC;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004E2F4;
    aBlock[3] = &unk_1010C0718;
    v6 = _Block_copy(aBlock);
    objc_msgSend(v3, "performWithResponseHandler:", v6, swift_release().n128_f64[0]);
    _Block_release(v6);
LABEL_3:

    return;
  }
  swift_beginAccess(v1, aBlock, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v1);
  if (v7)
  {
    v3 = (void *)v7;
    v8 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites);
    *(_BYTE *)(v7 + OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites) = 0;
    if (v8 == 1)
      sub_1003476B8();
    goto LABEL_3;
  }
}

uint64_t sub_1003469C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
  v21 = swift_allocObject(&unk_1010C0750, 32, 7);
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a1;
  aBlock[4] = sub_100347D48;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010C0768;
  v22 = _Block_copy(aBlock);
  v23 = a1;
  swift_retain();
  v24 = swift_release();
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_10015E7E0();
  v26 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v27 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v5, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100346BCC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  id v6;
  void *v7;
  id v8;
  int v9;
  int v10;
  char v11;
  _BYTE v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    if (a2)
    {
      v6 = objc_msgSend(a2, "results");
      if (!v6)
      {
        __break(1u);
        return;
      }
      v7 = v6;
      v8 = objc_msgSend(v6, "totalItemCount");

      v9 = (uint64_t)v8 > 0;
      v10 = v5[OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites];
      v5[OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites] = v9;
      if (v9 == v10)
        goto LABEL_6;
    }
    else
    {
      v11 = *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites);
      *(_BYTE *)(Strong + OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites) = 0;
      if ((v11 & 1) == 0)
        goto LABEL_6;
    }
    sub_1003476B8();
LABEL_6:

  }
}

id sub_100346CBC()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  _BYTE v14[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v14[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
  static Locale.current.getter(v4);
  String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, 0, 0, 256);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(UIApplicationShortcutIcon), "iconWithSystemImageName:", v7);

  v9 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v12 = objc_msgSend(v9, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", v10, v11, 0, v8, 0);

  return v12;
}

id sub_100346E74()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  _BYTE v14[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v14[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0x20794D2079616C50, 0xEF6E6F6974617453);
  static Locale.current.getter(v4);
  String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, 0, 0, 256);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(UIApplicationShortcutIcon), "iconWithSystemImageName:", v7);

  v9 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v12 = objc_msgSend(v9, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", v10, v11, 0, v8, 0);

  return v12;
}

id sub_100347038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  NSString v16;
  id v17;
  NSString v18;
  NSString v19;
  NSString v20;
  id v21;
  _BYTE v23[16];

  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E36B00);
  static Locale.current.getter(v7);
  String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, 0, 0, 256);
  v9 = v8;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC5Music22QuickActionsController_nowPlaying);
  if (!v10)
    goto LABEL_5;
  v11 = objc_msgSend(v10, "tracklist");
  v12 = objc_msgSend(v11, "playingItem");

  if (!v12)
    goto LABEL_6;
  v13 = objc_msgSend(v12, "metadataObject");

  if (v13)
  {
    v14 = objc_msgSend(v13, "innermostModelObject");

    sub_1003472D4();
    v12 = v15;

  }
  else
  {
LABEL_5:
    v12 = 0;
  }
LABEL_6:
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(UIApplicationShortcutIcon), "iconWithSystemImageName:", v16);

  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  if (v12)
  {
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v20 = 0;
  }
  v21 = objc_msgSend(objc_allocWithZone((Class)UIApplicationShortcutItem), "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", v18, v19, v20, v17, 0);

  return v21;
}

void *sub_1003472D4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v42[64];
  _QWORD *v43;
  _BYTE v44[64];

  v1 = v0;
  objc_opt_self(MPModelSong);
  v2 = swift_dynamicCastObjCClass(v0);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_100007E8C((uint64_t *)&unk_1011A2410);
    inited = swift_initStackObject(v4, v42);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    v6 = v1;
    v7 = objc_msgSend(v3, "artist");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "name");

      if (v9)
      {
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v12 = v11;

      }
      else
      {
        v10 = 0;
        v12 = 0;
      }
      *(_QWORD *)(inited + 32) = v10;
      *(_QWORD *)(inited + 40) = v12;
    }
    else
    {
      *(_QWORD *)(inited + 32) = 0;
      *(_QWORD *)(inited + 40) = 0;
    }
    v22 = objc_msgSend(v3, "title");
    if (v22)
    {
LABEL_13:
      v23 = v22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v26 = v25;

      goto LABEL_22;
    }
LABEL_21:
    v24 = 0;
    v26 = 0;
LABEL_22:
    *(_QWORD *)(inited + 48) = v24;
    *(_QWORD *)(inited + 56) = v26;
    v30 = *(_QWORD *)(inited + 40);
    if (v30)
    {
      v31 = *(_QWORD *)(inited + 32);
      swift_bridgeObjectRetain();
      v32 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
      v34 = v32[2];
      v33 = v32[3];
      if (v34 >= v33 >> 1)
        v32 = sub_100431480((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
      v32[2] = v34 + 1;
      v35 = &v32[2 * v34];
      v35[4] = v31;
      v35[5] = v30;
      v24 = *(_QWORD *)(inited + 48);
      v26 = *(_QWORD *)(inited + 56);
      if (!v26)
        goto LABEL_33;
    }
    else
    {
      v32 = _swiftEmptyArrayStorage;
      if (!v26)
      {
LABEL_33:
        swift_bridgeObjectRelease(inited);
        v43 = v32;
        v39 = sub_100007E8C((uint64_t *)&unk_1011AD420);
        v40 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
        v27 = (void *)BidirectionalCollection<>.joined(separator:)(0x209380E220, 0xA500000000000000, v39, v40);
        swift_bridgeObjectRelease(v32);
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
      v32 = sub_100431480(0, v32[2] + 1, 1, v32);
    v37 = v32[2];
    v36 = v32[3];
    if (v37 >= v36 >> 1)
      v32 = sub_100431480((_QWORD *)(v36 > 1), v37 + 1, 1, v32);
    v32[2] = v37 + 1;
    v38 = &v32[2 * v37];
    v38[4] = v24;
    v38[5] = v26;
    goto LABEL_33;
  }
  objc_opt_self(MPModelTVEpisode);
  v13 = swift_dynamicCastObjCClass(v0);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = sub_100007E8C((uint64_t *)&unk_1011A2410);
    inited = swift_initStackObject(v15, v44);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    v6 = v1;
    v16 = objc_msgSend(v14, "show");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "title");

      if (v18)
      {
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

      }
      else
      {
        v19 = 0;
        v21 = 0;
      }
      *(_QWORD *)(inited + 32) = v19;
      *(_QWORD *)(inited + 40) = v21;
    }
    else
    {
      *(_QWORD *)(inited + 32) = 0;
      *(_QWORD *)(inited + 40) = 0;
    }
    v22 = objc_msgSend(v14, "title");
    if (v22)
      goto LABEL_13;
    goto LABEL_21;
  }
  objc_opt_self(MPModelMovie);
  v27 = (void *)swift_dynamicCastObjCClass(v0);
  if (!v27)
    return v27;
  v6 = v1;
  v28 = objc_msgSend(v27, "title");
  if (!v28)
  {

    return 0;
  }
  v29 = v28;
  v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v28);

LABEL_34:
  return v27;
}

void sub_1003476B8()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unint64_t v28;
  id v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;

  static ApplicationCapabilities.shared.getter((uint64_t)&v31);
  sub_100065184(&v31);
  v1 = *(id *)(v0 + OBJC_IVAR____TtC5Music22QuickActionsController_searchShortcutItem);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v1);
  v3 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v2 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v3 >= v2 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v2 > 1, v3 + 1, 1);
  v4 = v32;
  v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v1);
  specialized Array._endMutation()(v5);
  v6 = sub_100347B10();
  v7 = v6;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music22QuickActionsController_hasFavorites) != 1)
  {

    if ((v4 & 1) == 0)
      goto LABEL_13;
    goto LABEL_9;
  }
  if ((v4 & 1) != 0)
  {
    v8 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v10 >= v9 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
    specialized Array._endMutation()(v11);

LABEL_9:
    v7 = *(id *)(v0 + OBJC_IVAR____TtC5Music22QuickActionsController_playMyStationShortcutItem);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v7);
    specialized Array._endMutation()(v14);
  }

LABEL_13:
  v15 = sub_100347038();
  v16 = v15;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music22QuickActionsController_nowPlaying))
  {
    v17 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);
  }

  v21 = (void *)objc_opt_self(UIApplication);
  swift_bridgeObjectRetain();
  v22 = objc_msgSend(v21, "sharedApplication");
  v23 = objc_msgSend(v22, "shortcutItems");

  if (v23)
  {
    v24 = sub_10004A07C(0, &qword_1011AB678, UIApplicationShortcutItem_ptr);
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    v26 = swift_bridgeObjectRetain();
    v27 = sub_1002EC76C(v26, v25);
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
    v28 = swift_bridgeObjectRelease(v25).n128_u64[0];
    if ((v27 & 1) != 0)
    {
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      return;
    }
  }
  else
  {
    v28 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
  }
  v29 = objc_msgSend(v21, "sharedApplication", *(double *)&v28, _swiftEmptyArrayStorage);
  sub_10004A07C(0, &qword_1011AB678, UIApplicationShortcutItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "setShortcutItems:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

}

id sub_100347A08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuickActionsController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for QuickActionsController()
{
  return objc_opt_self(_TtC5Music22QuickActionsController);
}

unint64_t sub_100347AC8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AB4E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

id sub_100347B10()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  _BYTE v14[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v14[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E36AE0);
  static Locale.current.getter(v4);
  String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, 0, v1, 0, 0, 256);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(UIApplicationShortcutIcon), "iconWithSystemImageName:", v7);

  v9 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v12 = objc_msgSend(v9, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", v10, v11, 0, v8, 0);

  return v12;
}

uint64_t sub_100347CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100347CE4(void **a1)
{
  uint64_t v1;

  sub_1003467A0(a1, v1);
}

void sub_100347CEC()
{
  uint64_t v0;

  sub_100346820(v0);
}

void sub_100347CF4()
{
  uint64_t v0;

  sub_100346870(v0);
}

uint64_t sub_100347CFC(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003469C8(a1, a2, v2);
}

uint64_t sub_100347D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100347D14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100347D1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100347D48()
{
  uint64_t v0;

  sub_100346BCC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t *sub_100347D58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    swift_unknownObjectWeakCopyInit((char *)v4 + v8, (char *)a2 + v8);
    v11 = v10[48];
    if (v11 == 255)
    {
      v17 = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
      *(_OWORD *)(v9 + 24) = v17;
      *(_OWORD *)(v9 + 33) = *(_OWORD *)(v10 + 33);
    }
    else
    {
      v12 = (void *)*((_QWORD *)v10 + 1);
      v13 = *((_QWORD *)v10 + 2);
      v14 = *((_QWORD *)v10 + 3);
      v15 = *((_QWORD *)v10 + 4);
      v25 = *((_QWORD *)v10 + 5);
      sub_100347EC8(v12, v13, v14, v15, v25, v11);
      *((_QWORD *)v9 + 1) = v12;
      *((_QWORD *)v9 + 2) = v13;
      *((_QWORD *)v9 + 3) = v14;
      *((_QWORD *)v9 + 4) = v15;
      *((_QWORD *)v9 + 5) = v25;
      v9[48] = v11;
    }
    v18 = *((_QWORD *)v10 + 7);
    if (v18)
    {
      v19 = *((_QWORD *)v10 + 8);
      *((_QWORD *)v9 + 7) = v18;
      *((_QWORD *)v9 + 8) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
    }
    v20 = *(int *)(a3 + 24);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    *v21 = *v22;
    v23 = *((_QWORD *)v22 + 3);
    *(_OWORD *)(v21 + 8) = *(_OWORD *)(v22 + 8);
    *((_QWORD *)v21 + 3) = v23;
    swift_retain();
  }
  swift_retain();
  return v4;
}

id sub_100347EC8(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
    return (id)swift_unknownObjectRetain(result, a2);
  if (a6 <= 1u)
    return result;
  return result;
}

double sub_100347EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  double result;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_unknownObjectWeakDestroy(v5, v6);
  v7 = *(unsigned __int8 *)(v5 + 48);
  if (v7 != 255)
    sub_100064AA4(*(id *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), v7);
  if (*(_QWORD *)(v5 + 56))
    swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100347F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v24 = a3;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  swift_unknownObjectWeakCopyInit(a1 + v7, a2 + v7);
  v10 = *(unsigned __int8 *)(v9 + 48);
  if (v10 == 255)
  {
    v16 = *(_OWORD *)(v9 + 24);
    *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
    *(_OWORD *)(v8 + 24) = v16;
    *(_OWORD *)(v8 + 33) = *(_OWORD *)(v9 + 33);
  }
  else
  {
    v11 = *(void **)(v9 + 8);
    v12 = *(_QWORD *)(v9 + 16);
    v13 = *(_QWORD *)(v9 + 24);
    v14 = *(_QWORD *)(v9 + 32);
    v15 = *(_QWORD *)(v9 + 40);
    sub_100347EC8(v11, v12, v13, v14, v15, *(_BYTE *)(v9 + 48));
    *(_QWORD *)(v8 + 8) = v11;
    *(_QWORD *)(v8 + 16) = v12;
    *(_QWORD *)(v8 + 24) = v13;
    *(_QWORD *)(v8 + 32) = v14;
    *(_QWORD *)(v8 + 40) = v15;
    *(_BYTE *)(v8 + 48) = v10;
  }
  v17 = *(_QWORD *)(v9 + 56);
  if (v17)
  {
    v18 = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v8 + 56) = v17;
    *(_QWORD *)(v8 + 64) = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  }
  v19 = *(int *)(v24 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v22 = *(_QWORD *)(v21 + 24);
  *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 24) = v22;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1003480CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;

  v6 = type metadata accessor for Artist(0);
  v7.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v42 = a3;
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  swift_unknownObjectWeakCopyAssign(a1 + v8, a2 + v8, v7);
  v11 = (__int128 *)(v9 + 8);
  v12 = (__int128 *)(v10 + 8);
  v13 = *(unsigned __int8 *)(v10 + 48);
  if (*(unsigned __int8 *)(v9 + 48) == 255)
  {
    if (v13 == 255)
    {
      v32 = *v12;
      v33 = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 33) = *(_OWORD *)(v10 + 33);
      *v11 = v32;
      *(_OWORD *)(v9 + 24) = v33;
    }
    else
    {
      v25 = *(void **)(v10 + 8);
      v26 = *(_QWORD *)(v10 + 16);
      v27 = *(_QWORD *)(v10 + 24);
      v28 = *(_QWORD *)(v10 + 32);
      v29 = *(_QWORD *)(v10 + 40);
      sub_100347EC8(v25, v26, v27, v28, v29, *(_BYTE *)(v10 + 48));
      *(_QWORD *)(v9 + 8) = v25;
      *(_QWORD *)(v9 + 16) = v26;
      *(_QWORD *)(v9 + 24) = v27;
      *(_QWORD *)(v9 + 32) = v28;
      *(_QWORD *)(v9 + 40) = v29;
      *(_BYTE *)(v9 + 48) = v13;
    }
  }
  else if (v13 == 255)
  {
    sub_1003482D8(v9 + 8);
    v30 = *(_OWORD *)(v10 + 33);
    v31 = *(_OWORD *)(v10 + 24);
    *v11 = *v12;
    *(_OWORD *)(v9 + 24) = v31;
    *(_OWORD *)(v9 + 33) = v30;
  }
  else
  {
    v14 = *(void **)(v10 + 8);
    v15 = *(_QWORD *)(v10 + 16);
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *(_QWORD *)(v10 + 32);
    v18 = *(_QWORD *)(v10 + 40);
    sub_100347EC8(v14, v15, v16, v17, v18, *(_BYTE *)(v10 + 48));
    v19 = *(void **)(v9 + 8);
    v20 = *(_QWORD *)(v9 + 16);
    v21 = *(_QWORD *)(v9 + 24);
    v22 = *(_QWORD *)(v9 + 32);
    v23 = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v9 + 8) = v14;
    *(_QWORD *)(v9 + 16) = v15;
    *(_QWORD *)(v9 + 24) = v16;
    *(_QWORD *)(v9 + 32) = v17;
    *(_QWORD *)(v9 + 40) = v18;
    v24 = *(_BYTE *)(v9 + 48);
    *(_BYTE *)(v9 + 48) = v13;
    sub_100064AA4(v19, v20, v21, v22, v23, v24);
  }
  v34 = *(_QWORD *)(v10 + 56);
  if (!*(_QWORD *)(v9 + 56))
  {
    if (v34)
    {
      v36 = *(_QWORD *)(v10 + 64);
      *(_QWORD *)(v9 + 56) = v34;
      *(_QWORD *)(v9 + 64) = v36;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
    goto LABEL_15;
  }
  if (!v34)
  {
    swift_release();
    goto LABEL_14;
  }
  v35 = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 56) = v34;
  *(_QWORD *)(v9 + 64) = v35;
  swift_retain();
  swift_release();
LABEL_15:
  v37 = *(int *)(v42 + 24);
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_BYTE *)v38 = *(_BYTE *)(a2 + v37);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(a2 + v37 + 8);
  swift_retain();
  swift_release();
  v40 = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 24) = v40;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1003482D8(uint64_t a1)
{
  destroy for PresentationSource.Position(a1);
  return a1;
}

uint64_t sub_10034830C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a2 + v7;
  v9 = swift_unknownObjectWeakTakeInit(a1 + v7, a2 + v7);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v8 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v8 + 24);
  *(_OWORD *)(v9 + 33) = *(_OWORD *)(v8 + 33);
  v10 = *(_QWORD *)(v8 + 56);
  if (v10)
  {
    v11 = *(_QWORD *)(v8 + 64);
    *(_QWORD *)(v9 + 56) = v10;
    *(_QWORD *)(v9 + 64) = v11;
  }
  else
  {
    *(_OWORD *)(v9 + 56) = *(_OWORD *)(v8 + 56);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_1003483C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for Artist(0);
  v7.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  swift_unknownObjectWeakTakeAssign(a1 + v8, a2 + v8, v7);
  v11 = *(unsigned __int8 *)(v9 + 48);
  if (v11 != 255)
  {
    v12 = *(unsigned __int8 *)(v10 + 48);
    if (v12 != 255)
    {
      v13 = *(_QWORD *)(v10 + 40);
      v14 = *(void **)(v9 + 8);
      v15 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      v17 = *(_QWORD *)(v9 + 32);
      v18 = *(_QWORD *)(v9 + 40);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
      *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
      *(_QWORD *)(v9 + 40) = v13;
      *(_BYTE *)(v9 + 48) = v12;
      sub_100064AA4(v14, v15, v16, v17, v18, v11);
      goto LABEL_6;
    }
    sub_1003482D8(v9 + 8);
  }
  v19 = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = v19;
  *(_OWORD *)(v9 + 33) = *(_OWORD *)(v10 + 33);
LABEL_6:
  v20 = *(_QWORD *)(v10 + 56);
  if (!*(_QWORD *)(v9 + 56))
  {
    if (v20)
    {
      v22 = *(_QWORD *)(v10 + 64);
      *(_QWORD *)(v9 + 56) = v20;
      *(_QWORD *)(v9 + 64) = v22;
      goto LABEL_13;
    }
LABEL_12:
    *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
    goto LABEL_13;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_12;
  }
  v21 = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 56) = v20;
  *(_QWORD *)(v9 + 64) = v21;
  swift_release();
LABEL_13:
  v23 = *(int *)(a3 + 24);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  swift_release();
  *(_OWORD *)(v24 + 16) = *(_OWORD *)(v25 + 16);
  swift_release();
  return a1;
}

uint64_t sub_100348520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034852C);
}

uint64_t sub_10034852C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003485AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003485B8);
}

uint64_t sub_1003485B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for LibraryArtistHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AD968;
  if (!qword_1011AD968)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryArtistHeaderView);
  return result;
}

uint64_t sub_100348670(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "H";
    v4[2] = &unk_100EB5870;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003486EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9CC94, 1);
}

uint64_t sub_1003486FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t *v30;
  uint64_t v31;
  double v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t OpaqueTypeConformance2;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  __int128 v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;

  v2 = v1;
  v96 = a1;
  v89 = type metadata accessor for LocalCoordinateSpace(0);
  v3 = __chkstk_darwin(v89);
  v88 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DragGesture(0, v3);
  v92 = *(_QWORD *)(v5 - 8);
  v93 = v5;
  __chkstk_darwin(v5);
  v91 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C(&qword_1011AD9A8);
  __chkstk_darwin(v95);
  v94 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for LibraryArtistHeaderView(0);
  v76 = *(_QWORD *)(v86 - 8);
  v8 = __chkstk_darwin(v86);
  v77 = v9;
  v78 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for TapGesture(0, v8);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100007E8C(&qword_1011AD9B0);
  v83 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v82 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AD9B8);
  __chkstk_darwin(v12);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AD9C0);
  __chkstk_darwin(v15);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100007E8C(&qword_1011AD9C8);
  v18 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_1011AD9D0);
  __chkstk_darwin(v74);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011AD9D8);
  __chkstk_darwin(v97);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_1011AD9E0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v98 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = static HorizontalAlignment.center.getter(v26);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v27 = (uint64_t)&v14[*(int *)(sub_100007E8C(&qword_1011AD9E8) + 44)];
  *(_QWORD *)&v90 = v2;
  sub_100348E88(v2, v27);
  if (qword_10119BEE0 != -1)
    swift_once(&qword_10119BEE0, sub_100349AD4);
  v28 = qword_1011AD900;
  KeyPath = swift_getKeyPath(&unk_100EB58D8);
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011AD9B8);
  v30 = (uint64_t *)&v17[*(int *)(v15 + 36)];
  *v30 = KeyPath;
  v30[1] = v28;
  swift_retain();
  v31 = sub_10004FF60((uint64_t)v14, &qword_1011AD9B8);
  v32 = static Font.Weight.bold.getter(v31);
  v33 = sub_100349B14();
  View.fontWeight(_:)(*(_QWORD *)&v32, 0, v15, v33);
  sub_10004FF60((uint64_t)v17, &qword_1011AD9C0);
  LODWORD(v32) = static HierarchicalShapeStyle.primary.getter(v34);
  v35 = v75;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v20, v75);
  *(_DWORD *)&v22[*(int *)(v74 + 36)] = LODWORD(v32);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v35);
  v36 = swift_getKeyPath(&unk_100EB5908);
  sub_10004A160((uint64_t)v22, (uint64_t)v24, &qword_1011AD9D0);
  v37 = v97;
  v38 = &v24[*(int *)(v97 + 36)];
  *(_QWORD *)v38 = v36;
  v38[8] = 1;
  sub_10004FF60((uint64_t)v22, &qword_1011AD9D0);
  v39 = v79;
  TapGesture.init(count:)(1);
  v40 = v90;
  v41 = v78;
  sub_100349BB8(v90, v78);
  v42 = *(unsigned __int8 *)(v76 + 80);
  v43 = (v42 + 16) & ~v42;
  v44 = swift_allocObject(&unk_1010C07A0, v43 + v77, v42 | 7);
  sub_100349CD4(v41, v44 + v43);
  v45 = v82;
  v46 = v81;
  Gesture.onEnded(_:)(sub_100349D18, v44, v81, &protocol witness table for TapGesture);
  v47 = swift_release();
  v48 = (*(uint64_t (**)(char *, uint64_t, __n128))(v80 + 8))(v39, v46, v47);
  v49 = static GestureMask.all.getter(v48);
  v50 = sub_100349D54();
  v51 = sub_100049F28(&qword_1011ADA10, &qword_1011AD9B0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v52 = v87;
  View.simultaneousGesture<A>(_:including:)(v45, v49, v37, v87, v50, v51);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v45, v52);
  v53 = sub_10004FF60((uint64_t)v24, &qword_1011AD9D8);
  v54 = v88;
  static CoordinateSpaceProtocol<>.local.getter(v53);
  v55 = v91;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v54, v89, &protocol witness table for LocalCoordinateSpace, 0.0);
  v56 = (char *)(v40 + *(int *)(v86 + 24));
  v57 = *((_QWORD *)v56 + 1);
  v99 = *v56;
  v100 = v57;
  v101 = *((_OWORD *)v56 + 1);
  v58 = sub_100007E8C(&qword_1011ADA18);
  GestureState.projectedValue.getter(&v102, v58);
  LOBYTE(v54) = v102;
  v59 = v103;
  v90 = v104;
  v61 = v92;
  v60 = v93;
  v62 = (uint64_t)v94;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v94, v55, v93);
  v63 = v95;
  v64 = v62 + *(int *)(v95 + 44);
  *(_BYTE *)v64 = (_BYTE)v54;
  *(_QWORD *)(v64 + 8) = v59;
  *(_OWORD *)(v64 + 16) = v90;
  v65 = (_QWORD *)(v62 + *(int *)(v63 + 48));
  *v65 = sub_100349AA4;
  v65[1] = 0;
  v66 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v55, v60);
  v67 = static GestureMask.all.getter(v66);
  v102 = v97;
  v103 = v52;
  *(_QWORD *)&v104 = v50;
  *((_QWORD *)&v104 + 1) = v51;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
  v69 = sub_100049F28(&qword_1011ADA20, &qword_1011AD9A8, (uint64_t)&protocol conformance descriptor for GestureStateGesture<A, B>);
  v70 = v67;
  v71 = v85;
  v72 = v98;
  View.simultaneousGesture<A>(_:including:)(v62, v70, v85, v63, OpaqueTypeConformance2, v69);
  sub_10004FF60(v62, &qword_1011AD9A8);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v72, v71);
}

uint64_t sub_100348E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  double v42;
  uint64_t OpaqueTypeConformance2;
  char *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  __int128 v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136[8];
  _OWORD v137[3];

  v123 = a2;
  v111 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v3 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v5 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v9);
  v11 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v13 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100007E8C(&qword_1011ADA38);
  __chkstk_darwin(v107);
  v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011ADA40);
  __chkstk_darwin(v110);
  v17 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011ADA48);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v112 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C(&qword_1011ADA50);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_1011ADA58);
  __chkstk_darwin(v113);
  v21 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_1011ADA60);
  __chkstk_darwin(v119);
  v122 = (uint64_t)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v120 = (uint64_t)&v107 - v24;
  v25 = type metadata accessor for Artist(0);
  v121 = a1;
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v25, (uint64_t)&protocol witness table for Artist, v11);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 6, 10, v26);
  if (qword_10119BED0 != -1)
    swift_once(&qword_10119BED0, sub_100349AB0);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(qword_1011AD8F0, 0, qword_1011AD8F0, 0, 0, 1, 2, (uint64_t)v136);
  v27 = v111;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v111);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v11, (uint64_t)v8, (uint64_t)v136, (uint64_t)v5, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
  sub_10034A01C((uint64_t)v8);
  v28 = sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3E10);
  v29 = qword_1011AD8F0;
  v30 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(v137, v29, 0, v29, 0, v30, v31);
  v32 = v108;
  v33 = v109;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v15, v13, v109);
  v34 = &v15[*(int *)(v107 + 36)];
  v35 = v137[1];
  *(_OWORD *)v34 = v137[0];
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v137[2];
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
  sub_10004A160((uint64_t)v15, (uint64_t)v17, &qword_1011ADA38);
  v36 = v110;
  v37 = &v17[*(int *)(v110 + 36)];
  *(_QWORD *)v37 = 0;
  *((_WORD *)v37 + 4) = 257;
  sub_10004FF60((uint64_t)v15, &qword_1011ADA38);
  v38 = sub_10034A058();
  v39 = v112;
  View.corner(_:)(0, 0, 1, v36, v38);
  sub_10004FF60((uint64_t)v17, &qword_1011ADA40);
  v40 = Border.artwork.unsafeMutableAddressor();
  v41 = *v40;
  v42 = *((double *)v40 + 1);
  LOBYTE(v32) = *((_BYTE *)v40 + 16);
  swift_retain();
  v130 = v36;
  v131 = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v130, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v44 = v116;
  v45 = v115;
  View.border(_:corner:)(v41, v32, 0, 0, 1, v115, OpaqueTypeConformance2, v42);
  v46 = swift_release();
  v47 = (*(uint64_t (**)(char *, uint64_t, __n128))(v114 + 8))(v39, v45, v46);
  static Color.black.getter(v47);
  v48 = Color.opacity(_:)(0.1);
  v49 = swift_release();
  v50 = v117;
  v51 = v118;
  (*(void (**)(char *, char *, uint64_t, __n128))(v117 + 16))(v21, v44, v118, v49);
  v52 = &v21[*(int *)(v113 + 36)];
  *(_QWORD *)v52 = v48;
  *(_OWORD *)(v52 + 8) = xmmword_100EB5830;
  *((_QWORD *)v52 + 3) = 0x4000000000000000;
  v53 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v44, v51);
  v54 = static Edge.Set.bottom.getter(v53);
  if (qword_10119BED8 != -1)
    swift_once(&qword_10119BED8, sub_100349AC4);
  v55 = EdgeInsets.init(_all:)(*(double *)&qword_1011AD8F8);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v62 = v122;
  sub_10004A160((uint64_t)v21, v122, &qword_1011ADA58);
  v63 = v62 + *(int *)(v119 + 36);
  *(_BYTE *)v63 = v54;
  *(double *)(v63 + 8) = v55;
  *(_QWORD *)(v63 + 16) = v57;
  *(_QWORD *)(v63 + 24) = v59;
  *(_QWORD *)(v63 + 32) = v61;
  *(_BYTE *)(v63 + 40) = 0;
  sub_10004FF60((uint64_t)v21, &qword_1011ADA58);
  v64 = v120;
  v65 = sub_10034A158(v62, v120);
  v66 = v121;
  Artist.catalogID.getter(v65);
  v68 = v67;
  swift_bridgeObjectRelease(v67);
  if (v68)
  {
    v130 = Artist.name.getter(v69);
    v131 = v70;
    v71 = sub_100055B68();
    v72 = Text.init<A>(_:)(&v130, &type metadata for String, v71);
    v74 = v73;
    v76 = v75;
    v78 = v77;
    sub_10023ACBC();
    if (qword_10119BEE8 != -1)
      swift_once(&qword_10119BEE8, sub_100349AF0);
    v79 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(qword_1011AD908, UIFontWeightBold);
    v80 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v79, 1);

    LODWORD(v125) = static HierarchicalShapeStyle.secondary.getter(v81);
    Text.withChevron<A>(_:tintColor:)(v80, (uint64_t)&v125, v72, v74, v76 & 1, v78, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for HierarchicalShapeStyle, (uint64_t)&v130, v82);

    sub_100055BAC(v72, v74, v76 & 1);
    swift_bridgeObjectRelease(v78);
    v83 = v130;
    v84 = v131;
    v85 = v132;
    v86 = v133;
    v87 = v66 + *(int *)(type metadata accessor for LibraryArtistHeaderView(0) + 24);
    v88 = *(_QWORD *)(v87 + 8);
    LOBYTE(v125) = *(_BYTE *)v87;
    v126 = v88;
    v127 = *(_OWORD *)(v87 + 16);
    v89 = sub_100007E8C(&qword_1011ADA18);
    GestureState.wrappedValue.getter(&v124, v89);
    v90 = 0x3FF0000000000000;
    if ((_BYTE)v124)
      v90 = 0x3FE0000000000000;
    v125 = v83;
    v126 = v84;
    *(_QWORD *)&v127 = v85;
    *((_QWORD *)&v127 + 1) = v86;
    v128 = v90;
    v129 = 0;
  }
  else
  {
    v130 = Artist.name.getter(v69);
    v131 = v91;
    v92 = sub_100055B68();
    v125 = Text.init<A>(_:)(&v130, &type metadata for String, v92);
    v126 = v93;
    *(_QWORD *)&v127 = v94 & 1;
    *((_QWORD *)&v127 + 1) = v95;
    v128 = 0;
    v129 = 1;
  }
  v96 = sub_100007E8C(&qword_1011ADA78);
  v97 = sub_10034A1A0();
  _ConditionalContent<>.init(storage:)(&v125, v96, &type metadata for Text, v97, &protocol witness table for Text);
  v98 = v130;
  v99 = v131;
  v100 = v132;
  v101 = v133;
  v102 = v134;
  v103 = v135;
  sub_10004A160(v64, v62, &qword_1011ADA60);
  v104 = v123;
  sub_10004A160(v62, v123, &qword_1011ADA60);
  v105 = v104 + *(int *)(sub_100007E8C(&qword_1011ADA88) + 48);
  *(_QWORD *)v105 = v98;
  *(_QWORD *)(v105 + 8) = v99;
  *(_QWORD *)(v105 + 16) = v100;
  *(_QWORD *)(v105 + 24) = v101;
  *(_QWORD *)(v105 + 32) = v102;
  *(_BYTE *)(v105 + 40) = v103;
  sub_10034A204(v98, v99, v100);
  sub_10004FF60(v64, &qword_1011ADA60);
  sub_10034A22C(v98, v99, v100, v101);
  return sub_10004FF60(v62, &qword_1011ADA60);
}

double sub_100349894(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *Strong;
  double result;
  id v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BYTE v21[72];

  v3 = type metadata accessor for LibraryArtistHeaderView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100064AC8(a2 + *(int *)(v3 + 20), (uint64_t)v21);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v21);
  sub_100064B4C((uint64_t)v21);
  if (Strong)
  {
    v12 = sub_10076BBD4();

    if (v12)
    {
      v13 = type metadata accessor for TaskPriority(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
      sub_100349BB8(a2, (uint64_t)&v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8]);
      type metadata accessor for MainActor(0);
      v14 = swift_retain();
      v15 = static MainActor.shared.getter(v14);
      v16 = *(unsigned __int8 *)(v4 + 80);
      v17 = (v16 + 32) & ~v16;
      v18 = (v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
      v19 = swift_allocObject(&unk_1010C07C8, v18 + 8, v16 | 7);
      *(_QWORD *)(v19 + 16) = v15;
      *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
      sub_100349CD4((uint64_t)v6, v19 + v17);
      *(_QWORD *)(v19 + v18) = v12;
      sub_100166D14((uint64_t)v9, (uint64_t)&unk_1011ADA30, v19);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100349A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  __n128 v7;
  _QWORD *v8;

  v5[2] = type metadata accessor for MainActor(0);
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_10119EB9C);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_100088358;
  return sub_1000738E0(a5);
}

void sub_100349AA4(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
}

void sub_100349AB0()
{
  qword_1011AD8F0 = 0x4055800000000000;
}

void sub_100349AC4()
{
  qword_1011AD8F8 = 0x4024000000000000;
}

uint64_t sub_100349AD4()
{
  uint64_t result;

  result = static Font.title.getter();
  qword_1011AD900 = result;
  return result;
}

UIFontTextStyle sub_100349AF0()
{
  qword_1011AD908 = (uint64_t)UIFontTextStyleTitle1;
  return UIFontTextStyleTitle1;
}

unint64_t sub_100349B14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AD9F0;
  if (!qword_1011AD9F0)
  {
    v1 = sub_100044B54(&qword_1011AD9C0);
    sub_100049F28(&qword_1011AD9F8, &qword_1011AD9B8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AD9F0);
  }
  return result;
}

uint64_t sub_100349BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryArtistHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100349BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;

  v1 = type metadata accessor for LibraryArtistHeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Artist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  v6 = v0 + v3 + *(int *)(v1 + 20);
  swift_unknownObjectWeakDestroy(v6, v7);
  v8 = *(unsigned __int8 *)(v6 + 48);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v8);
  if (*(_QWORD *)(v6 + 56))
    swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100349CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryArtistHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100349D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LibraryArtistHeaderView(0) - 8) + 80);
  return sub_100349894(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_100349D54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ADA00;
  if (!qword_1011ADA00)
  {
    v1 = sub_100044B54(&qword_1011AD9D8);
    sub_100349DD8();
    sub_100049F28((unint64_t *)&unk_1011A9740, &qword_1011BF940, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ADA00);
  }
  return result;
}

unint64_t sub_100349DD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011ADA08;
  if (!qword_1011ADA08)
  {
    v1 = sub_100044B54(&qword_1011AD9D0);
    v2[0] = sub_100044B54(&qword_1011AD9C0);
    v2[1] = sub_100349B14();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ADA08);
  }
  return result;
}

uint64_t sub_100349E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;

  v1 = type metadata accessor for LibraryArtistHeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for Artist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  v6 = v0 + v3 + *(int *)(v1 + 20);
  swift_unknownObjectWeakDestroy(v6, v7);
  v8 = *(unsigned __int8 *)(v6 + 48);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v8);
  if (*(_QWORD *)(v6 + 56))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
}

uint64_t sub_100349F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for LibraryArtistHeaderView(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011ADA2C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_100349A30(a1, v6, v7, v8, v9);
}

uint64_t sub_10034A01C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkImage.Placeholder(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10034A058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ADA68;
  if (!qword_1011ADA68)
  {
    v1 = sub_100044B54(&qword_1011ADA40);
    sub_10034A0C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ADA68);
  }
  return result;
}

unint64_t sub_10034A0C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011ADA70;
  if (!qword_1011ADA70)
  {
    v1 = sub_100044B54(&qword_1011ADA38);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011C5080);
    v2[1] = sub_1000E4264();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ADA70);
  }
  return result;
}

uint64_t sub_10034A158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011ADA60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10034A1A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011ADA80;
  if (!qword_1011ADA80)
  {
    v1 = sub_100044B54(&qword_1011ADA78);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011ADA80);
  }
  return result;
}

uint64_t sub_10034A204(uint64_t a1, uint64_t a2, char a3)
{
  sub_100055BBC(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

double sub_10034A22C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  sub_100055BAC(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  return result;
}

uint64_t sub_10034A254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v0 = sub_100044B54(&qword_1011AD9E0);
  v1 = sub_100044B54(&qword_1011AD9A8);
  v5 = sub_100044B54(&qword_1011AD9D8);
  v6 = sub_100044B54(&qword_1011AD9B0);
  v7 = sub_100349D54();
  v8 = sub_100049F28(&qword_1011ADA10, &qword_1011AD9B0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
  v3 = sub_100049F28(&qword_1011ADA20, &qword_1011AD9A8, (uint64_t)&protocol conformance descriptor for GestureStateGesture<A, B>);
  v5 = v0;
  v6 = v1;
  v7 = OpaqueTypeConformance2;
  v8 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
}

double sub_10034A348@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  double result;
  _QWORD v25[2];
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v10 = type metadata accessor for BorderedButtonStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1;
  *(_QWORD *)&v27 = a2;
  v15 = static Color.white.getter(v12);
  v17 = type metadata accessor for LibraryControl(0, a3, a4, v16);
  WitnessTable = swift_getWitnessTable(&unk_100EC0418, v17);
  View.accentColor(_:)(&v29, v15, v17, WitnessTable);
  swift_release(v15);
  v26 = v29;
  v27 = v30;
  v28 = v31;
  BorderedButtonStyle.init()();
  v19 = sub_100044B54(&qword_1011B5800);
  v20 = type metadata accessor for ModifiedContent(0, v17, v19);
  v21 = sub_10034A4CC();
  v25[0] = WitnessTable;
  v25[1] = v21;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v23 = sub_10034A518();
  sub_10058DD18((uint64_t)v14, 2, v20, v10, v22, v23, a5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  swift_unknownObjectRelease(v27);
  swift_release(*((_QWORD *)&v27 + 1));
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

unint64_t sub_10034A4CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4620;
  if (!qword_1011A4620)
  {
    v1 = sub_100044B54(&qword_1011B5800);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4620);
  }
  return result;
}

unint64_t sub_10034A518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0D08;
  if (!qword_1011A0D08)
  {
    v1 = type metadata accessor for BorderedButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BorderedButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0D08);
  }
  return result;
}

uint64_t sub_10034A560()
{
  uint64_t updated;
  uint64_t result;

  updated = type metadata accessor for WidgetUpdateManager(0);
  swift_allocObject(updated, *(unsigned int *)(updated + 48), *(unsigned __int16 *)(updated + 52));
  result = sub_10034B198();
  qword_10124CDF0 = result;
  return result;
}

void sub_10034A59C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  char v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A9B80);
  v60 = *(_QWORD *)(v2 - 8);
  v61 = v2;
  __chkstk_darwin(v2);
  v59 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011ADC10);
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  __chkstk_darwin(v4);
  v62 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A8EE0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011B85B0);
  v58 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject(&unk_1010C0860, 40, 7);
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v0;
  swift_retain();
  sub_1000E8908((uint64_t)v18, (uint64_t)&unk_1011ADC20, (uint64_t)v20);
  swift_release();
  sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A13B0);
  if (UIApp)
  {
    v21 = objc_msgSend(UIApp, "launchedToTest");
    v22 = (char)v21;
    v23 = Logger.logObject.getter(v21);
    v24 = static os_log_type_t.default.getter(v23);
    v25 = os_log_type_enabled(v23, v24);
    if ((v22 & 1) != 0)
    {
      if (v25)
      {
        v26 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Disabled because an automated test is running", v26, 2u);
        swift_slowDealloc(v26, -1, -1);
      }

    }
    else
    {
      if (v25)
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Starting widget update manager", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }

      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      (*(void (**)(void))(*(_QWORD *)qword_10124C788 + 456))();
      v28 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v65 = (id)static OS_dispatch_queue.main.getter(v28, v29, v30, v31, v32, v33, v34, v35);
      v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 1, 1, v36);
      v37 = sub_100049F28((unint64_t *)&unk_1011A8F00, (uint64_t *)&unk_1011A8EE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v38 = sub_10006A92C();
      Publisher.receive<A>(on:options:)(&v65, v8, v9, v28, v37, v38);
      sub_10004FF60((uint64_t)v8, &qword_1011A08F0);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v39 = swift_allocObject(&unk_1010C0888, 24, 7);
      swift_weakInit(v39 + 16, v1);
      v40 = sub_100049F28((unint64_t *)&unk_1011A8F10, &qword_1011B85B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v41 = Publisher<>.sink(receiveValue:)(sub_10034E07C, v39, v13, v40);
      v42 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v15, v13, v42);
      v1[4] = v41;
      swift_release();
      v43 = ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
      swift_retain();
      v44 = v59;
      ApplicationCapabilities.Controller.$capabilities.getter();
      swift_release();
      v45 = sub_100049F28(&qword_1011A1620, (uint64_t *)&unk_1011A9B80, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v46 = sub_10034E084();
      v47 = v61;
      v48 = v62;
      Publisher<>.removeDuplicates()(v61, v45, v46);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v47);
      v49 = swift_allocObject(&unk_1010C0888, 24, 7);
      swift_weakInit(v49 + 16, v1);
      v50 = sub_100049F28(&qword_1011ADC30, &qword_1011ADC10, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
      v51 = v64;
      v52 = Publisher<>.sink(receiveValue:)(sub_10034E0C8, v49, v64, v50);
      v53 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v48, v51, v53);
      v1[2] = v52;
      swift_release();
      v54 = (void *)*ApplicationCapabilities.NotificationNames.activeAccountDidChange.unsafeMutableAddressor();
      v55 = *v43;
      v56 = type metadata accessor for NotificationObserver();
      swift_allocObject(v56, 64, 7);
      v57 = v54;
      swift_retain();
      v1[3] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v57, v55, 1, 1, (uint64_t)sub_10034AD8C, 0);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10034ABA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_10034ABBC, 0, 0);
}

uint64_t sub_10034ABBC()
{
  uint64_t v0;

  sub_10034D410();
  sub_10034D098();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10034ABF0(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  id v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  _BYTE v20[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(void **)(Strong + 40);
    *(_QWORD *)(Strong + 40) = v7;
    v12 = type metadata accessor for TaskPriority(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = v7;
    v13(v6, 1, 1, v12);
    type metadata accessor for MainActor(0);
    v15 = v11;
    v16 = swift_retain();
    v17 = static MainActor.shared.getter(v16);
    v18 = (_QWORD *)swift_allocObject(&unk_1010C08D8, 48, 7);
    v18[2] = v17;
    v18[3] = &protocol witness table for MainActor;
    v18[4] = v10;
    v18[5] = v11;
    sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011ADC50, (uint64_t)v18);
    swift_release();

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10034AD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_10034AF00();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10034AD8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C4B8 != -1)
    swift_once(&qword_10119C4B8, sub_10064DCDC);
  sub_10064D874();
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = swift_allocObject(&unk_1010C08B0, 32, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  sub_1000E8908((uint64_t)v2, (uint64_t)&unk_1011ADC40, v4);
  swift_release();
  return sub_10004FF60((uint64_t)v2, (uint64_t *)&unk_1011A13B0);
}

uint64_t sub_10034AE78()
{
  return swift_task_switch(sub_10034AE8C, 0, 0);
}

uint64_t sub_10034AE8C()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_10119C7B8 != -1)
    swift_once(&qword_10119C7B8, sub_100787A64);
  v1 = (_QWORD *)swift_task_alloc(dword_1011C7ED4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100787AA0();
}

double sub_10034AF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  double result;
  uint64_t v8;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v4 + 24))
  {
    swift_retain();
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject(&unk_1010C0838, 56, 7);
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  v6[5] = &unk_1011ADC00;
  v6[6] = v0;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v4 + 24) = sub_100166D14((uint64_t)v3, (uint64_t)&unk_1011ADC08, (uint64_t)v6);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10034B038(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10034B050, 0, 0);
}

uint64_t sub_10034B050()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Requesting widget timeline reload", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

  type metadata accessor for WidgetCenter(0);
  v4 = ((uint64_t (*)(void))static WidgetCenter.shared.getter)();
  dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)(0xD00000000000001ALL, 0x8000000100E36BB0);
  v5 = swift_release(v4);
  v6 = static WidgetCenter.shared.getter(v5);
  dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)(0xD00000000000001BLL, 0x8000000100E36BD0);
  v7 = swift_release(v6);
  v8 = static WidgetCenter.shared.getter(v7);
  dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)(0xD000000000000015, 0x8000000100E36BF0);
  swift_release(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034B198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for RateLimiter();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  v2 = swift_allocObject(v1, 32, 7);
  *(_QWORD *)(v2 + 16) = 0x3FE0000000000000;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v0 + 48) = v2;
  v3 = type metadata accessor for NotificationObserver();
  swift_allocObject(v3, 64, 7);
  *(_QWORD *)(v0 + 56) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationWillTerminateNotification, 0, 1, 1, (uint64_t)sub_10034CF04, 0);
  static Logger.music(_:)(0xD000000000000013, 0x8000000100EB5970);
  return v0;
}

uint64_t sub_10034B258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[11] = a4;
  v5[12] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[14] = v7;
  v5[15] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[16] = v9;
  v5[17] = v10;
  return swift_task_switch(sub_10034B2EC, v9, v10);
}

uint64_t sub_10034B2EC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  char **v20;
  id v21;
  id v22;
  unsigned __int8 v23;
  _QWORD *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v30;
  id v31;
  id v32;
  id v33;
  char v34;
  int v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  char v44;
  __int128 v45;
  double v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char **v52;
  _QWORD *v53;
  int v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  char v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  void *v74;
  id v75;
  id v76;
  _QWORD *v77;
  char v78;
  char v79;
  id v80;
  id v81;
  double v82;
  _QWORD *v83;
  void *v84;
  char v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  _QWORD *v95;
  id v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  _QWORD *v112;
  char v113;
  void *v114;
  void *v115;
  __int128 v116;
  __int128 v117;
  int v118;
  _QWORD *v119;
  _QWORD *v120;
  double v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  unsigned __int8 v125;
  unsigned __int8 v126;
  unsigned __int8 v127;

  v2 = v0 + 11;
  v1 = v0[11];
  v0[18] = OBJC_IVAR____TtC5Music19WidgetUpdateManager_logger;
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v120 = v0;
  if (os_log_type_enabled(v4, v5))
  {
    v7 = v0;
    v8 = v0[11];
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 136446210;
    v121 = *(double *)&v10;
    v11 = *(void **)(v8 + 40);
    v0[9] = v11;
    v12 = v11;
    v13 = sub_100007E8C(&qword_1011ADC68);
    v14 = String.init<A>(describing:)(v0 + 9, v13);
    v16 = v15;
    v7[10] = sub_100322200(v14, v15, (uint64_t *)&v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v7 + 10, v2);
    swift_release_n(v8, 2, v17);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received new player response %{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release_n(*v2, 2, v6);
  }

  v18 = *v2;
  v19 = *(void **)(*v2 + 40);
  if (!v19
    || (v20 = &selRef_referralObject,
        v21 = objc_msgSend(v19, "tracklist"),
        v22 = objc_msgSend(v21, "playingItem"),
        v21,
        !v22)
    || (v23 = objc_msgSend(v22, "isPlaceholder"), v22, (v23 & 1) != 0))
  {
    v24 = v120;
    swift_release();
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Ignoring placeholder", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    if (qword_10119BF98 != -1)
      swift_once(&qword_10119BF98, sub_1003C3770);
    sub_1003C37AC();
    sub_10034AF00();
    goto LABEL_12;
  }
  v30 = *(void **)(v18 + 40);
  v24 = v120;
  v31 = (id)v120[12];
  v119 = v2;
  if (v30)
  {
    v32 = objc_msgSend(v30, "state");
    if (v31)
    {
      v33 = v32;
      v32 = objc_msgSend((id)v120[12], "state");
      v34 = 0;
      v35 = 0;
      if (v33 == v32)
        goto LABEL_23;
    }
    else
    {
      v34 = 1;
    }
  }
  else
  {
    if (!v31)
    {
      v118 = 0;
      v43 = 0;
      v49 = 0;
      v45 = 0uLL;
      v46 = 0.0;
      v44 = 1;
      goto LABEL_55;
    }
    v32 = objc_msgSend(v31, "state");
    v34 = 0;
  }
  v36 = Logger.logObject.getter(v32);
  v37 = static os_log_type_t.default.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Playback state changed", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }

  v35 = 1;
LABEL_23:
  v118 = v35;
  v39 = *(void **)(v18 + 40);
  if (v39)
  {
    v40 = objc_msgSend(v39, "tracklist");
    v41 = objc_msgSend(v40, "playingItem");

    if (v41)
    {
      v42 = objc_msgSend(v41, "metadataObject");

      if (v42)
      {
        v43 = objc_msgSend(v42, "innermostModelObject");

        if ((v34 & 1) != 0)
        {
          v31 = 0;
          v44 = 1;
          goto LABEL_42;
        }
LABEL_38:
        v61 = objc_msgSend((id)v120[12], "tracklist");
        v62 = objc_msgSend(v61, "playingItem");

        if (v62
          && (v63 = objc_msgSend(v62, "metadataObject"), v62, v63))
        {
          v31 = objc_msgSend(v63, "innermostModelObject");

          v44 = 0;
        }
        else
        {
          v44 = 0;
          v31 = 0;
        }
LABEL_42:
        v120[19] = v31;
        *((_BYTE *)v120 + 232) = v44;
        if (v43)
        {
          v64 = objc_msgSend(v43, "identifiers");
          v65 = v64;
          if (!v31)
          {
            if (!v64)
            {
              v66 = MPModelObject.favoriteStatus.getter();
              if (v66 == 4)
              {
                v31 = 0;
                goto LABEL_30;
              }
              goto LABEL_58;
            }
            goto LABEL_53;
          }
        }
        else
        {
          v65 = 0;
          if (!v31)
          {
            v43 = 0;
            v31 = 0;
            goto LABEL_30;
          }
        }
        v67 = objc_msgSend(v31, "identifiers");
        v68 = v67;
        if (v65)
        {
          if (!v67)
          {
LABEL_53:
            v68 = v65;
LABEL_57:

            goto LABEL_58;
          }
          sub_10004A07C(0, (unint64_t *)&qword_10119E4F0, MPIdentifierSet_ptr);
          v69 = v65;
          v70 = static NSObject.== infix(_:_:)(v69, v68);

          v24 = v120;
          v20 = &selRef_referralObject;

          if ((v70 & 1) == 0)
            goto LABEL_58;
        }
        else if (v67)
        {
          goto LABEL_57;
        }
        if (v43)
        {
          v78 = MPModelObject.favoriteStatus.getter();
          v66 = MPModelObject.favoriteStatus.getter();
          v79 = v66;
          if (v78 != 4)
          {
            if (v66 != 4)
            {
              sub_10034DA90(v78);
              if ((v66 & 1) != 0)
                goto LABEL_30;
            }
            goto LABEL_58;
          }
        }
        else
        {
          v66 = MPModelObject.favoriteStatus.getter();
          v79 = v66;
        }
        if (v79 == 4)
          goto LABEL_30;
LABEL_58:
        v24[20] = v43;
        v71 = Logger.logObject.getter(v66);
        v72 = static os_log_type_t.default.getter(v71);
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v73 = 0;
          _os_log_impl((void *)&_mh_execute_header, v71, v72, "Playback item changed", v73, 2u);
          swift_slowDealloc(v73, -1, -1);
        }

        if (qword_10119BF98 != -1)
          swift_once(&qword_10119BF98, sub_1003C3770);
        v74 = *(void **)(v18 + 40);
        if (v74)
        {
          v75 = v74;
          v76 = sub_10034C9B0();

        }
        else
        {
          v76 = 0;
        }
        v24[21] = v76;
        v77 = (_QWORD *)swift_task_alloc(dword_1011B052C);
        v24[22] = v77;
        *v77 = v24;
        v77[1] = sub_10034BFBC;
        return sub_1003C450C((uint64_t)v43, (uint64_t)v76);
      }
    }
  }
  v43 = 0;
  if ((v34 & 1) == 0)
    goto LABEL_38;
  v44 = 1;
  v31 = 0;
LABEL_30:
  v30 = *(void **)(*v119 + 40);
  v45 = 0uLL;
  v46 = 0.0;
  if (v30)
  {
    v47 = objc_msgSend(v30, v20[455], 0.0);
    v48 = objc_msgSend(v47, "playingItem");

    if (v48)
    {
      objc_msgSend(v48, "duration");
      v46 = v121;
      v116 = v123;
      v117 = v122;
      v49 = v124;
      v50 = v125;
      v51 = v126;
      v52 = v20;
      v53 = v24;
      v54 = v127;

      v55 = v116;
      v45 = v117;
      v56 = 256;
      if (!v51)
        v56 = 0;
      v57 = v56 | v50;
      v58 = v54 == 0;
      v24 = v53;
      v20 = v52;
      v59 = 0x10000;
      if (v58)
        v59 = 0;
      v60 = v57 | v59;
    }
    else
    {
      v49 = 0;
      v60 = 2;
      v55 = 0uLL;
      v45 = 0uLL;
    }
    goto LABEL_72;
  }
  v49 = 0;
LABEL_55:
  v60 = 2;
  v55 = 0uLL;
LABEL_72:
  *((_BYTE *)v24 + 233) = v44;
  v24[23] = v31;
  v24[24] = v43;
  *((double *)v24 + 2) = v46;
  *(_OWORD *)(v24 + 3) = v45;
  *(_OWORD *)(v24 + 5) = v55;
  v24[7] = v49;
  v24[8] = v60;
  if ((v44 & 1) != 0
    || (v80 = objc_msgSend((id)v24[12], v20[455]),
        v81 = objc_msgSend(v80, "playingItem"),
        v80,
        !v81))
  {
    v83 = v119;
    if (v60 == 2)
    {
      v84 = *(void **)(*v119 + 40);
      v85 = *((_BYTE *)v24 + 233);
      if (v84)
        goto LABEL_80;
      if ((*((_BYTE *)v24 + 233) & 1) != 0)
      {
        v89 = 0;
        v90 = 0;
        goto LABEL_107;
      }
      goto LABEL_99;
    }
  }
  else
  {
    objc_msgSend(v81, "duration");
    v82 = v121;

    v83 = v119;
    if (v60 != 2 && v46 == v82)
    {
      v84 = *(void **)(*v119 + 40);
      if (v84)
      {
        v85 = *((_BYTE *)v24 + 233);
LABEL_80:
        v86 = v84;
        v87 = sub_10034C9B0();

        if ((v85 & 1) != 0)
        {
          v88 = 0;
          v89 = 0;
          v90 = 0;
          if (!v87)
            goto LABEL_107;
          goto LABEL_89;
        }
        v88 = sub_10034C9B0();
        if (v87)
        {
LABEL_89:
          v96 = v87;
          v97 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
          v98 = MPModelObject.bestIdentifier(for:)(*v97, 1u);
          v100 = v99;

          if (!v88)
          {
            v90 = 0;
            v89 = v87;
            if (!v100)
            {
LABEL_107:
              swift_release();
              v87 = v89;
              if (v118)
              {
LABEL_108:
                v106 = (void *)v24[23];
                v107 = (void *)v24[24];
                sub_10034AF00();

LABEL_12:
                swift_task_dealloc(v24[13]);
                return ((uint64_t (*)(void))v24[1])();
              }
LABEL_119:
              v115 = (void *)v24[23];
              v114 = (void *)v24[24];

              goto LABEL_12;
            }
            goto LABEL_110;
          }
          v101 = v100;
LABEL_101:
          v102 = v24;
          v90 = v88;
          v103 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
          v104 = MPModelObject.bestIdentifier(for:)(*v103, 1u);
          v100 = v105;

          if (v101)
          {
            if (v100)
            {
              if (v98 == v104 && v101 == v100)
              {
                v24 = v102;
                swift_release();
                swift_bridgeObjectRelease(v101);
                swift_bridgeObjectRelease(v100);
                goto LABEL_118;
              }
              v113 = _stringCompareWithSmolCheck(_:_:expecting:)(v98, v101, v104, v100, 0);
              swift_bridgeObjectRelease(v101);
              swift_bridgeObjectRelease(v100);
              if ((v113 & 1) != 0)
              {
                v24 = v102;
                swift_release();
LABEL_118:
                if ((v118 & 1) != 0)
                  goto LABEL_108;
                goto LABEL_119;
              }
              v24 = v102;
              goto LABEL_111;
            }
            v100 = v101;
            v24 = v102;
          }
          else
          {
            v89 = v87;
            v90 = v88;
            v24 = v102;
            if (!v100)
              goto LABEL_107;
          }
LABEL_110:
          swift_bridgeObjectRelease(v100);
LABEL_111:
          v24[26] = v87;
          v24[27] = v88;
          v109 = Logger.logObject.getter(v108);
          v110 = static os_log_type_t.default.getter(v109);
          if (os_log_type_enabled(v109, v110))
          {
            v111 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v111 = 0;
            _os_log_impl((void *)&_mh_execute_header, v109, v110, "Playback container changed", v111, 2u);
            swift_slowDealloc(v111, -1, -1);
          }

          if (qword_10119BF98 != -1)
            swift_once(&qword_10119BF98, sub_1003C3770);
          v112 = (_QWORD *)swift_task_alloc(dword_1011B053C);
          v24[28] = v112;
          *v112 = v24;
          v112[1] = sub_10034C884;
          return sub_1003CB920((uint64_t)v87);
        }
LABEL_100:
        v87 = 0;
        v101 = 0;
        v98 = 0;
        v89 = 0;
        v90 = 0;
        if (!v88)
          goto LABEL_107;
        goto LABEL_101;
      }
LABEL_99:
      v88 = sub_10034C9B0();
      goto LABEL_100;
    }
  }
  v91 = (uint64_t)(v83 - 9);
  v92 = Logger.logObject.getter(v30);
  v93 = static os_log_type_t.default.getter(v92);
  if (os_log_type_enabled(v92, v93))
  {
    v94 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v94 = 0;
    _os_log_impl((void *)&_mh_execute_header, v92, v93, "Playback duration snapshot changed", v94, 2u);
    swift_slowDealloc(v94, -1, -1);
  }

  if (qword_10119BF98 != -1)
    swift_once(&qword_10119BF98, sub_1003C3770);
  v95 = (_QWORD *)swift_task_alloc(dword_1011B0534);
  v24[25] = v95;
  *v95 = v24;
  v95[1] = sub_10034C568;
  return sub_1003CA694(v91);
}

uint64_t sub_10034BFBC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 168);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));

  return swift_task_switch(sub_10034C00C, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_10034C00C()
{
  uint64_t v0;
  __int128 v1;
  char v2;
  void *v3;
  __int128 v4;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  char v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD *v43;
  char v44;
  __int128 v45;
  double v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  unsigned __int8 v50;
  char v51;
  char v52;

  v1 = *(_OWORD *)(v0 + 152);
  v2 = *(_BYTE *)(v0 + 232);
  v3 = *(void **)(*(_QWORD *)(v0 + 88) + 40);
  v4 = 0uLL;
  v5 = 0.0;
  if (v3)
  {
    v45 = *(_OWORD *)(v0 + 152);
    v6 = objc_msgSend(v3, "tracklist");
    v7 = objc_msgSend(v6, "playingItem");

    if (v7)
    {
      objc_msgSend(v7, "duration");
      v5 = v46;
      v8 = v49;

      v9 = v48;
      v4 = v47;
      v10 = 256;
      if (!v51)
        v10 = 0;
      v11 = v10 | v50;
      v12 = 0x10000;
      if (!v52)
        v12 = 0;
      v13 = v11 | v12;
      v1 = v45;
    }
    else
    {
      v8 = 0;
      v13 = 2;
      v9 = 0uLL;
      v1 = v45;
      v4 = 0uLL;
    }
  }
  else
  {
    v8 = 0;
    v13 = 2;
    v9 = 0uLL;
  }
  *(_BYTE *)(v0 + 233) = v2;
  *(_OWORD *)(v0 + 184) = v1;
  *(double *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 24) = v4;
  *(_OWORD *)(v0 + 40) = v9;
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 64) = v13;
  if ((v2 & 1) != 0
    || (v14 = objc_msgSend(*(id *)(v0 + 96), "tracklist"),
        v15 = objc_msgSend(v14, "playingItem"),
        v14,
        !v15))
  {
    if (v13 == 2)
    {
      v16 = *(void **)(*(_QWORD *)(v0 + 88) + 40);
      v17 = *(_BYTE *)(v0 + 233);
      if (v16)
        goto LABEL_18;
      if ((*(_BYTE *)(v0 + 233) & 1) != 0)
      {
        v21 = 0;
        v22 = 0;
        goto LABEL_41;
      }
      goto LABEL_33;
    }
  }
  else
  {
    objc_msgSend(v15, "duration");

    if (v13 != 2 && v5 == v46)
    {
      v16 = *(void **)(*(_QWORD *)(v0 + 88) + 40);
      if (v16)
      {
        v17 = *(_BYTE *)(v0 + 233);
LABEL_18:
        v18 = v16;
        v19 = sub_10034C9B0();

        if ((v17 & 1) != 0)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          if (!v19)
            goto LABEL_41;
          goto LABEL_27;
        }
        v20 = sub_10034C9B0();
        if (v19)
        {
LABEL_27:
          v28 = v19;
          v29 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
          v30 = MPModelObject.bestIdentifier(for:)(*v29, 1u);
          v32 = v31;

          if (!v20)
          {
            v22 = 0;
            v21 = v19;
            if (!v32)
              goto LABEL_41;
            goto LABEL_44;
          }
          v33 = v32;
LABEL_35:
          v22 = v20;
          v34 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
          v35 = MPModelObject.bestIdentifier(for:)(*v34, 1u);
          v32 = v36;

          if (v33)
          {
            if (v32)
            {
              if (v30 == v35 && v33 == v32)
              {
                swift_release();
                swift_bridgeObjectRelease(v33);
                swift_bridgeObjectRelease(v32);
LABEL_42:
                v38 = *(void **)(v0 + 184);
                v37 = *(void **)(v0 + 192);
                sub_10034AF00();

                swift_task_dealloc(*(_QWORD *)(v0 + 104));
                return (*(uint64_t (**)(void))(v0 + 8))();
              }
              v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v33, v35, v32, 0);
              swift_bridgeObjectRelease(v33);
              swift_bridgeObjectRelease(v32);
              if ((v44 & 1) != 0)
              {
                swift_release();
                goto LABEL_42;
              }
              goto LABEL_45;
            }
            v32 = v33;
LABEL_44:
            swift_bridgeObjectRelease(v32);
LABEL_45:
            *(_QWORD *)(v0 + 208) = v19;
            *(_QWORD *)(v0 + 216) = v20;
            v40 = Logger.logObject.getter(v39);
            v41 = static os_log_type_t.default.getter(v40);
            if (os_log_type_enabled(v40, v41))
            {
              v42 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v42 = 0;
              _os_log_impl((void *)&_mh_execute_header, v40, v41, "Playback container changed", v42, 2u);
              swift_slowDealloc(v42, -1, -1);
            }

            if (qword_10119BF98 != -1)
              swift_once(&qword_10119BF98, sub_1003C3770);
            v43 = (_QWORD *)swift_task_alloc(dword_1011B053C);
            *(_QWORD *)(v0 + 224) = v43;
            *v43 = v0;
            v43[1] = sub_10034C884;
            return sub_1003CB920((uint64_t)v19);
          }
          v21 = v19;
          v22 = v20;
          if (v32)
            goto LABEL_44;
LABEL_41:
          swift_release();
          v19 = v21;
          goto LABEL_42;
        }
LABEL_34:
        v19 = 0;
        v33 = 0;
        v30 = 0;
        v21 = 0;
        v22 = 0;
        if (!v20)
          goto LABEL_41;
        goto LABEL_35;
      }
LABEL_33:
      v20 = sub_10034C9B0();
      goto LABEL_34;
    }
  }
  v23 = Logger.logObject.getter(v3);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Playback duration snapshot changed", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

  if (qword_10119BF98 != -1)
    swift_once(&qword_10119BF98, sub_1003C3770);
  v26 = (_QWORD *)swift_task_alloc(dword_1011B0534);
  *(_QWORD *)(v0 + 200) = v26;
  *v26 = v0;
  v26[1] = sub_10034C568;
  return sub_1003CA694(v0 + 16);
}

uint64_t sub_10034C568()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 200));
  return swift_task_switch(sub_10034C5B4, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_10034C5B4()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  char v25;

  v1 = *(void **)(*(_QWORD *)(v0 + 88) + 40);
  v2 = *(_BYTE *)(v0 + 233);
  if (v1)
  {
    v3 = v1;
    v4 = sub_10034C9B0();

    if ((v2 & 1) != 0)
    {
      v5 = 0;
      v6 = 0;
      v7 = 0;
      if (!v4)
        goto LABEL_20;
      goto LABEL_8;
    }
    v5 = sub_10034C9B0();
    if (v4)
    {
LABEL_8:
      v8 = v4;
      v9 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
      v10 = MPModelObject.bestIdentifier(for:)(*v9, 1u);
      v12 = v11;

      if (v5)
      {
        v13 = v12;
        goto LABEL_12;
      }
      v7 = 0;
      v6 = v4;
      if (v12)
      {
LABEL_23:
        swift_bridgeObjectRelease(v12);
        goto LABEL_24;
      }
LABEL_20:
      swift_release();
      v4 = v6;
      goto LABEL_21;
    }
  }
  else
  {
    if ((*(_BYTE *)(v0 + 233) & 1) != 0)
    {
      v6 = 0;
      v7 = 0;
      goto LABEL_20;
    }
    v5 = sub_10034C9B0();
  }
  v4 = 0;
  v13 = 0;
  v10 = 0;
  v6 = 0;
  v7 = 0;
  if (!v5)
    goto LABEL_20;
LABEL_12:
  v7 = v5;
  v14 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
  v15 = MPModelObject.bestIdentifier(for:)(*v14, 1u);
  v12 = v16;

  if (!v13)
  {
    v6 = v4;
    v7 = v5;
    if (!v12)
      goto LABEL_20;
    goto LABEL_23;
  }
  if (!v12)
  {
    v12 = v13;
    goto LABEL_23;
  }
  if (v10 == v15 && v13 == v12)
  {
    swift_release();
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v12);
LABEL_21:
    v18 = *(void **)(v0 + 184);
    v17 = *(void **)(v0 + 192);
    sub_10034AF00();

    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v13, v15, v12, 0);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);
  if ((v25 & 1) != 0)
  {
    swift_release();
    goto LABEL_21;
  }
LABEL_24:
  *(_QWORD *)(v0 + 208) = v4;
  *(_QWORD *)(v0 + 216) = v5;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Playback container changed", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  if (qword_10119BF98 != -1)
    swift_once(&qword_10119BF98, sub_1003C3770);
  v24 = (_QWORD *)swift_task_alloc(dword_1011B053C);
  *(_QWORD *)(v0 + 224) = v24;
  *v24 = v0;
  v24[1] = sub_10034C884;
  return sub_1003CB920((uint64_t)v4);
}

uint64_t sub_10034C884()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  return swift_task_switch(sub_10034C8D0, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_10034C8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  swift_release();
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = swift_retain();
  v5 = static MainActor.shared.getter(v4);
  v6 = (_QWORD *)swift_allocObject(&unk_1010C0900, 40, 7);
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v2;
  sub_100166D14(v1, (uint64_t)&unk_1011ADC60, (uint64_t)v6);
  swift_release();
  v8 = *(void **)(v0 + 208);
  v7 = *(void **)(v0 + 216);
  v10 = *(void **)(v0 + 184);
  v9 = *(void **)(v0 + 192);
  sub_10034AF00();

  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10034C9B0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v25;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v25 - v11;
  v13 = objc_msgSend(v1, "tracklist", v10);
  v14 = objc_msgSend(v13, "playingItemIndexPath");

  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v14);

  v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v15(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3D50);
    return 0;
  }
  v15(v12, v4, v5);
  v16 = objc_msgSend(v1, "tracklist");
  v17 = objc_msgSend(v16, "items");

  v19 = objc_msgSend(v17, "sectionAtIndex:", IndexPath.section.getter(v18));
  v20 = objc_msgSend(v19, "metadataObject");

  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    return 0;
  }
  v21 = objc_msgSend(v20, "flattenedGenericObject");
  if (!v21)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);

    return 0;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "anyObject");

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v23;
}

uint64_t sub_10034CC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[2] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v4[5] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v4[7] = v9;
  v4[8] = v10;
  return swift_task_switch(sub_10034CCE4, v9, v10);
}

uint64_t sub_10034CCE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  ContinuousClock.init()();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1011CA2C8 + dword_1011CA2C8);
  v1 = (_QWORD *)swift_task_alloc(unk_1011CA2CC);
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_10034CD64;
  return v3(0x8AC7230489E80000, 0, 0, 0, 1);
}

uint64_t sub_10034CD64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 72));
  v4 = v2[4];
  v3 = v2[5];
  v5 = v2[3];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[7];
    v7 = v2[8];
    v8 = sub_10034E400;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[5], v2[3]);
    v6 = v2[7];
    v7 = v2[8];
    v8 = sub_10034CE04;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10034CE04()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_10119C7B8 != -1)
    swift_once(&qword_10119C7B8, sub_100787A64);
  v1 = (_QWORD *)swift_task_alloc(dword_1011C7ED4);
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_10034CE78;
  return sub_100787AA0();
}

uint64_t sub_10034CE78()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  return swift_task_switch(sub_10034CEC4, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10034CEC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_10034AF00();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10034CF04()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (qword_10119BF98 != -1)
    swift_once(&qword_10119BF98, sub_1003C3770);
  v0 = sub_1003C37AC();
  if (qword_10119BEF0 != -1)
    v0 = swift_once(&qword_10119BEF0, sub_10034A560);
  v1 = Logger.logObject.getter(v0);
  v2 = static os_log_type_t.default.getter(v1);
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Requesting widget timeline reload for application termination", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

  v4 = type metadata accessor for WidgetCenter(0);
  static WidgetCenter.shared.getter(v4);
  dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)(0xD00000000000001ALL, 0x8000000100E36BB0);
  swift_release();
  static WidgetCenter.shared.getter(v5);
  dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)(0xD00000000000001BLL, 0x8000000100E36BD0);
  swift_release();
  static WidgetCenter.shared.getter(v6);
  dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)(0xD000000000000015, 0x8000000100E36BF0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10034D098()
{
  id v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  id v25;
  _BYTE v26[32];
  uint64_t v27;
  _BYTE v28[32];
  _BYTE v29[40];

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v25 = v0;
  if (qword_10119BDA8 != -1)
    v0 = (id)swift_once(&qword_10119BDA8, sub_1002DDCC8);
  v1 = (void *)qword_10124CCC0;
  if (qword_10124CCC0)
  {
    v2 = sub_1002DDF90();
    v3 = sub_100055B68();
    v24 = v1;
    v4 = 0;
    do
    {
      v5 = *((_BYTE *)&off_1010ABBA0 + v4 + 32);
      v28[0] = v5;
      NSUserDefaults.subscript.getter((uint64_t)&_s21WidgetUserDefaultsKeyON, v2, v3, (uint64_t)v29);
      v6 = sub_10034DE9C((uint64_t)v29, (uint64_t)v28);
      v7 = Logger.logObject.getter(v6);
      v8 = static os_log_type_t.default.getter(v7);
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc(22, -1);
        v10 = swift_slowAlloc(64, -1);
        v27 = v10;
        *(_DWORD *)v9 = 136446466;
        v26[0] = v5;
        v11 = String.init<A>(describing:)(v26, &_s21WidgetUserDefaultsKeyON);
        v12 = v3;
        v13 = v2;
        v15 = v14;
        *(_QWORD *)(v9 + 4) = sub_100322200(v11, v14, &v27);
        swift_bridgeObjectRelease(v15);
        *(_WORD *)(v9 + 12) = 2082;
        sub_10034DE9C((uint64_t)v28, (uint64_t)v26);
        v16 = sub_100007E8C(&qword_10119DCC0);
        v17 = String.init<A>(describing:)(v26, v16);
        v19 = v18;
        *(_QWORD *)(v9 + 14) = sub_100322200(v17, v18, &v27);
        v20 = v19;
        v2 = v13;
        v3 = v12;
        swift_bridgeObjectRelease(v20);
        sub_10004FF60((uint64_t)v28, &qword_10119DCC0);
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Copying to widgetUserDefaults, key: %{public}s, value %{public}s", (uint8_t *)v9, 0x16u);
        swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v10, -1, -1);
        swift_slowDealloc(v9, -1, -1);

      }
      else
      {

        sub_10004FF60((uint64_t)v28, &qword_10119DCC0);
      }
      ++v4;
      sub_10034DE9C((uint64_t)v29, (uint64_t)v28);
      v26[0] = v5;
      NSUserDefaults.subscript.setter((uint64_t)v28, (uint64_t)v26, (uint64_t)&_s21WidgetUserDefaultsKeyON, v2, v3);
      sub_10004FF60((uint64_t)v29, &qword_10119DCC0);
    }
    while (v4 != 5);

  }
  else
  {
    v21 = Logger.logObject.getter(v0);
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Unable to obtain widget user defaults", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

  }
}

uint64_t sub_10034D410()
{
  void *v0;
  uint64_t v1;
  _UNKNOWN **v2;
  uint64_t *v3;
  char **v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  uint64_t v16;
  char **v17;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[32];
  uint64_t v29;
  _BYTE v30[32];
  _OWORD v31[2];

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = 0;
  v2 = &off_1010ABB78;
  v3 = &qword_10119DCC0;
  v4 = &selRef_referralObject;
  v27 = v0;
  do
  {
    v9 = *((_BYTE *)v2 + v1 + 32);
    sub_10034D688(v9, v31);
    v10 = sub_10034DE9C((uint64_t)v31, (uint64_t)v30);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = v2;
      v15 = swift_slowAlloc(64, -1);
      v29 = v15;
      *(_DWORD *)v13 = 136446466;
      v28[0] = v9;
      v16 = String.init<A>(describing:)(v28, &type metadata for WidgetUpdateManager.Bag.BagKey);
      v17 = v4;
      v18 = v3;
      v20 = v19;
      *(_QWORD *)(v13 + 4) = sub_100322200(v16, v19, &v29);
      swift_bridgeObjectRelease(v20);
      *(_WORD *)(v13 + 12) = 2082;
      sub_10034DE9C((uint64_t)v30, (uint64_t)v28);
      v21 = sub_100007E8C(v18);
      v22 = String.init<A>(describing:)(v28, v21);
      v24 = v23;
      *(_QWORD *)(v13 + 14) = sub_100322200(v22, v23, &v29);
      v25 = v24;
      v3 = v18;
      v4 = v17;
      swift_bridgeObjectRelease(v25);
      sub_10004FF60((uint64_t)v30, v3);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Copying from bag, key: %{public}s, value: %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
      v26 = v15;
      v2 = v14;
      v0 = v27;
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      sub_10004FF60((uint64_t)v30, v3);
    }
    ++v1;
    v5 = objc_msgSend(v0, v4[388]);
    sub_10034DE9C((uint64_t)v31, (uint64_t)v30);
    v28[0] = v9;
    v6 = sub_1002DDF90();
    v7 = sub_100055B68();
    NSUserDefaults.subscript.setter((uint64_t)v30, (uint64_t)v28, (uint64_t)&_s21WidgetUserDefaultsKeyON, v6, v7);

    result = sub_10004FF60((uint64_t)v31, v3);
  }
  while (v1 != 4);
  return result;
}

double sub_10034D688@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  BagProvider.shared.unsafeMutableAddressor();
  swift_retain();
  v4 = (void *)BagProvider.bag.getter();
  swift_release();
  if (v4)
  {
    ICURLBag.subscript.getter(ICURLBagKeyMusicCommon, (uint64_t)&v8);
    if (v9)
    {
      v5 = sub_100007E8C((uint64_t *)&unk_1011A3090);
      if ((swift_dynamicCast(&v7, &v8, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
        __asm { BR              X11 }

    }
    else
    {

      sub_10004FF60((uint64_t)&v8, &qword_10119DCC0);
    }
  }
  result = 0.0;
  *a2 = 0u;
  a2[1] = 0u;
  return result;
}

uint64_t sub_10034D838(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10034D874 + 4 * byte_100EB5944[a1]))(0xD000000000000026, 0x8000000100E2B420);
}

uint64_t sub_10034D874()
{
  uint64_t v0;

  return v0 + 2;
}

unint64_t sub_10034D89C()
{
  return 0xD00000000000001BLL;
}

void sub_10034D8B8(char *a1)
{
  sub_1005D163C(*a1);
}

void sub_10034D8C4()
{
  char *v0;

  sub_10059098C(*v0);
}

void sub_10034D8CC(uint64_t a1)
{
  char *v1;

  sub_1000449D8(a1, *v1);
}

void sub_10034D8D4(uint64_t a1)
{
  char *v1;

  sub_100590EDC(a1, *v1);
}

unint64_t sub_10034D8DC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10034E3A8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10034D908@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10034D838(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10034D930(_QWORD *a1@<X8>)
{
  *a1 = &off_1010ABC70;
}

uint64_t sub_10034D940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  v1 = v0 + OBJC_IVAR____TtC5Music19WidgetUpdateManager_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10034D9C0()
{
  return type metadata accessor for WidgetUpdateManager(0);
}

uint64_t type metadata accessor for WidgetUpdateManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1011ADAC0;
  if (!qword_1011ADAC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WidgetUpdateManager);
  return result;
}

uint64_t sub_10034DA04(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = "\b";
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10034DA90(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10034DAF4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10034DB58 + 4 * byte_100EB594C[a2]))(0x657469726F766166);
}

uint64_t sub_10034DB58(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x657469726F766166 && v1 == 0xE900000000000064)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x657469726F766166, 0xE900000000000064, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000064);
  return v2 & 1;
}

id sub_10034DC04()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  id v18;
  unint64_t v19;
  id v20;
  Class v21;
  Class v22;
  id v23;
  _BYTE v25[104];

  v0 = sub_100007E8C((uint64_t *)&unk_10119E570);
  inited = swift_initStackObject(v0, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 40) = v2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A6110);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v4 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumArtwork);
  *(_QWORD *)(v4 + 40) = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  v7 = (void *)objc_opt_self(MPPropertySet);
  v8 = objc_msgSend(v7, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 64) = v9;
  v10 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
  *(_QWORD *)(v10 + 40) = v11;
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  v13 = objc_msgSend(v7, "propertySetWithProperties:", v12);

  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericRadioStation);
  *(_QWORD *)(inited + 88) = v14;
  v15 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v15 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationArtwork);
  *(_QWORD *)(v15 + 40) = v16;
  v17 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  v18 = objc_msgSend(v7, "propertySetWithProperties:", v17);

  *(_QWORD *)(inited + 96) = v18;
  v19 = sub_1000422C4(inited);
  v20 = objc_allocWithZone((Class)MPPropertySet);
  v21 = Array._bridgeToObjectiveC()().super.isa;
  sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
  v22 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v19);
  v23 = objc_msgSend(v20, "initWithProperties:relationships:", v21, v22);

  return v23;
}

uint64_t sub_10034DE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119DCC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034DEE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011ADBFC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  v2[2] = v0;
  return swift_task_switch(sub_10034B050, 0, 0);
}

uint64_t sub_10034DF40()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10034DF74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011CA2C4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_1007E88D4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10034DFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011ADC1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  v3[2] = v2;
  return swift_task_switch(sub_10034ABBC, 0, 0);
}

uint64_t sub_10034E058()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10034E07C(void **a1)
{
  uint64_t v1;

  return sub_10034ABF0(a1, v1);
}

unint64_t sub_10034E084()
{
  unint64_t result;

  result = qword_1011ADC28;
  if (!qword_1011ADC28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities, &type metadata for ApplicationCapabilities);
    atomic_store(result, (unint64_t *)&qword_1011ADC28);
  }
  return result;
}

double sub_10034E0C8(uint64_t a1)
{
  uint64_t v1;

  return sub_10034AD38(a1, v1);
}

uint64_t sub_10034E0D0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034E0F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011ADC3C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return swift_task_switch(sub_10034AE8C, 0, 0);
}

uint64_t sub_10034E14C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10034E180(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011ADC4C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10034B258(a1, v4, v5, v7, v6);
}

uint64_t sub_10034E1FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011ADC5C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10034CC50(a1, v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for WidgetUpdateManager.Bag.BagKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10034E2B4 + 4 * byte_100EB5955[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10034E2E8 + 4 * byte_100EB5950[v4]))();
}

uint64_t sub_10034E2E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034E2F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10034E2F8);
  return result;
}

uint64_t sub_10034E304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10034E30CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10034E310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034E318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetUpdateManager.Bag.BagKey()
{
  return &type metadata for WidgetUpdateManager.Bag.BagKey;
}

uint64_t sub_10034E334()
{
  return sub_100049F28(&qword_1011ADC70, &qword_1011ADC78, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_10034E364()
{
  unint64_t result;

  result = qword_1011ADC80;
  if (!qword_1011ADC80)
  {
    result = swift_getWitnessTable(&unk_100EB5A7C, &type metadata for WidgetUpdateManager.Bag.BagKey);
    atomic_store(result, &qword_1011ADC80);
  }
  return result;
}

unint64_t sub_10034E3A8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010ABBF0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

ValueMetadata *type metadata accessor for WidgetUpdateManager.Bag()
{
  return &type metadata for WidgetUpdateManager.Bag;
}

void _s19ItemNavigationStyleOwxx(uint64_t a1)
{
  sub_10013C0A8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19ItemNavigationStyleOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10013C108(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s19ItemNavigationStyleOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10013C108(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_10013C0A8(v6, v7, v8);
  return a1;
}

uint64_t _s19ItemNavigationStyleOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_10013C0A8(v4, v5, v6);
  return a1;
}

ValueMetadata *_s19ItemNavigationStyleOMa()
{
  return &_s19ItemNavigationStyleON;
}

void sub_10034E508(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  if (a2)
  {
    v6 = a2;
    goto LABEL_9;
  }
  v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v8 = objc_msgSend(v7, "connectedScenes");
  v9 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v10 = sub_1000A569C();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  sub_10079470C(v11);
  v13 = v12;
  swift_bridgeObjectRelease(v11);
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v23 = v13;
    else
      v23 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v13);
    if (v24)
      goto LABEL_5;
LABEL_20:

    swift_bridgeObjectRelease(v13);
    return;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_20;
LABEL_5:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v13 + 32);
  }
  v6 = v14;

  swift_bridgeObjectRelease(v13);
LABEL_9:
  v15 = a2;
  v16 = objc_msgSend(v3, "items");
  v17 = objc_msgSend(v16, "sectionAtIndex:", IndexPath.section.getter(v16));

  v18 = objc_msgSend(v17, "metadataObject");
  if (v18)
  {
    v19 = objc_msgSend(v18, "innermostModelObject");

    objc_opt_self(MPModelRadioStation);
    v20 = (void *)swift_dynamicCastObjCClass(v19);
    if (v20)
    {
      v21 = v20;
      if (objc_msgSend(v20, "type") == (id)4 && objc_msgSend(v21, "subtype") == (id)2)
      {
        sub_100350B48(v21, (uint64_t)v6);

        return;
      }
    }

  }
  v22 = sub_10034E7B0(a1, (uint64_t)v6);
  sub_100351290(v22);

}

char *sub_10034E7B0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  Class isa;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  __int128 v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  void *object;
  Swift::String v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  __int128 v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v71[9];
  _QWORD *v72;
  char *v73;
  char *v74;
  id v75;
  char *v76;
  __int128 v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;

  v3 = v2;
  v80 = _swiftEmptyArrayStorage;
  v6 = objc_msgSend(v2, "items");
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "itemAtIndexPath:", isa);

  v9 = objc_msgSend(v8, "metadataObject");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v12 = swift_dynamicCastObjCClass(v11);
    if (v12)
    {
      v13 = (void *)v12;
      _StringGuts.grow(_:)(31);
      v78 = 0xD000000000000018;
      v79 = 0x8000000100E36E20;
      v14 = objc_msgSend(v13, "humanDescription", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v18._countAndFlagsBits = v15;
      v18._object = v17;
      String.append(_:)(v18);
      swift_bridgeObjectRelease(v17);
      v19._countAndFlagsBits = 10272;
      v19._object = (void *)0xE200000000000000;
      String.append(_:)(v19);
      v20 = objc_msgSend(v8, "contentItemIdentifier");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      v24._countAndFlagsBits = v21;
      v24._object = v23;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(v23);
      v25._countAndFlagsBits = 41;
      v25._object = (void *)0xE100000000000000;
      String.append(_:)(v25);
      Array<A>.appendStringComponents(_:lineLength:bullet:)(0xD000000000000018, 0x8000000100E36E20, 80, 0, 0xE000000000000000);
      swift_bridgeObjectRelease(0x8000000100E36E20);
      __chkstk_darwin(v26);
      v71[2] = v13;
      v71[3] = v3;
      v71[4] = a1;
      v71[5] = a2;
      v71[6] = &v80;
      v27 = (char *)sub_10016C128((void (*)(_QWORD *__return_ptr, char *))sub_100351788, (uint64_t)v71, (uint64_t)&off_1010AA260);

      v28 = v80;
      v29 = swift_bridgeObjectRetain();
      v30 = Array<A>.asciiBoxed()(v29);
      swift_bridgeObjectRelease(v28);
      v31 = *((_QWORD *)v30 + 2);
      if (v31)
      {
        v72 = v28;
        v74 = v27;
        v75 = v8;
        v32 = qword_10119C0A8;
        swift_bridgeObjectRetain();
        if (v32 != -1)
          swift_once(&qword_10119C0A8, sub_10048B7B8);
        v33 = type metadata accessor for Logger(0);
        v73 = v30;
        v34 = (unint64_t *)(v30 + 40);
        *(_QWORD *)&v35 = 136446210;
        v77 = v35;
        v76 = (char *)&type metadata for Any + 8;
        do
        {
          v37 = *(v34 - 1);
          v36 = *v34;
          sub_100048B14(v33, (uint64_t)qword_10124D0E8);
          v38 = swift_bridgeObjectRetain_n(v36, 2);
          v39 = Logger.logObject.getter(v38);
          v40 = static os_log_type_t.default.getter(v39);
          if (os_log_type_enabled(v39, v40))
          {
            v41 = swift_slowAlloc(12, -1);
            v42 = swift_slowAlloc(32, -1);
            v78 = v42;
            *(_DWORD *)v41 = v77;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v41 + 4) = sub_100322200(v37, v36, &v78);
            swift_bridgeObjectRelease_n(v36, 3);
            _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s", (uint8_t *)v41, 0xCu);
            swift_arrayDestroy(v42, 1, v76);
            swift_slowDealloc(v42, -1, -1);
            swift_slowDealloc(v41, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v36, 2);
          }
          v34 += 2;
          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease(v72);

        swift_bridgeObjectRelease_n(v73, 2);
        return v74;
      }
      else
      {
        swift_bridgeObjectRelease(v28);

        swift_bridgeObjectRelease(v30);
      }
      return v27;
    }

  }
  v78 = 0;
  v79 = 0xE000000000000000;
  _StringGuts.grow(_:)(60);
  v43._countAndFlagsBits = 0xD000000000000028;
  v43._object = (void *)0x8000000100E36DF0;
  String.append(_:)(v43);
  v44 = v8;
  v45 = objc_msgSend(v44, "description");
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v48 = v47;

  v49._countAndFlagsBits = v46;
  v49._object = v48;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v48);
  v50._countAndFlagsBits = 544497952;
  v50._object = (void *)0xE400000000000000;
  String.append(_:)(v50);
  v51 = type metadata accessor for IndexPath(0);
  v52 = sub_100048748((unint64_t *)&unk_1011A9AC0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v53._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v51, v52);
  object = v53._object;
  String.append(_:)(v53);
  swift_bridgeObjectRelease(object);
  v55._countAndFlagsBits = 0x206120746F4E203ALL;
  v55._object = (void *)0xEC000000676E6F73;
  String.append(_:)(v55);
  Array<A>.appendStringComponents(_:lineLength:bullet:)(0, 0xE000000000000000, 80, 120, 0xE100000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  v56 = swift_bridgeObjectRetain();
  v57 = Array<A>.asciiBoxed()(v56);
  swift_bridgeObjectRelease(v80);
  v58 = *((_QWORD *)v57 + 2);
  if (v58)
  {
    v73 = (char *)v80;
    v75 = v44;
    v59 = qword_10119C0A8;
    swift_bridgeObjectRetain();
    if (v59 != -1)
      swift_once(&qword_10119C0A8, sub_10048B7B8);
    v60 = type metadata accessor for Logger(0);
    v74 = v57;
    v61 = (unint64_t *)(v57 + 40);
    *(_QWORD *)&v62 = 136446210;
    v77 = v62;
    v76 = (char *)&type metadata for Any + 8;
    do
    {
      v63 = *(v61 - 1);
      v64 = *v61;
      sub_100048B14(v60, (uint64_t)qword_10124D0E8);
      v65 = swift_bridgeObjectRetain_n(v64, 2);
      v66 = Logger.logObject.getter(v65);
      v67 = static os_log_type_t.default.getter(v66);
      if (os_log_type_enabled(v66, v67))
      {
        v68 = swift_slowAlloc(12, -1);
        v69 = swift_slowAlloc(32, -1);
        v78 = v69;
        *(_DWORD *)v68 = v77;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v68 + 4) = sub_100322200(v63, v64, &v78);
        swift_bridgeObjectRelease_n(v64, 3);
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "%{public}s", (uint8_t *)v68, 0xCu);
        swift_arrayDestroy(v69, 1, v76);
        swift_slowDealloc(v69, -1, -1);
        swift_slowDealloc(v68, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v64, 2);
      }
      v61 += 2;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease(v73);

    swift_bridgeObjectRelease_n(v74, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v80);

    swift_bridgeObjectRelease(v57);
  }
  return (char *)_swiftEmptyArrayStorage;
}

void sub_10034EEE8(id a1@<X2>, unsigned __int8 *a2@<X0>, void *a3@<X1>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v9;
  id v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  void *object;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[8];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;

  v9 = *a2;
  v10 = objc_msgSend(a1, "items");
  v11 = objc_msgSend(v10, "sectionAtIndex:", IndexPath.section.getter(v10));

  v12 = objc_msgSend(v11, "metadataObject");
  sub_1003517A8(v9, a3, v12, a4, (uint64_t)v34);
  if (v5)
  {

    v13 = 0xE500000000000000;
    v14 = 0x6D75626C41;
    if (v9 != 1)
    {
      v14 = 0x7473696C79616C50;
      v13 = 0xE800000000000000;
    }
    if (v9)
      v15 = v14;
    else
      v15 = 0x747369747241;
    if (v9)
      v16 = v13;
    else
      v16 = 0xE600000000000000;
    v17 = v16;
    String.append(_:)(*(Swift::String *)&v15);
    swift_bridgeObjectRelease(v16);
    v18._countAndFlagsBits = 8250;
    v18._object = (void *)0xE200000000000000;
    String.append(_:)(v18);
    v41 = v5;
    swift_errorRetain(v5);
    v19 = sub_100007E8C(&qword_1011A14B0);
    v20._countAndFlagsBits = String.init<A>(describing:)(&v41, v19);
    object = v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(object);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(0, 0xE000000000000000, 80, 120, 0xE100000000000000);
    swift_errorRelease(v5);
    swift_bridgeObjectRelease(0xE000000000000000);
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  else
  {
    v33 = v34[0];
    v22 = v36;
    v32 = v35;
    v24 = v37;
    v23 = v38;
    v25 = v39;
    v31 = v40;

    v26 = 0xE500000000000000;
    v27 = 0x6D75626C41;
    if (v9 != 1)
    {
      v27 = 0x7473696C79616C50;
      v26 = 0xE800000000000000;
    }
    if (v9)
      v28 = v27;
    else
      v28 = 0x747369747241;
    if (v9)
      v29 = v26;
    else
      v29 = 0xE600000000000000;
    v30 = v29;
    String.append(_:)(*(Swift::String *)&v28);
    swift_bridgeObjectRelease(v29);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(0, 0xE000000000000000, 80, 9673954, 0xA300000000000000);
    swift_bridgeObjectRelease(0xE000000000000000);
    *(_QWORD *)a5 = v33;
    *(_QWORD *)(a5 + 8) = v32;
    *(_QWORD *)(a5 + 16) = v22;
    *(_QWORD *)(a5 + 24) = v24;
    *(_QWORD *)(a5 + 32) = v23;
    *(_QWORD *)(a5 + 40) = v25;
    *(_OWORD *)(a5 + 48) = v31;
  }
}

void sub_10034F194(void *a1, void *a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  double v30;
  Swift::String v31;
  void *object;
  uint64_t v33;
  double v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  NSString v51;
  unsigned int v52;
  id v53;
  void *v54;
  char *v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  Swift::String v60;
  void *v61;
  uint64_t v62;
  id v63;
  NSURL *v64;
  void *v65;
  void *v66;
  Swift::String v67;
  uint64_t v68;
  __n128 v69;
  char *v70;
  char *v71;
  uint64_t v72;
  Swift::String v73;
  void *v74;
  uint64_t v75;
  id v76;
  NSURL *v77;
  void *v78;
  void *v79;
  void *v80;
  Swift::String v81;
  uint64_t v82;
  id v83;
  void *v84;
  NSString v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t *v92;
  __int128 v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  __int128 v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;

  v107 = a4;
  *(_QWORD *)&v108 = a3;
  v6 = sub_100007E8C(&qword_10119E460);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v102 - v10;
  v12 = type metadata accessor for URL(0);
  v106 = *(char **)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v105 = (char *)&v102 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v102 - v18;
  v20 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v20);
  v22 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  type metadata accessor for MainActor(0);
  v24 = a2;
  v25 = a1;
  v27 = static MainActor.shared.getter(v26);
  v28 = (_QWORD *)swift_allocObject(&unk_1010C0B08, 48, 7);
  v28[2] = v27;
  v28[3] = &protocol witness table for MainActor;
  v28[4] = v25;
  v28[5] = a2;
  v29 = sub_100166D14((uint64_t)v22, (uint64_t)&unk_1011ADC90, (uint64_t)v28);
  swift_release(v29);
  v110 = 0;
  v111 = 0xE000000000000000;
  v112 = (char *)_swiftEmptyArrayStorage;
  _StringGuts.grow(_:)(37);
  *(_QWORD *)&v30 = swift_bridgeObjectRelease(v111).n128_u64[0];
  v110 = 0xD000000000000023;
  v111 = 0x8000000100E36CA0;
  v109 = objc_msgSend(v25, "providerID", v30);
  v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  object = v31._object;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(object);
  v33 = v111;
  Array<A>.appendStringComponents(_:lineLength:bullet:)(v110, v111, 80, 0, 0xE000000000000000);
  swift_bridgeObjectRelease(v33);
  v110 = 0;
  v111 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  *(_QWORD *)&v34 = swift_bridgeObjectRelease(v111).n128_u64[0];
  v110 = 0xD000000000000014;
  v111 = 0x8000000100E36C40;
  v35 = objc_msgSend(v25, "providerBundleIdentifier", v34);
  v103 = v19;
  v104 = v15;
  if (v35)
  {
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = v12;
  v41 = Optional<A>.description.getter(v37, v39);
  v43 = v42;
  swift_bridgeObjectRelease(v39);
  v44._countAndFlagsBits = v41;
  v44._object = v43;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(v43);
  v45 = v111;
  Array<A>.appendStringComponents(_:lineLength:bullet:)(v110, v111, 80, 0, 0xE000000000000000);
  swift_bridgeObjectRelease(v45);
  v46 = (void *)objc_opt_self(LSApplicationWorkspace);
  v47 = objc_msgSend(v46, "defaultWorkspace");
  if (!v47)
  {
    __break(1u);
    return;
  }
  v48 = v47;
  v49 = v107;
  v50 = v108;
  v51 = String._bridgeToObjectiveC()();
  v52 = objc_msgSend(v48, "applicationIsInstalled:", v51);

  if (!v52)
  {
    v110 = 0;
    v111 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease(v111);
    v110 = 0xD00000000000001FLL;
    v111 = 0x8000000100E36CD0;
    v67._countAndFlagsBits = v50;
    v67._object = v49;
    String.append(_:)(v67);
    v68 = v111;
    URL.init(string:)(v110, v111);
    v69 = swift_bridgeObjectRelease(v68);
    v70 = v106;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t, __n128))v106 + 6))(v9, 1, v40, v69) == 1)
    {
      sub_100351724((uint64_t)v9);
      Array<A>.appendStringComponents(_:lineLength:bullet:)(0xD00000000000003FLL, 0x8000000100E36CF0, 80, 120, 0xE100000000000000);
    }
    else
    {
      v71 = v104;
      (*((void (**)(char *, char *, uint64_t))v70 + 4))(v104, v9, v40);
      v110 = 0;
      v111 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v111);
      v110 = 0xD000000000000012;
      v111 = 0x8000000100E36D30;
      v72 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v73._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v40, v72);
      v74 = v73._object;
      String.append(_:)(v73);
      swift_bridgeObjectRelease(v74);
      v75 = v111;
      Array<A>.appendStringComponents(_:lineLength:bullet:)(v110, v111, 80, 9673954, 0xA300000000000000);
      swift_bridgeObjectRelease(v75);
      v76 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      URL._bridgeToObjectiveC()(v77);
      v79 = v78;
      objc_msgSend(v76, "openURL:withCompletionHandler:", v78, 0);

      (*((void (**)(char *, uint64_t))v70 + 1))(v71, v40);
    }
    goto LABEL_15;
  }
  v53 = objc_msgSend(v25, "providerUniversalLink");
  if (!v53)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v106 + 7))(v11, 1, 1, v40);
LABEL_13:
    sub_100351724((uint64_t)v11);
    v110 = 0;
    v111 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease(v111);
    v110 = 0xD000000000000013;
    v111 = 0x8000000100E36D50;
    v80 = v107;
    swift_bridgeObjectRetain();
    v81._countAndFlagsBits = v108;
    v81._object = v80;
    String.append(_:)(v81);
    swift_bridgeObjectRelease(v80);
    v82 = v111;
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v110, v111, 80, 9673954, 0xA300000000000000);
    v83 = objc_msgSend(v46, "defaultWorkspace", swift_bridgeObjectRelease(v82).n128_f64[0]);
    if (v83)
    {
      v84 = v83;
      v85 = String._bridgeToObjectiveC()();
      objc_msgSend(v84, "openApplicationWithBundleID:", v85);

    }
    goto LABEL_15;
  }
  v54 = v53;
  v55 = v105;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v53);

  v56 = v106;
  v57 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v106 + 4);
  v57(v11, v55, v40);
  (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v56 + 7))(v11, 0, 1, v40);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v56 + 6))(v11, 1, v40) == 1)
    goto LABEL_13;
  v58 = v103;
  v57(v103, v11, v40);
  v110 = 0;
  v111 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v111);
  v110 = 0xD000000000000019;
  v111 = 0x8000000100E36D70;
  v59 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v60._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v40, v59);
  v61 = v60._object;
  String.append(_:)(v60);
  swift_bridgeObjectRelease(v61);
  v62 = v111;
  Array<A>.appendStringComponents(_:lineLength:bullet:)(v110, v111, 80, 9673954, 0xA300000000000000);
  swift_bridgeObjectRelease(v62);
  v63 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v64);
  v66 = v65;
  objc_msgSend(v63, "openURL:withCompletionHandler:", v65, 0);

  (*((void (**)(char *, uint64_t))v56 + 1))(v58, v40);
LABEL_15:
  v86 = v112;
  v87 = swift_bridgeObjectRetain();
  v88 = Array<A>.asciiBoxed()(v87);
  swift_bridgeObjectRelease(v86);
  v89 = *((_QWORD *)v88 + 2);
  if (v89)
  {
    v105 = v86;
    v90 = qword_10119C0A8;
    swift_bridgeObjectRetain();
    if (v90 != -1)
      swift_once(&qword_10119C0A8, sub_10048B7B8);
    v91 = type metadata accessor for Logger(0);
    v106 = v88;
    v92 = (unint64_t *)(v88 + 40);
    *(_QWORD *)&v93 = 136446210;
    v108 = v93;
    v107 = (char *)&type metadata for Any + 8;
    do
    {
      v95 = *(v92 - 1);
      v94 = *v92;
      sub_100048B14(v91, (uint64_t)qword_10124D0E8);
      v96 = swift_bridgeObjectRetain_n(v94, 2);
      v97 = Logger.logObject.getter(v96);
      v98 = static os_log_type_t.default.getter(v97);
      if (os_log_type_enabled(v97, v98))
      {
        v99 = swift_slowAlloc(12, -1);
        v100 = swift_slowAlloc(32, -1);
        v110 = v100;
        *(_DWORD *)v99 = v108;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v99 + 4) = sub_100322200(v95, v94, &v110);
        swift_bridgeObjectRelease_n(v94, 3);
        _os_log_impl((void *)&_mh_execute_header, v97, v98, "%{public}s", (uint8_t *)v99, 0xCu);
        swift_arrayDestroy(v100, 1, v107);
        swift_slowDealloc(v100, -1, -1);
        swift_slowDealloc(v99, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v94, 2);
      }
      v92 += 2;
      --v89;
    }
    while (v89);
    swift_bridgeObjectRelease(v105);
    v88 = v106;
    v101 = v106;
  }
  else
  {
    v101 = v86;
  }
  swift_bridgeObjectRelease(v101);
  swift_bridgeObjectRelease(v88);
}

uint64_t sub_10034FB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[6] = a4;
  v5[7] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[8] = swift_task_alloc(v6);
  v5[9] = swift_task_alloc(v6);
  v7 = type metadata accessor for MetricsEvent.Click(0);
  v5[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[11] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10034FC10, v10, v11);
}

uint64_t sub_10034FC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 40) = objc_msgSend(*(id *)(v0 + 48), "providerID", swift_release().n128_f64[0]);
  v3 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  v5 = v4;
  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  v8 = *(_QWORD **)(v0 + 64);
  if (v2)
  {
    v9 = JSComponentController.pageIdentifier.getter();
    v11 = v10;
    v12 = JSComponentController.pageType.getter();
    v14 = v13;
    JSComponentController.pageURL.getter(v8);
  }
  else
  {
    v7(*(_QWORD *)(v0 + 64), 1, 1, v6);
    v9 = 0;
    v12 = 0;
    v11 = 0xE000000000000000;
    v14 = 0xE000000000000000;
  }
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(v3, v5, 5, 23, *(_QWORD *)(v0 + 72), 0, 0, 9, *(_QWORD *)(v0 + 80), 0, 0, 65280, v9, v11, v12, v14, *(_QWORD *)(v0 + 64), 0, 1,
    0,
    0,
    0);
  v15 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v17 = v16;
  v19 = v18;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v20 = *(_QWORD *)(v0 + 80);
  v28 = *(_QWORD *)(v0 + 72);
  v29 = *(_QWORD *)(v0 + 64);
  v21 = qword_10124C790;
  swift_retain();
  v22 = GroupActivitiesManager.hasJoined.getter();
  v23 = GroupActivitiesManager.participantsCount.getter();
  v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v21 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v0 + 16, 0, 0);
  v25 = *v24;
  v26 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v15) + 0xB8))(v20, v17, v19, v22 & 1, v23, v25, v26);

  swift_bridgeObjectRelease(v19);
  sub_10024DFFC(v20);
  swift_task_dealloc(v20);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_10034FEA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_10034FEBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_10034FED0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_10034FEE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_10034FEF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D75626C41;
  if (*v0 != 1)
    v1 = 0x7473696C79616C50;
  if (*v0)
    return v1;
  else
    return 0x747369747241;
}

uint64_t sub_10034FF4C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1003509D0(v7, v8) & 1;
}

void sub_10034FF94(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_1008A7CA4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_10034FFFC(v4);
  *a1 = v2;
}

void sub_10034FFFC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  unsigned int v15;
  Swift::Int v16;
  unsigned int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  Swift::Int v22;
  Swift::Int v23;
  Swift::Int v24;
  _OWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  Swift::Int v36;
  uint64_t v37;
  unsigned int v38;
  Swift::Int v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t v106;
  _OWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  _QWORD *v125;
  Swift::Int v126;
  Swift::Int v127;
  uint64_t v128;
  char *__dst;
  uint64_t v130;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v102 = 0;
      v103 = *a1;
      v104 = 1;
      while (1)
      {
        v105 = *(unsigned __int8 *)(v103 + (v104 << 6));
        v106 = v102;
        do
        {
          v107 = (_OWORD *)(v103 + v106);
          if (v105 >= *(unsigned __int8 *)(v103 + v106))
            break;
          if (!v103)
            goto LABEL_142;
          v108 = v103 + v106;
          v109 = *(_QWORD *)(v103 + v106 + 72);
          v110 = *(_QWORD *)(v103 + v106 + 80);
          v111 = *(_QWORD *)(v103 + v106 + 104);
          v112 = *(_OWORD *)(v103 + v106 + 112);
          v113 = *(_OWORD *)(v103 + v106 + 88);
          v114 = v107[1];
          *(_OWORD *)(v103 + v106 + 64) = *v107;
          *(_OWORD *)(v103 + v106 + 80) = v114;
          v115 = v107[3];
          *(_OWORD *)(v103 + v106 + 96) = v107[2];
          *(_OWORD *)(v103 + v106 + 112) = v115;
          *(_BYTE *)v108 = v105;
          *(_QWORD *)(v108 + 8) = v109;
          *(_QWORD *)(v108 + 16) = v110;
          *(_OWORD *)(v108 + 24) = v113;
          *(_QWORD *)(v108 + 40) = v111;
          v106 -= 64;
          *(_OWORD *)(v108 + 48) = v112;
        }
        while (v106 != -64);
        ++v104;
        v102 += 64;
        if (v104 == v3)
          return;
      }
    }
    goto LABEL_138;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_147:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v6 = v4;
  v130 = v1;
  v123 = a1;
  if (v3 < 2)
  {
    v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
      v12 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v125 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for NowPlayingNavigationItemConfiguration);
    *(_QWORD *)(v8 + 16) = v7;
    v125 = (_QWORD *)v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v124 = *a1 + 128;
  v122 = *a1 + 48;
  v12 = (char *)_swiftEmptyArrayStorage;
  v126 = v6;
  v127 = v3;
  v128 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(unsigned __int8 *)(v11 + (v10 << 6));
      v16 = v14 << 6;
      v17 = *(unsigned __int8 *)(v11 + (v14 << 6));
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (unsigned __int8 *)(v124 + (v14 << 6));
        v19 = v15;
        while (1)
        {
          v21 = *v18;
          v18 += 64;
          v20 = v21;
          if (v15 < v17 == v21 >= v19)
            break;
          ++v10;
          v19 = v20;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_139;
        if (v14 < v10)
        {
          v22 = v10 << 6;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_145;
              v25 = (_OWORD *)(v11 + v16);
              v26 = *(_BYTE *)(v11 + v16);
              v27 = v11 + v22;
              v28 = *(_QWORD *)(v11 + v16 + 8);
              v29 = *(_QWORD *)(v11 + v16 + 16);
              v30 = *(_QWORD *)(v11 + v16 + 40);
              v31 = *(_OWORD *)(v11 + v16 + 48);
              v32 = *(_OWORD *)(v11 + v16 + 24);
              v33 = *(_OWORD *)(v11 + v22 - 16);
              v35 = *(_OWORD *)(v11 + v22 - 64);
              v34 = *(_OWORD *)(v11 + v22 - 48);
              v25[2] = *(_OWORD *)(v11 + v22 - 32);
              v25[3] = v33;
              *v25 = v35;
              v25[1] = v34;
              *(_BYTE *)(v27 - 64) = v26;
              *(_QWORD *)(v27 - 56) = v28;
              *(_QWORD *)(v27 - 48) = v29;
              *(_OWORD *)(v27 - 40) = v32;
              *(_QWORD *)(v27 - 24) = v30;
              *(_OWORD *)(v27 - 16) = v31;
            }
            ++v24;
            v22 -= 64;
            v16 += 64;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_137;
      if (v10 - v14 < v6)
      {
        v36 = v14 + v6;
        if (__OFADD__(v14, v6))
          goto LABEL_140;
        if (v36 >= v3)
          v36 = v3;
        if (v36 < v14)
          goto LABEL_141;
        if (v10 != v36)
        {
          v37 = v122 + (v10 << 6);
          do
          {
            v38 = *(unsigned __int8 *)(v11 + (v10 << 6));
            v39 = v14;
            v40 = v37;
            do
            {
              v41 = (_OWORD *)(v40 - 112);
              if (v38 >= *(unsigned __int8 *)(v40 - 112))
                break;
              if (!v11)
                goto LABEL_143;
              v43 = *(_OWORD *)(v40 - 80);
              v42 = *(_OWORD *)(v40 - 64);
              *(_OWORD *)(v40 - 64) = *(_OWORD *)v40;
              v40 -= 64;
              v44 = v41 + 4;
              v45 = *(_QWORD *)(v40 + 24);
              v46 = *(_QWORD *)(v40 + 32);
              v47 = *(_OWORD *)(v40 + 40);
              v48 = v41[1];
              v41[4] = *v41;
              v41[5] = v48;
              v49 = *(_QWORD *)(v40 + 56);
              v44[2] = v43;
              v44[3] = v42;
              *(_BYTE *)(v40 - 48) = v38;
              *(_QWORD *)(v40 - 40) = v45;
              *(_QWORD *)(v40 - 32) = v46;
              *(_OWORD *)(v40 - 24) = v47;
              *(_QWORD *)(v40 - 8) = v49;
              ++v39;
            }
            while (v10 != v39);
            ++v10;
            v37 += 64;
          }
          while (v10 != v36);
          v10 = v36;
        }
      }
    }
    if (v10 < v14)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_1008A71C4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v51 = *((_QWORD *)v12 + 2);
    v50 = *((_QWORD *)v12 + 3);
    v13 = v51 + 1;
    v11 = v128;
    if (v51 >= v50 >> 1)
    {
      v11 = v128;
      v12 = sub_1008A71C4((char *)(v50 > 1), v51 + 1, 1, v12);
    }
    *((_QWORD *)v12 + 2) = v13;
    v52 = v12 + 32;
    v53 = &v12[16 * v51 + 32];
    *(_QWORD *)v53 = v14;
    *((_QWORD *)v53 + 1) = v10;
    if (v51)
      break;
    v13 = 1;
LABEL_15:
    v6 = v126;
    v3 = v127;
    if (v10 >= v127)
    {
      v9 = v125;
LABEL_104:
      v101 = v12;
      v125 = v9;
      if (v13 < 2)
        goto LABEL_95;
      v116 = *v123;
      while (1)
      {
        v117 = v13 - 2;
        if (v13 < 2)
          break;
        if (!v116)
          goto LABEL_146;
        v100 = v101;
        v118 = *(_QWORD *)&v101[16 * v117 + 32];
        v119 = *(_QWORD *)&v101[16 * v13 + 24];
        sub_100350738((char *)(v116 + (v118 << 6)), (char *)(v116 + (*(_QWORD *)&v101[16 * v13 + 16] << 6)), v116 + (v119 << 6), __dst);
        if (v130)
          goto LABEL_94;
        if (v119 < v118)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_1008A77EC((uint64_t)v100);
        if (v117 >= *((_QWORD *)v100 + 2))
          goto LABEL_135;
        v120 = &v100[16 * v117 + 32];
        *(_QWORD *)v120 = v118;
        *((_QWORD *)v120 + 1) = v119;
        v121 = *((_QWORD *)v100 + 2);
        if (v13 > v121)
          goto LABEL_136;
        memmove(&v100[16 * v13 + 16], &v100[16 * v13 + 32], 16 * (v121 - v13));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v121 - 1;
        v13 = v121 - 1;
        if (v121 <= 2)
          goto LABEL_95;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    v54 = v13 - 1;
    if (v13 >= 4)
    {
      v59 = &v52[16 * v13];
      v60 = *((_QWORD *)v59 - 8);
      v61 = *((_QWORD *)v59 - 7);
      v65 = __OFSUB__(v61, v60);
      v62 = v61 - v60;
      if (v65)
        goto LABEL_121;
      v64 = *((_QWORD *)v59 - 6);
      v63 = *((_QWORD *)v59 - 5);
      v65 = __OFSUB__(v63, v64);
      v57 = v63 - v64;
      v58 = v65;
      if (v65)
        goto LABEL_122;
      v66 = v13 - 2;
      v67 = &v52[16 * v13 - 32];
      v69 = *(_QWORD *)v67;
      v68 = *((_QWORD *)v67 + 1);
      v65 = __OFSUB__(v68, v69);
      v70 = v68 - v69;
      if (v65)
        goto LABEL_124;
      v65 = __OFADD__(v57, v70);
      v71 = v57 + v70;
      if (v65)
        goto LABEL_127;
      if (v71 >= v62)
      {
        v89 = &v52[16 * v54];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v65 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v65)
          goto LABEL_131;
        v82 = v57 < v92;
        goto LABEL_83;
      }
    }
    else
    {
      if (v13 != 3)
      {
        v83 = *((_QWORD *)v12 + 4);
        v84 = *((_QWORD *)v12 + 5);
        v65 = __OFSUB__(v84, v83);
        v76 = v84 - v83;
        v77 = v65;
        goto LABEL_77;
      }
      v56 = *((_QWORD *)v12 + 4);
      v55 = *((_QWORD *)v12 + 5);
      v65 = __OFSUB__(v55, v56);
      v57 = v55 - v56;
      v58 = v65;
    }
    if ((v58 & 1) != 0)
      goto LABEL_123;
    v66 = v13 - 2;
    v72 = &v52[16 * v13 - 32];
    v74 = *(_QWORD *)v72;
    v73 = *((_QWORD *)v72 + 1);
    v75 = __OFSUB__(v73, v74);
    v76 = v73 - v74;
    v77 = v75;
    if (v75)
      goto LABEL_126;
    v78 = &v52[16 * v54];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    v65 = __OFSUB__(v79, v80);
    v81 = v79 - v80;
    if (v65)
      goto LABEL_129;
    if (__OFADD__(v76, v81))
      goto LABEL_130;
    if (v76 + v81 >= v57)
    {
      v82 = v57 < v81;
LABEL_83:
      if (v82)
        v54 = v66;
      goto LABEL_85;
    }
LABEL_77:
    if ((v77 & 1) != 0)
      goto LABEL_125;
    v85 = &v52[16 * v54];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    v65 = __OFSUB__(v86, v87);
    v88 = v86 - v87;
    if (v65)
      goto LABEL_128;
    if (v88 < v76)
      goto LABEL_15;
LABEL_85:
    v93 = v54 - 1;
    if (v54 - 1 >= v13)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v11)
      goto LABEL_144;
    v94 = v12;
    v95 = &v52[16 * v93];
    v96 = *(_QWORD *)v95;
    v97 = &v52[16 * v54];
    v98 = *((_QWORD *)v97 + 1);
    sub_100350738((char *)(v11 + (*(_QWORD *)v95 << 6)), (char *)(v11 + (*(_QWORD *)v97 << 6)), v11 + (v98 << 6), __dst);
    if (v130)
      break;
    if (v98 < v96)
      goto LABEL_118;
    if (v54 > *((_QWORD *)v94 + 2))
      goto LABEL_119;
    *(_QWORD *)v95 = v96;
    *(_QWORD *)&v52[16 * v93 + 8] = v98;
    v99 = *((_QWORD *)v94 + 2);
    if (v54 >= v99)
      goto LABEL_120;
    v12 = v94;
    v13 = v99 - 1;
    memmove(&v52[16 * v54], v97 + 16, 16 * (v99 - 1 - v54));
    *((_QWORD *)v94 + 2) = v99 - 1;
    v11 = v128;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v94;
LABEL_94:
  v101 = v100;
LABEL_95:
  swift_bridgeObjectRelease(v101);
  v125[2] = 0;
  swift_bridgeObjectRelease(v125);
}

uint64_t sub_100350738(char *__src, char *a2, unint64_t a3, char *__dst)
{
  __int128 *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 *v22;
  char *v23;
  __int128 *v24;
  char *v25;
  unsigned int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t result;
  __int128 *v34;
  __int128 *v35;
  char *v36;

  v4 = (__int128 *)__dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 6;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 63;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 6;
  v36 = __src;
  v35 = (__int128 *)__dst;
  if (v10 >= v12 >> 6)
  {
    if (v11 >= -63)
    {
      if (__dst != a2 || &a2[64 * v13] <= __dst)
        memmove(__dst, a2, v13 << 6);
      v22 = &v4[4 * v13];
      v34 = v22;
      v36 = v6;
      if (v7 < v6 && v11 >= 64)
      {
        v23 = (char *)(a3 - 64);
        v24 = (__int128 *)v6;
        while (1)
        {
          v25 = v23 + 64;
          v26 = *((unsigned __int8 *)v24 - 64);
          v24 -= 4;
          if (*((unsigned __int8 *)v22 - 64) >= v26)
          {
            v34 = v22 - 4;
            if (v25 < (char *)v22 || v23 >= (char *)v22 || v25 != (char *)v22)
            {
              v30 = *(v22 - 4);
              v31 = *(v22 - 3);
              v32 = *(v22 - 1);
              *((_OWORD *)v23 + 2) = *(v22 - 2);
              *((_OWORD *)v23 + 3) = v32;
              *(_OWORD *)v23 = v30;
              *((_OWORD *)v23 + 1) = v31;
            }
            v24 = (__int128 *)v6;
            v22 -= 4;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v25 != v6 || v23 >= v6)
            {
              v27 = *v24;
              v28 = v24[1];
              v29 = v24[3];
              *((_OWORD *)v23 + 2) = v24[2];
              *((_OWORD *)v23 + 3) = v29;
              *(_OWORD *)v23 = v27;
              *((_OWORD *)v23 + 1) = v28;
            }
            v36 = (char *)v24;
            if (v24 <= (__int128 *)v7)
              goto LABEL_42;
          }
          v23 -= 64;
          v6 = (char *)v24;
          if (v22 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -63)
  {
    if (__dst != __src || &__src[64 * v10] <= __dst)
      memmove(__dst, __src, v10 << 6);
    v14 = &v4[4 * v10];
    v34 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 64)
    {
      do
      {
        if (*v6 >= *(unsigned __int8 *)v4)
        {
          if (v7 != (char *)v4)
          {
            v19 = *v4;
            v20 = v4[1];
            v21 = v4[3];
            *((_OWORD *)v7 + 2) = v4[2];
            *((_OWORD *)v7 + 3) = v21;
            *(_OWORD *)v7 = v19;
            *((_OWORD *)v7 + 1) = v20;
          }
          v4 += 4;
          v35 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 64;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            v16 = *(_OWORD *)v6;
            v17 = *((_OWORD *)v6 + 1);
            v18 = *((_OWORD *)v6 + 3);
            *((_OWORD *)v7 + 2) = *((_OWORD *)v6 + 2);
            *((_OWORD *)v7 + 3) = v18;
            *(_OWORD *)v7 = v16;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        v7 += 64;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v36 = v7;
    }
LABEL_42:
    sub_1008A734C((void **)&v36, (const void **)&v35, &v34);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003509D0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void **v15;
  unsigned __int8 v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v21;
  uint64_t v22;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
  {
    v9 = 0;
    goto LABEL_14;
  }
  v4 = a1[1];
  v5 = a1[2];
  v6 = a2[1];
  v7 = a2[2];
  v8 = v4 == v6 && v5 == v7;
  if (!v8 && (v9 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0) & 1) == 0)
    || (v10 = a1[4], v11 = a2[4], v9 = (v10 | v11) == 0, !v10)
    || !v11)
  {
LABEL_14:
    v14 = (void *)a1[5];
    if (!v14)
      goto LABEL_22;
    goto LABEL_15;
  }
  v12 = a1[3];
  v13 = a2[3];
  if (v12 == v13 && v10 == v11)
  {
    v14 = (void *)a1[5];
    if (v14)
    {
      v9 = 1;
      goto LABEL_15;
    }
LABEL_23:
    v16 = a2[5] == 0;
    return v16 & 1;
  }
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v10, v13, v11, 0);
  v14 = (void *)a1[5];
  if (!v14)
  {
LABEL_22:
    if ((v9 & 1) == 0)
      goto LABEL_24;
    goto LABEL_23;
  }
LABEL_15:
  v15 = (void **)(a2 + 5);
  sub_1003521BC((uint64_t)v15, (uint64_t)&v21);
  sub_1003521BC((uint64_t)&v21, (uint64_t)&v22);
  if (!v22)
  {
    if ((v9 & 1) != 0)
    {
      v17 = *v15;
      if (*v15)
      {
        sub_10004A07C(0, (unint64_t *)&qword_1011A6850, MPArtworkCatalog_ptr);
        v18 = v17;
        v19 = v14;
        v16 = static NSObject.== infix(_:_:)(v19, v18);

        return v16 & 1;
      }
    }
LABEL_24:
    v16 = 0;
    return v16 & 1;
  }
  if ((v9 & 1) == 0)
    goto LABEL_24;
  v16 = objc_msgSend(v14, "isArtworkVisuallyIdenticalToCatalog:");
  return v16 & 1;
}

void (*sub_100350B48(void *a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  Swift::String v8;
  void *object;
  uint64_t v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  __int128 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  __int128 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)();
  char *v72;
  _QWORD *v74;
  _QWORD *v75;
  char *v76;
  char *v77;
  __int128 v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;

  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = 0;
  v81 = 0xE000000000000000;
  v82 = _swiftEmptyArrayStorage;
  _StringGuts.grow(_:)(37);
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v81).n128_u64[0];
  v80 = 0xD000000000000023;
  v81 = 0x8000000100E36C10;
  v79 = objc_msgSend(a1, "providerID", v7);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10 = v81;
  Array<A>.appendStringComponents(_:lineLength:bullet:)(v80, v81, 80, 0, 0xE000000000000000);
  swift_bridgeObjectRelease(v10);
  v80 = 0;
  v81 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v81).n128_u64[0];
  v80 = 0xD000000000000014;
  v81 = 0x8000000100E36C40;
  v12 = objc_msgSend(a1, "providerBundleIdentifier", v11);
  if (v12)
  {
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v17 = Optional<A>.description.getter(v14, v16);
  v19 = v18;
  swift_bridgeObjectRelease(v16);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21 = v81;
  Array<A>.appendStringComponents(_:lineLength:bullet:)(v80, v81, 80, 0, 0xE000000000000000);
  swift_bridgeObjectRelease(v21);
  v80 = 0;
  v81 = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  *(_QWORD *)&v22 = swift_bridgeObjectRelease(v81).n128_u64[0];
  v80 = 0xD00000000000001ALL;
  v81 = 0x8000000100E36C60;
  v23 = objc_msgSend(a1, "providerUniversalLink", v22);
  if (v23)
  {
    v24 = v23;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 0, 1, v25);
  }
  else
  {
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
  }
  v27._countAndFlagsBits = String.init<A>(describing:)(v6, v4);
  v28 = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v28);
  v29 = v81;
  Array<A>.appendStringComponents(_:lineLength:bullet:)(v80, v81, 80, 0, 0xE000000000000000);
  v30 = objc_msgSend(a1, "providerBundleIdentifier", swift_bridgeObjectRelease(v29).n128_f64[0]);
  if (v30)
  {
    v31 = v30;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v34 = v33;

    v35 = PresentationSource.PresentingViewControllerOptions.allowsPresentation.unsafeMutableAddressor();
    v36 = static PresentationSource.topmostPresentedViewController(in:options:)(a2, *v35);
    if (v36)
    {
      v37 = v36;
      v38 = type metadata accessor for NowPlayingViewController(0);
      v39 = swift_dynamicCastClass(v37, v38);
      if (!v39)

    }
    else
    {
      v39 = 0;
    }
    v55 = (_QWORD *)swift_allocObject(&unk_1010C0AE0, 48, 7);
    v55[2] = a1;
    v55[3] = v39;
    v55[4] = v32;
    v55[5] = v34;
    v56 = v82;
    v57 = a1;
    v58 = swift_bridgeObjectRetain();
    v42 = Array<A>.asciiBoxed()(v58);
    swift_bridgeObjectRelease(v56);
    v59 = *((_QWORD *)v42 + 2);
    if (v59)
    {
      v74 = v56;
      v75 = v55;
      v60 = qword_10119C0A8;
      swift_bridgeObjectRetain();
      if (v60 != -1)
        swift_once(&qword_10119C0A8, sub_10048B7B8);
      v61 = type metadata accessor for Logger(0);
      v76 = v42;
      v62 = (unint64_t *)(v42 + 40);
      *(_QWORD *)&v63 = 136446210;
      v78 = v63;
      v77 = (char *)&type metadata for Any + 8;
      do
      {
        v64 = *(v62 - 1);
        v65 = *v62;
        sub_100048B14(v61, (uint64_t)qword_10124D0E8);
        v66 = swift_bridgeObjectRetain_n(v65, 2);
        v67 = Logger.logObject.getter(v66);
        v68 = static os_log_type_t.default.getter(v67);
        if (os_log_type_enabled(v67, v68))
        {
          v69 = swift_slowAlloc(12, -1);
          v70 = swift_slowAlloc(32, -1);
          v80 = v70;
          *(_DWORD *)v69 = v78;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v69 + 4) = sub_100322200(v64, v65, &v80);
          swift_bridgeObjectRelease_n(v65, 3);
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "%{public}s", (uint8_t *)v69, 0xCu);
          swift_arrayDestroy(v70, 1, v77);
          swift_slowDealloc(v70, -1, -1);
          swift_slowDealloc(v69, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v65, 2);
        }
        v62 += 2;
        --v59;
      }
      while (v59);
      swift_bridgeObjectRelease(v74);
      v42 = v76;
      swift_bridgeObjectRelease(v76);
      v71 = sub_10035166C;
    }
    else
    {
      swift_bridgeObjectRelease(v56);
      v71 = sub_10035166C;
    }
  }
  else
  {
    Array<A>.appendStringComponents(_:lineLength:bullet:)(0xD000000000000011, 0x8000000100E36C80, 80, 120, 0xE100000000000000);
    v40 = v82;
    v41 = swift_bridgeObjectRetain();
    v42 = Array<A>.asciiBoxed()(v41);
    swift_bridgeObjectRelease(v40);
    v43 = *((_QWORD *)v42 + 2);
    if (v43)
    {
      v75 = v40;
      v44 = qword_10119C0A8;
      swift_bridgeObjectRetain();
      if (v44 != -1)
        swift_once(&qword_10119C0A8, sub_10048B7B8);
      v45 = type metadata accessor for Logger(0);
      v76 = v42;
      v46 = (unint64_t *)(v42 + 40);
      *(_QWORD *)&v47 = 136446210;
      v78 = v47;
      v77 = (char *)&type metadata for Any + 8;
      do
      {
        v48 = *(v46 - 1);
        v49 = *v46;
        sub_100048B14(v45, (uint64_t)qword_10124D0E8);
        v50 = swift_bridgeObjectRetain_n(v49, 2);
        v51 = Logger.logObject.getter(v50);
        v52 = static os_log_type_t.default.getter(v51);
        if (os_log_type_enabled(v51, v52))
        {
          v53 = swift_slowAlloc(12, -1);
          v54 = swift_slowAlloc(32, -1);
          v80 = v54;
          *(_DWORD *)v53 = v78;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v53 + 4) = sub_100322200(v48, v49, &v80);
          swift_bridgeObjectRelease_n(v49, 3);
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "%{public}s", (uint8_t *)v53, 0xCu);
          swift_arrayDestroy(v54, 1, v77);
          swift_slowDealloc(v54, -1, -1);
          swift_slowDealloc(v53, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v49, 2);
        }
        v46 += 2;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease(v75);
      v42 = v76;
      v72 = v76;
    }
    else
    {
      v72 = (char *)v40;
    }
    swift_bridgeObjectRelease(v72);
    v71 = 0;
  }
  swift_bridgeObjectRelease(v42);
  return v71;
}

Class sub_100351290(_QWORD *a1)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  MusicCore::AccessibilityIdentifier v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD *preferredElementSize;
  Swift::String v31;
  Swift::OpaquePointer v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  UIImage_optional v40;

  v2 = a1[2];
  if (v2 < 2)
  {
    if (v2)
    {
      v25 = a1[6];
      v26 = a1[8];
      v27 = a1[10];
      v28 = a1[11];
      v29 = (id)a1[9];
      swift_retain(v28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(a1);

      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      swift_bridgeObjectRelease(a1);
      return 0;
    }
  }
  else
  {
    v39 = a1;
    swift_bridgeObjectRetain();
    sub_10034FF94((uint64_t *)&v39);
    swift_bridgeObjectRelease(a1);
    v3 = v39;
    v4 = v39[2];
    if (v4)
    {
      v39 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v4);
      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v5 = 0;
      v34 = (id)objc_opt_self(UIImage);
      v35 = v3;
      do
      {
        v38 = v4;
        v13 = LOBYTE(v3[v5 + 4]);
        v14 = v3[v5 + 5];
        v15 = v3[v5 + 6];
        v16 = v3[v5 + 8];
        v36 = v3[v5 + 7];
        v17 = v3[v5 + 10];
        v18 = v3[v5 + 11];
        v37 = (id)v3[v5 + 9];
        swift_retain_n(v18, 2);
        swift_bridgeObjectRetain_n(v15, 2);
        swift_bridgeObjectRetain();
        Library.Menu.Identifier.symbolName(for:)(2, 0x10302u >> (8 * v13));
        v20 = v19;
        v21 = String._bridgeToObjectiveC()();
        v22 = objc_msgSend(v34, "systemImageNamed:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

        v23 = swift_allocObject(&unk_1010C0B30, 32, 7);
        *(_QWORD *)(v23 + 16) = v17;
        *(_QWORD *)(v23 + 24) = v18;
        swift_retain(v18);
        swift_bridgeObjectRetain();
        v24 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14, v15, 0, 0, v22, 0, 0, v36, v16, 0, 0, sub_10004D5F4, v23);
        if (v13)
        {
          if (v13 == 1)
          {
            v6 = 0xD000000000000011;
            v7 = 0x8000000100E36DB0;
          }
          else
          {
            v6 = 0xD000000000000014;
            v7 = 0x8000000100E36D90;
          }
        }
        else
        {
          v6 = 0xD000000000000012;
          v7 = 0x8000000100E36DD0;
        }
        v8 = AccessibilityIdentifier.init(name:)(*(Swift::String *)&v6);
        v3 = v35;
        UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v8.rawValue._countAndFlagsBits, (uint64_t)v8.rawValue._object);
        swift_bridgeObjectRelease(v16);
        v9 = swift_bridgeObjectRelease(v15);
        swift_release_n(v18, 2, v9);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v11 = v39[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v24);
        specialized ContiguousArray._endMutation()(v12);
        v5 += 8;
        v4 = v38 - 1;
      }
      while (v38 != 1);
      preferredElementSize = v39;
      swift_release(v35);
    }
    else
    {
      swift_release(v39);
      preferredElementSize = _swiftEmptyArrayStorage;
    }
    sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v40.value.super.isa = 0;
    v40.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v31, (Swift::String_optional)0, v40, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v33).super.super.isa;
  }
  return (Class)v27;
}

uint64_t sub_100351638()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10035166C()
{
  uint64_t v0;

  sub_10034F194(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_100351678()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003516AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011ADC8C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_10034FB50(a1, v4, v5, v7, v6);
}

uint64_t sub_100351724(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_10119E460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100351764()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100351788(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;

  sub_10034EEE8(v2[3], a1, v2[2], v2[5], a2);
}

void sub_1003517A8(int a1@<W0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void (*v18)();
  uint64_t v19;
  void (*v20)();
  id v21;
  void (*v22)();
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void (*v27)();
  uint64_t v28;
  unint64_t v29;
  char *v30;
  __n128 v31;
  char v32;
  unint64_t v33;
  __n128 v34;
  _BYTE *v35;
  unint64_t v36;
  _BYTE *v37;
  unint64_t v38;
  _BYTE *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  int v71;

  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(_BYTE)a1)
  {
    v21 = objc_msgSend(a2, "artist");
    if (v21)
    {
      v17 = v21;
      v22 = sub_100488DD0(v21, a2, a4);
      if (v22)
      {
        v20 = v22;
        v70 = v23;
        if (objc_msgSend(v17, "hasLoadedValueForKey:", MPModelPropertyArtistArtwork))
          v68 = objc_msgSend(v17, "artworkCatalog");
        else
          v68 = 0;
        v48 = String.LocalizationValue.init(stringLiteral:)(0x7241206F74206F47, 0xEC00000074736974);
        static Locale.current.getter(v48);
        v49 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v12, 0, 0, 256);
        v69 = v50;
        v51 = objc_msgSend(v17, "name");
        if (v51)
        {
          v52 = v51;
          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
          v47 = v53;

        }
        else
        {

          v45 = 0;
          v47 = 0;
        }
        v61 = v69;
        v60 = v70;
        v59 = v68;
        goto LABEL_39;
      }
LABEL_16:
      v29 = sub_100351DB4();
      swift_allocError(&type metadata for NowPlayingNavigationItemConfiguration.Error, v29, 0, 0);
      v32 = 4;
LABEL_22:
      *v30 = v32;
      swift_willThrow(v31);

      return;
    }
    v36 = sub_100351DB4();
    swift_allocError(&type metadata for NowPlayingNavigationItemConfiguration.Error, v36, 0, 0);
    *v37 = 1;
LABEL_20:
    swift_willThrow(v34);
    return;
  }
  if (a1 == 1)
  {
    v16 = objc_msgSend(a2, "album");
    if (v16)
    {
      v17 = v16;
      v18 = sub_100488A98(v16, a2, a4);
      if (v18)
      {
        v20 = v18;
        v70 = v19;
        if (objc_msgSend(v17, "hasLoadedValueForKey:", MPModelPropertyAlbumArtwork))
          v68 = objc_msgSend(v17, "artworkCatalog");
        else
          v68 = 0;
        v41 = String.LocalizationValue.init(stringLiteral:)(0x6C41206F74206F47, 0xEB000000006D7562);
        static Locale.current.getter(v41);
        v67 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v12, "Navigates to the album of the current playing song", 50, 2);
        v69 = v42;
        v43 = objc_msgSend(v17, "title");
        if (v43)
        {
          v44 = v43;
          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
          v47 = v46;

          v17 = v44;
        }
        else
        {
          v57 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
          static Locale.current.getter(v57);
          v45 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v12, 0, 0, 256);
          v47 = v58;
        }
        v59 = v68;

        v61 = v69;
        v60 = v70;
        v49 = v67;
        goto LABEL_39;
      }
      goto LABEL_16;
    }
    v33 = sub_100351DB4();
    swift_allocError(&type metadata for NowPlayingNavigationItemConfiguration.Error, v33, 0, 0);
    *v35 = 2;
    goto LABEL_20;
  }
  if (!a3)
  {
    v38 = sub_100351DB4();
    swift_allocError(&type metadata for NowPlayingNavigationItemConfiguration.Error, v38, 0, 0);
    *v39 = 0;
    goto LABEL_20;
  }
  v71 = a1;
  v17 = a3;
  v24 = objc_msgSend(v17, "innermostModelObject");
  objc_opt_self(MPModelPlaylist);
  v25 = (void *)swift_dynamicCastObjCClass(v24);
  if (!v25)
  {

    v40 = sub_100351DB4();
    swift_allocError(&type metadata for NowPlayingNavigationItemConfiguration.Error, v40, 0, 0);
    v32 = 3;
    goto LABEL_22;
  }
  v26 = v25;
  v27 = sub_1004887E0(v25, a2, a4);
  if (!v27)
  {
    v54 = sub_100351DB4();
    swift_allocError(&type metadata for NowPlayingNavigationItemConfiguration.Error, v54, 0, 0);
    *v55 = 4;
    swift_willThrow(v56);

    return;
  }
  v20 = v27;
  v70 = v28;
  if (objc_msgSend(v26, "hasLoadedValueForKey:", MPModelPropertyPlaylistArtwork))
    v68 = objc_msgSend(v26, "artworkCatalog");
  else
    v68 = 0;
  v62 = String.LocalizationValue.init(stringLiteral:)(0x6C50206F74206F47, 0xEE007473696C7961);
  static Locale.current.getter(v62);
  v67 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v12, 0, 0, 256);
  v69 = v63;
  v64 = objc_msgSend(v26, "name");
  if (v64)
  {
    v65 = v64;
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v47 = v66;

  }
  else
  {

    v45 = 0;
    v47 = 0;
  }
  v61 = v69;
  v60 = v70;
  v49 = v67;
  v59 = v68;
  LOBYTE(a1) = v71;
LABEL_39:
  *(_BYTE *)a5 = a1;
  *(_QWORD *)(a5 + 8) = v49;
  *(_QWORD *)(a5 + 16) = v61;
  *(_QWORD *)(a5 + 24) = v45;
  *(_QWORD *)(a5 + 32) = v47;
  *(_QWORD *)(a5 + 40) = v59;
  *(_QWORD *)(a5 + 48) = v20;
  *(_QWORD *)(a5 + 56) = v60;
}

unint64_t sub_100351DB4()
{
  unint64_t result;

  result = qword_1011ADC98;
  if (!qword_1011ADC98)
  {
    result = swift_getWitnessTable(&unk_100EB5BF0, &type metadata for NowPlayingNavigationItemConfiguration.Error);
    atomic_store(result, (unint64_t *)&qword_1011ADC98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NowPlayingNavigationItemConfiguration.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100351E44 + 4 * byte_100EB5AB5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100351E78 + 4 * byte_100EB5AB0[v4]))();
}

uint64_t sub_100351E78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100351E80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100351E88);
  return result;
}

uint64_t sub_100351E94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100351E9CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100351EA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100351EA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingNavigationItemConfiguration.Error()
{
  return &type metadata for NowPlayingNavigationItemConfiguration.Error;
}

uint64_t destroy for NowPlayingNavigationItemConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

  return swift_release(*(_QWORD *)(a1 + 56));
}

uint64_t initializeWithCopy for NowPlayingNavigationItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = (id)v8;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for NowPlayingNavigationItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a1 + 40);
  v9 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = v9;

  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  swift_retain(v11);
  swift_release(v13);
  return a1;
}

uint64_t assignWithTake for NowPlayingNavigationItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingNavigationItemConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingNavigationItemConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingNavigationItemConfiguration()
{
  return &type metadata for NowPlayingNavigationItemConfiguration;
}

unint64_t sub_100352130()
{
  unint64_t result;

  result = qword_1011ADCA0;
  if (!qword_1011ADCA0)
  {
    result = swift_getWitnessTable(&unk_100EB5B18, &type metadata for NowPlayingNavigationItemConfiguration);
    atomic_store(result, (unint64_t *)&qword_1011ADCA0);
  }
  return result;
}

unint64_t sub_100352178()
{
  unint64_t result;

  result = qword_1011ADCA8;
  if (!qword_1011ADCA8)
  {
    result = swift_getWitnessTable(&unk_100EB5BC8, &type metadata for NowPlayingNavigationItemConfiguration.Error);
    atomic_store(result, (unint64_t *)&qword_1011ADCA8);
  }
  return result;
}

uint64_t sub_1003521BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011ADCB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for NowPlayingNavigationItemConfiguration.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100352250 + 4 * byte_100EB5ABF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100352284 + 4 * byte_100EB5ABA[v4]))();
}

uint64_t sub_100352284(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035228C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100352294);
  return result;
}

uint64_t sub_1003522A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003522A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003522AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003522B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingNavigationItemConfiguration.Kind()
{
  return &type metadata for NowPlayingNavigationItemConfiguration.Kind;
}

unint64_t sub_1003522D4()
{
  unint64_t result;

  result = qword_1011ADCB8;
  if (!qword_1011ADCB8)
  {
    result = swift_getWitnessTable(&unk_100EB5CA8, &type metadata for NowPlayingNavigationItemConfiguration.Kind);
    atomic_store(result, (unint64_t *)&qword_1011ADCB8);
  }
  return result;
}

void sub_100352318()
{
  void (*v0)(_QWORD *, _QWORD);
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];

  v15 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
  KeyPath = swift_getKeyPath(&unk_100EB5D10);
  v14 = v15;
  v2 = swift_getKeyPath(&unk_100EB5D48);
  static Published.subscript.getter(v16, v0, KeyPath, v2);
  swift_release();
  swift_release();
  v3 = *(_QWORD *)(v16[0] + 16);
  swift_bridgeObjectRelease(v16[0]);
  if (v3)
  {
    __chkstk_darwin(v4);
    v5 = swift_getKeyPath(&unk_100EB5D10);
    v6 = (unint64_t *)&v14;
    __chkstk_darwin(v5);
    v7 = swift_getKeyPath(&unk_100EB5D48);
    v8 = static Published.subscript.modify(v16, v0, v5, v7);
    v10 = *v9;
    if (*(_QWORD *)(*v9 + 16))
    {
      v0 = (void (*)(_QWORD *, _QWORD))v8;
      v6 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native(*v9) & 1) != 0)
      {
        v11 = *(_QWORD *)(v10 + 16);
        if (v11)
        {
LABEL_5:
          v12 = v11 - 1;
          v13 = type metadata accessor for NavigationDestinationItem(0);
          sub_1003524F4(v10+ ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v12);
          *(_QWORD *)(v10 + 16) = v12;
          *v6 = v10;
          v0(v16, 0);
          swift_release();
          swift_release();
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    v10 = sub_10072E0B4(v10);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
      goto LABEL_5;
    goto LABEL_9;
  }
}

uint64_t sub_1003524DC()
{
  return 8;
}

_QWORD *sub_1003524E8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003524F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NavigationDestinationItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100352530()
{
  qword_10124CDF8 = Int.seconds.getter(4);
}

void sub_100352550()
{
  qword_1011ADCC0 = Int.seconds.getter(64);
}

void sub_100352570()
{
  qword_1011ADCC8 = Int.seconds.getter(24);
}

double sub_100352590()
{
  double result;

  result = 10.0;
  __asm { FMOV            V1.2D, #10.0 }
  xmmword_1011ADCD0 = _Q1;
  *(_OWORD *)&qword_1011ADCE0 = xmmword_100EB5D70;
  return result;
}

char *sub_1003525AC(char a1)
{
  char *v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  objc_class *v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  float64x2_t v41;
  float64x2_t v42;
  uint64_t v43;
  int16x4_t v44;
  int64x2_t v45;
  objc_class *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (**v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (**v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t inited;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSString *v83;
  NSString *v84;
  NSString *v85;
  NSString *v86;
  uint64_t v87;
  _BYTE v89[192];
  objc_super v90;

  v3 = a1 & 1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v89[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v89[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = &v1[OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModel];
  v11 = _s9ViewModelOMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModelObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_shouldShowLibraryImportViewObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_mliInProgressObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_mliEnabledDidChangeObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_sceneBinding] = 0;
  v12 = &v1[OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks];
  v13 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = type metadata accessor for SplitViewController.NavigationStacks(0);
  *(_QWORD *)&v12[*(int *)(v14 + 20)] = _swiftEmptyArrayStorage;
  v15 = *(int *)(v14 + 24);
  v16 = v1;
  *(_QWORD *)&v12[v15] = sub_1000435B8((uint64_t)_swiftEmptyArrayStorage);
  v17 = &v16[OBJC_IVAR____TtC5Music19SplitViewController_keyboardObserver];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v16[OBJC_IVAR____TtC5Music19SplitViewController_ppt_isContentReady] = 0;
  v18 = &v16[OBJC_IVAR____TtC5Music19SplitViewController_ppt_onContentIsReady];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v16[OBJC_IVAR____TtC5Music19SplitViewController_context] = v3;
  v19 = objc_allocWithZone((Class)type metadata accessor for SidebarMenuViewController(0));
  v20 = sub_1008BBF30(v3);
  v21 = v20;
  if ((a1 & 1) != 0)
  {
    v29 = v20;
    v30 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
    static Locale.current.getter(v30);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v32 = v31;
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setTitle:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  }
  else
  {
    v22 = (void *)objc_opt_self(NSBundle);
    v23 = v21;
    v24 = objc_msgSend(v22, "mainBundle");
    NSBundle.displayName.getter();
    v26 = v25;

    if (v26)
    {
      v28 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v27 = swift_bridgeObjectRelease(v26).n128_u64[0];
    }
    else
    {
      v28 = 0;
    }
    objc_msgSend(v23, "setTitle:", v28, v27);

  }
  v34 = (objc_class *)type metadata accessor for SplitViewController.PaletteViewController();
  v35 = objc_allocWithZone(v34);
  v36 = v21;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController] = sub_1003585AC(0, v21, 0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Music19SplitViewController_sidebarMenuViewController] = v36;
  v37 = objc_allocWithZone(v34);
  v38 = (char *)v36;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController] = sub_1003585AC(1, 0, 0);
  v39 = sub_1003593E8();
  if (qword_10119BF08 != -1)
    swift_once(&qword_10119BF08, sub_100352570);
  v40 = qword_1011ADCC8;
  v41 = *(float64x2_t *)&v39[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets];
  v42 = *(float64x2_t *)&v39[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets + 16];
  *(_QWORD *)&v39[OBJC_IVAR____TtC5Music20PaletteContainerView_contentInsets + 16] = qword_1011ADCC8;
  v43 = v40;
  v44 = vmovn_s32(vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v41, (float64x2_t)0), (int8x16_t)vcgeq_f64((float64x2_t)0, v41)), (int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v42, (float64x2_t)(unint64_t)v40), (int8x16_t)vcgeq_f64((float64x2_t)(unint64_t)v40, v42))));
  v45 = vceqq_f64((float64x2_t)(unint64_t)v43, v42);
  v44.i16[2] = vmovn_s32(vmovn_hight_s64(*(int32x2_t *)&v45, v45)).i16[2];
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(v44, 0xFuLL))) & 1) == 0)
    objc_msgSend(v39, "setNeedsLayout");

  v46 = (objc_class *)type metadata accessor for SplitViewController(0);
  v90.receiver = v16;
  v90.super_class = v46;
  v47 = (char *)objc_msgSendSuper2(&v90, "initWithStyle:", 1);
  v48 = *(_QWORD *)&v47[OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController];
  v49 = v47;
  objc_msgSend(v49, "setViewController:forColumn:", v48, 0);
  objc_msgSend(v49, "setViewController:forColumn:", *(_QWORD *)&v49[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController], 2);
  objc_msgSend(v49, "setDelegate:", v49);
  objc_msgSend(v49, "setMaximumPrimaryColumnWidth:", 500.0);
  v50 = swift_allocObject(&unk_1010C1090, 24, 7);
  swift_unknownObjectWeakInit(v50 + 16, v49);
  v51 = (void (**)(uint64_t))&v38[OBJC_IVAR____TtC5Music25SidebarMenuViewController_onSelectedItemChanged];
  v52 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Music25SidebarMenuViewController_onSelectedItemChanged];
  v53 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Music25SidebarMenuViewController_onSelectedItemChanged + 8];
  *v51 = sub_1003608B4;
  v51[1] = (void (*)(uint64_t))v50;
  sub_10004BA30(v52, v53);
  v54 = swift_allocObject(&unk_1010C1090, 24, 7);
  swift_unknownObjectWeakInit(v54 + 16, v49);
  v55 = (void (**)(uint64_t, uint64_t))&v38[OBJC_IVAR____TtC5Music25SidebarMenuViewController_onUserSelection];
  v56 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Music25SidebarMenuViewController_onUserSelection];
  v57 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Music25SidebarMenuViewController_onUserSelection + 8];
  *v55 = sub_1003608BC;
  v55[1] = (void (*)(uint64_t, uint64_t))v54;
  sub_10004BA30(v56, v57);
  v58 = sub_100048C04((uint64_t)&off_1010ABC98);
  v59 = swift_allocObject(&unk_1010C1090, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16, v49);
  v60 = KeyboardObserver.init(options:update:)(v58, (uint64_t)sub_1003608C4, v59);
  v61 = (uint64_t *)&v49[OBJC_IVAR____TtC5Music19SplitViewController_keyboardObserver];
  v62 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Music19SplitViewController_keyboardObserver];
  v63 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Music19SplitViewController_keyboardObserver + 8];
  v64 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Music19SplitViewController_keyboardObserver + 16];
  v65 = *(_QWORD *)&v49[OBJC_IVAR____TtC5Music19SplitViewController_keyboardObserver + 24];
  *v61 = v60;
  v61[1] = v66;
  v61[2] = v67;
  v61[3] = v68;
  sub_1003608CC(v62, v63, v64, v65);
  v69 = objc_msgSend(v49, "traitCollection");
  v70 = objc_msgSend(v69, "userInterfaceIdiom");

  if (v70 == (id)6)
  {

  }
  else
  {
    v71 = sub_100007E8C(&qword_1011A23A8);
    inited = swift_initStackObject(v71, v89);
    *(_OWORD *)(inited + 16) = xmmword_100EA7BA0;
    UIScreen.Dimensions.size.getter(UISceneWillConnectNotification);
    *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 32) = v73;
    *(_QWORD *)(inited + 40) = v74;
    UIScreen.Dimensions.size.getter(UISceneDidDisconnectNotification);
    *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 72) = v75;
    *(_QWORD *)(inited + 80) = v76;
    UIScreen.Dimensions.size.getter(UISceneDidActivateNotification);
    *(_QWORD *)(inited + 136) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 144) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 112) = v77;
    *(_QWORD *)(inited + 120) = v78;
    UIScreen.Dimensions.size.getter(UISceneDidEnterBackgroundNotification);
    *(_QWORD *)(inited + 176) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 184) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 152) = v79;
    *(_QWORD *)(inited + 160) = v80;
    v81 = swift_allocObject(&unk_1010C1090, 24, 7);
    swift_unknownObjectWeakInit(v81 + 16, v49);
    v82 = type metadata accessor for Whitetail.Binding();
    swift_allocObject(v82, 48, 7);
    v83 = UISceneWillConnectNotification;
    v84 = UISceneDidDisconnectNotification;
    v85 = UISceneDidActivateNotification;
    v86 = UISceneDidEnterBackgroundNotification;
    swift_retain();
    v87 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 0, (uint64_t)sub_100360904, v81);
    swift_release();

    *(_QWORD *)&v49[OBJC_IVAR____TtC5Music19SplitViewController_sceneBinding] = v87;
    swift_release();
  }
  return v49;
}

void sub_100352D00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10035F9FC(a1);
    sub_100356210(a1, 0);
    if (objc_msgSend(v5, "displayMode") == (id)3)
      objc_msgSend(v5, "hideColumn:", 0);

  }
}

void sub_100352D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  char v20;
  char v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  id v25;
  uint64_t v26;
  _BYTE v27[24];

  v26 = a3;
  v5 = type metadata accessor for SidebarMenu.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_100007E8C((uint64_t *)&unk_1011AE1E0);
  __chkstk_darwin(v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v12);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v15);
  v17 = &v27[-v16 - 8];
  sub_1001FFA40(a2, (uint64_t)&v27[-v16 - 8]);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  v18 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10004A160(a1, (uint64_t)v11, (uint64_t *)&unk_1011CEE40);
  sub_10004A160((uint64_t)v17, v18, (uint64_t *)&unk_1011CEE40);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v19((uint64_t)v11, 1, v5) != 1)
  {
    sub_10004A160((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1011CEE40);
    if (v19(v18, 1, v5) != 1)
    {
      sub_10005B6C0(v18, (uint64_t)v8, type metadata accessor for SidebarMenu.Item);
      sub_100300E0C((uint64_t)v14, (uint64_t)v8);
      v21 = v20;
      sub_10005B748((uint64_t)v8, type metadata accessor for SidebarMenu.Item);
      sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011CEE40);
      sub_10005B748((uint64_t)v14, type metadata accessor for SidebarMenu.Item);
      sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011CEE40);
      if ((v21 & 1) == 0)
        return;
      goto LABEL_8;
    }
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011CEE40);
    sub_10005B748((uint64_t)v14, type metadata accessor for SidebarMenu.Item);
LABEL_6:
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011AE1E0);
    return;
  }
  sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011CEE40);
  if (v19(v18, 1, v5) != 1)
    goto LABEL_6;
  sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011CEE40);
LABEL_8:
  v22 = v26 + 16;
  swift_beginAccess(v26 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v22);
  if (Strong)
  {
    v24 = (void *)Strong;
    v25 = objc_retain(*(id *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)
                            + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController));

  }
}

void sub_100353080(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10035737C(a2);

  }
}

void sub_1003530D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100355750(1);

  }
}

id sub_100353150(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  id result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v3 = _s9ViewModelOMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v35 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  __chkstk_darwin(v6);
  v31 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v33 = (char *)&v31 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - v11;
  v13 = sub_100007E8C(&qword_1011AD440);
  __chkstk_darwin(v13);
  v34 = (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  v32 = v1;
  v18 = (uint64_t)&v1[OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModel], v36, 0, 0);
  v19 = (uint64_t)&v17[*(int *)(v13 + 48)];
  sub_10004A160(a1, (uint64_t)v17, (uint64_t *)&unk_1011BC820);
  sub_10004A160(v18, v19, (uint64_t *)&unk_1011BC820);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v17, 1, v3) == 1)
  {
    if (v20(v19, 1, v3) == 1)
    {
      v21 = (uint64_t)v17;
      return (id)sub_10004FF60(v21, (uint64_t *)&unk_1011BC820);
    }
    goto LABEL_6;
  }
  sub_10004A160((uint64_t)v17, (uint64_t)v12, (uint64_t *)&unk_1011BC820);
  if (v20(v19, 1, v3) == 1)
  {
    sub_10005B748((uint64_t)v12, _s9ViewModelOMa);
LABEL_6:
    sub_10004FF60((uint64_t)v17, &qword_1011AD440);
    goto LABEL_7;
  }
  v26 = v35;
  sub_10005B6C0(v19, v35, _s9ViewModelOMa);
  v27 = sub_100646794((uint64_t)v12, v26);
  sub_10005B748(v26, _s9ViewModelOMa);
  sub_10005B748((uint64_t)v12, _s9ViewModelOMa);
  result = (id)sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011BC820);
  if ((v27 & 1) == 0)
  {
LABEL_7:
    result = (id)((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(a1, 1, v3);
    if ((_DWORD)result != 1)
      return result;
    v23 = (uint64_t)v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v33, 1, 1, v3);
    v24 = v34;
    v25 = v34 + *(int *)(v13 + 48);
    sub_10004A160(v18, v34, (uint64_t *)&unk_1011BC820);
    sub_10004A160(v23, v25, (uint64_t *)&unk_1011BC820);
    if (v20(v24, 1, v3) == 1)
    {
      sub_10004FF60(v23, (uint64_t *)&unk_1011BC820);
      if (v20(v25, 1, v3) == 1)
      {
        v21 = v24;
        return (id)sub_10004FF60(v21, (uint64_t *)&unk_1011BC820);
      }
    }
    else
    {
      v28 = v31;
      sub_10004A160(v24, v31, (uint64_t *)&unk_1011BC820);
      if (v20(v25, 1, v3) != 1)
      {
        v29 = v35;
        sub_10005B6C0(v25, v35, _s9ViewModelOMa);
        v30 = sub_100646794(v28, v29);
        sub_10005B748(v29, _s9ViewModelOMa);
        sub_10004FF60(v23, (uint64_t *)&unk_1011BC820);
        sub_10005B748(v28, _s9ViewModelOMa);
        result = (id)sub_10004FF60(v24, (uint64_t *)&unk_1011BC820);
        if ((v30 & 1) != 0)
          return result;
        return objc_msgSend(v32, "showColumn:", 0);
      }
      sub_10004FF60(v23, (uint64_t *)&unk_1011BC820);
      sub_10005B748(v28, _s9ViewModelOMa);
    }
    sub_10004FF60(v24, &qword_1011AD440);
    return objc_msgSend(v32, "showColumn:", 0);
  }
  return result;
}

void sub_100353580()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  id v17;
  void *v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void (**v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  id aBlock[6];
  objc_super v86;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011AE248);
  v80 = *(_QWORD *)(v2 - 8);
  v81 = v2;
  __chkstk_darwin(v2);
  v79 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011AE250);
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  __chkstk_darwin(v4);
  v82 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A08E0);
  v76 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A2310);
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (objc_class *)type metadata accessor for SplitViewController(0);
  v86.receiver = v0;
  v86.super_class = v15;
  objc_msgSendSuper2(&v86, "viewDidLoad");
  v16 = objc_msgSend(v0, "traitCollection");
  v17 = objc_msgSend(v16, "horizontalSizeClass");

  sub_1008C6518(v17 == (id)2);
  v18 = *(void **)&v0[OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction];
  if (v18)
  {
    LOBYTE(aBlock[0]) = 2;
    v19 = sub_10004D63C();
    v20 = v18;
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v19) & 1) != 0)
    {
      v21 = *(void **)&v1[OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController];
      if (v21)
      {
        v22 = objc_msgSend(v21, "view");
        if (v22)
        {
          v23 = v22;
          objc_msgSend(v22, "addInteraction:", v20);
LABEL_10:

          goto LABEL_11;
        }
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }
    }
    else
    {
      v24 = OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController;
      v25 = *(void **)&v1[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController];
      if (v25)
      {
        v26 = objc_msgSend(v25, "view");
        if (!v26)
          goto LABEL_16;
        v27 = v26;
        objc_msgSend(v26, "addInteraction:", v20);

        v28 = *(void **)&v1[v24];
        if (v28)
        {
          v29 = (_QWORD *)swift_allocObject(&unk_1010C1220, 24, 7);
          v29[2] = v20;
          v30 = objc_allocWithZone((Class)UISpringLoadedInteraction);
          aBlock[4] = sub_100360E30;
          aBlock[5] = v29;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = (id)1107296256;
          aBlock[2] = sub_10035C2EC;
          aBlock[3] = &unk_1010C1238;
          v31 = _Block_copy(aBlock);
          v32 = v20;
          v23 = v28;
          v33 = objc_msgSend(v30, "initWithInteractionBehavior:interactionEffect:activationHandler:", 0, v23, v31);
          _Block_release(v31);
          swift_release();
          sub_100263374(v33);
          goto LABEL_10;
        }
      }
    }
LABEL_11:

  }
  v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController];
  v35 = swift_allocObject(&unk_1010C1090, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, v1);
  v36 = (void (**)(uint64_t, uint64_t))(v34
                                               + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController);
  v37 = *(_QWORD *)(v34
                  + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController);
  v38 = *(_QWORD *)(v34
                  + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController
                  + 8);
  *v36 = sub_100360B14;
  v36[1] = (void (*)(uint64_t, uint64_t))v35;
  sub_10004BA30(v37, v38);
  if (qword_10119C1A8 != -1)
    swift_once(&qword_10119C1A8, sub_10055C25C);
  swift_beginAccess(qword_10124D228 + OBJC_IVAR____TtCO5Music13LibraryImport10Controller__shouldShowView, aBlock, 33, 0);
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  Published.projectedValue.getter(v39);
  swift_endAccess(aBlock);
  v40 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v40, v41, v42, v43, v44, v45, v46, v47);
  v48 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
  v49(v8, 1, 1, v48);
  v50 = sub_100049F28(&qword_1011A0928, (uint64_t *)&unk_1011A08E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v51 = sub_10006A92C();
  Publisher.receive<A>(on:options:)(aBlock, v8, v9, v40, v50, v51);
  sub_10004FF60((uint64_t)v8, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v76 + 8))(v11, v9);
  v52 = swift_allocObject(&unk_1010C1090, 24, 7);
  swift_unknownObjectWeakInit(v52 + 16, v1);
  v53 = sub_100049F28((unint64_t *)&unk_1011A0930, &qword_1011A2310, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v54 = v78;
  v55 = Publisher<>.sink(receiveValue:)(sub_100360B1C, v52, v78, v53);
  v56 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v14, v54, v56);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_shouldShowLibraryImportViewObserver] = v55;
  swift_release();
  swift_beginAccess(qword_10124D228 + OBJC_IVAR____TtCO5Music13LibraryImport10Controller__viewModel, aBlock, 33, 0);
  v57 = sub_100007E8C((uint64_t *)&unk_1011AD3A0);
  v58 = v79;
  Published.projectedValue.getter(v57);
  v59 = swift_endAccess(aBlock);
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v59, v60, v61, v62, v63, v64, v65, v66);
  v49(v8, 1, 1, v48);
  v67 = sub_100049F28((unint64_t *)&qword_1011AE258, &qword_1011AE248, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v68 = v81;
  v69 = v82;
  Publisher.receive<A>(on:options:)(aBlock, v8, v81, v40, v67, v51);
  sub_10004FF60((uint64_t)v8, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v68);
  v70 = swift_allocObject(&unk_1010C1090, 24, 7);
  swift_unknownObjectWeakInit(v70 + 16, v1);
  v71 = sub_100049F28((unint64_t *)&unk_1011AE260, &qword_1011AE250, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v72 = v84;
  v73 = Publisher<>.sink(receiveValue:)(sub_100360B24, v70, v84, v71);
  v74 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v69, v72, v74);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModelObserver] = v73;
  swift_release();
}

void sub_100353C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  _QWORD v6[6];

  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v6[4] = sub_100360B2C;
  v6[5] = a3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1001DBD98;
  v6[3] = &unk_1010C1260;
  v5 = _Block_copy(v6);
  swift_retain();
  objc_msgSend(v4, "_performBlockAfterCATransactionCommits:", v5, swift_release().n128_f64[0]);
  _Block_release(v5);

}

void sub_100353D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  Swift::Int v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_100048C10((uint64_t)&off_1010ABCC0);
    v5 = v3;
    sub_10035F88C(v4, v5);
    swift_bridgeObjectRelease(v4);

  }
}

void sub_100353DBC(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  char v19[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController;
    v7 = *(char **)(Strong + OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController);
    if (v2)
    {
      v8 = *(void **)&v7[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController];
      if (v8 && (v9 = _s14ViewControllerCMa(0), (v10 = swift_dynamicCastClass(v8, v9)) != 0))
      {
        v11 = (void *)v10;
        v12 = v8;
      }
      else
      {
        v14 = objc_allocWithZone((Class)_s14ViewControllerCMa(0));
        sub_10063CB90(1);
        v11 = v15;
      }
      v16 = v11;
      UIHostingController.safeAreaRegions.setter(0);

      v17 = *(void **)&v5[v6];
      v13 = (char *)v16;
      v18 = v17;
      sub_1003597DC(v16, 1, 0);

      v5 = v13;
    }
    else
    {
      v13 = v7;
      sub_1003597DC(0, 1, 0);
    }

  }
}

void sub_100353EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  char v17;
  char *v18;
  char *v19;
  id v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011BC820);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v31[-v9 - 8];
  v11 = sub_100007E8C((uint64_t *)&unk_1011AE270);
  __chkstk_darwin(v11);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = (char *)Strong;
    v16 = Strong + OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModel;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModel, v32, 0, 0);
    sub_10004A160(v16, (uint64_t)v13, (uint64_t *)&unk_1011BC820);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
    v17 = sub_10063C2D8((uint64_t)v13);
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011AE270);
    if ((v17 & 1) != 0)
    {
      v18 = (char *)*(id *)&v15[OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController];
      v19 = sub_1003593E8();
      v20 = objc_msgSend(v18, "view");
      if (!v20)
      {
        __break(1u);
        return;
      }
      v21 = v20;
      objc_msgSend(v20, "bounds");
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;

      sub_100359580(*(_QWORD *)&v18[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController] != 0, v23, v25, v27, v29);
      objc_msgSend(v19, "setFrame:");

      sub_10035A1B0();
    }
    sub_10004A160(a1, (uint64_t)v10, (uint64_t *)&unk_1011BC820);
    sub_10004A160(v16, (uint64_t)v7, (uint64_t *)&unk_1011BC820);
    swift_beginAccess(v16, v31, 33, 0);
    sub_1001A83C8((uint64_t)v10, v16, (uint64_t *)&unk_1011BC820);
    swift_endAccess(v31);
    sub_100353150((uint64_t)v7);
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011BC820);
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011BC820);

  }
}

void sub_100354290()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _QWORD);
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  double Width;
  double Height;
  uint64_t v23;
  char *v24;
  char *v25;
  double v26;
  char v27;
  char *v28;
  double v29;
  char v30;
  uint64_t v31;
  char *v32;
  double v33;
  char v34;
  char *v35;
  double v36;
  char v37;
  char v38;
  char v39;
  _BYTE v40[32];
  objc_super v41;
  CGRect v42;
  CGRect v43;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for SplitViewController(0);
  objc_msgSendSuper2(&v41, "viewDidLayoutSubviews");
  sub_100355608();
  sub_1003554B8();
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = UIView.noticePresenter.getter();

    if (v4)
    {
      sub_100354704();
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v14 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v4 + 248))(v40);
      v15[3] = v7;
      v15[4] = v9;
      v15[5] = v11;
      v15[6] = v13;
      v14(v40, 0);
      *(_QWORD *)&v5 = swift_release().n128_u64[0];
    }
    v16 = objc_msgSend(v1, "view", v5);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "window");

      if (!v18 || (v19 = objc_msgSend(v18, "screen"), v18, !v19))
      {
        v31 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController]
            + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewMaxWidth;
        *(_QWORD *)v31 = 0;
        *(_BYTE *)(v31 + 8) = 1;
        v32 = sub_1003593E8();
        v25 = v32;
        v33 = *(double *)v31;
        v34 = *(_BYTE *)(v31 + 8);
        v35 = &v32[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
        v36 = *(double *)&v32[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
        v37 = v32[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth + 8];
        *(_QWORD *)v35 = *(_QWORD *)v31;
        v35[8] = v34;
        if ((v34 & 1) != 0)
        {
          if ((v37 & 1) != 0)
            goto LABEL_26;
        }
        else
        {
          if (v36 == v33)
            v38 = v37;
          else
            v38 = 1;
          if ((v38 & 1) == 0)
            goto LABEL_26;
        }
        objc_msgSend(v32, "setNeedsLayout", v36);
LABEL_26:

        return;
      }
      v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController];
      objc_msgSend(v19, "bounds");
      Width = CGRectGetWidth(v42);
      objc_msgSend(v19, "bounds");
      Height = CGRectGetHeight(v43);
      if (Height >= Width)
        Height = Width;
      v23 = v20
          + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewMaxWidth;
      *(double *)v23 = Height;
      *(_BYTE *)(v23 + 8) = 0;
      v24 = sub_1003593E8();
      v25 = v24;
      v26 = *(double *)v23;
      v27 = *(_BYTE *)(v23 + 8);
      v28 = &v24[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
      v29 = *(double *)&v24[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
      v30 = v24[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth + 8];
      *(_QWORD *)v28 = *(_QWORD *)v23;
      v28[8] = v27;
      if ((v27 & 1) != 0)
      {
        if ((v30 & 1) != 0)
          goto LABEL_25;
      }
      else
      {
        if (v29 == v26)
          v39 = v30;
        else
          v39 = 1;
        if ((v39 & 1) == 0)
          goto LABEL_25;
      }
      objc_msgSend(v24, "setNeedsLayout", v29);
LABEL_25:

      goto LABEL_26;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100354704()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  int v8;
  id v9;
  void *v10;

  v1 = v0;
  v2 = objc_msgSend(v0, "presentedViewController");
  if (v2)
  {
    v3 = v2;
    if ((objc_msgSend(v2, "isBeingDismissed") & 1) == 0)
    {
      v9 = objc_msgSend(v3, "view");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "directionalLayoutMargins");

        return;
      }
LABEL_11:
      __break(1u);
      return;
    }

  }
  v4 = objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController]+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController), "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  v5 = v4;
  objc_msgSend(v4, "directionalLayoutMargins");

  v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController], "traitCollection");
  sub_100354868();
  v8 = v7;

  if (!v8)
    objc_msgSend(v1, "primaryColumnWidth");
}

uint64_t sub_100354868()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char *v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "_valueForTraitNamed:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v7, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_100065228((uint64_t)v7, (uint64_t)v8, &qword_10119DCC0);
  if (!v9)
  {
    sub_10004FF60((uint64_t)v8, &qword_10119DCC0);
    return 0;
  }
  v3 = _s29SplitViewColumnContextWrapperCMa();
  if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = *(_QWORD *)&v6[OBJC_IVAR___MusicSplitViewContext_context];

  return v4;
}

void sub_100354980()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  _BYTE *v14;
  id v15;
  _QWORD aBlock[6];

  sub_100355750(0);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController);
  if (!v1)
    return;
  v15 = v1;
  if (!objc_msgSend(v15, "isViewLoaded"))
  {

    return;
  }
  v2 = objc_msgSend(v15, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = v2;
  if (qword_10119BF10 != -1)
    swift_once(&qword_10119BF10, sub_100352590);
  objc_msgSend(v3, "setDirectionalLayoutMargins:", xmmword_1011ADCD0, *(double *)&qword_1011ADCE0, unk_1011ADCE8);

  v4 = *(void **)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction);
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  v6 = objc_msgSend(v15, "view");
  if (!v6)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v7 = v6;
  objc_msgSend(v6, "addInteraction:", v5);

  v8 = swift_allocObject(&unk_1010C1040, 24, 7);
  *(_QWORD *)(v8 + 16) = v5;
  v9 = objc_allocWithZone((Class)UISpringLoadedInteraction);
  aBlock[4] = sub_100360E30;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10035C2EC;
  aBlock[3] = &unk_1010C1058;
  v10 = _Block_copy(aBlock);
  v11 = v5;
  v12 = objc_msgSend(v9, "initWithInteractionBehavior:interactionEffect:activationHandler:", 0, v15, v10);
  _Block_release(v10);
  swift_release();
  sub_100263374(v12);

LABEL_9:
  v13 = objc_msgSend(v15, "artworkView");

  if (!v13)
  {
    type metadata accessor for NowPlayingContentView(0);
    v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    sub_100263954(v14);

  }
}

uint64_t sub_100354C10()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BYTE v10[24];

  v1 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0;
  if (sub_10035F694(3uLL, v4) == 4)
  {
    v5 = (uint64_t)v4 + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks;
    swift_beginAccess(v5, v10, 0, 0);
    sub_10004A160(v5, (uint64_t)v3, (uint64_t *)&unk_1011CEE40);
    v6 = type metadata accessor for SidebarMenu.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) != 1)
    {
      v7 = (char *)&loc_100354D18 + 4 * byte_100EB5D80[swift_getEnumCaseMultiPayload(v3, v6)];
      __asm { BR              X10 }
    }
  }
  return 0;
}

void sub_100354D38()
{
  JUMPOUT(0x100354D20);
}

double sub_100354DB0(void (*a1)(void *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;

  v3 = OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction);
  if (!v4)
    return result;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Music30PalettePresentationInteraction_presentedViewController);
  if (Strong)
  {
    v16 = (id)Strong;
    v9 = type metadata accessor for NowPlayingViewController(0);
    v10 = (void *)swift_dynamicCastClass(v16, v9);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "presentingViewController");

      if (v12)
      {
        if (a1)
        {
          v16 = v16;
          a1(v11);

        }
        return result;
      }
    }

  }
  v13 = *(void **)(v2 + v3);
  if (v13)
  {
    v14 = swift_allocObject(&unk_1010C11F8, 32, 7);
    *(_QWORD *)(v14 + 16) = a1;
    *(_QWORD *)(v14 + 24) = a2;
    v15 = v13;
    sub_100048AAC((uint64_t)a1, a2);
    sub_1008EFCAC((void (*)(id))sub_100360B0C, v14);

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100354F00(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2)
  {
    v3 = result;
    v4 = type metadata accessor for NowPlayingViewController(0);
    v5 = swift_dynamicCastClass(v3, v4);
    return a2(v5);
  }
  return result;
}

uint64_t sub_100354F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE v21[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v21[-v6 - 8];
  v8 = type metadata accessor for SidebarMenu.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10119BE58 != -1)
    swift_once(&qword_10119BE58, sub_1002FBDF8);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100048B14(v12, (uint64_t)qword_10124CD60);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Resetting Navigated nodes", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = v1 + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks, v21, 33, 0);
  v18 = sub_1000435B8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v17 + *(int *)(type metadata accessor for SplitViewController.NavigationStacks(0) + 24)) = v18;
  swift_endAccess(v21);
  swift_bridgeObjectRelease();
  sub_10004A160(v17, (uint64_t)v7, (uint64_t *)&unk_1011CEE40);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011CEE40);
  sub_10005B6C0((uint64_t)v7, (uint64_t)v11, type metadata accessor for SidebarMenu.Item);
  sub_1001FFA40((uint64_t)v11, (uint64_t)v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  sub_100356210((uint64_t)v4, 1);
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011CEE40);
  return sub_10005B748((uint64_t)v11, type metadata accessor for SidebarMenu.Item);
}

void sub_1003551C4(char *a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t Strong;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  char *v15;
  unint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  char *v28;
  id v29;
  char *v30;
  char *v31;
  _QWORD v32[6];

  v2 = v1;
  if (a1)
  {
    v4 = &a1[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_delegate]);
    v6 = a1;
    if (Strong)
    {
      swift_unknownObjectRelease(Strong);
      if ((char *)Strong == v2)
      {
        *((_QWORD *)v4 + 1) = 0;
        swift_unknownObjectWeakAssign(v4, 0);
      }
    }
    v7 = &v6[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_transitioningDelegate];
    v8 = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_transitioningDelegate]);
    if (v8)
    {
      v10 = (char *)v8;
      v9 = swift_unknownObjectRelease(v8).n128_u64[0];
      if (v10 == v2)
      {
        *((_QWORD *)v7 + 1) = 0;
        v9 = swift_unknownObjectWeakAssign(v7, 0).n128_u64[0];
      }
    }
    if (objc_msgSend(v2, "isViewLoaded", *(double *)&v9))
    {
      v11 = *(void **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController];
      if (v11)
      {
        v12 = objc_msgSend(v11, "view");
        if (!v12)
        {
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        v13 = v12;
        objc_msgSend(v12, "removeInteraction:", v6);

      }
    }

  }
  v14 = *(void **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction];
  if (!v14)
    return;
  v15 = v14;
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    LOBYTE(v32[0]) = 2;
    v16 = sub_10004D63C();
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v16) & 1) != 0)
    {
      v17 = *(void **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController];
      if (v17)
      {
        v18 = objc_msgSend(v17, "view", v32[0]);
        if (v18)
        {
          v19 = v18;
          objc_msgSend(v18, "addInteraction:", v15);
LABEL_23:

          goto LABEL_24;
        }
        goto LABEL_27;
      }
    }
    else
    {
      v20 = OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController;
      v21 = *(void **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController];
      if (v21)
      {
        v22 = objc_msgSend(v21, "view", v32[0]);
        if (!v22)
        {
LABEL_28:
          __break(1u);
          return;
        }
        v23 = v22;
        objc_msgSend(v22, "addInteraction:", v15);

        v24 = *(void **)&v2[v20];
        if (v24)
        {
          v25 = swift_allocObject(&unk_1010C0FF0, 24, 7);
          *(_QWORD *)(v25 + 16) = v15;
          v26 = objc_allocWithZone((Class)UISpringLoadedInteraction);
          v32[4] = sub_10035C2E4;
          v32[5] = v25;
          v32[0] = _NSConcreteStackBlock;
          v32[1] = 1107296256;
          v32[2] = sub_10035C2EC;
          v32[3] = &unk_1010C1008;
          v27 = _Block_copy(v32);
          v28 = v15;
          v19 = v24;
          v29 = objc_msgSend(v26, "initWithInteractionBehavior:interactionEffect:activationHandler:", 0, v19, v27);
          _Block_release(v27);
          swift_release();
          sub_100263374(v29);
          goto LABEL_23;
        }
      }
    }
  }
LABEL_24:
  v30 = &v15[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_delegate];
  *((_QWORD *)v30 + 1) = &off_1010C0F78;
  swift_unknownObjectWeakAssign(v30, v2);
  v31 = &v15[OBJC_IVAR____TtC5Music30PalettePresentationInteraction_transitioningDelegate];
  *((_QWORD *)v31 + 1) = &off_1010C0F50;
  swift_unknownObjectWeakAssign(v31, v2);

}

void sub_1003554B8()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  char v13;
  double v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  id v23;
  CGRect v24;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController];
  v2 = objc_msgSend(v1, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v24.origin.x = v5;
  v24.origin.y = v7;
  v24.size.width = v9;
  v24.size.height = v11;
  Width = CGRectGetWidth(v24);
  v13 = HI.SizeClass.init(_:)(Width);
  v14 = HI.SizeClass.margin.getter(v13);
  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  objc_msgSend(v15, "directionalLayoutMargins");
  v18 = v17;

  v19 = objc_msgSend(v0, "view");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "directionalLayoutMargins");
    v22 = v21;

    objc_msgSend(v23, "setDirectionalLayoutMargins:", v18, v14, v22, v14);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100355608()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  id v17;
  id v18;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  objc_msgSend(v1, "directionalLayoutMargins");
  v4 = v3;

  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  objc_msgSend(v5, "directionalLayoutMargins");
  v8 = v7;

  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = v9;
  objc_msgSend(v9, "directionalLayoutMargins");
  v12 = v11;

  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v14 = v13;
  objc_msgSend(v13, "directionalLayoutMargins");
  v16 = v15;

  v17 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController], "view");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setDirectionalLayoutMargins:", v4, v8, v12, v16);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_100355750(char a1)
{
  char *v1;
  unint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  if (objc_msgSend(v1, "isViewLoaded"))
  {
    v3 = sub_10004D63C();
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v3) & 1) != 0)
    {
      v4 = *(void **)&v1[OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController];
      v5 = v4;
      sub_1003597DC(v4, a1 & 1, 0);

    }
    else
    {
      v6 = *(void **)&v1[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController];
      if (v6)
      {
        v7 = v6;
        sub_1003597DC(v6, a1 & 1, 0);

      }
      else
      {
        sub_1003597DC(0, a1 & 1, 0);
      }
    }
  }
}

uint64_t sub_100355848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  _BYTE v22[16];

  v3 = sub_100007E8C(&qword_1011AE240);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for SidebarMenu.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v22[-v14];
  sub_1001A83C8(a1, v1, (uint64_t *)&unk_1011CEE40);
  sub_10004A160(v1, (uint64_t)v8, (uint64_t *)&unk_1011CEE40);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011CEE40);
  }
  else
  {
    sub_10005B6C0((uint64_t)v8, (uint64_t)v15, type metadata accessor for SidebarMenu.Item);
    v16 = type metadata accessor for SplitViewController.NavigationStacks(0);
    v17 = *(_QWORD *)(v1 + *(int *)(v16 + 20));
    __chkstk_darwin(v16);
    *(_QWORD *)&v22[-16] = v15;
    swift_bridgeObjectRetain();
    v18 = sub_10076D3BC(sub_100360E34, (uint64_t)&v22[-32], v17);
    v20 = v19;
    swift_bridgeObjectRelease(v17);
    if ((v20 & 1) == 0)
    {
      sub_1007286C0(v18, (uint64_t)v12);
      sub_10005B748((uint64_t)v12, type metadata accessor for SidebarMenu.Item);
    }
    sub_1001FFA40((uint64_t)v15, (uint64_t)v5);
    sub_1001FD744(0, 0, (uint64_t)v5);
    sub_10005B748((uint64_t)v15, type metadata accessor for SidebarMenu.Item);
  }
  return sub_10004FF60(a1, (uint64_t *)&unk_1011CEE40);
}

id sub_100355A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, uint64_t);
  id v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C((uint64_t *)&unk_1011AE140);
  v8 = __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v12 = &v22[-v11];
  v13 = *(int *)(type metadata accessor for SplitViewController.NavigationStacks(0) + 24);
  v14 = *(_QWORD *)(v2 + v13);
  v23 = a1;
  swift_bridgeObjectRetain();
  sub_1005D2270((uint64_t (*)(char *))sub_100360874, v14, (uint64_t)v12);
  swift_bridgeObjectRelease(v14);
  sub_10004A160((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_1011AE140);
  v15 = sub_100007E8C((uint64_t *)&unk_1011BCCE0);
  v16 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  if (v16(v10, 1, v15) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011AE140);
    v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NavigationController()), "init");
  }
  else
  {
    v17 = *(id *)&v10[*(int *)(v15 + 48)];
    sub_10005B748((uint64_t)v10, type metadata accessor for SidebarMenu.Item);
  }
  if (v16(v12, 1, v15) == 1)
  {
    sub_1001FFA40(a1, (uint64_t)v6);
    v18 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + v13));
    v24 = *(_QWORD *)(v2 + v13);
    *(_QWORD *)(v2 + v13) = 0x8000000000000000;
    sub_1005ED14C((uint64_t)v18, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    v20 = *(_QWORD *)(v2 + v13);
    *(_QWORD *)(v2 + v13) = v24;
    swift_bridgeObjectRelease(v20);
    sub_10005B748((uint64_t)v6, type metadata accessor for SidebarMenu.Item);
  }
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011AE140);
  return v17;
}

uint64_t sub_100355CA8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SidebarMenu.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = sub_100007E8C((uint64_t *)&unk_1011AE140);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - v18;
  v20 = (uint64_t *)(v2 + *(int *)(type metadata accessor for SplitViewController.NavigationStacks(0) + 24));
  v21 = *v20;
  v31 = a2;
  v33 = a2;
  swift_bridgeObjectRetain();
  sub_1005D2270((uint64_t (*)(char *))sub_100360E34, v21, (uint64_t)v19);
  swift_bridgeObjectRelease(v21);
  sub_10004A160((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_1011AE140);
  v22 = sub_100007E8C((uint64_t *)&unk_1011BCCE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011AE140);
    v23 = 1;
  }
  else
  {

    sub_10005B6C0((uint64_t)v16, (uint64_t)v6, type metadata accessor for SidebarMenu.Item);
    v23 = 0;
  }
  v24 = v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v23, 1, v7);
  sub_1001FFA40(v24, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_10005B748((uint64_t)v10, type metadata accessor for SidebarMenu.Item);
    sub_10005B6C0((uint64_t)v6, (uint64_t)v13, type metadata accessor for SidebarMenu.Item);
    v25 = v32;
    if (v32)
      goto LABEL_6;
LABEL_8:
    v29 = (void *)sub_1003AEC00((uint64_t)v13);
    sub_10005B748((uint64_t)v13, type metadata accessor for SidebarMenu.Item);

    return sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011AE140);
  }
  sub_10005B6C0((uint64_t)v10, (uint64_t)v13, type metadata accessor for SidebarMenu.Item);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011CEE40);
  v25 = v32;
  if (!v32)
    goto LABEL_8;
LABEL_6:
  v26 = v25;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v20);
  v34 = *v20;
  *v20 = 0x8000000000000000;
  sub_1005ED14C((uint64_t)v26, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  v28 = *v20;
  *v20 = v34;
  swift_bridgeObjectRelease(v28);
  sub_10005B748((uint64_t)v13, type metadata accessor for SidebarMenu.Item);
  return sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011AE140);
}

uint64_t sub_100355FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char v24;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v27 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v26 - v8;
  v10 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011AE150);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1001FFA40(a1, (uint64_t)v16);
  sub_1001FFA40(a2, v17);
  if (swift_getEnumCaseMultiPayload(v16, v10) != 3)
    goto LABEL_5;
  sub_1001FFA40((uint64_t)v16, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload(v17, v10) != 3)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v4);
LABEL_5:
    sub_100300E0C(a1, a2);
    v22 = v24;
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011AE150);
    return v22 & 1;
  }
  v18 = v27;
  v19 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v19(v9, v12, v4);
  v19(v7, (char *)v17, v4);
  v20 = sub_100048748((unint64_t *)&unk_1011C9A50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  v21 = sub_100048748(&qword_1011AE160, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  v22 = static MusicItem<>.==~ infix(_:_:)(v9, v7, v4, v20, v21);
  v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v23(v7, v4);
  v23(v9, v4);
  sub_10005B748((uint64_t)v16, type metadata accessor for SidebarMenu.Item);
  return v22 & 1;
}

void sub_100356210(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  char *v39;
  uint8_t *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  char **v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  void *v80;
  void *v81;
  __n128 v82;
  unsigned __int8 *v83;
  int EnumCaseMultiPayload;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  __n128 v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  void *v117;
  id v118;
  char v119;
  void (*v120)(__n128);
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned __int8 *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152[3];
  char v153[32];

  v5 = type metadata accessor for UITraitOverrides(0);
  v6 = *(_QWORD *)(v5 - 8);
  v140 = v5;
  v141 = v6;
  __chkstk_darwin(v5);
  v143 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011ACE00);
  __chkstk_darwin(v8);
  v144 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SidebarMenu.Item(0);
  v149 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v147 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v139 = (uint64_t)&v133 - v13;
  __chkstk_darwin(v14);
  v142 = (unsigned __int8 *)&v133 - v15;
  __chkstk_darwin(v16);
  v145 = (uint64_t)&v133 - v17;
  __chkstk_darwin(v18);
  v146 = (uint64_t)&v133 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v133 - v21;
  __chkstk_darwin(v23);
  v150 = (uint64_t)&v133 - v24;
  v25 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v25);
  v27 = (char *)&v133 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v133 - v29;
  v148 = v2;
  v31 = (uint64_t)&v2[OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks], v153, 0, 0);
  sub_10004A160(v31, (uint64_t)v30, (uint64_t *)&unk_1011CEE40);
  sub_100360A64();
  v32 = static ApproximatelyEquatable.!=~ infix(_:_:)(a1, v30, v25);
  sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011CEE40);
  if ((v32 & 1) == 0 && (a2 & 1) == 0)
    return;
  sub_10004A160(a1, (uint64_t)v30, (uint64_t *)&unk_1011CEE40);
  swift_beginAccess(v31, v152, 33, 0);
  sub_100355848((uint64_t)v30);
  swift_endAccess(v152);
  sub_10004A160(a1, (uint64_t)v27, (uint64_t *)&unk_1011CEE40);
  v33 = v149;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v27, 1, v10) != 1)
  {
    sub_10005B6C0((uint64_t)v27, v150, type metadata accessor for SidebarMenu.Item);
    if (qword_10119BE58 != -1)
      swift_once(&qword_10119BE58, sub_1002FBDF8);
    v135 = type metadata accessor for Logger(0);
    v45 = sub_100048B14(v135, (uint64_t)qword_10124CD60);
    v46 = sub_1001FFA40(v150, (uint64_t)v22);
    v137 = v45;
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.default.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v138 = v10;
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      v152[0] = v50;
      *(_DWORD *)v49 = 136446210;
      v51 = v146;
      sub_1001FFA40((uint64_t)v22, v146);
      v52 = String.init<A>(describing:)(v51, v138);
      v54 = v53;
      v151 = sub_100322200(v52, v53, v152);
      v33 = v149;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152);
      v55 = v54;
      v10 = v138;
      swift_bridgeObjectRelease(v55);
      sub_10005B748((uint64_t)v22, type metadata accessor for SidebarMenu.Item);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Navigating to %{public}s…", v49, 0xCu);
      swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);
    }
    else
    {
      sub_10005B748((uint64_t)v22, type metadata accessor for SidebarMenu.Item);
    }

    v57 = (uint64_t)v147;
    v56 = v148;
    swift_beginAccess(v31, v152, 33, 0);
    v58 = sub_100355A80(v150);
    swift_endAccess(v152);
    v59 = &selRef_referralObject;
    v60 = objc_msgSend(v58, "viewControllers");
    v61 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

    if ((unint64_t)v62 >> 62)
    {
      if (v62 < 0)
        v106 = v62;
      else
        v106 = v62 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v63 = _CocoaArrayWrapper.endIndex.getter(v106);
      swift_bridgeObjectRelease(v62);
    }
    else
    {
      v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v62);
    if (v63)
      goto LABEL_55;
    v134 = v61;
    v136 = v58;
    v64 = v145;
    v65 = sub_1001FFA40(v150, v145);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.default.getter(v66);
    v68 = os_log_type_enabled(v66, v67);
    v138 = v10;
    if (v68)
    {
      v69 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = swift_slowAlloc(32, -1);
      v152[0] = v70;
      *(_DWORD *)v69 = 136446210;
      v71 = v146;
      sub_1001FFA40(v64, v146);
      v57 = (uint64_t)v147;
      v72 = String.init<A>(describing:)(v71, v10);
      v74 = v73;
      v151 = sub_100322200(v72, v73, v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152);
      v75 = v74;
      v33 = v149;
      swift_bridgeObjectRelease(v75);
      v59 = &selRef_referralObject;
      sub_10005B748(v64, type metadata accessor for SidebarMenu.Item);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "First time navigating to %{public}s, creating new navigation controller…", v69, 0xCu);
      swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
      v76 = v70;
      v56 = v148;
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v69, -1, -1);
    }
    else
    {
      sub_10005B748(v64, type metadata accessor for SidebarMenu.Item);
    }

    v77 = v143;
    v78 = (uint64_t)v144;
    v79 = objc_msgSend(v56, "traitCollection");
    sub_1008B918C((uint64_t)v79);
    v81 = v80;

    if (!v81)
    {
      v93 = v139;
      v94 = sub_1001FFA40(v150, v139);
      v95 = Logger.logObject.getter(v94);
      v97 = static os_log_type_t.fault.getter(v96);
      if (os_log_type_enabled(v95, v97))
      {
        v98 = (uint8_t *)swift_slowAlloc(12, -1);
        v99 = swift_slowAlloc(32, -1);
        v152[0] = v99;
        *(_DWORD *)v98 = 136446210;
        v100 = v146;
        sub_1001FFA40(v93, v146);
        v101 = String.init<A>(describing:)(v100, v138);
        v103 = v102;
        v151 = sub_100322200(v101, v102, v152);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152);
        swift_bridgeObjectRelease(v103);
        sub_10005B748(v93, type metadata accessor for SidebarMenu.Item);
        _os_log_impl((void *)&_mh_execute_header, v95, v97, "Unable to create a view controller for sidebar item=%{public}s", v98, 0xCu);
        swift_arrayDestroy(v99, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v99, -1, -1);
        swift_slowDealloc(v98, -1, -1);
      }
      else
      {
        sub_10005B748(v93, type metadata accessor for SidebarMenu.Item);
      }

      v104 = v136;
      v105 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
      objc_msgSend(v104, "pushViewController:animated:", v105, 0);

LABEL_62:
      sub_10005B748(v150, type metadata accessor for SidebarMenu.Item);
      return;
    }
    UIViewController.traitOverrides.getter(v82);
    v83 = v142;
    sub_1001FFA40(v150, (uint64_t)v142);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v83, v138);
    v85 = v140;
    v86 = v141;
    if (((1 << EnumCaseMultiPayload) & 0x33) == 0)
    {
      if (EnumCaseMultiPayload == 2)
      {
        sub_1006A03C0(*v142, v78);
        v86 = v141;
LABEL_23:
        (*(void (**)(char *, uint64_t))(v86 + 8))(v77, v85);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v78, 0, 1, v85);
        v87 = objc_msgSend(v136, v59[487]);
        v88 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v87, v134);

        if ((unint64_t)v88 >> 62)
        {
          if (v88 < 0)
            v107 = v88;
          else
            v107 = v88 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v89 = _CocoaArrayWrapper.endIndex.getter(v107);
          swift_bridgeObjectRelease(v88);
          if (v89)
          {
LABEL_25:
            v90 = v89 - 1;
            if (__OFSUB__(v89, 1))
            {
              __break(1u);
            }
            else if ((v88 & 0xC000000000000001) == 0)
            {
              if ((v90 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v90 < *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v91 = *(id *)(v88 + 8 * v90 + 32);
LABEL_30:
                v92 = v91;
                swift_bridgeObjectRelease(v88);
                goto LABEL_47;
              }
              __break(1u);
              goto LABEL_68;
            }
            v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v90, v88);
            goto LABEL_30;
          }
        }
        else
        {
          v89 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v89)
            goto LABEL_25;
        }
        swift_bridgeObjectRelease(v88);
        v92 = 0;
LABEL_47:
        v108 = sub_100718980(v92, v81);

        if ((v108 & 1) != 0)
        {
LABEL_54:

          sub_10004FF60(v78, &qword_1011ACE00);
          v10 = v138;
          v58 = v136;
LABEL_55:
          v116 = *(_QWORD *)&v56[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController];
          v117 = *(void **)(v116
                          + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController);
          *(_QWORD *)(v116
                    + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController) = v58;
          v118 = v58;
          sub_1003587E4(v117);

          v119 = v56[OBJC_IVAR____TtC5Music19SplitViewController_ppt_isContentReady];
          v56[OBJC_IVAR____TtC5Music19SplitViewController_ppt_isContentReady] = 1;
          if ((v119 & 1) == 0)
          {
            v120 = *(void (**)(__n128))&v56[OBJC_IVAR____TtC5Music19SplitViewController_ppt_onContentIsReady];
            if (v120)
            {
              v121 = *(_QWORD *)&v56[OBJC_IVAR____TtC5Music19SplitViewController_ppt_onContentIsReady + 8];
              v122 = swift_retain();
              v120(v122);
              sub_10004BA30((uint64_t)v120, v121);
            }
          }
          v123 = v150;
          sub_1001FFA40(v150, (uint64_t)v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v10);
          sub_1008C67F4((uint64_t)v30, 0);
          sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011CEE40);
          v124 = sub_1001FFA40(v123, v57);
          v125 = Logger.logObject.getter(v124);
          v126 = static os_log_type_t.default.getter(v125);
          if (os_log_type_enabled(v125, v126))
          {
            v127 = (uint8_t *)swift_slowAlloc(12, -1);
            v128 = swift_slowAlloc(32, -1);
            v152[0] = v128;
            *(_DWORD *)v127 = 136446210;
            v129 = v146;
            sub_1001FFA40(v57, v146);
            v130 = String.init<A>(describing:)(v129, v10);
            v132 = v131;
            v151 = sub_100322200(v130, v131, v152);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152);
            swift_bridgeObjectRelease(v132);
            sub_10005B748(v57, type metadata accessor for SidebarMenu.Item);
            _os_log_impl((void *)&_mh_execute_header, v125, v126, "Navigated to %{public}s", v127, 0xCu);
            swift_arrayDestroy(v128, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v128, -1, -1);
            swift_slowDealloc(v127, -1, -1);

          }
          else
          {

            sub_10005B748(v57, type metadata accessor for SidebarMenu.Item);
          }

          goto LABEL_62;
        }
        v109 = type metadata accessor for TraitNavigationController();
        v110 = v136;
        if (swift_dynamicCastClass(v136, v109))
        {
          v111 = v110;
          sub_1008EB784(v81, v78, 0);

          v81 = v111;
          goto LABEL_54;
        }
        if (qword_10119CA08 == -1)
        {
LABEL_51:
          v112 = sub_100048B14(v135, (uint64_t)qword_10124DBA8);
          v113 = Logger.logObject.getter(v112);
          v114 = static os_log_type_t.default.getter(v113);
          if (os_log_type_enabled(v113, v114))
          {
            v115 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v115 = 0;
            _os_log_impl((void *)&_mh_execute_header, v113, v114, "Pushing viewController with traitOverrides to a non TraitNavigationController, traitOverrides will be ignored.", v115, 2u);
            swift_slowDealloc(v115, -1, -1);
          }

          objc_msgSend(v136, "pushViewController:animated:", v81, 0);
          goto LABEL_54;
        }
LABEL_68:
        swift_once(&qword_10119CA08, sub_1008ECB78);
        goto LABEL_51;
      }
      sub_10005B748((uint64_t)v142, type metadata accessor for SidebarMenu.Item);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v86 + 16))(v78, v77, v85);
    goto LABEL_23;
  }
  sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011CEE40);
  if (qword_10119BE58 != -1)
    swift_once(&qword_10119BE58, sub_1002FBDF8);
  v34 = type metadata accessor for Logger(0);
  v35 = sub_100048B14(v34, (uint64_t)qword_10124CD60);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.error.getter(v36);
  v38 = os_log_type_enabled(v36, v37);
  v39 = v148;
  if (v38)
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Nothing to navigate to…", v40, 2u);
    swift_slowDealloc(v40, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v30, 1, 1, v10);
  sub_1008C67F4((uint64_t)v30, 0);
  sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011CEE40);
  v41 = *(_QWORD *)&v39[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController];
  v42 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NavigationController()), "init");
  v43 = *(void **)(v41
                 + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController);
  *(_QWORD *)(v41
            + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController) = v42;
  v44 = v42;
  sub_1003587E4(v43);

}

void sub_1003570D4(unint64_t *a1, id a2)
{
  unint64_t v3;
  id v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  NSArray v16;
  id v17;
  char *v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_super v25;
  uint64_t v26;

  v3 = *a1;
  v4 = objc_msgSend(a2, "viewControllerForColumn:", *a1);
  if (v4)
  {
    v5 = v4;
    v6 = a2;
    v7 = sub_10035F694(v3, v6);
    v8 = (void *)objc_opt_self(UITraitCollection);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EA7A90;
    v11 = (objc_class *)_s29SplitViewColumnContextWrapperCMa();
    v12 = (char *)objc_allocWithZone(v11);
    if (v7 == 5)
    {
      swift_deallocPartialClassInstance(v12, v11, 17, 7);
      v13 = String._bridgeToObjectiveC()();
      v14 = objc_msgSend(v8, "_traitCollectionWithValue:forTraitNamed:", 0, v13);

      if (v14)
      {
        *(_QWORD *)(v10 + 32) = v14;
        v26 = v10;
        specialized Array._endMutation()(v15);
        sub_10004A07C(0, &qword_1011A22E8, UITraitCollection_ptr);
        v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
        v17 = objc_msgSend(v8, "traitCollectionWithTraitsFromCollections:", v16.super.isa, swift_bridgeObjectRelease(v10).n128_f64[0]);
LABEL_7:
        v24 = v17;

        objc_msgSend(v6, "setOverrideTraitCollection:forChildViewController:", v24, v5);
        return;
      }
      __break(1u);
    }
    else
    {
      v18 = &v12[OBJC_IVAR___MusicSplitViewContext_context];
      *(_QWORD *)v18 = v3;
      v18[8] = v7;
      v25.receiver = v12;
      v25.super_class = v11;
      v19 = objc_msgSendSuper2(&v25, "init");
      v20 = String._bridgeToObjectiveC()();
      v21 = objc_msgSend(v8, "_traitCollectionWithValue:forTraitNamed:", v19, v20);

      if (v21)
      {
        *(_QWORD *)(v10 + 32) = v21;
        v26 = v10;
        specialized Array._endMutation()(v22);
        v23 = v26;
        sub_10004A07C(0, &qword_1011A22E8, UITraitCollection_ptr);
        v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
        v17 = objc_msgSend(v8, "traitCollectionWithTraitsFromCollections:", v16.super.isa, swift_bridgeObjectRelease(v23).n128_f64[0]);
        goto LABEL_7;
      }
    }
    __break(1u);
  }
}

void sub_10035737C(double *a1)
{
  char *v1;
  char *v2;
  char *v4;
  double *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  char *v13;
  double *v14;
  double v15;
  double v16;
  _BYTE v17[40];
  char v18[16];
  double v19;
  char v20;

  v2 = v1;
  KeyboardAvoidance.additionalSafeAreaInsets(for:)(v2, (uint64_t)v17);
  sub_100065228((uint64_t)v17, (uint64_t)v18, (uint64_t *)&unk_1011AE220);
  if ((v20 & 1) != 0)
  {
    v4 = *(char **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController];
    v5 = (double *)&v4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
    v5[2] = 0.0;
    v6 = *v5;
    v7 = v5[1];
    v8 = v5[3];
    if (qword_10119BF00 != -1)
      swift_once(&qword_10119BF00, sub_100352550);
    v9 = *(double *)&qword_1011ADCC0;
    if (qword_10119BF08 != -1)
      swift_once(&qword_10119BF08, sub_100352570);
    v10 = *(double *)&qword_1011ADCC8;
    v11 = v9 + *(double *)&qword_1011ADCC8;
    if (!*(_QWORD *)&v4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController])
      v11 = 0.0;
    if (v11 < 0.0)
      v12 = 0.0;
    else
      v12 = v11;
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "setAdditionalSafeAreaInsets:", v6, v7, v12, v8);
    v13 = *(char **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController];
    v14 = (double *)&v13[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
    *(_QWORD *)&v13[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets
                  + 16] = 0;
    v15 = v10 + *(double *)&qword_1011ADCC0;
    if (!*(_QWORD *)&v13[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController])
      v15 = 0.0;
    if (v15 < 0.0)
      v15 = 0.0;
    objc_msgSend(*(id *)&v13[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "setAdditionalSafeAreaInsets:", *v14, v14[1], v15, v14[3]);
    objc_msgSend(v4, "additionalSafeAreaInsets");
    objc_msgSend(v4, "setAdditionalSafeAreaInsets:");
    objc_msgSend(v13, "additionalSafeAreaInsets");
    objc_msgSend(v13, "setAdditionalSafeAreaInsets:");
  }
  else
  {
    v16 = v19;
    sub_10035FC64(*(char **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_sidebarViewController], v2, a1, v19);
    sub_10035FC64(*(char **)&v2[OBJC_IVAR____TtC5Music19SplitViewController_contentViewController], v2, a1, v16);
  }
}

id sub_1003575D0()
{
  return sub_10015C40C(type metadata accessor for SplitViewController);
}

void sub_100357700(void *a1, void *a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  char *v6;
  id v7;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController) = a1;
  v5 = a1;

  sub_100354980();
  v6 = *(char **)(v2 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction) = a2;
  v7 = a2;
  sub_1003551C4(v6);

}

void sub_100357780(void *a1, void *a2)
{
  uint64_t v2;
  id v5;
  char *v6;
  id v7;

  v5 = a1;
  sub_10036018C(a1);

  v6 = *(char **)(v2 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction) = a2;
  v7 = a2;
  sub_1003551C4(v6);

}

void sub_1003577F0()
{
  uint64_t v0;
  void *v1;
  char *v2;
  char *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController) = 0;

  sub_100354980();
  v2 = *(char **)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction);
  v3 = v2;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction) = 0;
  sub_1003551C4(v2);

}

void *sub_10035783C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController);
  v2 = v1;
  return v1;
}

id sub_100357874()
{
  void *v0;
  id v1;
  id v2;
  id result;
  void *v4;
  uint64_t ObjectType;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (id)1)
    return 0;
  result = objc_msgSend(v0, "viewControllerForColumn:", 3);
  if (result)
  {
    v4 = result;
    ObjectType = swift_getObjectType(result);
    result = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PalettePresentationTransitioning) ? v4 : 0;
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

_QWORD *sub_10035791C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (id)1)
    return _swiftEmptyArrayStorage;
  v3 = objc_msgSend(v0, "viewControllerForColumn:", 3);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v4 = v3;
  ObjectType = swift_getObjectType(v3);
  v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PalettePresentationTransitioning);
  if (v6)
    v7 = v6;
  else
    v7 = 0;
  if (v6)
    v8 = v4;
  else
    v8 = 0;
  if (v8)
  {
    v9 = swift_getObjectType(v8);
    v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 8))(v9);
  }
  else
  {
    v10 = _swiftEmptyArrayStorage;
  }

  return v10;
}

uint64_t sub_1003579F0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = objc_msgSend(v3, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");

  if (v7 != (id)1)
    return 0;
  v8 = objc_msgSend(v3, "viewControllerForColumn:", 3);
  if (!v8)
    return 0;
  v9 = v8;
  ObjectType = swift_getObjectType(v8);
  v11 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PalettePresentationTransitioning);
  if (v11)
    v12 = v11;
  else
    v12 = 0;
  if (v11)
    v13 = v9;
  else
    v13 = 0;
  if (v13)
  {
    v14 = swift_getObjectType(v13);
    v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 + 8) + 16))(a1, a2 & 1, v14);
  }
  else
  {
    v15 = 0;
  }

  return v15;
}

id MPModelObject.innermostModelObject.getter()
{
  void *v0;

  return v0;
}

_QWORD *sub_100357AF0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  v2 = sub_100357874();
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = v2;
  v5 = v3;
  ObjectType = swift_getObjectType();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, ObjectType, v5);

  return (_QWORD *)v7;
}

void sub_100357B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;

  v6 = sub_100357874();
  if (v6)
  {
    v8 = v7;
    v10 = v6;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3, ObjectType, v8);

  }
}

uint64_t sub_100357BE4(uint64_t a1, char a2)
{
  return sub_1003579F0(a1, a2 & 1);
}

void sub_100357BEC(void *a1)
{
  Swift::Int v2;
  id v3;

  v2 = sub_100048C10((uint64_t)&off_1010ABCC0);
  v3 = a1;
  sub_10035F88C(v2, v3);
  swift_bridgeObjectRelease(v2);

}

void sub_100357C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[10];

  v14[9] = a3;
  v14[3] = a2;
  v4 = type metadata accessor for SidebarMenu.Item(0);
  v14[4] = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v14[2] = (char *)v14 - v9;
  __chkstk_darwin(v10);
  v14[1] = (char *)v14 - v11;
  v12 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  __asm { BR              X10 }
}

uint64_t sub_100357E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;

  v7 = *(_QWORD *)(v6 - 120) + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks;
  swift_beginAccess(v7, v6 - 104, 0, 0);
  v8 = *(_QWORD *)(v7 + *(int *)(type metadata accessor for SplitViewController.NavigationStacks(0) + 20));
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    *(_QWORD *)(v6 - 120) = v1;
    v10 = *(_QWORD *)(v6 - 112);
    v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    *(_QWORD *)(v6 - 144) = v8;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001FFA40(v11, v5);
      sub_1001FFA40(v5, v4);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v0);
      if (EnumCaseMultiPayload == 2)
        break;
      if (EnumCaseMultiPayload == 3)
      {
        sub_10005B748(v4, type metadata accessor for SidebarMenu.Item);
        break;
      }
      sub_10005B748(v4, type metadata accessor for SidebarMenu.Item);
      sub_10005B748(v5, type metadata accessor for SidebarMenu.Item);
      v11 += v12;
      if (!--v9)
      {
        v14 = 1;
        goto LABEL_10;
      }
    }
    sub_10005B6C0(v5, v2, type metadata accessor for SidebarMenu.Item);
    v14 = 0;
LABEL_10:
    v16 = *(_BYTE **)(v6 - 128);
    v15 = *(_QWORD *)(v6 - 144);
    v17 = *(_QWORD *)(v6 - 136);
  }
  else
  {
    v15 = v8;
    swift_bridgeObjectRetain();
    v14 = 1;
    v17 = *(_QWORD *)(v6 - 136);
    v16 = *(_BYTE **)(v6 - 128);
  }
  v18 = *(_QWORD *)(v6 - 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v2, v14, 1, v0);
  swift_bridgeObjectRelease(v15);
  sub_10004A160(v2, v3, (uint64_t *)&unk_1011CEE40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v3, 1, v0) == 1)
  {
    *v16 = 1;
    swift_storeEnumTagMultiPayload(v16, v0, 0);
    sub_10004FF60(v3, (uint64_t *)&unk_1011CEE40);
  }
  else
  {
    sub_10005B6C0(v3, (uint64_t)v16, type metadata accessor for SidebarMenu.Item);
  }
  sub_100194530(v17, (uint64_t)v16);
  sub_10005B748(v17, type metadata accessor for SidebarMenu.Item);
  return sub_10004FF60(v2, (uint64_t *)&unk_1011CEE40);
}

void sub_100358058(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v6 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29[-1] - v10;
  v12 = type metadata accessor for NavigationController();
  v13 = (void *)swift_dynamicCastClass(a2, v12);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks, v29, 33, 0);
  sub_100355CA8(v13, a3);
  swift_endAccess(v29);
  if (qword_10119BE58 != -1)
    swift_once(&qword_10119BE58, sub_1002FBDF8);
  v14 = type metadata accessor for Logger(0);
  sub_100048B14(v14, (uint64_t)qword_10124CD60);
  sub_1001FFA40(a3, (uint64_t)v11);
  v15 = a2;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v29[0] = v19;
    *(_DWORD *)v18 = 136446466;
    sub_1001FFA40((uint64_t)v11, (uint64_t)v8);
    v20 = String.init<A>(describing:)(v8, v6);
    v22 = v21;
    v28 = sub_100322200(v20, v21, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
    swift_bridgeObjectRelease(v22);
    sub_10005B748((uint64_t)v11, type metadata accessor for SidebarMenu.Item);
    *(_WORD *)(v18 + 12) = 2082;
    v23 = v15;
    v24 = objc_msgSend(v23, "description");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28 = sub_100322200(v25, v27, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);

    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Restored navigation node %{public}s with viewController %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {
    sub_10005B748((uint64_t)v11, type metadata accessor for SidebarMenu.Item);

  }
}

uint64_t sub_100358344(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v25[2];

  v2 = type metadata accessor for Playlist.Folder.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = type metadata accessor for LibraryPlaylistsViewController(0);
  if (swift_dynamicCastClass(v9, v10))
  {
    v11 = v9;
    sub_100339D68((uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
    {
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011AD730);
      Playlist.Folder.Item.id.getter(v12);
      v14 = v13;
      v15 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011AD730);
      v17 = Playlist.Folder.Item.id.getter(v16);
      v19 = v18;
      v20.n128_f64[0] = (*(double (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v21 = Playlist.Folder.Item.id.getter(v20);
      v14 = v22;
      if (v19)
      {
        if (v17 == v21 && v19 == v22)
          v15 = 1;
        else
          v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v22, 0);
        swift_bridgeObjectRelease(v19);
      }
      else
      {
        v15 = 0;
      }
    }
    swift_bridgeObjectRelease(v14);

  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

id sub_10035851C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;

  return objc_msgSend(*(id *)(*(_QWORD *)(*v3 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController), "navigateTo:from:animated:", a1, a2, a3 & 1);
}

id sub_100358564(uint64_t a1, char a2)
{
  _QWORD *v2;

  return objc_msgSend(*(id *)(*(_QWORD *)(*v2 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController), "drop:animated:", a1, a2 & 1);
}

void *sub_1003585AC(char a1, void *a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  char *v10;
  id v11;
  uint64_t ObjCClassFromMetadata;
  char *v13;
  id v14;
  void *v15;
  id v16;
  char *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Class isa;
  char *v27;
  uint64_t v29;
  objc_super v30;

  v6 = &v3[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController];
  *v6 = 0;
  v6[1] = 0;
  v7 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController;
  *(_QWORD *)&v3[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController] = 0;
  v8 = &v3[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
  v9 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v8 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v8[1] = v9;
  v10 = &v3[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewMaxWidth];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController____lazy_storage___accessoryContainerView] = 0;
  v3[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_style] = a1 & 1;
  type metadata accessor for NavigationBar();
  v11 = objc_allocWithZone((Class)type metadata accessor for NavigationController());
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = v3;
  v14 = objc_msgSend(v11, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, 0);
  *(_QWORD *)&v13[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController] = v14;
  v15 = *(void **)&v3[v7];
  *(_QWORD *)&v3[v7] = a3;
  v16 = a3;

  v30.receiver = v13;
  v30.super_class = (Class)type metadata accessor for SplitViewController.PaletteViewController();
  v17 = (char *)objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
  v18 = v17;
  if (a2)
  {
    v19 = *(void **)&v17[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController];
    v20 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v21 = swift_allocObject(v20, 40, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v21 + 32) = a2;
    v29 = v21;
    specialized Array._endMutation()(v21);
    sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v22 = a2;
    v23 = v18;
    v24 = v22;
    v25 = v19;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "setViewControllers:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  }
  else
  {
    v27 = v17;
  }
  sub_100358A30();

  return v18;
}

void sub_1003587E4(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;

  v2 = v1;
  v4 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController;
  v5 = *(void **)&v1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController];
  sub_10004A07C(0, (unint64_t *)&unk_1011AE1D0, UINavigationController_ptr);
  v6 = v5;
  v7 = static NSObject.== infix(_:_:)(v6, a1);

  if ((v7 & 1) == 0)
  {
    v8 = objc_msgSend(a1, "parentViewController");
    if (v8)
    {
      v9 = v8;
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v10 = v2;
      v11 = v9;
      LOBYTE(v9) = static NSObject.== infix(_:_:)(v11, v10);

      if ((v9 & 1) != 0)
      {
        objc_msgSend(a1, "willMoveToParentViewController:", 0);
        if (objc_msgSend(v10, "isViewLoaded"))
        {
          v12 = objc_msgSend(a1, "view");
          if (!v12)
          {
            __break(1u);
            return;
          }
          v13 = v12;
          objc_msgSend(v12, "removeFromSuperview");

        }
        objc_msgSend(a1, "removeFromParentViewController");
      }
    }
    sub_100358A30();
    sub_10035A1B0();
    v14 = *(double *)&v2[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
    v15 = *(double *)&v2[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets
                       + 8];
    v17 = *(double *)&v2[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets
                       + 16];
    v16 = *(double *)&v2[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets
                       + 24];
    if (qword_10119BF00 != -1)
      swift_once(&qword_10119BF00, sub_100352550);
    v18 = *(double *)&qword_1011ADCC0;
    if (qword_10119BF08 != -1)
      swift_once(&qword_10119BF08, sub_100352570);
    v19 = v18 + *(double *)&qword_1011ADCC8;
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController])
      v19 = 0.0;
    if (v17 > v19)
      v20 = v17;
    else
      v20 = v19;
    objc_msgSend(*(id *)&v2[v4], "setAdditionalSafeAreaInsets:", v14, v15, v20, v16);
  }
}

char *sub_100358A30()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  char *v5;
  id v6;
  char *result;
  char *v8;
  char *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (**v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController;
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "parentViewController");
  if (v3)
  {
    v4 = v3;
    sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v5 = v1;
    v6 = v4;
    LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

    if ((v4 & 1) != 0)
      goto LABEL_10;
  }
  objc_msgSend(v1, "addChildViewController:", *(_QWORD *)&v1[v2]);
  if (!objc_msgSend(v1, "isViewLoaded"))
    goto LABEL_9;
  result = (char *)objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = result;
  result = (char *)objc_msgSend(*(id *)&v1[v2], "view");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = result;
  objc_msgSend(v8, "insertSubview:atIndex:", result, 0);

  v10 = objc_msgSend(v1, "traitCollection");
  v11 = objc_msgSend(v10, "userInterfaceIdiom");

  if (v11 != (id)6)
  {
    result = (char *)objc_msgSend(*(id *)&v1[v2], "view");
    if (result)
    {
      v12 = result;
      v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
      objc_msgSend(v12, "setBackgroundColor:", v13);

      goto LABEL_9;
    }
LABEL_15:
    __break(1u);
    return result;
  }
LABEL_9:
  objc_msgSend(*(id *)&v1[v2], "didMoveToParentViewController:", v1);
LABEL_10:
  v14 = *(_QWORD *)&v1[v2];
  v15 = type metadata accessor for NavigationController();
  result = (char *)swift_dynamicCastClass(v14, v15);
  if (result)
  {
    v16 = result;
    v17 = swift_allocObject(&unk_1010C1180, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v1);
    v18 = (void (**)(uint64_t))&v16[OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController];
    v19 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController];
    v20 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Music20NavigationController_onWillShowViewController + 8];
    *v18 = sub_100360A54;
    v18[1] = (void (*)(uint64_t))v17;
    return (char *)sub_10004BA30(v19, v20);
  }
  return result;
}

