void sub_100358C80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(void);
  uint64_t v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(void))(Strong
                          + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong
                     + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController
                     + 8);
      v7 = *(void **)(Strong
                    + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController);
      sub_100048AAC(*(_QWORD *)(Strong+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController), v6);
      v8 = v7;
      v5();
      sub_10004BA30((uint64_t)v5, v6);

    }
  }
}

void sub_100358D34()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  char *v14;
  char *v15;
  double v16;
  char v17;
  char *v18;
  double v19;
  int v20;
  char v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  objc_super v27;

  v1 = v0;
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for SplitViewController.PaletteViewController();
  objc_msgSendSuper2(&v27, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_19;
  }
  v3 = v2;
  objc_msgSend(v2, "setInsetsLayoutMarginsFromSafeArea:", 0);

  v4 = objc_msgSend(v1, "view");
  if (!v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v5 = v4;
  v6 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController;
  v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "view");
  if (!v7)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v8 = v7;
  objc_msgSend(v5, "addSubview:", v7);

  v9 = objc_msgSend(v1, "traitCollection");
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  if (v10 == (id)6)
    goto LABEL_7;
  v11 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v11)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

LABEL_7:
  v14 = sub_1003593E8();
  v15 = v14;
  v16 = *(double *)&v1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewMaxWidth];
  v17 = v1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewMaxWidth
         + 8];
  v18 = &v14[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
  v19 = *(double *)&v14[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth];
  v20 = v14[OBJC_IVAR____TtC5Music20PaletteContainerView_contentViewMaxWidth + 8];
  *(double *)v18 = v16;
  v18[8] = v17;
  if ((v17 & 1) == 0)
  {
    if (v19 == v16)
      v21 = v20;
    else
      v21 = 1;
    if ((v21 & 1) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  if (!v20)
LABEL_14:
    objc_msgSend(v14, "setNeedsLayout", v19);
LABEL_15:

  v22 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController;
  v23 = *(void **)&v1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController];
  if (v23)
  {
    sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v24 = v23;
    static NSObject.== infix(_:_:)(v24, v24);
    objc_msgSend(v1, "loadViewIfNeeded");
    v25 = *(void **)&v1[v22];
    *(_QWORD *)&v1[v22] = v23;
    v26 = v24;

    sub_100359AC8(0, v23, v23, v1);
    sub_100359AC8(1, v23, v23, v1);
    sub_100359AC8(2, v23, v23, v1);

  }
}

void sub_10035900C()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for SplitViewController.PaletteViewController();
  objc_msgSendSuper2(&v13, "viewDidLayoutSubviews");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "bounds");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100359124()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for SplitViewController.PaletteViewController();
  objc_msgSendSuper2(&v12, "viewSafeAreaInsetsDidChange");
  v1 = sub_1003593E8();
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    sub_100359580(*(_QWORD *)&v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController] != 0, v5, v7, v9, v11);
    objc_msgSend(v1, "setFrame:");

    sub_10035A1B0();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1003592C0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v1 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController), "viewControllers");
  v2 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  if (v3 < 0)
    v9 = v3;
  else
    v9 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 8 * result + 32);
LABEL_8:
    v7 = v6;
    v8 = objc_msgSend(v6, "preferredStatusBarStyle", swift_bridgeObjectRelease(v3).n128_f64[0]);

    return (unint64_t)v8;
  }
  __break(1u);
  return result;
}

char *sub_1003593E8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  char v5;
  id v6;
  char *v7;
  char *v8;
  char *result;
  char *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  char *v19;
  void *v20;
  id v21;

  v1 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController____lazy_storage___accessoryContainerView;
  v2 = *(void **)&v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController____lazy_storage___accessoryContainerView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController____lazy_storage___accessoryContainerView];
LABEL_6:
    v21 = v2;
    return v3;
  }
  v4 = v0;
  v5 = v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_style];
  v6 = objc_allocWithZone((Class)type metadata accessor for PaletteContainerView());
  v7 = sub_10004C080(v5);
  objc_msgSend(v7, "setHidden:", 1);
  v8 = v7;
  result = (char *)objc_msgSend(v4, "view");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    sub_100359580(0, v12, v14, v16, v18);
    objc_msgSend(v8, "setFrame:");

    objc_msgSend(v8, "setAutoresizingMask:", 10);
    objc_msgSend(v8, "setLayoutMargins:", 0.0, 24.0, 0.0, 24.0);
    result = (char *)objc_msgSend(v4, "view");
    if (result)
    {
      v19 = result;
      objc_msgSend(result, "addSubview:", v8);

      v20 = *(void **)&v4[v1];
      *(_QWORD *)&v4[v1] = v8;
      v3 = v8;

      v2 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100359580(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  char *v5;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  CGFloat MinX;
  double MaxY;
  CGFloat Width;
  double v32;
  double v33;
  CGFloat v34;
  double v35;
  uint64_t v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  if (qword_10119C1A8 != -1)
    swift_once(&qword_10119C1A8, sub_10055C25C);
  v11 = qword_10124D228;
  KeyPath = swift_getKeyPath(&unk_100EB61F8);
  v13 = swift_getKeyPath(&unk_100EB6220);
  static Published.subscript.getter(&v36, v11, KeyPath, v13);
  swift_release();
  swift_release();
  if (v36 == 1
    && (v14 = *(void **)&v5[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController]) != 0
    && (v15 = _s14ViewControllerCMa(0), (v16 = swift_dynamicCastClass(v14, v15)) != 0))
  {
    v17 = (void *)v16;
    v18 = v14;
    v19 = objc_msgSend(v5, "view");
    if (!v19)
    {
      __break(1u);
      return;
    }
    v20 = v19;
    objc_msgSend(v19, "bounds");
    v22 = v21;
    v24 = v23;

    dispatch thunk of UIHostingController.sizeThatFits(in:)(v25, v22, v24);
    objc_msgSend(v17, "setPreferredContentSize:");
    objc_msgSend(v17, "preferredContentSize");
    v27 = v26;

  }
  else
  {
    if (qword_10119BF00 != -1)
      swift_once(&qword_10119BF00, sub_100352550);
    v27 = *(double *)&qword_1011ADCC0;
  }
  if (qword_10119BF08 != -1)
    swift_once(&qword_10119BF08, sub_100352570);
  v28 = v27 + *(double *)&qword_1011ADCC8;
  v37.origin.x = a2;
  v37.origin.y = a3;
  v37.size.width = a4;
  v37.size.height = a5;
  MinX = CGRectGetMinX(v37);
  v38.origin.x = a2;
  v38.origin.y = a3;
  v38.size.width = a4;
  v38.size.height = a5;
  MaxY = CGRectGetMaxY(v38);
  v39.origin.x = a2;
  v39.origin.y = a3;
  v39.size.width = a4;
  v39.size.height = a5;
  Width = CGRectGetWidth(v39);
  if ((a1 & 1) != 0)
    v32 = 0.0;
  else
    v32 = v28;
  v33 = MaxY - v28;
  v34 = MinX;
  v35 = v28;
  CGRectOffset(*(CGRect *)(&Width - 2), 0.0, v32);
}

void sub_1003597DC(void *a1, char a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  void *v28;
  id v29;
  id v30;
  void **aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  void (*v35)();
  _QWORD *v36;

  v4 = v3;
  v8 = OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController;
  v9 = *(void **)&v3[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController];
  v30 = v9;
  if (a1)
  {
    if (!v9)
      goto LABEL_9;
    sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v29 = v30;
    v10 = a1;
    v11 = static NSObject.== infix(_:_:)(v10, v29);

    if ((v11 & 1) == 0 || (a3 & 1) != 0)
      goto LABEL_9;
LABEL_14:
    v28 = v29;
    goto LABEL_15;
  }
  if (v9)
  {
    v12 = v9;
    goto LABEL_9;
  }
  if ((a3 & 1) == 0)
  {
    v29 = 0;
    goto LABEL_14;
  }
LABEL_9:
  objc_msgSend(v4, "loadViewIfNeeded", v29);
  v13 = *(void **)&v4[v8];
  *(_QWORD *)&v4[v8] = a1;
  v14 = a1;

  sub_100359AC8(0, v30, a1, v4);
  if ((a2 & 1) == 0)
  {
    sub_100359AC8(1, v30, a1, v4);
    sub_100359AC8(2, v30, a1, v4);
    v28 = v30;
LABEL_15:

    return;
  }
  v15 = objc_msgSend(v4, "view");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "setNeedsLayout");

    v17 = (void *)objc_opt_self(UIView);
    v18 = (_QWORD *)swift_allocObject(&unk_1010C10E0, 40, 7);
    v18[2] = v30;
    v18[3] = a1;
    v18[4] = v4;
    v35 = sub_1003609F8;
    v36 = v18;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_1001DBD98;
    v34 = &unk_1010C10F8;
    v19 = _Block_copy(&aBlock);
    v20 = v30;
    v21 = v14;
    v22 = v4;
    swift_release();
    v23 = (_QWORD *)swift_allocObject(&unk_1010C1130, 40, 7);
    v23[2] = v30;
    v23[3] = a1;
    v23[4] = v22;
    v35 = sub_100360A3C;
    v36 = v23;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_10012F6FC;
    v34 = &unk_1010C1148;
    v24 = _Block_copy(&aBlock);
    v25 = v20;
    v26 = v21;
    v27 = v22;
    swift_release();
    objc_msgSend(v17, "animateWithDuration:delay:options:animations:completion:", 130, v19, v24, 0.3, 0.0);

    _Block_release(v24);
    _Block_release(v19);
  }
  else
  {

    __break(1u);
  }
}

void sub_100359AC8(char a1, void *a2, void *a3, char *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  char v33;
  void *v34;
  id v35;
  id v36;
  char v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  id v52;
  void *v53;
  char *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  id v63;
  void *v64;
  char *v65;
  id v66;
  void *v67;
  id v68;
  char *v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  char v79;
  char *v80;

  if (!a1)
  {
    if (!a2)
      goto LABEL_30;
    if (a3)
    {
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v31 = a2;
      v32 = a3;
      v33 = static NSObject.== infix(_:_:)(v31, v32);

      if ((v33 & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      v38 = a2;
    }
    objc_msgSend(a2, "willMoveToParentViewController:", 0);
LABEL_29:

LABEL_30:
    v39 = sub_1003593E8();
    objc_msgSend(v39, "setHidden:", 0);

    if (a3)
    {
      v40 = a3;
      objc_msgSend(a4, "addChildViewController:", v40);
      v41 = sub_1003593E8();
      v42 = objc_msgSend(a4, "view");
      if (!v42)
      {
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      v43 = v42;
      objc_msgSend(v42, "bounds");
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v51 = v50;

      sub_100359580(a2 != 0, v45, v47, v49, v51);
      objc_msgSend(v41, "setFrame:");

      v52 = objc_msgSend(v40, "view");
      if (!v52)
      {
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      v53 = v52;
      v54 = sub_1003593E8();
      objc_msgSend(v54, "bounds");
      v56 = v55;
      v58 = v57;
      v60 = v59;
      v62 = v61;

      objc_msgSend(v53, "setFrame:", v56, v58, v60, v62);
      v63 = objc_msgSend(v40, "view");
      if (!v63)
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      v64 = v63;
      objc_msgSend(v63, "setAutoresizingMask:", 18);

      v65 = sub_1003593E8();
      v66 = objc_msgSend(v40, "view");
      v67 = *(void **)&v65[OBJC_IVAR____TtC5Music20PaletteContainerView_contentView];
      *(_QWORD *)&v65[OBJC_IVAR____TtC5Music20PaletteContainerView_contentView] = v66;
      v68 = v66;
      sub_10004C4AC(v67);

      v69 = sub_1003593E8();
      objc_msgSend(v69, "layoutIfNeeded");

      if (a2)
      {
        sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
        v70 = a2;
        if ((static NSObject.== infix(_:_:)(v70, v40) & 1) == 0)
        {
          v71 = objc_msgSend(v40, "view");
          if (!v71)
          {
LABEL_59:
            __break(1u);
            return;
          }
          v72 = v71;
          objc_msgSend(v71, "setAlpha:", 0.0);

          v70 = v72;
        }

      }
    }
    sub_10035A1B0();
    return;
  }
  if (a1 != 1)
  {
    if (!a2)
      goto LABEL_46;
    v34 = *(void **)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController];
    if (v34)
    {
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v35 = a2;
      v36 = v34;
      v37 = static NSObject.== infix(_:_:)(v35, v36);

      if ((v37 & 1) != 0)
      {
LABEL_45:

LABEL_46:
        v76 = *(void **)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController];
        if (a3)
        {
          if (!v76)
            return;
          sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
          v77 = a3;
          v78 = v76;
          v79 = static NSObject.== infix(_:_:)(v77, v78);

          if ((v79 & 1) == 0)
            return;
          objc_msgSend(v77, "didMoveToParentViewController:", a4);
        }
        else if (v76)
        {
          return;
        }
        v80 = sub_1003593E8();
        objc_msgSend(v80, "setHidden:", a3 == 0);

        return;
      }
    }
    else
    {
      v73 = a2;
    }
    v74 = objc_msgSend(a2, "view");
    if (!v74)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v75 = v74;
    objc_msgSend(v74, "removeFromSuperview");

    objc_msgSend(a2, "removeFromParentViewController");
    goto LABEL_45;
  }
  if (a2 && a3)
  {
    v7 = a2;
    v8 = a3;
    v9 = objc_msgSend(v7, "view");
    if (!v9)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v10 = v9;
    objc_msgSend(v9, "setAlpha:", 0.0);

    v11 = objc_msgSend(v8, "view");
    if (!v11)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v12 = v11;
    objc_msgSend(v11, "setAlpha:", 1.0);

  }
  v13 = sub_1003593E8();
  v14 = objc_msgSend(a4, "view");
  if (!v14)
  {
    __break(1u);
    goto LABEL_53;
  }
  v15 = v14;
  objc_msgSend(v14, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  sub_100359580(a3 != 0, v17, v19, v21, v23);
  objc_msgSend(v13, "setFrame:");

  v24 = *(double *)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
  v25 = *(double *)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets
                     + 8];
  v27 = *(double *)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets
                     + 16];
  v26 = *(double *)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets
                     + 24];
  if (qword_10119BF00 != -1)
    swift_once(&qword_10119BF00, sub_100352550);
  v28 = *(double *)&qword_1011ADCC0;
  if (qword_10119BF08 != -1)
    swift_once(&qword_10119BF08, sub_100352570);
  v29 = v28 + *(double *)&qword_1011ADCC8;
  if (!*(_QWORD *)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController])
    v29 = 0.0;
  if (v27 > v29)
    v30 = v27;
  else
    v30 = v29;
  objc_msgSend(*(id *)&a4[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "setAdditionalSafeAreaInsets:", v24, v25, v30, v26);
}

void sub_10035A144(void *a1, void *a2, char *a3)
{
  id v4;
  id v5;

  sub_100359AC8(1, a1, a2, a3);
  v4 = objc_msgSend(a3, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

void sub_10035A1B0()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  unint64_t v5;
  double v6;
  char *v7;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "directionalLayoutMargins");
    v4 = v3;

    v5 = sub_10004D63C();
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v5) & 1) == 0)
    {
      if (qword_10119BF10 != -1)
        swift_once(&qword_10119BF10, sub_100352590);
      v6 = v4 - *((double *)&xmmword_1011ADCD0 + 1);
      v7 = sub_1003593E8();
      objc_msgSend(v7, "setDirectionalLayoutMargins:", 0.0, v6, 0.0, v6);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10035A2A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer(a5, a6, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_10035A2E0()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for SplitViewController.PaletteViewController);
}

unint64_t sub_10035A348@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100360518(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10035A370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100360DEC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10035A3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100360DEC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_10035A418(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;

  switch(a1)
  {
    case 0:
      v3 = 0x7972616D697270;
      goto LABEL_7;
    case 1:
      v3 = 0x656D656C70707573;
      v4 = 0xED0000797261746ELL;
      goto LABEL_8;
    case 2:
      v4 = 0xE900000000000079;
      v3 = 0x7261646E6F636573;
      goto LABEL_8;
    case 3:
      v3 = 0x746361706D6F63;
      goto LABEL_7;
    default:
      v3 = 0x6E776F6E6B6E75;
LABEL_7:
      v4 = 0xE700000000000000;
LABEL_8:
      String.append(_:)(*(Swift::String *)&v3);
      v5._countAndFlagsBits = 0x206E6D756C6F6320;
      v5._object = (void *)0xE800000000000000;
      String.append(_:)(v5);
      __asm { BR              X10 }
      return;
  }
}

uint64_t sub_10035A540()
{
  Swift::String v0;
  uint64_t v2;

  v0._countAndFlagsBits = 0x616D726F6E207369;
  v0._object = (void *)0xE90000000000006CLL;
  String.append(_:)(v0);
  return v2;
}

uint64_t sub_10035A5FC(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;

  v7 = sub_100007E8C(&qword_1011AE028);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_100007E68(a1, v11);
  v13 = sub_1003607A8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s13ColumnContextV10CodingKeysON, &_s13ColumnContextV10CodingKeysON, v13, v11, v12);
  v23 = a2;
  v22 = 0;
  type metadata accessor for Column(0);
  v15 = v14;
  v16 = sub_100048748(&qword_1011AE030, (uint64_t (*)(uint64_t))type metadata accessor for Column, (uint64_t)&protocol conformance descriptor for UISplitViewControllerColumn);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v7, v15, v16);
  if (!v3)
  {
    v21 = a3;
    v20 = 1;
    v17 = sub_100360830();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v7, &_s13ColumnContextV5StateON, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10035A764()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 0x6E6D756C6F63;
}

uint64_t sub_10035A798@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100360528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10035A7BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003607A8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035A7E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003607A8();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10035A80C()
{
  uint64_t v0;
  Swift::UInt v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_10035A868()
{
  uint64_t v0;
  Swift::UInt v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  Hasher._combine(_:)(*(_QWORD *)v0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10035A8A4(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

uint64_t sub_10035A8FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_100360608(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_10035A928(_QWORD *a1)
{
  uint64_t v1;

  return sub_10035A5FC(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void sub_10035A944()
{
  uint64_t v0;

  sub_10035A418(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

BOOL sub_10035A950(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(unsigned __int8 *)(a1 + 8) == (unint64_t)*(unsigned __int8 *)(a2 + 8);
}

void UISplitViewController.preferredStatusBarStyle.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, "viewControllers");
  v2 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v6 = v3;
    else
      v6 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v3);
    if (v7)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
LABEL_6:
    v5 = v4;
    objc_msgSend(v4, "preferredStatusBarStyle", swift_bridgeObjectRelease(v3).n128_f64[0]);

    return;
  }
  __break(1u);
}

uint64_t static UISplitViewControllerColumn.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 3)
    return 1;
  if (a1 != 1)
  {
    if (!a1)
      return (unint64_t)(a2 - 1) < 2;
    return 0;
  }
  return a2 == 2;
}

uint64_t sub_10035ABD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011AE2B8, (uint64_t (*)(uint64_t))type metadata accessor for Column, (uint64_t)&unk_100EA5CE4);
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10035AC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011AE2B8, (uint64_t (*)(uint64_t))type metadata accessor for Column, (uint64_t)&unk_100EA5CE4);
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10035ACA8()
{
  return sub_100048748(&qword_10119D0C0, (uint64_t (*)(uint64_t))type metadata accessor for Column, (uint64_t)&unk_100EA6174);
}

uint64_t sub_10035ACD4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*a1 == 3)
    return 1;
  v3 = *a2;
  if (v2 != 1)
  {
    if (!v2)
      return (unint64_t)(v3 - 1) < 2;
    return 0;
  }
  return v3 == 2;
}

uint64_t sub_10035AD18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  if (*a2 == 3)
    return 0;
  v3 = *a1;
  if (v2 != 1)
  {
    if (!v2)
      return (unint64_t)(v3 - 3) < 0xFFFFFFFFFFFFFFFELL;
    return 1;
  }
  return v3 != 2;
}

uint64_t sub_10035AD5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*a1 == 3)
    return 0;
  v3 = *a2;
  if (v2 != 1)
  {
    if (!v2)
      return (unint64_t)(v3 - 3) < 0xFFFFFFFFFFFFFFFELL;
    return 1;
  }
  return v3 != 2;
}

uint64_t sub_10035ADA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  if (*a2 == 3)
    return 1;
  v3 = *a1;
  if (v2 != 1)
  {
    if (!v2)
      return (unint64_t)(v3 - 1) < 2;
    return 0;
  }
  return v3 == 2;
}

uint64_t sub_10035ADE4()
{
  return type metadata accessor for SplitViewController(0);
}

uint64_t type metadata accessor for SplitViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011ADD80, (uint64_t)&nominal type descriptor for SplitViewController);
}

void sub_10035AE00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[17];

  sub_10015C698(319, &qword_1011ADD90, _s9ViewModelOMa);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\b";
    v6[2] = "\b";
    v6[3] = "\b";
    v6[4] = "\b";
    v6[5] = "\b";
    v6[6] = "\b";
    v6[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[8] = &unk_100EB5E90;
    v6[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[10] = "\b";
    v6[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[12] = "\b";
    v4 = type metadata accessor for SplitViewController.NavigationStacks(319);
    if (v5 <= 0x3F)
    {
      v6[13] = *(_QWORD *)(v4 - 8) + 64;
      v6[14] = &unk_100EB5EA8;
      v6[15] = &unk_100EB5E90;
      v6[16] = &unk_100EB5EC0;
      swift_updateClassMetadata2(a1, 256, 17, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for SplitViewController.NavigationStacks(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011ADEE8, (uint64_t)&nominal type descriptor for SplitViewController.NavigationStacks);
}

uint64_t type metadata accessor for SplitViewController.PaletteViewController()
{
  return objc_opt_self(_TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController);
}

uint64_t sub_10035AF18(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  Class isa;
  NSString v10;
  uint64_t v12;
  char v13;

  v3 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  JSONEncoder.init()();
  v4 = *(_BYTE *)(v1 + OBJC_IVAR___MusicSplitViewContext_context + 8);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR___MusicSplitViewContext_context);
  v13 = v4;
  v5 = sub_10036096C();
  v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v12, &_s13ColumnContextVN, v5);
  v8 = v7;
  swift_release();
  isa = Data._bridgeToObjectiveC()().super.isa;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "encodeObject:forKey:", isa, v10);

  return sub_1000652DC(v6, v8);
}

id sub_10035B078(void *a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char *v14;
  id v15;
  objc_super v17;
  uint64_t v18;
  char v19;

  v3 = sub_10004A07C(0, &qword_1011AE208, NSData_ptr);
  v4 = v1;
  v5 = NSCoder.decodeObject<A>(of:forKey:)(v3, 0x747865746E6F63, 0xE700000000000000, v3);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    v10 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    JSONDecoder.init()();
    v11 = sub_1003609B0();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v18, &_s13ColumnContextVN, v7, v9, &_s13ColumnContextVN, v11);
    sub_1000652DC(v7, v9);
    swift_release();
    v13 = v19;
    v14 = &v4[OBJC_IVAR___MusicSplitViewContext_context];
    *(_QWORD *)v14 = v18;
    v14[8] = v13;

    v17.receiver = v4;
    v17.super_class = (Class)_s29SplitViewColumnContextWrapperCMa();
    v15 = objc_msgSendSuper2(&v17, "init");

  }
  else
  {

    v12 = _s29SplitViewColumnContextWrapperCMa();
    swift_deallocPartialClassInstance(v4, v12, 17, 7);
    return 0;
  }
  return v15;
}

id sub_10035B258()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))_s29SplitViewColumnContextWrapperCMa);
}

uint64_t _s29SplitViewColumnContextWrapperCMa()
{
  return objc_opt_self(MusicSplitViewContext);
}

uint64_t _s13ColumnContextVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 5;
  v5 = v3 - 5;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ColumnContextVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 4;
  }
  return result;
}

ValueMetadata *_s13ColumnContextVMa()
{
  return &_s13ColumnContextVN;
}

ValueMetadata *type metadata accessor for SplitViewController.Context()
{
  return &type metadata for SplitViewController.Context;
}

uint64_t *sub_10035B330(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for SidebarMenu.Item(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(a2, v7) == 3)
      {
        v11 = type metadata accessor for Playlist.Folder.Item(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload(a1, v7, 3);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_10035B470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = type metadata accessor for SidebarMenu.Item(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4)
    && swift_getEnumCaseMultiPayload(a1, v4) == 3)
  {
    v5 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

char *sub_10035B504(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
    {
      v9 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, v6, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_10035B618(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)a1, type metadata accessor for SidebarMenu.Item);
      if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
      {
        v13 = type metadata accessor for Playlist.Folder.Item(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        goto LABEL_14;
      }
      v12 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_10005B748((uint64_t)a1, type metadata accessor for SidebarMenu.Item);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011CEE40) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
  {
    v11 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    swift_storeEnumTagMultiPayload(a1, v6, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v14 = *(int *)(a3 + 20);
  v15 = *(_QWORD *)&a1[v14];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = *(int *)(a3 + 24);
  v17 = *(_QWORD *)&a2[v16];
  v18 = *(_QWORD *)&a1[v16];
  *(_QWORD *)&a1[v16] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v18);
  return a1;
}

char *sub_10035B7E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
    {
      v9 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, v6, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

char *sub_10035B8E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)a1, type metadata accessor for SidebarMenu.Item);
      if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
      {
        v13 = type metadata accessor for Playlist.Folder.Item(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        goto LABEL_14;
      }
      v12 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_10005B748((uint64_t)a1, type metadata accessor for SidebarMenu.Item);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011CEE40) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
  {
    v11 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload(a1, v6, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v14 = *(int *)(a3 + 20);
  v15 = *(_QWORD *)&a1[v14];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  swift_bridgeObjectRelease(v15);
  v16 = *(int *)(a3 + 24);
  v17 = *(_QWORD *)&a1[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_10035BAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035BAAC);
}

uint64_t sub_10035BAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10035BB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035BB38);
}

uint64_t sub_10035BB38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_10035BBB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10015C698(319, (unint64_t *)&qword_1011ADEF8, type metadata accessor for SidebarMenu.Item);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

unint64_t sub_10035BC40()
{
  unint64_t result;

  result = qword_1011ADF30;
  if (!qword_1011ADF30)
  {
    result = swift_getWitnessTable(&unk_100EB5F94, &type metadata for SplitViewController.Context);
    atomic_store(result, (unint64_t *)&qword_1011ADF30);
  }
  return result;
}

unint64_t sub_10035BC88()
{
  unint64_t result;

  result = qword_1011ADF38;
  if (!qword_1011ADF38)
  {
    result = swift_getWitnessTable(&unk_100EB5FBC, &_s13ColumnContextVN);
    atomic_store(result, (unint64_t *)&qword_1011ADF38);
  }
  return result;
}

_QWORD *sub_10035BCCC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v26 = type metadata accessor for MusicPlayActivityFields(0);
  v1 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v26).n128_u64[0];
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController), "viewControllers", v2);
  v6 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v7);
    return _swiftEmptyArrayStorage;
  }
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_16;
LABEL_3:
  v27 = _swiftEmptyArrayStorage;
  result = (_QWORD *)sub_10035C97C(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v11 = v27;
    v25 = v7 & 0xC000000000000001;
    v12 = v7;
    do
    {
      if (v25)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      else
        v13 = *(id *)(v7 + 8 * v10 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, "playActivityFeatureName");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v19 = UIViewController.playActivityForwardedRecommendationData.getter();
      MusicPlayActivityFields.init(featureName:recommendationData:)(v16, v18, v19, v20);

      v27 = v11;
      v22 = v11[2];
      v21 = v11[3];
      if (v22 >= v21 >> 1)
      {
        sub_10035C97C(v21 > 1, v22 + 1, 1);
        v11 = v27;
      }
      ++v10;
      v11[2] = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v22, v4, v26);
      v7 = v12;
    }
    while (v8 != v10);
    swift_bridgeObjectRelease(v12);
    return v11;
  }
  __break(1u);
  return result;
}

id sub_10035BF24(void *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;

  MusicPlayActivityFields.featureName.getter();
  if (v3)
    v4 = v3;
  else
    v4 = 0xE000000000000000;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setPlayActivityFeatureName:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v6 = MusicPlayActivityFields.recommendationData.getter();
  UIViewController.playActivityForwardedRecommendationData.setter(v6, v7);
  return objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController), "pushViewController:animated:", a1, 1);
}

void sub_10035BFCC()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  id v10;
  uint64_t v11;
  objc_super v12;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)
                + OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController);
  v2 = (objc_class *)type metadata accessor for NavigationController();
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v1;
    v6 = objc_msgSend(v4, "viewControllers");
    v7 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v11 = v8;
      else
        v11 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v8);
    }
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(v8).n128_u64[0];
    v12.receiver = v4;
    v12.super_class = v2;
    v10 = objc_msgSendSuper2(&v12, "popToRootViewControllerAnimated:", 1, v9);

  }
  else
  {

  }
}

uint64_t sub_10035C11C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music19SplitViewController_contentViewController)+ OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController), "viewControllers");
  v2 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  return v3;
}

void sub_10035C198()
{
  uint64_t v0;

}

_QWORD *sub_10035C1DC()
{
  return sub_10035BCCC();
}

uint64_t sub_10035C1FC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100048748(&qword_1011ADF40, type metadata accessor for SplitViewController, (uint64_t)&unk_100EB609C);
  result = sub_100048748(&qword_1011ADF48, type metadata accessor for SplitViewController, (uint64_t)&unk_100EB60C4);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10035C258()
{
  return sub_100048748(&qword_1011ADF50, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3E00);
}

uint64_t sub_10035C284(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748((unint64_t *)&unk_1011ADFA0, type metadata accessor for SplitViewController, (uint64_t)&unk_100EB6128);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10035C2C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10035C2E4(int a1, id a2)
{
  sub_100263824(a1, a2);
}

void sub_10035C2EC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(id, uint64_t);
  uint64_t v7;
  id v8;

  v6 = *(void (**)(id, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  swift_unknownObjectRetain(a3, v7);
  v6(v8, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);

}

uint64_t sub_10035C35C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10035C36C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10035C374@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB61B0);
  v5 = swift_getKeyPath(&unk_100EB61D8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10035C3F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB61B0);
  v5 = swift_getKeyPath(&unk_100EB61D8);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10035C468(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035CCB0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10035C484(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035CE38(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C4A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE1B0, (uint64_t (*)(_QWORD))&type metadata accessor for AudioVariant);
  *v3 = result;
  return result;
}

uint64_t sub_10035C4CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_10119F2C8, (uint64_t (*)(_QWORD))&type metadata accessor for Track);
  *v3 = result;
  return result;
}

uint64_t sub_10035C4F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE090, &qword_1011A3A28);
  *v3 = result;
  return result;
}

uint64_t sub_10035C524(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035CFA8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C540(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE080, (uint64_t *)&unk_1011A39C0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C56C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, &qword_1011ADFC8, &qword_1011ADFD0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C598(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE0C0, (uint64_t *)&unk_1011A3B50);
  *v3 = result;
  return result;
}

uint64_t sub_10035C5C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE100, (uint64_t *)&unk_1011A3BB0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C5F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE110, (uint64_t *)&unk_1011A3C00);
  *v3 = result;
  return result;
}

uint64_t sub_10035C61C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE120, (uint64_t *)&unk_1011B56A0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C648(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE0A8, &qword_1011AE0B0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C674(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE098, &qword_1011AE0A0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C6A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE130, (uint64_t *)&unk_1011C71F0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C6CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, &qword_1011ADFB8, &qword_1011ADFC0);
  *v3 = result;
  return result;
}

uint64_t sub_10035C6F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035D104(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C714(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035D26C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011ADFF0, (uint64_t *)&unk_1011CEF20);
  *v3 = result;
  return result;
}

uint64_t sub_10035C740(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035D44C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C75C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035D868(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C778(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035DCD4(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE068, (uint64_t *)&unk_1011AE070);
  *v3 = result;
  return result;
}

uint64_t sub_10035C7A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035DCD4(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE058, &qword_1011AB320);
  *v3 = result;
  return result;
}

uint64_t sub_10035C7D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EA30(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE300, (uint64_t *)&unk_1011A3090);
  *v3 = result;
  return result;
}

uint64_t sub_10035C7FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE290, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry.Reaction);
  *v3 = result;
  return result;
}

uint64_t sub_10035C828(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035D9EC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C844(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035D5B4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C860(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035DB68(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C87C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035ED3C(a1, a2, a3, *v3, &qword_1011AE2C0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C8A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_10119F190, (uint64_t (*)(_QWORD))&type metadata accessor for Album);
  *v3 = result;
  return result;
}

uint64_t sub_10035C8CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE1F0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
  *v3 = result;
  return result;
}

uint64_t sub_10035C8F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE000, type metadata accessor for SidebarMenu.Item);
  *v3 = result;
  return result;
}

uint64_t sub_10035C924(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035DCD4(a1, a2, a3, (_QWORD *)*v3, &qword_1011A9BA0, (uint64_t *)&unk_1011AB388);
  *v3 = result;
  return result;
}

uint64_t sub_10035C950(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE0F0, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist);
  *v3 = result;
  return result;
}

uint64_t sub_10035C97C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011ADFB0, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayActivityFields);
  *v3 = result;
  return result;
}

uint64_t sub_10035C9A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035DE78(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035C9C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE1F8, (uint64_t (*)(_QWORD))&type metadata accessor for MusicCatalogSearchSuggestionsResponse);
  *v3 = result;
  return result;
}

uint64_t sub_10035C9F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EA30(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE170, &qword_1011E8750);
  *v3 = result;
  return result;
}

uint64_t sub_10035CA1C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035DFE0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035CA38(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035E2CC(a1, a2, a3, (_QWORD *)*v3, &qword_1011ADFD8, (uint64_t *)&unk_1011ADFE0);
  *v3 = result;
  return result;
}

uint64_t sub_10035CA64(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011A9B60, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
  *v3 = result;
  return result;
}

uint64_t sub_10035CA90(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE1C0, type metadata accessor for AlbumDetailDataSource.CellType);
  *v3 = result;
  return result;
}

uint64_t sub_10035CABC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035E148(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10035CAD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_10119FA70, (uint64_t (*)(_QWORD))&type metadata accessor for GridItem);
  *v3 = result;
  return result;
}

uint64_t sub_10035CB04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035E2CC(a1, a2, a3, (_QWORD *)*v3, &qword_1011B2D80, &qword_1011AE190);
  *v3 = result;
  return result;
}

uint64_t sub_10035CB30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035E778(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035CB4C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE338, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutSubview);
  *v3 = result;
  return result;
}

uint64_t sub_10035CB78(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035E8D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035CB94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EA30(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE348, (uint64_t *)&unk_1011AE350);
  *v3 = result;
  return result;
}

uint64_t sub_10035CBC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EA30(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE328, &qword_1011AE330);
  *v3 = result;
  return result;
}

uint64_t sub_10035CBEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE168, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Entry);
  *v3 = result;
  return result;
}

uint64_t sub_10035CC18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1011AE0D0, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  *v3 = result;
  return result;
}

uint64_t sub_10035CC44(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035EBC8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035CC60(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10035ED3C(a1, a2, a3, *v3, &qword_1011AE2B0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10035CC84(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10035EE84(a1, a2, a3, (_QWORD *)*v3, &qword_1011AE050, type metadata accessor for PlaylistCurators.Curator);
  *v3 = result;
  return result;
}

uint64_t sub_10035CCB0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE0E0);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    sub_100007E8C(&qword_1011AE0E8);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035CE38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011AE2A0);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035CF94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10035EE84(a1, a2, a3, a4, (uint64_t *)&unk_1011AE1B0, (uint64_t (*)(_QWORD))&type metadata accessor for AudioVariant);
}

uint64_t sub_10035CFA8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011BC9F0);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D104(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D26C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100007E8C(a5);
  v14 = *(_QWORD *)(sub_100007E8C(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(sub_100007E8C(a6) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)(v21 + 72) * v11;
  v26 = &v23[v25];
  v27 = (unint64_t)&v24[v25];
  if (v24 >= v26 || (unint64_t)v23 >= v27)
  {
    swift_arrayInitWithCopy(v23);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D44C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011A3F90);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D5B4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011AE040);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D700(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE298);
    v11 = (char *)swift_allocObject(v10, (v9 << 6) | 0x20, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 + 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 6);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[64 * v8])
      memmove(v14, v15, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[64 * v8] || v14 >= &v15[64 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D868(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011AE280);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8])
      memmove(v13, v14, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v8] || v13 >= &v14[24 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D9EC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011A7840);
    v11 = (char *)swift_allocObject(v10, 104 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 104);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 104 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035DB68(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_10119E430);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035DCD4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_100007E8C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size_0(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v11)
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v11 || v16 >= v17 + 40 * v11)
  {
    sub_100007E8C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035DE78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011AE2F0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035DFE0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011AE180);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035E148(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE1A8);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    type metadata accessor for MPCPlayerResponseTracklistDisplaySection(0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035E2CC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_100007E8C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
    v15 = j__malloc_size_0(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 17;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v11)
      memmove(v14 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v11 || v17 >= v18 + 16 * v11)
  {
    sub_100007E8C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035E458(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE1A0);
    v11 = (_QWORD *)swift_allocObject(v10, 112 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 112);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 < a4 || v13 >= v14 + 112 * v8)
    {
      swift_arrayInitWithTakeFrontToBack(v13);
    }
    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v13);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 112 * v8 || v13 >= v14 + 112 * v8)
  {
    swift_arrayInitWithCopy(v13);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035E600(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE198);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8])
      memmove(v13, v14, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v8] || v13 >= &v14[24 * v8])
  {
    memcpy(v13, v14, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035E778(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE320);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035E8D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE340);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035EA30(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_100007E8C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = j__malloc_size_0(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v11)
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v11 || v17 >= v18 + 8 * v11)
  {
    sub_100007E8C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035EBBC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_10035ED3C(a1, a2, a3, a4, &qword_1011AE318);
}

uint64_t sub_10035EBC8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011AE0B8);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035ED30(char a1, int64_t a2, char a3, char *a4)
{
  return sub_10035ED3C(a1, a2, a3, a4, &qword_1011AE310);
}

uint64_t sub_10035ED3C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_100007E8C(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = j__malloc_size_0(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v9] || v14 >= &v15[v9])
  {
    memcpy(v14, v15, v9);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035EE84(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100007E8C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)(v21 + 72) * v11;
  v26 = &v23[v25];
  v27 = (unint64_t)&v24[v25];
  if (v24 >= v26 || (unint64_t)v23 >= v27)
  {
    swift_arrayInitWithCopy(v23);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

char *sub_10035F064()
{
  char *v0;
  char *v1;
  char *result;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  int v8;
  id v9;
  char *v10;
  unint64_t v11;
  void *v12;
  id v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  void *v55;
  char *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;

  v1 = v0;
  result = (char *)objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, "window");

    if (!v4)
      goto LABEL_5;
    v5 = objc_msgSend(v4, "windowScene");

    if (!v5)
    {
LABEL_6:
      v7 = 0;
      v8 = 1;
      goto LABEL_7;
    }
    v6 = objc_msgSend(v5, "activationState");

    if (v6)
    {
LABEL_5:
      v5 = 0;
      goto LABEL_6;
    }
    result = (char *)objc_msgSend(v1, "view");
    if (result)
    {
      v47 = result;
      objc_msgSend(result, "bounds");
      v49 = v48;
      v51 = v50;

      v8 = 0;
      v5 = v49;
      v7 = v51;
LABEL_7:
      v9 = objc_allocWithZone((Class)type metadata accessor for NowPlayingViewController(0));
      v10 = (char *)sub_1005DA0A0((uint64_t)v5, v7, v8);
      LOBYTE(v68) = 2;
      v11 = sub_10004D63C();
      if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v11) & 1) != 0)
      {
        v12 = *(void **)&v1[OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController];
        if (v12)
        {
          v13 = v12;
          sub_10024EEA0();
          if (v14)
          {
            v15 = v14;
            v16 = (char *)*(id *)&v14[OBJC_IVAR____TtC5Music16BottomPlayerCell_viewController];

            v17 = *(void **)&v16[OBJC_IVAR____TtC5Music26BottomPlayerViewController_queue];
            v18 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queue];
            *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queue] = v17;
            v19 = v17;

            v20 = objc_msgSend(v16, "artworkView");
            if (v20)
            {
              v21 = v20;
              v22 = Artwork.View.currentImage.getter();

            }
            else
            {
              v22 = 0;
            }
            v52 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage];
            *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage] = v22;
            v53 = v22;

            sub_1005D349C();
            v54 = OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController;
            v55 = *(void **)&v1[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController];
            if (v55 && (v56 = (char *)objc_msgSend(v55, "artworkView")) != 0)
            {
              v57 = v56;
              v58 = *(_QWORD *)&v56[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData];
              swift_retain();

            }
            else
            {
              v58 = 0;
            }
            v59 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData];
            *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData] = v58;
            swift_retain();
            sub_1005D7C94(v59);
            swift_release();
            swift_release();
            v60 = *(_QWORD *)&v1[v54];
            if (v60)
            {
              v61 = *(_QWORD *)(v60 + OBJC_IVAR____TtC5Music26BottomPlayerViewController_queueVideoArtworks);
              swift_retain();
            }
            else
            {
              v61 = 0;
            }
            v62 = OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks;
            *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks] = v61;
            swift_retain();
            swift_release();
            if (!*(_QWORD *)&v10[v62])
              goto LABEL_46;
            KeyPath = swift_getKeyPath(&unk_100EB61B0);
            v64 = swift_getKeyPath(&unk_100EB61D8);
            swift_retain();
            static Published.subscript.getter(&v68, v65, KeyPath, v64);
            swift_release();
            swift_release();
            swift_release();
            v66 = v68;
            if (v68)
            {
              sub_1005D6168(v68);
              swift_release();
              swift_bridgeObjectRelease(v66);
            }
            else
            {
LABEL_46:
              swift_release();
            }
            v67 = *(void **)&v16[OBJC_IVAR____TtC5Music26BottomPlayerViewController_nowPlaying];
            v45 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying];
            *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying] = v67;
            v46 = v67;
            sub_1005D35F8(v45);

            goto LABEL_48;
          }

        }
        else
        {

        }
        return 0;
      }
      v23 = OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController;
      v24 = *(void **)&v1[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController];
      if (v24 && (v25 = objc_msgSend(v24, "artworkView")) != 0)
      {
        v26 = v25;
        v27 = Artwork.View.currentImage.getter();

      }
      else
      {
        v27 = 0;
      }
      v28 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage];
      *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_initialArtworkImage] = v27;
      v29 = v27;

      sub_1005D349C();
      v30 = *(void **)&v1[v23];
      if (v30 && (v31 = (char *)objc_msgSend(v30, "artworkView")) != 0)
      {
        v32 = v31;
        v33 = *(_QWORD *)&v31[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData];
        swift_retain();

      }
      else
      {
        v33 = 0;
      }
      v34 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData];
      *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_currentMotionData] = v33;
      swift_retain();
      sub_1005D7C94(v34);
      swift_release();
      swift_release();
      v35 = *(_QWORD *)&v1[v23];
      if (v35)
      {
        v36 = *(_QWORD *)(v35 + OBJC_IVAR____TtC5Music26BottomPlayerViewController_queueVideoArtworks);
        swift_retain();
      }
      else
      {
        v36 = 0;
      }
      v37 = OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks;
      *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_queueVideoArtworks] = v36;
      swift_retain();
      swift_release();
      if (!*(_QWORD *)&v10[v37])
        goto LABEL_28;
      v38 = swift_getKeyPath(&unk_100EB61B0);
      v39 = swift_getKeyPath(&unk_100EB61D8);
      swift_retain();
      static Published.subscript.getter(&v68, v40, v38, v39);
      swift_release();
      swift_release();
      swift_release();
      v41 = v68;
      if (v68)
      {
        sub_1005D6168(v68);
        swift_release();
        swift_bridgeObjectRelease(v41);
        v42 = *(_QWORD *)&v1[v23];
        if (!v42)
        {
LABEL_27:
          v43 = 0;
LABEL_30:
          v45 = *(void **)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying];
          *(_QWORD *)&v10[OBJC_IVAR____TtC5Music24NowPlayingViewController_nowPlaying] = v43;
          v46 = v43;
          sub_1005D35F8(v45);
LABEL_48:

          return v10;
        }
      }
      else
      {
LABEL_28:
        swift_release();
        v42 = *(_QWORD *)&v1[v23];
        if (!v42)
          goto LABEL_27;
      }
      v43 = *(void **)(v42 + OBJC_IVAR____TtC5Music26BottomPlayerViewController_nowPlaying);
      v44 = v43;
      goto LABEL_30;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10035F694(unint64_t a1, id a2)
{
  id v4;
  id v5;
  id v6;
  _BOOL4 v7;
  uint64_t result;
  unsigned int v9;
  char v11;
  unsigned int v12;

  v4 = objc_msgSend(a2, "displayMode");
  v5 = objc_msgSend(a2, "style");
  if (a1 == 2)
  {

    result = 0;
    switch((unint64_t)v4)
    {
      case 1uLL:
        return result;
      case 2uLL:
LABEL_6:
        if (v5 == (id)2)
        {
          if (a1 >= 3)
            goto LABEL_39;
          v11 = 8 * a1;
          v12 = 4;
          goto LABEL_38;
        }
        if (v5 != (id)1)
          goto LABEL_39;
        if ((a1 & 0xFFFFFFFFFFFFFFFDLL) != 0)
          return 5;
        else
          return 0;
      case 3uLL:
LABEL_11:
        if (v5 == (id)2)
        {
          if (a1 >= 3)
            goto LABEL_39;
          return 0x30104u >> (8 * a1);
        }
        else
        {
          if (v5 != (id)1)
            goto LABEL_39;
          if (a1 == 2)
            v9 = 3;
          else
            v9 = 5;
          if (a1)
            return v9;
          else
            return 1;
        }
      case 4uLL:
LABEL_24:
        if (v5 != (id)2 || a1 >= 3)
          goto LABEL_39;
        return 0;
      case 5uLL:
LABEL_19:
        if (v5 != (id)2 || a1 >= 3)
          goto LABEL_39;
        v11 = 8 * a1;
        v12 = 196865;
        goto LABEL_38;
      case 6uLL:
LABEL_29:
        if (v5 != (id)2 || a1 >= 3)
          goto LABEL_39;
        v11 = 8 * a1;
        v12 = 0x20000;
LABEL_38:
        result = v12 >> v11;
        break;
      default:
LABEL_39:
        result = 5;
        break;
    }
  }
  else if (a1 == 3)
  {
    v6 = objc_msgSend(a2, "traitCollection");
    v7 = objc_msgSend(v6, "horizontalSizeClass") != (id)1;

    return (4 * v7);
  }
  else
  {

    result = 4;
    switch((unint64_t)v4)
    {
      case 1uLL:
        return result;
      case 2uLL:
        goto LABEL_6;
      case 3uLL:
        goto LABEL_11;
      case 4uLL:
        goto LABEL_24;
      case 5uLL:
        goto LABEL_19;
      case 6uLL:
        goto LABEL_29;
      default:
        goto LABEL_39;
    }
  }
  return result;
}

void sub_10035F88C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;

  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_5:
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    sub_1003570D4(&v17, a2);
    if (v2)
      goto LABEL_24;
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v10);
  if (v14)
  {
LABEL_17:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_5;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 2;
  if (v10 + 2 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 3;
  if (v10 + 3 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v10 = v15;
    goto LABEL_17;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v9)
  {
LABEL_24:
    swift_release();
    return;
  }
  v14 = *(_QWORD *)(v5 + 8 * v16);
  v10 += 4;
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v9)
      goto LABEL_24;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v16;
    if (v14)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_10035F9FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int EnumCaseMultiPayload;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(double (*)(), uint64_t);
  _QWORD *v19;
  uint64_t v20;

  v2 = sub_100007E8C((uint64_t *)&unk_1011CEE40);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SidebarMenu.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - v10;
  sub_10004A160(a1, (uint64_t)v4, (uint64_t *)&unk_1011CEE40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011CEE40);
  sub_10005B6C0((uint64_t)v4, (uint64_t)v11, type metadata accessor for SidebarMenu.Item);
  sub_1001FFA40((uint64_t)v11, (uint64_t)v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v5);
  v14 = 0xE700000000000000;
  v15 = 0x7972617262696CLL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      if (*v8)
      {
        if (*v8 == 1)
        {
          v14 = 0xE600000000000000;
          v15 = 0x6573776F7262;
        }
        else
        {
          v14 = 0xE500000000000000;
          v15 = 0x6F69646172;
        }
      }
      else
      {
        v14 = 0xE900000000000077;
        v15 = 0x6F4E6E657473696CLL;
      }
      goto LABEL_12;
    case 2:
      goto LABEL_12;
    case 3:
      sub_10005B748((uint64_t)v8, type metadata accessor for SidebarMenu.Item);
      goto LABEL_12;
    case 5:
      v14 = 0xE600000000000000;
      v15 = 0x686372616573;
LABEL_12:
      v16 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
      v17 = swift_allocObject(&unk_1010C10B8, 32, 7);
      *(_QWORD *)(v17 + 16) = v15;
      *(_QWORD *)(v17 + 24) = v14;
      v18 = *(void (**)(double (*)(), uint64_t))((swift_isaMask & *v16) + 0xD8);
      v19 = v16;
      v18(sub_100360930, v17);

      swift_release();
      break;
    default:
      sub_10005B748((uint64_t)v8, type metadata accessor for SidebarMenu.Item);
      break;
  }
  return sub_10005B748((uint64_t)v11, type metadata accessor for SidebarMenu.Item);
}

void sub_10035FC64(char *a1, id a2, double *a3, double a4)
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  double MinY;
  id v16;
  void *v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double *v36;
  double v37;
  void *v38;
  double *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  id v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v7 = objc_msgSend(a2, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_27;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "window");

  if (v9)
  {
    v10 = *(void **)&a1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController];
    if (!v10)
    {
      v38 = v9;
      goto LABEL_15;
    }
    v11 = a3[4];
    v12 = a3[5];
    v13 = a3[6];
    v14 = a3[7];
    v46 = v10;
    v47.origin.x = v11;
    v47.origin.y = v12;
    v47.size.width = v13;
    v47.size.height = v14;
    if (CGRectGetHeight(v47) <= 0.0)
    {
LABEL_13:

      v38 = v46;
LABEL_15:

      goto LABEL_16;
    }
    v48.origin.x = v11;
    v48.origin.y = v12;
    v48.size.width = v13;
    v48.size.height = v14;
    MinY = CGRectGetMinY(v48);
    v16 = objc_msgSend(v46, "view");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v46, "view");
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, "bounds");
        v21 = v20;
        v23 = v22;
        v25 = v24;
        v27 = v26;

        objc_msgSend(v17, "convertRect:toCoordinateSpace:", v9, v21, v23, v25, v27);
        v29 = v28;
        v31 = v30;
        v33 = v32;
        v35 = v34;

        v49.origin.x = v29;
        v49.origin.y = v31;
        v49.size.width = v33;
        v49.size.height = v35;
        if (CGRectGetMinY(v49) < MinY)
        {
          objc_msgSend(a1, "additionalSafeAreaInsets");
          objc_msgSend(a1, "setAdditionalSafeAreaInsets:");
          v36 = (double *)&a1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
          v36[2] = 0.0;
          v37 = *v36;
          if (qword_10119BF00 != -1)
            swift_once(&qword_10119BF00, sub_100352550);
          if (qword_10119BF08 != -1)
            swift_once(&qword_10119BF08, sub_100352570);
          objc_msgSend(*(id *)&a1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "setAdditionalSafeAreaInsets:", v37);

          return;
        }
        goto LABEL_13;
      }
LABEL_28:
      __break(1u);
      return;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_16:
  objc_msgSend(a1, "additionalSafeAreaInsets");
  objc_msgSend(a1, "setAdditionalSafeAreaInsets:");
  v39 = (double *)&a1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
  v39[2] = a4;
  v40 = *v39;
  v41 = v39[1];
  v42 = v39[3];
  if (qword_10119BF00 != -1)
    swift_once(&qword_10119BF00, sub_100352550);
  v43 = *(double *)&qword_1011ADCC0;
  if (qword_10119BF08 != -1)
    swift_once(&qword_10119BF08, sub_100352570);
  v44 = v43 + *(double *)&qword_1011ADCC8;
  if (!*(_QWORD *)&a1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController])
    v44 = 0.0;
  if (v44 < a4)
    v45 = a4;
  else
    v45 = v44;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentNavigationController], "setAdditionalSafeAreaInsets:", v40, v41, v45, v42);
}

void sub_100360010()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _QWORD *v8;

  v1 = &v0[OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModel];
  v2 = _s9ViewModelOMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_libraryImportViewModelObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_shouldShowLibraryImportViewObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_mliInProgressObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_mliEnabledDidChangeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_bottomPlayerViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music19SplitViewController_sceneBinding] = 0;
  v3 = &v0[OBJC_IVAR____TtC5Music19SplitViewController_navigationStacks];
  v4 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = type metadata accessor for SplitViewController.NavigationStacks(0);
  *(_QWORD *)&v3[*(int *)(v5 + 20)] = _swiftEmptyArrayStorage;
  v6 = *(int *)(v5 + 24);
  *(_QWORD *)&v3[v6] = sub_1000435B8((uint64_t)_swiftEmptyArrayStorage);
  v7 = &v0[OBJC_IVAR____TtC5Music19SplitViewController_keyboardObserver];
  *v7 = 0u;
  v7[1] = 0u;
  v0[OBJC_IVAR____TtC5Music19SplitViewController_ppt_isContentReady] = 0;
  v8 = &v0[OBJC_IVAR____TtC5Music19SplitViewController_ppt_onContentIsReady];
  *v8 = 0;
  v8[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/SplitViewController.swift", 31, 2, 92, 0);
  __break(1u);
}

void sub_10036018C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v2 = OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music19SplitViewController_tabsViewController) = a1;
  v4 = a1;

  sub_100355750(0);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC5Music19SplitViewController_miniPlayerPaletteInteraction);
  if (v5)
  {
    v6 = *(void **)(v1 + v2);
    if (v6)
    {
      v9 = v5;
      v7 = objc_msgSend(v6, "view");
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v7, "addInteraction:", v9);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_10036024C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter(v8, v9, v10, v11, v12, v13, v14, v15);
  v17 = swift_allocObject(&unk_1010C11A8, 24, 7);
  *(_QWORD *)(v17 + 16) = v0;
  aBlock[4] = sub_100360A5C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010C11C0;
  v18 = _Block_copy(aBlock);
  v19 = v0;
  v20 = swift_release();
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v23 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v1, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_100360460()
{
  char *v0;
  char *v1;
  char *v2;
  __int128 v3;
  char *v4;

  v1 = &v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_onWillNavigateToViewController];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewController] = 0;
  v2 = &v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_contentAdditionalSafeAreaInsets];
  v3 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v2 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v2 + 1) = v3;
  v4 = &v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController_accessoryViewMaxWidth];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC5Music19SplitViewControllerP33_848D7094BD77AF71EC18DACB023076F421PaletteViewController____lazy_storage___accessoryContainerView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/SplitViewController.swift", 31, 2, 800, 0);
  __break(1u);
}

unint64_t sub_100360518(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_100360528(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6E6D756C6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6D756C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6574617473, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100360608(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_100007E8C(&qword_1011AE008);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  sub_100007E68(a1, v6);
  v8 = sub_1003607A8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s13ColumnContextV10CodingKeysON, &_s13ColumnContextV10CodingKeysON, v8, v6, v7);
  type metadata accessor for Column(0);
  v10 = v9;
  HIBYTE(v15) = 0;
  v11 = sub_100048748(&qword_1011AE018, (uint64_t (*)(uint64_t))type metadata accessor for Column, (uint64_t)&protocol conformance descriptor for UISplitViewControllerColumn);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v10, (char *)&v15 + 7, v2, v10, v11);
  v12 = v16;
  BYTE5(v15) = 1;
  v13 = sub_1003607EC();
  KeyedDecodingContainer.decode<A>(_:forKey:)((uint64_t *)((char *)&v15 + 6), &_s13ColumnContextV5StateON, (char *)&v15 + 5, v2, &_s13ColumnContextV5StateON, v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  return v12;
}

unint64_t sub_1003607A8()
{
  unint64_t result;

  result = qword_1011AE010;
  if (!qword_1011AE010)
  {
    result = swift_getWitnessTable(&unk_100EB63FC, &_s13ColumnContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011AE010);
  }
  return result;
}

unint64_t sub_1003607EC()
{
  unint64_t result;

  result = qword_1011AE020;
  if (!qword_1011AE020)
  {
    result = swift_getWitnessTable(&unk_100EB63D4, &_s13ColumnContextV5StateON);
    atomic_store(result, (unint64_t *)&qword_1011AE020);
  }
  return result;
}

unint64_t sub_100360830()
{
  unint64_t result;

  result = qword_1011AE038;
  if (!qword_1011AE038)
  {
    result = swift_getWitnessTable(&unk_100EB63AC, &_s13ColumnContextV5StateON);
    atomic_store(result, (unint64_t *)&qword_1011AE038);
  }
  return result;
}

uint64_t sub_100360874(uint64_t a1)
{
  uint64_t v1;

  return sub_100355FBC(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_100360890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1003608B4(uint64_t a1)
{
  uint64_t v1;

  sub_100352D00(a1, v1);
}

void sub_1003608BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100352D90(a1, a2, v2);
}

void sub_1003608C4(uint64_t a1, double *a2)
{
  uint64_t v2;

  sub_100353080(a1, a2, v2);
}

uint64_t sub_1003608CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_release(a3);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void sub_100360904()
{
  uint64_t v0;

  sub_1003530D8(v0);
}

uint64_t sub_10036090C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100360930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return JSApplication.selectedTabIdentifier.setter(v1, v2);
}

unint64_t sub_10036096C()
{
  unint64_t result;

  result = qword_1011AE200;
  if (!qword_1011AE200)
  {
    result = swift_getWitnessTable(&unk_100EB600C, &_s13ColumnContextVN);
    atomic_store(result, (unint64_t *)&qword_1011AE200);
  }
  return result;
}

unint64_t sub_1003609B0()
{
  unint64_t result;

  result = qword_1011AE210;
  if (!qword_1011AE210)
  {
    result = swift_getWitnessTable(&unk_100EB6034, &_s13ColumnContextVN);
    atomic_store(result, (unint64_t *)&qword_1011AE210);
  }
  return result;
}

void sub_1003609F8()
{
  uint64_t v0;

  sub_10035A144(*(void **)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_100360A08()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100360A3C()
{
  uint64_t v0;

  sub_100359AC8(2, *(void **)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32));
}

void sub_100360A54(uint64_t a1)
{
  uint64_t v1;

  sub_100358C80(a1, v1);
}

void sub_100360A5C()
{
  uint64_t v0;

  sub_100357BEC(*(void **)(v0 + 16));
}

unint64_t sub_100360A64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AE230;
  if (!qword_1011AE230)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011CEE40);
    sub_100048748(&qword_1011CEE70, type metadata accessor for SidebarMenu.Item, (uint64_t)&unk_100EB3DD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011AE230);
  }
  return result;
}

uint64_t sub_100360AE0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100360B0C(uint64_t a1)
{
  uint64_t v1;

  return sub_100354F00(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

void sub_100360B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100353C6C(a1, a2, v2);
}

void sub_100360B1C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100353DBC(a1, v1);
}

void sub_100360B24(uint64_t a1)
{
  uint64_t v1;

  sub_100353EE0(a1, v1);
}

void sub_100360B2C()
{
  uint64_t v0;

  sub_100353D34(v0);
}

uint64_t _s5Music19SplitViewControllerC7ContextOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100360B80 + 4 * byte_100EB5D9F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100360BB4 + 4 * byte_100EB5D9A[v4]))();
}

uint64_t sub_100360BB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100360BBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100360BC4);
  return result;
}

uint64_t sub_100360BD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100360BD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100360BDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100360BE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ColumnContextV10CodingKeysOMa()
{
  return &_s13ColumnContextV10CodingKeysON;
}

uint64_t _s13ColumnContextV5StateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100360C4C + 4 * byte_100EB5DA9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100360C80 + 4 * byte_100EB5DA4[v4]))();
}

uint64_t sub_100360C80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100360C88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100360C90);
  return result;
}

uint64_t sub_100360C9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100360CA4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100360CA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100360CB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ColumnContextV5StateOMa()
{
  return &_s13ColumnContextV5StateON;
}

unint64_t sub_100360CD0()
{
  unint64_t result;

  result = qword_1011AE2C8;
  if (!qword_1011AE2C8)
  {
    result = swift_getWitnessTable(&unk_100EB62CC, &_s13ColumnContextV5StateON);
    atomic_store(result, (unint64_t *)&qword_1011AE2C8);
  }
  return result;
}

unint64_t sub_100360D18()
{
  unint64_t result;

  result = qword_1011AE2D0;
  if (!qword_1011AE2D0)
  {
    result = swift_getWitnessTable(&unk_100EB6384, &_s13ColumnContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011AE2D0);
  }
  return result;
}

unint64_t sub_100360D60()
{
  unint64_t result;

  result = qword_1011AE2D8;
  if (!qword_1011AE2D8)
  {
    result = swift_getWitnessTable(&unk_100EB62F4, &_s13ColumnContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011AE2D8);
  }
  return result;
}

unint64_t sub_100360DA8()
{
  unint64_t result;

  result = qword_1011AE2E0;
  if (!qword_1011AE2E0)
  {
    result = swift_getWitnessTable(&unk_100EB631C, &_s13ColumnContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011AE2E0);
  }
  return result;
}

unint64_t sub_100360DEC()
{
  unint64_t result;

  result = qword_1011AE2E8;
  if (!qword_1011AE2E8)
  {
    result = swift_getWitnessTable(&unk_100EB6294, &_s13ColumnContextV5StateON);
    atomic_store(result, (unint64_t *)&qword_1011AE2E8);
  }
  return result;
}

uint64_t sub_100360E34(uint64_t a1)
{
  return sub_100360874(a1) & 1;
}

uint64_t sub_100360E8C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB64E0);
  v2 = swift_getKeyPath(&unk_100EB6508);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100360EFC()
{
  return sub_1001ED6C0((uint64_t)&unk_100EB6528, (uint64_t)&unk_100EB6550);
}

uint64_t sub_100360F10()
{
  return sub_1001ED6C0((uint64_t)&unk_100EB6570, (uint64_t)&unk_100EB6598);
}

uint64_t sub_100360F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;

  v32 = a8;
  v30 = a6;
  v31 = a7;
  v29 = a5;
  v13 = sub_100007E8C(&qword_10119F090);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v8 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection__composerName;
  v34 = 0;
  v35 = 0;
  v18 = sub_100007E8C(&qword_10119DCA0);
  Published.init(initialValue:)(&v34, v18);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v19(v17, v16, v13);
  v20 = v8 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection__artistName;
  v34 = 0;
  v35 = 0;
  Published.init(initialValue:)(&v34, v18);
  v19(v20, v16, v13);
  v21 = OBJC_IVAR____TtC5Music21ClassicalAlbumSection_workTracks;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_workTracks) = _swiftEmptyArrayStorage;
  v22 = OBJC_IVAR____TtC5Music21ClassicalAlbumSection_showTrackArtists;
  *(_BYTE *)(v8 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_showTrackArtists) = 0;
  swift_beginAccess(v8 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection__workName, &v34, 33, 0);
  v33[0] = a1;
  v33[1] = a2;
  Published.init(initialValue:)(v33, &type metadata for String);
  swift_endAccess(&v34);
  KeyPath = swift_getKeyPath(&unk_100EB6528);
  v24 = swift_getKeyPath(&unk_100EB6550);
  v34 = a3;
  v35 = a4;
  swift_retain();
  static Published.subscript.setter(&v34, v8, KeyPath, v24);
  v25 = swift_getKeyPath(&unk_100EB6570);
  v26 = swift_getKeyPath(&unk_100EB6598);
  v34 = v29;
  v35 = v30;
  swift_retain();
  static Published.subscript.setter(&v34, v8, v25, v26);
  *(_QWORD *)(v8 + v21) = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + v22) = v32;
  return v8;
}

uint64_t sub_100361134(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  KeyPath = swift_getKeyPath(&unk_100EB64E0);
  v4 = swift_getKeyPath(&unk_100EB6508);
  static Published.subscript.getter(&v24, a1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v24;
  v6 = v25;
  v7 = swift_getKeyPath(&unk_100EB64E0);
  v8 = swift_getKeyPath(&unk_100EB6508);
  v24 = v5;
  v25 = v6;
  swift_retain(v1);
  static Published.subscript.setter(&v24, v1, v7, v8);
  v9 = swift_getKeyPath(&unk_100EB6528);
  v10 = swift_getKeyPath(&unk_100EB6550);
  static Published.subscript.getter(&v24, a1, v9, v10);
  swift_release(v9);
  swift_release(v10);
  v11 = v24;
  v12 = v25;
  v13 = swift_getKeyPath(&unk_100EB6528);
  v14 = swift_getKeyPath(&unk_100EB6550);
  v24 = v11;
  v25 = v12;
  swift_retain(v1);
  static Published.subscript.setter(&v24, v1, v13, v14);
  v15 = swift_getKeyPath(&unk_100EB6570);
  v16 = swift_getKeyPath(&unk_100EB6598);
  static Published.subscript.getter(&v24, a1, v15, v16);
  swift_release(v15);
  swift_release(v16);
  v17 = v24;
  v18 = v25;
  v19 = swift_getKeyPath(&unk_100EB6570);
  v20 = swift_getKeyPath(&unk_100EB6598);
  v24 = v17;
  v25 = v18;
  swift_retain(v1);
  static Published.subscript.setter(&v24, v1, v19, v20);
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_workTracks);
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_workTracks);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_workTracks) = v21;
  swift_bridgeObjectRetain(v21);
  result = swift_bridgeObjectRelease(v22);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_showTrackArtists) = *(_BYTE *)(a1
                                                                                             + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_showTrackArtists);
  return result;
}

uint64_t sub_100361338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection__workName;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection__composerName;
  v4 = sub_100007E8C(&qword_10119F090);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection__artistName, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_workTracks));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003613E8()
{
  return type metadata accessor for ClassicalAlbumSection(0);
}

uint64_t type metadata accessor for ClassicalAlbumSection(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AE3A0, (uint64_t)&nominal type descriptor for ClassicalAlbumSection);
}

void sub_100361404(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;

  sub_1003614A4();
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_1003614F8(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10 = &unk_100EB6468;
      swift_updateClassMetadata2(a1, 256, 5, &v6, a1 + 80);
    }
  }
}

void sub_1003614A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011A0A58)
  {
    v0 = type metadata accessor for Published(0, &type metadata for String);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011A0A58);
  }
}

void sub_1003614F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A64A0)
  {
    v2 = sub_100044B54(&qword_10119DCA0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A64A0);
  }
}

uint64_t sub_100361550(uint64_t *a1, uint64_t *a2)
{
  return sub_1003625BC(*a1, *a2);
}

uint64_t sub_10036155C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for ClassicalAlbumSection(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100361598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  unint64_t v39;
  void (*v40)(_BYTE *, uint64_t);
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  double *v50;
  uint64_t v51;
  char v52;
  _BYTE *v53;
  _BYTE *v54;
  char v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  double *v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t *v77;
  _BYTE v79[4];
  int v80;
  void (*v81)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;

  v2 = v1;
  v92 = a1;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v91 = &v79[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v79[-v7];
  __chkstk_darwin(v9);
  v11 = &v79[-v10];
  v12 = sub_100007E8C(&qword_1011AE5A8);
  __chkstk_darwin(v12);
  v14 = &v79[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_100007E8C(&qword_1011AE5B0);
  __chkstk_darwin(v15);
  v17 = &v79[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v83 = sub_100007E8C(&qword_1011AE5B8);
  __chkstk_darwin(v83);
  v82 = &v79[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v85 = sub_100007E8C(&qword_1011A2DF0);
  __chkstk_darwin(v85);
  v84 = &v79[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_100007E8C(&qword_1011A2DF8);
  __chkstk_darwin(v20);
  v86 = &v79[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v89 = sub_100007E8C(&qword_1011AE5C0);
  __chkstk_darwin(v89);
  v87 = &v79[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = sub_100007E8C(&qword_1011AE5C8);
  __chkstk_darwin(v90);
  v88 = &v79[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v24);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v25 = sub_100007E8C(&qword_1011AE5D0);
  v26 = sub_100361B78(v2, &v14[*(int *)(v25 + 44)]);
  v27 = static Edge.Set.horizontal.getter(v26);
  v28 = EdgeInsets.init(_all:)(*(double *)(v2 + 32));
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011AE5A8);
  v35 = (double *)&v17[*(int *)(v15 + 36)];
  *(_BYTE *)v35 = v27;
  v35[1] = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  *((_BYTE *)v35 + 40) = 0;
  v36 = sub_10004FF60((uint64_t)v14, &qword_1011AE5A8);
  v80 = static Edge.Set.top.getter(v36);
  type metadata accessor for ClassicalAlbumSectionCell(0);
  sub_1008237B8((uint64_t)v11);
  v37 = enum case for DynamicTypeSize.accessibility1(_:);
  v81 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 104);
  v38 = v8;
  v81(v8, enum case for DynamicTypeSize.accessibility1(_:), v3);
  v39 = sub_10036305C();
  LOBYTE(v15) = dispatch thunk of static Comparable.< infix(_:_:)(v11, v8, v3, v39);
  v40 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v40(v38, v3);
  if ((v15 & 1) != 0)
    v41 = 13.0;
  else
    v41 = 28.0;
  v40(v11, v3);
  v42 = EdgeInsets.init(_all:)(v41);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = v82;
  sub_10004A160((uint64_t)v17, (uint64_t)v82, &qword_1011AE5B0);
  v50 = (double *)&v49[*(int *)(v83 + 36)];
  *(_BYTE *)v50 = v80;
  v50[1] = v42;
  *((_QWORD *)v50 + 2) = v44;
  *((_QWORD *)v50 + 3) = v46;
  *((_QWORD *)v50 + 4) = v48;
  *((_BYTE *)v50 + 40) = 0;
  v51 = sub_10004FF60((uint64_t)v17, &qword_1011AE5B0);
  v52 = static Edge.Set.bottom.getter(v51);
  v53 = v91;
  sub_1008237B8((uint64_t)v91);
  v81(v38, v37, v3);
  v54 = v38;
  v55 = dispatch thunk of static Comparable.< infix(_:_:)(v53, v38, v3, v39);
  v40(v54, v3);
  if ((v55 & 1) != 0)
    v56 = 6.0;
  else
    v56 = 13.0;
  v40(v53, v3);
  v57 = EdgeInsets.init(_all:)(v56);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v64 = v84;
  sub_10004A160((uint64_t)v49, (uint64_t)v84, &qword_1011AE5B8);
  v65 = (double *)&v64[*(int *)(v85 + 36)];
  *(_BYTE *)v65 = v52;
  v65[1] = v57;
  *((_QWORD *)v65 + 2) = v59;
  *((_QWORD *)v65 + 3) = v61;
  *((_QWORD *)v65 + 4) = v63;
  *((_BYTE *)v65 + 40) = 0;
  v66 = sub_10004FF60((uint64_t)v49, &qword_1011AE5B8);
  v67 = static Alignment.leading.getter(v66);
  v68 = v86;
  sub_10014A44C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v86, 0.0, 1, 0.0, 1, v67, v69);
  v70 = sub_10004FF60((uint64_t)v64, &qword_1011A2DF0);
  v71 = static HorizontalAlignment.listRowSeparatorLeading.getter(v70);
  v72 = v87;
  sub_10004A160((uint64_t)v68, (uint64_t)v87, &qword_1011A2DF8);
  v73 = (uint64_t *)&v72[*(int *)(v89 + 36)];
  *v73 = v71;
  v73[1] = (uint64_t)sub_100362438;
  v73[2] = 0;
  v74 = sub_10004FF60((uint64_t)v68, &qword_1011A2DF8);
  v75 = static HorizontalAlignment.listRowSeparatorTrailing.getter(v74);
  v76 = v88;
  sub_10004A160((uint64_t)v72, (uint64_t)v88, &qword_1011AE5C0);
  v77 = (uint64_t *)&v76[*(int *)(v90 + 36)];
  *v77 = v75;
  v77[1] = (uint64_t)sub_100363270;
  v77[2] = 0;
  sub_10004FF60((uint64_t)v72, &qword_1011AE5C0);
  return sub_100065228((uint64_t)v76, v92, &qword_1011AE5C8);
}

uint64_t sub_100361B78@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  double v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  _OWORD v100[9];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;

  v90 = a2;
  v3 = sub_100007E8C(&qword_1011A2E00);
  v86 = *(_QWORD *)(v3 - 8);
  v87 = v3;
  __chkstk_darwin(v3);
  v85 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A2E08);
  __chkstk_darwin(v5);
  v89 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v88 = (uint64_t)&v82 - v8;
  v84 = a1;
  KeyPath = swift_getKeyPath(&unk_100EB64E0);
  v10 = swift_getKeyPath(&unk_100EB6508);
  swift_retain();
  static Published.subscript.getter(&v101, v11, KeyPath, v10);
  swift_release();
  swift_release();
  swift_release();
  v83 = sub_100055B68();
  v12 = Text.init<A>(_:)(&v101, &type metadata for String, v83);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  if (qword_10119BF18 != -1)
    swift_once(&qword_10119BF18, sub_10036245C);
  v19 = v16 & 1;
  v20 = Text.font(_:)(qword_10124CE20, v12, v14, v19, v18);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  sub_100055BAC(v12, v14, v19);
  swift_bridgeObjectRelease(v18);
  v28 = static Font.Weight.semibold.getter(v27);
  v29 = Text.fontWeight(_:)(*(_QWORD *)&v28, 0, v20, v22, v26, v24);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  sub_100055BAC(v20, v22, v26);
  swift_bridgeObjectRelease(v24);
  v37 = static Alignment.leading.getter(v36);
  sub_100149C8C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v101, v39, 0.0, 1, 0.0, 1, v37, v38, v29, v31, v35, v33);
  sub_100055BAC(v29, v31, v35);
  swift_bridgeObjectRelease(v33);
  v97 = v107;
  v98 = v108;
  v99 = v109;
  v93 = v103;
  v94 = v104;
  v95 = v105;
  v96 = v106;
  v91 = v101;
  v92 = v102;
  *(_QWORD *)&v101 = sub_100362108();
  *((_QWORD *)&v101 + 1) = v40;
  v41 = Text.init<A>(_:)(&v101, &type metadata for String, v83);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  if (qword_10119BF20 != -1)
    swift_once(&qword_10119BF20, sub_100362478);
  v48 = v45 & 1;
  v49 = Text.font(_:)(qword_10124CE28, v41, v43, v45 & 1, v47);
  v51 = v50;
  v53 = v52;
  v55 = v54 & 1;
  sub_100055BAC(v41, v43, v48);
  swift_bridgeObjectRelease(v47);
  LODWORD(v101) = static HierarchicalShapeStyle.secondary.getter(v56);
  v57 = Text.foregroundStyle<A>(_:)(&v101, v49, v51, v55, v53, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  sub_100055BAC(v49, v51, v55);
  swift_bridgeObjectRelease(v53);
  *(_QWORD *)&v101 = v57;
  *((_QWORD *)&v101 + 1) = v59;
  LOBYTE(v102) = v61 & 1;
  *((_QWORD *)&v102 + 1) = v63;
  if (qword_10119C6A8 != -1)
    swift_once(&qword_10119C6A8, sub_1006CA714);
  v64 = v85;
  View.minimumLineHeight(_:)(&type metadata for Text, &protocol witness table for Text, *(double *)&qword_10124D7C0);
  sub_100055BAC(v57, v59, v61 & 1);
  swift_bridgeObjectRelease(v63);
  v66 = static Alignment.leading.getter(v65);
  v67 = v89;
  v70 = sub_10014A4B0(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v89, v69, 0.0, 1, 0.0, 1, v66, v68);
  (*(void (**)(char *, uint64_t, double))(v86 + 8))(v64, v87, v70);
  v71 = v88;
  sub_100065228(v67, v88, &qword_1011A2E08);
  sub_10004A160(v71, v67, &qword_1011A2E08);
  v100[6] = v97;
  v100[7] = v98;
  v72 = v98;
  v100[8] = v99;
  v73 = v93;
  v74 = v94;
  v100[2] = v93;
  v100[3] = v94;
  v76 = v95;
  v75 = v96;
  v100[4] = v95;
  v100[5] = v96;
  v78 = v91;
  v77 = v92;
  v100[0] = v91;
  v100[1] = v92;
  v79 = v90;
  v90[6] = v97;
  v79[7] = v72;
  v79[8] = v99;
  v79[2] = v73;
  v79[3] = v74;
  v79[4] = v76;
  v79[5] = v75;
  *v79 = v78;
  v79[1] = v77;
  v80 = sub_100007E8C(&qword_1011AE5D8);
  sub_10004A160(v67, (uint64_t)v79 + *(int *)(v80 + 48), &qword_1011A2E08);
  sub_100154638((uint64_t)v100);
  sub_10004FF60(v71, &qword_1011A2E08);
  sub_10004FF60(v67, &qword_1011A2E08);
  v107 = v97;
  v108 = v98;
  v109 = v99;
  v103 = v93;
  v104 = v94;
  v105 = v95;
  v106 = v96;
  v101 = v91;
  v102 = v92;
  return sub_1003630A4((uint64_t)&v101);
}

uint64_t sub_100362108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  Swift::String v35;
  void *object;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;

  v1 = v0;
  type metadata accessor for Locale(0);
  ((void (*)(void))__chkstk_darwin)();
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue(0);
  ((void (*)(void))__chkstk_darwin)();
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v38 - v9;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 1);
  v11._countAndFlagsBits = 2128194;
  v11._object = (void *)0xE300000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  v12 = *(_QWORD *)(v1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EB6528);
  v14 = swift_getKeyPath(&unk_100EB6550);
  v15 = swift_retain(v12);
  static Published.subscript.getter(&v41, v15, KeyPath, v14);
  swift_release(v12);
  swift_release(KeyPath);
  swift_release(v14);
  v16 = v41;
  v17 = v42;
  if (!v42)
  {
    v18 = String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
    static Locale.current.getter(v18);
    v16 = String.init(localized:table:bundle:locale:comment:)(v5, v16, 0, 0, v3, "Unknown composer name", 21, 2);
    v17 = v19;
  }
  v20._countAndFlagsBits = v16;
  v20._object = v17;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v20);
  swift_bridgeObjectRelease(v17);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  v22 = String.LocalizationValue.init(stringInterpolation:)(v10);
  static Locale.current.getter(v22);
  v23 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v3, "By line for composers", 21, 2);
  v41 = v23;
  v42 = v24;
  v25 = *(_QWORD *)(v1 + 8);
  v26 = swift_getKeyPath(&unk_100EB6570);
  v27 = swift_getKeyPath(&unk_100EB6598);
  v28 = swift_retain(v25);
  static Published.subscript.getter(&v39, v28, v26, v27);
  swift_release(v25);
  swift_release(v26);
  swift_release(v27);
  v29 = v40;
  if (v40)
  {
    v30 = v39;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1);
    v31._countAndFlagsBits = 0x209380E220;
    v31._object = (void *)0xA500000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v31);
    v32._countAndFlagsBits = v30;
    v32._object = v29;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v32);
    swift_bridgeObjectRelease(v29);
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v33);
    v34 = String.LocalizationValue.init(stringInterpolation:)(v8);
    static Locale.current.getter(v34);
    v35._countAndFlagsBits = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v3, "Separator following composer name and artist name", 49, 2);
    object = v35._object;
    String.append(_:)(v35);
    swift_bridgeObjectRelease(object);
    return v41;
  }
  return v23;
}

uint64_t sub_100362438()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.trailing.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_10036245C()
{
  uint64_t result;

  result = static Font.callout.getter();
  qword_10124CE20 = result;
  return result;
}

uint64_t sub_100362478()
{
  uint64_t result;

  result = static Font.footnote.getter();
  qword_10124CE28 = result;
  return result;
}

uint64_t sub_100362498@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB64E0);
  v5 = swift_getKeyPath(&unk_100EB6508);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_100362514(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB64E0);
  v6 = swift_getKeyPath(&unk_100EB6508);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

double sub_100362594@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001EDDE8(a1, (uint64_t)&unk_100EB6528, (uint64_t)&unk_100EB6550, a2);
}

uint64_t sub_1003625A8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDC44(a1, a2, a3, a4, (uint64_t)&unk_100EB6528, (uint64_t)&unk_100EB6550);
}

uint64_t sub_1003625BC(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;

  KeyPath = swift_getKeyPath(&unk_100EB64E0);
  v5 = swift_getKeyPath(&unk_100EB6508);
  static Published.subscript.getter(&v29, a1, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = v29;
  v6 = v30;
  v8 = swift_getKeyPath(&unk_100EB64E0);
  v9 = swift_getKeyPath(&unk_100EB6508);
  static Published.subscript.getter(&v29, a2, v8, v9);
  swift_release(v8);
  swift_release(v9);
  v10 = v30;
  if (v7 == v29 && v6 == v30)
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, v29, v30, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    v12 = 0;
    if ((v11 & 1) == 0)
      return v12 & 1;
  }
  v13 = swift_getKeyPath(&unk_100EB6528);
  v14 = swift_getKeyPath(&unk_100EB6550);
  static Published.subscript.getter(&v29, a1, v13, v14);
  swift_release(v13);
  swift_release(v14);
  v16 = v29;
  v15 = v30;
  v17 = swift_getKeyPath(&unk_100EB6528);
  v18 = swift_getKeyPath(&unk_100EB6550);
  static Published.subscript.getter(&v29, a2, v17, v18);
  swift_release(v17);
  swift_release(v18);
  v19 = v30;
  if (v15)
  {
    if (!v30)
    {
LABEL_18:
      v26 = v15;
LABEL_21:
      swift_bridgeObjectRelease(v26);
      v12 = 0;
      return v12 & 1;
    }
    if (v16 == v29 && v15 == v30)
    {
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v15, v29, v30, 0);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v19);
      v12 = 0;
      if ((v20 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v30)
  {
LABEL_20:
    v26 = v19;
    goto LABEL_21;
  }
  v21 = swift_getKeyPath(&unk_100EB6570);
  v22 = swift_getKeyPath(&unk_100EB6598);
  static Published.subscript.getter(&v29, a1, v21, v22);
  swift_release(v21);
  swift_release(v22);
  v23 = v29;
  v15 = v30;
  v24 = swift_getKeyPath(&unk_100EB6570);
  v25 = swift_getKeyPath(&unk_100EB6598);
  static Published.subscript.getter(&v29, a2, v24, v25);
  swift_release(v24);
  swift_release(v25);
  v19 = v30;
  if (!v15)
  {
    if (!v30)
      goto LABEL_23;
    goto LABEL_20;
  }
  if (!v30)
    goto LABEL_18;
  if (v23 == v29 && v15 == v30)
  {
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
LABEL_23:
    v12 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_showTrackArtists) ^ *(_BYTE *)(a2 + OBJC_IVAR____TtC5Music21ClassicalAlbumSection_showTrackArtists) ^ 1;
    return v12 & 1;
  }
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v15, v29, v30, 0);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v19);
  v12 = 0;
  if ((v27 & 1) != 0)
    goto LABEL_23;
  return v12 & 1;
}

double sub_100362904@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001EDDE8(a1, (uint64_t)&unk_100EB6528, (uint64_t)&unk_100EB6550, a2);
}

uint64_t sub_100362928(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDC44(a1, a2, a3, a4, (uint64_t)&unk_100EB6528, (uint64_t)&unk_100EB6550);
}

double sub_10036294C@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001EDDE8(a1, (uint64_t)&unk_100EB6570, (uint64_t)&unk_100EB6598, a2);
}

uint64_t sub_100362970(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001EDC44(a1, a2, a3, a4, (uint64_t)&unk_100EB6570, (uint64_t)&unk_100EB6598);
}

uint64_t sub_100362994(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)a2 + 57);
    swift_retain();
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_100362A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100362B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  swift_retain();
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t sub_100362BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_10004FF60(a1 + v6, (uint64_t *)&unk_1011ACE40);
    v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  return a1;
}

_OWORD *sub_100362CEC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100362DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_10004FF60(a1 + v7, (uint64_t *)&unk_1011ACE40);
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100362EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100362EB8);
}

uint64_t sub_100362EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100362F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100362F44);
}

uint64_t sub_100362F44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ClassicalAlbumSectionCell(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AE568, (uint64_t)&nominal type descriptor for ClassicalAlbumSectionCell);
}

void sub_100362FD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EB65E0;
  v4[1] = &unk_100EB65F8;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_10036304C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9D3C8, 1);
}

unint64_t sub_10036305C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4FF0;
  if (!qword_1011A4FF0)
  {
    v1 = type metadata accessor for DynamicTypeSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DynamicTypeSize, v1);
    atomic_store(result, &qword_1011A4FF0);
  }
  return result;
}

uint64_t sub_1003630A4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_100055BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1003630E0()
{
  return sub_100363128(&qword_1011AE5E0, &qword_1011AE5C8, (void (*)(void))sub_10036310C);
}

uint64_t sub_10036310C()
{
  return sub_100363128(&qword_1011AE5E8, &qword_1011AE5C0, (void (*)(void))sub_100363194);
}

uint64_t sub_100363128(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    sub_100283478();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100363194()
{
  return sub_10005610C(&qword_1011AE5F0, &qword_1011A2DF8, (void (*)(void))sub_1003631B8);
}

uint64_t sub_1003631B8()
{
  return sub_10005610C(&qword_1011AE5F8, &qword_1011A2DF0, (void (*)(void))sub_1003631DC);
}

uint64_t sub_1003631DC()
{
  return sub_10005610C(&qword_1011AE600, &qword_1011AE5B8, (void (*)(void))sub_100363200);
}

uint64_t sub_100363200()
{
  return sub_10005610C(&qword_1011AE608, &qword_1011AE5B0, (void (*)(void))sub_100363224);
}

unint64_t sub_100363224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AE610;
  if (!qword_1011AE610)
  {
    v1 = sub_100044B54(&qword_1011AE5A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AE610);
  }
  return result;
}

uint64_t EnvironmentValues.playbackController.getter()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1001545F4();
  EnvironmentValues.subscript.getter(&v2, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v0);
  return v2;
}

uint64_t EnvironmentValues.playbackController.setter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_1001545F4();
  return EnvironmentValues.subscript.setter(&v3, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v1);
}

uint64_t PlaybackController.enqueue<A>(_:playbackMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;

  v38 = a5;
  v36 = a3;
  v37 = a4;
  v35 = a2;
  v10 = type metadata accessor for SourcedPlaybackIntent(0, a6, a7, a4);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v14 = (char *)&v34 - v13;
  v15 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter(v18);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  v20 = *(unsigned __int8 *)(v11 + 80);
  v21 = (v20 + 48) & ~v20;
  v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject(&unk_1010C15A8, v23 + 8, v20 | 7);
  *((_QWORD *)v24 + 2) = 0;
  *((_QWORD *)v24 + 3) = 0;
  *((_QWORD *)v24 + 4) = a6;
  *((_QWORD *)v24 + 5) = a7;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v24[v21], v14, v10);
  v25 = (uint64_t *)&v24[v22];
  v26 = v35;
  v27 = v36;
  *v25 = v35;
  v25[1] = v27;
  v28 = v37;
  v29 = v38;
  v25[2] = v37;
  v25[3] = v29;
  v30 = v39;
  *(_QWORD *)&v24[v23] = v39;
  sub_100364B84(v26, v27, v28, v29);
  v31 = v30;
  v32 = sub_1000E8908((uint64_t)v17, (uint64_t)&unk_1011AE628, (uint64_t)v24);
  swift_release(v32);
  return sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A13B0);
}

void sub_100363494(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t (*v20)(__n128);
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __n128 v52;
  id v53;
  id v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _OWORD v64[3];
  uint64_t v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  _BYTE v71[32];
  uint64_t v72;
  char v73;

  v2 = v1;
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10036572C(a1, (uint64_t)v64);
  if (v66)
  {
    if (v66 == 1)
    {
      v14 = *(_QWORD *)&v64[0];
      if (*(_QWORD *)&v64[0])
      {
        v15 = qword_10119BF30;
        swift_retain();
        if (v15 != -1)
          swift_once(&qword_10119BF30, sub_100365228);
        sub_100048B14(v10, (uint64_t)qword_10124CE40);
        v16 = swift_retain_n(v14, 2);
        v17 = Logger.logObject.getter(v16);
        v18 = static os_log_type_t.default.getter(v17);
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc(12, -1);
          v56 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v60 = v56;
          v57 = v2;
          *(_DWORD *)v19 = 136446210;
          v55 = v19 + 4;
          v20 = *(uint64_t (**)(__n128))(*(_QWORD *)v14 + 240);
          v21 = swift_retain();
          v22 = v20(v21);
          v24 = v23;
          swift_release();
          v58 = sub_100322200(v22, v24, (uint64_t *)&v60);
          v25 = v57;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
          swift_release_n(v14, 2, v26);
          swift_bridgeObjectRelease(v24);
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "PlaybackController present - now playing, videoContext=%{public}s", v19, 0xCu);
          v27 = v56;
          swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v27, -1, -1);
          swift_slowDealloc(v19, -1, -1);

          if (*(_QWORD *)(v25 + 16))
          {
LABEL_8:
            *v6 = 5;
            v29 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
            swift_storeEnumTagMultiPayload(v6, v29, 2);
            swift_storeEnumTagMultiPayload(v6, v4, 0);
            swift_retain();
            sub_100770824((uint64_t)v6, 0, 0);
            swift_release_n(v14, 2, v30);
LABEL_20:
            swift_release();
            sub_10005B748((uint64_t)v6, type metadata accessor for AppInterfaceContext.Activity);
            return;
          }
        }
        else
        {

          swift_release_n(v14, 2, v52);
          if (*(_QWORD *)(v2 + 16))
            goto LABEL_8;
        }
        swift_release_n(v14, 2, v28);
      }
      else if (*(_QWORD *)(v2 + 16))
      {
        *v6 = 1;
        v45 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
        swift_storeEnumTagMultiPayload(v6, v45, 2);
        swift_storeEnumTagMultiPayload(v6, v4, 0);
        swift_retain();
        sub_100770824((uint64_t)v6, 0, 0);
        goto LABEL_20;
      }
    }
    else
    {
      sub_100365768((uint64_t)v64, (uint64_t)&v58);
      sub_1003657B0((uint64_t)&v58, (uint64_t)&v60);
      if (*((_QWORD *)&v61 + 1))
      {
        sub_100064C48(&v60, (uint64_t)&v67);
        sub_100064C78((uint64_t)&v67, (uint64_t)&v60);
        BYTE8(v62) = 0;
        static SubscriptionUpsellPresenter.present(for:)(&v60);
        sub_1002A4CE4((uint64_t)&v60);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v67);
        v41 = &v58;
      }
      else
      {
        sub_10004FF60((uint64_t)&v58, (uint64_t *)&unk_1011B69E0);
        v41 = (uint64_t *)&v60;
      }
      sub_10004FF60((uint64_t)v41, (uint64_t *)&unk_1011B69E0);
    }
  }
  else
  {
    v67 = v64[0];
    v68 = v64[1];
    v69 = v64[2];
    v70 = v65;
    v31 = Logger.playbackController.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v31, v10);
    sub_1003657F8((uint64_t)&v67);
    v32 = sub_1003657F8((uint64_t)&v67);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v57 = v2;
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v56 = swift_slowAlloc(32, -1);
      v58 = v56;
      *(_DWORD *)v35 = 136446210;
      v55 = v35 + 4;
      v60 = v67;
      v61 = v68;
      v62 = v69;
      v63 = v70;
      sub_1003657F8((uint64_t)&v67);
      v36 = String.init<A>(describing:)(&v60, &type metadata for Alert);
      v38 = v37;
      *(_QWORD *)&v60 = sub_100322200(v36, v37, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, (char *)&v60 + 8);
      v39 = v38;
      v2 = v57;
      swift_bridgeObjectRelease(v39);
      sub_100365848(&v67);
      sub_100365848(&v67);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Presenting alert=%{public}s", v35, 0xCu);
      v40 = v56;
      swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      sub_100365848(&v67);
      sub_100365848(&v67);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v42 = *(_QWORD *)(v2 + 16);
    if (v42)
    {
      v43 = *(_QWORD *)(v42 + 32);
      if (v43 >> 62 == 2 || v43 >> 62 == 1)
      {
        v44 = (void *)(v43 & 0x3FFFFFFFFFFFFFFFLL);
        v43 &= 0x3FFFFFFFFFFFFFFFuLL;
      }
      else
      {
        v44 = (void *)(v43 & 0x3FFFFFFFFFFFFFFFLL);
      }
      v72 = 0;
      memset(v71, 0, sizeof(v71));
      v73 = -1;
      v53 = v44;
      PresentationSource.init(viewController:position:)((void *)v43, (uint64_t)v71, (uint64_t)&v58);
      sub_100064EF0((uint64_t)&v58, (uint64_t)&v60);
      v54 = Alert.uiAlertController.getter();
      PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v54, 1, (id)0xF, (void **)1, 0, 0);

      sub_100365848(&v67);
      sub_100064B4C((uint64_t)&v60);
    }
    else
    {
      v46 = *(_QWORD *)(v2 + 24);
      if (v46)
      {
        v47 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v9, 1, 1, v47);
        type metadata accessor for MainActor(0);
        swift_retain();
        sub_1003657F8((uint64_t)&v67);
        v48 = swift_retain();
        v49 = static MainActor.shared.getter(v48);
        v50 = swift_allocObject(&unk_1010C1648, 96, 7);
        *(_QWORD *)(v50 + 16) = v49;
        *(_QWORD *)(v50 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v50 + 32) = v46;
        v51 = v68;
        *(_OWORD *)(v50 + 40) = v67;
        *(_OWORD *)(v50 + 56) = v51;
        *(_OWORD *)(v50 + 72) = v69;
        *(_QWORD *)(v50 + 88) = v70;
        sub_100166D14((uint64_t)v9, (uint64_t)&unk_1011AE7A0, v50);
        sub_100365848(&v67);
        swift_release();
        swift_release();
      }
      else
      {
        sub_100365848(&v67);
      }
    }
  }
}

uint64_t sub_100363BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  __n128 v7;
  _QWORD *v8;

  v5[2] = type metadata accessor for MainActor(0);
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1011D5044);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_100088358;
  return PresentedViewState<A>.present(_:)(a5);
}

uint64_t sub_100363C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A9570);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v5[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v5[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v10);
  v5[17] = swift_task_alloc(v10);
  v11 = type metadata accessor for Logger(0);
  v5[18] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[19] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[20] = swift_task_alloc(v13);
  v5[21] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v5[22] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v5[23] = v16;
  v5[24] = v17;
  return swift_task_switch(sub_100363D50, v16, v17);
}

uint64_t sub_100363D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 16);
  if (v1 && (v2 = *(_QWORD *)(v1 + 16), (*(_QWORD *)(v0 + 200) = v2) != 0))
  {
    v3 = async function pointer to MusicPageProvider.openURL(_:)[1];
    swift_retain();
    v4 = (_QWORD *)swift_task_alloc(v3);
    *(_QWORD *)(v0 + 208) = v4;
    *v4 = v0;
    v4[1] = sub_100363FF8;
    return MusicPageProvider.openURL(_:)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 80);
    swift_release();
    v13 = Logger.playbackController.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v13, v7);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v12, v10);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 144);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 120);
    if (v17)
    {
      v36 = *(_QWORD *)(v0 + 168);
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = v20;
      v25 = swift_slowAlloc(32, -1);
      v37 = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v27 = dispatch thunk of CustomStringConvertible.description.getter(v23, v26);
      v29 = v28;
      *(_QWORD *)(v0 + 40) = sub_100322200(v27, v28, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      v30 = swift_bridgeObjectRelease(v29);
      (*(void (**)(uint64_t, uint64_t, __n128))(v22 + 8))(v21, v23, v30);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unable to perform segue with url.  App Interface context is missing. url='%s'", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v19);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v22 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v31 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 128);
    v32 = *(_QWORD *)(v0 + 136);
    v34 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100363FF8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_1003640E0;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[12] + 8))(v2[13], v2[11]);
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_10036406C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10036406C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 176));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003640E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 80);
  swift_release();
  v9 = Logger.playbackController.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  swift_errorRetain(v1);
  v10 = swift_errorRetain(v1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v38 = *(_QWORD *)(v0 + 216);
    v39 = *(_QWORD *)(v0 + 152);
    v40 = *(_QWORD *)(v0 + 144);
    v41 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 128);
    v37 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v42 = v16;
    *(_DWORD *)v15 = 136315394;
    v17 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v14, v17);
    v20 = v19;
    *(_QWORD *)(v0 + 48) = sub_100322200(v18, v19, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    v21 = swift_bridgeObjectRelease(v20);
    (*(void (**)(uint64_t, uint64_t, __n128))(v37 + 8))(v13, v14, v21);
    *(_WORD *)(v15 + 12) = 2080;
    swift_getErrorValue(v38, v0 + 56, v0 + 16);
    v22 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v24 = v23;
    *(_QWORD *)(v0 + 64) = sub_100322200(v22, v23, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease(v24);
    swift_errorRelease(v38);
    swift_errorRelease(v38);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable perform segue with url. url='%s' error='%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
    swift_release();

    swift_errorRelease(v38);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 120);
    v29 = *(_QWORD *)(v0 + 128);
    v31 = *(_QWORD *)(v0 + 112);
    swift_release();
    swift_errorRelease(v25);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  v32 = *(_QWORD *)(v0 + 160);
  v34 = *(_QWORD *)(v0 + 128);
  v33 = *(_QWORD *)(v0 + 136);
  v35 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003643EC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocClassInstance(v0, 41, 7);
}

void sub_100364420(uint64_t *a1)
{
  sub_100363494(a1);
}

double sub_100364440(uint64_t a1)
{
  return sub_100365290(a1);
}

id sub_100364460()
{
  return objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
}

double sub_10036448C()
{
  double result;

  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_1003644CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 72) = v13;
  *(_OWORD *)(v8 + 56) = v12;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  *(_QWORD *)(v8 + 80) = v9;
  *(_QWORD *)(v8 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v8 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100364560, 0, 0);
}

uint64_t sub_100364560()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003645C8, v3, v4);
}

uint64_t sub_1003645C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[8];
  v2 = v0[9];
  v4 = v0[5];
  v3 = v0[6];
  v6 = v0[3];
  v5 = v0[4];
  swift_release();
  v8 = type metadata accessor for SourcedPlaybackIntent(0, v1, v2, v7);
  v0[14] = sub_100364BBC(v6, v5, v4, v3, v8);
  return swift_task_switch(sub_100364698, 0, 0);
}

uint64_t sub_100364698()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = (void *)v0[14];
  v2 = (_QWORD *)(v0[7] + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v3 = v2[3];
  v4 = v2[4];
  sub_100007E68(v2, v3);
  v0[15] = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  v5 = dword_1011DB03C;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v5);
  v0[16] = v7;
  *v7 = v0;
  v7[1] = sub_100364734;
  return GroupActivitiesManager.initiateSession(with:)((uint64_t)v1);
}

uint64_t sub_100364734(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v3 = *(void **)(*(_QWORD *)v1 + 112);
  *(_BYTE *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc(v2);

  swift_release();
  return swift_task_switch(sub_1003647A0, 0, 0);
}

uint64_t sub_1003647A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  _OWORD v9[2];
  uint64_t v10;

  v1 = *(void **)(v0 + 112);
  if ((*(_BYTE *)(v0 + 144) & 1) != 0)
  {

    v2 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD **)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 80);
    *v4 = v1;
    swift_storeEnumTagMultiPayload(v4, v6, 0);
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    v7 = v1;
    PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)((uint64_t)v4, (uint64_t)v9, 2, 0, 0, 1, 0, 1, v5, 0);
    v8 = (_QWORD *)swift_task_alloc(dword_1011D86D4);
    *(_QWORD *)(v0 + 136) = v8;
    *v8 = v0;
    v8[1] = sub_10036488C;
    return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 96), 0);
  }
}

uint64_t sub_10036488C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 136));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_100365A40;
  }
  else
  {
    v2 = sub_1003648F8;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003648F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);

  sub_10005B748(v1, type metadata accessor for PlaybackIntentDescriptor);
  v2 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036494C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __n128 v11;
  char *v12;
  char *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v5 = v4[4];
  v6 = v4[5];
  v7 = type metadata accessor for SourcedPlaybackIntent(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_unknownObjectRelease(v4[2]);
  v12 = (char *)v4 + v9;
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(v12, v5, v11);
  v13 = &v12[*(int *)(v7 + 36)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v17 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v17);
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (EnumCaseMultiPayload == 1
    || !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, AssociatedTypeWitness))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, AssociatedTypeWitness);
  }
  v20 = (char *)v4 + v10;
  v21 = *(_QWORD *)((char *)v4 + v10 + 8);
  if (v21)
  {
    swift_bridgeObjectRelease(v21);
    v22 = *((_QWORD *)v20 + 3);
    if (v22 >> 60 != 15)
      sub_1000652DC(*((_QWORD *)v20 + 2), v22);
  }
  v23 = (v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  v24 = v23 + 8;

  return swift_deallocObject(v4, v24);
}

uint64_t sub_100364A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v6 = *(_QWORD *)(type metadata accessor for SourcedPlaybackIntent(0, v4[4], v4[5], a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v4[3];
  v17 = v4[2];
  v9 = (uint64_t)v4 + v7;
  v10 = (_QWORD *)((char *)v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  v15 = (_QWORD *)swift_task_alloc(dword_1011AE624);
  *(_QWORD *)(v5 + 16) = v15;
  *v15 = v5;
  v15[1] = sub_10006AEE4;
  return sub_1003644CC(a1, v17, v8, v9, v11, v12, v13, v14);
}

uint64_t sub_100364B84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_1000A0168(a3, a4);
  }
  return result;
}

void *sub_100364BBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t WitnessTable;
  __n128 v26;
  Class isa;
  int v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v33 = a4;
  v32 = a3;
  v34 = a1;
  v10 = *(_QWORD *)(a5 + 16);
  v9 = *(_QWORD *)(a5 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v14 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v30 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v30 - v17, v5 + *(int *)(a5 + 36), v14, v16);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v18, v10, v9);
  if (v19)
  {
    v6 = (void *)v19;
    if (a2)
    {
      v31 = v14;
      swift_bridgeObjectRetain();
      v21 = v32;
      v22 = v33;
      sub_1000A0168(v32, v33);
      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "setPlayActivityFeatureName:", v23);

      if (v22 >> 60 == 15)
      {
        sub_10036596C(v34, a2, v21, v22);
      }
      else
      {
        sub_100079DE4(v21, v22);
        isa = Data._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v6, "setPlayActivityRecommendationData:", isa);
        sub_10036596C(v34, a2, v21, v22);

        sub_1000822B4(v21, v22);
      }
      v14 = v31;
    }
    v28 = *(unsigned __int8 *)(v5 + *(int *)(a5 + 40));
    if (v28 == 2)
      objc_msgSend(v6, "setShuffleMode:", -1);
    else
      objc_msgSend(v6, "setShuffleMode:", (v28 & 1) != 0);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    v24 = _s5ErrorOMa(0, v10, v9, v20);
    WitnessTable = swift_getWitnessTable(&unk_100EB6798, v24);
    swift_allocError(v24, WitnessTable, 0, 0);
    swift_willThrow(v26);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return v6;
}

uint64_t sub_100364E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[6] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[7] = v10;
  v7[8] = v11;
  return swift_task_switch(sub_100364E88, v10, v11);
}

uint64_t sub_100364E88()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t **v3;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v1 = (void *)qword_10124C798;
  v0[9] = qword_10124C798;
  v2 = dword_1011D86D4;
  v1;
  v3 = (uint64_t **)swift_task_alloc(v2);
  v0[10] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_100364F1C;
  return PlaybackController.add(_:route:)(v0[2], v0[3]);
}

uint64_t sub_100364F1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 64);
    v6 = sub_100364FCC;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 64);
    v6 = sub_100364F88;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100364F88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  if (v1)
    (*(void (**)(uint64_t))(v0 + 32))(1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100364FCC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));

  v3 = *(_QWORD *)(v0 + 88);
  if (v2)
    (*(void (**)(_QWORD))(v0 + 32))(0);
  swift_errorRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10036502C()
{
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  qword_1011AE618 = qword_10124C798;
  return (id)qword_10124C798;
}

id sub_100365074@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_10119BF28 != -1)
    swift_once(&qword_10119BF28, sub_10036502C);
  v2 = (void *)qword_1011AE618;
  *a1 = qword_1011AE618;
  return v2;
}

uint64_t sub_1003650C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_100048748(&qword_1011AE778, (uint64_t (*)(uint64_t))type metadata accessor for PlaybackController, (uint64_t)&protocol conformance descriptor for NSObject);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void (*EnvironmentValues.playbackController.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  unint64_t v3;

  a1[2] = v1;
  v3 = sub_1001545F4();
  a1[3] = v3;
  EnvironmentValues.subscript.getter(a1, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v3);
  return sub_100365178;
}

void sub_100365178(uint64_t a1, char a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v6;

  v2 = *(id *)a1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  v3 = a1 + 8;
  v4 = *(_QWORD *)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    v6 = v2;
    EnvironmentValues.subscript.setter(v3, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v4);

  }
  else
  {
    EnvironmentValues.subscript.setter(a1 + 8, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v4);
  }
}

uint64_t _s11CoordinatorCMa()
{
  return objc_opt_self(_TtCE5MusicC9MusicCore18PlaybackController11Coordinator);
}

ValueMetadata *_s28PlaybackControllerContextKeyVMa()
{
  return &_s28PlaybackControllerContextKeyVN;
}

uint64_t sub_100365228()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124CE40);
  sub_100048B14(v0, (uint64_t)qword_10124CE40);
  return static Logger.music(_:)(0x6C50206F65646956, 0xEE006B6361627961);
}

double sub_100365290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[2];
  uint8_t *v40;
  uint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v47 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v46 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v39 - v10;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v49) = 6;
  v16 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v16) & 1) != 0)
  {
    v18 = Logger.playbackController.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
    v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v45 = a1;
    v19 = v44(v11, a1, v6);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v42 = v20;
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v49 = v41;
      v43 = v2;
      *(_DWORD *)v22 = 136446210;
      v39[1] = v22 + 4;
      v40 = v22;
      v23 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v6, v23);
      v26 = v25;
      v48 = sub_100322200(v24, v25, &v49);
      v2 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
      v27 = swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v11, v6, v27);
      v20 = v42;
      v28 = v21;
      v29 = v40;
      _os_log_impl((void *)&_mh_execute_header, v42, v28, "Performing segue with URL=%{public}s", v40, 0xCu);
      v30 = v41;
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v31 = type metadata accessor for TaskPriority(0);
    v32 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v47, 1, 1, v31);
    v33 = v46;
    v44(v46, v45, v6);
    type metadata accessor for MainActor(0);
    v34 = swift_retain();
    v35 = static MainActor.shared.getter(v34);
    v36 = *(unsigned __int8 *)(v7 + 80);
    v37 = (v36 + 40) & ~v36;
    v38 = (char *)swift_allocObject(&unk_1010C1620, v37 + v8, v36 | 7);
    *((_QWORD *)v38 + 2) = v35;
    *((_QWORD *)v38 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v38 + 4) = v2;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v38[v37], v33, v6);
    sub_100166D14(v32, (uint64_t)&unk_1011AE788, (uint64_t)v38);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10036561C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100365698(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011AE784);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_100363C48(a1, v5, v6, v7, v8);
}

uint64_t sub_10036572C(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for PresentationKind(a2, a1);
  return a2;
}

uint64_t sub_100365768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B69E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003657B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B69E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003657F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(id *)(a1 + 48);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *sub_100365848(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = (void *)a1[6];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);

  return a1;
}

uint64_t sub_100365898()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1003658E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011AE79C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100363BD0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t _s5ErrorOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s5ErrorOMn);
}

uint64_t sub_10036596C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return sub_1000822B4(a3, a4);
  }
  return result;
}

uint64_t sub_1003659A4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003659E4 + 4 * byte_100EB6660[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100365A04 + 4 * byte_100EB6665[v4]))();
}

_BYTE *sub_1003659E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100365A04(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100365A0C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100365A14(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100365A1C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100365A24(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_100365A30(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EB6770, a1);
}

id sub_100365A44(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  __int128 v30;
  objc_super v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _QWORD *v37;
  void *v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v1[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___headerRegistration];
  v11 = sub_100007E8C(&qword_1011A37B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &v1[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___listCellRegistration];
  v13 = sub_100007E8C(&qword_1011AE898);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___searchController] = 0;
  type metadata accessor for MusicLibrary(0);
  v14 = v1;
  v32 = static MusicLibrary.shared.getter(v14);
  v33 = a1;
  v34 = 0;
  v35 = 0xE000000000000000;
  v36 = 16974083;
  v37 = _swiftEmptyArrayStorage;
  v38 = &_swiftEmptySetSingleton;
  v39 = 7;
  v40 = 0;
  v41 = 0xE000000000000000;
  v42 = _swiftEmptyArrayStorage;
  v15 = sub_100007E8C((uint64_t *)&unk_1011AE8A0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController] = sub_10018C750((uint64_t)&v32);

  v31.receiver = v14;
  v31.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v31, "initWithNibName:bundle:", 0, 0);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x7365726E6547, 0xE600000000000000);
  static Locale.current.getter(v17);
  String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setTitle:", v18, swift_bridgeObjectRelease().n128_f64[0]);

  v19 = v16;
  UIViewController.playActivityFeatureIdentifier.setter(5u);

  v20 = sub_100007E8C(&qword_1011A1750);
  v21 = swift_allocObject(v20, 48, 7);
  v30 = xmmword_100EA7AA0;
  *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
  v22 = sub_10018D478();
  *(_QWORD *)(v21 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v21 + 40) = v22;
  v23 = v19;
  v24 = UIViewController.registerForTraitChanges<A>(_:handler:)(v21, sub_10036832C, 0, ObjectType);
  swift_unknownObjectRelease(v24);

  swift_bridgeObjectRelease();
  v25 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v25 + 16) = v30;
  v26 = sub_10013ADBC();
  *(_QWORD *)(v25 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v25 + 40) = v26;
  v27 = v23;
  v28 = UIViewController.registerForTraitChanges<A>(_:handler:)(v25, sub_100368330, 0, ObjectType);
  swift_unknownObjectRelease(v28);
  swift_bridgeObjectRelease();

  return v27;
}

uint64_t sub_100365D88()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD v15[4];
  _QWORD v16[4];
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, "viewDidLoad");
  v1 = sub_100365F08();
  v2 = sub_100365F08();
  v3 = sub_1005AEDD4((uint64_t)v2, 0, 0, 0, 0, 0);

  objc_msgSend(v1, "setCollectionViewLayout:", v3);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController];
  v5 = swift_allocObject(&unk_1010C1798, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v0);
  v6 = *(_QWORD *)(v4 + 104);
  v7 = *(_QWORD *)(v4 + 112);
  *(_QWORD *)(v4 + 104) = sub_100368BF8;
  *(_QWORD *)(v4 + 112) = v5;
  sub_10004BA30(v6, v7);
  v8 = sub_1003664D0();
  v9 = swift_allocObject(&unk_1010C1798, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v0);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v8 + 72) = sub_100368C00;
  *(_QWORD *)(v8 + 80) = v9;
  sub_10004BA30(v10, v11);
  swift_release();
  v15[3] = sub_100007E8C(&qword_1011A37B0);
  v12 = sub_100049F68(v15);
  sub_100366750((uint64_t)v12);
  v16[3] = sub_100007E8C(&qword_1011AE898);
  v13 = sub_100049F68(v16);
  sub_100366944((uint64_t)v13);
  return swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
}

id sub_100365F08()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  id result;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double Width;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  _BYTE v45[16];
  objc_super v46;
  objc_super v47;
  objc_super v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___collectionView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___collectionView];
  if (v11)
  {
    v12 = *(id *)&v1[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___collectionView];
LABEL_8:
    v44 = v11;
    return v12;
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v14);
  v15 = v13;
  v16 = sub_1001089FC(v15, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v48.receiver = v16;
    v48.super_class = v14;
    objc_msgSendSuper2(&v48, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v47.receiver = v16;
    v47.super_class = v14;
    objc_msgSendSuper2(&v47, "setFrame:", v20, v22, v24, v26);
    v49.origin.x = v28;
    v49.origin.y = v30;
    v49.size.width = v32;
    v49.size.height = v34;
    Width = CGRectGetWidth(v49);
    v46.receiver = v16;
    v46.super_class = v14;
    objc_msgSendSuper2(&v46, "frame");
    if (Width != CGRectGetWidth(v50))
      sub_100108B5C();
    objc_msgSend(v16, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "addSubview:", v16);

      objc_msgSend(v16, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v16, "setDataSource:", v1);
      objc_msgSend(v16, "setDelegate:", v1);
      objc_msgSend(v16, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v16, "setKeyboardDismissMode:", 1);
      objc_msgSend(v16, "setAllowsFocus:", 1);
      objc_msgSend(v16, "setRemembersLastFocusedIndexPath:", 1);
      v45[15] = 0;
      v37 = sub_10004D63C();
      v38 = v16;
      objc_msgSend(v38, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v37) & 1);

      v39 = AccessibilityIdentifier.libraryGenresView.unsafeMutableAddressor();
      v40 = *v39;
      v41 = v39[1];
      swift_bridgeObjectRetain();
      v42 = UIView.withAccessibilityIdentifier(_:)(v40, v41);

      swift_bridgeObjectRelease(v41);
      v43 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v42;
      v12 = v42;

      v11 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003662B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  char v21;
  __n128 v22;
  char v23;
  _BYTE v25[24];

  v4 = sub_100007E8C(&qword_1011AE8B0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C((uint64_t *)&unk_1011CF3E0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v12 = (void *)result;
    sub_10004A160(a1, (uint64_t)v6, &qword_1011AE8B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return sub_10004FF60((uint64_t)v6, &qword_1011AE8B0);
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    objc_msgSend(v12, "setNeedsUpdateContentUnavailableConfiguration");
    v13 = sub_100365F08();
    objc_msgSend(v13, "reloadData");

    v14 = sub_1003664D0();
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      v15 = (uint64_t *)(*(_QWORD *)(sub_1003664D0() + 104)
                      + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
      v16 = v15[1];
      if (v16)
      {
        v17 = *v15;
        swift_release();
        v18 = HIBYTE(v16) & 0xF;
        if ((v16 & 0x2000000000000000) == 0)
          v18 = v17 & 0xFFFFFFFFFFFFLL;
        v19 = v18 != 0;
        v20 = *(unsigned __int8 *)(v14 + 48);
        *(_BYTE *)(v14 + 48) = v19;
        if (v20 == v19)
          goto LABEL_12;
      }
      else
      {
        swift_release();
        v23 = *(_BYTE *)(v14 + 48);
        *(_BYTE *)(v14 + 48) = 0;
        if ((v23 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      v21 = *(_BYTE *)(v14 + 48);
      *(_BYTE *)(v14 + 48) = 1;
      if ((v21 & 1) != 0)
      {
LABEL_12:

        v22 = swift_release();
        return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v22);
      }
    }
    sub_100409F58();
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1003664D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___searchController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___searchController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___searchController];
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v4, 121, 7);
    v5 = v0;
    v2 = sub_10040A500(0, 0, 0, (uint64_t)v5);

    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double sub_100366568(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _OWORD v37[5];
  uint64_t v38;

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController);
    swift_retain();

    if (a2)
      v10 = a1;
    else
      v10 = 0;
    v11 = 0xE000000000000000;
    if (a2)
      v11 = a2;
    v33 = v11;
    v34 = v10;
    swift_beginAccess(v9 + 16, v35, 1, 0);
    v12 = *(_QWORD *)(v9 + 16);
    v30 = *(_BYTE *)(v9 + 48);
    v27 = *(_BYTE *)(v9 + 49);
    v28 = *(_BYTE *)(v9 + 24);
    v25 = *(_BYTE *)(v9 + 50);
    v13 = *(_BYTE *)(v9 + 51);
    v14 = *(_QWORD *)(v9 + 56);
    v15 = *(_QWORD *)(v9 + 64);
    v16 = *(_BYTE *)(v9 + 72);
    v18 = *(_QWORD *)(v9 + 80);
    v17 = *(_QWORD *)(v9 + 88);
    v19 = *(_QWORD *)(v9 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
    v20 = *(_OWORD *)(v9 + 16);
    v21 = *(_OWORD *)(v9 + 32);
    v22 = *(_OWORD *)(v9 + 48);
    v23 = *(_OWORD *)(v9 + 80);
    v37[3] = *(_OWORD *)(v9 + 64);
    v37[4] = v23;
    v29 = *(_QWORD *)(v9 + 88);
    v38 = *(_QWORD *)(v9 + 96);
    v24 = v38;
    v37[1] = v21;
    v37[2] = v22;
    v37[0] = v20;
    v32 = *(_QWORD *)(v9 + 40);
    v31 = *(_QWORD *)(v9 + 56);
    v26 = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v9 + 16) = v12;
    *(_BYTE *)(v9 + 24) = v28;
    *(_QWORD *)(v9 + 32) = v34;
    *(_QWORD *)(v9 + 40) = v33;
    *(_BYTE *)(v9 + 48) = v30;
    *(_BYTE *)(v9 + 49) = v27;
    *(_BYTE *)(v9 + 50) = v25;
    *(_BYTE *)(v9 + 51) = v13;
    *(_QWORD *)(v9 + 56) = v14;
    *(_QWORD *)(v9 + 64) = v15;
    *(_BYTE *)(v9 + 72) = v16;
    *(_QWORD *)(v9 + 80) = v18;
    *(_QWORD *)(v9 + 88) = v17;
    *(_QWORD *)(v9 + 96) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A7DE4(v37);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v32);
    swift_release();
    sub_1001820E4((uint64_t *)v37);
    sub_1001A7E50((uint64_t *)v37);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100366750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010C1798, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_100368BEC, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_100366944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C(&qword_1011AE8B8);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___listCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController____lazy_storage___listCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, &qword_1011AE8B8);
  v10 = sub_100007E8C(&qword_1011AE898);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, &qword_1011AE8B8);
  v12 = swift_allocObject(&unk_1010C1798, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v14 = type metadata accessor for Genre(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100368B8C, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, &qword_1011AE8B8);
  return swift_endAccess(v16);
}

uint64_t sub_100366C10(char a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v22[24];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for MetricsEvent.Page(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v23.receiver = v1;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidAppear:", a1 & 1, v5);
  v8 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  v9 = MetricsEvent.Page.libraryGenresList.unsafeMutableAddressor();
  sub_100166414(v9, (uint64_t)v7);
  sub_100540B34();
  v11 = v10;
  v13 = v12;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v14 = qword_10124C790;
  swift_retain();
  v15 = GroupActivitiesManager.hasJoined.getter();
  v16 = GroupActivitiesManager.participantsCount.getter();
  v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v22, 0, 0);
  v18 = *v17;
  v19 = swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v8) + 0xA0))(v7, v11, v13, v15 & 1, v16, v18, v19);

  swift_bridgeObjectRelease(v13);
  return sub_100327F1C((uint64_t)v7);
}

void sub_100366E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t KeyPath;
  unint64_t v27;
  _QWORD v28[2];
  unint64_t v29;
  _QWORD v30[5];
  _BYTE v31[24];
  _BYTE v32[24];

  v7 = sub_100007E8C((uint64_t *)&unk_1011CF3E0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3C00);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v28 - v16;
  a5 += 16;
  swift_beginAccess(a5, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v19 = (void *)Strong;
    v28[0] = a1;
    v20 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController)
                    + 112);
    v21 = swift_beginAccess(v20, v31, 0, 0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v20, 1, v7, v21))
    {

      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
    v22 = MusicLibrarySectionedResponse.sections.getter(v7);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v24 = IndexPath.section.getter(v23);
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(_QWORD *)(v22 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v24, v11);
      v25 = swift_bridgeObjectRelease(v22);
      (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 32))(v17, v14, v11, v25);
      KeyPath = swift_getKeyPath(&unk_100EB6858);
      MusicLibrarySection.subscript.getter(KeyPath, v11);
      swift_release();
      v27 = v29;
      sub_10061170C(v28[1], v29, v30);
      swift_bridgeObjectRelease(v27);
      UICollectionViewCell.contentConfiguration.setter(v30);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return;
    }
    __break(1u);
  }
}

void sub_100367098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  _BYTE v25[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE20);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v24 - v11;
  a4 += 16;
  swift_beginAccess(a4, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v14 = (void *)Strong;
    __chkstk_darwin(Strong);
    v24[-2] = a3;
    v15 = _s8TextCellVMa(0);
    v16 = sub_100368B9C();
    v17 = UIHostingConfiguration<>.init(content:)(sub_100368B94, &v24[-4], v15, v16);
    v18 = static Edge.Set.horizontal.getter(v17);
    v19 = (char *)sub_100365F08();
    v20 = *(double *)&v19[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v18, v6, v20);
    v21 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v22 = v21(v9, v6);
    v23 = static Edge.Set.vertical.getter(v22);
    v24[3] = v6;
    v24[4] = sub_100049F28((unint64_t *)&unk_1011ACE30, (uint64_t *)&unk_1011ACE20, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v24);
    UIHostingConfiguration.margins(_:_:)(v23, v6, 0.0);
    v21(v12, v6);
    UICollectionViewCell.contentConfiguration.setter(v24);

  }
}

uint64_t sub_100367278@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t);
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for Font.TextStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Genre.name.getter(v4);
  v9 = v8;
  v10 = UIFontTextStyleTitle3;
  v12 = static Color.accentColor.getter(v10, v11);
  v13 = _s8TextCellVMa(0);
  static SymbolRenderingMode.monochrome.getter();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = v7;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v12;
  v20 = 0x4044000000000000;
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v14(v6, enum case for Font.TextStyle.title(_:), v2);
  v15 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v20, v6, &type metadata for CGFloat, v15);
  v20 = 0x4028000000000000;
  v14(v6, enum case for Font.TextStyle.title3(_:), v2);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v20, v6, &type metadata for CGFloat, v15);
  v16 = (_QWORD *)((char *)a1 + *(int *)(v13 + 44));
  *v16 = swift_getKeyPath(&unk_100EB6828);
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v16, v17, 0);
}

uint64_t sub_100367658(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v14;
  char v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v7 = sub_100007E8C(&qword_1011A37B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v11 == a2 && v12 == a3)
    goto LABEL_7;
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) == 0)
  {
    strcpy((char *)v20, "Unknown kind=");
    HIWORD(v20[1]) = -4864;
    v16._countAndFlagsBits = a2;
    v16._object = a3;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v20[0], v20[1], "Music/LibraryGenresViewController.swift", 39, 2, 120, 0);
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease(a3);
  }
  sub_100366750((uint64_t)v10);
  v17 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v18 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

void *sub_1003678D4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v40[2];
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  void *v49;

  v3 = v2;
  v40[1] = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v6 = __chkstk_darwin(v5);
  v42 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v6);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v12 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AE898);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v19);
  v45 = (uint64_t)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)v40 - v22;
  sub_1008DE15C(a2, (uint64_t)v40 - v22);
  sub_100366944((uint64_t)v18);
  v46 = v23;
  v24 = (void *)sub_1009240CC((uint64_t)v18, a2, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v25 = sub_100007E8C((uint64_t *)&unk_1011AD790);
  v26 = type metadata accessor for UICellAccessory(0);
  v27 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) | 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AA0;
  v28 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for UICellAccessory.DisplayedState.always(_:), v41);
  v29 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v30 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v42, 1, 1, v29);
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v30, 0);
  static UICellAccessory.disclosureIndicator(displayed:options:)(v14, v11);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v28);
  UICollectionViewListCell.accessories.setter(v27);
  v31 = objc_msgSend(v3, "traitCollection");
  v32 = objc_msgSend(v31, "userInterfaceIdiom");

  if (v32 != (id)6)
  {
    v33 = v24;

    objc_msgSend(v33, "directionalLayoutMargins");
    objc_msgSend(v33, "setDirectionalLayoutMargins:");

  }
  v35 = v45;
  v34 = (uint64_t)v46;
  sub_10004A160((uint64_t)v46, v45, &qword_10119ED08);
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
  {
    sub_10004FF60(v35, &qword_10119ED08);
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
  }
  else
  {
    *((_QWORD *)&v48 + 1) = v36;
    v49 = &protocol witness table for Genre;
    v38 = sub_100049F68(&v47);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v37 + 32))(v38, v35, v36);
  }

  sub_10004FF60(v34, &qword_10119ED08);
  sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011A3DD0);
  return v24;
}

uint64_t sub_100367E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011AE8B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011CF3E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController)
     + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController) + 112);
  swift_beginAccess(v9, v15, 0, 0);
  sub_10004A160(v9, (uint64_t)v4, &qword_1011AE8B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, &qword_1011AE8B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      *((_QWORD *)&v13 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
      v14 = &protocol witness table for UIContentUnavailableConfiguration;
      v10 = sub_100049F68(&v12);
      sub_1008DFE38((uint64_t)v10);
      UIViewController.contentUnavailableConfiguration.setter(&v12);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  return UIViewController.contentUnavailableConfiguration.setter(&v12);
}

uint64_t sub_10036822C()
{
  return type metadata accessor for LibraryGenresViewController(0);
}

uint64_t type metadata accessor for LibraryGenresViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AE880;
  if (!qword_1011AE880)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryGenresViewController);
  return result;
}

void sub_100368270(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1001AB544(319, (unint64_t *)&unk_1011ACDB0, &qword_1011A37B0);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, &qword_1011AE890, &qword_1011AE898);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[4] = "\b";
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

uint64_t *sub_100368334(char *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _BYTE v23[24];
  _OWORD v24[2];
  _BYTE v25[32];
  _BYTE v26[24];

  v1 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController];
  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10018D478();
  UITraitCollection.subscript.getter(v24, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v3);

  v4 = *(_QWORD *)&v24[0];
  v5 = sub_1007607C4(*(uint64_t *)&v24[0]);
  swift_bridgeObjectRelease(v4);
  swift_beginAccess(v1 + 16, v23, 1, 0);
  v6 = *(_OWORD *)(v1 + 48);
  v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)&v25[16] = *(_OWORD *)(v1 + 64);
  *(_OWORD *)v26 = v7;
  *(_OWORD *)v25 = v6;
  v8 = *(_OWORD *)(v1 + 32);
  v24[0] = *(_OWORD *)(v1 + 16);
  v24[1] = v8;
  v10 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)&v26[16] = *(_QWORD *)(v1 + 96);
  v9 = *(_QWORD *)&v26[16];
  v11 = v25[24];
  v12 = BYTE2(v6);
  v13 = BYTE3(v6);
  v14 = v6;
  v15 = BYTE1(v6);
  v16 = v8;
  v17 = *(_QWORD *)(v1 + 40);
  v18 = *(_QWORD *)(v1 + 56);
  v19 = *(_QWORD *)(v1 + 64);
  v20 = *(_OWORD *)&v25[8];
  v21 = *(_OWORD *)&v26[8];
  *(_QWORD *)(v1 + 16) = *(_QWORD *)&v24[0];
  *(_BYTE *)(v1 + 24) = v5 & 1;
  *(_OWORD *)(v1 + 32) = v16;
  *(_BYTE *)(v1 + 48) = v14;
  *(_BYTE *)(v1 + 49) = v15;
  *(_BYTE *)(v1 + 50) = v12;
  *(_BYTE *)(v1 + 51) = v13;
  *(_OWORD *)(v1 + 56) = v20;
  *(_BYTE *)(v1 + 72) = v11;
  *(_QWORD *)(v1 + 80) = v7;
  *(_OWORD *)(v1 + 88) = v21;
  sub_1001A7DE4(v24);
  sub_1001A7DE4(v24);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_release();
  sub_1001820E4((uint64_t *)v24);
  return sub_1001A7E50((uint64_t *)v24);
}

uint64_t *sub_1003684B4(char *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE v27[24];
  _OWORD v28[3];
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController];
  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v28, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v3);

  v4 = *(_QWORD *)&v28[0];
  swift_beginAccess(v1 + 16, v27, 1, 0);
  v5 = *(_BYTE *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 49);
  v10 = *(_BYTE *)(v1 + 50);
  v11 = *(_BYTE *)(v1 + 51);
  v12 = *(_QWORD *)(v1 + 56);
  v14 = *(_BYTE *)(v1 + 72);
  v15 = *(_OWORD *)(v1 + 16);
  v16 = *(_OWORD *)(v1 + 32);
  v17 = *(_OWORD *)(v1 + 48);
  v18 = *(_OWORD *)(v1 + 80);
  v29 = *(_OWORD *)(v1 + 64);
  v13 = v29;
  v30 = v18;
  v19 = *(_QWORD *)(v1 + 80);
  v20 = *(_QWORD *)(v1 + 88);
  v31 = *(_QWORD *)(v1 + 96);
  v21 = v31;
  v28[1] = v16;
  v28[2] = v17;
  v28[0] = v15;
  v26 = *(_QWORD *)(v1 + 40);
  v22 = *(_QWORD *)(v1 + 56);
  v23 = *(_QWORD *)(v1 + 64);
  v24 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 16) = v4;
  *(_BYTE *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v6;
  *(_BYTE *)(v1 + 48) = v8;
  *(_BYTE *)(v1 + 49) = v9;
  *(_BYTE *)(v1 + 50) = v10;
  *(_BYTE *)(v1 + 51) = v11;
  *(_QWORD *)(v1 + 56) = v12;
  *(_QWORD *)(v1 + 64) = v13;
  *(_BYTE *)(v1 + 72) = v14;
  *(_QWORD *)(v1 + 80) = v19;
  *(_QWORD *)(v1 + 88) = v20;
  *(_QWORD *)(v1 + 96) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A7DE4(v28);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v26);
  swift_release();
  sub_1001820E4((uint64_t *)v28);
  return sub_1001A7E50((uint64_t *)v28);
}

uint64_t sub_100368644(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26[8];
  char v27[24];

  v24 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACAE0);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3C00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011CF3E0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music27LibraryGenresViewController_responseController) + 112);
  v14 = swift_beginAccess(v13, v27, 0, 0);
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v13, 1, v9, v14))
    return v15;
  v16 = v5;
  v17 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v18 = MusicLibrarySectionedResponse.sections.getter(v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v18 + 16) > v24)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24, v16);
    v20 = swift_bridgeObjectRelease(v18);
    MusicLibrarySection.items.getter(v16, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    v21 = sub_100049F28((unint64_t *)&unk_1011AE8F0, (uint64_t *)&unk_1011ACAE0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v17);
    dispatch thunk of Collection.endIndex.getter(&v25, v17, v21);
    v15 = dispatch thunk of Collection.distance(from:to:)(v26, &v25, v17, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v17);
    return v15;
  }
  __break(1u);
  return result;
}

void sub_1003688A8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  __n128 v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011ACE00);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119ED08);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Genre(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008DE15C(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_10119ED08);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v17 = objc_msgSend(v1, "traitCollection");
    v18 = sub_10018D478();
    UITraitCollection.subscript.getter(&v29, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v18);

    v19 = v29;
    v20 = sub_1007607C4(v29);
    swift_bridgeObjectRelease(v19);
    v21 = objc_allocWithZone((Class)type metadata accessor for LibraryAlbumsViewController(0));
    sub_100745220((uint64_t)v9, v20 & 1);
    v23 = v22;
    v24 = objc_msgSend(v2, "navigationController");
    if (v24)
    {
      v26 = v24;
      UIViewController.traitOverrides.getter(v25);
      v27 = type metadata accessor for UITraitOverrides(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 0, 1, v27);
      UINavigationController.push(_:traitOverrides:animated:)(v23, (uint64_t)v6, 1);

      sub_10004FF60((uint64_t)v6, &qword_1011ACE00);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);

    }
  }
}

uint64_t sub_100368B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100368B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100367098(a1, a2, a3, v3);
}

uint64_t sub_100368B94@<X0>(_QWORD *a1@<X8>)
{
  return sub_100367278(a1);
}

unint64_t sub_100368B9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AE8D0;
  if (!qword_1011AE8D0)
  {
    v1 = _s8TextCellVMa(255);
    result = swift_getWitnessTable(&unk_100EC55FC, v1);
    atomic_store(result, (unint64_t *)&qword_1011AE8D0);
  }
  return result;
}

void sub_100368BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100366E4C(a1, a2, a3, a4, v4);
}

uint64_t sub_100368BF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1003662B4(a1, v1);
}

double sub_100368C00(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_100366568(a1, a2, v2);
}

uint64_t sub_100368C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  __n128 v58;
  void (*v59)(char *, uint64_t, __n128);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, __n128);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v69 = type metadata accessor for Logger(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v67 = (char *)&v61 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for UploadedVideo(0);
  v65 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v64 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for UploadedAudio(0);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for RecordLabel(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for RadioShow(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for TVShow(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for TVSeason(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for TVEpisode(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for Station(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for Song(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v95 = *(_QWORD *)(v10 - 8);
  v96 = v10;
  __chkstk_darwin(v10);
  v94 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v98 = *(_QWORD *)(v12 - 8);
  v99 = v12;
  __chkstk_darwin(v12);
  v97 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicMovie(0);
  v101 = *(_QWORD *)(v14 - 8);
  v102 = v14;
  __chkstk_darwin(v14);
  v100 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Genre(0);
  v104 = *(_QWORD *)(v16 - 8);
  v105 = v16;
  __chkstk_darwin(v16);
  v103 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for EditorialItem(0);
  v107 = *(_QWORD *)(v18 - 8);
  v108 = v18;
  __chkstk_darwin(v18);
  v106 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Curator(0);
  v109 = *(_QWORD *)(v20 - 8);
  v110 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Artist(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Album(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for GenericMusicItem(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v63 = (char *)&v61 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v34);
  v37 = (char *)&v61 - v36;
  v62 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v32 + 16);
  v62((char *)&v61 - v36, v111, v31, v35);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v37, v31);
  if (v38 != enum case for GenericMusicItem.album(_:))
  {
    if (v38 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v37, v23);
      v39 = EditorialVideoArtworkVending.editorialVideoArtworks.getter(v23, &protocol witness table for Artist);
      v40 = *(void (**)(char *, uint64_t))(v24 + 8);
      v41 = v26;
      v42 = v23;
LABEL_5:
      v40(v41, v42);
      return v39;
    }
    if (v38 == enum case for GenericMusicItem.composer(_:) || v38 == enum case for GenericMusicItem.creditArtist(_:))
      goto LABEL_9;
    if (v38 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
      v45 = v109;
      v44 = v110;
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v22, v37, v110);
      v39 = EditorialVideoArtworkVending.editorialVideoArtworks.getter(v44, &protocol witness table for Curator);
      v40 = *(void (**)(char *, uint64_t))(v45 + 8);
      v41 = v22;
    }
    else
    {
      if (v38 == enum case for GenericMusicItem.editorialItem(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
        v46 = v106;
        v47 = v107;
        v44 = v108;
        (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v37, v108);
        v48 = &protocol witness table for EditorialItem;
      }
      else if (v38 == enum case for GenericMusicItem.genre(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
        v46 = v103;
        v47 = v104;
        v44 = v105;
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v37, v105);
        v48 = &protocol witness table for Genre;
      }
      else if (v38 == enum case for GenericMusicItem.musicMovie(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
        v46 = v100;
        v47 = v101;
        v44 = v102;
        (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v100, v37, v102);
        v48 = &protocol witness table for MusicMovie;
      }
      else if (v38 == enum case for GenericMusicItem.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
        v46 = v97;
        v47 = v98;
        v44 = v99;
        (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v37, v99);
        v48 = &protocol witness table for MusicVideo;
      }
      else if (v38 == enum case for GenericMusicItem.playlist(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
        v46 = v94;
        v47 = v95;
        v44 = v96;
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v37, v96);
        v48 = &protocol witness table for Playlist;
      }
      else if (v38 == enum case for GenericMusicItem.radioShow(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
        v47 = v92;
        v46 = v91;
        v44 = v93;
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v37, v93);
        v48 = &protocol witness table for RadioShow;
      }
      else if (v38 == enum case for GenericMusicItem.recordLabel(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
        v47 = v89;
        v46 = v88;
        v44 = v90;
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v37, v90);
        v48 = &protocol witness table for RecordLabel;
      }
      else
      {
        if (v38 == enum case for GenericMusicItem.socialProfile(_:))
        {
LABEL_9:
          (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
          return 0;
        }
        if (v38 == enum case for GenericMusicItem.song(_:))
        {
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
          v47 = v86;
          v46 = v85;
          v44 = v87;
          (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v37, v87);
          v48 = &protocol witness table for Song;
        }
        else if (v38 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
          v47 = v83;
          v46 = v82;
          v44 = v84;
          (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v37, v84);
          v48 = &protocol witness table for Station;
        }
        else if (v38 == enum case for GenericMusicItem.tvEpisode(_:))
        {
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
          v47 = v80;
          v46 = v79;
          v44 = v81;
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v37, v81);
          v48 = &protocol witness table for TVEpisode;
        }
        else if (v38 == enum case for GenericMusicItem.tvSeason(_:))
        {
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
          v47 = v77;
          v46 = v76;
          v44 = v78;
          (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v37, v78);
          v48 = &protocol witness table for TVSeason;
        }
        else if (v38 == enum case for GenericMusicItem.tvShow(_:))
        {
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
          v47 = v74;
          v46 = v73;
          v44 = v75;
          (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v37, v75);
          v48 = &protocol witness table for TVShow;
        }
        else if (v38 == enum case for GenericMusicItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
          v47 = v71;
          v46 = v70;
          v44 = v72;
          (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v37, v72);
          v48 = &protocol witness table for UploadedAudio;
        }
        else
        {
          if (v38 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v38 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
              swift_bridgeObjectRelease();
            }
            else
            {
              v49 = Logger.musicKit.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v49, v69);
              v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v62)(v63, v111, v31);
              v51 = Logger.logObject.getter(v50);
              v52 = static os_log_type_t.error.getter(v51);
              LODWORD(v111) = v52;
              if (os_log_type_enabled(v51, v52))
              {
                v53 = swift_slowAlloc(22, -1);
                v110 = swift_slowAlloc(64, -1);
                v113 = v110;
                *(_DWORD *)v53 = 136446466;
                v112 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v113);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
                *(_WORD *)(v53 + 12) = 2082;
                v54 = sub_1000FDBCC();
                v55 = v63;
                v56 = dispatch thunk of CustomStringConvertible.description.getter(v31, v54);
                v112 = sub_100322200(v56, v57, &v113);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
                v58 = swift_bridgeObjectRelease();
                v59 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
                v59(v55, v31, v58);
                _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v111, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v53, 0x16u);
                v60 = v110;
                swift_arrayDestroy(v110, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v60, -1, -1);
                swift_slowDealloc(v53, -1, -1);
              }
              else
              {
                v59 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
                ((void (*)(char *, uint64_t))v59)(v63, v31);
              }

              (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
              ((void (*)(char *, uint64_t))v59)(v37, v31);
            }
            return 0;
          }
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
          v47 = v65;
          v46 = v64;
          v44 = v66;
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v37, v66);
          v48 = &protocol witness table for UploadedVideo;
        }
      }
      v39 = EditorialVideoArtworkVending.editorialVideoArtworks.getter(v44, v48);
      v40 = *(void (**)(char *, uint64_t))(v47 + 8);
      v41 = v46;
    }
    v42 = v44;
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v31);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v37, v27);
  v39 = EditorialVideoArtworkVending.editorialVideoArtworks.getter(v27, &protocol witness table for Album);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  return v39;
}

uint64_t sub_1003699EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, v2, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for GenericMusicItem.artist(_:))
  {
    if (qword_10119C298 != -1)
      swift_once(&qword_10119C298, sub_10059BC1C);
    v10 = type metadata accessor for EditorialVideoArtworkFlavor(0);
    v11 = sub_100048B14(v10, (uint64_t)static EditorialVideoArtworkFlavor.motionArtistFullscreen16x9);
    v12 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1, v11, v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  if (v9 != enum case for GenericMusicItem.curator(_:) && v9 != enum case for GenericMusicItem.radioShow(_:))
  {
    v18 = type metadata accessor for EditorialVideoArtworkFlavor(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (qword_10119C2A0 != -1)
    swift_once(&qword_10119C2A0, sub_10059BC5C);
  v14 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v15 = sub_100048B14(v14, (uint64_t)static EditorialVideoArtworkFlavor.epicStageVideo16x9);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a1, v15, v14);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v14);
}

double sub_100369BDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_10079C294(a1), (v6 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_100369C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_10079C2C4(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

void sub_100369C80(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  unint64_t v6;
  char v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = 0uLL;
  if (*(_QWORD *)(a2 + 16))
  {
    v6 = sub_10079CB24(a1);
    if ((v7 & 1) != 0)
    {
      v8 = (unsigned __int8 *)(*(_QWORD *)(a2 + 56) + 48 * v6);
      v9 = *v8;
      v12 = *(_OWORD *)(v8 + 8);
      v13 = *(_OWORD *)(v8 + 24);
      v10 = *((_QWORD *)v8 + 5);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v4 = v12;
      v11 = v13;
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0uLL;
      v4 = 0uLL;
    }
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = 0uLL;
  }
  *(_QWORD *)a3 = v9;
  *(_OWORD *)(a3 + 8) = v4;
  *(_OWORD *)(a3 + 24) = v11;
  *(_QWORD *)(a3 + 40) = v10;
}

void sub_100369D38(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  char *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  __n128 v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  __n128 v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v72;
  char *v73;
  os_log_t v74;
  int v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  void (*v81)(_QWORD, _QWORD, _QWORD);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v5 = type metadata accessor for MusicPlayActivityFields(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v72 - v10;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v72 - v14;
  v16 = (*(uint64_t (**)(__n128))(v2 + 16))(v13);
  if (v16)
  {
    v18 = v16;
    v19 = v17;
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v20 = type metadata accessor for Logger(0);
    sub_100048B14(v20, (uint64_t)qword_10124D980);
    v79 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v79(v15, a2, v5);
    v21 = a1;
    swift_unknownObjectRetain_n(v18, 2);
    v22 = (void (*)(char *, uint64_t, uint64_t))v21;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc(32, -1);
      v73 = v11;
      v27 = v26;
      v76 = swift_slowAlloc(96, -1);
      v83 = v76;
      *(_DWORD *)v27 = 136446722;
      v75 = v25;
      v28 = v22;
      v80 = v6;
      v29 = v28;
      v30 = objc_msgSend(v28, "description");
      v74 = v23;
      v31 = v19;
      v32 = v30;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v77 = v22;
      v78 = a2;
      v34 = v33;
      v36 = v35;

      v19 = v31;
      v81 = (void (*)(_QWORD, _QWORD, _QWORD))sub_100322200(v34, v36, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);

      v37 = swift_bridgeObjectRelease(v36);
      *(_WORD *)(v27 + 12) = 2082;
      v38 = v73;
      ((void (*)(char *, char *, uint64_t, __n128))v79)(v73, v15, v5, v37);
      v39 = String.init<A>(describing:)(v38, v5);
      v41 = v40;
      v81 = (void (*)(_QWORD, _QWORD, _QWORD))sub_100322200(v39, v40, &v83);
      v22 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
      v42 = swift_bridgeObjectRelease(v41);
      (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v15, v5, v42);
      *(_WORD *)(v27 + 22) = 2082;
      v81 = (void (*)(_QWORD, _QWORD, _QWORD))v18;
      v82 = v19;
      swift_unknownObjectRetain(v18, v43);
      v44 = sub_100007E8C(&qword_1011AEBB8);
      v45 = String.init<A>(describing:)(&v81, v44);
      v47 = v46;
      v81 = (void (*)(_QWORD, _QWORD, _QWORD))sub_100322200(v45, v46, &v83);
      a2 = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
      swift_unknownObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease(v47);
      v48 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v75, "Pushing to viewController=%{public}s with playActivityFields=%{public}s onto resolved authority=%{public}s", (uint8_t *)v27, 0x20u);
      v49 = v76;
      swift_arrayDestroy(v76, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
      swift_unknownObjectRelease_n(v18, 2);
    }
    ObjectType = swift_getObjectType();
    dispatch thunk of MusicStackAuthorityNavigationControllerDelegate.push(_:playActivityFields:)(v22, a2, ObjectType, *(_QWORD *)(v19 + 16));
    swift_unknownObjectRelease(v18);
  }
  else
  {
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v50 = type metadata accessor for Logger(0);
    sub_100048B14(v50, (uint64_t)qword_10124D980);
    v51 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v51(v8, a2, v5);
    v52 = a1;
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter(v53);
    v55 = v54;
    if (os_log_type_enabled(v53, v54))
    {
      v56 = swift_slowAlloc(22, -1);
      v80 = v6;
      v57 = v56;
      v79 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc(64, -1);
      v81 = (void (*)(_QWORD, _QWORD, _QWORD))v79;
      *(_DWORD *)v57 = 136446466;
      LODWORD(v78) = v55;
      v58 = v52;
      v59 = objc_msgSend(v58, "description");
      v77 = v51;
      v60 = v11;
      v61 = v59;
      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      v64 = v63;

      v83 = sub_100322200(v62, v64, (uint64_t *)&v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);

      v65 = swift_bridgeObjectRelease(v64);
      *(_WORD *)(v57 + 12) = 2082;
      ((void (*)(char *, char *, uint64_t, __n128))v77)(v60, v8, v5, v65);
      v66 = String.init<A>(describing:)(v60, v5);
      v68 = v67;
      v83 = sub_100322200(v66, v67, (uint64_t *)&v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
      v69 = swift_bridgeObjectRelease(v68);
      (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v8, v5, v69);
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v78, "Failed to push to viewController=%{public}s with playActivityFields=%{public}s", (uint8_t *)v57, 0x16u);
      v70 = v79;
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1, -1);
      swift_slowDealloc(v57, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

  }
}

double sub_10036A320()
{
  return sub_10036A358("Performing pop onto resolved authority=%{public}s", &dispatch thunk of MusicStackAuthorityNavigationControllerDelegate.pop(), "Failed to pop navigation");
}

double sub_10036A33C()
{
  return sub_10036A358("Performing pop to root onto resolved authority=%{public}s", &dispatch thunk of MusicStackAuthorityNavigationControllerDelegate.popToRoot(), "Failed to pop to root");
}

double sub_10036A358(const char *a1, NSObject *a2, const char *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  double result;
  uint64_t ObjectType;
  os_log_t osloga;
  NSObject *oslog;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = (*(uint64_t (**)(void))(v3 + 16))();
  if (v7)
  {
    v9 = v7;
    v10 = v8;
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v11 = type metadata accessor for Logger(0);
    sub_100048B14(v11, (uint64_t)qword_10124D980);
    v12 = swift_unknownObjectRetain_n(v9, 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      osloga = a2;
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v32 = v10;
      v33 = v16;
      *(_DWORD *)v15 = 136446210;
      v31 = v9;
      swift_unknownObjectRetain(v9, v17);
      v18 = sub_100007E8C(&qword_1011AEBB8);
      v19 = String.init<A>(describing:)(&v31, v18);
      v21 = v20;
      v31 = sub_100322200(v19, v20, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
      swift_unknownObjectRelease_n(v9, 2);
      v22 = v21;
      a2 = osloga;
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, a1, v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(v9, 2);
    }
    ObjectType = swift_getObjectType();
    ((void (*)(uint64_t, _QWORD))a2)(ObjectType, *(_QWORD *)(v10 + 16));
    *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
  }
  else
  {
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100048B14(v23, (uint64_t)qword_10124D980);
    oslog = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v25, a3, v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
  return result;
}

uint64_t sub_10036A61C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t _s11AuthorityAICMa()
{
  return objc_opt_self(_TtCC5Music19AppInterfaceContext11AuthorityAI);
}

uint64_t initializeWithCopy for LyricsSnippetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for LyricsSnippetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  return a1;
}

__n128 initializeWithTake for JSBridge.NativeConstructionRecordInstructions(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LyricsSnippetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for LyricsSnippetData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LyricsSnippetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LyricsSnippetData()
{
  return &type metadata for LyricsSnippetData;
}

_QWORD *sub_10036A7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 16))();
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = v1;
  v4 = v2;
  ObjectType = swift_getObjectType(v1);
  v6 = dispatch thunk of MusicNavigationMetricsPathProvider.metricsPath.getter(ObjectType, *(_QWORD *)(v4 + 8));
  swift_unknownObjectRelease(v3);
  return (_QWORD *)v6;
}

uint64_t sub_10036A860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t *, uint64_t, uint64_t, __n128);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  __n128 v62;
  void (*v63)(char *, uint64_t, __n128);
  os_log_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint8_t *v67;
  os_log_t v68;
  uint64_t v69;
  uint8_t *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v72 = a2;
  v3 = type metadata accessor for MusicAppDestination(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - v8;
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v67 - v11);
  v13 = _s18AppPageDestinationOMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (uint8_t **)((char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v4 + 16);
  v18(v12, a1, v3, v15);
  v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v12, v3);
  if (v19 == enum case for MusicAppDestination.libraryArtistAlbumsPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v20 = type metadata accessor for Artist(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v12, v20);
    v21 = 4;
LABEL_17:
    swift_storeEnumTagMultiPayload(v17, v13, v21);
    v51 = v72;
    sub_10005B6C0((uint64_t)v17, v72, _s18AppPageDestinationOMa);
    v52 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v51, v52, 1, v13);
  }
  if (v19 == enum case for MusicAppDestination.libraryComposerAlbumsPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v22 = type metadata accessor for Composer(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v17, v12, v22);
    v21 = 5;
    goto LABEL_17;
  }
  if (v19 == enum case for MusicAppDestination.libraryAlbumDetailPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v23 = type metadata accessor for Album(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v17, v12, v23);
    v21 = 2;
    goto LABEL_17;
  }
  if (v19 == enum case for MusicAppDestination.libraryPlaylistDetailPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v12, v24);
    v21 = 3;
    goto LABEL_17;
  }
  if (v19 == enum case for MusicAppDestination.catalogAlbumDetailPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v25 = *(int *)(sub_100007E8C(&qword_1011AEA18) + 48);
    v26 = *(uint64_t *)((char *)v12 + v25);
    v27 = *(uint64_t *)((char *)v12 + v25 + 8);
    v28 = (_QWORD *)((char *)v17 + v25);
    v29 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v17, v12, v29);
    v21 = 0;
    *v28 = v26;
    v28[1] = v27;
    goto LABEL_17;
  }
  if (v19 == enum case for MusicAppDestination.catalogPlaylistDetailPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v30 = (uint64_t *)((char *)v12 + *(int *)(sub_100007E8C(&qword_1011AEA40) + 48));
    v31 = *v30;
    v32 = v30[1];
    v33 = sub_100007E8C(&qword_1011AEA10);
    v34 = (_QWORD *)((char *)v17 + *(int *)(v33 + 48));
    v35 = (char *)v17 + *(int *)(v33 + 64);
    v36 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v17, v12, v36);
    *v34 = v31;
    v34[1] = v32;
    v37 = type metadata accessor for URL(0);
    v21 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 1, 1, v37);
    goto LABEL_17;
  }
  if (v19 == enum case for MusicAppDestination.collaborativePlaylistDetailPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v38 = (char *)v12 + *(int *)(sub_100007E8C(&qword_1011AEA38) + 48);
    v39 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v17, v12, v39);
    v40 = sub_100007E8C(&qword_1011AEA10);
    v41 = (char *)v17 + *(int *)(v40 + 64);
    v42 = type metadata accessor for URL(0);
    v43 = *(_QWORD *)(v42 - 8);
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v38, v42);
    v44 = (_QWORD *)((char *)v17 + *(int *)(v40 + 48));
    *v44 = 0;
    v44[1] = 0;
    v21 = 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v42);
    goto LABEL_17;
  }
  if (v19 == enum case for MusicAppDestination.sharedLyrics(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v45 = *v12;
    v46 = v12[1];
    v47 = *(int *)(sub_100007E8C(&qword_1011AEA08) + 48);
    v48 = (char *)v12 + v47;
    v49 = (char *)v17 + v47;
    v50 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v49, v48, v50);
    *v17 = v45;
    v17[1] = v46;
    v21 = 6;
    goto LABEL_17;
  }
  if (qword_10119C7B0 != -1)
    swift_once(&qword_10119C7B0, sub_100779430);
  v54 = type metadata accessor for Logger(0);
  sub_100048B14(v54, (uint64_t)qword_10124D980);
  v55 = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v9, a1, v3);
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.error.getter();
  v71 = v57;
  if (os_log_type_enabled(v56, v57))
  {
    v70 = (uint8_t *)swift_slowAlloc(12, -1);
    v69 = swift_slowAlloc(32, -1);
    v74 = v69;
    v68 = v56;
    v58 = v70;
    *(_DWORD *)v70 = 136446210;
    v67 = v58 + 4;
    ((void (*)(char *, char *, uint64_t))v18)(v6, v9, v3);
    v59 = String.init<A>(describing:)(v6, v3);
    v61 = v60;
    v73 = sub_100322200(v59, v60, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
    v62 = swift_bridgeObjectRelease(v61);
    v63 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v63(v9, v3, v62);
    v64 = v68;
    v65 = v70;
    _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v71, "Unhandled MUI Destination=%{public}s", v70, 0xCu);
    v66 = v69;
    swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v65, -1, -1);

  }
  else
  {

    v63 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    ((void (*)(char *, uint64_t))v63)(v9, v3);
  }
  ((void (*)(uint64_t, uint64_t))v63)(a1, v3);
  ((void (*)(uint64_t *, uint64_t))v63)(v12, v3);
  v52 = 1;
  v51 = v72;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v51, v52, 1, v13);
}

void sub_10036AF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v3, v4);
  v5 = (char *)sub_10036AFE0 + 4 * byte_100EB68B0[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_10036AFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_100007E8C(&qword_1011AEA18);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(int *)(v1 + 48) + 8));
  v2 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0, v2);
  return PlayActivityFeatureIdentifier.id.getter(0);
}

void sub_10036B13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  char *v17;
  _QWORD v18[10];
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  v19 = type metadata accessor for Composer(0);
  v18[8] = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v18[7] = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Artist(0);
  v18[5] = *(_QWORD *)(v2 - 8);
  v18[6] = v2;
  __chkstk_darwin(v2);
  v18[3] = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v18[1] = *(_QWORD *)(v4 - 8);
  v18[2] = v4;
  __chkstk_darwin(v4);
  v5 = type metadata accessor for Album(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  __chkstk_darwin(v6);
  v22 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v18[4] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v21 = (char *)v18 - v11;
  v20 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0);
  v18[9] = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v12 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
  __chkstk_darwin(v12);
  v13 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v13);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v26, (uint64_t)v15, v16);
  v17 = (char *)sub_10036B3D0 + 4 * byte_100EB68B7[swift_getEnumCaseMultiPayload(v15, v13)];
  __asm { BR              X10 }
}

void sub_10036B3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v5 = (uint64_t *)(v0 + *(int *)(sub_100007E8C(&qword_1011AEA18) + 48));
  v7 = *v5;
  v6 = v5[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v3, v0, v2);
  v8 = *(_QWORD *)(v4 - 96);
  Hasher._combine(_:)(0);
  v9 = sub_100048748(&qword_1011AEA30, (uint64_t (*)(uint64_t))&type metadata accessor for MusicAppDestination.AlbumDescriptor, (uint64_t)&protocol conformance descriptor for MusicAppDestination.AlbumDescriptor);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v9);
  if (v6)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v8, v7, v6);
    v10 = swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 8))(v3, v2, v10);
  swift_bridgeObjectRelease(v6);
}

Swift::Int sub_10036B880(uint64_t a1, uint64_t a2)
{
  return sub_100236918(a1, a2, (void (*)(_QWORD *))sub_10036B13C);
}

Swift::Int sub_10036B890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100236968(a1, a2, a3, (void (*)(_QWORD *))sub_10036B13C);
}

void sub_10036B8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *Strong;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _BYTE v15[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    goto LABEL_4;
  v8 = Strong;
  v9 = objc_msgSend(Strong, "view");

  if (!v9)
  {
    __break(1u);
    return;
  }
  v10 = UIView.findPresentationSourceView<A>(id:)(a3, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  if (!v10)
  {
LABEL_4:
    v11 = a4 + 16;
    swift_beginAccess(v11, &v14, 0, 0);
    v12 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "view");

    }
  }
}

double sub_10036B998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  _QWORD v23[5];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicConfiguration(0, v3);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v23[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v1 + 16) && *(_QWORD *)(v1 + 32) >> 62 != 2)
  {
    MusicConfiguration.init(bagProfileName:bagProfileVersion:mediaAPIClientIdentifier:)(0x636973754DLL, 0xE500000000000000, 49, 0xE100000000000000, 0x6C7070612E6D6F63, 0xEF636973754D2E65, v7);
    v10 = qword_10119B8C0;
    swift_retain_n(v1, 2);
    if (v10 != -1)
      swift_once(&qword_10119B8C0, sub_1000E9774);
    v11 = (void *)qword_10124C798;
    v23[3] = type metadata accessor for PlaybackController();
    v23[4] = sub_100048748(&qword_1011AEB78, (uint64_t (*)(uint64_t))type metadata accessor for PlaybackController, (uint64_t)&protocol conformance descriptor for PlaybackController);
    v22 = v1;
    v23[0] = v11;
    v12 = sub_100007E8C(&qword_1011AEB80);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    v13 = v11;
    v14 = MusicPageProvider.init(configuration:appTabs:appDestinationPageProvider:appPlayer:)(v9, v1, &v22, v23);
    *(_QWORD *)(v1 + 16) = v14;
    swift_retain();
    v15 = swift_release();
    MusicPageProvider.start()(v15);
    swift_release();
    sub_100048748(&qword_1011AEB88, (uint64_t (*)(uint64_t))type metadata accessor for AppInterfaceContext, (uint64_t)&unk_100EB6984);
    v16 = swift_retain();
    MusicPageProvider.presentationStackDelegate.setter(v16);
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
    type metadata accessor for MainActor(0);
    swift_retain();
    v18 = swift_retain();
    v19 = static MainActor.shared.getter(v18);
    v20 = (_QWORD *)swift_allocObject(&unk_1010C1A68, 48, 7);
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v14;
    v20[5] = v1;
    sub_100166D14((uint64_t)v5, (uint64_t)&unk_1011AEB98, (uint64_t)v20);
    swift_release();
    v7.n128_u64[0] = swift_release().n128_u64[0];
  }
  return v7.n128_f64[0];
}

uint64_t sub_10036BC18(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  _QWORD *v19;

  v6[4] = a6;
  v7 = type metadata accessor for MusicNotice(0, a1);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AB380);
  v6[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Notice(0);
  v6[9] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[10] = v11;
  v6[11] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AEBA0);
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011AEBA8);
  v6[13] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[14] = v14;
  v6[15] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AEBB0);
  v6[16] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v6[17] = v16;
  v17 = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[18] = v17;
  v6[19] = type metadata accessor for MainActor(0);
  v6[20] = static MainActor.shared.getter(v18);
  v19 = (_QWORD *)swift_task_alloc(async function pointer to MusicPageProvider.notices()[1]);
  v6[21] = v19;
  *v19 = v6;
  v19[1] = sub_10036BD88;
  return MusicPageProvider.notices()(v17);
}

uint64_t sub_10036BD88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  v4 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 184) = v6;
  *(_QWORD *)(v2 + 192) = v5;
  if (v0)
    v7 = sub_10036C0FC;
  else
    v7 = sub_10036BE14;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_10036BE14(__n128 a1)
{
  _QWORD *v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;

  AsyncStream.makeAsyncIterator()(v1[16], a1);
  v3 = static MainActor.shared.getter(v2);
  v1[25] = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v1[26] = v4;
  *v4 = v1;
  v4[1] = sub_10036BE90;
  return AsyncStream.Iterator.next(isolation:)(v1[12], v3, &protocol witness table for MainActor, v1[13]);
}

uint64_t sub_10036BE90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  swift_release();
  return swift_task_switch(sub_10036BEE4, *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192));
}

uint64_t sub_10036BEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v7, v8, v10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v11 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v20, v1, v2);
    sub_10036C330(v20, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 64), &qword_1011AB380);
    }
    else
    {
      v22 = *(_QWORD *)(v0 + 32);
      sub_10005B6C0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88), type metadata accessor for Notice);
      v23 = *(_QWORD *)(v22 + 32);
      if (v23 >> 62 == 2 || v23 >> 62 == 1)
        v24 = (void *)(v23 & 0x3FFFFFFFFFFFFFFFLL);
      else
        v24 = (void *)(v23 & 0x3FFFFFFFFFFFFFFFLL);
      v25 = v24;
      v26 = UIViewController.noticePresenter.getter();

      if (v26)
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v26 + 192))(*(_QWORD *)(v0 + 88), 0);
        swift_release();
      }
      sub_10005B748(*(_QWORD *)(v0 + 88), type metadata accessor for Notice);
    }
    v27 = static MainActor.shared.getter(v21);
    *(_QWORD *)(v0 + 200) = v27;
    v28 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 208) = v28;
    *v28 = v0;
    v28[1] = sub_10036BE90;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 96), v27, &protocol witness table for MainActor, *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_10036C0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  swift_release();
  if (qword_10119C7B0 != -1)
    swift_once(&qword_10119C7B0, sub_100779430);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D980);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 176);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v20 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011A14B0);
    v11 = String.init<A>(describing:)(v0 + 16, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 24) = sub_100322200(v11, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to observe for MusicUI notices. %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v14 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036C330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v4 = type metadata accessor for Notice.Variant(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicNotice(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Notice(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, a1, v8, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v17 == enum case for MusicNotice.favorite(_:))
  {
    v18 = 9;
  }
  else if (v17 == enum case for MusicNotice.unfavorite(_:))
  {
    v18 = 10;
  }
  else
  {
    if (v17 != enum case for MusicNotice.addToLibrary(_:))
    {
      if (v17 == enum case for MusicNotice.follow(_:)
        || v17 == enum case for MusicNotice.unfollow(_:)
        || v17 == enum case for MusicNotice.block(_:))
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
      }
      else
      {
        if (v17 == enum case for MusicNotice.suggestLess(_:))
        {
          v18 = 11;
          goto LABEL_7;
        }
        if (v17 == enum case for MusicNotice.playNext(_:))
        {
          v18 = 3;
          goto LABEL_7;
        }
        if (v17 == enum case for MusicNotice.playLast(_:))
        {
          v18 = 4;
          goto LABEL_7;
        }
        if (v17 == enum case for MusicNotice.addToQueue(_:))
        {
          v18 = 5;
          goto LABEL_7;
        }
        if (v17 == enum case for MusicNotice.playAfter(_:))
        {
          v18 = 6;
          goto LABEL_7;
        }
        v21 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        v21(a1, v8);
        v21((uint64_t)v11, v8);
      }
      v19 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, v19, 1, v12);
    }
    v18 = 7;
  }
LABEL_7:
  swift_storeEnumTagMultiPayload(v7, v4, v18);
  static Notice.variant(_:)((uint64_t)v7);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  sub_10005B748((uint64_t)v7, type metadata accessor for Notice.Variant);
  sub_10005B6C0((uint64_t)v16, a2, type metadata accessor for Notice);
  v19 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, v19, 1, v12);
}

uint64_t sub_10036C5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = _s23AppSheetPageDestinationOMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicAppDestination(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(a1, v8);
  if (v10 == enum case for MusicAppDestination.createOrAddToPlaylistPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for PlaylistAddableItem(0);
    v12 = 0;
LABEL_13:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, a1);
    swift_storeEnumTagMultiPayload(v7, v4, v12);
    sub_10005B6C0((uint64_t)v7, a2, _s23AppSheetPageDestinationOMa);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  if (v10 == enum case for MusicAppDestination.viewLyricsPage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for Song(0);
    v12 = 2;
    goto LABEL_13;
  }
  if (v10 == enum case for MusicAppDestination.reportAConcern(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for ReportableMusicItem(0);
    v12 = 3;
    goto LABEL_13;
  }
  if (v10 == enum case for MusicAppDestination.share(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for ShareableMusicItem(0);
    v12 = 4;
    goto LABEL_13;
  }
  if (v10 == enum case for MusicAppDestination.collaborate(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for Playlist(0);
    v12 = 1;
    goto LABEL_13;
  }
  if (v10 == enum case for MusicAppDestination.classicalAppStorePage(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(a1, v8);
    v11 = type metadata accessor for URL(0);
    v12 = 5;
    goto LABEL_13;
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
}

void sub_10036C864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  char *v14;
  _QWORD v15[12];

  v15[10] = a1;
  v1 = type metadata accessor for URL(0);
  v15[8] = *(_QWORD *)(v1 - 8);
  v15[9] = v1;
  __chkstk_darwin(v1);
  v15[7] = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ShareableMusicItem(0);
  v15[5] = *(_QWORD *)(v3 - 8);
  v15[6] = v3;
  __chkstk_darwin(v3);
  v15[4] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ReportableMusicItem(0);
  v15[2] = *(_QWORD *)(v5 - 8);
  v15[3] = v5;
  __chkstk_darwin(v5);
  v15[1] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  v15[0] = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for Playlist(0);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for PlaylistAddableItem(0);
  __chkstk_darwin(v9);
  v10 = _s23AppSheetPageDestinationOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v15[11], (uint64_t)v12, v13);
  v14 = (char *)sub_10036CA5C + 4 * byte_100EB68BE[swift_getEnumCaseMultiPayload(v12, v10)];
  __asm { BR              X10 }
}

uint64_t sub_10036CA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
  v5 = *(_QWORD *)(v4 - 96);
  Hasher._combine(_:)(0);
  v6 = sub_100048748(&qword_1011AEA60, (uint64_t (*)(uint64_t))&type metadata accessor for PlaylistAddableItem, (uint64_t)&protocol conformance descriptor for PlaylistAddableItem);
  dispatch thunk of Hashable.hash(into:)(v5, v1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
}

Swift::Int sub_10036CC90(uint64_t a1, uint64_t a2)
{
  return sub_100236918(a1, a2, (void (*)(_QWORD *))sub_10036C864);
}

Swift::Int sub_10036CCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100236968(a1, a2, a3, (void (*)(_QWORD *))sub_10036C864);
}

void sub_10036CCB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(_QWORD);
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  _QWORD v90[18];
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(_QWORD);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140[30];

  v2 = type metadata accessor for URL(0);
  v112 = *(_QWORD *)(v2 - 8);
  v113 = v2;
  __chkstk_darwin(v2);
  v110 = v3;
  v111 = (char *)v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v125 = (char *)v90 - v6;
  v91 = type metadata accessor for MusicFriendsInviteDescriptor(0, v5);
  v90[15] = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v90[17] = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v90[13] = (char *)v90 - v9;
  v90[16] = v10;
  __chkstk_darwin(v11);
  v114 = (char *)v90 - v12;
  v115 = type metadata accessor for SocialProfileDescriptor(0);
  v92 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v94 = (char *)v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v90[8] = (char *)v90 - v15;
  v90[9] = v16;
  __chkstk_darwin(v17);
  v90[14] = (char *)v90 - v18;
  v19 = type metadata accessor for ShareableMusicItem(0);
  v135 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v90[2] = (char *)v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v90[3] = (char *)v90 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)v90 - v24;
  __chkstk_darwin(v26);
  v133 = (char *)v90 - v27;
  v118 = type metadata accessor for ReportableMusicItem(0);
  v123 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v90[6] = (char *)v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v90[10] = (char *)v90 - v30;
  __chkstk_darwin(v31);
  v124 = (char *)v90 - v32;
  v105 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v105);
  v109 = (char *)v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for StaticLyricsViewController.Song(0);
  __chkstk_darwin(v96);
  v99 = (char *)v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Song(0);
  v98 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v97 = (char *)v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v102 = (char *)v90 - v37;
  v38 = type metadata accessor for Actions.Collaborate.Context(0);
  v100 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v103 = (char *)v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = v39;
  __chkstk_darwin(v40);
  v107 = (char *)v90 - v41;
  v106 = type metadata accessor for Playlist(0);
  v104 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v130 = (char *)v90 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v134 = (char *)v90 - v44;
  v45 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v45);
  v128 = (char *)v90 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v47);
  v90[5] = (char *)v90 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v95 = (char *)v90 - v50;
  __chkstk_darwin(v51);
  v119 = (char *)v90 - v52;
  v122 = type metadata accessor for PlaylistAddableItem(0);
  v116 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v90[12] = (char *)v90 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  v126 = (char *)v90 - v55;
  v136 = _s23AppSheetPageDestinationOMa(0);
  __chkstk_darwin(v136);
  v137 = (uint64_t)v90 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v59 = (char *)v90 - v58;
  __chkstk_darwin(v60);
  v62 = (char *)v90 - v61;
  v63 = type metadata accessor for Logger(0);
  v64 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v90[4] = (char *)v90 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v90[11] = (char *)v90 - v67;
  __chkstk_darwin(v68);
  v90[7] = (char *)v90 - v69;
  __chkstk_darwin(v70);
  v93 = (char *)v90 - v71;
  __chkstk_darwin(v72);
  v132 = (char *)v90 - v73;
  __chkstk_darwin(v74);
  v76 = (char *)v90 - v75;
  v77 = Logger.actions.unsafeMutableAddressor();
  v129 = v64;
  v78 = *(void (**)(_QWORD))(v64 + 16);
  v120 = v77;
  v121 = v78;
  v78(v76);
  v131 = a1;
  v79 = sub_10005B704(a1, (uint64_t)v62, _s23AppSheetPageDestinationOMa);
  v80 = Logger.logObject.getter(v79);
  v81 = static os_log_type_t.default.getter(v80);
  v82 = os_log_type_enabled(v80, v81);
  v127 = v19;
  v117 = v25;
  if (v82)
  {
    v83 = (uint8_t *)swift_slowAlloc(12, -1);
    v84 = swift_slowAlloc(32, -1);
    v140[0] = v84;
    *(_DWORD *)v83 = 136446210;
    v90[1] = v83 + 4;
    sub_10005B704((uint64_t)v62, (uint64_t)v59, _s23AppSheetPageDestinationOMa);
    v85 = String.init<A>(describing:)(v59, v136);
    v87 = v86;
    v138 = sub_100322200(v85, v86, v140);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139);
    swift_bridgeObjectRelease(v87);
    sub_10005B748((uint64_t)v62, _s23AppSheetPageDestinationOMa);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "[MusicUI Actions] Called presentSheetPage with destination=%{public}s", v83, 0xCu);
    swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v84, -1, -1);
    swift_slowDealloc(v83, -1, -1);
  }
  else
  {
    sub_10005B748((uint64_t)v62, _s23AppSheetPageDestinationOMa);
  }

  v129 = *(_QWORD *)(v129 + 8);
  ((void (*)(char *, uint64_t))v129)(v76, v63);
  v88 = v137;
  sub_10005B704(v131, v137, _s23AppSheetPageDestinationOMa);
  v89 = (char *)sub_10036D588 + 4 * word_100EB68C4[swift_getEnumCaseMultiPayload(v88, v136)];
  __asm { BR              X10 }
}

uint64_t sub_10036D588()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __n128 v45;
  void (*v46)(uint64_t, uint64_t, __n128);
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;

  v6 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 392);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v7, *(_QWORD *)(v0 + 520), v8);
  v9 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
  ((void (*)(void))PlaylistAddableItem.addableItem.getter)();
  v10 = sub_100007E8C(&qword_1011AEAD8);
  v11 = sub_100007E8C(&qword_1011AEAE0);
  if (swift_dynamicCast(v0 + 736, v0 + 576, v10, v11, 6))
  {
    sub_100145714((__int128 *)(v0 + 736), (_OWORD *)(v0 + 528));
    *(_OWORD *)(v5 - 144) = 0u;
    *(_OWORD *)(v5 - 128) = 0u;
    *(_QWORD *)(v5 - 112) = 0;
    *(_BYTE *)(v5 - 104) = -1;
    *(_QWORD *)(v0 + 520) = v9;
    PresentationSource.init(viewController:position:)(v2, v5 - 144, v0 + 736);
    v12 = *(_QWORD *)(v0 + 552);
    v13 = *(_QWORD *)(v0 + 560);
    v14 = *(_QWORD *)(v0 + 568);
    v15 = sub_100007E68((_QWORD *)(v0 + 528), v12);
    v16 = __chkstk_darwin(v15);
    v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
    *(_QWORD *)(v0 + 696) = *(_QWORD *)(v0 + 504);
    sub_100064AC8(v0 + 736, v0 + 576);
    v20 = type metadata accessor for AlertPresenter();
    v21 = swift_allocObject(v20, 88, 7);
    sub_100064EF0(v0 + 576, v21 + 16);
    *(_QWORD *)(v5 - 224) = v20;
    *(_QWORD *)(v5 - 216) = &off_1010C20D0;
    *(_QWORD *)(v5 - 248) = v21;
    sub_100064AC8(v0 + 736, v0 + 576);
    v22 = type metadata accessor for Actions.MetricsReportingContext(0);
    v23 = *(_QWORD *)(v0 + 368);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v23, 1, 1, v22);
    type metadata accessor for MusicLibrary(0);
    swift_retain();
    v25 = static MusicLibrary.shared.getter(v24);
    Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(v18, v25, v0 + 696, (__int128 *)(v5 - 248), v0 + 576, v23, v12, (uint64_t)&type metadata for PlaylistPicker.Presenter, (_OWORD *)(v5 - 208), v13, v14, (uint64_t)&off_1010C78B0);
    v26 = type metadata accessor for TaskPriority(0);
    v27 = *(_QWORD *)(v0 + 440);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v27, 1, 1, v26);
    type metadata accessor for MainActor(0);
    swift_retain();
    swift_retain();
    v28 = swift_retain();
    v29 = static MainActor.shared.getter(v28);
    v30 = swift_allocObject(&unk_1010C1A40, 80, 7);
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = &protocol witness table for MainActor;
    v31 = *(_OWORD *)(v5 - 192);
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v5 - 208);
    *(_OWORD *)(v30 + 48) = v31;
    *(_OWORD *)(v30 + 64) = *(_OWORD *)(v5 - 176);
    sub_100166D14(v27, (uint64_t)&unk_1011AEAF8, v30);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_100064B4C(v0 + 736);
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 392));
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 528));
  }
  else
  {
    *(_QWORD *)(v0 + 512) = v9;
    *(_OWORD *)(v0 + 752) = 0u;
    *(_OWORD *)(v0 + 768) = 0u;
    *(_OWORD *)(v0 + 736) = 0u;
    sub_10004FF60(v0 + 736, &qword_1011AEAE8);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 384))(v3, *(_QWORD *)(v0 + 376), v4);
    v33 = *(_QWORD *)(v0 + 96);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v33, v7, v8);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = v33;
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      *(_QWORD *)(v0 + 520) = v4;
      v40 = v39;
      *(_QWORD *)(v0 + 576) = v39;
      *(_DWORD *)v38 = 136446210;
      v41 = v37;
      ((void (*)(void))PlaylistAddableItem.addableItem.getter)();
      v42 = String.init<A>(describing:)(v0 + 736, v10);
      v44 = v43;
      *(_QWORD *)(v0 + 736) = sub_100322200(v42, v43, (uint64_t *)(v0 + 576));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 736, v0 + 744);
      v45 = swift_bridgeObjectRelease(v44);
      v46 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 344) + 8);
      v47 = *(_QWORD *)(v0 + 392);
      v46(v41, v47, v45);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MusicUI Actions] MusicUI.PlaylistAddableItem %{public}s isn't MusicLibraryActionable", v38, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 520));
      return ((uint64_t (*)(_QWORD, uint64_t))v46)(*(_QWORD *)(v0 + 424), v47);
    }
    else
    {

      v48 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v48(v33, v8);

      (*(void (**)(_QWORD, uint64_t))(v0 + 448))(*(_QWORD *)(v0 + 472), v4);
      return ((uint64_t (*)(_QWORD, uint64_t))v48)(*(_QWORD *)(v0 + 424), v8);
    }
  }
}

uint64_t sub_10036ED94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[16] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[17] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[18] = v7;
  v4[19] = v8;
  return swift_task_switch(sub_10036EE00, v7, v8);
}

uint64_t sub_10036EE00()
{
  uint64_t v0;
  _QWORD *v1;

  static Actions.AddToPlaylist.action(context:)(*(_QWORD *)(v0 + 128), v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011AEB04);
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_10036EE54;
  return sub_10036EEDC();
}

uint64_t sub_10036EE54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  sub_100148840(v1 + 2);
  return swift_task_switch(sub_10036EEAC, v1[18], v1[19]);
}

uint64_t sub_10036EEAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036EEDC()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = type metadata accessor for Logger(0);
  *(_QWORD *)(v1 + 160) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v1 + 168) = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 176) = swift_task_alloc(v4);
  *(_QWORD *)(v1 + 184) = swift_task_alloc(v4);
  v5 = v0[5];
  *(_OWORD *)(v1 + 80) = v0[4];
  *(_OWORD *)(v1 + 96) = v5;
  *(_OWORD *)(v1 + 112) = v0[6];
  v6 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = v0[3];
  *(_OWORD *)(v1 + 48) = v0[2];
  *(_OWORD *)(v1 + 64) = v7;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 192) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v1 + 200) = v10;
  *(_QWORD *)(v1 + 208) = v11;
  return swift_task_switch(sub_10036EF9C, v10, v11);
}

uint64_t sub_10036EF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  __n128 v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  _QWORD *v35;
  uint64_t v36;
  NSObject *log;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = Logger.actions.unsafeMutableAddressor();
  *(_QWORD *)(v0 + 216) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 224) = v5;
  v5(v2, v4, v1);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v43 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v44 = v9;
  swift_retain_n(v9, 2);
  v45 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v40 = *(_QWORD *)(v0 + 168);
    v41 = *(_QWORD *)(v0 + 160);
    v42 = *(_QWORD *)(v0 + 184);
    log = v13;
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v46 = v39;
    *(_DWORD *)v16 = 136446210;
    v17 = ActionType.rawValue.getter(v43);
    v19 = v18;
    *(_QWORD *)(v0 + 152) = sub_100322200(v17, v18, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160);
    v20 = swift_bridgeObjectRelease(v19);
    swift_release_n(v6, 2, v20);
    swift_release_n(v7, 2, v21);
    swift_release_n(v8, 2, v22);
    swift_release_n(v44, 2, v23);
    swift_release_n(v45, 2, v24);
    swift_release_n(v11, 2, v25);
    _os_log_impl((void *)&_mh_execute_header, log, v14, "[MusicUI Actions] Attempting to execute action=%{public}s", v16, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v26 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v26(v42, v41);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 168);
    swift_release_n(v6, 2, v15);
    swift_release_n(v7, 2, v30);
    swift_release_n(v8, 2, v31);
    swift_release_n(v44, 2, v32);
    swift_release_n(v45, 2, v33);
    swift_release_n(v11, 2, v34);

    v26 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v26(v27, v29);
  }
  *(_QWORD *)(v0 + 232) = v26;
  v35 = (_QWORD *)swift_task_alloc(dword_1011D3654);
  *(_QWORD *)(v0 + 240) = v35;
  v36 = sub_100007E8C(&qword_1011AEB08);
  *v35 = v0;
  v35[1] = sub_10036F298;
  return Action.execute(bypassSupportedStatusCheck:)(v36, 0, v36);
}

uint64_t sub_10036F298()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10036F338;
  else
    v4 = sub_10036F2F8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208));
}

uint64_t sub_10036F2F8()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 192));
  v1 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036F338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  NSObject *log;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 224);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = swift_release();
  v3(v4, v2, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_BYTE *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter();
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v44 = *(_QWORD *)(v0 + 248);
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v46 = *(_QWORD *)(v0 + 160);
    v17 = swift_slowAlloc(22, -1);
    v45 = swift_slowAlloc(64, -1);
    v50 = v45;
    *(_DWORD *)v17 = 136446466;
    v18 = ActionType.rawValue.getter(v10);
    v20 = v19;
    *(_QWORD *)(v0 + 128) = sub_100322200(v18, v19, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136);
    v21 = swift_bridgeObjectRelease(v20);
    swift_release_n(v7, 2, v21);
    swift_release_n(v8, 2, v22);
    swift_release_n(v9, 2, v23);
    swift_release_n(v11, 2, v24);
    swift_release_n(v12, 2, v25);
    swift_release_n(v13, 2, v26);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 136) = v44;
    swift_errorRetain(v44);
    v27 = sub_100007E8C(&qword_1011A14B0);
    v28 = String.init<A>(describing:)(v0 + 136, v27);
    v30 = v29;
    *(_QWORD *)(v0 + 144) = sub_100322200(v28, v29, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(v44);
    swift_errorRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, log, v16, "[MusicUI Actions] Failed to execute action=%{public}s with error=%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v45, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v44);
    v32 = v46;
    v31 = v47;
  }
  else
  {
    v33 = *(_QWORD *)(v0 + 248);
    v48 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v34 = *(_QWORD *)(v0 + 176);
    v35 = *(_QWORD *)(v0 + 160);
    swift_errorRelease(v33);
    swift_release_n(v7, 2, v36);
    swift_release_n(v8, 2, v37);
    swift_release_n(v9, 2, v38);
    swift_release_n(v11, 2, v39);
    swift_release_n(v12, 2, v40);
    swift_release_n(v13, 2, v41);
    swift_errorRelease(v33);
    swift_errorRelease(v33);

    v31 = v34;
    v32 = v35;
  }
  v48(v31, v32);
  v42 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036F6C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v1[6] = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D1090);
  v1[7] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[8] = swift_task_alloc(v3);
  v1[9] = swift_task_alloc(v3);
  v4 = type metadata accessor for Logger(0);
  v1[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[11] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[12] = swift_task_alloc(v6);
  v1[13] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v1[14] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v1[15] = v9;
  v1[16] = v10;
  return swift_task_switch(sub_10036F7A0, v9, v10);
}

uint64_t sub_10036F7A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0[6];
  v2 = v0[13];
  v3 = v0[10];
  v4 = v0[11];
  v5 = v0[9];
  v6 = Logger.actions.unsafeMutableAddressor();
  v0[17] = v6;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[18] = v7;
  v7(v2, v6, v3);
  v8 = sub_10004A160(v1, v5, (uint64_t *)&unk_1011D1090);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v24 = v0[11];
    v11 = v0[9];
    v25 = v0[10];
    v26 = v0[13];
    v12 = v0[7];
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    *(_DWORD *)v13 = 136446210;
    v27 = v14;
    v15 = ActionType.rawValue.getter(*(_BYTE *)(v11 + *(int *)(v12 + 52)));
    v17 = v16;
    v0[5] = sub_100322200(v15, v16, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6);
    swift_bridgeObjectRelease(v17);
    sub_10004FF60(v11, (uint64_t *)&unk_1011D1090);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MusicUI Actions] Attempting to execute action=%{public}s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    v18 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v18(v26, v25);
  }
  else
  {
    v19 = v0[13];
    v20 = v0[10];
    v21 = v0[11];
    sub_10004FF60(v0[9], (uint64_t *)&unk_1011D1090);

    v18 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v18(v19, v20);
  }
  v0[19] = v18;
  v22 = (_QWORD *)swift_task_alloc(dword_1011D3654);
  v0[20] = v22;
  *v22 = v0;
  v22[1] = sub_10036F9BC;
  return Action.execute(bypassSupportedStatusCheck:)((uint64_t)v22, 0, v0[7]);
}

uint64_t sub_10036F9BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 160);
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10036FA78;
  else
    v4 = sub_10036FA1C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_10036FA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036FA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 144);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = swift_release();
  v3(v4, v2, v5, v8);
  sub_10004A160(v7, v6, (uint64_t *)&unk_1011D1090);
  swift_errorRetain(v1);
  v9 = swift_errorRetain(v1);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = *(_QWORD *)(v0 + 168);
    v34 = *(_QWORD *)(v0 + 96);
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    v33 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 64);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v36 = v16;
    *(_DWORD *)v15 = 136446466;
    v17 = ActionType.rawValue.getter(*(_BYTE *)(v14 + *(int *)(v13 + 52)));
    v19 = v18;
    *(_QWORD *)(v0 + 16) = sub_100322200(v17, v18, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease(v19);
    sub_10004FF60(v14, (uint64_t *)&unk_1011D1090);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v12;
    swift_errorRetain(v12);
    v20 = sub_100007E8C(&qword_1011A14B0);
    v21 = String.init<A>(describing:)(v0 + 24, v20);
    v23 = v22;
    *(_QWORD *)(v0 + 32) = sub_100322200(v21, v22, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[MusicUI Actions] Failed to execute action=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v12);
    v35(v34, v33);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 168);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    v26 = *(_QWORD *)(v0 + 96);
    v27 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 64);
    swift_errorRelease(v24);
    sub_10004FF60(v28, (uint64_t *)&unk_1011D1090);
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    v25(v26, v27);
  }
  v29 = *(_QWORD *)(v0 + 96);
  v31 = *(_QWORD *)(v0 + 64);
  v30 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036FD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = type metadata accessor for Logger(0);
  *(_QWORD *)(v1 + 168) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v1 + 176) = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 184) = swift_task_alloc(v4);
  *(_QWORD *)(v1 + 192) = swift_task_alloc(v4);
  v5 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 96) = v5;
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v1 + 128) = *(_QWORD *)(v0 + 112);
  v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 64) = v7;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 200) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v1 + 208) = v10;
  *(_QWORD *)(v1 + 216) = v11;
  return swift_task_switch(sub_10036FDF8, v10, v11);
}

uint64_t sub_10036FDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  __n128 v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  _QWORD *v35;
  uint64_t v36;
  NSObject *log;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = Logger.actions.unsafeMutableAddressor();
  *(_QWORD *)(v0 + 224) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 232) = v5;
  v5(v2, v4, v1);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 64);
  v43 = *(_BYTE *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 128);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v44 = v9;
  swift_retain_n(v9, 2);
  v45 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v40 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 168);
    v42 = *(_QWORD *)(v0 + 192);
    log = v13;
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v46 = v39;
    *(_DWORD *)v16 = 136446210;
    v17 = ActionType.rawValue.getter(v43);
    v19 = v18;
    *(_QWORD *)(v0 + 160) = sub_100322200(v17, v18, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168);
    v20 = swift_bridgeObjectRelease(v19);
    swift_release_n(v6, 2, v20);
    swift_release_n(v7, 2, v21);
    swift_release_n(v8, 2, v22);
    swift_release_n(v44, 2, v23);
    swift_release_n(v45, 2, v24);
    swift_release_n(v11, 2, v25);
    _os_log_impl((void *)&_mh_execute_header, log, v14, "[MusicUI Actions] Attempting to execute action=%{public}s", v16, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v26 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v26(v42, v41);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 176);
    swift_release_n(v6, 2, v15);
    swift_release_n(v7, 2, v30);
    swift_release_n(v8, 2, v31);
    swift_release_n(v44, 2, v32);
    swift_release_n(v45, 2, v33);
    swift_release_n(v11, 2, v34);

    v26 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v26(v27, v29);
  }
  *(_QWORD *)(v0 + 240) = v26;
  v35 = (_QWORD *)swift_task_alloc(dword_1011D3654);
  *(_QWORD *)(v0 + 248) = v35;
  v36 = sub_100007E8C(&qword_1011AEB20);
  *v35 = v0;
  v35[1] = sub_1003700F4;
  return Action.execute(bypassSupportedStatusCheck:)(v36, 0, v36);
}

uint64_t sub_1003700F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100370194;
  else
    v4 = sub_100370154;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
}

uint64_t sub_100370154()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100370194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  NSObject *log;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 232);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = swift_release();
  v3(v4, v2, v5, v6);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_BYTE *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter();
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v44 = *(_QWORD *)(v0 + 256);
    v47 = *(_QWORD *)(v0 + 184);
    v48 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    v46 = *(_QWORD *)(v0 + 168);
    v17 = swift_slowAlloc(22, -1);
    v45 = swift_slowAlloc(64, -1);
    v50 = v45;
    *(_DWORD *)v17 = 136446466;
    v18 = ActionType.rawValue.getter(v10);
    v20 = v19;
    *(_QWORD *)(v0 + 136) = sub_100322200(v18, v19, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
    v21 = swift_bridgeObjectRelease(v20);
    swift_release_n(v7, 2, v21);
    swift_release_n(v8, 2, v22);
    swift_release_n(v9, 2, v23);
    swift_release_n(v11, 2, v24);
    swift_release_n(v12, 2, v25);
    swift_release_n(v13, 2, v26);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 144) = v44;
    swift_errorRetain(v44);
    v27 = sub_100007E8C(&qword_1011A14B0);
    v28 = String.init<A>(describing:)(v0 + 144, v27);
    v30 = v29;
    *(_QWORD *)(v0 + 152) = sub_100322200(v28, v29, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(v44);
    swift_errorRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, log, v16, "[MusicUI Actions] Failed to execute action=%{public}s with error=%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v45, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v44);
    v32 = v46;
    v31 = v47;
  }
  else
  {
    v33 = *(_QWORD *)(v0 + 256);
    v48 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    v34 = *(_QWORD *)(v0 + 184);
    v35 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(v33);
    swift_release_n(v7, 2, v36);
    swift_release_n(v8, 2, v37);
    swift_release_n(v9, 2, v38);
    swift_release_n(v11, 2, v39);
    swift_release_n(v12, 2, v40);
    swift_release_n(v13, 2, v41);
    swift_errorRelease(v33);
    swift_errorRelease(v33);

    v31 = v34;
    v32 = v35;
  }
  v48(v31, v32);
  v42 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100370520()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for Logger(0);
  *(_QWORD *)(v1 + 432) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v1 + 440) = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v1 + 448) = swift_task_alloc(v4);
  *(_QWORD *)(v1 + 456) = swift_task_alloc(v4);
  v5 = v0[5];
  *(_OWORD *)(v1 + 208) = v0[4];
  *(_OWORD *)(v1 + 224) = v5;
  v6 = v0[7];
  *(_OWORD *)(v1 + 240) = v0[6];
  *(_OWORD *)(v1 + 256) = v6;
  v7 = v0[1];
  *(_OWORD *)(v1 + 144) = *v0;
  *(_OWORD *)(v1 + 160) = v7;
  v8 = v0[3];
  *(_OWORD *)(v1 + 176) = v0[2];
  *(_OWORD *)(v1 + 192) = v8;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 464) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v1 + 472) = v11;
  *(_QWORD *)(v1 + 480) = v12;
  return swift_task_switch(sub_1003705E0, v11, v12);
}

uint64_t sub_1003705E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 440);
  v4 = Logger.actions.unsafeMutableAddressor();
  *(_QWORD *)(v0 + 488) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v0 + 496) = v5;
  v5(v1, v4, v3);
  v6 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v6;
  v7 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v7;
  v8 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 32) = v8;
  v9 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v9;
  sub_100376DA4((_QWORD *)(v0 + 16));
  v10 = sub_100376DA4((_QWORD *)(v0 + 16));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v25 = *(_QWORD *)(v0 + 440);
    v26 = *(_QWORD *)(v0 + 432);
    v27 = *(_QWORD *)(v0 + 456);
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v28 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    v17 = v16;
    *(_QWORD *)(v0 + 424) = sub_100322200(v15, v16, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 424, v0 + 432);
    swift_bridgeObjectRelease(v17);
    sub_100376D1C((_QWORD *)(v0 + 16));
    sub_100376D1C((_QWORD *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[MusicUI Actions] Attempting to execute action=%{public}s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    v18 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v18(v27, v26);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 456);
    v21 = *(_QWORD *)(v0 + 432);
    v20 = *(_QWORD *)(v0 + 440);
    sub_100376D1C((_QWORD *)(v0 + 16));
    sub_100376D1C((_QWORD *)(v0 + 16));

    v18 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v18(v19, v21);
  }
  *(_QWORD *)(v0 + 504) = v18;
  v22 = (_QWORD *)swift_task_alloc(dword_1011D3654);
  *(_QWORD *)(v0 + 512) = v22;
  v23 = sub_100007E8C(&qword_1011AEB30);
  *v22 = v0;
  v22[1] = sub_100370828;
  return Action.execute(bypassSupportedStatusCheck:)(v23, 0, v23);
}

uint64_t sub_100370828()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 512);
  *(_QWORD *)(*v1 + 520) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003708CC;
  else
    v4 = sub_10037088C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 472), *(_QWORD *)(v2 + 480));
}

uint64_t sub_10037088C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 464));
  v1 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 456));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003708CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 496);
  v4 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = swift_release();
  v3(v4, v2, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 288) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v10;
  sub_100376DA4((_QWORD *)(v0 + 272));
  swift_errorRetain(v1);
  sub_100376DA4((_QWORD *)(v0 + 272));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 520);
    v31 = *(_QWORD *)(v0 + 448);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
    v30 = *(_QWORD *)(v0 + 432);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v33 = v16;
    *(_DWORD *)v15 = 136446466;
    v17 = ActionType.rawValue.getter(*(_BYTE *)(v0 + 336));
    v19 = v18;
    *(_QWORD *)(v0 + 400) = sub_100322200(v17, v18, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 400, v0 + 408);
    swift_bridgeObjectRelease(v19);
    sub_100376D1C((_QWORD *)(v0 + 272));
    sub_100376D1C((_QWORD *)(v0 + 272));
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 408) = v14;
    swift_errorRetain(v14);
    v20 = sub_100007E8C(&qword_1011A14B0);
    v21 = String.init<A>(describing:)(v0 + 408, v20);
    v23 = v22;
    *(_QWORD *)(v0 + 416) = sub_100322200(v21, v22, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 416, v0 + 424);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[MusicUI Actions] Failed to execute action=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v30);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 520);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
    v26 = *(_QWORD *)(v0 + 448);
    v27 = *(_QWORD *)(v0 + 432);
    swift_errorRelease(v24);
    sub_100376D1C((_QWORD *)(v0 + 272));
    sub_100376D1C((_QWORD *)(v0 + 272));
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    v25(v26, v27);
  }
  v28 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 456));
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100370B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011D1090);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[5] = v8;
  v4[6] = v9;
  return swift_task_switch(sub_100370C10, v8, v9);
}

uint64_t sub_100370C10()
{
  uint64_t *v0;
  uint64_t **v1;

  static Actions.Collaborate.action(context:)(v0[2], v0[3]);
  v1 = (uint64_t **)swift_task_alloc(dword_1011AEB14);
  v0[7] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_100370C60;
  return sub_10036F6C4();
}

uint64_t sub_100370C60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  sub_10004FF60(v2, (uint64_t *)&unk_1011D1090);
  return swift_task_switch(sub_100370CC0, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100370CC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100370CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;

  v58 = type metadata accessor for SocialProfileDescriptor(0);
  v64 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)&v57 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = type metadata accessor for Playlist(0);
  v62 = *(_QWORD *)(v1 - 8);
  v63 = v1;
  v2 = __chkstk_darwin(v1);
  v65 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v57 - v4;
  v6 = type metadata accessor for CreditArtist(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v59 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v57 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v57 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v57 - v19;
  v21 = type metadata accessor for ReportableMusicItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v66, v21);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if (v25 == enum case for ReportableMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v24, v21);
    v26 = v62;
    v27 = v63;
    v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 32))(v5, v24, v63);
    v29 = Playlist.catalogID.getter(v28);
    v31 = v30;
    v32 = v65;
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 16))(v65, v5, v27);
    if (!v31)
      v29 = Playlist.id.getter(v33);
    v34 = *(void (**)(char *, uint64_t))(v26 + 8);
    v34(v32, v27);
    v34(v5, v27);
  }
  else
  {
    v65 = v12;
    v66 = v18;
    v35 = v60;
    v36 = v61;
    v37 = v64;
    if (v25 == enum case for ReportableMusicItem.creditArtist(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v24, v21);
      v38 = v59;
      v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v35 + 32))(v59, v24, v36);
      v29 = CreditArtist.id.getter(v39);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v36);
    }
    else if (v25 == enum case for ReportableMusicItem.creditSong(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v24, v21);
      v40 = v20;
      v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v20, v24, v8);
      v29 = Song.catalogID.getter(v41);
      v43 = v42;
      v44 = v66;
      v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 16))(v66, v40, v8);
      if (!v43)
        v29 = Song.id.getter(v45);
      v46 = *(void (**)(char *, uint64_t))(v9 + 8);
      v46(v44, v8);
      v46(v40, v8);
    }
    else if (v25 == enum case for ReportableMusicItem.lyricsSong(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v24, v21);
      v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v15, v24, v8);
      v29 = Song.catalogID.getter(v47);
      v49 = v48;
      v50 = v65;
      v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 16))(v65, v15, v8);
      if (!v49)
        v29 = Song.id.getter(v51);
      v52 = *(void (**)(char *, uint64_t))(v9 + 8);
      v52(v50, v8);
      v52(v15, v8);
    }
    else if (v25 == enum case for ReportableMusicItem.socialProfile(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v24, v21);
      v54 = v57;
      v53 = v58;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v37 + 32))(v57, v24, v58);
      v29 = SocialProfileDescriptor.musicItemID.getter(v55);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v54, v53);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
      return 0;
    }
  }
  return v29;
}

uint64_t sub_1003711C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[17] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[18] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[19] = v7;
  v4[20] = v8;
  return swift_task_switch(sub_100371230, v7, v8);
}

uint64_t sub_100371230()
{
  uint64_t v0;
  _QWORD *v1;

  static Actions.ReportConcern.action(context:)(*(char **)(v0 + 136), v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011AEB1C);
  *(_QWORD *)(v0 + 168) = v1;
  *v1 = v0;
  v1[1] = sub_100371284;
  return sub_10036FD30();
}

uint64_t sub_100371284()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  sub_10013B1C8(v1 + 2);
  return swift_task_switch(sub_1003712DC, v1[19], v1[20]);
}

uint64_t sub_1003712DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037130C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[17] = a4;
  v5[18] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[19] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[20] = v8;
  v5[21] = v9;
  return swift_task_switch(sub_100371378, v8, v9);
}

uint64_t sub_100371378()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  char *v4;

  v1 = *(void **)(v0 + 144);
  *(_OWORD *)(v0 + 104) = 0u;
  *(_QWORD *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_BYTE *)(v0 + 128) = -1;
  PresentationSource.init(viewController:position:)(v1, v0 + 88, v0 + 16);
  v4 = (char *)&dword_10119E420 + dword_10119E420;
  v2 = (_QWORD *)swift_task_alloc(unk_10119E424);
  *(_QWORD *)(v0 + 176) = v2;
  *v2 = v0;
  v2[1] = sub_100371424;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))v4)(*(_QWORD *)(v0 + 136), 0, 0, 0, 0, v0 + 16);
}

uint64_t sub_100371424()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  sub_100064B4C(v1 + 16);
  return swift_task_switch(sub_10037147C, *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168));
}

uint64_t sub_10037147C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003714AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[17] = a4;
  v5[18] = a5;
  v6 = type metadata accessor for SocialProfileDescriptor(0);
  v5[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[20] = v7;
  v5[21] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[22] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[23] = v10;
  v5[24] = v11;
  return swift_task_switch(sub_100371540, v10, v11);
}

uint64_t sub_100371540()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 144);
  v2 = MusicFriendsInviteDescriptor.userProfileDescriptor.getter();
  v3 = MusicFriendsInviteDescriptor.recipientEmail.getter(v2);
  v5 = v4;
  *(_QWORD *)(v0 + 200) = v4;
  v6 = MusicFriendsInviteDescriptor.recipientPhoneNumber.getter();
  v8 = v7;
  *(_QWORD *)(v0 + 208) = v7;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_QWORD *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_BYTE *)(v0 + 128) = -1;
  PresentationSource.init(viewController:position:)(v1, v0 + 88, v0 + 16);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10119E420
                                                                                     + dword_10119E420);
  v9 = (_QWORD *)swift_task_alloc(unk_10119E424);
  *(_QWORD *)(v0 + 216) = v9;
  *v9 = v0;
  v9[1] = sub_100371628;
  return v11(*(_QWORD *)(v0 + 168), v3, v5, v6, v8, v0 + 16);
}

uint64_t sub_100371628()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 208);
  v3 = *(_QWORD *)(*v0 + 200);
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  sub_100064B4C(v1 + 16);
  return swift_task_switch(sub_10037169C, *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192));
}

uint64_t sub_10037169C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003716F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t (*v13)(uint64_t);
  unint64_t *v14;
  void *v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for ShareableMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, v2, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for ShareableMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
    v10 = type metadata accessor for Album(0);
    v11 = v10;
    v12 = &protocol witness table for Album;
LABEL_32:
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v12;
    goto LABEL_33;
  }
  if (v9 == enum case for ShareableMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
    v10 = type metadata accessor for Artist(0);
    v11 = v10;
    v12 = &protocol witness table for Artist;
    goto LABEL_32;
  }
  if (v9 == enum case for ShareableMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
    v11 = type metadata accessor for Composer(0);
    v13 = (uint64_t (*)(uint64_t))&type metadata accessor for Composer;
    *(_QWORD *)(a1 + 24) = v11;
    v14 = (unint64_t *)&unk_1011AEB70;
    v15 = &protocol conformance descriptor for Composer;
  }
  else
  {
    if (v9 == enum case for ShareableMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
      v10 = type metadata accessor for Curator(0);
      v11 = v10;
      v12 = &protocol witness table for Curator;
      goto LABEL_32;
    }
    if (v9 == enum case for ShareableMusicItem.editorialItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
      v11 = type metadata accessor for EditorialItem(0);
      v13 = (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem;
      *(_QWORD *)(a1 + 24) = v11;
      v14 = (unint64_t *)&unk_1011AEB68;
      v15 = &protocol conformance descriptor for EditorialItem;
    }
    else
    {
      if (v9 == enum case for ShareableMusicItem.genre(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
        v10 = type metadata accessor for Genre(0);
        v11 = v10;
        v12 = &protocol witness table for Genre;
        goto LABEL_32;
      }
      if (v9 == enum case for ShareableMusicItem.musicMovie(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
        v11 = type metadata accessor for MusicMovie(0);
        v13 = (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie;
        *(_QWORD *)(a1 + 24) = v11;
        v14 = (unint64_t *)&unk_1011AEB60;
        v15 = &protocol conformance descriptor for MusicMovie;
      }
      else
      {
        if (v9 == enum case for ShareableMusicItem.musicVideo(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v10 = type metadata accessor for MusicVideo(0);
          v11 = v10;
          v12 = &protocol witness table for MusicVideo;
          goto LABEL_32;
        }
        if (v9 == enum case for ShareableMusicItem.playlist(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v10 = type metadata accessor for Playlist(0);
          v11 = v10;
          v12 = &protocol witness table for Playlist;
          goto LABEL_32;
        }
        if (v9 == enum case for ShareableMusicItem.radioShow(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v10 = type metadata accessor for RadioShow(0);
          v11 = v10;
          v12 = &protocol witness table for RadioShow;
          goto LABEL_32;
        }
        if (v9 == enum case for ShareableMusicItem.recordLabel(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v10 = type metadata accessor for RecordLabel(0);
          v11 = v10;
          v12 = &protocol witness table for RecordLabel;
          goto LABEL_32;
        }
        if (v9 == enum case for ShareableMusicItem.socialProfile(_:))
        {
          result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
          *(_QWORD *)(a1 + 32) = 0;
          *(_OWORD *)a1 = 0u;
          *(_OWORD *)(a1 + 16) = 0u;
          return result;
        }
        if (v9 == enum case for ShareableMusicItem.song(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v10 = type metadata accessor for Song(0);
          v11 = v10;
          v12 = &protocol witness table for Song;
          goto LABEL_32;
        }
        if (v9 == enum case for ShareableMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v10 = type metadata accessor for Station(0);
          v11 = v10;
          v12 = &protocol witness table for Station;
          goto LABEL_32;
        }
        if (v9 == enum case for ShareableMusicItem.track(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v10 = type metadata accessor for Track(0);
          v11 = v10;
          v12 = &protocol witness table for Track;
          goto LABEL_32;
        }
        if (v9 == enum case for ShareableMusicItem.tvEpisode(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v11 = type metadata accessor for TVEpisode(0);
          v13 = (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode;
          *(_QWORD *)(a1 + 24) = v11;
          v14 = (unint64_t *)&unk_1011AEB58;
          v15 = &protocol conformance descriptor for TVEpisode;
        }
        else if (v9 == enum case for ShareableMusicItem.tvSeason(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v11 = type metadata accessor for TVSeason(0);
          v13 = (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason;
          *(_QWORD *)(a1 + 24) = v11;
          v14 = (unint64_t *)&unk_1011AEB50;
          v15 = &protocol conformance descriptor for TVSeason;
        }
        else if (v9 == enum case for ShareableMusicItem.tvShow(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v11 = type metadata accessor for TVShow(0);
          v13 = (uint64_t (*)(uint64_t))&type metadata accessor for TVShow;
          *(_QWORD *)(a1 + 24) = v11;
          v14 = (unint64_t *)&unk_1011AEB48;
          v15 = &protocol conformance descriptor for TVShow;
        }
        else if (v9 == enum case for ShareableMusicItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v11 = type metadata accessor for UploadedAudio(0);
          v13 = (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio;
          *(_QWORD *)(a1 + 24) = v11;
          v14 = (unint64_t *)&unk_1011AEB40;
          v15 = &protocol conformance descriptor for UploadedAudio;
        }
        else
        {
          if (v9 != enum case for ShareableMusicItem.uploadedVideo(_:))
          {
            *(_QWORD *)(a1 + 32) = 0;
            *(_OWORD *)a1 = 0u;
            *(_OWORD *)(a1 + 16) = 0u;
            return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
          }
          (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
          v11 = type metadata accessor for UploadedVideo(0);
          v13 = (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo;
          *(_QWORD *)(a1 + 24) = v11;
          v14 = (unint64_t *)&unk_1011AEB38;
          v15 = &protocol conformance descriptor for UploadedVideo;
        }
      }
    }
  }
  *(_QWORD *)(a1 + 32) = sub_100048748(v14, v13, (uint64_t)v15);
LABEL_33:
  v17 = sub_100049F68((_QWORD *)a1);
  return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v17, v8, v11);
}

uint64_t sub_100371D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[18] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[19] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[20] = v7;
  v4[21] = v8;
  return swift_task_switch(sub_100371D78, v7, v8);
}

uint64_t sub_100371D78()
{
  uint64_t v0;
  _QWORD *v1;

  static Actions.Share.action(context:)(*(uint64_t **)(v0 + 144), v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011AEB2C);
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_100371DCC;
  return sub_100370520();
}

uint64_t sub_100371DCC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  sub_100376D1C(v1 + 2);
  return swift_task_switch(sub_10037147C, v1[20], v1[21]);
}

uint64_t sub_100371E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  __n128 v8;
  _QWORD *v9;

  v5[2] = type metadata accessor for MainActor(0);
  v5[3] = static MainActor.shared.getter(v8);
  v9 = (_QWORD *)swift_task_alloc(dword_1011DBC9C);
  v5[4] = v9;
  *v9 = v5;
  v9[1] = sub_100371E9C;
  return static ClassicalBridge.openPrestoOrStoreSheet(withURL:viewController:)(a4, a5);
}

uint64_t sub_100371E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100371F24;
  else
    v6 = sub_1001FC32C;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100371F24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100371F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for AppInterfaceContext();
  return MusicAppDestinationPageProvider.page(for:stackAuthority:)(a1, a2, v7, a4);
}

uint64_t sub_100371F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for AppInterfaceContext();
  return MusicAppDestinationPageProvider.sheetPage(for:)(a1, v5, a3);
}

uint64_t sub_100371FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for AppInterfaceContext();
  return MusicAppDestinationPageProvider.fullScreenCoverPage(for:)(a1, v5, a3);
}

uint64_t sub_100372014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  v9 = type metadata accessor for AppInterfaceContext();
  return MusicAppDestinationPageProvider.pushPage(for:stackAuthority:context:)(a1, a2, a3, v9, a5);
}

void sub_100372068(uint64_t a1)
{
  sub_10036CCB0(a1);
}

uint64_t sub_100372088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for AppInterfaceContext();
  return MusicAppDestinationPageProvider.presentFullScreenCoverPage(for:context:)(a1, a2, v7, a4);
}

uint64_t sub_1003720D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for AppInterfaceContext();
  return MusicAppDestinationPageProvider.sheetPage(for:context:)(a1, a2, v7, a4);
}

uint64_t sub_100372114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for AppInterfaceContext();
  return MusicAppDestinationPageProvider.fullScreenCoverPage(for:context:)(a1, a2, v7, a4);
}

uint64_t sub_10037215C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v8;

  v2 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = a1;
  v4[8] = 1;
  *((_QWORD *)v4 + 2) = &_swiftEmptySetSingleton;
  swift_storeEnumTagMultiPayload(v4, v5, 2);
  v6 = a1;
  sub_100770824((uint64_t)v4, 0, 0);
  return sub_10005B748((uint64_t)v4, type metadata accessor for AppInterfaceContext.Activity);
}

id sub_100372208()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 62)
    v2 = (void *)(v1 & 0x3FFFFFFFFFFFFFFFLL);
  else
    v2 = *(void **)(v0 + 32);
  return objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
}

void *sub_100372238()
{
  return &protocol witness table for EmptyView;
}

uint64_t sub_100372244()
{
  return sub_100048748(&qword_1011AE9C8, (uint64_t (*)(uint64_t))&type metadata accessor for NoDestination, (uint64_t)&protocol conformance descriptor for NoDestination);
}

uint64_t sub_100372270()
{
  return sub_100048748(&qword_1011AE9D0, _s18AppPageDestinationOMa, (uint64_t)&unk_100EB6B2C);
}

uint64_t _s18AppPageDestinationOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AECD8, (uint64_t)&_s18AppPageDestinationOMn);
}

uint64_t sub_1003722B0()
{
  return sub_100048748(&qword_1011AE9D8, _s23AppSheetPageDestinationOMa, (uint64_t)&unk_100EB6A8C);
}

uint64_t _s23AppSheetPageDestinationOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AEC30, (uint64_t)&_s23AppSheetPageDestinationOMn);
}

uint64_t sub_1003722F0()
{
  return sub_100048748(&qword_1011AE9E0, _s23AppSheetPageDestinationOMa, (uint64_t)&unk_100EB6AC4);
}

uint64_t sub_10037231C()
{
  return sub_100048748(&qword_1011AE9E8, _s23AppSheetPageDestinationOMa, (uint64_t)&unk_100EB6B04);
}

uint64_t sub_100372348()
{
  return sub_100048748(&qword_1011AE9F0, _s18AppPageDestinationOMa, (uint64_t)&unk_100EB6B64);
}

uint64_t sub_100372374()
{
  return sub_100048748(&qword_1011AE9F8, _s18AppPageDestinationOMa, (uint64_t)&unk_100EB6BA4);
}

char *sub_1003723A0(_BYTE *a1, void *a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  objc_class *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  void (*v36)(_BYTE *, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  _BYTE v47[24];
  uint64_t v48;
  _BYTE v49[24];
  objc_super v50;

  v6 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v6);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_durationCalculator;
  v10 = type metadata accessor for DurationCalculator();
  v11 = swift_allocObject(v10, 24, 7);
  *(_QWORD *)&a3[v9] = v11;
  *(_QWORD *)(v11 + 16) = 0;
  a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator] = 0;
  v12 = &a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  v13 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource] = 0;
  a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = 0;
  v14 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer;
  v15 = objc_allocWithZone((Class)UIView);
  v16 = a3;
  *(_QWORD *)&a3[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent] = 0;
  v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = 0;
  v17 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  v18 = enum case for RelatedContentProvider.State.loading(_:);
  v19 = type metadata accessor for RelatedContentProvider.State(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  v20 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentStateSubscription];
  *((_QWORD *)v20 + 4) = 0;
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker] = 0;
  v21 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties];
  v22 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContent] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider] = 1;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver] = 0;
  v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_sheetPresenterDataSource] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionViewLayout] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionView] = 0;
  v23 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference;
  v24 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  v25 = swift_allocObject(v24, 41, 7);
  *(_QWORD *)(v25 + 16) = 0xD00000000000001FLL;
  *(_QWORD *)(v25 + 24) = 0x8000000100E37690;
  *(_QWORD *)(v25 + 32) = 0;
  *(_BYTE *)(v25 + 40) = 1;
  *(_QWORD *)&v16[v23] = v25;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserverSubscription] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dragDropController] = 0;
  v26 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  *v26 = a1;
  v26[1] = &off_1010C8C80;
  swift_unknownObjectRetain(a1, v27);

  v28 = (objc_class *)type metadata accessor for ContainerDetail.ViewController(0);
  v50.receiver = v16;
  v50.super_class = v28;
  v29 = (char *)objc_msgSendSuper2(&v50, "initWithNibName:bundle:", 0, 0);
  v30 = swift_unknownObjectWeakInit(v49, 0);
  swift_unknownObjectWeakAssign(v30, v29);
  sub_100065228(v31, (uint64_t)v47, &qword_1011C5D60);
  v47[8] = 0;
  v32 = &v29[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(&v29[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v49, 33, 0);
  v33 = *(_QWORD *)v32;
  v34 = *((_QWORD *)v32 + 1);
  ObjectType = swift_getObjectType();
  v48 = v33;
  v36 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v34 + 16);
  v37 = v29;
  v36(v47, ObjectType, v34);
  *(_QWORD *)v32 = v48;
  *((_QWORD *)v32 + 1) = v34;
  swift_endAccess(v49);
  LOBYTE(v32) = a1[OBJC_IVAR____TtC5Music21AlbumDetailDataSource_playActivityFeatureIdentifier];
  v38 = v37;
  UIViewController.playActivityFeatureIdentifier.setter(v32);

  v39 = (uint64_t)&a1[OBJC_IVAR____TtC5Music21AlbumDetailDataSource_artwork];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Music21AlbumDetailDataSource_artwork], v49, 0, 0);
  sub_10004A160(v39, (uint64_t)v8, &qword_1011A1440);
  v40 = (uint64_t)&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  swift_beginAccess(&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork], v47, 33, 0);
  sub_1003764B8((uint64_t)v8, v40);
  swift_endAccess(v47);
  v41 = objc_msgSend(v38, "navigationItem");
  objc_msgSend(v41, "setLargeTitleDisplayMode:", 2);

  v42 = *(void **)&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController];
  *(_QWORD *)&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController] = a2;
  v43 = a2;

  sub_100712804();
  v44 = objc_msgSend(v38, "navigationItem");
  objc_msgSend(v44, "setBackButtonDisplayMode:", 2);

  return v38;
}

char *sub_1003728E0(_BYTE *a1, void *a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  objc_class *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  void (*v36)(_BYTE *, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  _BYTE v47[24];
  uint64_t v48;
  _BYTE v49[24];
  objc_super v50;

  v6 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v6);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_durationCalculator;
  v10 = type metadata accessor for DurationCalculator();
  v11 = swift_allocObject(v10, 24, 7);
  *(_QWORD *)&a3[v9] = v11;
  *(_QWORD *)(v11 + 16) = 0;
  a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator] = 0;
  v12 = &a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  v13 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource] = 0;
  a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = 0;
  v14 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer;
  v15 = objc_allocWithZone((Class)UIView);
  v16 = a3;
  *(_QWORD *)&a3[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent] = 0;
  v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = 0;
  v17 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  v18 = enum case for RelatedContentProvider.State.loading(_:);
  v19 = type metadata accessor for RelatedContentProvider.State(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  v20 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentStateSubscription];
  *((_QWORD *)v20 + 4) = 0;
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker] = 0;
  v21 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties];
  v22 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContent] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider] = 1;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver] = 0;
  v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_sheetPresenterDataSource] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionViewLayout] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionView] = 0;
  v23 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference;
  v24 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  v25 = swift_allocObject(v24, 41, 7);
  *(_QWORD *)(v25 + 16) = 0xD00000000000001FLL;
  *(_QWORD *)(v25 + 24) = 0x8000000100E37690;
  *(_QWORD *)(v25 + 32) = 0;
  *(_BYTE *)(v25 + 40) = 1;
  *(_QWORD *)&v16[v23] = v25;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserverSubscription] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dragDropController] = 0;
  v26 = &v16[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  *v26 = a1;
  v26[1] = &off_1010E33F8;
  swift_unknownObjectRetain(a1, v27);

  v28 = (objc_class *)type metadata accessor for ContainerDetail.ViewController(0);
  v50.receiver = v16;
  v50.super_class = v28;
  v29 = (char *)objc_msgSendSuper2(&v50, "initWithNibName:bundle:", 0, 0);
  v30 = swift_unknownObjectWeakInit(v49, 0);
  swift_unknownObjectWeakAssign(v30, v29);
  sub_100065228(v31, (uint64_t)v47, &qword_1011C5D60);
  v47[8] = 0;
  v32 = &v29[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(&v29[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v49, 33, 0);
  v33 = *(_QWORD *)v32;
  v34 = *((_QWORD *)v32 + 1);
  ObjectType = swift_getObjectType();
  v48 = v33;
  v36 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v34 + 16);
  v37 = v29;
  v36(v47, ObjectType, v34);
  *(_QWORD *)v32 = v48;
  *((_QWORD *)v32 + 1) = v34;
  swift_endAccess(v49);
  LOBYTE(v32) = a1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_playActivityFeatureIdentifier];
  v38 = v37;
  UIViewController.playActivityFeatureIdentifier.setter(v32);

  v39 = (uint64_t)&a1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_artwork];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_artwork], v49, 0, 0);
  sub_10004A160(v39, (uint64_t)v8, &qword_1011A1440);
  v40 = (uint64_t)&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  swift_beginAccess(&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork], v47, 33, 0);
  sub_1003764B8((uint64_t)v8, v40);
  swift_endAccess(v47);
  v41 = objc_msgSend(v38, "navigationItem");
  objc_msgSend(v41, "setLargeTitleDisplayMode:", 2);

  v42 = *(void **)&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController];
  *(_QWORD *)&v38[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController] = a2;
  v43 = a2;

  sub_100712804();
  v44 = objc_msgSend(v38, "navigationItem");
  objc_msgSend(v44, "setBackButtonDisplayMode:", 2);

  return v38;
}

void sub_100372E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[19];
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v28 = a2;
  v2 = type metadata accessor for URL(0);
  v26[15] = *(_QWORD *)(v2 - 8);
  v26[16] = v2;
  __chkstk_darwin(v2);
  v26[6] = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShareableMusicItem(0);
  v26[13] = *(_QWORD *)(v4 - 8);
  v26[14] = v4;
  __chkstk_darwin(v4);
  v26[5] = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReportableMusicItem(0);
  v26[11] = *(_QWORD *)(v6 - 8);
  v26[12] = v6;
  __chkstk_darwin(v6);
  v26[4] = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v26[9] = *(_QWORD *)(v8 - 8);
  v26[10] = v8;
  __chkstk_darwin(v8);
  v26[3] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v26[7] = *(_QWORD *)(v10 - 8);
  v26[8] = v10;
  __chkstk_darwin(v10);
  v26[2] = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PlaylistAddableItem(0);
  v26[17] = *(_QWORD *)(v12 - 8);
  v26[18] = v12;
  __chkstk_darwin(v12);
  v26[1] = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s23AppSheetPageDestinationOMa(0);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  v20 = sub_100007E8C(&qword_1011AEA48);
  __chkstk_darwin(v20);
  v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_10005B704(v27, (uint64_t)v22, _s23AppSheetPageDestinationOMa);
  sub_10005B704(v28, v24, _s23AppSheetPageDestinationOMa);
  v25 = (char *)sub_100373100 + 4 * byte_100EB68DA[swift_getEnumCaseMultiPayload(v22, v14)];
  __asm { BR              X10 }
}

uint64_t sub_100373100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_10005B704(v0, v2, _s23AppSheetPageDestinationOMa);
  if (swift_getEnumCaseMultiPayload(v1, v3))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 120) + 8))(v2, *(_QWORD *)(v4 - 112));
    sub_10004FF60(v0, &qword_1011AEA48);
    v5 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v4 - 120);
    v7 = *(_QWORD *)(v4 - 112);
    v8 = *(_QWORD *)(v4 - 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, v1, v7);
    v5 = ((uint64_t (*)(uint64_t, uint64_t))static PlaylistAddableItem.== infix(_:_:))(v2, v8);
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v8, v7);
    v9(v2, v7);
    sub_10005B748(v0, _s23AppSheetPageDestinationOMa);
  }
  return v5 & 1;
}

void sub_100373440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v67 = a2;
  v68 = a1;
  v2 = type metadata accessor for Composer(0);
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  __chkstk_darwin(v2);
  v47 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Artist(0);
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  __chkstk_darwin(v4);
  v45 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v44 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Album(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  __chkstk_darwin(v8);
  v43 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v64 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  __chkstk_darwin(v10);
  v51 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v46 = (char *)v39 - v13;
  __chkstk_darwin(v14);
  v39[0] = (char *)v39 - v15;
  v40 = sub_100007E8C(&qword_1011AD430);
  __chkstk_darwin(v40);
  v41 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v17);
  v39[1] = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v50 = (char *)v39 - v20;
  __chkstk_darwin(v21);
  v49 = (char *)v39 - v22;
  v66 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0);
  v53 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v48 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v42 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  v63 = (char *)v39 - v27;
  __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  __chkstk_darwin(v32);
  v33 = sub_100007E8C(&qword_1011AEA00);
  __chkstk_darwin(v33);
  v35 = (char *)v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (uint64_t)&v35[*(int *)(v36 + 48)];
  sub_10005B704(v68, (uint64_t)v35, _s18AppPageDestinationOMa);
  sub_10005B704(v67, v37, _s18AppPageDestinationOMa);
  v38 = (char *)sub_1003738AC + 4 * byte_100EB68E0[swift_getEnumCaseMultiPayload(v35, v25)];
  __asm { BR              X10 }
}

uint64_t sub_1003738AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(uint64_t, uint64_t);
  __n128 v18;
  char v20;
  __n128 v21;

  sub_10005B704(v3, v2, _s18AppPageDestinationOMa);
  v5 = *(int *)(sub_100007E8C(&qword_1011AEA18) + 48);
  v7 = *(_QWORD *)(v2 + v5);
  v6 = *(_QWORD *)(v2 + v5 + 8);
  if (!swift_getEnumCaseMultiPayload(v0, v1))
  {
    v11 = *(_QWORD *)(v0 + v5);
    v10 = *(_QWORD *)(v0 + v5 + 8);
    v12 = *(_QWORD *)(v4 - 224);
    v13 = *(_QWORD *)(v4 - 304);
    v14 = v0;
    v15 = *(_QWORD *)(v4 - 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v14, v15);
    v16 = ((uint64_t (*)(uint64_t, uint64_t))static MusicAppDestination.AlbumDescriptor.== infix(_:_:))(v2, v13);
    v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v17(v2, v15);
    if ((v16 & 1) != 0)
    {
      if (v6)
      {
        if (v10)
        {
          if (v7 == v11 && v6 == v10)
          {
            v18 = swift_bridgeObjectRelease(v10);
            ((void (*)(uint64_t, uint64_t, __n128))v17)(v13, v15, v18);
            swift_bridgeObjectRelease(v6);
LABEL_17:
            sub_10005B748(v3, _s18AppPageDestinationOMa);
            v9 = 1;
            return v9 & 1;
          }
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, v11, v10, 0);
          v21 = swift_bridgeObjectRelease(v10);
          ((void (*)(uint64_t, uint64_t, __n128))v17)(v13, v15, v21);
          swift_bridgeObjectRelease(v6);
          if ((v20 & 1) != 0)
            goto LABEL_17;
LABEL_18:
          sub_10005B748(v3, _s18AppPageDestinationOMa);
          goto LABEL_3;
        }
        v17(v13, v15);
        v10 = v6;
      }
      else
      {
        v17(v13, v15);
        if (!v10)
          goto LABEL_17;
      }
    }
    else
    {
      v17(v13, v15);
      swift_bridgeObjectRelease(v6);
    }
    swift_bridgeObjectRelease(v10);
    goto LABEL_18;
  }
  v8 = swift_bridgeObjectRelease(v6);
  (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v4 - 224) + 8))(v2, *(_QWORD *)(v4 - 208), v8);
  sub_10004FF60(v3, &qword_1011AEA00);
LABEL_3:
  v9 = 0;
  return v9 & 1;
}

void sub_1003741D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD aBlock[6];
  _OWORD v28[2];
  uint64_t v29;

  if ((Feature.UIP.isEnabled.getter(1) & 1) != 0)
  {
    v5 = MusicStackAuthority.navigationControllerDelegate.getter();
    if (v5)
    {
      v6 = v5;
      v7 = _s11AuthorityAICMa();
      v8 = swift_dynamicCastClass(v6, v7);
      if (!v8)
      {
        swift_unknownObjectRelease(v6);
        return;
      }
      v9 = (*(uint64_t (**)(void))(v8 + 16))();
      if (v9)
      {
        v11 = v9;
        v12 = v10;
        ObjectType = swift_getObjectType();
        v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(ObjectType, v12);
        swift_unknownObjectRelease(v11);
        if (!((unint64_t)v14 >> 62))
          goto LABEL_6;
      }
      else
      {
        v14 = (uint64_t)_swiftEmptyArrayStorage;
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        {
LABEL_6:
          v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v15)
            goto LABEL_7;
          goto LABEL_20;
        }
      }
      if (v14 < 0)
        v26 = v14;
      else
        v26 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v15 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_7:
        v16 = v15 - 1;
        if (__OFSUB__(v15, 1))
        {
          __break(1u);
        }
        else if ((v14 & 0xC000000000000001) == 0)
        {
          if ((v16 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v16 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v17 = *(id *)(v14 + 8 * v16 + 32);
LABEL_12:
            v18 = v17;
            swift_bridgeObjectRelease();
            v19 = (void *)objc_opt_self(_UIViewControllerTransition);
            v20 = swift_allocObject(&unk_1010C1888, 24, 7);
            swift_unknownObjectWeakInit(v20 + 16);
            v21 = swift_allocObject(&unk_1010C1888, 24, 7);
            swift_unknownObjectWeakInit(v21 + 16);
            sub_100051FEC(a3, (uint64_t)v28);
            v22 = swift_allocObject(&unk_1010C18B0, 72, 7);
            v23 = v28[1];
            *(_OWORD *)(v22 + 24) = v28[0];
            *(_QWORD *)(v22 + 16) = v20;
            *(_OWORD *)(v22 + 40) = v23;
            *(_QWORD *)(v22 + 56) = v29;
            *(_QWORD *)(v22 + 64) = v21;
            aBlock[4] = sub_100376558;
            aBlock[5] = v22;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_100264780;
            aBlock[3] = &unk_1010C18C8;
            v24 = _Block_copy(aBlock);
            v25 = objc_msgSend(v19, "zoomWithSourceViewProvider:", v24, swift_release().n128_f64[0]);
            _Block_release(v24);
            objc_msgSend(a1, "_setPreferredTransition:", v25);
            swift_unknownObjectRelease(v6);

            return;
          }
          __break(1u);
          return;
        }
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
        goto LABEL_12;
      }
LABEL_20:
      swift_unknownObjectRelease(v6);
      swift_bridgeObjectRelease();
    }
  }
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10037448C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  _BYTE *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, __n128);
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011AD410);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URLComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)(a3, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011AD410);
LABEL_14:
    if (qword_10119C7B0 != -1)
      swift_once(&qword_10119C7B0, sub_100779430);
    v28 = type metadata accessor for Logger(0);
    sub_100048B14(v28, (uint64_t)qword_10124D980);
    v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v8, a3, v5);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v42 = a2;
      v34 = v33;
      v44[0] = v33;
      *(_DWORD *)v32 = 136446210;
      v43 = a3;
      v35 = sub_100048748(&qword_1011D0EE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v36 = dispatch thunk of CustomStringConvertible.description.getter(v5, v35);
      v45 = sub_100322200(v36, v37, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
      v38 = swift_bridgeObjectRelease();
      v39 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
      v39(v8, v5, v38);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to retrieve start time from lyrics snippet url=%{public}s", v32, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v32, -1, -1);

      ((void (*)(char *, uint64_t))v39)(v43, v5);
    }
    else
    {

      v40 = *(void (**)(char *, uint64_t))(v6 + 8);
      v40(v8, v5);
      v40(a3, v5);
    }
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v16 = URLComponents.queryItemsDictionary.getter();
  if (!v16)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v17);
    goto LABEL_14;
  }
  v18 = v16;
  if (!*(_QWORD *)(v16 + 16) || (v19 = sub_10079C2C4(29556, 0xE200000000000000), (v20 & 1) == 0))
  {
    v17 = swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v42 = v6;
  v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v19);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = 0;
  v25 = __chkstk_darwin(v24);
  *(&v41 - 2) = (uint64_t)&v45;
  if ((v23 & 0x1000000000000000) != 0 || !(v23 & 0x2000000000000000 | v22 & 0x1000000000000000))
  {
    _StringGuts._slowWithCString<A>(_:)(v44, sub_100376580, &v41 - 4, v22, v23, &type metadata for Bool, v25);
    v27 = swift_bridgeObjectRelease();
  }
  else
  {
    v43 = a3;
    if ((v23 & 0x2000000000000000) != 0)
    {
      v44[0] = v22;
      v44[1] = v23 & 0xFFFFFFFFFFFFFFLL;
      if (v22 > 0x20u || ((0x100003E01uLL >> v22) & 1) == 0)
        _swift_stdlib_strtod_clocale(v44, &v45, v25);
      v27 = swift_bridgeObjectRelease();
    }
    else
    {
      if ((v22 & 0x1000000000000000) != 0)
        v26 = (_BYTE *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v26 = (_BYTE *)_StringObject.sharedUTF8.getter(v22, v23);
      sub_100376580(v26, (BOOL *)v44);
      v27 = swift_bridgeObjectRelease();
    }
    a3 = v43;
  }
  (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(a3, v5, v27);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_100374968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t (*v60)(_QWORD);
  char *v61;
  _QWORD v62[7];
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;

  v106 = a3;
  v94 = a2;
  v105 = a1;
  v3 = type metadata accessor for URL(0);
  v101 = *(_QWORD *)(v3 - 8);
  v102 = v3;
  __chkstk_darwin(v3);
  v76 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v92 = (char *)v62 - v6;
  v100 = _s6AlbumsV5ScopeOMa(0);
  v90 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v73 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Composer(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v71 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Artist(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v68 = (char *)v62 - v11;
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  __chkstk_darwin(v12);
  v75 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for Playlist(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v83 = (char *)v62 - v16;
  __chkstk_darwin(v17);
  v89 = (char *)v62 - v18;
  v87 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0);
  v88 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v64 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v66 = (char *)v62 - v21;
  __chkstk_darwin(v22);
  v79 = (char *)v62 - v23;
  __chkstk_darwin(v24);
  v86 = (char *)v62 - v25;
  v63 = type metadata accessor for Song(0);
  v62[6] = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v62[3] = (char *)v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v62[5] = (char *)v62 - v28;
  __chkstk_darwin(v29);
  v62[4] = (char *)v62 - v30;
  v31 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v31);
  v77 = (char *)v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v65 = (char *)v62 - v34;
  __chkstk_darwin(v35);
  v78 = (char *)v62 - v36;
  __chkstk_darwin(v37);
  v91 = (char *)v62 - v38;
  __chkstk_darwin(v39);
  v103 = (char *)v62 - v40;
  __chkstk_darwin(v41);
  v104 = (char *)v62 - v42;
  v96 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v96);
  __chkstk_darwin(v43);
  v98 = (char *)v62 - v44;
  __chkstk_darwin(v45);
  v99 = (char *)v62 - v46;
  v47 = type metadata accessor for Album(0);
  v97 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  __chkstk_darwin(v48);
  __chkstk_darwin(v49);
  v95 = (char *)v62 - v50;
  __chkstk_darwin(v51);
  v80 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
  __chkstk_darwin(v80);
  __chkstk_darwin(v52);
  __chkstk_darwin(v53);
  v81 = (char *)v62 - v54;
  __chkstk_darwin(v55);
  v93 = (char *)v62 - v56;
  v57 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v57);
  v59 = (char *)v62 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v105, (uint64_t)v59, v60);
  v61 = (char *)sub_100375048 + 4 * word_100EB68E8[swift_getEnumCaseMultiPayload(v59, v57)];
  __asm { BR              X10 }
}

char *sub_100375048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  int v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _BYTE *v27;
  char *v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _BYTE *v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t (*v58)(_QWORD, uint64_t);
  int v59;
  __n128 v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  NSObject *v73;
  __n128 v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  __n128 v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  __int128 v84;

  v8 = (uint64_t *)(v2 + *(int *)(sub_100007E8C(&qword_1011AEA18) + 48));
  v10 = *v8;
  v9 = v8[1];
  *(_QWORD *)(v7 - 216) = v10;
  *(_QWORD *)(v7 - 240) = v9;
  v11 = *(_QWORD *)(v7 - 312);
  v12 = *(_QWORD *)(v7 - 416);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v11, v2, v12);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v14 = *(_QWORD *)(v7 - 408);
  *(_QWORD *)(v7 - 248) = v13;
  v13(v14, v11, v12);
  *(_QWORD *)(v7 - 600) = v3;
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v14, v12);
  if (v15 == enum case for MusicAppDestination.AlbumDescriptor.album(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 600) + 96))(v14, v12);
    v16 = *(_QWORD *)(v7 - 280);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    *(_QWORD *)(v7 - 592) = v4;
    v17(v4, v14, v1);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v19 = *(_QWORD *)(v7 - 296);
    v18(v19, v4, v1);
    v20 = *(_BYTE **)(v7 - 264);
    *v20 = 0;
    v21 = swift_storeEnumTagMultiPayload(v20, *(_QWORD *)(v7 - 288), 1);
    v22 = *(_QWORD *)(v7 - 224);
    ((void (*)(uint64_t))MusicAppDestinationContext.originalURL.getter)(v21);
    v23 = v19;
    v18(v0, v19, v1);
    v24 = *(_QWORD *)(v7 - 272);
    sub_10005B704((uint64_t)v20, v24, type metadata accessor for ContainerDetail.Source);
    v25 = *(_QWORD *)(v7 - 232);
    sub_10004A160(v22, v25, &qword_10119E460);
    v26 = sub_1004C73D0(v0, v24, *(_QWORD *)(v7 - 216), *(_QWORD *)(v7 - 240), v25);
    v27 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v28 = sub_1003723A0(v26, 0, v27);
    sub_10004FF60(v22, &qword_10119E460);
    sub_10005B748((uint64_t)v20, type metadata accessor for ContainerDetail.Source);
    v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 280) + 8);
    v29(v23, v1);
    v29(*(_QWORD *)(v7 - 592), v1);
    v30 = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v7 - 600) + 8))(*(_QWORD *)(v7 - 312), v12);
    goto LABEL_16;
  }
  v31 = v15;
  v32 = *(_QWORD *)(v7 - 216);
  v33 = *(_QWORD *)(v7 - 240);
  if (v15 == enum case for MusicAppDestination.AlbumDescriptor.albumID(_:))
  {
    v34 = v3;
    v35 = *(uint64_t **)(v7 - 408);
    v36 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 96))(v35, v12);
    v37 = *v35;
    v38 = v35[1];
    v39 = *(_QWORD *)(v7 - 224);
    ((void (*)(uint64_t))MusicAppDestinationContext.originalURL.getter)(v36);
    v40 = *(_QWORD *)(v7 - 232);
    sub_10004A160(v39, v40, &qword_10119E460);
    v41 = sub_1004C75F0(v37, v38, v32, v33, v40);
    v42 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v28 = sub_1003723A0(v41, 0, v42);
    sub_10004FF60(v39, &qword_10119E460);
    v30 = (*(uint64_t (**)(_QWORD, _QWORD))(v34 + 8))(*(_QWORD *)(v7 - 312), *(_QWORD *)(v7 - 416));
    goto LABEL_16;
  }
  v43 = v12;
  if (v15 == enum case for MusicAppDestination.AlbumDescriptor.song(_:))
  {
    v44 = swift_bridgeObjectRelease();
    v45 = *(_QWORD *)(v7 - 408);
    (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 96))(v45, v12, v44);
    v46 = *(_QWORD *)(v7 - 560);
    v47 = *(_QWORD *)(v7 - 576);
    v48 = *(_QWORD *)(v7 - 552);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v47, v45, v48);
    v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
    v50 = *(_QWORD *)(v7 - 568);
    v51 = v49(v50, v47, v48);
    v52 = *(_QWORD *)(v7 - 224);
    ((void (*)(uint64_t))MusicAppDestinationContext.originalURL.getter)(v51);
    v53 = *(_QWORD *)(v7 - 584);
    v49(v53, v50, v48);
    v54 = *(_QWORD *)(v7 - 232);
    sub_10004A160(v52, v54, &qword_10119E460);
    v55 = sub_1004C79CC(v53, v54);
    v56 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v28 = sub_1003723A0(v55, 0, v56);
    sub_10004FF60(v52, &qword_10119E460);
    v57 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v57(v50, v48);
    v57(v47, v48);
    v58 = *(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v7 - 600) + 8);
LABEL_9:
    v30 = v58(*(_QWORD *)(v7 - 312), v43);
    goto LABEL_16;
  }
  v59 = enum case for MusicAppDestination.AlbumDescriptor.songID(_:);
  v60 = swift_bridgeObjectRelease();
  if (v31 == v59)
  {
    v61 = *(uint64_t **)(v7 - 408);
    v62 = (*(uint64_t (**)(uint64_t *, uint64_t, __n128))(v3 + 96))(v61, v12, v60);
    v63 = *v61;
    v64 = v61[1];
    v65 = *(_QWORD *)(v7 - 224);
    ((void (*)(uint64_t))MusicAppDestinationContext.originalURL.getter)(v62);
    v66 = *(_QWORD *)(v7 - 232);
    sub_10004A160(v65, v66, &qword_10119E460);
    v67 = sub_1004C7E38(v63, v64, v66);
    v68 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v28 = sub_1003723A0(v67, 0, v68);
    sub_10004FF60(v65, &qword_10119E460);
    v58 = *(uint64_t (**)(_QWORD, uint64_t))(v3 + 8);
    goto LABEL_9;
  }
  if (qword_10119C7B0 != -1)
    swift_once(&qword_10119C7B0, sub_100779430);
  v69 = type metadata accessor for Logger(0);
  sub_100048B14(v69, (uint64_t)qword_10124D980);
  v70 = *(_QWORD *)(v7 - 312);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 - 248);
  v72 = v71(v5, v70, v43);
  v73 = Logger.logObject.getter(v72);
  v75 = static os_log_type_t.fault.getter(v74);
  if (os_log_type_enabled(v73, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc(12, -1);
    v77 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v7 - 160) = v77;
    *(_DWORD *)v76 = 136446210;
    v71(v6, v5, *(_QWORD *)(v7 - 416));
    v78 = String.init<A>(describing:)(v6, *(_QWORD *)(v7 - 416));
    *(_QWORD *)(v7 - 200) = sub_100322200(v78, v79, (uint64_t *)(v7 - 160));
    v70 = *(_QWORD *)(v7 - 312);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v7 - 200, v7 - 192);
    v80 = swift_bridgeObjectRelease();
    v81 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    ((void (*)(uint64_t, _QWORD, __n128))v81)(v5, *(_QWORD *)(v7 - 416), v80);
    _os_log_impl((void *)&_mh_execute_header, v73, v75, "Unable to navigate to album: Unknown Descriptor=%{public}s", v76, 0xCu);
    swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
    v82 = v77;
    v43 = *(_QWORD *)(v7 - 416);
    swift_slowDealloc(v82, -1, -1);
    swift_slowDealloc(v76, -1, -1);
  }
  else
  {
    v81 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v81(v5, v43);
  }

  v83 = *(_QWORD *)(v7 - 408);
  v28 = (char *)objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  v81(v70, v43);
  v30 = ((uint64_t (*)(uint64_t, uint64_t))v81)(v83, v43);
LABEL_16:
  ((void (*)(uint64_t))MusicAppDestinationContext.presentationSourceID.getter)(v30);
  if (*(_QWORD *)(v7 - 176))
  {
    v84 = *(_OWORD *)(v7 - 184);
    *(_OWORD *)(v7 - 160) = *(_OWORD *)(v7 - 200);
    *(_OWORD *)(v7 - 144) = v84;
    *(_QWORD *)(v7 - 128) = *(_QWORD *)(v7 - 168);
    sub_1003741D4(v28, *(_QWORD *)(v7 - 304), v7 - 160);
    sub_10004FF2C(v7 - 160);
  }
  else
  {
    sub_10004FF60(v7 - 200, &qword_1011EAEC0);
  }
  return v28;
}

uint64_t sub_1003764B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A1440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100376500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100376524()
{
  uint64_t v0;

  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 72);
}

void sub_100376558(uint64_t a1)
{
  uint64_t v1;

  sub_10036B8A0(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 64));
}

uint64_t sub_100376568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100376578(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_BYTE *sub_100376580@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1003765EC()
{
  return sub_1003768FC((uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_1003765F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011AEA6C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_100371E24(a1, v6, v7, v8, v9);
}

uint64_t sub_10037669C()
{
  uint64_t v0;
  unint64_t v1;
  int v2;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + 72), v1);
  swift_unknownObjectWeakDestroy(v0 + 88, v1);
  v2 = *(unsigned __int8 *)(v0 + 136);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v2);
  if (*(_QWORD *)(v0 + 144))
    swift_release();
  return swift_deallocObject(v0, 160);
}

uint64_t sub_100376714()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[7];
  v3 = v0[8];
  v4 = v0[9];
  v5 = v0[10];
  v6 = (_QWORD *)swift_task_alloc(dword_1011B61C4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  return sub_1004940BC((uint64_t)(v0 + 2), v2, v3, v4, v5, (uint64_t)(v0 + 11));
}

uint64_t sub_100376790()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_bridgeObjectRelease(v0[11]);
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1003767D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011AEA8C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return sub_100371D0C(a1, v4, v5, v1 + 32);
}

uint64_t sub_100376840()
{
  return sub_1003768FC((uint64_t (*)(_QWORD))&type metadata accessor for MusicFriendsInviteDescriptor);
}

uint64_t sub_10037684C(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = *(_QWORD *)(type metadata accessor for MusicFriendsInviteDescriptor(0, a2) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  v9 = v2 + v6;
  v10 = *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1011AEA9C);
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_10006AEE4;
  return sub_1003714AC(a1, v7, v8, v9, v10);
}

uint64_t sub_1003768F0()
{
  return sub_1003768FC((uint64_t (*)(_QWORD))&type metadata accessor for SocialProfileDescriptor);
}

uint64_t sub_1003768FC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v8);

  return swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_100376990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for SocialProfileDescriptor(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011AEAAC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_10037130C(a1, v6, v7, v8, v9);
}

uint64_t sub_100376A34()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_unknownObjectWeakDestroy(v0 + 48, v1);
  v2 = *(unsigned __int8 *)(v0 + 96);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v2);
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  return swift_deallocObject(v0, 120);
}

uint64_t sub_100376A94()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100376AD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011AEABC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return sub_1003711C4(a1, v4, v5, v1 + 32);
}

uint64_t sub_100376B3C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for Actions.Collaborate.Context(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v4 = type metadata accessor for Playlist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3);
}

uint64_t sub_100376BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actions.Collaborate.Context(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1011AEACC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_100370B80(a1, v5, v6, v7);
}

uint64_t sub_100376C74()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100376CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011AEAF4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return sub_10036ED94(a1, v4, v5, v1 + 32);
}

_QWORD *sub_100376D1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[10];
  v7 = a1[13];
  swift_release(a1[15]);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

_QWORD *sub_100376DA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100376E2C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100376E60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __n128 v9;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011AEB94);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10036BC18(v9, a1, v4, v5, v7, v6);
}

uint64_t sub_100376ED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100376F28 + 4 * byte_100EB68F6[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t sub_10037707C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      v4 = type metadata accessor for PlaylistAddableItem(0);
      goto LABEL_8;
    case 1:
      v4 = type metadata accessor for Playlist(0);
      goto LABEL_8;
    case 2:
      v4 = type metadata accessor for Song(0);
      goto LABEL_8;
    case 3:
      v4 = type metadata accessor for ReportableMusicItem(0);
      goto LABEL_8;
    case 4:
      v4 = type metadata accessor for ShareableMusicItem(0);
      goto LABEL_8;
    case 5:
      v4 = type metadata accessor for URL(0);
LABEL_8:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    default:
      return result;
  }
  return result;
}

void sub_100377120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100377168 + 4 * byte_100EB6902[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100377168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = type metadata accessor for PlaylistAddableItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v3, v4);
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_1003771E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, _s23AppSheetPageDestinationOMa);
    v5 = (char *)&loc_100377248 + 4 * byte_100EB6908[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1003772C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100377310 + 4 * byte_100EB690E[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100377310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = type metadata accessor for PlaylistAddableItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v0, v3, v4);
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_100377390(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, _s23AppSheetPageDestinationOMa);
    v5 = (char *)&loc_1003773F0 + 4 * byte_100EB6914[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_100377470(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[6];

  result = type metadata accessor for PlaylistAddableItem(319);
  if (v3 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Song(319);
      if (v5 <= 0x3F)
      {
        v9[2] = *(_QWORD *)(result - 8) + 64;
        result = type metadata accessor for ReportableMusicItem(319);
        if (v6 <= 0x3F)
        {
          v9[3] = *(_QWORD *)(result - 8) + 64;
          result = type metadata accessor for ShareableMusicItem(319);
          if (v7 <= 0x3F)
          {
            v9[4] = *(_QWORD *)(result - 8) + 64;
            result = type metadata accessor for URL(319);
            if (v8 <= 0x3F)
            {
              v9[5] = *(_QWORD *)(result - 8) + 64;
              swift_initEnumMetadataMultiPayload(a1, 256, 6, v9);
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100377560(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1003775B8 + 4 * byte_100EB691A[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_100377838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  v2 = a1;
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v3 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
      v4 = *(_QWORD *)(v2 + *(int *)(sub_100007E8C(&qword_1011AEA18) + 48) + 8);
      swift_bridgeObjectRelease(v4);
      return;
    case 1u:
      v5 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
      v6 = sub_100007E8C(&qword_1011AEA10);
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + *(int *)(v6 + 48) + 8));
      v7 = v2 + *(int *)(v6 + 64);
      v8 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        v13 = v7;
        v11 = v8;
        goto LABEL_11;
      }
      return;
    case 2u:
      v10 = type metadata accessor for Album(0);
      goto LABEL_10;
    case 3u:
      v10 = type metadata accessor for Playlist(0);
      goto LABEL_10;
    case 4u:
      v10 = type metadata accessor for Artist(0);
      goto LABEL_10;
    case 5u:
      v10 = type metadata accessor for Composer(0);
      goto LABEL_10;
    case 6u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      v2 += *(int *)(sub_100007E8C(&qword_1011AEA08) + 48);
      v10 = type metadata accessor for URL(0);
LABEL_10:
      v11 = v10;
      v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v13 = v2;
LABEL_11:
      v12(v13, v11);
      break;
    default:
      return;
  }
}

void sub_1003779B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100377A04 + 4 * byte_100EB6928[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100377A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
  v4 = *(int *)(sub_100007E8C(&qword_1011AEA18) + 48);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v2 + v4);
  v7 = v6[1];
  *v5 = *v6;
  v5[1] = v7;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_100377C64(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, _s18AppPageDestinationOMa);
    v5 = (char *)&loc_100377CC8 + 4 * byte_100EB692F[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_100377F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100377F88 + 4 * byte_100EB6936[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100377F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v0, v2, v3);
  v4 = sub_100007E8C(&qword_1011AEA18);
  *(_OWORD *)(v0 + *(int *)(v4 + 48)) = *(_OWORD *)(v2 + *(int *)(v4 + 48));
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_1003781C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, _s18AppPageDestinationOMa);
    v5 = (char *)&loc_100378224 + 4 * byte_100EB693D[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_100378460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE v19[32];
  _BYTE v20[32];
  _BYTE v21[32];
  _QWORD v22[7];

  v2 = type metadata accessor for MusicAppDestination.AlbumDescriptor(319);
  v3 = v2;
  if (v4 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v21, *(_QWORD *)(v2 - 8) + 64, &unk_100EB6C68);
    v22[0] = v21;
    v3 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(319);
    if (v5 <= 0x3F)
    {
      sub_10027CB38(319);
      if (v7 > 0x3F)
      {
        return v6;
      }
      else
      {
        swift_getTupleTypeLayout3(v20, *(_QWORD *)(v3 - 8) + 64, &unk_100EB6C68, *(_QWORD *)(v6 - 8) + 64);
        v22[1] = v20;
        v8 = type metadata accessor for Album(319);
        v3 = v8;
        if (v9 <= 0x3F)
        {
          v22[2] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for Playlist(319);
          v3 = v10;
          if (v11 <= 0x3F)
          {
            v22[3] = *(_QWORD *)(v10 - 8) + 64;
            v12 = type metadata accessor for Artist(319);
            v3 = v12;
            if (v13 <= 0x3F)
            {
              v22[4] = *(_QWORD *)(v12 - 8) + 64;
              v14 = type metadata accessor for Composer(319);
              v3 = v14;
              if (v15 <= 0x3F)
              {
                v22[5] = *(_QWORD *)(v14 - 8) + 64;
                v16 = type metadata accessor for URL(319);
                v3 = v16;
                if (v17 <= 0x3F)
                {
                  swift_getTupleTypeLayout2(v19, &unk_100EB6C80, *(_QWORD *)(v16 - 8) + 64);
                  v22[6] = v19;
                  swift_initEnumMetadataMultiPayload(a1, 256, 7, v22);
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return v3;
}

_OWORD *sub_1003785EC(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *(_QWORD *)v4 = *a2;
      *((_QWORD *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    v9 = a2[3];
    *((_QWORD *)v4 + 2) = a2[2];
    v10 = *((_BYTE *)a2 + 32);
    swift_bridgeObjectRetain();
    sub_10006B3F8(v9, v10);
    *((_QWORD *)v4 + 3) = v9;
    *((_BYTE *)v4 + 32) = v10;
    v11 = a2[5];
    v12 = *((_BYTE *)a2 + 48);
    sub_10006B3F8(v11, v12);
    *((_QWORD *)v4 + 5) = v11;
    *((_BYTE *)v4 + 48) = v12;
    v13 = *(int *)(a3 + 32);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = sub_100007E8C(&qword_1011AED10);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return v4;
}

double sub_10037872C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (*(_QWORD *)a1)
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  sub_10006B604(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_10006B604(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1003787CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_10006B3F8(v7, v8);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_10006B3F8(v9, v10);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  v11 = *(int *)(a3 + 32);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    *v12 = *v13;
    swift_retain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

uint64_t sub_1003788D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = a2[3];
  v11 = *((_BYTE *)a2 + 32);
  sub_10006B3F8(v10, v11);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  sub_10006B604(v12, v13);
  v14 = a2[5];
  v15 = *((_BYTE *)a2 + 48);
  sub_10006B3F8(v14, v15);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v14;
  *(_BYTE *)(a1 + 48) = v15;
  sub_10006B604(v16, v17);
  if ((uint64_t *)a1 != a2)
  {
    v18 = *(int *)(a3 + 32);
    v19 = (_QWORD *)(a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    sub_10004FF60(a1 + v18, &qword_1011AED10);
    v21 = sub_100007E8C(&qword_1011AED10);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  return a1;
}

uint64_t sub_100378A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100378B30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRelease(v9);
  v10 = *((_BYTE *)a2 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_BYTE *)(a1 + 32) = v10;
  sub_10006B604(v11, v12);
  v13 = *((_BYTE *)a2 + 48);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_BYTE *)(a1 + 48) = v13;
  sub_10006B604(v14, v15);
  if ((uint64_t *)a1 != a2)
  {
    v16 = *(int *)(a3 + 32);
    v17 = (void *)(a1 + v16);
    v18 = (char *)a2 + v16;
    sub_10004FF60(a1 + v16, &qword_1011AED10);
    v19 = sub_100007E8C(&qword_1011AED10);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100378C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100378C88);
}

uint64_t sub_100378C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011AED18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100378D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100378D14);
}

uint64_t sub_100378D14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011AED18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t _s16PlaybackControlsVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AED78;
  if (!qword_1011AED78)
    return swift_getSingletonMetadata(a1, &_s16PlaybackControlsVMn);
  return result;
}

void sub_100378DC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EB6D18;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_100EB6D30;
  v4[3] = &unk_100EB6D30;
  sub_100378E54(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_100378E54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011AED88)
  {
    v2 = type metadata accessor for RedactionReasons(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011AED88);
  }
}

uint64_t sub_100378EA8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9D6D0, 1);
}

uint64_t sub_100378EB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011AEDC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011AEDD0);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0x4030000000000000;
  v6[16] = 0;
  v11 = sub_100007E8C(&qword_1011AEDD8);
  sub_100379034(v2, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v12 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_10006B3F8(v12, v2);
  v13 = sub_100824E5C(v12, v2);
  sub_10006B604(v12, v2);
  if ((v13 & 0xFE) == 2)
    v14 = 2;
  else
    v14 = (v13 & 1) == 0;
  v15 = sub_100049F28(&qword_1011AEDE0, &qword_1011AEDC8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.playIntentButtonMaterial(_:)(v14, v4, v15);
  sub_10004FF60((uint64_t)v6, &qword_1011AEDC8);
  return sub_100065228((uint64_t)v9, a1, &qword_1011AEDD0);
}

uint64_t sub_100379034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _OWORD v91[3];
  _OWORD v92[3];

  v90 = a2;
  v3 = _s16PlaybackControlsVMa(0);
  v77 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v77 + 64);
  __chkstk_darwin(v3);
  v79 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100007E8C(&qword_1011AEDE8);
  __chkstk_darwin(v87);
  v89 = (_QWORD *)((char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = sub_100007E8C(&qword_1011AEDF0);
  __chkstk_darwin(v88);
  v85 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v86);
  v8 = (__int128 *)((char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_100007E8C(&qword_1011AEDF8);
  __chkstk_darwin(v80);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100007E8C(&qword_1011AEE00);
  __chkstk_darwin(v81);
  v82 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v78 = (uint64_t)&v76 - v13;
  __chkstk_darwin(v14);
  v84 = (uint64_t)&v76 - v15;
  __chkstk_darwin(v16);
  v83 = (uint64_t)&v76 - v17;
  v18 = type metadata accessor for RedactionReasons(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v76 - v23;
  v25 = a1;
  v26 = sub_100825264((uint64_t)&v76 - v23);
  static RedactionReasons.placeholder.getter(v26);
  v27 = sub_100379EA4();
  dispatch thunk of RawRepresentable.rawValue.getter(v92, v18, v27);
  dispatch thunk of RawRepresentable.rawValue.getter(v91, v18, v27);
  v28 = *(_QWORD *)&v92[0];
  v29 = *(_QWORD *)&v91[0];
  v30 = *(void (**)(char *, uint64_t))(v19 + 8);
  v30(v21, v18);
  v30(v24, v18);
  if (v28 == v29)
  {
    v31 = (char *)v8 + *(int *)(v86 + 20);
    v32 = enum case for RoundedCornerStyle.continuous(_:);
    LODWORD(v79) = enum case for RoundedCornerStyle.continuous(_:);
    v33 = type metadata accessor for RoundedCornerStyle(0);
    v77 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 104);
    ((void (*)(char *, uint64_t, uint64_t))v77)(v31, v32, v33);
    __asm { FMOV            V0.2D, #10.0 }
    v76 = _Q0;
    *v8 = _Q0;
    v39 = (void *)objc_opt_self(UIColor);
    v40 = Color.init(_:)(objc_msgSend(v39, "tertiarySystemFillColor"));
    KeyPath = swift_getKeyPath(&unk_100EB6D98);
    sub_10005B704((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v42 = v80;
    v43 = (uint64_t *)&v10[*(int *)(v80 + 36)];
    *v43 = KeyPath;
    v43[1] = v40;
    v44 = sub_10005B748((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v45 = static Alignment.center.getter(v44);
    _FrameLayout.init(width:height:alignment:)(v91, 0, 1, 0x4048000000000000, 0, v45, v46);
    v47 = v84;
    sub_10004A160((uint64_t)v10, v84, &qword_1011AEDF8);
    v48 = v81;
    v49 = (_OWORD *)(v47 + *(int *)(v81 + 36));
    v50 = v91[1];
    *v49 = v91[0];
    v49[1] = v50;
    v49[2] = v91[2];
    sub_10004FF60((uint64_t)v10, &qword_1011AEDF8);
    v51 = v83;
    sub_100065228(v47, v83, &qword_1011AEE00);
    ((void (*)(char *, _QWORD, uint64_t))v77)((char *)v8 + *(int *)(v86 + 20), v79, v33);
    *v8 = v76;
    v52 = Color.init(_:)(objc_msgSend(v39, "tertiarySystemFillColor"));
    v53 = swift_getKeyPath(&unk_100EB6D98);
    sub_10005B704((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v54 = (uint64_t *)&v10[*(int *)(v42 + 36)];
    *v54 = v53;
    v54[1] = v52;
    v55 = sub_10005B748((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v56 = static Alignment.center.getter(v55);
    _FrameLayout.init(width:height:alignment:)(v92, 0, 1, 0x4048000000000000, 0, v56, v57);
    v58 = v78;
    sub_10004A160((uint64_t)v10, v78, &qword_1011AEDF8);
    v59 = (_OWORD *)(v58 + *(int *)(v48 + 36));
    v60 = v92[1];
    *v59 = v92[0];
    v59[1] = v60;
    v59[2] = v92[2];
    sub_10004FF60((uint64_t)v10, &qword_1011AEDF8);
    sub_100065228(v58, v47, &qword_1011AEE00);
    sub_10004A160(v51, v58, &qword_1011AEE00);
    v61 = v82;
    sub_10004A160(v47, v82, &qword_1011AEE00);
    v62 = v85;
    sub_10004A160(v58, v85, &qword_1011AEE00);
    v63 = sub_100007E8C(&qword_1011AEE18);
    sub_10004A160(v61, v62 + *(int *)(v63 + 48), &qword_1011AEE00);
    sub_10004FF60(v61, &qword_1011AEE00);
    sub_10004FF60(v58, &qword_1011AEE00);
    v64 = v89;
    sub_10004A160(v62, (uint64_t)v89, &qword_1011AEDF0);
    swift_storeEnumTagMultiPayload(v64, v87, 0);
    v65 = sub_100049F28(&qword_1011AEE10, &qword_1011AEDF0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v66 = sub_1001AA6D0();
    _ConditionalContent<>.init(storage:)(v64, v88, &type metadata for PlayIntentButtonStack, v65, v66);
    sub_10004FF60(v62, &qword_1011AEDF0);
    sub_10004FF60(v47, &qword_1011AEE00);
    return sub_10004FF60(v51, &qword_1011AEE00);
  }
  else
  {
    v68 = *(_QWORD *)(v25 + 16);
    v69 = v79;
    sub_10005B704(v25, v79, _s16PlaybackControlsVMa);
    v70 = *(unsigned __int8 *)(v77 + 80);
    v71 = (v70 + 16) & ~v70;
    v72 = swift_allocObject(&unk_1010C1C10, v71 + v4, v70 | 7);
    sub_10005B6C0(v69, v72 + v71, _s16PlaybackControlsVMa);
    v73 = v89;
    *v89 = v68;
    v73[1] = sub_100379FC4;
    v73[2] = v72;
    swift_storeEnumTagMultiPayload(v73, v87, 1);
    v74 = sub_100049F28(&qword_1011AEE10, &qword_1011AEDF0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v75 = sub_1001AA6D0();
    swift_bridgeObjectRetain();
    return _ConditionalContent<>.init(storage:)(v73, v88, &type metadata for PlayIntentButtonStack, v74, v75);
  }
}

double sub_100379770(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v4 = _s16PlaybackControlsVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_10005B704(a2, (uint64_t)v7, _s16PlaybackControlsVMa);
  type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = v15 + v6;
  v17 = swift_allocObject(&unk_1010C1C38, v15 + v6 + 1, v14 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0((uint64_t)v7, v17 + v15, _s16PlaybackControlsVMa);
  *(_BYTE *)(v17 + v16) = a1;
  sub_100166D14((uint64_t)v10, (uint64_t)&unk_1011AEE28, v17);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1003798C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v5 + 120) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)(v5 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v5 + 32) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 40) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v5 + 48) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 56) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 64) = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011A9A10);
  *(_QWORD *)(v5 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 80) = v12;
  *(_QWORD *)(v5 + 88) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 96) = v14;
  *(_QWORD *)(v5 + 104) = v15;
  return swift_task_switch(sub_1003799C0, v14, v15);
}

uint64_t sub_1003799C0()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);

  v1 = **(int ***)(v0 + 16);
  if (v1)
  {
    v31 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 112) = v2;
    *v2 = v0;
    v2[1] = sub_100379C4C;
    return v31(*(_QWORD *)(v0 + 72));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v4, 1, 1, v5, v7);
    v8 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 32);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 48);
    if (!v10(v8, 1, v9))
    {
      v11 = *(unsigned __int8 *)(v0 + 120);
      v12 = (void *)PlaybackIntentDescriptor.intent.getter();
      objc_msgSend(v12, "setShuffleMode:", v11 == 1);

      v13 = (void *)PlaybackIntentDescriptor.intent.getter();
      objc_msgSend(v13, "setRepeatMode:", 0);

      *(_BYTE *)(v8 + *(int *)(v9 + 32)) = v11 == 2;
      v8 = *(_QWORD *)(v0 + 72);
      v9 = *(_QWORD *)(v0 + 32);
    }
    if (!v10(v8, 1, v9))
    {
      v15 = *(_QWORD *)(v0 + 56);
      v14 = *(_QWORD *)(v0 + 64);
      v17 = *(_QWORD *)(v0 + 40);
      v16 = *(_QWORD *)(v0 + 48);
      v18 = *(_QWORD *)(v0 + 24);
      sub_10005B704(v8, v14, type metadata accessor for PlaybackIntentDescriptor);
      v19 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
      sub_10005B704(v14, v15, type metadata accessor for PlaybackIntentDescriptor);
      v21 = static MainActor.shared.getter(v20);
      v22 = *(unsigned __int8 *)(v17 + 80);
      v23 = (v22 + 32) & ~v22;
      v24 = (v16 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
      v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
      v26 = swift_allocObject(&unk_1010C1C60, v25 + 16, v22 | 7);
      *(_QWORD *)(v26 + 16) = v21;
      *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
      sub_10005B6C0(v15, v26 + v23, type metadata accessor for PlaybackIntentDescriptor);
      *(_QWORD *)(v26 + v24) = 0;
      v27 = (_QWORD *)(v26 + v25);
      *v27 = 0;
      v27[1] = 0;
      sub_100166D14(v18, (uint64_t)&unk_1011A3D90, v26);
      swift_release();
      sub_10005B748(v14, type metadata accessor for PlaybackIntentDescriptor);
      v8 = *(_QWORD *)(v0 + 72);
    }
    v28 = *(_QWORD *)(v0 + 56);
    v29 = *(_QWORD *)(v0 + 64);
    v30 = *(_QWORD *)(v0 + 24);
    sub_10004FF60(v8, &qword_1011A9A10);
    swift_task_dealloc(v8);
    swift_task_dealloc(v29);
    swift_task_dealloc(v28);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100379C4C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_100379C98, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_100379C98()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t, __n128);
  int v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release();
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 40) + 48);
  if (!v4(v2, 1, v3, v1))
  {
    v5 = *(unsigned __int8 *)(v0 + 120);
    v6 = (void *)PlaybackIntentDescriptor.intent.getter();
    objc_msgSend(v6, "setShuffleMode:", v5 == 1);

    v7 = (void *)PlaybackIntentDescriptor.intent.getter();
    objc_msgSend(v7, "setRepeatMode:", 0);

    *(_BYTE *)(v2 + *(int *)(v3 + 32)) = v5 == 2;
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 32);
  }
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v4)(v2, 1, v3))
  {
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 24);
    sub_10005B704(v2, v8, type metadata accessor for PlaybackIntentDescriptor);
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    sub_10005B704(v8, v9, type metadata accessor for PlaybackIntentDescriptor);
    v15 = static MainActor.shared.getter(v14);
    v16 = *(unsigned __int8 *)(v11 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject(&unk_1010C1C60, v19 + 16, v16 | 7);
    *(_QWORD *)(v20 + 16) = v15;
    *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0(v9, v20 + v17, type metadata accessor for PlaybackIntentDescriptor);
    *(_QWORD *)(v20 + v18) = 0;
    v21 = (_QWORD *)(v20 + v19);
    *v21 = 0;
    v21[1] = 0;
    sub_100166D14(v12, (uint64_t)&unk_1011A3D90, v20);
    swift_release();
    sub_10005B748(v8, type metadata accessor for PlaybackIntentDescriptor);
    v2 = *(_QWORD *)(v0 + 72);
  }
  v22 = *(_QWORD *)(v0 + 56);
  v23 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 24);
  sub_10004FF60(v2, &qword_1011A9A10);
  swift_task_dealloc(v2);
  swift_task_dealloc(v23);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100379EA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AEE08;
  if (!qword_1011AEE08)
  {
    v1 = type metadata accessor for RedactionReasons(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for RedactionReasons, v1);
    atomic_store(result, (unint64_t *)&qword_1011AEE08);
  }
  return result;
}

uint64_t sub_100379EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = _s16PlaybackControlsVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  if (*(_QWORD *)(v0 + v3))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 16));
  sub_10006B604(*(_QWORD *)(v5 + 24), *(_BYTE *)(v5 + 32));
  sub_10006B604(*(_QWORD *)(v5 + 40), *(_BYTE *)(v5 + 48));
  v6 = v5 + *(int *)(v1 + 32);
  v7 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

double sub_100379FC4(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s16PlaybackControlsVMa(0) - 8) + 80);
  return sub_100379770(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10037A008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = _s16PlaybackControlsVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v3;
  if (*(_QWORD *)(v0 + v3))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 16));
  sub_10006B604(*(_QWORD *)(v5 + 24), *(_BYTE *)(v5 + 32));
  sub_10006B604(*(_QWORD *)(v5 + 40), *(_BYTE *)(v5 + 48));
  v6 = v5 + *(int *)(v1 + 32);
  v7 = sub_100007E8C(&qword_1011AED10);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v4 + v3 + 1);
}

uint64_t sub_10037A0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(_s16PlaybackControlsVMa(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_BYTE *)(v1 + v5 + *(_QWORD *)(v4 + 64));
  v10 = (_QWORD *)swift_task_alloc(dword_1011AEE24);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1003798C8(a1, v6, v7, v8, v9);
}

uint64_t sub_10037A188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v9[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);

  if (*(_QWORD *)(v0 + v8))
    swift_release();
  return swift_deallocObject(v0, v8 + 16);
}

unint64_t sub_10037A274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AEE30;
  if (!qword_1011AEE30)
  {
    v1 = sub_100044B54(&qword_1011AEDD0);
    sub_100049F28(&qword_1011AEDE0, &qword_1011AEDC8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011AEE38, &qword_1011AEE40, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AEE30);
  }
  return result;
}

id sub_10037A4DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s10HeaderCellCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s10HeaderCellCMa()
{
  return objc_opt_self(_TtCV5Music15ContainerDetail10HeaderCell);
}

id sub_10037A540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  int v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  NSString v109;
  void *v110;
  uint64_t v111;
  id v112;
  _UNKNOWN **v113;
  __objc2_prot_list **p_base_prots;
  uint64_t *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  id v124;
  int v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  NSString v129;
  void *v130;
  id v131;
  const void *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __objc2_prot_list **v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  NSString v142;
  void *v143;
  id v144;
  uint64_t v145;
  NSString v146;
  id v147;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  void **aBlock;
  uint64_t v183;
  void (*v184)(uint64_t, void *);
  void *v185;
  double (*v186)(uint64_t);
  char *v187;

  v178 = a6;
  v163 = a5;
  v177 = a3;
  v180 = a1;
  v156 = type metadata accessor for MusicVideo(0);
  v151 = *(_QWORD *)(v156 - 8);
  v8 = __chkstk_darwin(v156);
  v155 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v154 = (char *)&v149 - v10;
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v159 = (char *)&v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v158 = (char *)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for Track(0);
  v153 = *(_QWORD *)(v171 - 8);
  v15 = __chkstk_darwin(v171);
  v150 = (char *)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v175 = (char *)&v149 - v17;
  v172 = type metadata accessor for Song(0);
  v157 = *(_QWORD *)(v172 - 8);
  v18 = __chkstk_darwin(v172);
  v152 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v174 = (char *)&v149 - v21;
  v179 = *(_QWORD *)(a4 - 8);
  v164 = a4;
  v22 = __chkstk_darwin(v20);
  v162 = (char *)&v149 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = v23;
  __chkstk_darwin(v22);
  v173 = (char *)&v149 - v24;
  v25 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v26 = *(_QWORD *)(v25 - 8);
  v169 = v25;
  v170 = v26;
  __chkstk_darwin(v25);
  v166 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C(&qword_1011A2A10);
  v168 = *(_QWORD *)(v28 - 8);
  v29 = __chkstk_darwin(v28);
  v167 = (char *)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v165 = (char *)&v149 - v31;
  v32 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = (char *)&v149 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C((uint64_t *)&unk_1011B8E10);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&v149 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v38);
  v43 = (char *)&v149 - v42;
  static MusicLibraryAction<>.removeDownload.getter(v41);
  v44 = a4;
  v45 = v178;
  MusicLibrary.supportedStatus<A, B>(for:action:)(v180, v35, v44, v32, v178, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v40, v43, v36);
  LODWORD(v32) = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v40, v36);
  v181 = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
  v46 = *(void (**)(char *, uint64_t))(v37 + 8);
  v46(v40, v36);
  v47 = v43;
  v48 = v172;
  v49 = ((uint64_t (*)(char *, uint64_t))v46)(v47, v36);
  v50 = v166;
  static MusicLibraryAction<>.remove.getter(v49);
  v51 = v165;
  v52 = v180;
  v53 = v164;
  v54 = v169;
  v160 = a2;
  MusicLibrary.supportedStatus<A, B>(for:action:)(v180, v50, v164, v169, v45, &protocol witness table for MusicLibrary.RemoveAction);
  v55 = v53;
  (*(void (**)(char *, uint64_t))(v170 + 8))(v50, v54);
  v56 = v168;
  v57 = v167;
  (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v167, v51, v28);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v57, v28);
  v59 = *(void (**)(char *, uint64_t))(v56 + 8);
  v59(v57, v28);
  v60 = v51;
  v61 = v32;
  v62 = v171;
  v63 = v28;
  v64 = v173;
  v59(v60, v63);
  v65 = v52;
  v67 = v174;
  v66 = v175;
  v170 = *(_QWORD *)(v179 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v170)(v64, v65, v55);
  v68 = swift_dynamicCast(v67, v64, v55, v48, 0);
  v176 = v61;
  if (v68 && ((*(void (**)(char *, uint64_t))(v157 + 8))(v67, v48), v61 == v181) && v58 == v181
    || swift_dynamicCast(v66, v64, v55, v62, 0)
    && ((*(void (**)(char *, uint64_t))(v153 + 8))(v66, v62), v61 == v181)
    && v58 == v181)
  {
    (*(void (**)(char *, uint64_t))(v179 + 8))(v64, v55);
    v69 = v158;
    v70 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x8000000100E37810);
    v71 = v159;
    static Locale.current.getter(v70);
    String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, 0, v71, 0, 0, 256);
    v73 = v72;
    v74 = 0x8000000100E2EBF0;
    v75 = 0xD000000000000013;
LABEL_28:
    v107 = String.LocalizationValue.init(stringLiteral:)(v75, v74);
    static Locale.current.getter(v107);
    v174 = (char *)String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, 0, v71, 0, 0, 256);
    v175 = v108;
    goto LABEL_29;
  }
  v76 = v62;
  v77 = v154;
  v78 = v156;
  v79 = swift_dynamicCast(v154, v64, v55, v156, 0);
  v80 = v155;
  if (v79)
  {
    if (v61 == v181 && v58 == v181)
    {
      v81 = v158;
      v82 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100E377B0);
      v83 = v159;
      static Locale.current.getter(v82);
      String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, 0, v83, 0, 0, 256);
      v84 = v64;
      v73 = v85;
      v86 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E2EBF0);
      static Locale.current.getter(v86);
      v174 = (char *)String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, 0, v83, 0, 0, 256);
      v175 = v87;
      (*(void (**)(char *, uint64_t))(v151 + 8))(v77, v78);
      (*(void (**)(char *, uint64_t))(v179 + 8))(v84, v55);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v151 + 8))(v77, v78);
  }
  v88 = v152;
  if (!swift_dynamicCast(v152, v64, v55, v48, 0))
  {
    v89 = v150;
    if ((swift_dynamicCast(v150, v64, v55, v76, 0) & 1) == 0)
      goto LABEL_20;
    if (v58 != v181)
      goto LABEL_19;
    (*(void (**)(char *, uint64_t))(v153 + 8))(v89, v76);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v179 + 8))(v64, v55);
    v69 = v158;
    v105 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E37770);
    v71 = v159;
    static Locale.current.getter(v105);
    String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, 0, v71, 0, 0, 256);
    v73 = v106;
    v75 = 0x53206574656C6544;
    v74 = 0xEB00000000676E6FLL;
    goto LABEL_28;
  }
  (*(void (**)(char *, uint64_t))(v157 + 8))(v88, v48);
  if (v58 == v181)
    goto LABEL_27;
  v89 = v150;
  if ((swift_dynamicCast(v150, v64, v55, v76, 0) & 1) != 0)
LABEL_19:
    (*(void (**)(char *, uint64_t))(v153 + 8))(v89, v76);
LABEL_20:
  if (!swift_dynamicCast(v80, v64, v55, v78, 0))
  {
LABEL_23:
    v90 = v158;
    v91 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000025, 0x8000000100E37700);
    v92 = v159;
    static Locale.current.getter(v91);
    String.init(localized:table:bundle:locale:comment:)(v90, 0, 0, 0, v92, 0, 0, 256);
    v93 = v64;
    v73 = v94;
    v95 = String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    static Locale.current.getter(v95);
    v174 = (char *)String.init(localized:table:bundle:locale:comment:)(v90, 0, 0, 0, v92, 0, 0, 256);
    v175 = v96;
    (*(void (**)(char *, uint64_t))(v179 + 8))(v93, v55);
    goto LABEL_29;
  }
  if (v58 != v181)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v80, v78);
    goto LABEL_23;
  }
  v97 = v158;
  v98 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E37730);
  v99 = v78;
  v100 = v159;
  static Locale.current.getter(v98);
  String.init(localized:table:bundle:locale:comment:)(v97, 0, 0, 0, v100, 0, 0, 256);
  v101 = v64;
  v73 = v102;
  v103 = String.LocalizationValue.init(stringLiteral:)(0x56206574656C6544, 0xEC0000006F656469);
  static Locale.current.getter(v103);
  v174 = (char *)String.init(localized:table:bundle:locale:comment:)(v97, 0, 0, 0, v100, 0, 0, 256);
  v175 = v104;
  (*(void (**)(char *, uint64_t))(v151 + 8))(v80, v99);
  (*(void (**)(char *, uint64_t))(v179 + 8))(v101, v55);
LABEL_29:
  v109 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v73);
  v110 = (void *)objc_opt_self(UIAlertController);
  v111 = v177;
  v112 = objc_msgSend(v110, "alertControllerWithTitle:message:preferredStyle:", 0, v109, v177);

  if (!v111)
    objc_msgSend(v112, "setModalPresentationStyle:", 7);
  v113 = MPLibraryAddStatusObserver_ptr;
  p_base_prots = (__objc2_prot_list **)(&JSAccount + 40);
  if (v176 == v181)
  {
    v115 = String.removeDownloadButtonTitle.unsafeMutableAddressor();
    v116 = v115[1];
    v177 = *v115;
    v117 = v162;
    ((void (*)(char *, uint64_t, uint64_t))v170)(v162, v180, v55);
    v118 = v179;
    v119 = *(unsigned __int8 *)(v179 + 80);
    v120 = v55;
    v121 = (v119 + 48) & ~v119;
    v122 = (char *)swift_allocObject(&unk_1010C1D28, v121 + v161, v119 | 7);
    v123 = v163;
    *((_QWORD *)v122 + 2) = v120;
    *((_QWORD *)v122 + 3) = v123;
    v124 = v112;
    v125 = v58;
    v126 = v160;
    *((_QWORD *)v122 + 4) = v178;
    *((_QWORD *)v122 + 5) = v126;
    v127 = &v122[v121];
    v55 = v120;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v127, v117, v120);
    swift_bridgeObjectRetain();
    v128 = v126;
    v58 = v125;
    v112 = v124;
    swift_retain(v128);
    v129 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v116);
    v186 = sub_10037BF90;
    v187 = v122;
    aBlock = _NSConcreteStackBlock;
    v183 = 1107296256;
    v184 = sub_100223938;
    v185 = &unk_1010C1D40;
    v130 = _Block_copy(&aBlock);
    swift_release(v187);
    v131 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v129, 2, v130);
    v132 = v130;
    p_base_prots = &JSAccount.base_prots;
    _Block_release(v132);

    objc_msgSend(v112, "addAction:", v131);
    v113 = MPLibraryAddStatusObserver_ptr;
  }
  if (v58 == v181)
  {
    v133 = v162;
    ((void (*)(char *, uint64_t, uint64_t))v170)(v162, v180, v55);
    v134 = v179;
    v135 = *(unsigned __int8 *)(v179 + 80);
    v136 = (v135 + 48) & ~v135;
    v137 = p_base_prots;
    v138 = (char *)swift_allocObject(&unk_1010C1CD8, v136 + v161, v135 | 7);
    v139 = v163;
    *((_QWORD *)v138 + 2) = v55;
    *((_QWORD *)v138 + 3) = v139;
    v140 = v160;
    *((_QWORD *)v138 + 4) = v178;
    *((_QWORD *)v138 + 5) = v140;
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))(&v138[v136], v133, v55);
    swift_retain(v140);
    v141 = v175;
    v142 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v141);
    v186 = sub_10037BEF4;
    v187 = v138;
    p_base_prots = v137;
    aBlock = _NSConcreteStackBlock;
    v183 = 1107296256;
    v184 = sub_100223938;
    v185 = &unk_1010C1CF0;
    v143 = _Block_copy(&aBlock);
    swift_release(v187);
    v144 = objc_msgSend((id)objc_opt_self(v113[236]), "actionWithTitle:style:handler:", v142, 2, v143);
    _Block_release(v143);

    objc_msgSend(v112, (SEL)p_base_prots[412], v144);
  }
  else
  {
    swift_bridgeObjectRelease(v175);
  }
  v145 = String.cancelButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v146 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v145);
  v147 = objc_msgSend((id)objc_opt_self(v113[236]), "actionWithTitle:style:handler:", v146, 1, 0);

  objc_msgSend(v112, (SEL)p_base_prots[412], v147);
  return v112;
}

uint64_t sub_10037B450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _QWORD *v14;

  v11 = type metadata accessor for Logger(0);
  v7[4] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[5] = v12;
  v7[6] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[7] = type metadata accessor for MainActor(0);
  v7[8] = static MainActor.shared.getter(v13);
  v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v7[9] = v14;
  *v14 = v7;
  v14[1] = sub_10037B508;
  return MusicLibrary.removeDownload<A>(_:)(a5, a6, a7);
}

uint64_t sub_10037B508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10037B590;
  else
    v6 = sub_10037C3C4;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10037B590()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v3 = v0 + 4;
  v2 = v0[4];
  v4 = v0[10];
  v6 = v0[5];
  v5 = v3[2];
  swift_release();
  v7 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v7, v2);
  swift_errorRetain(v4);
  v8 = swift_errorRetain(v4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = v1[10];
    v23 = v1[5];
    v24 = v1[4];
    v25 = v1[6];
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 136315138;
    v26 = v13;
    v1[2] = v11;
    swift_errorRetain(v11);
    v14 = sub_100007E8C(&qword_1011A14B0);
    v15 = String.init<A>(describing:)(v1 + 2, v14);
    v17 = v16;
    v1[3] = sub_100322200(v15, v16, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 3, v3);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to remove downloaded item=%s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    v18 = v1[10];
    v20 = v1[5];
    v19 = v1[6];
    v21 = v1[4];
    swift_errorRelease(v18);
    swift_errorRelease(v18);
    swift_errorRelease(v18);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc(v1[6]);
  return ((uint64_t (*)(void))v1[1])();
}

double sub_10037B7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;

  v26 = a6;
  v27 = a8;
  v13 = *(_QWORD *)(a4 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(a1);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a4);
  type metadata accessor for MainActor(0);
  v19 = swift_retain(a2);
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v13 + 80);
  v22 = (v21 + 64) & ~v21;
  v23 = (char *)swift_allocObject(a7, v22 + v14, v21 | 7);
  *((_QWORD *)v23 + 2) = v20;
  *((_QWORD *)v23 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v23 + 4) = a4;
  *((_QWORD *)v23 + 5) = a5;
  *((_QWORD *)v23 + 6) = v26;
  *((_QWORD *)v23 + 7) = a2;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v22], (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  v24 = sub_100166D14((uint64_t)v17, v27, (uint64_t)v23);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_10037B928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _QWORD *v14;

  v11 = type metadata accessor for Logger(0);
  v7[4] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[5] = v12;
  v7[6] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[7] = type metadata accessor for MainActor(0);
  v7[8] = static MainActor.shared.getter(v13);
  v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  v7[9] = v14;
  *v14 = v7;
  v14[1] = sub_10037B9E0;
  return MusicLibrary.remove<A>(_:)(a5, a6, a7);
}

uint64_t sub_10037B9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10037BAA0;
  else
    v6 = sub_10037BA68;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10037BA68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037BAA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v3 = v0 + 4;
  v2 = v0[4];
  v4 = v0[10];
  v6 = v0[5];
  v5 = v3[2];
  swift_release();
  v7 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v7, v2);
  swift_errorRetain(v4);
  v8 = swift_errorRetain(v4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = v1[10];
    v23 = v1[5];
    v24 = v1[4];
    v25 = v1[6];
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 136315138;
    v26 = v13;
    v1[2] = v11;
    swift_errorRetain(v11);
    v14 = sub_100007E8C(&qword_1011A14B0);
    v15 = String.init<A>(describing:)(v1 + 2, v14);
    v17 = v16;
    v1[3] = sub_100322200(v15, v16, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 3, v3);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to delete item=%s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    v18 = v1[10];
    v20 = v1[5];
    v19 = v1[6];
    v21 = v1[4];
    swift_errorRelease(v18);
    swift_errorRelease(v18);
    swift_errorRelease(v18);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc(v1[6]);
  return ((uint64_t (*)(void))v1[1])();
}

id UIFont.monospacedDigits()()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString *v13;
  Class isa;
  id v15;
  id v16;
  _BYTE v18[72];
  _BYTE v19[112];

  swift_getObjectType();
  v1 = sub_100007E8C(&qword_1011AEE78);
  inited = swift_initStackObject(v1, v19);
  v3 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(inited + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(inited + 40) = 6;
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v4 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(inited + 64) = &type metadata for Int;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 104) = &type metadata for Int;
  *(_QWORD *)(inited + 80) = 0;
  v5 = v3;
  v6 = v4;
  v7 = sub_100043744(inited);
  v8 = objc_msgSend(v0, "fontDescriptor");
  v9 = sub_100007E8C(&qword_1011AEE80);
  v10 = swift_initStackObject(v9, v18);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = UIFontDescriptorFeatureSettingsAttribute;
  v11 = sub_100007E8C(&qword_1011AEE88);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v12 + 32) = v7;
  *(_QWORD *)(v10 + 64) = sub_100007E8C(&qword_1011AEE90);
  *(_QWORD *)(v10 + 40) = v12;
  v13 = UIFontDescriptorFeatureSettingsAttribute;
  sub_100043760(v10);
  type metadata accessor for AttributeName(0);
  sub_10037BEA8();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v8, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "fontWithDescriptor:size:", v15, 0.0);
  return v16;
}

unint64_t sub_10037BEA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119D320;
  if (!qword_10119D320)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_100EA61CC, v1);
    atomic_store(result, (unint64_t *)&qword_10119D320);
  }
  return result;
}

double sub_10037BEF4(uint64_t a1)
{
  return sub_10037BFA4(a1, (uint64_t)&unk_1010C1DA0, (uint64_t)&unk_1011AEEB0);
}

uint64_t sub_10037BF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10037BF18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10037BF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_10037BF90(uint64_t a1)
{
  return sub_10037BFA4(a1, (uint64_t)&unk_1010C1D78, (uint64_t)&unk_1011AEEA0);
}

double sub_10037BFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3[2];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  return sub_10037B7B8(a1, v3[5], (uint64_t)v3 + ((v5 + 48) & ~v5), v4, v3[3], v3[4], a2, a3);
}

uint64_t sub_10037BFE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[7];
  v10 = (uint64_t)v1 + ((v6 + 64) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_1011AEE9C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return sub_10037B450(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t sub_10037C088()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((_QWORD *)v0 + 4);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 7));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10037C0FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[7];
  v10 = (uint64_t)v1 + ((v6 + 64) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_1011AEEAC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10005AEE4;
  return sub_10037B928(a1, v7, v8, v9, v10, v4, v5);
}

id sub_10037C1A0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  NSString v16;
  id v17;
  _BYTE v19[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v19[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0x20646574696D694CLL, 0xEF676E6975657551);
  static Locale.current.getter(v6);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, 0, 0, 256);
  v8 = v7;
  v9 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000069, 0x8000000100E37870);
  static Locale.current.getter(v9);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, 0, 0, 256);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  v15 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v16, 1, 0);

  objc_msgSend(v14, "addAction:", v17);
  return v14;
}

unint64_t sub_10037C3D0()
{
  unint64_t result;

  result = qword_1011AEEB8;
  if (!qword_1011AEEB8)
  {
    result = swift_getWitnessTable(&unk_100EB6E80, &type metadata for RemoveDownloadMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011AEEB8);
  }
  return result;
}

unint64_t sub_10037C418()
{
  unint64_t result;

  result = qword_1011AEEC0;
  if (!qword_1011AEEC0)
  {
    result = swift_getWitnessTable(&unk_100EB6EA8, &type metadata for RemoveDownloadMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011AEEC0);
  }
  return result;
}

uint64_t sub_10037C45C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100F9D788, 1) + 8);
}

uint64_t sub_10037C480(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9D760, 1);
}

uint64_t sub_10037C490()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10004FACC(v0, qword_10124CE58);
  sub_100048B14(v0, (uint64_t)qword_10124CE58);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100E37920);
}

uint64_t sub_10037C4F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100007E8C(&qword_1011AEF20);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011AEF28);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10037DD08();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  v7._object = (void *)0x8000000100E37900;
  v7._countAndFlagsBits = 0xD000000000000010;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EB6EF8);
  v9 = sub_100007E8C(&qword_1011AEF30);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
}

uint64_t sub_10037C658(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2[32] = a1;
  v2[33] = a2;
  v3 = type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason(0);
  v2[34] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[35] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[36] = swift_task_alloc(v5);
  v2[37] = swift_task_alloc(v5);
  v2[38] = swift_task_alloc(v5);
  v2[39] = swift_task_alloc(v5);
  v6 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v2[40] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[41] = v7;
  v2[42] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011B8E10);
  v2[43] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[44] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[45] = swift_task_alloc(v10);
  v2[46] = swift_task_alloc(v10);
  v2[47] = swift_task_alloc(v10);
  v2[48] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for GenericMusicItemEntity(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[49] = swift_task_alloc(v11);
  v2[50] = swift_task_alloc(v11);
  v2[51] = swift_task_alloc(v11);
  v2[52] = swift_task_alloc(v11);
  return swift_task_switch(sub_10037C7A4, 0, 0);
}

uint64_t sub_10037C7A4()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  __n128 v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  void (*v54)(uint64_t, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  unint64_t v77;
  _BYTE *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  char v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  _BOOL4 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  __n128 v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  __n128 v100;
  void (*v101)(uint64_t, uint64_t, __n128);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  _BYTE *v106;
  __n128 v107;
  __n128 v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  __n128 v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143[2];

  v1 = (__int128 *)(v0 + 64);
  if (qword_10119BFA8 != -1)
    swift_once(&qword_10119BFA8, sub_1003E0090);
  v140 = v0 + 144;
  v2 = *(_QWORD *)(v0 + 264);
  v3 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 424) = sub_100048B14(v3, (uint64_t)qword_10124CEC8);
  v4 = swift_retain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD **)(v0 + 416);
    v130 = *(_QWORD *)(v0 + 264);
    v9 = swift_slowAlloc(22, -1);
    v131 = swift_slowAlloc(64, -1);
    v143[0] = v131;
    *(_DWORD *)v9 = 136446466;
    *(_QWORD *)(v0 + 232) = &type metadata for RemoveDownloadMusicItemAppIntent;
    v10 = sub_100007E8C(&qword_1011AEF18);
    v11 = String.init<A>(describing:)(v0 + 232, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 240) = sub_100322200(v11, v12, v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v9 + 12) = 2082;
    IntentParameter.wrappedValue.getter(v8);
    v14 = sub_1004E1D7C();
    v16 = v15;
    sub_100078DD0((uint64_t)v8);
    *(_QWORD *)(v0 + 248) = sub_100322200(v14, v16, v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 248, v0 + 256);
    v17 = swift_bridgeObjectRelease(v16);
    swift_release_n(v130, 2, v17);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%{public}s – removing downloaded item %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v131, 2, (char *)&type metadata for Any + 8);
    v1 = (__int128 *)(v0 + 64);
    swift_slowDealloc(v131, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 264), 2, v7);
  }

  v18 = *(_QWORD **)(v0 + 408);
  IntentParameter.wrappedValue.getter(v18);
  sub_1004E36A0((uint64_t)v1);
  sub_100078DD0((uint64_t)v18);
  if (*(_QWORD *)(v0 + 88))
  {
    v129 = v0 + 168;
    v19 = *(_QWORD *)(v0 + 384);
    v20 = *(_QWORD *)(v0 + 344);
    v21 = *(_QWORD *)(v0 + 352);
    v22 = *(_QWORD *)(v0 + 336);
    v132 = *(_QWORD *)(v0 + 328);
    v136 = *(_QWORD *)(v0 + 376);
    v23 = *(_QWORD *)(v0 + 320);
    sub_100145714(v1, (_OWORD *)(v0 + 16));
    v24 = type metadata accessor for MusicLibrary(0);
    *(_QWORD *)(v0 + 432) = static MusicLibrary.shared.getter(v24);
    v25 = *(_QWORD *)(v0 + 40);
    v26 = *(_QWORD *)(v0 + 56);
    v27 = sub_100007E68((_QWORD *)(v0 + 16), v25);
    static MusicLibraryAction<>.removeDownload.getter(v27);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v27, v22, v25, v23, v26, &protocol witness table for MusicLibrary.RemoveDownloadAction);
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v22, v23);
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    v28(v136, v19, v20);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 88))(v136, v20);
    if (v29 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
    {
      v30 = *(_QWORD *)(v0 + 376);
      v32 = *(_QWORD *)(v0 + 304);
      v31 = *(_QWORD *)(v0 + 312);
      v34 = *(_QWORD *)(v0 + 272);
      v33 = *(_QWORD *)(v0 + 280);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 352) + 96))(v30, *(_QWORD *)(v0 + 344));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v31, v30, v34);
      v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
      v36 = v35(v32, v31, v34);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter();
      v39 = os_log_type_enabled(v37, v38);
      v40 = *(_QWORD *)(v0 + 304);
      if (v39)
      {
        v41 = *(_QWORD *)(v0 + 296);
        v133 = *(_QWORD *)(v0 + 272);
        v137 = *(_QWORD *)(v0 + 280);
        v42 = swift_slowAlloc(22, -1);
        v141 = swift_slowAlloc(64, -1);
        v143[0] = v141;
        *(_DWORD *)v42 = 136446466;
        *(_QWORD *)(v0 + 168) = &type metadata for RemoveDownloadMusicItemAppIntent;
        v43 = sub_100007E8C(&qword_1011AEF18);
        v44 = String.init<A>(describing:)(v129, v43);
        v45 = v35;
        v47 = v46;
        *(_QWORD *)(v0 + 176) = sub_100322200(v44, v46, v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184);
        v48 = v47;
        v35 = v45;
        v49 = swift_bridgeObjectRelease(v48);
        *(_WORD *)(v42 + 12) = 2082;
        ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v45)(v41, v40, v133, v49);
        v50 = String.init<A>(describing:)(v41, v133);
        v52 = v51;
        *(_QWORD *)(v0 + 184) = sub_100322200(v50, v51, v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192);
        v53 = swift_bridgeObjectRelease(v52);
        v54 = *(void (**)(uint64_t, uint64_t, __n128))(v137 + 8);
        v54(v40, v133, v53);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s – unsupported reason %{public}s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy(v141, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v141, -1, -1);
        swift_slowDealloc(v42, -1, -1);
      }
      else
      {
        v54 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 280) + 8);
        ((void (*)(_QWORD, _QWORD))v54)(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
      }

      v81 = *(_QWORD *)(v0 + 280);
      v80 = *(_QWORD *)(v0 + 288);
      v82 = *(_QWORD *)(v0 + 272);
      v35(v80, *(_QWORD *)(v0 + 312), v82);
      v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 88))(v80, v82);
      if (v83 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.unsupportedType(_:))
      {
        v84 = 4;
      }
      else if (v83 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.removalNotPermitted(_:))
      {
        v84 = 1;
      }
      else if (v83 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.notDownloaded(_:))
      {
        v84 = 0;
      }
      else if (v83 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.sharedLibrary(_:))
      {
        v84 = 2;
      }
      else
      {
        ((void (*)(_QWORD, _QWORD))v54)(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
        v84 = 3;
      }
      v110 = *(_QWORD *)(v0 + 384);
      v111 = *(_QWORD *)(v0 + 344);
      v112 = *(_QWORD *)(v0 + 352);
      v113 = *(_QWORD *)(v0 + 312);
      v114 = *(_QWORD *)(v0 + 272);
      v115 = sub_10037DD8C();
      swift_allocError(&type metadata for RemoveDownloadMusicItemIntentError, v115, 0, 0);
      *v116 = v84;
      swift_willThrow(v117);
      v118 = swift_release();
      v54(v113, v114, v118);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v110, v111);
      v109 = (_QWORD *)(v0 + 16);
    }
    else
    {
      if (v29 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
      {
        v73 = *(_QWORD *)(v0 + 40);
        v72 = *(_QWORD *)(v0 + 48);
        v74 = sub_100007E68((_QWORD *)(v0 + 16), v73);
        v75 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
        *(_QWORD *)(v0 + 440) = v75;
        *v75 = v0;
        v75[1] = sub_10037D330;
        return MusicLibrary.removeDownload<A>(_:)(v74, v73, v72);
      }
      v85 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v28)(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 344));
      v86 = Logger.logObject.getter(v85);
      v87 = static os_log_type_t.error.getter();
      v88 = os_log_type_enabled(v86, v87);
      v89 = *(_QWORD *)(v0 + 368);
      if (v88)
      {
        v128 = *(_QWORD *)(v0 + 360);
        v134 = *(_QWORD *)(v0 + 352);
        v90 = *(_QWORD *)(v0 + 344);
        v91 = swift_slowAlloc(22, -1);
        v138 = swift_slowAlloc(64, -1);
        v143[0] = v138;
        *(_DWORD *)v91 = 136446466;
        *(_QWORD *)(v0 + 144) = &type metadata for RemoveDownloadMusicItemAppIntent;
        v92 = sub_100007E8C(&qword_1011AEF18);
        v93 = String.init<A>(describing:)(v140, v92);
        v95 = v94;
        *(_QWORD *)(v0 + 152) = sub_100322200(v93, v94, v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160);
        v96 = swift_bridgeObjectRelease(v95);
        *(_WORD *)(v91 + 12) = 2082;
        ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v28)(v128, v89, v90, v96);
        v97 = String.init<A>(describing:)(v128, v90);
        v99 = v98;
        *(_QWORD *)(v0 + 160) = sub_100322200(v97, v98, v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v129);
        v100 = swift_bridgeObjectRelease(v99);
        v101 = *(void (**)(uint64_t, uint64_t, __n128))(v134 + 8);
        v101(v89, v90, v100);
        _os_log_impl((void *)&_mh_execute_header, v86, v87, "%{public}s – unknown supported status %{public}s", (uint8_t *)v91, 0x16u);
        swift_arrayDestroy(v138, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v138, -1, -1);
        swift_slowDealloc(v91, -1, -1);
      }
      else
      {
        v101 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 352) + 8);
        ((void (*)(_QWORD, _QWORD))v101)(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344));
      }

      v103 = *(_QWORD *)(v0 + 376);
      v102 = *(_QWORD *)(v0 + 384);
      v104 = *(_QWORD *)(v0 + 344);
      v105 = sub_10037DD8C();
      swift_allocError(&type metadata for RemoveDownloadMusicItemIntentError, v105, 0, 0);
      *v106 = 3;
      swift_willThrow(v107);
      v108 = swift_release();
      v101(v102, v104, v108);
      ((void (*)(uint64_t, uint64_t))v101)(v103, v104);
      v109 = (_QWORD *)(v0 + 16);
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v109);
  }
  else
  {
    v55 = *(_QWORD *)(v0 + 264);
    sub_10037DD4C((uint64_t)v1);
    v56 = swift_retain_n(v55, 2);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.error.getter();
    v59 = os_log_type_enabled(v57, v58);
    v61 = *(_QWORD *)(v0 + 264);
    if (v59)
    {
      v62 = swift_slowAlloc(22, -1);
      v63 = swift_slowAlloc(64, -1);
      v143[0] = v63;
      *(_DWORD *)v62 = 136446466;
      *(_QWORD *)(v0 + 112) = &type metadata for RemoveDownloadMusicItemAppIntent;
      v64 = sub_100007E8C(&qword_1011AEF18);
      v65 = String.init<A>(describing:)(v0 + 112, v64);
      v67 = v66;
      *(_QWORD *)(v0 + 120) = sub_100322200(v65, v66, v143);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128);
      swift_bridgeObjectRelease(v67);
      *(_WORD *)(v62 + 12) = 2082;
      *(_QWORD *)(v0 + 128) = v61;
      swift_retain();
      v68 = String.init<A>(describing:)(v0 + 128, &type metadata for RemoveDownloadMusicItemAppIntent);
      v70 = v69;
      *(_QWORD *)(v0 + 136) = sub_100322200(v68, v69, v143);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v140);
      v71 = swift_bridgeObjectRelease(v70);
      swift_release_n(v61, 2, v71);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "%{public}s – unsupported type %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v62, -1, -1);
    }
    else
    {
      swift_release_n(*(_QWORD *)(v0 + 264), 2, v60);
    }

    v77 = sub_10037DD8C();
    swift_allocError(&type metadata for RemoveDownloadMusicItemIntentError, v77, 0, 0);
    *v78 = 4;
    swift_willThrow(v79);
  }
  v119 = *(_QWORD *)(v0 + 408);
  v121 = *(_QWORD *)(v0 + 392);
  v120 = *(_QWORD *)(v0 + 400);
  v123 = *(_QWORD *)(v0 + 376);
  v122 = *(_QWORD *)(v0 + 384);
  v125 = *(_QWORD *)(v0 + 360);
  v124 = *(_QWORD *)(v0 + 368);
  v126 = *(_QWORD *)(v0 + 336);
  v127 = *(_QWORD *)(v0 + 312);
  v135 = *(_QWORD *)(v0 + 304);
  v139 = *(_QWORD *)(v0 + 296);
  v142 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 416));
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v135);
  swift_task_dealloc(v139);
  swift_task_dealloc(v142);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037D330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 440);
  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10037D520;
  else
    v3 = sub_10037D394;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10037D394()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD **)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 408);
  v12 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 368);
  v14 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 336);
  v16 = *(_QWORD *)(v0 + 312);
  v17 = *(_QWORD *)(v0 + 304);
  v18 = *(_QWORD *)(v0 + 296);
  v19 = *(_QWORD *)(v0 + 288);
  IntentParameter.wrappedValue.getter(v1);
  v7 = sub_100725F20();
  sub_100078D8C((uint64_t)v1, v3);
  sub_100078D8C(v3, v2);
  IntentParameter.wrappedValue.setter(v2);
  sub_100078DD0(v3);
  sub_100078DD0((uint64_t)v1);
  *(_QWORD *)(v0 + 224) = v7;
  v8 = sub_100078E54();
  static IntentResult.result<A>(opensIntent:)(v0 + 224, &type metadata for OpenMusicItemAppIntent, v8);
  v9 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v9);
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v11);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037D520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 448);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 448);
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v37[0] = v7;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 192) = &type metadata for RemoveDownloadMusicItemAppIntent;
    v8 = sub_100007E8C(&qword_1011AEF18);
    v9 = String.init<A>(describing:)(v0 + 192, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 200) = sub_100322200(v9, v10, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2082;
    *(_QWORD *)(v0 + 208) = v5;
    swift_errorRetain(v5);
    v12 = sub_100007E8C(&qword_1011A14B0);
    v13 = String.init<A>(describing:)(v0 + 208, v12);
    v15 = v14;
    *(_QWORD *)(v0 + 216) = sub_100322200(v13, v14, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s – error removing downloaded item %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 448);
    swift_errorRelease(v16);
    swift_errorRelease(v16);
  }

  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 384);
  v20 = *(_QWORD *)(v0 + 344);
  v19 = *(_QWORD *)(v0 + 352);
  v21 = sub_10037DD8C();
  swift_allocError(&type metadata for RemoveDownloadMusicItemIntentError, v21, 0, 0);
  *v22 = 3;
  swift_willThrow(v23);
  swift_release();
  swift_errorRelease(v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  v24 = *(_QWORD *)(v0 + 408);
  v26 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 376);
  v27 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 360);
  v29 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 336);
  v32 = *(_QWORD *)(v0 + 312);
  v34 = *(_QWORD *)(v0 + 304);
  v35 = *(_QWORD *)(v0 + 296);
  v36 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 416));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037D818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10119BF38 != -1)
    swift_once(&qword_10119BF38, sub_10037C490);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_10124CE58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10037D88C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1011AEF0C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return sub_10037C658(a1, v4);
}

uint64_t sub_10037D8E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10037DA40();
  *a1 = result;
  return result;
}

uint64_t sub_10037D908(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10037DD08();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for RemoveDownloadMusicItemAppIntent()
{
  return &type metadata for RemoveDownloadMusicItemAppIntent;
}

uint64_t sub_10037D940()
{
  return sub_100049F28(&qword_1011AEED0, &qword_1011AEED8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10037D96C()
{
  return sub_100049F28(&qword_1011AEEE0, &qword_1011AEEE8, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10037D998(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_10037D9B4 + 4 * byte_100EB6DE0[a1]))();
}

uint64_t sub_10037D9B4()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x8000000100E37A00);
}

uint64_t sub_10037D9D0()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E379E0);
}

uint64_t sub_10037DA38()
{
  unsigned __int8 *v0;

  return sub_10037D998(*v0);
}

uint64_t sub_10037DA40()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_10119EC90);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_100007E8C(&qword_10119ECC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119ECA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011AEEF0);
  LocalizedStringResource.init(stringLiteral:)(0x744920636973754DLL, 0xEA00000000006D65);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x8000000100E378E0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v19 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v8, 1, 1, v20);
  v21(v5, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v25);
  v22 = sub_10037DCC0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v18, v14, v11, v8, v5, v2, v22);
}

unint64_t sub_10037DCC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AEEF8;
  if (!qword_1011AEEF8)
  {
    v1 = type metadata accessor for GenericMusicItemEntity(255);
    result = swift_getWitnessTable(&unk_100EBED94, v1);
    atomic_store(result, (unint64_t *)&qword_1011AEEF8);
  }
  return result;
}

unint64_t sub_10037DD08()
{
  unint64_t result;

  result = qword_1011AEF00;
  if (!qword_1011AEF00)
  {
    result = swift_getWitnessTable(&unk_100EB6DF0, &type metadata for RemoveDownloadMusicItemAppIntent);
    atomic_store(result, &qword_1011AEF00);
  }
  return result;
}

uint64_t sub_10037DD4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011A29E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10037DD8C()
{
  unint64_t result;

  result = qword_1011AEF10;
  if (!qword_1011AEF10)
  {
    result = swift_getWitnessTable(&unk_100EB6FD4, &type metadata for RemoveDownloadMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011AEF10);
  }
  return result;
}

uint64_t sub_10037DDD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for RemoveDownloadMusicItemIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10037DE44 + 4 * byte_100EB6DEA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10037DE78 + 4 * byte_100EB6DE5[v4]))();
}

uint64_t sub_10037DE78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037DE80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10037DE88);
  return result;
}

uint64_t sub_10037DE94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10037DE9CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10037DEA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037DEA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoveDownloadMusicItemIntentError()
{
  return &type metadata for RemoveDownloadMusicItemIntentError;
}

unint64_t sub_10037DEC8()
{
  unint64_t result;

  result = qword_1011AEF38;
  if (!qword_1011AEF38)
  {
    result = swift_getWitnessTable(&unk_100EB6FAC, &type metadata for RemoveDownloadMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_1011AEF38);
  }
  return result;
}

uint64_t sub_10037DF0C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 88);
}

uint64_t sub_10037DF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;

  v6 = v5;
  v51 = a2;
  v52 = a3;
  v53 = a5;
  v54 = *(_QWORD *)(a4 - 8);
  v50 = *(_QWORD *)(v54 + 64);
  __chkstk_darwin(a1);
  v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v13 = *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64);
  v14 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - v16;
  v18 = type metadata accessor for TitledSection(0);
  v19 = type metadata accessor for Playlist.Folder.Item(0);
  v20 = sub_100048748(&qword_1011A18B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  MusicLibrarySectionedRequest.init()(v18, v19, &protocol witness table for TitledSection, v20);
  MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v12);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v21, v12);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(v6 + 8), v12);
  sub_10010A708((uint64_t)v17);
  sub_10010AA98();
  sub_10010ADA8();
  v22 = *(Swift::String *)(v6 + *(int *)(_s9PlaylistsVMa(0) + 28));
  v46 = v12;
  MusicLibrarySectionedRequest.filterItems(text:)(v22);
  v47 = *(_QWORD *)(v6 + *(int *)(a4 + 28));
  v48 = v11;
  static TaskPriority.userInitiated.getter(v23);
  v24 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 0, 1, v24);
  v25 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v25, v17, v12);
  v26 = v54;
  v27 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v49, v6, a4);
  v28 = *(unsigned __int8 *)(v14 + 80);
  v29 = v14;
  v30 = (v28 + 48) & ~v28;
  v31 = *(unsigned __int8 *)(v26 + 80);
  v32 = (v13 + v31 + v30) & ~v31;
  v33 = (v50 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (char *)swift_allocObject(&unk_1010C20A0, v33 + 16, v28 | v31 | 7);
  *((_QWORD *)v34 + 2) = 0;
  *((_QWORD *)v34 + 3) = 0;
  v35 = v47;
  *((_QWORD *)v34 + 4) = *(_QWORD *)(a4 + 16);
  *((_QWORD *)v34 + 5) = v35;
  v36 = &v34[v30];
  v37 = v46;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v36, v25, v46);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v34[v32], v27, a4);
  v38 = &v34[v33];
  v39 = v52;
  *(_QWORD *)v38 = v51;
  *((_QWORD *)v38 + 1) = v39;
  swift_retain();
  swift_retain();
  v40 = (uint64_t)v48;
  v41 = sub_1000E8908((uint64_t)v48, (uint64_t)&unk_1011AF098, (uint64_t)v34);
  sub_10004FF60(v40, (uint64_t *)&unk_1011A13B0);
  v42 = sub_100007E8C(&qword_1011ABC98);
  v43 = v53;
  v53[3] = v42;
  v43[4] = (uint64_t)&protocol witness table for Task<A, B>;
  *v43 = v41;
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v37);
}

uint64_t sub_10037E2A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v0);
  v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist.Folder.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 16))(v15, v23[1], v11, v13);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
  if (v16 == enum case for Playlist.Folder.Item.folder(_:))
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Playlist.Variant.folder(_:), v7);
    Playlist.Variant.symbolImage.getter();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  else
  {
    if (v16 == enum case for Playlist.Folder.Item.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v12 + 96))(v15, v11);
      v19 = v4;
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v15, v3);
      Playlist.variant.getter(v20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) != 1)
      {
        Playlist.Variant.symbolImage.getter();
        v18 = v21;
        (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v3);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
        return v18;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_10004FF60((uint64_t)v2, (uint64_t *)&unk_1011CEF20);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    return 0;
  }
  return v18;
}

BOOL static Artwork.Caching.Reference.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

_QWORD *sub_10037E520()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return v0;
}

uint64_t sub_10037E54C()
{
  uint64_t v0;

  sub_10037E520();
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t _s22NestedPlaylistsRequestV11NodeBuilderCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s22NestedPlaylistsRequestV11NodeBuilderCMn);
}

uint64_t sub_10037E578(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = _s9PlaylistsVMa(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t sub_10037E5EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = (int *)_s9PlaylistsVMa(0);
    v9 = v8[6];
    v10 = v7 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_QWORD *)(v7 + v9) = *(uint64_t *)((char *)a2 + v9);
    v12 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
    __dst = (void *)(v10 + v12);
    v13 = (const void *)(v11 + v12);
    v14 = type metadata accessor for Playlist.Folder(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      v17 = sub_100007E8C((uint64_t *)&unk_1011B5660);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v18 = v8[7];
    v19 = (_QWORD *)(v7 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(_QWORD *)(v7 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    *(_WORD *)(v7 + v8[9]) = *(_WORD *)((char *)a2 + v8[9]);
    *(_WORD *)(v7 + v8[10]) = *(_WORD *)((char *)a2 + v8[10]);
    *(_QWORD *)(v7 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

double sub_10037E788(uint64_t a1)
{
  int *v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  v2 = (int *)_s9PlaylistsVMa(0);
  v3 = (_QWORD *)(a1 + v2[6]);
  swift_bridgeObjectRelease(*v3);
  v4 = (char *)v3 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v5 = type metadata accessor for Playlist.Folder(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v2[8]));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10037E848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = (int *)_s9PlaylistsVMa(0);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v9 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v10 = (void *)(v7 + v9);
  v11 = (const void *)(v8 + v9);
  v12 = type metadata accessor for Playlist.Folder(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = v5[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_WORD *)(a1 + v5[9]) = *(_WORD *)(a2 + v5[9]);
  *(_WORD *)(a1 + v5[10]) = *(_WORD *)(a2 + v5[10]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10037E9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)_s9PlaylistsVMa(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (void *)(v9 + v11);
  v14 = type metadata accessor for Playlist.Folder(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = v6[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v23 = v21[1];
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v23);
  v24 = v6[8];
  v25 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v25);
  v26 = v6[9];
  v27 = (_BYTE *)(a1 + v26);
  v28 = (_BYTE *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = v6[10];
  v30 = (_BYTE *)(a1 + v29);
  v31 = (_BYTE *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10037EBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)_s9PlaylistsVMa(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v10 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v11 = (void *)(v8 + v10);
  v12 = (const void *)(v9 + v10);
  v13 = type metadata accessor for Playlist.Folder(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  *(_WORD *)(a1 + v6[9]) = *(_WORD *)(a2 + v6[9]);
  *(_WORD *)(a1 + v6[10]) = *(_WORD *)(a2 + v6[10]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10037ECFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)_s9PlaylistsVMa(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v10);
  v11 = *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (void *)(v9 + v11);
  v14 = type metadata accessor for Playlist.Folder(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_100007E8C((uint64_t *)&unk_1011B5660);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = v6[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  v25 = v21[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease(v25);
  v26 = v6[8];
  v27 = *(_QWORD *)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  swift_bridgeObjectRelease(v27);
  v28 = v6[9];
  v29 = (_BYTE *)(a1 + v28);
  v30 = (_BYTE *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  v31 = v6[10];
  v32 = (_BYTE *)(a1 + v31);
  v33 = (_BYTE *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_10037EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10037EEDC);
}

uint64_t sub_10037EEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = _s9PlaylistsVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10037EF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037EF64);
}

uint64_t sub_10037EF64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s9PlaylistsVMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t _s22NestedPlaylistsRequestVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s22NestedPlaylistsRequestVMn);
}

BOOL sub_10037EFE8(uint64_t *a1, uint64_t *a2)
{
  return static Artwork.Caching.Reference.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_10037F008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  v8[10] = v9;
  v10 = sub_100044B54(&qword_1011A14B0);
  v8[11] = v10;
  v11 = type metadata accessor for Result(0, v9, v10, &protocol self-conformance witness table for Error);
  v8[12] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[13] = v12;
  v8[14] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v8[15] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[16] = v14;
  v8[17] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v8[18] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v8[19] = v16;
  v8[20] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A3C60);
  v8[21] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[22] = v18;
  v8[23] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011AD730) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[24] = swift_task_alloc(v19);
  v8[25] = swift_task_alloc(v19);
  v20 = *(_QWORD *)(v9 - 8);
  v8[26] = v20;
  v8[27] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v8[28] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[29] = v22;
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[30] = swift_task_alloc(v23);
  v8[31] = swift_task_alloc(v23);
  return swift_task_switch(sub_10037F1AC, 0, 0);
}

uint64_t sub_10037F1AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;

  if (qword_10119BF40 != -1)
    swift_once(&qword_10119BF40, sub_1003839AC);
  v1 = v0[31];
  v2 = v0[28];
  v3 = v0[29];
  v4 = v0[6];
  v5 = type metadata accessor for Logger(0);
  v0[32] = sub_100048B14(v5, (uint64_t)qword_1011AEF40);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7 = v6(v1, v4, v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[31];
  if (v10)
  {
    v12 = v0[30];
    v34 = v0[29];
    v13 = v0[28];
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v35 = v15;
    *(_DWORD *)v14 = 136446210;
    v6(v12, v11, v13);
    v16 = String.init<A>(describing:)(v12, v13);
    v18 = v17;
    v0[4] = sub_100322200(v16, v17, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t, __n128))(v34 + 8))(v11, v13, v19);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "🔨 Building playlists using request=%{public}s…", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[29] + 8))(v0[31], v0[28]);
  }

  v20 = sub_100007E8C(&qword_1011A23A8);
  v21 = swift_allocObject(v20, 72, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
  v22 = MPMediaLibraryDidChangeNotification;
  MusicLibrary.mediaLibrary.getter(v23);
  v24 = v0[25];
  v25 = v0[5];
  UIScreen.Dimensions.size.getter(v22);
  *(_QWORD *)(v21 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v21 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v21 + 32) = v26;
  *(_QWORD *)(v21 + 40) = v27;
  v28 = type metadata accessor for BindingRequestResponseInvalidation();
  swift_allocObject(v28, 41, 7);
  v0[33] = BindingRequestResponseInvalidation.init(triggers:)(v21);
  v29 = *(void (**)(uint64_t))(v25 + 16);
  v30 = type metadata accessor for Playlist.Folder.Item(0);
  v0[34] = v30;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v0[35] = v31;
  v31(v24, 1, 1, v30);
  v29(v24);
  sub_10004FF60(v24, (uint64_t *)&unk_1011AD730);
  v32 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrarySectionedRequest.response()[1]);
  v0[36] = v32;
  *v32 = v0;
  v32[1] = sub_10037F4E4;
  return MusicLibrarySectionedRequest.response()(v0[23], v0[28]);
}

uint64_t sub_10037F4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10037FAB4;
  else
    v3 = sub_10037F548;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10037F548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  double (*v6)(uint64_t, unint64_t, uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double (*v21)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = MusicLibrarySectionedResponse.sections.getter(*(_QWORD *)(v0 + 168));
  *(_QWORD *)(v0 + 304) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 312) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 360) = v5;
    *(_QWORD *)(v0 + 320) = *(_QWORD *)(v3 + 72);
    v6 = *(double (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    *(_QWORD *)(v0 + 328) = v6;
    *(_QWORD *)(v0 + 336) = 0;
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 280);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 144);
    v11.n128_f64[0] = v6(v4, v1 + ((v5 + 32) & ~(unint64_t)v5), v10);
    MusicLibrarySection.items.getter(v10, v11);
    v8(v9, 1, 1, v7);
    v12 = (_QWORD *)swift_task_alloc(dword_1011AF08C);
    *(_QWORD *)(v0 + 344) = v12;
    *v12 = v0;
    v12[1] = sub_10037F794;
    return sub_10037FFF0(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 192), 0, *(uint64_t **)(v0 + 40));
  }
  else
  {
    v14 = swift_bridgeObjectRelease(v1);
    v15 = *(_QWORD *)(v0 + 264);
    v17 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 216);
    v35 = *(_QWORD *)(v0 + 168);
    v36 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 104);
    v34 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(double (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v17 + 16))(v18, v16, v20, v14);
    swift_storeEnumTagMultiPayload(v18, v19, 0);
    v22 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
    v23 = swift_retain();
    v24.n128_f64[0] = v21(v18, v15, v22, v23);
    swift_release_n(v15, 2, v24);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v20);
    v25 = *(_QWORD *)(v0 + 240);
    v26 = *(_QWORD *)(v0 + 216);
    v28 = *(_QWORD *)(v0 + 192);
    v27 = *(_QWORD *)(v0 + 200);
    v29 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 160);
    v31 = *(_QWORD *)(v0 + 136);
    v32 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 248));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10037F794()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 344);
  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[38];
    v5 = v2[24];
    v7 = v2[16];
    v6 = v2[17];
    v8 = v2[15];
    sub_10004FF60(v5, (uint64_t *)&unk_1011AD730);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_bridgeObjectRelease(v4);
    v9 = sub_10037FD3C;
  }
  else
  {
    v11 = v2[16];
    v10 = v2[17];
    v12 = v2[15];
    sub_10004FF60(v2[24], (uint64_t *)&unk_1011AD730);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    v9 = sub_10037F85C;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_10037F85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double (*v23)(_QWORD, unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 336) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  if (v2 == v1)
  {
    v3 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 304));
    v4 = *(_QWORD *)(v0 + 264);
    v6 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 168);
    v34 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 112);
    v31 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(double (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16))(v7, v5, v9, v3);
    swift_storeEnumTagMultiPayload(v7, v8, 0);
    v11 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
    v12 = swift_retain();
    v13.n128_f64[0] = v10(v7, v4, v11, v12);
    swift_release_n(v4, 2, v13);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v9);
    v14 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 192);
    v16 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 248));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v23 = *(double (**)(_QWORD, unint64_t, uint64_t))(v0 + 328);
    v24 = *(_QWORD *)(v0 + 336) + 1;
    *(_QWORD *)(v0 + 336) = v24;
    v25 = *(_QWORD *)(v0 + 272);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 280);
    v27 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 144);
    v29.n128_f64[0] = v23(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 304)+ ((*(unsigned __int8 *)(v0 + 360) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 360))+ *(_QWORD *)(v0 + 320) * v24, v28);
    MusicLibrarySection.items.getter(v28, v29);
    v26(v27, 1, 1, v25);
    v30 = (_QWORD *)swift_task_alloc(dword_1011AF08C);
    *(_QWORD *)(v0 + 344) = v30;
    *v30 = v0;
    v30[1] = sub_10037F794;
    return sub_10037FFF0(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 192), 0, *(uint64_t **)(v0 + 40));
  }
}

uint64_t sub_10037FAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 296);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136446210;
    v27 = v7;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v8 = String.init<A>(describing:)(v0 + 16, v5);
    v10 = v9;
    *(_QWORD *)(v0 + 24) = sub_100322200(v8, v9, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to query playlists with error=%{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v11 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD **)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(double (**)(_QWORD *, uint64_t, uint64_t))(v0 + 64);
  *v12 = v1;
  swift_storeEnumTagMultiPayload(v12, v14, 1);
  v16 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  swift_retain();
  swift_errorRetain(v1);
  v17.n128_f64[0] = v15(v12, v11, v16);
  swift_release_n(v11, 2, v17);
  swift_errorRelease(v1);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v12, v14);
  v18 = *(_QWORD *)(v0 + 240);
  v19 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 200);
  v22 = *(_QWORD *)(v0 + 184);
  v23 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037FD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  double (*v21)(_QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  v7 = *(_QWORD *)(v0 + 352);
  swift_errorRetain(v7);
  v8 = swift_errorRetain(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 88);
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 136446210;
    v33 = v13;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v14 = String.init<A>(describing:)(v0 + 16, v11);
    v16 = v15;
    *(_QWORD *)(v0 + 24) = sub_100322200(v14, v15, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to query playlists with error=%{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  v17 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD **)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(double (**)(_QWORD *, uint64_t, uint64_t))(v0 + 64);
  *v18 = v7;
  swift_storeEnumTagMultiPayload(v18, v20, 1);
  v22 = sub_100048748(&qword_1011ABD08, (uint64_t (*)(uint64_t))type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  swift_retain();
  swift_errorRetain(v7);
  v23.n128_f64[0] = v21(v18, v17, v22);
  swift_release_n(v17, 2, v23);
  swift_errorRelease(v7);
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v18, v20);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 192);
  v26 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037FFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  v6 = *a5;
  v7 = sub_100007E8C(&qword_1011ABD48);
  v5[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  v5[25] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[26] = swift_task_alloc(v9);
  v5[27] = swift_task_alloc(v9);
  v5[28] = swift_task_alloc(v9);
  v10 = *(_QWORD *)(v6 + 80);
  v5[29] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[30] = v11;
  v5[31] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist.Folder(0);
  v5[32] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[33] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[34] = swift_task_alloc(v14);
  v5[35] = swift_task_alloc(v14);
  v5[36] = swift_task_alloc(v14);
  v5[37] = swift_task_alloc(v14);
  v15 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v5[38] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[39] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[40] = swift_task_alloc(v17);
  v5[41] = swift_task_alloc(v17);
  v5[42] = swift_task_alloc(v17);
  v18 = type metadata accessor for Playlist.Folder.Item(0);
  v5[43] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v5[44] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[45] = swift_task_alloc(v20);
  v5[46] = swift_task_alloc(v20);
  v5[47] = swift_task_alloc(v20);
  v5[48] = swift_task_alloc(v20);
  v21 = sub_100007E8C((uint64_t *)&unk_1011C9A40);
  v5[49] = v21;
  v22 = (*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v22);
  v5[51] = swift_task_alloc(v22);
  return swift_task_switch(sub_1003801E0, 0, 0);
}

uint64_t sub_1003801E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD);
  void (*v40)(uint64_t, uint64_t, uint64_t);
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  void (*v67)(uint64_t, uint64_t, __n128);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t);
  void (*v93)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  _BOOL4 v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  __n128 v108;
  void (*v109)(uint64_t, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  os_log_type_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  v1 = v0;
  v139 = v0 + 112;
  v3 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 160);
  v8._countAndFlagsBits = 8316;
  v8._object = (void *)0xE200000000000000;
  *(Swift::String *)(v0 + 416) = String.init(repeating:count:)(v8, *(_QWORD *)(v0 + 176));
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v0 + 432) = v9;
  v9(v3, v7, v5);
  v10 = sub_100383A0C();
  *(_QWORD *)(v0 + 440) = v10;
  dispatch thunk of Collection.startIndex.getter(v5);
  *(_QWORD *)(v3 + *(int *)(v4 + 36)) = *(_QWORD *)(v0 + 56);
  sub_100383A58(v3, v2);
  v11 = *(int *)(v4 + 36);
  *(_DWORD *)(v0 + 544) = v11;
  v12 = *(_QWORD *)(v2 + v11);
  v144 = (_QWORD *)(v0 + 48);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), v5, v10);
  if (v12 == *(_QWORD *)(v0 + 48))
  {
LABEL_2:
    sub_10004FF60(*(_QWORD *)(v1 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 432);
    v14 = *(_QWORD *)(v1 + 320);
    v15 = *(_QWORD *)(v1 + 304);
    v16 = *(_QWORD *)(v1 + 208);
    v18 = *(_QWORD *)(v1 + 160);
    v17 = *(_QWORD *)(v1 + 168);
    v19 = type metadata accessor for Logger(0);
    sub_100048B14(v19, (uint64_t)qword_1011AEF40);
    v13(v14, v18, v15);
    sub_100383AA0(v17, v16);
    v20 = swift_bridgeObjectRetain();
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v160 = v22;
      v23 = *(_QWORD *)(v1 + 440);
      v24 = *(_QWORD *)(v1 + 416);
      v25 = *(_QWORD *)(v1 + 424);
      v147 = *(_QWORD *)(v1 + 352);
      v151 = *(_QWORD *)(v1 + 344);
      v26 = *(_QWORD *)(v1 + 320);
      v140 = *(_QWORD *)(v1 + 312);
      v27 = *(_QWORD *)(v1 + 304);
      v145 = *(_QWORD *)(v1 + 208);
      v28 = swift_slowAlloc(32, -1);
      v154 = swift_slowAlloc(64, -1);
      v168 = v154;
      *(_DWORD *)v28 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 112) = sub_100322200(v24, v25, &v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v139, v1 + 120);
      swift_bridgeObjectRelease_n(v25, 3);
      *(_WORD *)(v28 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v27);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v1 + 128), v27, v23);
      v29 = dispatch thunk of Collection.distance(from:to:)(v1 + 120, v1 + 128, v27, v23);
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v26, v27);
      *(_QWORD *)(v1 + 136) = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144);
      *(_WORD *)(v28 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))(v145, 1, v151) == 1)
      {
        v30 = 0xE400000000000000;
        v31 = 1953460082;
      }
      else
      {
        v110 = *(_QWORD *)(v1 + 224);
        v111 = *(_QWORD *)(v1 + 200);
        sub_100383AA0(*(_QWORD *)(v1 + 208), v110);
        v31 = String.init<A>(describing:)(v110, v111);
        v30 = v112;
      }
      v113 = *(_QWORD *)(v1 + 208);
      *(_QWORD *)(v1 + 144) = sub_100322200(v31, v30, &v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152);
      swift_bridgeObjectRelease(v30);
      sub_10004FF60(v113, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v21, v160, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy(v154, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v154, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      v81 = *(_QWORD *)(v1 + 424);
      v82 = *(_QWORD *)(v1 + 208);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 312) + 8))(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 304));
      swift_bridgeObjectRelease_n(v81, 2);
      sub_10004FF60(v82, (uint64_t *)&unk_1011AD730);
    }

    v115 = *(_QWORD *)(v1 + 400);
    v114 = *(_QWORD *)(v1 + 408);
    v117 = *(_QWORD *)(v1 + 376);
    v116 = *(_QWORD *)(v1 + 384);
    v118 = v1;
    v121 = v1 + 360;
    v120 = *(_QWORD *)(v1 + 360);
    v119 = *(_QWORD *)(v121 + 8);
    v122 = *(_QWORD *)(v118 + 328);
    v123 = *(_QWORD *)(v118 + 336);
    v124 = *(_QWORD *)(v118 + 320);
    v125 = *(_QWORD *)(v118 + 296);
    v141 = *(_QWORD *)(v118 + 288);
    v143 = *(_QWORD *)(v118 + 280);
    v146 = *(_QWORD *)(v118 + 272);
    v150 = *(_QWORD *)(v118 + 248);
    v153 = *(_QWORD *)(v118 + 224);
    v159 = *(_QWORD *)(v118 + 216);
    v163 = *(_QWORD *)(v118 + 208);
    v167 = *(_QWORD *)(v118 + 192);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    swift_task_dealloc(v116);
    swift_task_dealloc(v117);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v123);
    swift_task_dealloc(v122);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v141);
    swift_task_dealloc(v143);
    swift_task_dealloc(v146);
    swift_task_dealloc(v150);
    swift_task_dealloc(v153);
    swift_task_dealloc(v159);
    swift_task_dealloc(v163);
    swift_task_dealloc(v167);
    return (*(uint64_t (**)(void))(v118 + 8))();
  }
  else
  {
    v142 = v0 + 16;
    v137 = v0 + 96;
    v138 = v0 + 104;
    *(_DWORD *)(v0 + 548) = enum case for Playlist.Folder.Item.folder(_:);
    while (1)
    {
      v32 = *(_QWORD *)(v1 + 408);
      v33 = *(_QWORD *)(v1 + 384);
      v155 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 432);
      v161 = *(_QWORD *)(v1 + 376);
      v34 = *(_QWORD *)(v1 + 344);
      v35 = *(_QWORD *)(v1 + 352);
      v36 = *(_QWORD *)(v1 + 336);
      v37 = v32 + *(int *)(v1 + 544);
      v38 = *(_QWORD *)(v1 + 304);
      v148 = *(_QWORD *)(v1 + 440);
      v152 = *(_QWORD *)(v1 + 312);
      v39 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v142, v37, v38, v148);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
      *(_QWORD *)(v1 + 448) = v40;
      v164 = v40;
      ((void (*)(uint64_t))v40)(v33);
      v39(v142, 0);
      v155(v36, v32, v38);
      dispatch thunk of Collection.formIndex(after:)(v37, v38, v148);
      v41 = *(void (**)(uint64_t, uint64_t))(v152 + 8);
      *(_QWORD *)(v1 + 456) = v41;
      v41(v36, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v161, v33, v34);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v42 = *(_QWORD *)(v1 + 424);
      v44 = *(_QWORD *)(v1 + 368);
      v43 = *(_QWORD *)(v1 + 376);
      v45 = *(_QWORD *)(v1 + 344);
      v46 = type metadata accessor for Logger(0);
      *(_QWORD *)(v1 + 464) = sub_100048B14(v46, (uint64_t)qword_1011AEF40);
      v47 = v164;
      v164(v44, v43, v45);
      v48 = swift_bridgeObjectRetain_n(v42, 2);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.default.getter(v49);
      v51 = os_log_type_enabled(v49, v50);
      v52 = *(_QWORD *)(v1 + 424);
      if (v51)
      {
        v53 = *(_QWORD *)(v1 + 416);
        v54 = *(_QWORD *)(v1 + 368);
        v55 = *(_QWORD *)(v1 + 352);
        v156 = *(_QWORD *)(v1 + 344);
        v56 = v1;
        v57 = swift_slowAlloc(22, -1);
        v58 = swift_slowAlloc(64, -1);
        v168 = v58;
        *(_DWORD *)v57 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v57 + 4) = sub_100322200(v53, v52, &v168);
        v59 = swift_bridgeObjectRelease_n(v52, 3);
        *(_WORD *)(v57 + 12) = 2082;
        v60 = Playlist.Folder.Item.id.getter(v59);
        v62 = v61;
        v63 = MusicItemID.description.getter(v60, v61);
        v65 = v64;
        swift_bridgeObjectRelease(v62);
        *(_QWORD *)(v57 + 14) = sub_100322200(v63, v65, &v168);
        v66 = swift_bridgeObjectRelease(v65);
        v67 = *(void (**)(uint64_t, uint64_t, __n128))(v55 + 8);
        v67(v54, v156, v66);
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v58, -1, -1);
        v68 = v57;
        v1 = v56;
        v47 = v164;
        swift_slowDealloc(v68, -1, -1);
      }
      else
      {
        v69 = *(_QWORD *)(v1 + 368);
        v70 = *(_QWORD *)(v1 + 344);
        v71 = *(_QWORD *)(v1 + 352);
        v72 = swift_bridgeObjectRelease_n(v52, 2);
        v67 = *(void (**)(uint64_t, uint64_t, __n128))(v71 + 8);
        v67(v69, v70, v72);
      }

      *(_QWORD *)(v1 + 472) = v67;
      v73 = *(_DWORD *)(v1 + 548);
      v74 = *(_QWORD *)(v1 + 376);
      v76 = *(_QWORD *)(v1 + 352);
      v75 = *(_QWORD *)(v1 + 360);
      v77 = *(_QWORD *)(v1 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 184) + 32))(v74, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 152));
      v47(v75, v74, v77);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v76 + 88))(v75, v77) == v73)
        break;
      v78 = *(_QWORD *)(v1 + 360);
      v79 = *(_QWORD *)(v1 + 344);
      ((void (*)(_QWORD, uint64_t))v67)(*(_QWORD *)(v1 + 376), v79);
      ((void (*)(uint64_t, uint64_t))v67)(v78, v79);
      v80 = *(_QWORD *)(*(_QWORD *)(v1 + 408) + *(int *)(v1 + 544));
      dispatch thunk of Collection.endIndex.getter(v144, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 440));
      if (v80 == *(_QWORD *)(v1 + 48))
        goto LABEL_2;
    }
    v165 = *(_QWORD *)(v1 + 424);
    v84 = *(_QWORD *)(v1 + 352);
    v83 = *(_QWORD *)(v1 + 360);
    v85 = *(_QWORD *)(v1 + 344);
    v86 = *(_QWORD *)(v1 + 296);
    v157 = *(_QWORD *)(v1 + 288);
    v87 = *(_QWORD *)(v1 + 256);
    v88 = *(_QWORD *)(v1 + 264);
    v149 = *(_QWORD *)(v1 + 376);
    v89 = (_QWORD *)v1;
    v90 = *(_QWORD *)(v1 + 224);
    v91 = v89[23];
    (*(void (**)(uint64_t, uint64_t))(v84 + 96))(v83, v85);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v86, v83, v87);
    v92 = *(void (**)(uint64_t))(v91 + 16);
    v47(v90, v149, v85);
    v93 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56);
    v89[60] = v93;
    v93(v90, 0, 1, v85);
    v92(v90);
    v94 = v89;
    sub_10004FF60(v90, (uint64_t *)&unk_1011AD730);
    v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16);
    v89[61] = v95;
    v95(v157, v86, v87);
    v96 = swift_bridgeObjectRetain_n(v165, 2);
    v97 = Logger.logObject.getter(v96);
    v98 = static os_log_type_t.default.getter(v97);
    v99 = os_log_type_enabled(v97, v98);
    v100 = v89[53];
    if (v99)
    {
      v101 = v89[52];
      v102 = v89[36];
      v158 = v89[32];
      v162 = v89[33];
      v103 = swift_slowAlloc(22, -1);
      v166 = swift_slowAlloc(64, -1);
      v168 = v166;
      *(_DWORD *)v103 = 136315394;
      swift_bridgeObjectRetain();
      v89[12] = sub_100322200(v101, v100, &v168);
      v94 = v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v137, v138);
      swift_bridgeObjectRelease_n(v100, 3);
      *(_WORD *)(v103 + 12) = 2082;
      v104 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v105 = dispatch thunk of CustomStringConvertible.description.getter(v158, v104);
      v107 = v106;
      v89[13] = sub_100322200(v105, v106, &v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v138, v139);
      v108 = swift_bridgeObjectRelease(v107);
      v109 = *(void (**)(uint64_t, uint64_t, __n128))(v162 + 8);
      v109(v102, v158, v108);
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v103, 0x16u);
      swift_arrayDestroy(v166, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v166, -1, -1);
      swift_slowDealloc(v103, -1, -1);
    }
    else
    {
      v127 = v89[36];
      v128 = v89[32];
      v129 = v89[33];
      v130 = swift_bridgeObjectRelease_n(v89[53], 2);
      v109 = *(void (**)(uint64_t, uint64_t, __n128))(v129 + 8);
      v109(v127, v128, v130);
    }

    v94[62] = v109;
    v131 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v132 = swift_allocObject(v131, 48, 7);
    *(_OWORD *)(v132 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v132 + 32) = static PartialMusicProperty<A>.parent.getter();
    v133 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v132 + 40) = v133;
    v168 = v132;
    specialized Array._endMutation()(v133);
    v134 = v168;
    v94[63] = v168;
    v135 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v136 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    v94[64] = v136;
    *v136 = v94;
    v136[1] = sub_100380D9C;
    return dispatch thunk of MusicPropertyContainer.with(_:)(v94[35], v134, v94[32], v135);
  }
}

uint64_t sub_100380D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 512);
  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100380F64;
  else
    v4 = sub_100380E08;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100380E08()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 192);
  Playlist.Folder.children.getter();
  v1(v4, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2);
  v8 = *(_QWORD *)(v0 + 192);
  if (v7 == 1)
  {
    v9 = *(_QWORD *)(v0 + 344);
    v10 = sub_100048748((unint64_t *)&unk_1011C9A50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v9, v10);
    sub_10004FF60(v8, &qword_1011ABD48);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 32))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 304));
  }
  v11 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 480);
  v12 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 448))(v13, *(_QWORD *)(v0 + 376), v12);
  result = v11(v13, 0, 1, v12);
  if (__OFADD__(v14, 1))
  {
    __break(1u);
  }
  else
  {
    v16 = (_QWORD *)swift_task_alloc(dword_1011AF08C);
    *(_QWORD *)(v0 + 528) = v16;
    *v16 = v0;
    v16[1] = sub_100381D7C;
    return sub_10037FFF0(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 216), v14 + 1, *(_QWORD *)(v0 + 184));
  }
  return result;
}

uint64_t sub_100380F64()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  NSObject *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  void (*v86)(uint64_t, uint64_t, __n128);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t);
  void (*v112)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  _BOOL4 v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  __n128 v127;
  void (*v128)(uint64_t, uint64_t, __n128);
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, __n128);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  os_log_type_t typec[8];
  os_log_type_t typed[8];
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  os_log_type_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(uint64_t, uint64_t);
  NSObject *v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v162 = (_QWORD *)(v0 + 48);
  v154 = v0 + 112;
  v155 = v0 + 96;
  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 488);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  v2(v4, v3, v5);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v156 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 496);
    v185 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v10 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 424);
    v174 = *(_QWORD *)(v0 + 344);
    v180 = *(_QWORD *)(v0 + 376);
    v170 = *(_QWORD *)(v0 + 296);
    type = v8;
    v11 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 256);
    v13 = swift_slowAlloc(32, -1);
    v159 = swift_slowAlloc(96, -1);
    v191 = v159;
    *(_DWORD *)v13 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_100322200(v10, v9, &v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v13 + 12) = 2082;
    v14 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v12, v14);
    v17 = v16;
    *(_QWORD *)(v0 + 72) = sub_100322200(v15, v16, &v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    v18 = swift_bridgeObjectRelease(v17);
    v156(v11, v12, v18);
    *(_WORD *)(v13 + 22) = 2082;
    *(_QWORD *)(v0 + 80) = v1;
    swift_errorRetain(v1);
    v19 = sub_100007E8C(&qword_1011A14B0);
    v20 = String.init<A>(describing:)(v0 + 80, v19);
    v22 = v21;
    *(_QWORD *)(v0 + 88) = sub_100322200(v20, v21, &v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v155);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v7, type, "%s | 📁❌ Failed to query children for folder=%{public}s. Error=%{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy(v159, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v159, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v1);
    ((void (*)(uint64_t, uint64_t))v156)(v170, v12);
    v185(v180, v174);
  }
  else
  {
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v24 = v7;
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v26 = *(_QWORD *)(v0 + 424);
    v27 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 296);
    v30 = *(_QWORD *)(v0 + 272);
    v31 = *(_QWORD *)(v0 + 256);

    swift_errorRelease(v1);
    swift_errorRelease(v1);
    v23(v30, v31);
    swift_bridgeObjectRelease_n(v26, 2);
    swift_errorRelease(v1);
    v23(v29, v31);
    v25(v27, v28);
  }
  v32 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
  dispatch thunk of Collection.endIndex.getter(v162, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
  if (v32 == *(_QWORD *)(v0 + 48))
  {
LABEL_5:
    sub_10004FF60(*(_QWORD *)(v0 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
    v34 = *(_QWORD *)(v0 + 320);
    v35 = *(_QWORD *)(v0 + 304);
    v36 = *(_QWORD *)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v0 + 168);
    v39 = type metadata accessor for Logger(0);
    sub_100048B14(v39, (uint64_t)qword_1011AEF40);
    v33(v34, v38, v35);
    sub_100383AA0(v37, v36);
    v40 = swift_bridgeObjectRetain();
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v181 = v42;
      v186 = v41;
      v43 = *(_QWORD *)(v0 + 440);
      v44 = *(_QWORD *)(v0 + 416);
      v45 = *(_QWORD *)(v0 + 424);
      *(_QWORD *)typea = *(_QWORD *)(v0 + 352);
      v171 = *(_QWORD *)(v0 + 344);
      v46 = *(_QWORD *)(v0 + 320);
      v157 = *(_QWORD *)(v0 + 312);
      v47 = *(_QWORD *)(v0 + 304);
      v163 = *(_QWORD *)(v0 + 208);
      v48 = swift_slowAlloc(32, -1);
      v175 = swift_slowAlloc(64, -1);
      v191 = v175;
      *(_DWORD *)v48 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 112) = sub_100322200(v44, v45, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v154, v0 + 120);
      swift_bridgeObjectRelease_n(v45, 3);
      *(_WORD *)(v48 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v47);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 128), v47, v43);
      v49 = dispatch thunk of Collection.distance(from:to:)(v0 + 120, v0 + 128, v47, v43);
      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v46, v47);
      *(_QWORD *)(v0 + 136) = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
      *(_WORD *)(v48 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)typea + 48))(v163, 1, v171) == 1)
      {
        v50 = 0xE400000000000000;
        v51 = 1953460082;
      }
      else
      {
        v129 = *(_QWORD *)(v0 + 224);
        v130 = *(_QWORD *)(v0 + 200);
        sub_100383AA0(*(_QWORD *)(v0 + 208), v129);
        v51 = String.init<A>(describing:)(v129, v130);
        v50 = v131;
      }
      v132 = *(_QWORD *)(v0 + 208);
      *(_QWORD *)(v0 + 144) = sub_100322200(v51, v50, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
      swift_bridgeObjectRelease(v50);
      sub_10004FF60(v132, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v186, v181, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy(v175, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v175, -1, -1);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {
      v100 = *(_QWORD *)(v0 + 424);
      v101 = *(_QWORD *)(v0 + 208);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v100, 2);
      sub_10004FF60(v101, (uint64_t *)&unk_1011AD730);

    }
    v133 = *(_QWORD *)(v0 + 400);
    v135 = *(_QWORD *)(v0 + 376);
    v134 = *(_QWORD *)(v0 + 384);
    v137 = *(_QWORD *)(v0 + 360);
    v136 = *(_QWORD *)(v0 + 368);
    v138 = *(_QWORD *)(v0 + 328);
    v139 = *(_QWORD *)(v0 + 336);
    v140 = *(_QWORD *)(v0 + 320);
    v141 = *(_QWORD *)(v0 + 296);
    v158 = *(_QWORD *)(v0 + 288);
    v161 = *(_QWORD *)(v0 + 280);
    v164 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)typed = *(_QWORD *)(v0 + 248);
    v173 = *(_QWORD *)(v0 + 224);
    v179 = *(_QWORD *)(v0 + 216);
    v184 = *(_QWORD *)(v0 + 208);
    v190 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v137);
    swift_task_dealloc(v139);
    swift_task_dealloc(v138);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v158);
    swift_task_dealloc(v161);
    swift_task_dealloc(v164);
    swift_task_dealloc(*(_QWORD *)typed);
    swift_task_dealloc(v173);
    swift_task_dealloc(v179);
    swift_task_dealloc(v184);
    swift_task_dealloc(v190);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v160 = v0 + 16;
    v153 = v0 + 104;
    while (1)
    {
      v52 = *(_QWORD *)(v0 + 408);
      v53 = *(_QWORD *)(v0 + 384);
      v176 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
      v182 = *(_QWORD *)(v0 + 376);
      v55 = *(_QWORD *)(v0 + 344);
      v54 = *(_QWORD *)(v0 + 352);
      v56 = *(_QWORD *)(v0 + 336);
      v57 = v52 + *(int *)(v0 + 544);
      v58 = *(_QWORD *)(v0 + 304);
      *(_QWORD *)typeb = *(_QWORD *)(v0 + 440);
      v172 = *(_QWORD *)(v0 + 312);
      v59 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v160, v57, v58, *(_QWORD *)typeb);
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
      *(_QWORD *)(v0 + 448) = v60;
      v187 = v60;
      ((void (*)(uint64_t))v60)(v53);
      v59(v160, 0);
      v176(v56, v52, v58);
      dispatch thunk of Collection.formIndex(after:)(v57, v58, *(_QWORD *)typeb);
      v61 = *(void (**)(uint64_t, uint64_t))(v172 + 8);
      *(_QWORD *)(v0 + 456) = v61;
      v61(v56, v58);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v182, v53, v55);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v62 = *(_QWORD *)(v0 + 424);
      v64 = *(_QWORD *)(v0 + 368);
      v63 = *(_QWORD *)(v0 + 376);
      v65 = *(_QWORD *)(v0 + 344);
      v66 = type metadata accessor for Logger(0);
      *(_QWORD *)(v0 + 464) = sub_100048B14(v66, (uint64_t)qword_1011AEF40);
      v67 = v187;
      v187(v64, v63, v65);
      v68 = swift_bridgeObjectRetain_n(v62, 2);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.default.getter(v69);
      v71 = os_log_type_enabled(v69, v70);
      v72 = *(_QWORD *)(v0 + 424);
      if (v71)
      {
        v73 = *(_QWORD *)(v0 + 416);
        v74 = *(_QWORD *)(v0 + 368);
        v75 = *(_QWORD *)(v0 + 352);
        v177 = *(_QWORD *)(v0 + 344);
        v76 = swift_slowAlloc(22, -1);
        v77 = swift_slowAlloc(64, -1);
        v191 = v77;
        *(_DWORD *)v76 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v76 + 4) = sub_100322200(v73, v72, &v191);
        v78 = swift_bridgeObjectRelease_n(v72, 3);
        *(_WORD *)(v76 + 12) = 2082;
        v79 = Playlist.Folder.Item.id.getter(v78);
        v81 = v80;
        v82 = MusicItemID.description.getter(v79, v80);
        v84 = v83;
        swift_bridgeObjectRelease(v81);
        *(_QWORD *)(v76 + 14) = sub_100322200(v82, v84, &v191);
        v85 = swift_bridgeObjectRelease(v84);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v75 + 8);
        v86(v74, v177, v85);
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v77, -1, -1);
        v87 = v76;
        v67 = v187;
        swift_slowDealloc(v87, -1, -1);
      }
      else
      {
        v88 = *(_QWORD *)(v0 + 368);
        v89 = *(_QWORD *)(v0 + 344);
        v90 = *(_QWORD *)(v0 + 352);
        v91 = swift_bridgeObjectRelease_n(v72, 2);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v90 + 8);
        v86(v88, v89, v91);
      }

      *(_QWORD *)(v0 + 472) = v86;
      v92 = *(_DWORD *)(v0 + 548);
      v93 = *(_QWORD *)(v0 + 376);
      v95 = *(_QWORD *)(v0 + 352);
      v94 = *(_QWORD *)(v0 + 360);
      v96 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(v93, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v67(v94, v93, v96);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v95 + 88))(v94, v96) == v92)
        break;
      v97 = *(_QWORD *)(v0 + 360);
      v98 = *(_QWORD *)(v0 + 344);
      ((void (*)(_QWORD, uint64_t))v86)(*(_QWORD *)(v0 + 376), v98);
      ((void (*)(uint64_t, uint64_t))v86)(v97, v98);
      v99 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
      dispatch thunk of Collection.endIndex.getter(v162, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
      if (v99 == *(_QWORD *)(v0 + 48))
        goto LABEL_5;
    }
    v188 = *(_QWORD *)(v0 + 424);
    v103 = *(_QWORD *)(v0 + 352);
    v102 = *(_QWORD *)(v0 + 360);
    v104 = *(_QWORD *)(v0 + 344);
    v105 = *(_QWORD *)(v0 + 296);
    v178 = *(_QWORD *)(v0 + 288);
    v106 = *(_QWORD *)(v0 + 256);
    v107 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)typec = *(_QWORD *)(v0 + 376);
    v108 = v67;
    v109 = *(_QWORD *)(v0 + 224);
    v110 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t))(v103 + 96))(v102, v104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 32))(v105, v102, v106);
    v111 = *(void (**)(uint64_t))(v110 + 16);
    v108(v109, *(_QWORD *)typec, v104);
    v112 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v103 + 56);
    *(_QWORD *)(v0 + 480) = v112;
    v112(v109, 0, 1, v104);
    v111(v109);
    sub_10004FF60(v109, (uint64_t *)&unk_1011AD730);
    v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16);
    *(_QWORD *)(v0 + 488) = v113;
    v113(v178, v105, v106);
    v114 = swift_bridgeObjectRetain_n(v188, 2);
    v115 = Logger.logObject.getter(v114);
    v116 = static os_log_type_t.default.getter(v115);
    v117 = os_log_type_enabled(v115, v116);
    v118 = *(_QWORD *)(v0 + 424);
    if (v117)
    {
      v119 = *(_QWORD *)(v0 + 416);
      v120 = *(_QWORD *)(v0 + 288);
      v189 = *(_QWORD *)(v0 + 264);
      v183 = *(_QWORD *)(v0 + 256);
      v121 = swift_slowAlloc(22, -1);
      v122 = swift_slowAlloc(64, -1);
      v191 = v122;
      *(_DWORD *)v121 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 96) = sub_100322200(v119, v118, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v155, v153);
      swift_bridgeObjectRelease_n(v118, 3);
      *(_WORD *)(v121 + 12) = 2082;
      v123 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v124 = dispatch thunk of CustomStringConvertible.description.getter(v183, v123);
      v126 = v125;
      *(_QWORD *)(v0 + 104) = sub_100322200(v124, v125, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v153, v154);
      v127 = swift_bridgeObjectRelease(v126);
      v128 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v128(v120, v183, v127);
      _os_log_impl((void *)&_mh_execute_header, v115, v116, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v121, 0x16u);
      swift_arrayDestroy(v122, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v122, -1, -1);
      swift_slowDealloc(v121, -1, -1);
    }
    else
    {
      v143 = *(_QWORD *)(v0 + 288);
      v144 = *(_QWORD *)(v0 + 256);
      v145 = *(_QWORD *)(v0 + 264);
      v146 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 424), 2);
      v128 = *(void (**)(uint64_t, uint64_t, __n128))(v145 + 8);
      v128(v143, v144, v146);
    }

    *(_QWORD *)(v0 + 496) = v128;
    v147 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v148 = swift_allocObject(v147, 48, 7);
    *(_OWORD *)(v148 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v148 + 32) = static PartialMusicProperty<A>.parent.getter();
    v149 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v148 + 40) = v149;
    v191 = v148;
    specialized Array._endMutation()(v149);
    v150 = v191;
    *(_QWORD *)(v0 + 504) = v191;
    v151 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v152 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 512) = v152;
    *v152 = v0;
    v152[1] = sub_100380D9C;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 280), v150, *(_QWORD *)(v0 + 256), v151);
  }
}

uint64_t sub_100381D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 528);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  *(_QWORD *)(*(_QWORD *)v1 + 536) = v0;
  swift_task_dealloc(v2);
  sub_10004FF60(v3, (uint64_t *)&unk_1011AD730);
  if (v0)
    v4 = sub_1003829F0;
  else
    v4 = sub_100381DF4;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100381DF4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD);
  void (*v36)(uint64_t, uint64_t, uint64_t);
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __n128 v61;
  void (*v62)(uint64_t, uint64_t, __n128);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t);
  void (*v87)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  __n128 v102;
  void (*v103)(uint64_t, uint64_t, __n128);
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t);
  os_log_type_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t);
  NSObject *v161;
  void (*v162)(uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v132 = *(_QWORD *)(v0 + 152);
  v155 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
  v129 = v0 + 112;
  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 480);
  v160 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 344);
  v130 = *(_QWORD *)(v0 + 304);
  v131 = *(_QWORD *)(v0 + 328);
  v149 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 248);
  v140 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  v145 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 240);
  v135 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448))(v6, v2, v3);
  v1(v6, 0, 1, v3);
  v7(v2, v4, v6, v132);
  sub_10004FF60(v6, (uint64_t *)&unk_1011AD730);
  v140(v131, v130);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v135);
  v155(v149, v145);
  v160(v2, v3);
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
  if (v8 == *(_QWORD *)(v0 + 48))
  {
LABEL_2:
    sub_10004FF60(*(_QWORD *)(v0 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
    v10 = *(_QWORD *)(v0 + 320);
    v11 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 168);
    v15 = type metadata accessor for Logger(0);
    sub_100048B14(v15, (uint64_t)qword_1011AEF40);
    v9(v10, v14, v11);
    sub_100383AA0(v13, v12);
    v16 = swift_bridgeObjectRetain();
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v156 = v18;
      v161 = v17;
      v19 = *(_QWORD *)(v0 + 440);
      v21 = *(_QWORD *)(v0 + 416);
      v20 = *(_QWORD *)(v0 + 424);
      v141 = *(_QWORD *)(v0 + 352);
      v146 = *(_QWORD *)(v0 + 344);
      v22 = *(_QWORD *)(v0 + 320);
      v133 = *(_QWORD *)(v0 + 312);
      v23 = *(_QWORD *)(v0 + 304);
      v138 = *(_QWORD *)(v0 + 208);
      v24 = swift_slowAlloc(32, -1);
      v150 = swift_slowAlloc(64, -1);
      v166 = v150;
      *(_DWORD *)v24 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 112) = sub_100322200(v21, v20, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, v0 + 120);
      swift_bridgeObjectRelease_n(v20, 3);
      *(_WORD *)(v24 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v23);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 128), v23, v19);
      v25 = dispatch thunk of Collection.distance(from:to:)(v0 + 120, v0 + 128, v23, v19);
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v22, v23);
      *(_QWORD *)(v0 + 136) = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
      *(_WORD *)(v24 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v138, 1, v146) == 1)
      {
        v26 = 0xE400000000000000;
        v27 = 1953460082;
      }
      else
      {
        v104 = *(_QWORD *)(v0 + 224);
        v105 = *(_QWORD *)(v0 + 200);
        sub_100383AA0(*(_QWORD *)(v0 + 208), v104);
        v27 = String.init<A>(describing:)(v104, v105);
        v26 = v106;
      }
      v107 = *(_QWORD *)(v0 + 208);
      *(_QWORD *)(v0 + 144) = sub_100322200(v27, v26, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
      swift_bridgeObjectRelease(v26);
      sub_10004FF60(v107, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v161, v156, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy(v150, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v150, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {
      v76 = *(_QWORD *)(v0 + 424);
      v77 = *(_QWORD *)(v0 + 208);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v76, 2);
      sub_10004FF60(v77, (uint64_t *)&unk_1011AD730);

    }
    v108 = *(_QWORD *)(v0 + 400);
    v110 = *(_QWORD *)(v0 + 376);
    v109 = *(_QWORD *)(v0 + 384);
    v112 = *(_QWORD *)(v0 + 360);
    v111 = *(_QWORD *)(v0 + 368);
    v113 = *(_QWORD *)(v0 + 328);
    v114 = *(_QWORD *)(v0 + 336);
    v115 = *(_QWORD *)(v0 + 320);
    v116 = *(_QWORD *)(v0 + 296);
    v134 = *(_QWORD *)(v0 + 288);
    v137 = *(_QWORD *)(v0 + 280);
    v139 = *(_QWORD *)(v0 + 272);
    v144 = *(_QWORD *)(v0 + 248);
    v148 = *(_QWORD *)(v0 + 224);
    v154 = *(_QWORD *)(v0 + 216);
    v159 = *(_QWORD *)(v0 + 208);
    v165 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v114);
    swift_task_dealloc(v113);
    swift_task_dealloc(v115);
    swift_task_dealloc(v116);
    swift_task_dealloc(v134);
    swift_task_dealloc(v137);
    swift_task_dealloc(v139);
    swift_task_dealloc(v144);
    swift_task_dealloc(v148);
    swift_task_dealloc(v154);
    swift_task_dealloc(v159);
    swift_task_dealloc(v165);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v136 = v0 + 16;
    v128 = v0 + 104;
    while (1)
    {
      v142 = *(_QWORD *)(v0 + 440);
      v151 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
      v28 = *(_QWORD *)(v0 + 408);
      v29 = *(_QWORD *)(v0 + 384);
      v157 = *(_QWORD *)(v0 + 376);
      v31 = *(_QWORD *)(v0 + 344);
      v30 = *(_QWORD *)(v0 + 352);
      v32 = *(_QWORD *)(v0 + 336);
      v33 = v28 + *(int *)(v0 + 544);
      v34 = *(_QWORD *)(v0 + 304);
      v147 = *(_QWORD *)(v0 + 312);
      v35 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v136, v33, v34, v142);
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
      *(_QWORD *)(v0 + 448) = v36;
      v162 = v36;
      ((void (*)(uint64_t))v36)(v29);
      v35(v136, 0);
      v151(v32, v28, v34);
      dispatch thunk of Collection.formIndex(after:)(v33, v34, v142);
      v37 = *(void (**)(uint64_t, uint64_t))(v147 + 8);
      *(_QWORD *)(v0 + 456) = v37;
      v37(v32, v34);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v157, v29, v31);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v38 = *(_QWORD *)(v0 + 424);
      v40 = *(_QWORD *)(v0 + 368);
      v39 = *(_QWORD *)(v0 + 376);
      v41 = *(_QWORD *)(v0 + 344);
      v42 = type metadata accessor for Logger(0);
      *(_QWORD *)(v0 + 464) = sub_100048B14(v42, (uint64_t)qword_1011AEF40);
      v43 = v162;
      v162(v40, v39, v41);
      v44 = swift_bridgeObjectRetain_n(v38, 2);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      v47 = os_log_type_enabled(v45, v46);
      v48 = *(_QWORD *)(v0 + 424);
      if (v47)
      {
        v49 = *(_QWORD *)(v0 + 416);
        v50 = *(_QWORD *)(v0 + 368);
        v51 = *(_QWORD *)(v0 + 352);
        v152 = *(_QWORD *)(v0 + 344);
        v52 = swift_slowAlloc(22, -1);
        v53 = swift_slowAlloc(64, -1);
        v166 = v53;
        *(_DWORD *)v52 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v52 + 4) = sub_100322200(v49, v48, &v166);
        v54 = swift_bridgeObjectRelease_n(v48, 3);
        *(_WORD *)(v52 + 12) = 2082;
        v55 = Playlist.Folder.Item.id.getter(v54);
        v57 = v56;
        v58 = MusicItemID.description.getter(v55, v56);
        v60 = v59;
        swift_bridgeObjectRelease(v57);
        *(_QWORD *)(v52 + 14) = sub_100322200(v58, v60, &v166);
        v61 = swift_bridgeObjectRelease(v60);
        v62 = *(void (**)(uint64_t, uint64_t, __n128))(v51 + 8);
        v62(v50, v152, v61);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v52, 0x16u);
        swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v53, -1, -1);
        v63 = v52;
        v43 = v162;
        swift_slowDealloc(v63, -1, -1);
      }
      else
      {
        v64 = *(_QWORD *)(v0 + 368);
        v65 = *(_QWORD *)(v0 + 344);
        v66 = *(_QWORD *)(v0 + 352);
        v67 = swift_bridgeObjectRelease_n(v48, 2);
        v62 = *(void (**)(uint64_t, uint64_t, __n128))(v66 + 8);
        v62(v64, v65, v67);
      }

      *(_QWORD *)(v0 + 472) = v62;
      v68 = *(_DWORD *)(v0 + 548);
      v69 = *(_QWORD *)(v0 + 376);
      v71 = *(_QWORD *)(v0 + 352);
      v70 = *(_QWORD *)(v0 + 360);
      v72 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(v69, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v43(v70, v69, v72);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v71 + 88))(v70, v72) == v68)
        break;
      v73 = *(_QWORD *)(v0 + 360);
      v74 = *(_QWORD *)(v0 + 344);
      ((void (*)(_QWORD, uint64_t))v62)(*(_QWORD *)(v0 + 376), v74);
      ((void (*)(uint64_t, uint64_t))v62)(v73, v74);
      v75 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
      if (v75 == *(_QWORD *)(v0 + 48))
        goto LABEL_2;
    }
    v163 = *(_QWORD *)(v0 + 424);
    v79 = *(_QWORD *)(v0 + 352);
    v78 = *(_QWORD *)(v0 + 360);
    v80 = *(_QWORD *)(v0 + 344);
    v81 = *(_QWORD *)(v0 + 296);
    v153 = *(_QWORD *)(v0 + 288);
    v83 = *(_QWORD *)(v0 + 256);
    v82 = *(_QWORD *)(v0 + 264);
    v143 = *(_QWORD *)(v0 + 376);
    v84 = *(_QWORD *)(v0 + 224);
    v85 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t))(v79 + 96))(v78, v80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v81, v78, v83);
    v86 = *(void (**)(uint64_t))(v85 + 16);
    v43(v84, v143, v80);
    v87 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56);
    *(_QWORD *)(v0 + 480) = v87;
    v87(v84, 0, 1, v80);
    v86(v84);
    sub_10004FF60(v84, (uint64_t *)&unk_1011AD730);
    v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
    *(_QWORD *)(v0 + 488) = v88;
    v88(v153, v81, v83);
    v89 = swift_bridgeObjectRetain_n(v163, 2);
    v90 = Logger.logObject.getter(v89);
    v91 = static os_log_type_t.default.getter(v90);
    v92 = os_log_type_enabled(v90, v91);
    v93 = *(_QWORD *)(v0 + 424);
    if (v92)
    {
      v94 = *(_QWORD *)(v0 + 416);
      v95 = *(_QWORD *)(v0 + 288);
      v158 = *(_QWORD *)(v0 + 256);
      v164 = *(_QWORD *)(v0 + 264);
      v96 = swift_slowAlloc(22, -1);
      v97 = swift_slowAlloc(64, -1);
      v166 = v97;
      *(_DWORD *)v96 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 96) = sub_100322200(v94, v93, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v128);
      swift_bridgeObjectRelease_n(v93, 3);
      *(_WORD *)(v96 + 12) = 2082;
      v98 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v99 = dispatch thunk of CustomStringConvertible.description.getter(v158, v98);
      v101 = v100;
      *(_QWORD *)(v0 + 104) = sub_100322200(v99, v100, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v128, v129);
      v102 = swift_bridgeObjectRelease(v101);
      v103 = *(void (**)(uint64_t, uint64_t, __n128))(v164 + 8);
      v103(v95, v158, v102);
      _os_log_impl((void *)&_mh_execute_header, v90, v91, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v96, 0x16u);
      swift_arrayDestroy(v97, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v96, -1, -1);
    }
    else
    {
      v118 = *(_QWORD *)(v0 + 288);
      v119 = *(_QWORD *)(v0 + 256);
      v120 = *(_QWORD *)(v0 + 264);
      v121 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 424), 2);
      v103 = *(void (**)(uint64_t, uint64_t, __n128))(v120 + 8);
      v103(v118, v119, v121);
    }

    *(_QWORD *)(v0 + 496) = v103;
    v122 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v123 = swift_allocObject(v122, 48, 7);
    *(_OWORD *)(v123 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v123 + 32) = static PartialMusicProperty<A>.parent.getter();
    v124 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v123 + 40) = v124;
    v166 = v123;
    specialized Array._endMutation()(v124);
    v125 = v166;
    *(_QWORD *)(v0 + 504) = v166;
    v126 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v127 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 512) = v127;
    *v127 = v0;
    v127[1] = sub_100380D9C;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 280), v125, *(_QWORD *)(v0 + 256), v126);
  }
}

uint64_t sub_1003829F0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  NSObject *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  void (*v86)(uint64_t, uint64_t, __n128);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t);
  void (*v112)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  _BOOL4 v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  __n128 v127;
  void (*v128)(uint64_t, uint64_t, __n128);
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, __n128);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_type_t typeb[8];
  os_log_type_t typec[8];
  os_log_type_t typed[8];
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  os_log_type_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(uint64_t, uint64_t);
  NSObject *v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v162 = (_QWORD *)(v0 + 48);
  v154 = v0 + 112;
  v155 = v0 + 96;
  (*(void (**)(_QWORD, _QWORD))(v0 + 456))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 304));
  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 488);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  v2(v4, v3, v5);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v156 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 496);
    v185 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v10 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 424);
    v174 = *(_QWORD *)(v0 + 344);
    v180 = *(_QWORD *)(v0 + 376);
    v170 = *(_QWORD *)(v0 + 296);
    type = v8;
    v11 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 256);
    v13 = swift_slowAlloc(32, -1);
    v159 = swift_slowAlloc(96, -1);
    v191 = v159;
    *(_DWORD *)v13 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_100322200(v10, v9, &v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v13 + 12) = 2082;
    v14 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v12, v14);
    v17 = v16;
    *(_QWORD *)(v0 + 72) = sub_100322200(v15, v16, &v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    v18 = swift_bridgeObjectRelease(v17);
    v156(v11, v12, v18);
    *(_WORD *)(v13 + 22) = 2082;
    *(_QWORD *)(v0 + 80) = v1;
    swift_errorRetain(v1);
    v19 = sub_100007E8C(&qword_1011A14B0);
    v20 = String.init<A>(describing:)(v0 + 80, v19);
    v22 = v21;
    *(_QWORD *)(v0 + 88) = sub_100322200(v20, v21, &v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v155);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v7, type, "%s | 📁❌ Failed to query children for folder=%{public}s. Error=%{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy(v159, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v159, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v1);
    ((void (*)(uint64_t, uint64_t))v156)(v170, v12);
    v185(v180, v174);
  }
  else
  {
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v24 = v7;
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v26 = *(_QWORD *)(v0 + 424);
    v27 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 296);
    v30 = *(_QWORD *)(v0 + 272);
    v31 = *(_QWORD *)(v0 + 256);

    swift_errorRelease(v1);
    swift_errorRelease(v1);
    v23(v30, v31);
    swift_bridgeObjectRelease_n(v26, 2);
    swift_errorRelease(v1);
    v23(v29, v31);
    v25(v27, v28);
  }
  v32 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
  dispatch thunk of Collection.endIndex.getter(v162, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
  if (v32 == *(_QWORD *)(v0 + 48))
  {
LABEL_5:
    sub_10004FF60(*(_QWORD *)(v0 + 408), (uint64_t *)&unk_1011C9A40);
    if (qword_10119BF40 != -1)
      swift_once(&qword_10119BF40, sub_1003839AC);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
    v34 = *(_QWORD *)(v0 + 320);
    v35 = *(_QWORD *)(v0 + 304);
    v36 = *(_QWORD *)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v0 + 168);
    v39 = type metadata accessor for Logger(0);
    sub_100048B14(v39, (uint64_t)qword_1011AEF40);
    v33(v34, v38, v35);
    sub_100383AA0(v37, v36);
    v40 = swift_bridgeObjectRetain();
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v181 = v42;
      v186 = v41;
      v43 = *(_QWORD *)(v0 + 440);
      v44 = *(_QWORD *)(v0 + 416);
      v45 = *(_QWORD *)(v0 + 424);
      *(_QWORD *)typea = *(_QWORD *)(v0 + 352);
      v171 = *(_QWORD *)(v0 + 344);
      v46 = *(_QWORD *)(v0 + 320);
      v157 = *(_QWORD *)(v0 + 312);
      v47 = *(_QWORD *)(v0 + 304);
      v163 = *(_QWORD *)(v0 + 208);
      v48 = swift_slowAlloc(32, -1);
      v175 = swift_slowAlloc(64, -1);
      v191 = v175;
      *(_DWORD *)v48 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 112) = sub_100322200(v44, v45, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v154, v0 + 120);
      swift_bridgeObjectRelease_n(v45, 3);
      *(_WORD *)(v48 + 12) = 2050;
      dispatch thunk of Collection.startIndex.getter(v47);
      dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 128), v47, v43);
      v49 = dispatch thunk of Collection.distance(from:to:)(v0 + 120, v0 + 128, v47, v43);
      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v46, v47);
      *(_QWORD *)(v0 + 136) = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
      *(_WORD *)(v48 + 22) = 2082;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)typea + 48))(v163, 1, v171) == 1)
      {
        v50 = 0xE400000000000000;
        v51 = 1953460082;
      }
      else
      {
        v129 = *(_QWORD *)(v0 + 224);
        v130 = *(_QWORD *)(v0 + 200);
        sub_100383AA0(*(_QWORD *)(v0 + 208), v129);
        v51 = String.init<A>(describing:)(v129, v130);
        v50 = v131;
      }
      v132 = *(_QWORD *)(v0 + 208);
      *(_QWORD *)(v0 + 144) = sub_100322200(v51, v50, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
      swift_bridgeObjectRelease(v50);
      sub_10004FF60(v132, (uint64_t *)&unk_1011AD730);
      _os_log_impl((void *)&_mh_execute_header, v186, v181, "%s╰ ✅ Added %{public}ld playlists to %{public}s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy(v175, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v175, -1, -1);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {
      v100 = *(_QWORD *)(v0 + 424);
      v101 = *(_QWORD *)(v0 + 208);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v100, 2);
      sub_10004FF60(v101, (uint64_t *)&unk_1011AD730);

    }
    v133 = *(_QWORD *)(v0 + 400);
    v135 = *(_QWORD *)(v0 + 376);
    v134 = *(_QWORD *)(v0 + 384);
    v137 = *(_QWORD *)(v0 + 360);
    v136 = *(_QWORD *)(v0 + 368);
    v138 = *(_QWORD *)(v0 + 328);
    v139 = *(_QWORD *)(v0 + 336);
    v140 = *(_QWORD *)(v0 + 320);
    v141 = *(_QWORD *)(v0 + 296);
    v158 = *(_QWORD *)(v0 + 288);
    v161 = *(_QWORD *)(v0 + 280);
    v164 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)typed = *(_QWORD *)(v0 + 248);
    v173 = *(_QWORD *)(v0 + 224);
    v179 = *(_QWORD *)(v0 + 216);
    v184 = *(_QWORD *)(v0 + 208);
    v190 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v137);
    swift_task_dealloc(v139);
    swift_task_dealloc(v138);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v158);
    swift_task_dealloc(v161);
    swift_task_dealloc(v164);
    swift_task_dealloc(*(_QWORD *)typed);
    swift_task_dealloc(v173);
    swift_task_dealloc(v179);
    swift_task_dealloc(v184);
    swift_task_dealloc(v190);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v160 = v0 + 16;
    v153 = v0 + 104;
    while (1)
    {
      v52 = *(_QWORD *)(v0 + 408);
      v53 = *(_QWORD *)(v0 + 384);
      v176 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
      v182 = *(_QWORD *)(v0 + 376);
      v55 = *(_QWORD *)(v0 + 344);
      v54 = *(_QWORD *)(v0 + 352);
      v56 = *(_QWORD *)(v0 + 336);
      v57 = v52 + *(int *)(v0 + 544);
      v58 = *(_QWORD *)(v0 + 304);
      *(_QWORD *)typeb = *(_QWORD *)(v0 + 440);
      v172 = *(_QWORD *)(v0 + 312);
      v59 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v160, v57, v58, *(_QWORD *)typeb);
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
      *(_QWORD *)(v0 + 448) = v60;
      v187 = v60;
      ((void (*)(uint64_t))v60)(v53);
      v59(v160, 0);
      v176(v56, v52, v58);
      dispatch thunk of Collection.formIndex(after:)(v57, v58, *(_QWORD *)typeb);
      v61 = *(void (**)(uint64_t, uint64_t))(v172 + 8);
      *(_QWORD *)(v0 + 456) = v61;
      v61(v56, v58);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v182, v53, v55);
      if (qword_10119BF40 != -1)
        swift_once(&qword_10119BF40, sub_1003839AC);
      v62 = *(_QWORD *)(v0 + 424);
      v64 = *(_QWORD *)(v0 + 368);
      v63 = *(_QWORD *)(v0 + 376);
      v65 = *(_QWORD *)(v0 + 344);
      v66 = type metadata accessor for Logger(0);
      *(_QWORD *)(v0 + 464) = sub_100048B14(v66, (uint64_t)qword_1011AEF40);
      v67 = v187;
      v187(v64, v63, v65);
      v68 = swift_bridgeObjectRetain_n(v62, 2);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.default.getter(v69);
      v71 = os_log_type_enabled(v69, v70);
      v72 = *(_QWORD *)(v0 + 424);
      if (v71)
      {
        v73 = *(_QWORD *)(v0 + 416);
        v74 = *(_QWORD *)(v0 + 368);
        v75 = *(_QWORD *)(v0 + 352);
        v177 = *(_QWORD *)(v0 + 344);
        v76 = swift_slowAlloc(22, -1);
        v77 = swift_slowAlloc(64, -1);
        v191 = v77;
        *(_DWORD *)v76 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v76 + 4) = sub_100322200(v73, v72, &v191);
        v78 = swift_bridgeObjectRelease_n(v72, 3);
        *(_WORD *)(v76 + 12) = 2082;
        v79 = Playlist.Folder.Item.id.getter(v78);
        v81 = v80;
        v82 = MusicItemID.description.getter(v79, v80);
        v84 = v83;
        swift_bridgeObjectRelease(v81);
        *(_QWORD *)(v76 + 14) = sub_100322200(v82, v84, &v191);
        v85 = swift_bridgeObjectRelease(v84);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v75 + 8);
        v86(v74, v177, v85);
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s| ➕ Adding playlist %{public}s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v77, -1, -1);
        v87 = v76;
        v67 = v187;
        swift_slowDealloc(v87, -1, -1);
      }
      else
      {
        v88 = *(_QWORD *)(v0 + 368);
        v89 = *(_QWORD *)(v0 + 344);
        v90 = *(_QWORD *)(v0 + 352);
        v91 = swift_bridgeObjectRelease_n(v72, 2);
        v86 = *(void (**)(uint64_t, uint64_t, __n128))(v90 + 8);
        v86(v88, v89, v91);
      }

      *(_QWORD *)(v0 + 472) = v86;
      v92 = *(_DWORD *)(v0 + 548);
      v93 = *(_QWORD *)(v0 + 376);
      v95 = *(_QWORD *)(v0 + 352);
      v94 = *(_QWORD *)(v0 + 360);
      v96 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(v93, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v67(v94, v93, v96);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v95 + 88))(v94, v96) == v92)
        break;
      v97 = *(_QWORD *)(v0 + 360);
      v98 = *(_QWORD *)(v0 + 344);
      ((void (*)(_QWORD, uint64_t))v86)(*(_QWORD *)(v0 + 376), v98);
      ((void (*)(uint64_t, uint64_t))v86)(v97, v98);
      v99 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + *(int *)(v0 + 544));
      dispatch thunk of Collection.endIndex.getter(v162, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 440));
      if (v99 == *(_QWORD *)(v0 + 48))
        goto LABEL_5;
    }
    v188 = *(_QWORD *)(v0 + 424);
    v103 = *(_QWORD *)(v0 + 352);
    v102 = *(_QWORD *)(v0 + 360);
    v104 = *(_QWORD *)(v0 + 344);
    v105 = *(_QWORD *)(v0 + 296);
    v178 = *(_QWORD *)(v0 + 288);
    v106 = *(_QWORD *)(v0 + 256);
    v107 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)typec = *(_QWORD *)(v0 + 376);
    v108 = v67;
    v109 = *(_QWORD *)(v0 + 224);
    v110 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t))(v103 + 96))(v102, v104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 32))(v105, v102, v106);
    v111 = *(void (**)(uint64_t))(v110 + 16);
    v108(v109, *(_QWORD *)typec, v104);
    v112 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v103 + 56);
    *(_QWORD *)(v0 + 480) = v112;
    v112(v109, 0, 1, v104);
    v111(v109);
    sub_10004FF60(v109, (uint64_t *)&unk_1011AD730);
    v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16);
    *(_QWORD *)(v0 + 488) = v113;
    v113(v178, v105, v106);
    v114 = swift_bridgeObjectRetain_n(v188, 2);
    v115 = Logger.logObject.getter(v114);
    v116 = static os_log_type_t.default.getter(v115);
    v117 = os_log_type_enabled(v115, v116);
    v118 = *(_QWORD *)(v0 + 424);
    if (v117)
    {
      v119 = *(_QWORD *)(v0 + 416);
      v120 = *(_QWORD *)(v0 + 288);
      v189 = *(_QWORD *)(v0 + 264);
      v183 = *(_QWORD *)(v0 + 256);
      v121 = swift_slowAlloc(22, -1);
      v122 = swift_slowAlloc(64, -1);
      v191 = v122;
      *(_DWORD *)v121 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 96) = sub_100322200(v119, v118, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v155, v153);
      swift_bridgeObjectRelease_n(v118, 3);
      *(_WORD *)(v121 + 12) = 2082;
      v123 = sub_100048748(&qword_1011ABD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
      v124 = dispatch thunk of CustomStringConvertible.description.getter(v183, v123);
      v126 = v125;
      *(_QWORD *)(v0 + 104) = sub_100322200(v124, v125, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v153, v154);
      v127 = swift_bridgeObjectRelease(v126);
      v128 = *(void (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      v128(v120, v183, v127);
      _os_log_impl((void *)&_mh_execute_header, v115, v116, "%s|— 🔨📁 Building folder playlist snapshot for folder=%{public}s", (uint8_t *)v121, 0x16u);
      swift_arrayDestroy(v122, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v122, -1, -1);
      swift_slowDealloc(v121, -1, -1);
    }
    else
    {
      v143 = *(_QWORD *)(v0 + 288);
      v144 = *(_QWORD *)(v0 + 256);
      v145 = *(_QWORD *)(v0 + 264);
      v146 = swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 424), 2);
      v128 = *(void (**)(uint64_t, uint64_t, __n128))(v145 + 8);
      v128(v143, v144, v146);
    }

    *(_QWORD *)(v0 + 496) = v128;
    v147 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v148 = swift_allocObject(v147, 48, 7);
    *(_OWORD *)(v148 + 16) = xmmword_100EA7DB0;
    sub_100007E8C(&qword_1011ABD50);
    *(_QWORD *)(v148 + 32) = static PartialMusicProperty<A>.parent.getter();
    v149 = static PartialMusicProperty<A>.children.getter();
    *(_QWORD *)(v148 + 40) = v149;
    v191 = v148;
    specialized Array._endMutation()(v149);
    v150 = v191;
    *(_QWORD *)(v0 + 504) = v191;
    v151 = sub_100048748(&qword_1011ABD58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder, (uint64_t)&protocol conformance descriptor for Playlist.Folder);
    v152 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 512) = v152;
    *v152 = v0;
    v152[1] = sub_100380D9C;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 280), v150, *(_QWORD *)(v0 + 256), v151);
  }
}

BOOL sub_100383818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  _BOOL8 result;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;

  type metadata accessor for MusicLibrary(0);
  if ((static MusicLibrary.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    return 0;
  v6 = (int *)_s9PlaylistsVMa(0);
  if (!sub_10010BC74((uint64_t *)(a1 + v6[6]), (uint64_t *)(a2 + v6[6])))
    return 0;
  v7 = v6[7];
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  v12 = v8 == *v10 && v9 == v11;
  if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, *v10, v11, 0), result = 0, (v13 & 1) != 0))
  {
    if ((sub_10016CD08(*(_QWORD *)(a1 + v6[8]), *(_QWORD *)(a2 + v6[8])) & 1) != 0)
    {
      v15 = v6[9];
      v16 = *(unsigned __int8 *)(a1 + v15 + 1);
      v17 = *(unsigned __int8 *)(a2 + v15 + 1);
      sub_1005CFF5C(*(_BYTE *)(a1 + v15));
      v19 = v18;
      result = 0;
      if ((v19 & 1) != 0 && ((v16 ^ v17) & 1) == 0)
      {
        v20 = v6[10];
        v21 = *(unsigned __int8 *)(a1 + v20 + 1);
        v22 = *(unsigned __int8 *)(a2 + v20 + 1);
        sub_1005CFF5C(*(_BYTE *)(a1 + v20));
        v26 = v25;
        result = 0;
        if ((v26 & 1) != 0 && ((v21 ^ v22) & 1) == 0)
        {
          v27 = _s22NestedPlaylistsRequestVMa(0, a3, v23, v24);
          return *(_QWORD *)(a1 + *(int *)(v27 + 28)) == *(_QWORD *)(a2 + *(int *)(v27 + 28));
        }
      }
      return result;
    }
    return 0;
  }
  return result;
}

BOOL sub_100383978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100383818(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t sub_100383980(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&unk_100EB7098, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003839AC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011AEF40);
  sub_100048B14(v0, (uint64_t)qword_1011AEF40);
  return static Logger.music(_:)(0xD000000000000018, 0x8000000100E37A40);
}

unint64_t sub_100383A0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AD880;
  if (!qword_1011AD880)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011AD720);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AD880);
  }
  return result;
}

uint64_t sub_100383A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011C9A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100383AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100383AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  int *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(_s22NestedPlaylistsRequestVMa(0, v1, v6, v7) - 8);
  v9 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = *(_QWORD *)(v8 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v3 + 8))(v0 + v4, v2, v10);
  v11 = v0 + v9;
  swift_release();
  v12 = (int *)_s9PlaylistsVMa(0);
  v13 = (_QWORD *)(v0 + v9 + v12[6]);
  swift_bridgeObjectRelease(*v13);
  v14 = (char *)v13 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v15 = type metadata accessor for Playlist.Folder(0);
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[8]));
  swift_release();
  swift_release();
  return swift_deallocObject(v0, ((v18 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
}

uint64_t sub_100383C68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v4 = v1[4];
  v5 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3C20) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(_s22NestedPlaylistsRequestVMa(0, v4, v8, v9) - 8);
  v11 = (v7 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = v1[2];
  v13 = v1[3];
  v14 = v1[5];
  v15 = (uint64_t)v1 + v6;
  v16 = (uint64_t)v1 + v11;
  v17 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  v18 = *v17;
  v19 = v17[1];
  v20 = (_QWORD *)swift_task_alloc(dword_1011AF094);
  *(_QWORD *)(v2 + 16) = v20;
  *v20 = v2;
  v20[1] = sub_10005AEE4;
  return sub_10037F008(a1, v12, v13, v14, v15, v16, v18, v19);
}

uint64_t sub_100383D58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100383DC4, v5, v6);
}

uint64_t sub_100383DC4()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL8 v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  if (*(unsigned __int8 *)(v1 + 64) == 255)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v4 = objc_msgSend(v3, "traitCollection");

    v5 = objc_msgSend(v4, "horizontalSizeClass");
    v2 = v5 != (id)1;
  }
  else
  {
    v2 = 0;
  }
  v6 = *(_QWORD *)(v0 + 16);
  sub_100383F50();
  v7 = static UIAlertController.alertController(with:overrideStyle:)(v6, v2, 0);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v7, 1, (id)0xF, (void **)1, 0, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100383EBC()
{
  uint64_t v0;

  sub_100064B4C(v0 + 16);
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for AlertPresenter()
{
  return objc_opt_self(_TtC5Music14AlertPresenter);
}

uint64_t sub_100383F00(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011AF0CC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  return sub_100383D58(a1);
}

unint64_t sub_100383F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2A18;
  if (!qword_1011A2A18)
  {
    v1 = objc_opt_self(UIAlertController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1011A2A18);
  }
  return result;
}

uint64_t sub_100383F8C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for WaveformState(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100384014(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for WaveformState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain(v15);
  }
  else
  {
    v16 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v16, ((unint64_t)a2 + v11) & v16, v8);
  }
  return a1;
}

uint64_t sub_1003840EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for WaveformState(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_100384150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for WaveformState(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1003841CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for WaveformState(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_100384248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for WaveformState(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1003842C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for WaveformState(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_100384340(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;

  v6 = type metadata accessor for WaveformState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = *(_QWORD *)(v7 + 64) + v13;
  if (a2 <= v12)
    goto LABEL_23;
  v15 = (v14 & ~v13) + *(_QWORD *)(v10 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_23:
      if (v12)
      {
        if (v8 >= v11)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v14 + a1) & ~v13, *(unsigned int *)(v10 + 84), v9);
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_14:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = (v14 & ~(_DWORD)v13) + *(_DWORD *)(v10 + 64);
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v12 + v19 + 1;
}

void sub_1003844D0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(type metadata accessor for WaveformState(0) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_100000004;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &_mh_execute_header.magic + 1;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t type metadata accessor for DancingPlaybackBarsOverlayModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DancingPlaybackBarsOverlayModifier);
}

uint64_t sub_1003846F0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F9D944, 1);
}

uint64_t sub_100384724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v33 = a1;
  v34 = a3;
  WitnessTable = swift_getWitnessTable(&unk_100EB7188, a2);
  v6 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = sub_100044B54(&qword_1011AF1D8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v7, v8, 0, 0);
  v10 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v11 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v10);
  v12 = type metadata accessor for ZStack(255, v10, v11);
  v13 = type metadata accessor for Optional(255, v12);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v12);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v13);
  v15 = type metadata accessor for _OverlayModifier(255, v13, v14);
  v16 = type metadata accessor for ModifiedContent(0, v6, v15);
  v32 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v31 - v20;
  v22 = *(_QWORD *)(a2 + 24);
  v36 = v7;
  v37 = v22;
  v38 = v3;
  v24 = static Alignment.center.getter(v23);
  v26 = v25;
  v27 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  View.overlay<A>(alignment:content:)(v24, v26, sub_100385040, v35, v6, v13, v27, v14);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v15);
  v39 = v27;
  v40 = v28;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  sub_10081EB14((uint64_t)v18, v16, (uint64_t)v21);
  v29 = *(void (**)(char *, uint64_t))(v32 + 8);
  v29(v18, v16);
  sub_1000EA744((uint64_t)v21, v16, v34);
  return ((uint64_t (*)(char *, uint64_t))v29)(v21, v16);
}

uint64_t sub_100384968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, __n128);
  char *v26;
  id v27;
  NSString v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t WitnessTable;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a3;
  v47 = a4;
  v6 = sub_100044B54(&qword_1011AF1D8);
  v42 = a2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, v6, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v9 = type metadata accessor for ZStack(0, v8, WitnessTable);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v41 = (uint64_t)&v39 - v13;
  v14 = type metadata accessor for WaveformState(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Optional(0, v9);
  v45 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v39 - v23;
  v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v43 = a1;
  v25(v17, a1, v14, v22);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) == enum case for WaveformState.hidden(_:)
    || ((*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14),
        v26 = DeviceCapabilities.isInternalInstall.unsafeMutableAddressor(),
        *v26 == 1)
    && (v27 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults"),
        v28 = String._bridgeToObjectiveC()(),
        v29 = objc_msgSend(v27, "BOOLForKey:", v28),
        v27,
        v28,
        (v29 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v20, 1, 1, v9);
    swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
  }
  else
  {
    __chkstk_darwin(v26);
    v30 = v44;
    *(&v39 - 4) = v42;
    *(&v39 - 3) = v30;
    *(&v39 - 2) = v43;
    v32 = static Alignment.center.getter(v31);
    ZStack.init(alignment:content:)(v32, v33, sub_10038504C, &v39 - 6, v8, WitnessTable);
    swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
    v34 = v41;
    sub_10081EB14((uint64_t)v11, v9, v41);
    v35 = v46;
    v36 = *(void (**)(char *, uint64_t))(v46 + 8);
    v36(v11, v9);
    sub_1000EA744(v34, v9, (uint64_t)v20);
    v36((char *)v34, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v20, 0, 1, v9);
  }
  sub_1004D497C((uint64_t)v20, v9, (uint64_t)v24);
  v37 = *(void (**)(char *, uint64_t))(v45 + 8);
  v37(v20, v18);
  v48 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v18);
  sub_1000EA744((uint64_t)v24, v18, v47);
  return ((uint64_t (*)(char *, uint64_t))v37)(v24, v18);
}

uint64_t sub_100384D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD v51[4];
  _QWORD v52[2];
  uint64_t v53[3];

  v49 = a4;
  v7 = type metadata accessor for WaveformColorPalette(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WaveformState(0);
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WaveformView(0);
  v14 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  v46 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011AF1D8);
  v44 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v40 - v21;
  v41 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v23);
  v50 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v40 - v26;
  v40 = a3;
  v29 = type metadata accessor for DancingPlaybackBarsOverlayModifier(0, a2, a3, v28);
  sub_10081EB14(a1 + *(int *)(v29 + 36), a2, (uint64_t)v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v12, a1, v43);
  v30 = WaveformView.init(state:)(v12);
  static WaveformColorPalette.white.getter(v30);
  v31 = sub_100385058();
  v32 = v45;
  View.waveformColorPalette(_:)(v9, v45, v31);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v48);
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v32);
  v34 = v44;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v22, v19, v17);
  v35 = v41;
  v36 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v50, v27, a2);
  v53[0] = v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v19, v22, v17);
  v53[1] = (uint64_t)v19;
  v52[0] = a2;
  v52[1] = v17;
  v51[1] = v31;
  v51[2] = v40;
  v51[0] = v33;
  v51[3] = swift_getOpaqueTypeConformance2(v51, &opaque type descriptor for <<opaque return type of View.waveformColorPalette(_:)>>, 1);
  sub_1004D49B8(v53, 2uLL, (uint64_t)v52);
  v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  v37(v22, v17);
  v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  v38(v27, a2);
  v37(v19, v17);
  return ((uint64_t (*)(char *, uint64_t))v38)(v50, a2);
}

uint64_t sub_100385040@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100384968(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10038504C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100384D34(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100385058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF1E0;
  if (!qword_1011AF1E0)
  {
    v1 = type metadata accessor for WaveformView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WaveformView, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF1E0);
  }
  return result;
}

uint64_t sub_1003850A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WaveformState(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1003850DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WaveformState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100385110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WaveformState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100385154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WaveformState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100385198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WaveformState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003851DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WaveformState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100385220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038522C);
}

uint64_t sub_10038522C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WaveformState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100385268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100385274);
}

uint64_t sub_100385274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WaveformState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DancingPlaybackBarsConditionalModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AF240;
  if (!qword_1011AF240)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DancingPlaybackBarsConditionalModifier);
  return result;
}

uint64_t sub_1003852F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WaveformState(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100385358(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a1;
  v5 = type metadata accessor for DancingPlaybackBarsOverlayModifier(255, *a1, a1[1], a4);
  WitnessTable = swift_getWitnessTable(&unk_100EB7188, v5);
  v7 = type metadata accessor for _ViewModifier_Content(255, v5, WitnessTable);
  v8 = sub_100044B54(&qword_1011AF1D8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v8, 0, 0);
  v10 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v11 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v10);
  v12 = type metadata accessor for ZStack(255, v10, v11);
  v13 = type metadata accessor for Optional(255, v12);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v12);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v13);
  v15 = type metadata accessor for _OverlayModifier(255, v13, v14);
  v16 = type metadata accessor for ModifiedContent(255, v7, v15);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v7);
  swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v15);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
}

uint64_t sub_1003854AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9D978, 1);
}

uint64_t sub_1003854BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  id v20;
  NSString v21;
  unsigned int v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v41 = a3;
  v42 = sub_100007E8C(&qword_1011AF278);
  __chkstk_darwin(v42);
  v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C(&qword_1011AF280);
  __chkstk_darwin(v40);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011AF288);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WaveformState(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v37 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v37 = a1;
  v19((char *)&v37 - v17, a1, v11, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v18, v11) == enum case for WaveformState.hidden(_:)
    || ((*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11),
        *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1)
    && (v20 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults"),
        v21 = String._bridgeToObjectiveC()(),
        v22 = objc_msgSend(v20, "BOOLForKey:", v21),
        v20,
        v21,
        v22))
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v23(v10, v39, v7);
    v23(v6, (uint64_t)v10, v7);
    swift_storeEnumTagMultiPayload(v6, v40, 0);
    v24 = sub_100049F28(&qword_1011AF298, &qword_1011AF288, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v25 = sub_100385874();
    _ConditionalContent<>.init(storage:)(v6, v7, v42, v24, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v27 = (uint64_t)v38;
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v38, v39, v7);
    v29 = static Alignment.center.getter(v28);
    v30 = v42;
    v32 = v31;
    v33 = v27 + *(int *)(v42 + 36);
    ((void (*)(char *, uint64_t, uint64_t))v19)(v14, v37, v11);
    WaveformView.init(state:)(v14);
    v34 = (uint64_t *)(v33 + *(int *)(sub_100007E8C(&qword_1011AF290) + 36));
    *v34 = v29;
    v34[1] = v32;
    sub_10038582C(v27, (uint64_t)v6);
    swift_storeEnumTagMultiPayload(v6, v40, 1);
    v35 = sub_100049F28(&qword_1011AF298, &qword_1011AF288, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v36 = sub_100385874();
    _ConditionalContent<>.init(storage:)(v6, v7, v30, v35, v36);
    return sub_1003859AC(v27);
  }
}

uint64_t sub_100385820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1003854BC(v2, a1, a2);
}

uint64_t sub_10038582C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011AF278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100385874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF2A0;
  if (!qword_1011AF2A0)
  {
    v1 = sub_100044B54(&qword_1011AF278);
    sub_100385920(&qword_1011AF2A8, &qword_1011AF2B0, (void (*)(void))sub_10006FEFC, (uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    sub_100049F28(&qword_1011AF2B8, &qword_1011AF290, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF2A0);
  }
  return result;
}

uint64_t sub_100385920(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(&qword_1011AF298, &qword_1011AF288, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003859AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011AF278);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003859F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF2C0;
  if (!qword_1011AF2C0)
  {
    v1 = sub_100044B54(&qword_1011AF2C8);
    sub_100385920(&qword_1011AF2D0, &qword_1011AF2D8, (void (*)(void))sub_100385874, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF2C0);
  }
  return result;
}

uint64_t sub_100385A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_100385A8C, 0, 0);
}

uint64_t sub_100385A8C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100385AF4, v3, v4);
}

uint64_t sub_100385AF4()
{
  uint64_t v0;
  double v1;

  swift_release();
  v1 = sub_1006D9098();
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

uint64_t sub_100385B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_100385B40, 0, 0);
}

uint64_t sub_100385B40()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100385BA8, v3, v4);
}

uint64_t sub_100385BA8()
{
  uint64_t v0;
  double v1;

  swift_release();
  v1 = sub_1006D9354();
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

uint64_t sub_100385BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  double *v36;
  double (**v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t (**v39)@<X0>(uint64_t *@<X1>, uint64_t@<X8>);
  char *v40;
  uint64_t v42;
  uint64_t v43;

  v43 = a2;
  v4 = sub_100007E8C(&qword_1011AF350);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)sub_100007E8C(&qword_1011AF348);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1010C2190, 24, 7);
  *(_QWORD *)(v10 + 16) = v2;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011AF350);
  v11 = v2;
  v42 = static HorizontalAlignment.leading.getter(v11);
  v12 = swift_allocObject(&unk_1010C21B8, 24, 7);
  *(_QWORD *)(v12 + 16) = v11;
  v13 = swift_allocObject(&unk_1010C21E0, 24, 7);
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject(&unk_1010C2208, 24, 7);
  *(_QWORD *)(v14 + 16) = v11;
  v15 = static Edge.Set.top.getter(v11);
  v16 = v15;
  v17 = static Edge.Set.bottom.getter(v15);
  v18 = Edge.Set.init(rawValue:)(0);
  v19 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v19 & v16) != v16)
    v18 = Edge.Set.init(rawValue:)(v18 | v16);
  v20 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    v18 = Edge.Set.init(rawValue:)(v18 | v17);
  v21 = EdgeInsets.init(_:length:)(v18, 12.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = static VerticalAlignment.top.getter(v28);
  v30 = &v9[v7[32]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100EB7290);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = &v9[v7[33]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100EB72B8);
  v31[8] = 0;
  v32 = &v9[v7[34]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100EB72E0);
  v33 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v9[v7[35]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100EB7310);
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  v34[40] = 0;
  v35 = &v9[v7[36]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100EB7338);
  *((_QWORD *)v35 + 1) = 0;
  *((_QWORD *)v35 + 2) = 0;
  *((_QWORD *)v35 + 3) = 0;
  v35[32] = 0;
  *(_QWORD *)v9 = sub_1000779D8;
  *((_QWORD *)v9 + 1) = v10;
  v9[16] = 2;
  sub_100065228((uint64_t)v6, (uint64_t)&v9[v7[24]], &qword_1011AF350);
  v36 = (double *)&v9[v7[25]];
  *v36 = v21;
  *((_QWORD *)v36 + 1) = v23;
  *((_QWORD *)v36 + 2) = v25;
  *((_QWORD *)v36 + 3) = v27;
  *(_QWORD *)&v9[v7[26]] = v42;
  *(_QWORD *)&v9[v7[27]] = v29;
  v37 = (double (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v9[v7[28]];
  *v37 = sub_100385F3C;
  v37[1] = 0;
  v38 = &v9[v7[29]];
  *(_QWORD *)v38 = UIScreen.Dimensions.size.getter;
  *((_QWORD *)v38 + 1) = v12;
  v39 = (uint64_t (**)@<X0>(uint64_t *@<X1>, uint64_t@<X8>))&v9[v7[30]];
  *v39 = sub_100386AB4;
  v39[1] = (uint64_t (*)@<X0>(uint64_t *@<X1>, uint64_t@<X8>))v13;
  v40 = &v9[v7[31]];
  *(_QWORD *)v40 = UIScreen.Dimensions.size.getter;
  *((_QWORD *)v40 + 1) = v14;
  return sub_100065228((uint64_t)v9, v43, &qword_1011AF348);
}

double sub_100385F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = type metadata accessor for GridItem.Size(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (_OWORD *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(double *)(a5 + 8) + -88.0;
  v11 = sub_100007E8C(&qword_10119FA70);
  v12 = type metadata accessor for GridItem(0);
  *(_OWORD *)(swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7)+ 16) = xmmword_100EA7AA0;
  *v9 = xmmword_100EA9740;
  (*(void (**)(_OWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for GridItem.Size.flexible(_:), v6);
  GridItem.init(_:spacing:alignment:)(v9, 0, 1, 0, 0, 1);
  return v10;
}

uint64_t sub_100386068(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9D9F0, 1);
}

uint64_t sub_100386078@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;

  v102 = a1;
  v107 = sub_100007E8C(&qword_1011AF360);
  __chkstk_darwin(v107);
  v99 = (uint64_t)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for MusicMovie(0);
  v109 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v95 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v108 = (char *)&v89 - v8;
  v9 = sub_100007E8C(&qword_1011AF368);
  __chkstk_darwin(v9);
  v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011AF370);
  __chkstk_darwin(v104);
  v105 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011AF378);
  __chkstk_darwin(v13);
  v106 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v15);
  v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100007E8C(&qword_1011AF380);
  __chkstk_darwin(v103);
  v94 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for TVEpisode(0);
  v97 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v96 = (char *)&v89 - v22;
  v23 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v23);
  v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v89 - v27;
  v101 = a2;
  sub_10004A160(a2, (uint64_t)&v89 - v27, (uint64_t *)&unk_1011A20D0);
  v29 = type metadata accessor for GenericMusicItem(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
    goto LABEL_7;
  v89 = v9;
  v90 = v13;
  v91 = v11;
  v92 = a3;
  sub_10004A160((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1011A20D0);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v25, v29);
  if (v31 != enum case for GenericMusicItem.musicMovie(_:))
  {
    if (v31 == enum case for GenericMusicItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v25, v29);
      v61 = v96;
      v60 = v97;
      v62 = v93;
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v25, v93);
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v20, v61, v62);
      v63 = v100;
      sub_10087D344(v101, v17);
      v64 = sub_100007E8C(&qword_1011AF3A8);
      swift_allocObject(v64, *(unsigned int *)(v64 + 48), *(unsigned __int16 *)(v64 + 52));
      v65 = sub_100387450((uint64_t)v63, (unint64_t)v20, (uint64_t)v17);

      v66 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      v67 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v68 = EnvironmentObject.init()(v66, v67);
      v70 = v69;
      v71 = type metadata accessor for NoticePresenter(0);
      v72 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      v73 = EnvironmentObject.init()(v71, v72);
      v75 = v74;
      v76 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
      v77 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
      v78 = EnvironmentObject.init()(v76, v77);
      v79 = v94;
      sub_1006DA70C((uint64_t)v65, 0, v68, v70, v73, v75, v78, v80, v94);
      v81 = v105;
      sub_10004A160(v79, v105, &qword_1011AF380);
      swift_storeEnumTagMultiPayload(v81, v104, 0);
      v82 = sub_100049F28(&qword_1011AF390, &qword_1011AF380, (uint64_t)&unk_100EAA890);
      v83 = sub_100049F28(&qword_1011AF398, &qword_1011AF360, (uint64_t)&unk_100EAA890);
      v84 = (uint64_t)v106;
      _ConditionalContent<>.init(storage:)(v81, v103, v107, v82, v83);
      v85 = (uint64_t)v91;
      sub_10004A160(v84, (uint64_t)v91, &qword_1011AF378);
      swift_storeEnumTagMultiPayload(v85, v89, 0);
      v86 = sub_100386B2C();
      _ConditionalContent<>.init(storage:)(v85, v90, &type metadata for EmptyView, v86, &protocol witness table for EmptyView);
      sub_10004FF60(v84, &qword_1011AF378);
      sub_10004FF60(v79, &qword_1011AF380);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v62);
      return sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A20D0);
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
    v11 = v91;
    v9 = v89;
    v13 = v90;
LABEL_7:
    swift_storeEnumTagMultiPayload(v11, v9, 1);
    v87 = sub_100386B2C();
    _ConditionalContent<>.init(storage:)(v11, v13, &type metadata for EmptyView, v87, &protocol witness table for EmptyView);
    return sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A20D0);
  }
  (*(void (**)(char *, uint64_t))(v30 + 96))(v25, v29);
  v33 = v108;
  v32 = v109;
  v34 = v98;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v108, v25, v98);
  v35 = v95;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v95, v33, v34);
  v36 = v100;
  sub_10087D344(v101, v17);
  v37 = sub_100007E8C(&qword_1011AF3A0);
  swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  v38 = sub_100386BD0((uint64_t)v36, v35, (uint64_t)v17);

  v39 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v40 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v41 = EnvironmentObject.init()(v39, v40);
  v43 = v42;
  v44 = type metadata accessor for NoticePresenter(0);
  v45 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v46 = EnvironmentObject.init()(v44, v45);
  v48 = v47;
  v49 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v50 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v51 = EnvironmentObject.init()(v49, v50);
  v52 = v99;
  sub_1006DA750((uint64_t)v38, 0, v41, v43, v46, v48, v51, v53, v99);
  v54 = v105;
  sub_10004A160(v52, v105, &qword_1011AF360);
  swift_storeEnumTagMultiPayload(v54, v104, 1);
  v55 = sub_100049F28(&qword_1011AF390, &qword_1011AF380, (uint64_t)&unk_100EAA890);
  v56 = sub_100049F28(&qword_1011AF398, &qword_1011AF360, (uint64_t)&unk_100EAA890);
  v57 = (uint64_t)v106;
  _ConditionalContent<>.init(storage:)(v54, v103, v107, v55, v56);
  v58 = (uint64_t)v91;
  sub_10004A160(v57, (uint64_t)v91, &qword_1011AF378);
  swift_storeEnumTagMultiPayload(v58, v89, 0);
  v59 = sub_100386B2C();
  _ConditionalContent<>.init(storage:)(v58, v90, &type metadata for EmptyView, v59, &protocol witness table for EmptyView);
  sub_10004FF60(v57, &qword_1011AF378);
  sub_10004FF60(v52, &qword_1011AF360);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v34);
  return sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A20D0);
}

_QWORD *sub_100386920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = JSTVShowEpisodeDetail.item.getter();
  if (!v0)
    return _swiftEmptyArrayStorage;
  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v3 + 32) = v1;
  v5 = v3;
  specialized Array._endMutation()(v3);
  return (_QWORD *)v5;
}

uint64_t sub_100386994(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011AF318, type metadata accessor for JSTVShowEpisodeDetail, (uint64_t)&protocol conformance descriptor for JSTVShowEpisodeDetail);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003869D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9D9C8, 1);
}

void sub_1003869E0(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = sub_10081697C(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v10;
}

uint64_t sub_100386A38()
{
  return sub_100049F28(&qword_1011AA358, &qword_1011AA360, (uint64_t)&unk_100ED58E0);
}

uint64_t sub_100386A64()
{
  return sub_100049F28(&qword_1011AF340, &qword_1011AF348, (uint64_t)&unk_100EA8520);
}

uint64_t sub_100386A90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100386AB4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = sub_100007E8C(&qword_1011AF358);
  return sub_100386078(v4, (uint64_t)a1 + *(int *)(v5 + 28), a2);
}

unint64_t sub_100386B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF388;
  if (!qword_1011AF388)
  {
    v1 = sub_100044B54(&qword_1011AF378);
    sub_100049F28(&qword_1011AF390, &qword_1011AF380, (uint64_t)&unk_100EAA890);
    sub_100049F28(&qword_1011AF398, &qword_1011AF360, (uint64_t)&unk_100EAA890);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF388);
  }
  return result;
}

_QWORD *sub_100386BD0(uint64_t a1, char *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  __n128 v47;
  void *v48;
  uint64_t v49;
  Swift::String v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t inited;
  _QWORD *v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void **v61;
  void *v62;
  id v63;
  _QWORD *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  __n128 v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99[64];
  _BYTE v100[24];
  uint64_t v101[4];

  v4 = v3;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  i = type metadata accessor for MusicMovie(0);
  v12 = *(_QWORD *)(i - 8);
  __chkstk_darwin(i);
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v91 = (char *)&v88 - v16;
  v17 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v17);
  v90 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 176)) = 0;
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 184)) = 0;
  v19 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  v20 = &swift_isaMask;
  v97 = a1;
  v98 = a2;
  v95 = i;
  v96 = a3;
  v93 = v12;
  v94 = v10;
  v92 = v14;
  if (!v19)
  {
    v26 = 0;
    v22 = 0;
    goto LABEL_35;
  }
  v21 = v19;
  v22 = (*(uint64_t (**)(void))((swift_isaMask & *v19) + 0x310))();

  v23 = (unint64_t)_swiftEmptyArrayStorage;
  v101[0] = (uint64_t)_swiftEmptyArrayStorage;
  v24 = (unint64_t)&swift_isaMask;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v32 = v22;
    else
      v32 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v22);
    if (v26)
    {
LABEL_4:
      if (v26 < 1)
      {
        __break(1u);
        goto LABEL_55;
      }
      for (i = 0; i != v26; ++i)
      {
        if ((v22 & 0xC000000000000001) != 0)
          v30 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v22);
        else
          v30 = *(id *)(v22 + 8 * i + 32);
        v20 = v30;
        v31 = (*(uint64_t (**)(void))((swift_isaMask & *v30) + 0x78))();
        if ((v31 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
          v27 = *(_QWORD *)(v101[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
          v28 = v27;
          v24 = (unint64_t)&swift_isaMask;
          v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v20);
          specialized ContiguousArray._endMutation()(v29);
        }
      }
      swift_bridgeObjectRelease(v22);
      v22 = v101[0];
      if (v101[0] < 0)
        goto LABEL_32;
      goto LABEL_21;
    }
  }
  else
  {
    v25 = v22 & 0xFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v26)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease(v22);
  v22 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_32;
LABEL_21:
  if ((v22 & 0x4000000000000000) != 0)
  {
LABEL_32:
    v42 = swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_release();
    if (!v26)
      goto LABEL_33;
    goto LABEL_23;
  }
  v26 = *(_QWORD *)(v22 + 16);
  if (v26)
  {
LABEL_23:
    v101[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10035C6F8(0, v26 & ~(v26 >> 63), 0);
    if ((v26 & 0x8000000000000000) == 0)
    {
      v89 = v4;
      v33 = 0;
      v34 = (_QWORD *)v101[0];
      do
      {
        if ((v22 & 0xC000000000000001) != 0)
          v35 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v22);
        else
          v35 = *(id *)(v22 + 8 * v33 + 32);
        v36 = v35;
        (*(void (**)(void))((swift_isaMask & *v35) + 0x90))();
        v38 = v37;
        v39 = String.trim()();

        swift_bridgeObjectRelease(v38);
        v101[0] = (uint64_t)v34;
        v41 = v34[2];
        v40 = v34[3];
        if (v41 >= v40 >> 1)
        {
          sub_10035C6F8(v40 > 1, v41 + 1, 1);
          v34 = (_QWORD *)v101[0];
        }
        ++v33;
        v34[2] = v41 + 1;
        *(Swift::String *)&v34[2 * v41 + 4] = v39;
      }
      while (v26 != v33);
      swift_release();
      v4 = v89;
      a1 = v97;
      a2 = v98;
      goto LABEL_34;
    }
LABEL_55:
    __break(1u);
LABEL_56:
    v20 = sub_100431480((_QWORD *)(v25 > 1), v23, 1, v20);
    goto LABEL_40;
  }
LABEL_33:
  swift_release();
  v34 = _swiftEmptyArrayStorage;
  a2 = v98;
LABEL_34:
  v101[0] = (uint64_t)v34;
  v43 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v44 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v43, v44);
  v22 = v45;
  swift_bridgeObjectRelease(v34);
LABEL_35:
  v46 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  if (!v46)
    goto LABEL_47;
  v48 = v46;
  i = (*(uint64_t (**)(void))((swift_isaMask & *v46) + 0x2B0))();
  a1 = v49;

  v50 = String.trim()();
  swift_bridgeObjectRelease(v50._object);
  v51 = ((unint64_t)v50._object >> 56) & 0xF;
  if (((uint64_t)v50._object & 0x2000000000000000) == 0)
    v51 = v50._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v51)
  {
    v47 = swift_bridgeObjectRelease(a1);
    a1 = v97;
    goto LABEL_47;
  }
  v52 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v52, v99);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = i;
  *(_QWORD *)(inited + 40) = a1;
  *(_QWORD *)(inited + 48) = v26;
  *(_QWORD *)(inited + 56) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v24 = v20[2];
  v25 = v20[3];
  v23 = v24 + 1;
  if (v24 >= v25 >> 1)
    goto LABEL_56;
LABEL_40:
  v20[2] = v23;
  v54 = &v20[2 * v24];
  v54[4] = i;
  v54[5] = a1;
  if (v22)
  {
    v55 = v20[3];
    swift_bridgeObjectRetain();
    a1 = v97;
    if (v23 >= v55 >> 1)
      v20 = sub_100431480((_QWORD *)(v55 > 1), v24 + 2, 1, v20);
    v20[2] = v24 + 2;
    v56 = &v20[2 * v23];
    v56[4] = v26;
    v56[5] = v22;
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    a1 = v97;
  }
  swift_release();
  v101[0] = (uint64_t)v20;
  v57 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v58 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v57, v58);
  v22 = v59;
  v47 = swift_bridgeObjectRelease(v20);
  a2 = v98;
LABEL_47:
  v4[2] = MusicMovie.title.getter(v47);
  v4[3] = v60;
  v4[4] = v26;
  v4[5] = v22;
  v61 = (void **)(a1 + OBJC_IVAR____TtC11MusicJSCore21JSTVShowEpisodeDetail_containerDetailLink);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore21JSTVShowEpisodeDetail_containerDetailLink, v101, 0, 0);
  v62 = *v61;
  v4[7] = 0;
  v4[8] = 0;
  v4[6] = v62;
  v63 = v62;
  v64 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  if (v64)
  {
    v65 = v64;
    v66 = (*(uint64_t (**)(void))((swift_isaMask & *v64) + 0x2F8))();
    v68 = v67;

  }
  else
  {
    v66 = 0;
    v68 = 0;
  }
  v70 = v95;
  v69 = v96;
  v4[9] = v66;
  v4[10] = v68;
  v71 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  if (v71)
  {
    v72 = v71;
    v73 = (*(uint64_t (**)(void))((swift_isaMask & *v71) + 0x310))();

  }
  else
  {
    v73 = 0;
  }
  v4[11] = v73;
  sub_10004A160(v69, (uint64_t)v4 + qword_10124C7D8, (uint64_t *)&unk_1011A3E10);
  v74 = (char *)v4 + qword_10124C7E0;
  v75 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 5, 10, v75);
  v77 = (uint64_t)v90;
  MusicMovie.immersiveURL.getter(v76);
  sub_100065228(v77, (uint64_t)v4 + qword_10124C7E8, &qword_10119E460);
  v78 = v93;
  v79 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
  v80 = v91;
  v79(v91, (uint64_t)a2, v70);
  v81 = swift_beginAccess((char *)v4 + *(_QWORD *)(*v4 + 168), v100, 33, 0);
  v82 = v92;
  ((void (*)(char *, char *, uint64_t, __n128))v79)(v92, v80, v70, v81);
  Published.init(initialValue:)(v82, v70);
  v83 = *(void (**)(char *, uint64_t))(v78 + 8);
  v83(v80, v70);
  swift_endAccess(v100);
  v84 = type metadata accessor for TaskPriority(0);
  v85 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v94, 1, 1, v84);
  v86 = (_QWORD *)swift_allocObject(&unk_1010C2258, 40, 7);
  v86[2] = 0;
  v86[3] = 0;
  v86[4] = v4;
  swift_retain();
  sub_100166D14(v85, (uint64_t)&unk_1011AF3C8, (uint64_t)v86);
  swift_release();
  sub_10004FF60(v69, (uint64_t *)&unk_1011A3E10);
  v83(a2, v70);
  return v4;
}

_QWORD *sub_100387450(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  unint64_t v50;
  Swift::String v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t inited;
  _QWORD *v55;
  _QWORD *v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  void **v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  void *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, unint64_t, unint64_t);
  char *v82;
  unint64_t v83;
  __n128 v84;
  char *v85;
  void (*v86)(char *, unint64_t);
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  char v102[64];
  _BYTE v103[24];
  unint64_t v104[4];

  v5 = v3;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TVEpisode(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v94 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v93 = (char *)&v91 - v16;
  v17 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v17);
  v92 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 176)) = 0;
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 184)) = 0;
  v19 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  v20 = (unint64_t)&swift_isaMask;
  v99 = a1;
  v100 = a2;
  v97 = v12;
  v98 = a3;
  v95 = v13;
  v96 = v11;
  if (!v19)
  {
    v26 = 0;
    v22 = 0;
    v24 = &swift_isaMask;
    goto LABEL_35;
  }
  v21 = v19;
  v22 = (*(uint64_t (**)(void))((swift_isaMask & *v19) + 0x310))();

  v23 = _swiftEmptyArrayStorage;
  v104[0] = (unint64_t)_swiftEmptyArrayStorage;
  v24 = &swift_isaMask;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v31 = v22;
    else
      v31 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v22);
    if (v26)
    {
LABEL_4:
      if (v26 < 1)
      {
        __break(1u);
        goto LABEL_55;
      }
      v20 = 0;
      v4 = v22 & 0xC000000000000001;
      do
      {
        if (v4)
          v28 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v22);
        else
          v28 = *(id *)(v22 + 8 * v20 + 32);
        v29 = v28;
        v30 = (*(uint64_t (**)(void))((swift_isaMask & *v28) + 0x78))();
        if ((v30 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
          a2 = *(_QWORD *)(v104[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(a2);
          v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(a2, v29);
          specialized ContiguousArray._endMutation()(v27);
        }
        ++v20;
      }
      while (v26 != v20);
      swift_bridgeObjectRelease(v22);
      v12 = v104[0];
      if ((v104[0] & 0x8000000000000000) != 0)
        goto LABEL_32;
      goto LABEL_21;
    }
  }
  else
  {
    v25 = v22 & 0xFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v26)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease(v22);
  v12 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_32;
LABEL_21:
  if ((v12 & 0x4000000000000000) != 0)
  {
LABEL_32:
    v44 = swift_bridgeObjectRetain();
    v22 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_release();
    if (!v22)
      goto LABEL_33;
    goto LABEL_23;
  }
  v22 = *(_QWORD *)(v12 + 16);
  if (v22)
  {
LABEL_23:
    v104[0] = (unint64_t)_swiftEmptyArrayStorage;
    sub_10035C6F8(0, v22 & ~(v22 >> 63), 0);
    if ((v22 & 0x8000000000000000) == 0)
    {
      v91 = v5;
      v32 = 0;
      v33 = (_QWORD *)v104[0];
      v101 = v12 & 0xC000000000000001;
      v34 = v12;
      v35 = v22;
      do
      {
        if (v101)
          v36 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v12);
        else
          v36 = *(id *)(v12 + 8 * v32 + 32);
        v37 = v36;
        v38 = v24;
        (*(void (**)(void))((*v24 & *v36) + 0x90))();
        v40 = v39;
        v41 = String.trim()();

        swift_bridgeObjectRelease(v40);
        v104[0] = (unint64_t)v33;
        v43 = v33[2];
        v42 = v33[3];
        if (v43 >= v42 >> 1)
        {
          sub_10035C6F8(v42 > 1, v43 + 1, 1);
          v33 = (_QWORD *)v104[0];
        }
        ++v32;
        v33[2] = v43 + 1;
        *(Swift::String *)&v33[2 * v43 + 4] = v41;
        v24 = v38;
        v12 = v34;
      }
      while (v35 != v32);
      swift_release();
      v5 = v91;
      goto LABEL_34;
    }
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
LABEL_33:
  swift_release();
  v33 = _swiftEmptyArrayStorage;
LABEL_34:
  a1 = v99;
  a2 = v100;
  v104[0] = (unint64_t)v33;
  v45 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v46 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v45, v46);
  v22 = v47;
  swift_bridgeObjectRelease(v33);
LABEL_35:
  v48 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  if (!v48)
    goto LABEL_47;
  v49 = v48;
  v23 = (_QWORD *)(*(uint64_t (**)(void))((*v24 & *v48) + 0x2B0))();
  v4 = v50;

  v51 = String.trim()();
  swift_bridgeObjectRelease(v51._object);
  v52 = ((unint64_t)v51._object >> 56) & 0xF;
  if (((uint64_t)v51._object & 0x2000000000000000) == 0)
    v52 = v51._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v52)
  {
    v53 = sub_100007E8C((uint64_t *)&unk_1011A2410);
    inited = swift_initStackObject(v53, v102);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = v23;
    *(_QWORD *)(inited + 40) = v4;
    *(_QWORD *)(inited + 48) = v26;
    *(_QWORD *)(inited + 56) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = (unint64_t)sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    a2 = *(_QWORD *)(v20 + 16);
    v25 = *(_QWORD *)(v20 + 24);
    v12 = a2 + 1;
    if (a2 < v25 >> 1)
    {
LABEL_40:
      *(_QWORD *)(v20 + 16) = v12;
      v55 = (_QWORD *)(v20 + 16 * a2);
      v55[4] = v23;
      v55[5] = v4;
      if (v22)
      {
        v56 = v24;
        v57 = *(_QWORD *)(v20 + 24);
        swift_bridgeObjectRetain();
        if (v12 >= v57 >> 1)
          v20 = (unint64_t)sub_100431480((_QWORD *)(v57 > 1), a2 + 2, 1, (_QWORD *)v20);
        v24 = v56;
        *(_QWORD *)(v20 + 16) = a2 + 2;
        v58 = (_QWORD *)(v20 + 16 * v12);
        v58[4] = v26;
        v58[5] = v22;
        swift_bridgeObjectRelease(v22);
      }
      swift_release();
      v104[0] = v20;
      v59 = sub_100007E8C((uint64_t *)&unk_1011AD420);
      v60 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
      v26 = BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v59, v60);
      v22 = v61;
      v62 = (_QWORD *)v20;
      goto LABEL_46;
    }
LABEL_56:
    v20 = (unint64_t)sub_100431480((_QWORD *)(v25 > 1), v12, 1, (_QWORD *)v20);
    goto LABEL_40;
  }
  v62 = (_QWORD *)v4;
LABEL_46:
  swift_bridgeObjectRelease(v62);
  a1 = v99;
  a2 = v100;
LABEL_47:
  v5[2] = TVEpisode.title.getter(v48);
  v5[3] = v63;
  v5[4] = v26;
  v5[5] = v22;
  v64 = (void **)(a1 + OBJC_IVAR____TtC11MusicJSCore21JSTVShowEpisodeDetail_containerDetailLink);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore21JSTVShowEpisodeDetail_containerDetailLink, v104, 0, 0);
  v65 = *v64;
  v5[6] = *v64;
  v5[7] = TVEpisode.showName.getter(v65);
  v5[8] = v66;
  v67 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  if (v67)
  {
    v68 = v67;
    v69 = (*(uint64_t (**)(void))((*v24 & *v67) + 0x2F8))();
    v71 = v70;

  }
  else
  {
    v69 = 0;
    v71 = 0;
  }
  v72 = v98;
  v5[9] = v69;
  v5[10] = v71;
  v73 = (_QWORD *)JSTVShowEpisodeDetail.item.getter();
  if (v73)
  {
    v74 = v73;
    v75 = (*(uint64_t (**)(void))((*v24 & *v73) + 0x310))();

  }
  else
  {
    v75 = 0;
  }
  v5[11] = v75;
  sub_10004A160(v72, (uint64_t)v5 + qword_10124C7D8, (uint64_t *)&unk_1011A3E10);
  v76 = (char *)v5 + qword_10124C7E0;
  v77 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v78 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 5, 10, v77);
  v79 = (uint64_t)v92;
  TVEpisode.immersiveURL.getter(v78);
  sub_100065228(v79, (uint64_t)v5 + qword_10124C7E8, &qword_10119E460);
  v80 = v95;
  v81 = *(void (**)(char *, unint64_t, unint64_t))(v95 + 16);
  v82 = v93;
  v83 = v97;
  v81(v93, a2, v97);
  v84 = swift_beginAccess((char *)v5 + *(_QWORD *)(*v5 + 168), v103, 33, 0);
  v85 = v94;
  ((void (*)(char *, char *, unint64_t, __n128))v81)(v94, v82, v83, v84);
  Published.init(initialValue:)(v85, v83);
  v86 = *(void (**)(char *, unint64_t))(v80 + 8);
  v86(v82, v83);
  swift_endAccess(v103);
  v87 = type metadata accessor for TaskPriority(0);
  v88 = (uint64_t)v96;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v96, 1, 1, v87);
  v89 = (_QWORD *)swift_allocObject(&unk_1010C2230, 40, 7);
  v89[2] = 0;
  v89[3] = 0;
  v89[4] = v5;
  swift_retain();
  sub_100166D14(v88, (uint64_t)&unk_1011AF3B8, (uint64_t)v89);
  swift_release();
  sub_10004FF60(v72, (uint64_t *)&unk_1011A3E10);
  v86((char *)a2, v83);
  return v5;
}

uint64_t sub_100387CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011AF3B4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  v3[2] = v2;
  return swift_task_switch(sub_100385B40, 0, 0);
}

uint64_t sub_100387D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011AF3C4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  v3[2] = v2;
  return swift_task_switch(sub_100385A8C, 0, 0);
}

uint64_t sub_100387D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];

  v37 = a1;
  v1 = type metadata accessor for AccessibilityTraits(0);
  v35 = *(_QWORD *)(v1 - 8);
  v36 = v1;
  __chkstk_darwin(v1);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011AF650);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011AF658);
  v31 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011AF660);
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1008237B8((uint64_t)v9);
  v20 = DynamicTypeSize.isAccessibilitySize.getter(v19);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v20 & 1) != 0)
    v22 = static VerticalAlignment.firstTextLineCenter.getter(v21);
  else
    v22 = static VerticalAlignment.center.getter(v21);
  *(_QWORD *)v12 = v22;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v23 = sub_100007E8C(&qword_1011AF668);
  v24 = sub_10038805C((uint64_t)&v12[*(int *)(v23 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v24);
  v25 = sub_100049F28(&qword_1011AF670, &qword_1011AF650, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v5, v10, v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
  v26 = sub_10004FF60((uint64_t)v12, &qword_1011AF650);
  v27 = v34;
  static AccessibilityTraits.isButton.getter(v26);
  v38[0] = v10;
  v38[1] = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v38, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityAddTraits(_:)(v27, v13, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v36);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v13);
  return sub_100065228((uint64_t)v18, v37, &qword_1011AF660);
}

uint64_t sub_10038805C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  double v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD v101[3];
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unsigned __int8 v105;
  uint64_t v106;
  uint64_t v107;

  v98 = a1;
  v1 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100007E8C(&qword_1011AF678);
  v89 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100007E8C(&qword_1011AF680);
  v90 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C(&qword_1011AF688);
  v93 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v91 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AF690);
  __chkstk_darwin(v9);
  v96 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011AF698);
  __chkstk_darwin(v97);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011AF6A0);
  __chkstk_darwin(v13);
  v100 = (uint64_t)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v99 = (uint64_t)&v88 - v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v3, 3, 10, v17);
  if (qword_10119BF50 != -1)
    swift_once(&qword_10119BF50, sub_10038AE0C);
  ArtworkImage.Placeholder.view(availableSize:)((uint64_t)v5, *(double *)&xmmword_1011AF3D0, *((double *)&xmmword_1011AF3D0 + 1));
  sub_10005B748((uint64_t)v3, type metadata accessor for ArtworkImage.Placeholder);
  v18 = Border.artwork.unsafeMutableAddressor();
  v19 = *v18;
  v20 = *((double *)v18 + 1);
  v21 = *((_BYTE *)v18 + 16);
  swift_retain();
  v22 = Corner.medium.unsafeMutableAddressor();
  v23 = *v22;
  v24 = v22[1];
  v25 = *((_BYTE *)v22 + 16);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v22, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.view(availableSize:)>>, 1);
  v27 = v23;
  v28 = v92;
  View.border(_:corner:)(v19, v21, v27, v24, v25, v92, OpaqueTypeConformance2, v20);
  v29 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v89 + 8))(v5, v28, v29);
  v30 = *v22;
  v31 = v22[1];
  LOBYTE(v19) = *((_BYTE *)v22 + 16);
  v102 = v28;
  v103 = OpaqueTypeConformance2;
  v32 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v33 = v91;
  v34 = v30;
  v35 = v94;
  View.corner(_:)(v34, v31, v19, v94, v32);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v7, v35);
  v102 = v35;
  v103 = v32;
  v36 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v37 = (uint64_t)v96;
  v38 = v95;
  View.placeholderStyle(_:)((uint64_t)sub_1003887B4, 0, v95, v36);
  v39 = (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v33, v38);
  v40 = xmmword_1011AF3D0;
  v41 = static Alignment.center.getter(v39);
  _FrameLayout.init(width:height:alignment:)(v101, v40, 0, *((_QWORD *)&v40 + 1), 0, v41, v42);
  sub_10004A160(v37, (uint64_t)v12, &qword_1011AF690);
  v43 = v97;
  v44 = &v12[*(int *)(v97 + 36)];
  v45 = v101[1];
  *(_OWORD *)v44 = v101[0];
  *((_OWORD *)v44 + 1) = v45;
  *((_OWORD *)v44 + 2) = v101[2];
  sub_10004FF60(v37, &qword_1011AF690);
  v46 = sub_10005610C(&qword_1011AF6A8, &qword_1011AF698, (void (*)(void))sub_10038CD90);
  v47 = v100;
  View.accessibilityHidden(_:)(1, v43, v46);
  sub_10004FF60((uint64_t)v12, &qword_1011AF698);
  v48 = sub_100065228(v47, v99, &qword_1011AF6A0);
  if (qword_10119BF60 != -1)
    v48 = swift_once(&qword_10119BF60, sub_10038AE34);
  v49 = qword_1011AF3E8;
  v50 = static Alignment.center.getter(v48);
  _FrameLayout.init(width:height:alignment:)(&v102, v49, 0, 0, 1, v50, v51);
  v52 = v102;
  LODWORD(v97) = v103;
  v96 = v104;
  LODWORD(v95) = v105;
  v94 = v106;
  v93 = v107;
  v53 = LocalizedStringKey.init(stringLiteral:)(0x79616C502077654ELL, 0xEC0000007473696CLL);
  v54 = Text.init(_:tableName:bundle:comment:)(v53);
  v56 = v55;
  v58 = v57;
  v60 = v59 & 1;
  v61 = static Font.body.getter(v54);
  v62 = Text.font(_:)(v61, v54, v56, v60, v58);
  v64 = v63;
  v66 = v65;
  v68 = v67;
  swift_release();
  v69 = v66 & 1;
  sub_100055BAC(v54, v56, v60);
  v70 = swift_bridgeObjectRelease(v58);
  v71 = static Color.primary.getter(v70);
  v72 = Text.foregroundColor(_:)(v71, v62, v64, v69, v68);
  v74 = v73;
  v76 = v75;
  v78 = v77;
  swift_release();
  v76 &= 1u;
  sub_100055BAC(v62, v64, v69);
  swift_bridgeObjectRelease(v68);
  v80 = v99;
  v79 = v100;
  sub_10004A160(v99, v100, &qword_1011AF6A0);
  v81 = v98;
  sub_10004A160(v79, v98, &qword_1011AF6A0);
  v82 = (int *)sub_100007E8C(&qword_1011AF6B8);
  v83 = v81 + v82[12];
  *(_QWORD *)v83 = 0;
  *(_BYTE *)(v83 + 8) = 1;
  *(_QWORD *)(v83 + 16) = v52;
  *(_BYTE *)(v83 + 24) = v97;
  *(_QWORD *)(v83 + 32) = v96;
  *(_BYTE *)(v83 + 40) = v95;
  v84 = v93;
  *(_QWORD *)(v83 + 48) = v94;
  *(_QWORD *)(v83 + 56) = v84;
  v85 = v81 + v82[16];
  *(_QWORD *)v85 = v72;
  *(_QWORD *)(v85 + 8) = v74;
  *(_BYTE *)(v85 + 16) = v76;
  *(_QWORD *)(v85 + 24) = v78;
  v86 = v81 + v82[20];
  *(_QWORD *)v86 = 0;
  *(_BYTE *)(v86 + 8) = 1;
  sub_100055BBC(v72, v74, v76);
  swift_bridgeObjectRetain();
  sub_10004FF60(v80, &qword_1011AF6A0);
  sub_100055BAC(v72, v74, v76);
  swift_bridgeObjectRelease(v78);
  return sub_10004FF60(v79, &qword_1011AF6A0);
}

uint64_t sub_1003887BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];

  v2 = v1;
  v31 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for AccessibilityChildBehavior(0);
  v6 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AF530);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AF538);
  v28 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011AF540);
  __chkstk_darwin(v27);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v18 = sub_100007E8C(&qword_1011AF548);
  v19 = sub_100388A44(v2, (uint64_t)&v11[*(int *)(v18 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v19);
  v20 = sub_100049F28(&qword_1011AF550, &qword_1011AF530, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v8, v9, v20);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
  v21 = sub_10004FF60((uint64_t)v11, &qword_1011AF530);
  static AccessibilityTraits.isButton.getter(v21);
  v32[0] = v9;
  v32[1] = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityAddTraits(_:)(v5, v12, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
  v23 = sub_10038A70C();
  ModifiedContent<>.accessibilityInputLabels(_:)(v23, v27);
  swift_bridgeObjectRelease(v23);
  return sub_10004FF60((uint64_t)v16, &qword_1011AF540);
}

uint64_t sub_100388A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  _QWORD v73[2];
  uint64_t v74;
  uint64_t v75;

  v71 = a2;
  v66 = sub_100007E8C(&qword_1011AF558);
  __chkstk_darwin(v66);
  v69 = (uint64_t)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011AF560);
  __chkstk_darwin(v67);
  v68 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011AF568);
  __chkstk_darwin(v5);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v64 - v9;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AF570);
  __chkstk_darwin(v15);
  v70 = (uint64_t)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v64 - v21;
  v72 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v23 = _s12PlaylistCellVMa(0);
  v24 = sub_1008237B8((uint64_t)v14);
  v25 = DynamicTypeSize.isAccessibilitySize.getter(v24);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v25 & 1) != 0)
    v27 = static VerticalAlignment.top.getter(v26);
  else
    v27 = static VerticalAlignment.center.getter(v26);
  *(_QWORD *)v19 = v27;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v28 = sub_100007E8C(&qword_1011AF578);
  sub_10038908C(a1, v72, (uint64_t)&v19[*(int *)(v28 + 44)]);
  sub_100065228((uint64_t)v19, (uint64_t)v22, &qword_1011AF570);
  if (*(_BYTE *)(a1 + *(int *)(v23 + 28)) == 1)
  {
    v29 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v30 = Color.init(_:)(v29);
    v64 = v30;
    KeyPath = swift_getKeyPath(&unk_100EB7470);
    strcpy((char *)v73, "person.2.fill");
    HIWORD(v73[1]) = -4864;
    v74 = KeyPath;
    v75 = v30;
    v31 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000016, 0x8000000100E37AA0);
    v32 = Text.init(_:tableName:bundle:comment:)(v31);
    v34 = v33;
    v36 = v35;
    v37 = v7;
    v38 = v22;
    v39 = v10;
    v41 = v40 & 1;
    v42 = sub_100007E8C(&qword_1011AF590);
    v43 = sub_10038C9B8();
    v44 = (uint64_t)v68;
    View.accessibilityLabel(_:)(v32, v34, v41, v36, v42, v43);
    v45 = v41;
    v10 = v39;
    v22 = v38;
    v7 = v37;
    sub_100055BAC(v32, v34, v45);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v36);
    v46 = v69;
    sub_10004A160(v44, v69, &qword_1011AF560);
    swift_storeEnumTagMultiPayload(v46, v66, 0);
    v47 = sub_10038CA80();
    _ConditionalContent<>.init(storage:)(v46, v67, v67, v47, v47);
    v48 = v44;
  }
  else
  {
    if (*(_BYTE *)(a1 + *(int *)(v23 + 36)) != 1)
    {
      v58 = sub_100007E8C(&qword_1011AF580);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v10, 1, 1, v58);
      goto LABEL_10;
    }
    v49 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v50 = Color.init(_:)(v49);
    v51 = swift_getKeyPath(&unk_100EB7470);
    v73[0] = 0x2E6E6F7276656863;
    v73[1] = 0xEF64726177726F66;
    v74 = v51;
    v75 = v50;
    v52 = sub_100007E8C(&qword_1011AF590);
    v53 = sub_10038C9B8();
    v54 = (uint64_t)v68;
    View.accessibilityHidden(_:)(1, v52, v53);
    swift_release();
    swift_release();
    v55 = v69;
    sub_10004A160(v54, v69, &qword_1011AF560);
    swift_storeEnumTagMultiPayload(v55, v66, 1);
    v56 = sub_10038CA80();
    _ConditionalContent<>.init(storage:)(v55, v67, v67, v56, v56);
    v48 = v54;
  }
  sub_10004FF60(v48, &qword_1011AF560);
  v57 = sub_100007E8C(&qword_1011AF580);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v7, 0, 1, v57);
  sub_100065228((uint64_t)v7, (uint64_t)v10, &qword_1011AF568);
LABEL_10:
  v59 = v70;
  sub_10004A160((uint64_t)v22, v70, &qword_1011AF570);
  sub_10004A160((uint64_t)v10, (uint64_t)v7, &qword_1011AF568);
  v60 = v71;
  sub_10004A160(v59, v71, &qword_1011AF570);
  v61 = sub_100007E8C(&qword_1011AF588);
  v62 = v60 + *(int *)(v61 + 48);
  *(_QWORD *)v62 = 0;
  *(_BYTE *)(v62 + 8) = 1;
  sub_10004A160((uint64_t)v7, v60 + *(int *)(v61 + 64), &qword_1011AF568);

  sub_10004FF60((uint64_t)v10, &qword_1011AF568);
  sub_10004FF60((uint64_t)v22, &qword_1011AF570);
  sub_10004FF60((uint64_t)v7, &qword_1011AF568);
  return sub_10004FF60(v59, &qword_1011AF570);
}

uint64_t sub_10038908C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;

  v39 = a3;
  v5 = sub_100007E8C(&qword_1011AF5B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = sub_100007E8C(&qword_1011AF5B8);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  *(_QWORD *)v16 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 0;
  v18 = sub_100007E8C(&qword_1011AF5C0);
  v19 = sub_100389320(a1, a2, (uint64_t)&v16[*(int *)(v18 + 44)]);
  if (qword_10119BF60 != -1)
    v19 = swift_once(&qword_10119BF60, sub_10038AE34);
  v20 = qword_1011AF3E8;
  v21 = static Alignment.center.getter(v19);
  v23 = _FrameLayout.init(width:height:alignment:)(&v40, v20, 0, 0, 1, v21, v22);
  v24 = v40;
  v25 = v41;
  v26 = v42;
  v38 = v43;
  v36 = v45;
  v37 = v44;
  v27 = static HorizontalAlignment.leading.getter(v23);
  v28 = sub_100389F84();
  *(_QWORD *)v10 = v27;
  *((_QWORD *)v10 + 1) = v28;
  v10[16] = v29 & 1;
  v30 = sub_100007E8C(&qword_1011AF5C8);
  sub_10038A070(a1, a2, (uint64_t)&v10[*(int *)(v30 + 44)]);
  sub_10004A160((uint64_t)v16, (uint64_t)v13, &qword_1011AF5B8);
  sub_10004A160((uint64_t)v10, (uint64_t)v7, &qword_1011AF5B0);
  v31 = v39;
  sub_10004A160((uint64_t)v13, v39, &qword_1011AF5B8);
  v32 = sub_100007E8C(&qword_1011AF5D0);
  v33 = v31 + *(int *)(v32 + 48);
  *(_QWORD *)v33 = 0;
  *(_BYTE *)(v33 + 8) = 1;
  *(_QWORD *)(v33 + 16) = v24;
  *(_BYTE *)(v33 + 24) = v25;
  *(_QWORD *)(v33 + 32) = v26;
  *(_BYTE *)(v33 + 40) = v38;
  v34 = v36;
  *(_QWORD *)(v33 + 48) = v37;
  *(_QWORD *)(v33 + 56) = v34;
  sub_10004A160((uint64_t)v7, v31 + *(int *)(v32 + 64), &qword_1011AF5B0);
  sub_10004FF60((uint64_t)v10, &qword_1011AF5B0);
  sub_10004FF60((uint64_t)v16, &qword_1011AF5B8);
  sub_10004FF60((uint64_t)v7, &qword_1011AF5B0);
  return sub_10004FF60((uint64_t)v13, &qword_1011AF5B8);
}

uint64_t sub_100389320@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t OpaqueTypeConformance2;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  int v111;
  uint64_t KeyPath;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145[8];
  _OWORD v146[7];

  v141 = a2;
  v144 = a3;
  v125 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v127 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (uint64_t)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v130 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v129 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v136 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v131 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_100007E8C(&qword_1011AF5E8);
  __chkstk_darwin(v134);
  v132 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AF5F0);
  __chkstk_darwin(v9);
  v140 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100007E8C(&qword_1011AF5F8);
  __chkstk_darwin(v138);
  v143 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v139 = (uint64_t)&v110 - v13;
  __chkstk_darwin(v14);
  v142 = (uint64_t)&v110 - v15;
  v16 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  __chkstk_darwin(v16);
  v116 = (uint64_t *)((char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for Image.Scale(0);
  v119 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v21);
  v23 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011AF600);
  __chkstk_darwin(v24);
  v26 = (char *)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011AF608);
  __chkstk_darwin(v27);
  v121 = (char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C(&qword_1011AF610);
  __chkstk_darwin(v118);
  v135 = (uint64_t)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v117 = (uint64_t)&v110 - v31;
  __chkstk_darwin(v32);
  v120 = (uint64_t)&v110 - v33;
  v114 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
  v115 = _s12PlaylistCellVMa(0);
  v122 = a1;
  v34 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(v146, v34);
  v35 = *(double *)v146;
  v36 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v23, 1, 1, v36);
  v113 = static Font.system(size:weight:design:)(0, 1, v23, v35);
  sub_10004FF60((uint64_t)v23, &qword_1011C4F30);
  KeyPath = swift_getKeyPath(&unk_100EB74D0);
  v111 = static Edge.Set.leading.getter(KeyPath);
  ScaledMetric.wrappedValue.getter(v146, v34);
  v37 = *(double *)v146;
  if (qword_10119BF58 != -1)
    swift_once(&qword_10119BF58, sub_10038AE24);
  v38 = EdgeInsets.init(_all:)(-(v37 + *(double *)&qword_1011AF3E0));
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v47 = static Color.accentColor.getter(v45, v46);
  v48 = swift_getKeyPath(&unk_100EB7470);
  v49 = v119;
  (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v20, enum case for Image.Scale.medium(_:), v18);
  v50 = v18;
  v51 = swift_getKeyPath(&unk_100EB7500);
  v52 = *(int *)(v16 + 28);
  v53 = v116;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))((char *)v116 + v52, v20, v50);
  *v53 = v51;
  v110 = v24;
  sub_10004A160((uint64_t)v53, (uint64_t)&v26[*(int *)(v24 + 36)], (uint64_t *)&unk_1011C94A0);
  v54 = KeyPath;
  *(_QWORD *)v26 = v114;
  *((_QWORD *)v26 + 1) = v54;
  *((_QWORD *)v26 + 2) = v113;
  v26[24] = v111;
  *((double *)v26 + 4) = v38;
  *((_QWORD *)v26 + 5) = v40;
  *((_QWORD *)v26 + 6) = v42;
  *((_QWORD *)v26 + 7) = v44;
  v26[64] = 0;
  *((_QWORD *)v26 + 9) = v48;
  *((_QWORD *)v26 + 10) = v47;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60((uint64_t)v53, (uint64_t *)&unk_1011C94A0);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v50);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v55 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
  v56 = *v55;
  v57 = v55[1];
  v58 = sub_10038CB1C();
  swift_bridgeObjectRetain();
  v59 = (uint64_t)v121;
  View.accessibilityLabel(_:)(v56, v57, v110, v58);
  swift_bridgeObjectRelease(v57);
  sub_10004FF60((uint64_t)v26, &qword_1011AF600);
  v60 = v122;
  if (*(_BYTE *)(v122 + *(int *)(v115 + 32)))
    v61 = 1.0;
  else
    v61 = 0.0;
  v62 = v117;
  sub_10004A160(v59, v117, &qword_1011AF608);
  *(double *)(v62 + *(int *)(v118 + 36)) = v61;
  sub_10004FF60(v59, &qword_1011AF608);
  v63 = v120;
  sub_100065228(v62, v120, &qword_1011AF610);
  v64 = type metadata accessor for ArtworkImage.Info(0);
  v65 = v60 + *(int *)(v64 + 20);
  if (qword_10119BF50 != -1)
    swift_once(&qword_10119BF50, sub_10038AE0C);
  ArtworkImage.Size.init(cgSize:)(xmmword_1011AF3D0, *((uint64_t *)&xmmword_1011AF3D0 + 1), 0, (uint64_t)v145);
  v66 = v124;
  v67 = (uint64_t)v123;
  v68 = v125;
  (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v123, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v125);
  v69 = v126;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v60, v65, (uint64_t)v145, v67, v126);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v68);
  v70 = v60 + *(int *)(v64 + 32);
  v71 = *(_QWORD *)v70;
  v72 = *(_QWORD *)(v70 + 8);
  v73 = *(_BYTE *)(v70 + 16);
  v74 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v75 = sub_1000E4264();
  *(_QWORD *)&v146[0] = v74;
  *((_QWORD *)&v146[0] + 1) = v75;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v146, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v77 = v129;
  v78 = v128;
  View.corner(_:)(v71, v72, v73, v128, OpaqueTypeConformance2);
  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v69, v78);
  v79 = Border.artwork.unsafeMutableAddressor();
  v80 = *v79;
  v81 = *((double *)v79 + 1);
  v82 = *(_QWORD *)v70;
  v83 = *(_QWORD *)(v70 + 8);
  LOBYTE(v70) = *(_BYTE *)(v70 + 16);
  LOBYTE(v69) = *((_BYTE *)v79 + 16);
  swift_retain();
  *(_QWORD *)&v146[0] = v78;
  *((_QWORD *)&v146[0] + 1) = OpaqueTypeConformance2;
  v84 = swift_getOpaqueTypeConformance2(v146, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v85 = v131;
  v86 = v83;
  v87 = v133;
  View.border(_:corner:)(v80, v69, v82, v86, v70, v133, v84, v81);
  v88 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v130 + 8))(v77, v87, v88);
  *(_QWORD *)&v146[0] = v87;
  *((_QWORD *)&v146[0] + 1) = v84;
  v89 = swift_getOpaqueTypeConformance2(v146, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v90 = (uint64_t)v132;
  v91 = v137;
  View.placeholderStyle(_:)((uint64_t)sub_1003887B4, 0, v137, v89);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v85, v91);
  v92 = sub_10038CC44();
  v93 = (uint64_t)v140;
  View.accessibilityHidden(_:)(1, v134, v92);
  sub_10004FF60(v90, &qword_1011AF5E8);
  v94 = objc_msgSend(v141, "lineHeight");
  v96 = v95;
  v97 = static Alignment.center.getter(v94);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v146, 0, 1, 0, 1, 0, 1, v96, 0, 0, 1, 0, 1, v97, v98);
  v99 = v139;
  sub_10004A160(v93, v139, &qword_1011AF5F0);
  v100 = (_OWORD *)(v99 + *(int *)(v138 + 36));
  v101 = v146[5];
  v100[4] = v146[4];
  v100[5] = v101;
  v100[6] = v146[6];
  v102 = v146[1];
  *v100 = v146[0];
  v100[1] = v102;
  v103 = v146[3];
  v100[2] = v146[2];
  v100[3] = v103;
  sub_10004FF60(v93, &qword_1011AF5F0);
  v104 = v142;
  sub_100065228(v99, v142, &qword_1011AF5F8);
  v105 = v135;
  sub_10004A160(v63, v135, &qword_1011AF610);
  v106 = v143;
  sub_10004A160(v104, v143, &qword_1011AF5F8);
  v107 = v144;
  sub_10004A160(v105, v144, &qword_1011AF610);
  v108 = sub_100007E8C(&qword_1011AF648);
  sub_10004A160(v106, v107 + *(int *)(v108 + 48), &qword_1011AF5F8);
  sub_10004FF60(v104, &qword_1011AF5F8);
  sub_10004FF60(v63, &qword_1011AF610);
  sub_10004FF60(v106, &qword_1011AF5F8);
  return sub_10004FF60(v105, &qword_1011AF610);
}

uint64_t sub_100389F38(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  v4[3] = &type metadata for Color;
  v4[4] = &protocol witness table for Color;
  v4[0] = static Color.accentColor.getter(a1, a2);
  return sub_10038CD48((uint64_t)v4, a1);
}

uint64_t sub_100389F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s12PlaylistCellVMa(0);
  v7 = sub_1008237B8((uint64_t)v5);
  v8 = DynamicTypeSize.isAccessibilitySize.getter(v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
    return 0;
  v10 = (_QWORD *)(v1 + *(int *)(v6 + 24));
  v11 = v10[1];
  if (v11
    && ((v12 = *v10 & 0xFFFFFFFFFFFFLL, (v11 & 0x2000000000000000) != 0) ? (v13 = HIBYTE(v11) & 0xF) : (v13 = v12), v13))
  {
    return 0x4000000000000000;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_10038A070@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  id v45;
  double v46;
  double v47;
  __n128 v48;
  double v49;
  double v50;
  double v51;
  char *v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  id v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;

  v97 = a2;
  v107 = a3;
  v109 = type metadata accessor for DynamicTypeSize(0);
  v104 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v106 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011AF5D8);
  v100 = *(_QWORD *)(v5 - 8);
  v101 = v5;
  __chkstk_darwin(v5);
  v99 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100007E8C(&qword_1011A2E10);
  __chkstk_darwin(v98);
  v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A2E18);
  __chkstk_darwin(v9);
  v108 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v103 = (uint64_t)&v96 - v12;
  __chkstk_darwin(v13);
  v110 = (uint64_t)&v96 - v14;
  v102 = _s12PlaylistCellVMa(0);
  v15 = *(int *)(v102 + 20);
  v105 = a1;
  v16 = (uint64_t *)(a1 + v15);
  v17 = v16[1];
  v111 = *v16;
  v112 = v17;
  v18 = sub_100055B68();
  swift_bridgeObjectRetain();
  v19 = Text.init<A>(_:)(&v111, &type metadata for String, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = static Font.body.getter(v19);
  v27 = Text.font(_:)(v26, v19, v21, v25, v23);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release();
  v34 = v31 & 1;
  sub_100055BAC(v19, v21, v25);
  v35 = swift_bridgeObjectRelease(v23);
  v36 = static Color.primary.getter(v35);
  v37 = Text.foregroundColor(_:)(v36, v27, v29, v34, v33);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  swift_release();
  sub_100055BAC(v27, v29, v34);
  *(_QWORD *)&v44 = swift_bridgeObjectRelease(v33).n128_u64[0];
  v111 = v37;
  v112 = v39;
  v113 = v41 & 1;
  v114 = v43;
  v45 = v97;
  objc_msgSend(v97, "lineHeight", v44);
  v47 = v46;
  objc_msgSend(v45, "leading");
  v49 = v47 + fabs(v48.n128_f64[0]);
  if (qword_10119BF50 != -1)
    swift_once(&qword_10119BF50, sub_10038AE0C);
  v50 = *(double *)&xmmword_1011AF3D0;
  v51 = 0.0;
  v48.n128_u64[0] = 0;
  if (*(double *)&xmmword_1011AF3D0 <= v49)
  {
    if (qword_10119BF60 != -1)
      swift_once(&qword_10119BF60, sub_10038AE34);
    v48.n128_f64[0] = v50 + *(double *)&qword_1011AF3E8;
  }
  v52 = v99;
  View.bodyHeadOutdent(_:)(&type metadata for Text, &protocol witness table for Text, v48);
  sub_100055BAC(v37, v39, v41 & 1);
  swift_bridgeObjectRelease(v43);
  KeyPath = swift_getKeyPath(&unk_100EB74A0);
  v55 = v100;
  v54 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v8, v52, v101);
  v56 = &v8[*(int *)(v98 + 36)];
  *(_QWORD *)v56 = KeyPath;
  *((_QWORD *)v56 + 1) = 2;
  v56[16] = 0;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
  v57 = v102;
  v58 = v105;
  v59 = v106;
  v101 = v105 + *(int *)(v102 + 40);
  v60 = sub_1008237B8(v106);
  v61 = DynamicTypeSize.isAccessibilitySize.getter(v60);
  v104 = *(_QWORD *)(v104 + 8);
  v62 = ((uint64_t (*)(uint64_t, uint64_t))v104)(v59, v109);
  if ((v61 & 1) != 0)
    v63 = *((double *)&xmmword_1011AF3D0 + 1);
  else
    v63 = 0.0;
  v64 = static Alignment.center.getter(v62);
  v65 = (v61 & 1) == 0;
  v66 = v103;
  sub_10014A508(0.0, 1, 0.0, 1, 0.0, 1, v63, v65, v103, 0.0, 1, 0.0, 1, v64, v67);
  sub_10004FF60((uint64_t)v8, &qword_1011A2E10);
  sub_100065228(v66, v110, &qword_1011A2E18);
  v68 = (uint64_t *)(v58 + *(int *)(v57 + 24));
  v69 = *v68;
  v70 = v68[1];
  v71 = sub_1004872C4((uint64_t)&off_1010ABD00);
  swift_bridgeObjectRetain();
  v72 = Text.init(optional:options:)(v69, v70, v71);
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v105 = static Font.footnote.getter(v72);
  v103 = swift_getKeyPath(&unk_100EB74D0);
  v79 = static Color.secondary.getter(v103);
  v80 = swift_getKeyPath(&unk_100EB7470);
  LODWORD(v102) = static Edge.Set.leading.getter(v80);
  v81 = sub_1008237B8(v59);
  LOBYTE(v70) = DynamicTypeSize.isAccessibilitySize.getter(v81);
  ((void (*)(uint64_t, uint64_t))v104)(v59, v109);
  if ((v70 & 1) != 0)
  {
    v82 = *(double *)&xmmword_1011AF3D0;
    if (qword_10119BF60 != -1)
      swift_once(&qword_10119BF60, sub_10038AE34);
    v51 = -(v82 + *(double *)&qword_1011AF3E8);
  }
  v83 = EdgeInsets.init(_all:)(v51);
  v85 = v84;
  v87 = v86;
  v89 = v88;
  v90 = v110;
  v91 = v108;
  sub_10004A160(v110, v108, &qword_1011A2E18);
  v92 = v107;
  sub_10004A160(v91, v107, &qword_1011A2E18);
  v93 = v92 + *(int *)(sub_100007E8C(&qword_1011AF5E0) + 48);
  *(_QWORD *)v93 = v72;
  *(_QWORD *)(v93 + 8) = v74;
  *(_QWORD *)(v93 + 16) = v76;
  *(_QWORD *)(v93 + 24) = v78;
  v94 = v105;
  *(_QWORD *)(v93 + 32) = v103;
  *(_QWORD *)(v93 + 40) = v94;
  *(_QWORD *)(v93 + 48) = v80;
  *(_QWORD *)(v93 + 56) = v79;
  *(_BYTE *)(v93 + 64) = v102;
  *(double *)(v93 + 72) = v83;
  *(_QWORD *)(v93 + 80) = v85;
  *(_QWORD *)(v93 + 88) = v87;
  *(_QWORD *)(v93 + 96) = v89;
  *(_BYTE *)(v93 + 104) = 0;
  sub_1000E4440(v72, v74, v76, v78);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60(v90, &qword_1011A2E18);
  sub_1000E450C(v72, v74, v76, v78);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_10004FF60(v91, &qword_1011A2E18);
}

_QWORD *sub_10038A70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  _QWORD v34[2];
  _QWORD *v35;
  _BYTE v36[64];

  v1 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v1, v36);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v3 = _s12PlaylistCellVMa(0);
  v4 = (uint64_t *)(v0 + *(int *)(v3 + 20));
  v5 = *v4;
  v6 = v4[1];
  *(_QWORD *)(inited + 32) = *v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = (uint64_t *)(v0 + *(int *)(v3 + 24));
  v8 = *v7;
  v9 = v7[1];
  *(_QWORD *)(inited + 48) = *v7;
  *(_QWORD *)(inited + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n(v6, 2);
  v10 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
  v12 = v10[2];
  v11 = v10[3];
  v13 = v12 + 1;
  if (v12 >= v11 >> 1)
    v10 = sub_100431480((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v13;
  v14 = &v10[2 * v12];
  v14[4] = v5;
  v14[5] = v6;
  if (v9)
  {
    v15 = v10[3];
    swift_bridgeObjectRetain();
    if (v13 >= v15 >> 1)
      v10 = sub_100431480((_QWORD *)(v15 > 1), v12 + 2, 1, v10);
    v10[2] = v12 + 2;
    v16 = &v10[2 * v13];
    v16[4] = v8;
    v16[5] = v9;
  }
  swift_release();
  v17 = v10[2];
  if (v17)
  {
    v35 = _swiftEmptyArrayStorage;
    sub_10035C9A8(0, v17, 0);
    v18 = _swiftEmptyArrayStorage;
    v19 = sub_100055B68();
    v33 = v10;
    v20 = v10 + 5;
    do
    {
      v21 = *v20;
      v34[0] = *(v20 - 1);
      v34[1] = v21;
      swift_bridgeObjectRetain();
      v22 = Text.init<A>(_:)(v34, &type metadata for String, v19);
      v24 = v23;
      v26 = v25;
      v28 = v27;
      v35 = v18;
      v30 = v18[2];
      v29 = v18[3];
      if (v30 >= v29 >> 1)
      {
        sub_10035C9A8(v29 > 1, v30 + 1, 1);
        v18 = v35;
      }
      v20 += 2;
      v18[2] = v30 + 1;
      v31 = &v18[4 * v30];
      v31[4] = v22;
      v31[5] = v24;
      *((_BYTE *)v31 + 48) = v26 & 1;
      v31[7] = v28;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    return _swiftEmptyArrayStorage;
  }
  return v18;
}

double sub_10038A938()
{
  double result;

  result = *(double *)HI.HoverOutset.text.unsafeMutableAddressor();
  qword_10124CE70 = *(_QWORD *)&result;
  return result;
}

uint64_t sub_10038A958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  double v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;

  v57 = a3;
  v55 = sub_100007E8C(&qword_1011C92A0);
  __chkstk_darwin(v55);
  v62 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C8F90);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011AF6D0);
  __chkstk_darwin(v58);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100007E8C(&qword_1011AF6D8);
  v54 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v51 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_1011AF6E0);
  __chkstk_darwin(v52);
  v53 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v16 = Image.init(systemName:)(a1, a2);
  v17 = static Font.body.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100EB74D0);
  *(_QWORD *)&v63 = v16;
  *((_QWORD *)&v63 + 1) = KeyPath;
  *(_QWORD *)&v64 = v17;
  v19 = static Font.Weight.semibold.getter(KeyPath);
  v20 = sub_100007E8C(&qword_1011AC700);
  v21 = sub_100318590();
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v20, v21);
  swift_release();
  v22 = v58;
  swift_release();
  v23 = swift_release();
  v24 = (char *)v59;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v59, v23);
  v25 = swift_getKeyPath(&unk_100EB7500);
  v26 = (uint64_t *)&v13[*(int *)(v22 + 36)];
  v27 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  (*(void (**)(char *, char *, char *))(v6 + 16))((char *)v26 + *(int *)(v27 + 28), v8, v24);
  *v26 = v25;
  v28 = (uint64_t)v13;
  v29 = v60;
  v30 = v13;
  v31 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v30, v11, v61);
  v32 = v8;
  v33 = (uint64_t)v62;
  (*(void (**)(char *, char *))(v6 + 8))(v32, v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
  v34 = enum case for DynamicTypeSize.accessibility1(_:);
  v35 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
  v36 = sub_100048748((unint64_t *)&qword_1011A5A50, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v33, v33, v35, v36) & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v37 = sub_10038CFC4();
  v38 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v24 = v51;
  View.dynamicTypeSize<A>(_:)(v33, v22, v55, v37, v38);
  sub_10004FF60(v33, &qword_1011C92A0);
  v39 = sub_10004FF60(v28, &qword_1011AF6D0);
  if (qword_10119BF68 != -1)
LABEL_5:
    v39 = swift_once(&qword_10119BF68, sub_10038AE44);
  v40 = qword_1011AF3F0;
  v41 = static Alignment.center.getter(v39);
  _FrameLayout.init(width:height:alignment:)(&v63, v40, 0, 0, 1, v41, v42);
  v44 = (uint64_t)v53;
  v43 = v54;
  v45 = v56;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v24, v56);
  v46 = (_OWORD *)(v44 + *(int *)(v52 + 36));
  v47 = v64;
  *v46 = v63;
  v46[1] = v47;
  v46[2] = v65;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v45);
  v48 = v57;
  sub_10004A160(v44, v57, &qword_1011AF6E0);
  v49 = v48 + *(int *)(sub_100007E8C(&qword_1011AF6F0) + 36);
  *(_QWORD *)v49 = 0;
  *(_WORD *)(v49 + 8) = 1;
  return sub_10004FF60(v44, &qword_1011AF6E0);
}

uint64_t sub_10038AE00@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10038A958(*v1, v1[1], a1);
}

int64x2_t sub_10038AE0C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4048000000000000uLL);
  xmmword_1011AF3D0 = (__int128)result;
  return result;
}

void sub_10038AE24()
{
  qword_1011AF3E0 = 0x4018000000000000;
}

void sub_10038AE34()
{
  qword_1011AF3E8 = 0x4028000000000000;
}

void sub_10038AE44()
{
  qword_1011AF3F0 = 0x403C000000000000;
}

uint64_t sub_10038AE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038AE60);
}

uint64_t sub_10038AE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011C6890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10038AEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038AEAC);
}

uint64_t sub_10038AEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011C6890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s15NewPlaylistCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AF450, (uint64_t)&_s15NewPlaylistCellVMn);
}

uint64_t *sub_10038AF04(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = a3[5];
    v39 = a3[6];
    v40 = (uint64_t *)((char *)a1 + v38);
    v41 = (uint64_t *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (uint64_t *)((char *)a1 + v39);
    v44 = (uint64_t *)((char *)a2 + v39);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v46) = *((_BYTE *)a2 + v46);
    v47 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v48 = (uint64_t *)((char *)a1 + v47);
    v49 = (uint64_t *)((char *)a2 + v47);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
      v52 = 1;
    }
    else
    {
      *v48 = *v49;
      swift_retain();
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v50, v52);
    v53 = a3[11];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
  }
  return a1;
}

uint64_t sub_10038B2B8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  v13 = a1 + a2[10];
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release();
  }
  v16 = a1 + a2[11];
  v17 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
}

char *sub_10038B470(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[5];
  v37 = a3[6];
  v38 = &a1[v36];
  v39 = &a2[v36];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = &a1[v37];
  v42 = &a2[v37];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v44 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v44] = a2[v44];
  v45 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v46 = &a1[v45];
  v47 = &a2[v45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
  {
    v49 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v46, v47, v49);
    v50 = 1;
  }
  else
  {
    *(_QWORD *)v46 = *(_QWORD *)v47;
    swift_retain();
    v50 = 0;
  }
  swift_storeEnumTagMultiPayload(v46, v48, v50);
  v51 = a3[11];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t sub_10038B7F8(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  v62 = a3[5];
  v63 = (_QWORD *)(a1 + v62);
  v64 = &a2[v62];
  *v63 = *(_QWORD *)v64;
  v65 = v63[1];
  v63[1] = *((_QWORD *)v64 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v65);
  v66 = a3[6];
  v67 = (_QWORD *)(a1 + v66);
  v68 = &a2[v66];
  *v67 = *(_QWORD *)v68;
  v69 = v67[1];
  v67[1] = *((_QWORD *)v68 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v69);
  *(_BYTE *)(a1 + a3[7]) = a2[a3[7]];
  *(_BYTE *)(a1 + a3[8]) = a2[a3[8]];
  *(_BYTE *)(a1 + a3[9]) = a2[a3[9]];
  if ((char *)a1 != a2)
  {
    v70 = a3[10];
    v71 = (_QWORD *)(a1 + v70);
    v72 = &a2[v70];
    sub_10004FF60(a1 + v70, (uint64_t *)&unk_1011ACE40);
    v73 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
    {
      v74 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v71, v72, v74);
      v75 = 1;
    }
    else
    {
      *v71 = *(_QWORD *)v72;
      swift_retain();
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v71, v73, v75);
  }
  v76 = a3[11];
  v77 = a1 + v76;
  v78 = &a2[v76];
  v79 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 24))(v77, v78, v79);
  return a1;
}

char *sub_10038BDD0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v36] = *(_OWORD *)&a2[v36];
  v37 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v37] = a2[v37];
  v38 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v40, v41) == 1)
  {
    v42 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
    swift_storeEnumTagMultiPayload(v39, v41, 1);
  }
  else
  {
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  v43 = a3[11];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t sub_10038C140(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (v37)
  {
    if (!v38)
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
      {
        v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  if (v38)
  {
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_27;
  }
  v43 = type metadata accessor for Playlist.Variant(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v32, 1, v43);
  v47 = v45(v33, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
      goto LABEL_27;
    }
LABEL_37:
    v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    goto LABEL_21;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_BYTE *)(v55 + 16) = v56[16];
  v57 = a3[5];
  v58 = (_QWORD *)(a1 + v57);
  v59 = &a2[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  v62 = v58[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease(v62);
  v63 = a3[6];
  v64 = (_QWORD *)(a1 + v63);
  v65 = &a2[v63];
  v67 = *(_QWORD *)v65;
  v66 = *((_QWORD *)v65 + 1);
  v68 = v64[1];
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease(v68);
  v69 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = a2[a3[7]];
  *(_BYTE *)(a1 + v69) = a2[v69];
  *(_BYTE *)(a1 + a3[9]) = a2[a3[9]];
  if ((char *)a1 != a2)
  {
    v70 = a3[10];
    v71 = (void *)(a1 + v70);
    v72 = &a2[v70];
    sub_10004FF60(a1 + v70, (uint64_t *)&unk_1011ACE40);
    v73 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
    {
      v74 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v71, v72, v74);
      swift_storeEnumTagMultiPayload(v71, v73, 1);
    }
    else
    {
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
  }
  v75 = a3[11];
  v76 = a1 + v75;
  v77 = &a2[v75];
  v78 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
  return a1;
}

uint64_t sub_10038C6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038C704);
}

uint64_t sub_10038C704(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C(&qword_1011C6890);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[10];
    }
    else
    {
      v8 = sub_100007E8C(qword_1011C9550);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[11];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10038C7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038C7E8);
}

uint64_t sub_10038C7E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C(&qword_1011C6890);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[10];
    }
    else
    {
      v10 = sub_100007E8C(qword_1011C9550);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[11];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s12PlaylistCellVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011AF4E0, (uint64_t)&_s12PlaylistCellVMn);
}

void sub_10038C8D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100EB7388;
    v8[2] = &unk_100EB73A0;
    v8[3] = &unk_100EB73B8;
    v8[4] = &unk_100EB73B8;
    v8[5] = &unk_100EB73B8;
    sub_1000559DC(319);
    if (v5 <= 0x3F)
    {
      v8[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000F6458(319);
      if (v7 <= 0x3F)
      {
        v8[7] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 8, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_10038C990(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9DAB4, 1);
}

uint64_t sub_10038C9A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9DA8C, 1);
}

unint64_t sub_10038C9B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF598;
  if (!qword_1011AF598)
  {
    v1 = sub_100044B54(&qword_1011AF590);
    sub_10038CA3C();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF598);
  }
  return result;
}

unint64_t sub_10038CA3C()
{
  unint64_t result;

  result = qword_1011AF5A0;
  if (!qword_1011AF5A0)
  {
    result = swift_getWitnessTable("٭ ", &_s12PlaylistCellV5GlyphVN);
    atomic_store(result, (unint64_t *)&qword_1011AF5A0);
  }
  return result;
}

unint64_t sub_10038CA80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF5A8;
  if (!qword_1011AF5A8)
  {
    v1 = sub_100044B54(&qword_1011AF560);
    sub_10038C9B8();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF5A8);
  }
  return result;
}

unint64_t sub_10038CB1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF618;
  if (!qword_1011AF618)
  {
    v1 = sub_100044B54(&qword_1011AF600);
    sub_10038CBA0();
    sub_100049F28(&qword_1011C94C0, (uint64_t *)&unk_1011C94A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF618);
  }
  return result;
}

unint64_t sub_10038CBA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AF620;
  if (!qword_1011AF620)
  {
    v1 = sub_100044B54(&qword_1011AF628);
    sub_10005610C(&qword_1011AF630, &qword_1011AF638, (void (*)(void))sub_100318590);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF620);
  }
  return result;
}

unint64_t sub_10038CC44()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = qword_1011AF640;
  if (!qword_1011AF640)
  {
    v1 = sub_100044B54(&qword_1011AF5E8);
    v2 = sub_100044B54((uint64_t *)&unk_1011C9250);
    v3 = sub_100044B54((uint64_t *)&unk_1011C4FE0);
    v6 = sub_100044B54((uint64_t *)&unk_1011C5080);
    v7 = sub_1000E4264();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    sub_100048748(&qword_1011AD7D8, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF640);
  }
  return result;
}

uint64_t sub_10038CD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011AD7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10038CD90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;

  result = qword_1011AF6B0;
  if (!qword_1011AF6B0)
  {
    v1 = sub_100044B54(&qword_1011AF690);
    v2 = sub_100044B54(&qword_1011AF680);
    v4 = sub_100044B54(&qword_1011AF678);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.view(availableSize:)>>, 1);
    v3 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    v4 = v2;
    OpaqueTypeConformance2 = v3;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    sub_100048748(&qword_1011AD7D8, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF6B0);
  }
  return result;
}

ValueMetadata *_s12PlaylistCellV5GlyphVMa()
{
  return &_s12PlaylistCellV5GlyphVN;
}

uint64_t sub_10038CE88()
{
  return sub_10038CEF0(&qword_1011AF6C0, &qword_1011AF540, &qword_1011AF530, &qword_1011AF550);
}

uint64_t sub_10038CEBC()
{
  return sub_10038CEF0(&qword_1011AF6C8, &qword_1011AF660, &qword_1011AF650, &qword_1011AF670);
}

uint64_t sub_10038CEF0(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    v9[0] = sub_100044B54(a3);
    v9[1] = sub_100049F28(a4, a3, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10038CFB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9DADC, 1);
}

unint64_t sub_10038CFC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011AF6E8;
  if (!qword_1011AF6E8)
  {
    v1 = sub_100044B54(&qword_1011AF6D0);
    v2[0] = sub_100044B54(&qword_1011AC700);
    v2[1] = sub_100318590();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011C94C0, (uint64_t *)&unk_1011C94A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF6E8);
  }
  return result;
}

uint64_t sub_10038D070()
{
  return sub_10005610C(&qword_1011AF6F8, &qword_1011AF6F0, (void (*)(void))sub_10038D0A4);
}

unint64_t sub_10038D0A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011AF700;
  if (!qword_1011AF700)
  {
    v1 = sub_100044B54(&qword_1011AF6E0);
    v2[0] = sub_100044B54(&qword_1011AF6D0);
    v2[1] = sub_100044B54(&qword_1011C92A0);
    v2[2] = sub_10038CFC4();
    v2[3] = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AF700);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackNumberStyle()
{
  return &type metadata for TrackNumberStyle;
}

void sub_10038D18C(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD v8[3];
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 32);
  v8[0] = *(_OWORD *)(a1 + 16);
  v8[1] = v3;
  v8[2] = *(_OWORD *)(a1 + 48);
  v9 = v2;
  v4 = type metadata accessor for ContainerHeaderRow.ViewModel(319, (uint64_t)v8);
  if (v5 <= 0x3F)
  {
    *(_QWORD *)&v8[0] = *(_QWORD *)(v4 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v7 <= 0x3F)
    {
      *((_QWORD *)&v8[0] + 1) = *(_QWORD *)(v6 - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v8, a1 + 72);
    }
  }
}

_QWORD *sub_10038D244(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t, __n128);
  char *v48;
  __n128 v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  unsigned int v119;
  _BYTE *v120;
  uint64_t v121;
  int *v122;
  char *v123;
  int *v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  v11 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(a3 + 32);
  v12 = *(_QWORD *)(a3 + 40);
  v14 = *(_QWORD *)(a3 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v129 = v11;
  v130 = v10;
  v131 = v13;
  v132 = v12;
  v133 = v14;
  v128 = a3;
  v134 = *(_OWORD *)(a3 + 56);
  v126 = v134;
  v15 = (int *)type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v129);
  v16 = v15[21];
  v17 = (char *)a1 + v16;
  v125 = a2;
  v18 = (char *)a2 + v16;
  v129 = v11;
  v130 = v10;
  v131 = v13;
  v132 = v14;
  v133 = v126;
  v19 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v129);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v19);
  v22 = type metadata accessor for SourcedPlaybackIntent(0, v19, WitnessTable, v21);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
  {
    v121 = v23;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v19);
    v122 = v15;
    v123 = v17;
    v28 = v19;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v32 = EnumCaseMultiPayload;
      v33 = *(_QWORD *)(v12 + 8);
      v31 = v10;
      v34 = type metadata accessor for MusicItemCollection(0, v10, v33);
      (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v17, v18, v34);
      v30 = v32;
    }
    else
    {
      v120 = v18;
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v118 = v19;
        v119 = EnumCaseMultiPayload;
        v31 = v10;
        v36 = v22;
        (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v17, v18, v11);
        v37 = type metadata accessor for Library.Context(255);
        v38 = *(int *)(swift_getTupleTypeMetadata2(0, v11, v37, " context ", 0) + 48);
        v39 = &v17[v38];
        v40 = &v18[v38];
        *(_QWORD *)v39 = *(_QWORD *)&v18[v38];
        v124 = (int *)v37;
        v41 = *(int *)(v37 + 20);
        v127 = v39;
        v42 = &v39[v41];
        v43 = v40;
        v44 = &v40[v41];
        v45 = type metadata accessor for Album(0);
        v46 = *(_QWORD *)(v45 - 8);
        v47 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v46 + 48);
        v48 = v44;
        v49 = swift_retain();
        v50 = v47(v44, 1, v45, v49);
        v25 = v125;
        if (v50)
        {
          v51 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v42, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v42, v48, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v42, 0, 1, v45);
        }
        v52 = v124[6];
        v53 = (char *)v127 + v52;
        v54 = &v43[v52];
        v55 = type metadata accessor for Artist(0);
        v56 = *(_QWORD *)(v55 - 8);
        v18 = v120;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
        {
          v57 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        v58 = v124[7];
        v59 = (char *)v127 + v58;
        v60 = &v43[v58];
        v61 = type metadata accessor for Composer(0);
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
        {
          v63 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        }
        v64 = v124[8];
        v65 = (char *)v127 + v64;
        v66 = &v43[v64];
        v67 = type metadata accessor for Genre(0);
        v68 = *(_QWORD *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          v69 = sub_100007E8C(&qword_10119ED08);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
        v70 = v124[9];
        v71 = (char *)v127 + v70;
        v72 = &v43[v70];
        v73 = type metadata accessor for Playlist(0);
        v74 = *(_QWORD *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
        {
          v75 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
        }
        v76 = v124[10];
        v77 = (char *)v127 + v76;
        v78 = &v43[v76];
        v79 = type metadata accessor for TVShow(0);
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
        {
          v81 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
        }
        v82 = v124[11];
        v83 = (char *)v127 + v82;
        v84 = &v43[v82];
        v85 = type metadata accessor for TVSeason(0);
        v86 = *(_QWORD *)(v85 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
        {
          v87 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
        }
        v17 = v123;
        *((_BYTE *)v127 + v124[12]) = v43[v124[12]];
        *((_BYTE *)v127 + v124[13]) = v43[v124[13]];
        *((_BYTE *)v127 + v124[14]) = v43[v124[14]];
        v88 = v124[15];
        v89 = (_QWORD *)((char *)v127 + v88);
        v90 = &v43[v88];
        v91 = *((_QWORD *)v90 + 1);
        *v89 = *(_QWORD *)v90;
        v89[1] = v91;
        *(_QWORD *)((char *)v127 + v124[16]) = *(_QWORD *)&v43[v124[16]];
        *((_BYTE *)v127 + v124[17]) = v43[v124[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = v119;
        v35 = v121;
        v28 = v118;
LABEL_32:
        swift_storeEnumTagMultiPayload(v17, v28, v30);
        v92 = *(int *)(v36 + 36);
        v93 = &v17[v92];
        v94 = &v18[v92];
        v97 = type metadata accessor for PlaybackEnqueueMode(0, v31, v95, v96);
        v98 = swift_getEnumCaseMultiPayload(v94, v97);
        v99 = *(_QWORD *)(v31 - 8);
        if (v98 == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v93, v94, v31);
          v100 = 1;
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v94, 1, v31))
          {
            v101 = type metadata accessor for Optional(0, v31);
            memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v93, v94, v31);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v93, 0, 1, v31);
          }
          v100 = 0;
        }
        v15 = v122;
        swift_storeEnumTagMultiPayload(v93, v97, v100);
        v123[*(int *)(v36 + 40)] = v18[*(int *)(v36 + 40)];
        (*(void (**)(void))(v35 + 56))();
        goto LABEL_39;
      }
      v29 = EnumCaseMultiPayload;
      (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v17, v18, v11);
      v30 = v29;
      v31 = v10;
    }
    v35 = v121;
    v36 = v22;
    v25 = v125;
    goto LABEL_32;
  }
  v24 = type metadata accessor for Optional(0, v22);
  memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  v25 = v125;
LABEL_39:
  v102 = v15[22];
  v103 = (_QWORD *)((char *)a1 + v102);
  v104 = (_QWORD *)((char *)v25 + v102);
  v105 = v104[1];
  *v103 = *v104;
  v103[1] = v105;
  v106 = v15[23];
  v107 = *(void **)((char *)v25 + v106);
  *(_QWORD *)((char *)a1 + v106) = v107;
  v108 = *(int *)(v128 + 76);
  v109 = (_QWORD *)((char *)a1 + v108);
  v110 = (_QWORD *)((char *)v25 + v108);
  swift_retain();
  v111 = v107;
  v112 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v110, v112) == 1)
  {
    v113 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v109, v110, v113);
    v114 = v109;
    v115 = v112;
    v116 = 1;
  }
  else
  {
    *v109 = *v110;
    swift_retain();
    v114 = v109;
    v115 = v112;
    v116 = 0;
  }
  swift_storeEnumTagMultiPayload(v114, v115, v116);
  return a1;
}

uint64_t type metadata accessor for ContainerHeaderRow.ViewModel(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ContainerHeaderRow.ViewModel);
}

double sub_10038DAD4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  double result;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  v4 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v52 = *(_QWORD *)(a2 + 16);
  v5 = v52;
  v53 = v4;
  v54 = v6;
  v55 = v7;
  v56 = v8;
  v57 = *(_OWORD *)(a2 + 56);
  v50 = v57;
  v9 = type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v52);
  v10 = (char *)a1 + *(int *)(v9 + 84);
  v52 = v5;
  v53 = v4;
  v54 = v6;
  v55 = v8;
  v56 = v50;
  v11 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v52);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v11);
  v14 = type metadata accessor for SourcedPlaybackIntent(0, v11, WitnessTable, v13);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v41 = type metadata accessor for MusicItemCollection(0, v4, *(_QWORD *)(v7 + 8));
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v10, v41);
        break;
      case 1:
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v10, v5);
        break;
      case 0:
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v10, v5);
        v18 = type metadata accessor for Library.Context(255);
        v19 = &v10[*(int *)(swift_getTupleTypeMetadata2(0, v5, v18, " context ", 0) + 48)];
        swift_release();
        v51 = (int *)v18;
        v20 = &v19[*(int *)(v18 + 20)];
        v21 = type metadata accessor for Album(0);
        v22 = *(_QWORD *)(v21 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
        v23 = &v19[v51[6]];
        v24 = type metadata accessor for Artist(0);
        v25 = *(_QWORD *)(v24 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
          (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
        v26 = &v19[v51[7]];
        v27 = type metadata accessor for Composer(0);
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
          (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
        v29 = &v19[v51[8]];
        v30 = type metadata accessor for Genre(0);
        v31 = *(_QWORD *)(v30 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
          (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
        v32 = &v19[v51[9]];
        v33 = type metadata accessor for Playlist(0);
        v34 = *(_QWORD *)(v33 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
          (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
        v35 = &v19[v51[10]];
        v36 = type metadata accessor for TVShow(0);
        v37 = *(_QWORD *)(v36 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
          (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
        v38 = &v19[v51[11]];
        v39 = type metadata accessor for TVSeason(0);
        v40 = *(_QWORD *)(v39 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
        swift_bridgeObjectRelease(*(_QWORD *)&v19[v51[15] + 8]);
        swift_bridgeObjectRelease(*(_QWORD *)&v19[v51[16]]);
        break;
    }
    v42 = &v10[*(int *)(v14 + 36)];
    v43 = type metadata accessor for PlaybackEnqueueMode(0, v4, v16, v17);
    v44 = swift_getEnumCaseMultiPayload(v42, v43);
    v45 = *(_QWORD *)(v4 - 8);
    if (v44 == 1 || !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v4))
      (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v4);
  }
  swift_release();

  v46 = (char *)a1 + *(int *)(a2 + 76);
  v47 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
  {
    v48 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v46, v48);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_10038DF34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t, __n128);
  char *v44;
  __n128 v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  unsigned int v113;
  char *v114;
  uint64_t v115;
  int *v116;
  char *v117;
  int *v118;
  char *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v12 = *(_QWORD *)(a3 + 32);
  v11 = *(_QWORD *)(a3 + 40);
  v13 = *(_QWORD *)(a3 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v124 = v10;
  v125 = v9;
  v126 = v12;
  v127 = v11;
  v128 = v13;
  v121 = a3;
  v129 = *(_OWORD *)(a3 + 56);
  v122 = v129;
  v14 = (int *)type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v124);
  v15 = v14[21];
  v16 = (char *)a1 + v15;
  v120 = a2;
  v17 = (char *)a2 + v15;
  v124 = v10;
  v125 = v9;
  v126 = v12;
  v127 = v13;
  v128 = v122;
  v18 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v124);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v18);
  v21 = type metadata accessor for SourcedPlaybackIntent(0, v18, WitnessTable, v20);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
  {
    v23 = type metadata accessor for Optional(0, v21);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v24 = v120;
    v25 = v121;
    goto LABEL_37;
  }
  v115 = v22;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v18);
  v116 = v14;
  v117 = v16;
  v27 = v18;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v31 = EnumCaseMultiPayload;
    v32 = *(_QWORD *)(v11 + 8);
    v30 = v9;
    v33 = type metadata accessor for MusicItemCollection(0, v9, v32);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v16, v17, v33);
    v29 = v31;
    goto LABEL_7;
  }
  v114 = v17;
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v28 = EnumCaseMultiPayload;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v16, v17, v10);
    v29 = v28;
    v30 = v9;
LABEL_7:
    v34 = v21;
    v24 = v120;
    v25 = v121;
    goto LABEL_30;
  }
  v112 = v18;
  v113 = EnumCaseMultiPayload;
  v30 = v9;
  v34 = v21;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v16, v17, v10);
  v35 = type metadata accessor for Library.Context(255);
  v36 = *(int *)(swift_getTupleTypeMetadata2(0, v10, v35, " context ", 0) + 48);
  v37 = &v16[v36];
  *(_QWORD *)v37 = *(_QWORD *)&v17[v36];
  v118 = (int *)v35;
  v119 = &v17[v36];
  v38 = *(int *)(v35 + 20);
  v123 = v37;
  v39 = &v37[v38];
  v40 = &v119[v38];
  v41 = type metadata accessor for Album(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v42 + 48);
  v44 = v40;
  v45 = swift_retain();
  v46 = v43(v40, 1, v41, v45);
  v24 = v120;
  v25 = v121;
  if (v46)
  {
    v47 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v39, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v44, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v17 = v114;
  v48 = v118[6];
  v49 = (char *)v123 + v48;
  v50 = &v119[v48];
  v51 = type metadata accessor for Artist(0);
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v54 = v118[7];
  v55 = (char *)v123 + v54;
  v56 = &v119[v54];
  v57 = type metadata accessor for Composer(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v60 = v118[8];
  v61 = (char *)v123 + v60;
  v62 = &v119[v60];
  v63 = type metadata accessor for Genre(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    v65 = sub_100007E8C(&qword_10119ED08);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  v66 = v118[9];
  v67 = (char *)v123 + v66;
  v68 = &v119[v66];
  v69 = type metadata accessor for Playlist(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  v72 = v118[10];
  v73 = (char *)v123 + v72;
  v74 = &v119[v72];
  v75 = type metadata accessor for TVShow(0);
  v76 = *(_QWORD *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    v77 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  v78 = v118[11];
  v79 = (char *)v123 + v78;
  v80 = &v119[v78];
  v81 = type metadata accessor for TVSeason(0);
  v82 = *(_QWORD *)(v81 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
  {
    v83 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  }
  v16 = v117;
  *((_BYTE *)v123 + v118[12]) = v119[v118[12]];
  *((_BYTE *)v123 + v118[13]) = v119[v118[13]];
  *((_BYTE *)v123 + v118[14]) = v119[v118[14]];
  v84 = v118[15];
  v85 = (_QWORD *)((char *)v123 + v84);
  v86 = &v119[v84];
  v87 = *((_QWORD *)v86 + 1);
  *v85 = *(_QWORD *)v86;
  v85[1] = v87;
  *(_QWORD *)((char *)v123 + v118[16]) = *(_QWORD *)&v119[v118[16]];
  *((_BYTE *)v123 + v118[17]) = v119[v118[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v113;
  v27 = v112;
LABEL_30:
  swift_storeEnumTagMultiPayload(v16, v27, v29);
  v88 = *(int *)(v34 + 36);
  v89 = &v16[v88];
  v90 = &v17[v88];
  v93 = type metadata accessor for PlaybackEnqueueMode(0, v30, v91, v92);
  v94 = swift_getEnumCaseMultiPayload(v90, v93);
  v95 = *(_QWORD *)(v30 - 8);
  if (v94 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v89, v90, v30);
    v96 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v90, 1, v30))
    {
      v97 = type metadata accessor for Optional(0, v30);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v89, v90, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v89, 0, 1, v30);
    }
    v96 = 0;
  }
  v14 = v116;
  swift_storeEnumTagMultiPayload(v89, v93, v96);
  v117[*(int *)(v34 + 40)] = v17[*(int *)(v34 + 40)];
  (*(void (**)(void))(v115 + 56))();
LABEL_37:
  v98 = v14[22];
  v99 = (_QWORD *)((char *)a1 + v98);
  v100 = (_QWORD *)((char *)v24 + v98);
  v101 = v100[1];
  *v99 = *v100;
  v99[1] = v101;
  v102 = v14[23];
  v103 = *(void **)((char *)v24 + v102);
  *(_QWORD *)((char *)a1 + v102) = v103;
  v104 = *(int *)(v25 + 76);
  v105 = (_QWORD *)((char *)a1 + v104);
  v106 = (_QWORD *)((char *)v24 + v104);
  swift_retain();
  v107 = v103;
  v108 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v106, v108) == 1)
  {
    v109 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v105, v106, v109);
    v110 = 1;
  }
  else
  {
    *v105 = *v106;
    swift_retain();
    v110 = 0;
  }
  swift_storeEnumTagMultiPayload(v105, v108, v110);
  return a1;
}

_QWORD *sub_10038E790(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  size_t v27;
  char *v28;
  uint64_t EnumCaseMultiPayload;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t, __n128);
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t, __n128);
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  void *v159;
  void *v160;
  id v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unsigned int v169;
  unsigned int v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  int *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *v179;
  _QWORD *v180;
  char *v181;
  int *v182;
  int *v183;
  int *v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(a3 + 32);
  v12 = *(_QWORD *)(a3 + 40);
  v13 = *(_QWORD *)(a3 + 48);
  v192 = *(_QWORD *)(a3 + 16);
  v10 = v192;
  v193 = v9;
  v194 = v11;
  v195 = v12;
  v196 = v13;
  v188 = a3;
  v197 = *(_OWORD *)(a3 + 56);
  v190 = v197;
  v14 = (int *)type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v192);
  v15 = v14[21];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v192 = v10;
  v193 = v9;
  v185 = v9;
  v194 = v11;
  v195 = v13;
  v196 = v190;
  v18 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v192);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v18);
  v21 = type metadata accessor for SourcedPlaybackIntent(0, v18, WitnessTable, v20);
  v186 = *(_QWORD *)(v21 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v186 + 48);
  v189 = v16;
  v23 = v16;
  v24 = v17;
  v25 = v21;
  LODWORD(v11) = v22(v23, 1, v21);
  v191 = v25;
  v26 = v22(v24, 1, v25);
  if ((_DWORD)v11)
  {
    if (!v26)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v18);
      v30 = EnumCaseMultiPayload;
      v183 = v14;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v32 = v185;
        v37 = type metadata accessor for MusicItemCollection(0, v185, *(_QWORD *)(v12 + 8));
        v31 = v189;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v189, v24, v37);
      }
      else if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        v31 = v189;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v189, v24, v10);
        v32 = v185;
      }
      else
      {
        v169 = EnumCaseMultiPayload;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v189, v24, v10);
        v38 = type metadata accessor for Library.Context(255);
        v39 = *(int *)(swift_getTupleTypeMetadata2(0, v10, v38, " context ", 0) + 48);
        v40 = &v189[v39];
        v41 = &v24[v39];
        *(_QWORD *)v40 = *(_QWORD *)&v24[v39];
        __dst = (int *)v38;
        v179 = &v189[v39];
        v42 = *(int *)(v38 + 20);
        v43 = &v40[v42];
        v181 = v41;
        v44 = &v41[v42];
        v45 = type metadata accessor for Album(0);
        v46 = *(_QWORD *)(v45 - 8);
        v47 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v46 + 48);
        v48 = swift_retain();
        if (v47(v44, 1, v45, v48))
        {
          v49 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        v62 = __dst[6];
        v63 = &v179[v62];
        v64 = &v181[v62];
        v65 = type metadata accessor for Artist(0);
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          v67 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        v68 = __dst[7];
        v69 = &v179[v68];
        v70 = &v181[v68];
        v71 = type metadata accessor for Composer(0);
        v72 = *(_QWORD *)(v71 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
        {
          v73 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
        }
        v74 = __dst[8];
        v75 = &v179[v74];
        v76 = &v181[v74];
        v77 = type metadata accessor for Genre(0);
        v78 = *(_QWORD *)(v77 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
        {
          v79 = sub_100007E8C(&qword_10119ED08);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
        }
        v80 = __dst[9];
        v172 = &v179[v80];
        v81 = &v181[v80];
        v82 = type metadata accessor for Playlist(0);
        v83 = *(_QWORD *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
        {
          v84 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v172, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v172, v81, v82);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v172, 0, 1, v82);
        }
        v85 = __dst[10];
        v173 = &v179[v85];
        v86 = &v181[v85];
        v87 = type metadata accessor for TVShow(0);
        v88 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
        {
          v89 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v173, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v173, v86, v87);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v173, 0, 1, v87);
        }
        v90 = __dst[11];
        v174 = &v179[v90];
        v91 = &v181[v90];
        v92 = type metadata accessor for TVSeason(0);
        v93 = *(_QWORD *)(v92 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
        {
          v94 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v174, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v174, v91, v92);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v174, 0, 1, v92);
        }
        v31 = v189;
        v179[__dst[12]] = v181[__dst[12]];
        v179[__dst[13]] = v181[__dst[13]];
        v179[__dst[14]] = v181[__dst[14]];
        v95 = __dst[15];
        v96 = &v179[v95];
        v97 = &v181[v95];
        *(_QWORD *)v96 = *(_QWORD *)v97;
        *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
        *(_QWORD *)&v179[__dst[16]] = *(_QWORD *)&v181[__dst[16]];
        v179[__dst[17]] = v181[__dst[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = v185;
        v30 = v169;
      }
      swift_storeEnumTagMultiPayload(v31, v18, v30);
      v98 = *(int *)(v191 + 36);
      v99 = &v31[v98];
      v100 = &v24[v98];
      v103 = type metadata accessor for PlaybackEnqueueMode(0, v32, v101, v102);
      v104 = swift_getEnumCaseMultiPayload(v100, v103);
      v105 = *(_QWORD *)(v32 - 8);
      if (v104 == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v99, v100, v32);
        v106 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v100, 1, v32))
        {
          v107 = type metadata accessor for Optional(0, v32);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v99, v100, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v99, 0, 1, v32);
        }
        v106 = 0;
      }
      swift_storeEnumTagMultiPayload(v99, v103, v106);
      v31[*(int *)(v191 + 40)] = v24[*(int *)(v191 + 40)];
      (*(void (**)(char *, _QWORD, uint64_t))(v186 + 56))(v31, 0, 1);
      v14 = v183;
      goto LABEL_75;
    }
    v27 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v25) - 8) + 64);
    v28 = v189;
    goto LABEL_6;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v186 + 8))(v189, v25);
    v27 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v25) - 8) + 64);
    v28 = v189;
LABEL_6:
    memcpy(v28, v24, v27);
    goto LABEL_75;
  }
  v33 = v189;
  if (a1 != a2)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v189, v18);
    v34 = swift_getEnumCaseMultiPayload(v24, v18);
    v35 = v34;
    v184 = v14;
    if ((_DWORD)v34 == 2)
    {
      v36 = v185;
      v50 = type metadata accessor for MusicItemCollection(0, v185, *(_QWORD *)(v12 + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v189, v24, v50);
    }
    else if ((_DWORD)v34 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v189, v24, v10);
      v36 = v185;
    }
    else
    {
      v170 = v34;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v189, v24, v10);
      v51 = type metadata accessor for Library.Context(255);
      v52 = *(int *)(swift_getTupleTypeMetadata2(0, v10, v51, " context ", 0) + 48);
      v53 = &v189[v52];
      v171 = v24;
      v54 = &v24[v52];
      *(_QWORD *)v53 = *(_QWORD *)v54;
      v182 = (int *)v51;
      v55 = *(int *)(v51 + 20);
      v187 = v53;
      __dsta = &v53[v55];
      v56 = &v54[v55];
      v57 = type metadata accessor for Album(0);
      v58 = *(_QWORD *)(v57 - 8);
      v59 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v58 + 48);
      v60 = swift_retain();
      v180 = v54;
      if (v59(v56, 1, v57, v60))
      {
        v61 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dsta, v56, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(__dsta, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dsta, 0, 1, v57);
      }
      v108 = v182[6];
      v109 = (char *)v187 + v108;
      v110 = (char *)v180 + v108;
      v111 = type metadata accessor for Artist(0);
      v112 = *(_QWORD *)(v111 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
      {
        v113 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v109, v110, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
      }
      v114 = v182[7];
      v115 = (char *)v187 + v114;
      v116 = (char *)v180 + v114;
      v117 = type metadata accessor for Composer(0);
      v118 = *(_QWORD *)(v117 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
      {
        v119 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v116, v117);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
      }
      v120 = v182[8];
      v121 = (char *)v187 + v120;
      v122 = (char *)v180 + v120;
      v123 = type metadata accessor for Genre(0);
      v124 = *(_QWORD *)(v123 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
      {
        v125 = sub_100007E8C(&qword_10119ED08);
        memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v122, v123);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      }
      v126 = v182[9];
      __dstb = (char *)v187 + v126;
      v127 = (char *)v180 + v126;
      v128 = type metadata accessor for Playlist(0);
      v129 = *(_QWORD *)(v128 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
      {
        v130 = sub_100007E8C(&qword_1011A30F0);
        memcpy(__dstb, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 16))(__dstb, v127, v128);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(__dstb, 0, 1, v128);
      }
      v131 = v182[10];
      __dstc = (char *)v187 + v131;
      v132 = (char *)v180 + v131;
      v133 = type metadata accessor for TVShow(0);
      v134 = *(_QWORD *)(v133 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
      {
        v135 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(__dstc, v132, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 16))(__dstc, v132, v133);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(__dstc, 0, 1, v133);
      }
      v136 = v182[11];
      v137 = (char *)v187 + v136;
      v138 = (char *)v180 + v136;
      v139 = type metadata accessor for TVSeason(0);
      v140 = *(_QWORD *)(v139 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139))
      {
        v141 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v137, v138, v139);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
      }
      *((_BYTE *)v187 + v182[12]) = *((_BYTE *)v180 + v182[12]);
      *((_BYTE *)v187 + v182[13]) = *((_BYTE *)v180 + v182[13]);
      *((_BYTE *)v187 + v182[14]) = *((_BYTE *)v180 + v182[14]);
      v142 = v182[15];
      v143 = (_QWORD *)((char *)v187 + v142);
      v144 = (_QWORD *)((char *)v180 + v142);
      *v143 = *v144;
      v143[1] = v144[1];
      *(_QWORD *)((char *)v187 + v182[16]) = *(_QWORD *)((char *)v180 + v182[16]);
      *((_BYTE *)v187 + v182[17]) = *((_BYTE *)v180 + v182[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v171;
      v36 = v185;
      v35 = v170;
      v33 = v189;
    }
    swift_storeEnumTagMultiPayload(v33, v18, v35);
    v145 = *(int *)(v191 + 36);
    v146 = &v33[v145];
    v147 = &v24[v145];
    v150 = type metadata accessor for PlaybackEnqueueMode(0, v36, v148, v149);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v150 - 8) + 8))(v146, v150);
    v151 = swift_getEnumCaseMultiPayload(v147, v150);
    v152 = *(_QWORD *)(v36 - 8);
    if (v151 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v146, v147, v36);
      v153 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v147, 1, v36))
      {
        v154 = type metadata accessor for Optional(0, v36);
        memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v146, v147, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v146, 0, 1, v36);
      }
      v153 = 0;
    }
    swift_storeEnumTagMultiPayload(v146, v150, v153);
    v14 = v184;
  }
  v33[*(int *)(v191 + 40)] = v24[*(int *)(v191 + 40)];
LABEL_75:
  v155 = v14[22];
  v156 = (_QWORD *)((char *)a1 + v155);
  v157 = (_QWORD *)((char *)a2 + v155);
  *v156 = *v157;
  v156[1] = v157[1];
  swift_retain();
  swift_release();
  v158 = v14[23];
  v159 = *(void **)((char *)a1 + v158);
  v160 = *(void **)((char *)a2 + v158);
  *(_QWORD *)((char *)a1 + v158) = v160;
  v161 = v160;

  if (a1 != a2)
  {
    v162 = *(int *)(v188 + 76);
    v163 = (_QWORD *)((char *)a1 + v162);
    v164 = (_QWORD *)((char *)a2 + v162);
    sub_10004FF60((uint64_t)a1 + v162, (uint64_t *)&unk_1011C72D0);
    v165 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v164, v165) == 1)
    {
      v166 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v163, v164, v166);
      v167 = 1;
    }
    else
    {
      *v163 = *v164;
      swift_retain();
      v167 = 0;
    }
    swift_storeEnumTagMultiPayload(v163, v165, v167);
  }
  return a1;
}

_OWORD *sub_10038F6AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  char *v100;
  char *v101;
  uint64_t v103;
  char *v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  v6 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  v106 = *(_QWORD *)(a3 + 16);
  v7 = v106;
  v107 = v6;
  v108 = v8;
  v109 = v9;
  v110 = v10;
  v111 = *(_OWORD *)(a3 + 56);
  v103 = v111;
  v105 = (int *)type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v106);
  v106 = v7;
  v11 = v105[21];
  v12 = (char *)a1 + v11;
  v13 = a2;
  v107 = v6;
  v108 = v8;
  v14 = (char *)a2 + v11;
  v109 = v10;
  v110 = v103;
  v15 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v106);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v15);
  v18 = type metadata accessor for SourcedPlaybackIntent(0, v15, WitnessTable, v17);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
  {
    v20 = type metadata accessor for Optional(0, v18);
    memcpy(v12, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    v21 = v13;
    v22 = a3;
    goto LABEL_37;
  }
  v97 = v6;
  v98 = v19;
  v104 = v12;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
  v101 = v14;
  v24 = v15;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v30 = EnumCaseMultiPayload;
    v29 = v97;
    v31 = type metadata accessor for MusicItemCollection(0, v97, *(_QWORD *)(v9 + 8));
    v26 = v14;
    v25 = v12;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v12, v26, v31);
    v28 = v30;
    goto LABEL_7;
  }
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v25 = v12;
    v26 = v101;
    v27 = EnumCaseMultiPayload;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v12, v101, v7);
    v28 = v27;
    v29 = v97;
LABEL_7:
    v21 = v13;
    v22 = a3;
    goto LABEL_30;
  }
  v96 = v15;
  v95 = EnumCaseMultiPayload;
  v21 = v13;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v12, v14, v7);
  v32 = type metadata accessor for Library.Context(255);
  v33 = *(int *)(swift_getTupleTypeMetadata2(0, v7, v32, " context ", 0) + 48);
  v34 = &v12[v33];
  v35 = &v14[v33];
  *(_QWORD *)v34 = *(_QWORD *)&v14[v33];
  v99 = (int *)v32;
  v100 = &v12[v33];
  v36 = *(int *)(v32 + 20);
  v37 = &v34[v36];
  v38 = v35;
  v39 = &v35[v36];
  v40 = type metadata accessor for Album(0);
  v41 = *(_QWORD *)(v40 - 8);
  v22 = a3;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v37, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v37, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
  }
  v29 = v97;
  v43 = v99[6];
  v44 = &v100[v43];
  v45 = &v38[v43];
  v46 = type metadata accessor for Artist(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v49 = v99[7];
  v50 = &v100[v49];
  v51 = &v38[v49];
  v52 = type metadata accessor for Composer(0);
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    v54 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  v55 = v99[8];
  v56 = &v100[v55];
  v57 = &v38[v55];
  v58 = type metadata accessor for Genre(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = sub_100007E8C(&qword_10119ED08);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  v61 = v99[9];
  v62 = &v100[v61];
  v63 = &v38[v61];
  v64 = type metadata accessor for Playlist(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  v67 = v99[10];
  v68 = &v100[v67];
  v69 = &v38[v67];
  v70 = type metadata accessor for TVShow(0);
  v71 = *(_QWORD *)(v70 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    v72 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  v73 = v99[11];
  v74 = &v100[v73];
  v75 = &v38[v73];
  v76 = type metadata accessor for TVSeason(0);
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  v25 = v104;
  v28 = v95;
  v26 = v101;
  v100[v99[12]] = v38[v99[12]];
  v100[v99[13]] = v38[v99[13]];
  v100[v99[14]] = v38[v99[14]];
  *(_OWORD *)&v100[v99[15]] = *(_OWORD *)&v38[v99[15]];
  *(_QWORD *)&v100[v99[16]] = *(_QWORD *)&v38[v99[16]];
  v100[v99[17]] = v38[v99[17]];
  v24 = v96;
LABEL_30:
  swift_storeEnumTagMultiPayload(v25, v24, v28);
  v79 = *(int *)(v18 + 36);
  v80 = &v25[v79];
  v81 = &v26[v79];
  v84 = type metadata accessor for PlaybackEnqueueMode(0, v29, v82, v83);
  v85 = swift_getEnumCaseMultiPayload(v81, v84);
  v86 = *(_QWORD *)(v29 - 8);
  if (v85 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v80, v81, v29);
    v87 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v81, 1, v29))
    {
      v88 = type metadata accessor for Optional(0, v29);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v80, v81, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v80, 0, 1, v29);
    }
    v87 = 0;
  }
  swift_storeEnumTagMultiPayload(v80, v84, v87);
  v104[*(int *)(v18 + 40)] = v101[*(int *)(v18 + 40)];
  (*(void (**)(void))(v98 + 56))();
LABEL_37:
  *(_OWORD *)((char *)a1 + v105[22]) = *(_OWORD *)((char *)v21 + v105[22]);
  *(_QWORD *)((char *)a1 + v105[23]) = *(_QWORD *)((char *)v21 + v105[23]);
  v89 = *(int *)(v22 + 76);
  v90 = (char *)a1 + v89;
  v91 = (char *)v21 + v89;
  v92 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v91, v92) == 1)
  {
    v93 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v90, v91, v93);
    swift_storeEnumTagMultiPayload(v90, v92, 1);
  }
  else
  {
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10038FEA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  char *v27;
  int v28;
  size_t v29;
  char *v30;
  uint64_t v31;
  uint64_t EnumCaseMultiPayload;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v164;
  unsigned int v165;
  unsigned int v166;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  int *v172;
  char *v173;
  char *v174;
  char *v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  __int128 v190;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(a3 + 32);
  v15 = *(_QWORD *)(a3 + 40);
  v16 = *(_QWORD *)(a3 + 48);
  v185 = *(_QWORD *)(a3 + 16);
  v13 = v185;
  v186 = v12;
  v187 = v14;
  v188 = v15;
  v189 = v16;
  v181 = a3;
  v190 = *(_OWORD *)(a3 + 56);
  v183 = v190;
  v17 = type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v185);
  v18 = *(int *)(v17 + 84);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v185 = v13;
  v186 = v12;
  v178 = v12;
  v187 = v14;
  v188 = v16;
  v189 = v183;
  v21 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v185);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v21);
  v182 = v21;
  v24 = type metadata accessor for SourcedPlaybackIntent(0, v21, WitnessTable, v23);
  v179 = *(_QWORD *)(v24 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v179 + 48);
  v184 = v19;
  v26 = v19;
  v27 = v20;
  LODWORD(v21) = v25(v26, 1, v24);
  v28 = v25(v20, 1, v24);
  if ((_DWORD)v21)
  {
    if (v28)
    {
      v29 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v24) - 8) + 64);
      v30 = v184;
LABEL_6:
      memcpy(v30, v20, v29);
      v31 = v17;
      goto LABEL_75;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v182);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v42 = EnumCaseMultiPayload;
      v37 = v178;
      v43 = type metadata accessor for MusicItemCollection(0, v178, *(_QWORD *)(v15 + 8));
      v33 = v184;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v184, v27, v43);
      v36 = v42;
      v31 = v17;
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v33 = v184;
      v34 = v20;
      v35 = EnumCaseMultiPayload;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v184, v34, v13);
      v36 = v35;
      v31 = v17;
      v37 = v178;
    }
    else
    {
      v165 = EnumCaseMultiPayload;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v184, v20, v13);
      v44 = type metadata accessor for Library.Context(255);
      v45 = *(int *)(swift_getTupleTypeMetadata2(0, v13, v44, " context ", 0) + 48);
      v46 = &v184[v45];
      *(_QWORD *)v46 = *(_QWORD *)&v27[v45];
      v172 = (int *)v44;
      v175 = &v27[v45];
      v47 = *(int *)(v44 + 20);
      v176 = v46;
      v48 = &v46[v47];
      v49 = &v175[v47];
      v50 = type metadata accessor for Album(0);
      v51 = *(_QWORD *)(v50 - 8);
      v164 = v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v64 = v172[6];
      v65 = (char *)v176 + v64;
      v66 = &v175[v64];
      v67 = type metadata accessor for Artist(0);
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        v69 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      v70 = v172[7];
      v71 = (char *)v176 + v70;
      v72 = &v175[v70];
      v73 = type metadata accessor for Composer(0);
      v74 = *(_QWORD *)(v73 - 8);
      v31 = v164;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
      {
        v75 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v71, v72, v73);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      }
      v76 = v172[8];
      v77 = (char *)v176 + v76;
      v78 = &v175[v76];
      v79 = type metadata accessor for Genre(0);
      v80 = *(_QWORD *)(v79 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
      {
        v81 = sub_100007E8C(&qword_10119ED08);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      }
      v82 = v172[9];
      __dst = (char *)v176 + v82;
      v83 = &v175[v82];
      v84 = type metadata accessor for Playlist(0);
      v85 = *(_QWORD *)(v84 - 8);
      v37 = v178;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
      {
        v86 = sub_100007E8C(&qword_1011A30F0);
        memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(__dst, v83, v84);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
      }
      v87 = v172[10];
      __dsta = (char *)v176 + v87;
      v88 = &v175[v87];
      v89 = type metadata accessor for TVShow(0);
      v90 = *(_QWORD *)(v89 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
      {
        v91 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(__dsta, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(__dsta, v88, v89);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(__dsta, 0, 1, v89);
      }
      v92 = v172[11];
      __dstb = (char *)v176 + v92;
      v93 = &v175[v92];
      v94 = type metadata accessor for TVSeason(0);
      v95 = *(_QWORD *)(v94 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
      {
        v96 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(__dstb, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(__dstb, v93, v94);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(__dstb, 0, 1, v94);
      }
      v33 = v184;
      *((_BYTE *)v176 + v172[12]) = v175[v172[12]];
      *((_BYTE *)v176 + v172[13]) = v175[v172[13]];
      *((_BYTE *)v176 + v172[14]) = v175[v172[14]];
      *(_OWORD *)((char *)v176 + v172[15]) = *(_OWORD *)&v175[v172[15]];
      *(_QWORD *)((char *)v176 + v172[16]) = *(_QWORD *)&v175[v172[16]];
      *((_BYTE *)v176 + v172[17]) = v175[v172[17]];
      v36 = v165;
    }
    swift_storeEnumTagMultiPayload(v33, v182, v36);
    v97 = *(int *)(v24 + 36);
    v98 = &v33[v97];
    v99 = &v27[v97];
    v102 = type metadata accessor for PlaybackEnqueueMode(0, v37, v100, v101);
    v103 = swift_getEnumCaseMultiPayload(v99, v102);
    v104 = *(_QWORD *)(v37 - 8);
    if (v103 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v98, v99, v37);
      v105 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v99, 1, v37))
      {
        v106 = type metadata accessor for Optional(0, v37);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v98, v99, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v98, 0, 1, v37);
      }
      v105 = 0;
    }
    swift_storeEnumTagMultiPayload(v98, v102, v105);
    v184[*(int *)(v24 + 40)] = v27[*(int *)(v24 + 40)];
    (*(void (**)(void))(v179 + 56))();
  }
  else
  {
    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v179 + 8))(v184, v24);
      v29 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v24) - 8) + 64);
      v30 = v184;
      goto LABEL_6;
    }
    v31 = v17;
    v38 = v184;
    if (a1 != a2)
    {
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v182 - 8) + 8))(v184, v182);
      v39 = swift_getEnumCaseMultiPayload(v20, v182);
      v40 = v39;
      v174 = v20;
      if ((_DWORD)v39 == 2)
      {
        v41 = v178;
        v53 = type metadata accessor for MusicItemCollection(0, v178, *(_QWORD *)(v15 + 8));
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v184, v27, v53);
      }
      else if ((_DWORD)v39 == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v184, v20, v13);
        v41 = v178;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v184, v20, v13);
        v54 = type metadata accessor for Library.Context(255);
        v55 = *(int *)(swift_getTupleTypeMetadata2(0, v13, v54, " context ", 0) + 48);
        v56 = &v184[v55];
        v57 = &v20[v55];
        *(_QWORD *)v56 = *(_QWORD *)&v20[v55];
        v180 = (int *)v54;
        v58 = *(int *)(v54 + 20);
        v177 = v56;
        v59 = &v56[v58];
        v60 = &v57[v58];
        v61 = type metadata accessor for Album(0);
        v62 = *(_QWORD *)(v61 - 8);
        v166 = v40;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
        {
          v63 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        }
        v107 = v180[6];
        v108 = (char *)v177 + v107;
        v109 = &v57[v107];
        v110 = type metadata accessor for Artist(0);
        v111 = *(_QWORD *)(v110 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
        {
          v112 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v108, v109, v110);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
        }
        v113 = v180[7];
        v114 = (char *)v177 + v113;
        v115 = &v57[v113];
        v116 = type metadata accessor for Composer(0);
        v117 = *(_QWORD *)(v116 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
        {
          v118 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
        }
        v119 = v180[8];
        v120 = (char *)v177 + v119;
        v121 = &v57[v119];
        v122 = type metadata accessor for Genre(0);
        v123 = *(_QWORD *)(v122 - 8);
        v41 = v178;
        v173 = v57;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
        {
          v124 = sub_100007E8C(&qword_10119ED08);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v120, v121, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
        }
        v125 = v180[9];
        v126 = (char *)v177 + v125;
        v127 = &v173[v125];
        v128 = type metadata accessor for Playlist(0);
        v129 = *(_QWORD *)(v128 - 8);
        v40 = v166;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
        {
          v130 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v126, v127, v128);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
        }
        v131 = v180[10];
        __dstc = (char *)v177 + v131;
        v132 = &v173[v131];
        v133 = type metadata accessor for TVShow(0);
        v134 = *(_QWORD *)(v133 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
        {
          v135 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(__dstc, v132, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v134 + 32))(__dstc, v132, v133);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(__dstc, 0, 1, v133);
        }
        v136 = v180[11];
        __dstd = (char *)v177 + v136;
        v137 = &v173[v136];
        v138 = type metadata accessor for TVSeason(0);
        v139 = *(_QWORD *)(v138 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
        {
          v140 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(__dstd, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v139 + 32))(__dstd, v137, v138);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(__dstd, 0, 1, v138);
        }
        v38 = v184;
        *((_BYTE *)v177 + v180[12]) = v173[v180[12]];
        *((_BYTE *)v177 + v180[13]) = v173[v180[13]];
        *((_BYTE *)v177 + v180[14]) = v173[v180[14]];
        *(_OWORD *)((char *)v177 + v180[15]) = *(_OWORD *)&v173[v180[15]];
        *(_QWORD *)((char *)v177 + v180[16]) = *(_QWORD *)&v173[v180[16]];
        *((_BYTE *)v177 + v180[17]) = v173[v180[17]];
        v27 = v174;
      }
      swift_storeEnumTagMultiPayload(v38, v182, v40);
      v141 = *(int *)(v24 + 36);
      v142 = &v38[v141];
      v143 = &v27[v141];
      v146 = type metadata accessor for PlaybackEnqueueMode(0, v41, v144, v145);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v146 - 8) + 8))(v142, v146);
      v147 = swift_getEnumCaseMultiPayload(v143, v146);
      v148 = *(_QWORD *)(v41 - 8);
      if (v147 == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v142, v143, v41);
        v149 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v143, 1, v41))
        {
          v150 = type metadata accessor for Optional(0, v41);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v142, v143, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v142, 0, 1, v41);
        }
        v149 = 0;
      }
      v27 = v174;
      swift_storeEnumTagMultiPayload(v142, v146, v149);
      v38 = v184;
    }
    v38[*(int *)(v24 + 40)] = v27[*(int *)(v24 + 40)];
  }
LABEL_75:
  v151 = *(int *)(v31 + 88);
  v152 = (_QWORD *)((char *)a1 + v151);
  v153 = (_QWORD *)((char *)a2 + v151);
  v155 = *v153;
  v154 = v153[1];
  *v152 = v155;
  v152[1] = v154;
  swift_release();
  v156 = *(int *)(v31 + 92);
  v157 = *(void **)((char *)a1 + v156);
  *(_QWORD *)((char *)a1 + v156) = *(_QWORD *)((char *)a2 + v156);

  if (a1 != a2)
  {
    v158 = *(int *)(v181 + 76);
    v159 = (char *)a1 + v158;
    v160 = (char *)a2 + v158;
    sub_10004FF60((uint64_t)a1 + v158, (uint64_t *)&unk_1011C72D0);
    v161 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v160, v161) == 1)
    {
      v162 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v159, v160, v162);
      swift_storeEnumTagMultiPayload(v159, v161, 1);
    }
    else
    {
      memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100390D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100390D98);
}

uint64_t sub_100390D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _OWORD v12[3];
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 64);
  v7 = *(_OWORD *)(a3 + 32);
  v12[0] = *(_OWORD *)(a3 + 16);
  v12[1] = v7;
  v12[2] = *(_OWORD *)(a3 + 48);
  v13 = v6;
  v8 = type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)v12);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, a2, v8);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 76), a2, v11);
}

uint64_t sub_100390E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100390E44);
}

uint64_t sub_100390E44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;

  v8 = *(_QWORD *)(a4 + 64);
  v9 = *(_OWORD *)(a4 + 32);
  v14[0] = *(_OWORD *)(a4 + 16);
  v14[1] = v9;
  v14[2] = *(_OWORD *)(a4 + 48);
  v15 = v8;
  v10 = type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)v14);
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, a2, a2, v10);
  v13 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1 + *(int *)(a4 + 76), a2, a2, v13);
}

uint64_t type metadata accessor for ContainerHeaderRow(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ContainerHeaderRow);
}

uint64_t sub_100390EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 112);
}

void sub_100390F00(uint64_t a1)
{
  void *v2;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(void **)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a1 + 16);
  v11 = v3;
  v12 = *(_OWORD *)(a1 + 48);
  v13 = v2;
  v4 = type metadata accessor for ContainerTrackRow.ViewModel(319, (uint64_t)&v10);
  if (v5 <= 0x3F)
  {
    *(_QWORD *)&v10 = *(_QWORD *)(v4 - 8) + 64;
    *((_QWORD *)&v10 + 1) = &unk_100EB7638;
    *(_QWORD *)&v11 = &unk_100EB7650;
    *((_QWORD *)&v11 + 1) = &unk_100EB7668;
    *(_QWORD *)&v12 = &unk_100EB7638;
    *((_QWORD *)&v12 + 1) = &unk_100EB7638;
    v13 = &unk_100EB7680;
    v14 = &unk_100EB7638;
    v15 = &unk_100EB7638;
    v16 = &unk_100EB7638;
    v17 = &unk_100EB7680;
    v18 = &unk_100EB7680;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v7 <= 0x3F)
    {
      v19 = *(_QWORD *)(v6 - 8) + 64;
      sub_1000E3A44(319, (unint64_t *)&unk_1011A0428, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v9 <= 0x3F)
      {
        v20 = *(_QWORD *)(v8 - 8) + 64;
        swift_initStructMetadata(a1, 0, 14, &v10, a1 + 72);
      }
    }
  }
}

char *sub_100391020(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t WitnessTable;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t EnumCaseMultiPayload;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t, __n128);
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  int *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  void *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  void *v193;
  char v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v247;
  unsigned int v248;
  uint64_t v249;
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  uint64_t v258;
  void (*v259)(char *, char *, uint64_t);
  char *v260;
  void (*v261)(char *, char *, uint64_t);
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  char *v265;
  _QWORD *v266;
  char *v267;
  uint64_t v268;
  int *v269;
  unsigned int (*v270)(char *, uint64_t);
  unsigned int (*v271)(char *, uint64_t, uint64_t);
  uint64_t v272;
  int *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  _QWORD *v280;
  __int128 v281;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v9 = *(_QWORD *)(a3 + 16);
    v8 = *(_QWORD *)(a3 + 24);
    v11 = *(_QWORD *)(a3 + 32);
    v10 = *(_QWORD **)(a3 + 40);
    v12 = *(_QWORD **)(a3 + 48);
    swift_bridgeObjectRetain();
    v276 = v9;
    v277 = v8;
    v266 = v12;
    v268 = v11;
    v278 = v11;
    v279 = v10;
    __dst = v10;
    v280 = v12;
    v273 = (int *)a3;
    v264 = *(_OWORD *)(a3 + 56);
    v281 = v264;
    v13 = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v276);
    v14 = *(_QWORD *)(v8 - 8);
    v274 = v8;
    v261 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v261(&a1[v13[19]], &a2[v13[19]], v8);
    v259 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v259(&a1[v13[20]], &a2[v13[20]], v9);
    v15 = v13[21];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = type metadata accessor for ArtworkImage.ViewModel(0);
    v263 = *(_QWORD *)(v18 - 8);
    v271 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v263 + 48);
    v258 = v14;
    if (v271(v17, 1, v18))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
      v22 = *(int *)(v18 + 20);
      v23 = &v16[v22];
      v24 = &v17[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v16, 0, 1, v18);
    }
    a1[v13[22]] = a2[v13[22]];
    *(_QWORD *)&a1[v13[23]] = *(_QWORD *)&a2[v13[23]];
    v28 = v13[24];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v32 = *(_QWORD *)(v31 - 8);
    v275 = v31;
    v270 = *(unsigned int (**)(char *, uint64_t))(v32 + 48);
    v272 = v18;
    if (v270(v30, 10))
    {
      v33 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = type metadata accessor for Playlist.Variant(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v30, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v29, v30, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 10, v275);
    }
    v37 = v13[25];
    v38 = &a1[v37];
    v39 = &a2[v37];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = v13[26];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v44 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = v44;
    v45 = v13[27];
    v46 = &a1[v45];
    v47 = &a2[v45];
    v46[8] = v47[8];
    *(_QWORD *)v46 = *(_QWORD *)v47;
    v48 = v13[28];
    v49 = &a1[v48];
    v50 = &a2[v48];
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = v50[8];
    v51 = v13[29];
    v52 = &a1[v51];
    v53 = &a2[v51];
    v54 = *(_QWORD *)&a2[v51];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v54)
    {
      v55 = *((_QWORD *)v53 + 1);
      *(_QWORD *)v52 = v54;
      *((_QWORD *)v52 + 1) = v55;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
    }
    v56 = v13[30];
    v57 = &a1[v56];
    v58 = &a2[v56];
    v59 = type metadata accessor for ContentRating(0);
    v60 = *(_QWORD *)(v59 - 8);
    v61 = v274;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v62 = sub_100007E8C(&qword_1011B8D50);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v63 = v13[31];
    v64 = &a1[v63];
    v65 = &a2[v63];
    v66 = type metadata accessor for MusicFavoriteStatus(0);
    v67 = *(_QWORD *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      v68 = sub_100007E8C(&qword_1011A19A0);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    v69 = v13[32];
    v70 = &a1[v69];
    v71 = &a2[v69];
    v72 = type metadata accessor for GenericMusicItem(0);
    v73 = *(_QWORD *)(v72 - 8);
    v262 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      v74 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
    v75 = v13[33];
    v76 = &a1[v75];
    v77 = &a2[v75];
    v276 = v9;
    v277 = v274;
    v278 = v268;
    v279 = v266;
    v280 = (_QWORD *)v264;
    v78 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v276);
    WitnessTable = swift_getWitnessTable(&unk_100EAF138, v78);
    v81 = type metadata accessor for SourcedPlaybackIntent(0, v78, WitnessTable, v80);
    v82 = *(_QWORD *)(v81 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v77, 1, v81))
    {
      v83 = type metadata accessor for Optional(0, v81);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v77, v78);
      v249 = v82;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v87 = EnumCaseMultiPayload;
        v88 = type metadata accessor for MusicItemCollection(0, v274, __dst[1]);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v76, v77, v88);
        v86 = v87;
      }
      else if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        v85 = EnumCaseMultiPayload;
        v259(v76, v77, v9);
        v86 = v85;
      }
      else
      {
        v248 = EnumCaseMultiPayload;
        v259(v76, v77, v9);
        v89 = type metadata accessor for Library.Context(255);
        v90 = *(int *)(swift_getTupleTypeMetadata2(0, v9, v89, " context ", 0) + 48);
        v260 = v76;
        v91 = &v76[v90];
        v247 = v77;
        v92 = &v77[v90];
        *(_QWORD *)v91 = *(_QWORD *)&v77[v90];
        v267 = &v76[v90];
        v269 = (int *)v89;
        v93 = *(int *)(v89 + 20);
        __dsta = &v91[v93];
        v265 = v92;
        v94 = &v92[v93];
        v95 = type metadata accessor for Album(0);
        v96 = *(_QWORD *)(v95 - 8);
        v97 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v96 + 48);
        v98 = swift_retain();
        if (v97(v94, 1, v95, v98))
        {
          v99 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(__dsta, v94, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v96 + 16))(__dsta, v94, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(__dsta, 0, 1, v95);
        }
        v100 = v269[6];
        __dstb = &v267[v100];
        v101 = &v265[v100];
        v102 = type metadata accessor for Artist(0);
        v103 = *(_QWORD *)(v102 - 8);
        v61 = v274;
        v77 = v247;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
        {
          v104 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(__dstb, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v103 + 16))(__dstb, v101, v102);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(__dstb, 0, 1, v102);
        }
        v105 = v269[7];
        __dstc = &v267[v105];
        v106 = &v265[v105];
        v107 = type metadata accessor for Composer(0);
        v108 = *(_QWORD *)(v107 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
        {
          v109 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(__dstc, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(__dstc, v106, v107);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(__dstc, 0, 1, v107);
        }
        v110 = v269[8];
        __dstd = &v267[v110];
        v111 = &v265[v110];
        v112 = type metadata accessor for Genre(0);
        v113 = *(_QWORD *)(v112 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
        {
          v114 = sub_100007E8C(&qword_10119ED08);
          memcpy(__dstd, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v113 + 16))(__dstd, v111, v112);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(__dstd, 0, 1, v112);
        }
        v115 = v269[9];
        __dste = &v267[v115];
        v116 = &v265[v115];
        v117 = type metadata accessor for Playlist(0);
        v118 = *(_QWORD *)(v117 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
        {
          v119 = sub_100007E8C(&qword_1011A30F0);
          memcpy(__dste, v116, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v118 + 16))(__dste, v116, v117);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(__dste, 0, 1, v117);
        }
        v120 = v269[10];
        __dstf = &v267[v120];
        v121 = &v265[v120];
        v122 = type metadata accessor for TVShow(0);
        v123 = *(_QWORD *)(v122 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
        {
          v124 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(__dstf, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v123 + 16))(__dstf, v121, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(__dstf, 0, 1, v122);
        }
        v125 = v269[11];
        __dstg = &v267[v125];
        v126 = &v265[v125];
        v127 = type metadata accessor for TVSeason(0);
        v128 = *(_QWORD *)(v127 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
        {
          v129 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(__dstg, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v128 + 16))(__dstg, v126, v127);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(__dstg, 0, 1, v127);
        }
        v76 = v260;
        v267[v269[12]] = v265[v269[12]];
        v267[v269[13]] = v265[v269[13]];
        v267[v269[14]] = v265[v269[14]];
        v130 = v269[15];
        v131 = &v267[v130];
        v132 = &v265[v130];
        v133 = *((_QWORD *)v132 + 1);
        *(_QWORD *)v131 = *(_QWORD *)v132;
        *((_QWORD *)v131 + 1) = v133;
        *(_QWORD *)&v267[v269[16]] = *(_QWORD *)&v265[v269[16]];
        v267[v269[17]] = v265[v269[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v86 = v248;
      }
      swift_storeEnumTagMultiPayload(v76, v78, v86);
      v134 = *(int *)(v81 + 36);
      v135 = &v76[v134];
      v136 = &v77[v134];
      v139 = type metadata accessor for PlaybackEnqueueMode(0, v61, v137, v138);
      if (swift_getEnumCaseMultiPayload(v136, v139) == 1)
      {
        v261(v135, v136, v61);
        v140 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48))(v136, 1, v61))
        {
          v141 = type metadata accessor for Optional(0, v61);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        }
        else
        {
          v261(v135, v136, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v258 + 56))(v135, 0, 1, v61);
        }
        v140 = 0;
      }
      swift_storeEnumTagMultiPayload(v135, v139, v140);
      v76[*(int *)(v81 + 40)] = v77[*(int *)(v81 + 40)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v249 + 56))(v76, 0, 1, v81);
    }
    v142 = v13[34];
    v143 = &a1[v142];
    v144 = &a2[v142];
    v145 = *((_QWORD *)v144 + 1);
    *(_QWORD *)v143 = *(_QWORD *)v144;
    *((_QWORD *)v143 + 1) = v145;
    *(_QWORD *)&a1[v13[35]] = *(_QWORD *)&a2[v13[35]];
    *(_QWORD *)&a1[v13[36]] = *(_QWORD *)&a2[v13[36]];
    v146 = v13[37];
    v147 = *(void **)&a2[v146];
    *(_QWORD *)&a1[v146] = v147;
    v148 = v13[38];
    v149 = &a1[v148];
    v150 = &a2[v148];
    swift_retain();
    swift_retain();
    swift_retain();
    v151 = v147;
    if (v271(v150, 1, v272))
    {
      v152 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
    }
    else
    {
      v153 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v149, v150, v153);
      v154 = *(int *)(v272 + 20);
      v155 = &v149[v154];
      v156 = &v150[v154];
      v157 = type metadata accessor for Artwork.CropStyle(0);
      v158 = *(_QWORD *)(v157 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
      {
        v159 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v155, v156, v157);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v149, 0, 1, v272);
    }
    v160 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v161 = v160[5];
    v162 = &v149[v161];
    v163 = &v150[v161];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v270)(&v150[v161], 10, v275))
    {
      v164 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
    }
    else
    {
      v165 = type metadata accessor for Playlist.Variant(0);
      v166 = *(_QWORD *)(v165 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v163, 1, v165))
      {
        v167 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v162, v163, v165);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v162, 0, 1, v165);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v262 + 56))(v162, 0, 10, v275);
    }
    *(_QWORD *)&v149[v160[6]] = *(_QWORD *)&v150[v160[6]];
    v168 = v160[7];
    v169 = &v149[v168];
    v170 = &v150[v168];
    *(_OWORD *)v169 = *(_OWORD *)v170;
    v169[16] = v170[16];
    v171 = (int *)type metadata accessor for ContextualPreview.Data(0);
    v172 = v171[5];
    v173 = &v149[v172];
    v174 = &v150[v172];
    v176 = *(_QWORD *)v174;
    v175 = *((_QWORD *)v174 + 1);
    *(_QWORD *)v173 = v176;
    *((_QWORD *)v173 + 1) = v175;
    v177 = v171[6];
    v178 = &v149[v177];
    v179 = &v150[v177];
    v180 = *((_QWORD *)v179 + 1);
    *(_QWORD *)v178 = *(_QWORD *)v179;
    *((_QWORD *)v178 + 1) = v180;
    v181 = v171[7];
    v182 = &v149[v181];
    v183 = &v150[v181];
    v184 = *((_QWORD *)v183 + 1);
    *(_QWORD *)v182 = *(_QWORD *)v183;
    *((_QWORD *)v182 + 1) = v184;
    v149[v171[8]] = v150[v171[8]];
    v149[v171[9]] = v150[v171[9]];
    a1[v13[39]] = a2[v13[39]];
    a1[v13[40]] = a2[v13[40]];
    a1[v13[41]] = a2[v13[41]];
    v185 = v273[19];
    v186 = v273[20];
    v187 = &a1[v185];
    v188 = &a2[v185];
    *v187 = *v188;
    *((_QWORD *)v187 + 1) = *((_QWORD *)v188 + 1);
    v189 = *(void **)&a2[v186];
    *(_QWORD *)&a1[v186] = v189;
    v190 = v273[21];
    v191 = &a1[v190];
    v192 = &a2[v190];
    v193 = *(void **)v192;
    v194 = v192[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v195 = v189;
    sub_1000A4100(v193, v194);
    *(_QWORD *)v191 = v193;
    v191[8] = v194;
    v196 = v273[22];
    v197 = v273[23];
    v198 = &a1[v196];
    v199 = (uint64_t *)&a2[v196];
    v200 = *v199;
    v201 = v199[1];
    *(_QWORD *)v198 = v200;
    *((_QWORD *)v198 + 1) = v201;
    v202 = &a1[v197];
    v203 = (uint64_t *)&a2[v197];
    v205 = *v203;
    v204 = v203[1];
    *(_QWORD *)v202 = v205;
    *((_QWORD *)v202 + 1) = v204;
    v206 = v273[24];
    v207 = &a1[v206];
    v208 = &a2[v206];
    v209 = *(_QWORD *)v208;
    v210 = *((_QWORD *)v208 + 1);
    LOBYTE(v180) = v208[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v209, v210);
    *(_QWORD *)v207 = v209;
    *((_QWORD *)v207 + 1) = v210;
    v207[16] = v180;
    v211 = v273[25];
    v212 = v273[26];
    v213 = &a1[v211];
    v214 = (uint64_t *)&a2[v211];
    v215 = *v214;
    v216 = v214[1];
    *(_QWORD *)v213 = v215;
    *((_QWORD *)v213 + 1) = v216;
    v217 = &a1[v212];
    v218 = (uint64_t *)&a2[v212];
    v220 = *v218;
    v219 = v218[1];
    *(_QWORD *)v217 = v220;
    *((_QWORD *)v217 + 1) = v219;
    v221 = v273[27];
    v222 = v273[28];
    v223 = &a1[v221];
    v224 = (uint64_t *)&a2[v221];
    v226 = *v224;
    v225 = v224[1];
    *(_QWORD *)v223 = v226;
    *((_QWORD *)v223 + 1) = v225;
    v227 = &a1[v222];
    v228 = *(_QWORD *)&a2[v222];
    v229 = *(_QWORD *)&a2[v222 + 8];
    LOBYTE(v184) = a2[v222 + 16];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v228, v229, v184);
    *(_QWORD *)v227 = v228;
    *((_QWORD *)v227 + 1) = v229;
    v227[16] = v184;
    v230 = v273[29];
    v231 = &a1[v230];
    v232 = &a2[v230];
    v233 = *(_QWORD *)v232;
    v234 = *((_QWORD *)v232 + 1);
    LOBYTE(v228) = v232[16];
    sub_1000A411C(*(_QWORD *)v232, v234, v228);
    *(_QWORD *)v231 = v233;
    *((_QWORD *)v231 + 1) = v234;
    v231[16] = v228;
    v235 = v273[30];
    v236 = &a1[v235];
    v237 = &a2[v235];
    v238 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v237, v238) == 1)
    {
      v239 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 16))(v236, v237, v239);
      v240 = 1;
    }
    else
    {
      *(_QWORD *)v236 = *(_QWORD *)v237;
      swift_retain();
      v240 = 0;
    }
    swift_storeEnumTagMultiPayload(v236, v238, v240);
    v241 = v273[31];
    v242 = &a1[v241];
    v243 = &a2[v241];
    v244 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16))(v242, v243, v244);
    v245 = sub_100007E8C(&qword_1011A03B8);
    *(_QWORD *)&v242[*(int *)(v245 + 28)] = *(_QWORD *)&v243[*(int *)(v245 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for ContainerTrackRow.ViewModel(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ContainerTrackRow.ViewModel);
}

double sub_100392180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t WitnessTable;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double result;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  __int128 v82;
  int *v83;
  unsigned int (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v88 = *(_QWORD *)(a2 + 16);
  v5 = v88;
  v89 = v4;
  v90 = v7;
  v91 = v6;
  v78 = v6;
  v92 = v8;
  v82 = *(_OWORD *)(a2 + 56);
  v93 = v82;
  v9 = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v88);
  v80 = *(_QWORD *)(v4 - 8);
  v81 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
  v81(a1 + v9[19], v4);
  v79 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v79(a1 + v9[20], v5);
  v10 = a1 + v9[21];
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  v86 = *(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  v87 = v11;
  if (!v86(v10, 1))
  {
    v12 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    v13 = v10 + *(int *)(v87 + 20);
    v14 = type metadata accessor for Artwork.CropStyle(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  v16 = a1 + v9[24];
  v17 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v84 = *(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
  v85 = v17;
  if (!v84(v16, 10))
  {
    v18 = type metadata accessor for Playlist.Variant(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v9[25] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v9[26] + 8));
  if (*(_QWORD *)(a1 + v9[29]))
    swift_release();
  v20 = a1 + v9[30];
  v21 = type metadata accessor for ContentRating(0);
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v23 = a1 + v9[31];
  v24 = type metadata accessor for MusicFavoriteStatus(0);
  v25 = *(_QWORD *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  v26 = a1 + v9[32];
  v27 = type metadata accessor for GenericMusicItem(0);
  v28 = *(_QWORD *)(v27 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  v29 = a1 + v9[33];
  v88 = v5;
  v89 = v4;
  v90 = v7;
  v91 = v8;
  v92 = v82;
  v30 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v88);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v30);
  v33 = type metadata accessor for SourcedPlaybackIntent(0, v30, WitnessTable, v32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v29, 1, v33))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v29, v30);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v60 = type metadata accessor for MusicItemCollection(0, v4, *(_QWORD *)(v78 + 8));
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v29, v60);
        break;
      case 1:
        v79(v29, v5);
        break;
      case 0:
        v79(v29, v5);
        v37 = type metadata accessor for Library.Context(255);
        v38 = v29 + *(int *)(swift_getTupleTypeMetadata2(0, v5, v37, " context ", 0) + 48);
        swift_release();
        v83 = (int *)v37;
        v39 = v38 + *(int *)(v37 + 20);
        v40 = type metadata accessor for Album(0);
        v41 = *(_QWORD *)(v40 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
        v42 = v38 + v83[6];
        v43 = type metadata accessor for Artist(0);
        v44 = *(_QWORD *)(v43 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
        v45 = v38 + v83[7];
        v46 = type metadata accessor for Composer(0);
        v47 = *(_QWORD *)(v46 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
          (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
        v48 = v38 + v83[8];
        v49 = type metadata accessor for Genre(0);
        v50 = *(_QWORD *)(v49 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
        v51 = v38 + v83[9];
        v52 = type metadata accessor for Playlist(0);
        v53 = *(_QWORD *)(v52 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
        v54 = v38 + v83[10];
        v55 = type metadata accessor for TVShow(0);
        v56 = *(_QWORD *)(v55 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
        v57 = v38 + v83[11];
        v58 = type metadata accessor for TVSeason(0);
        v59 = *(_QWORD *)(v58 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
          (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
        swift_bridgeObjectRelease(*(_QWORD *)(v38 + v83[15] + 8));
        swift_bridgeObjectRelease(*(_QWORD *)(v38 + v83[16]));
        break;
    }
    v61 = v29 + *(int *)(v33 + 36);
    v62 = type metadata accessor for PlaybackEnqueueMode(0, v4, v35, v36);
    if (swift_getEnumCaseMultiPayload(v61, v62) == 1
      || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v61, 1, v4))
    {
      v81(v61, v4);
    }
  }
  swift_release();
  swift_release();
  swift_release();

  v63 = a1 + v9[38];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86)(v63, 1, v87))
  {
    v64 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
    v65 = v63 + *(int *)(v87 + 20);
    v66 = type metadata accessor for Artwork.CropStyle(0);
    v67 = *(_QWORD *)(v66 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
  }
  v68 = v63 + *(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 20);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v84)(v68, 10, v85))
  {
    v69 = type metadata accessor for Playlist.Variant(0);
    v70 = *(_QWORD *)(v69 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
  }
  v71 = (int *)type metadata accessor for ContextualPreview.Data(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v63 + v71[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v63 + v71[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v63 + v71[7] + 8));
  swift_release();

  sub_1000A4224(*(id *)(a1 + *(int *)(a2 + 84)), *(_BYTE *)(a1 + *(int *)(a2 + 84) + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + *(int *)(a2 + 96)), *(_QWORD *)(a1 + *(int *)(a2 + 96) + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + *(int *)(a2 + 112)), *(_QWORD *)(a1 + *(int *)(a2 + 112) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 112) + 16));
  sub_1000A4240(*(_QWORD *)(a1 + *(int *)(a2 + 116)), *(_QWORD *)(a1 + *(int *)(a2 + 116) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 116) + 16));
  v72 = a1 + *(int *)(a2 + 120);
  v73 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
  {
    v74 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v72, v74);
  }
  else
  {
    swift_release();
  }
  v75 = a1 + *(int *)(a2 + 124);
  v76 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v75, v76);
  sub_100007E8C(&qword_1011A03B8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_100392A10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t WitnessTable;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t EnumCaseMultiPayload;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t, __n128);
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  int *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  void *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  void *v191;
  char v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v245;
  char *__dst;
  uint64_t v247;
  uint64_t v248;
  unsigned int v249;
  uint64_t v250;
  void (*v251)(char *, char *, uint64_t);
  char *v252;
  void (*v253)(char *, char *, void *);
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  char *v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  int *v261;
  unsigned int (*v262)(char *, uint64_t);
  unsigned int (*v263)(char *, uint64_t, uint64_t);
  uint64_t v264;
  void *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  uint64_t v272;
  int *v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  __int128 v279;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v8 = *(_QWORD *)(a3 + 16);
  v7 = *(void **)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(a3 + 40);
  v11 = *(_QWORD *)(a3 + 48);
  swift_bridgeObjectRetain();
  v274 = v8;
  v275 = v7;
  v258 = v11;
  v260 = v10;
  v276 = v10;
  v277 = v9;
  v248 = v9;
  v278 = v11;
  v273 = (int *)a3;
  v256 = *(_OWORD *)(a3 + 56);
  v279 = v256;
  v12 = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v274);
  v13 = *((_QWORD *)v7 - 1);
  v265 = v7;
  v253 = *(void (**)(char *, char *, void *))(v13 + 16);
  v253(&a1[v12[19]], &a2[v12[19]], v7);
  v251 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v251(&a1[v12[20]], &a2[v12[20]], v8);
  v14 = v12[21];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  v255 = *(_QWORD *)(v17 - 8);
  v263 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v255 + 48);
  v250 = v13;
  if (v263(v16, 1, v17))
  {
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
    v20 = *(int *)(v17 + 20);
    v21 = &v15[v20];
    v22 = &v16[v20];
    v23 = type metadata accessor for Artwork.CropStyle(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v15, 0, 1, v17);
  }
  a1[v12[22]] = a2[v12[22]];
  *(_QWORD *)&a1[v12[23]] = *(_QWORD *)&a2[v12[23]];
  v26 = v12[24];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v30 = *(_QWORD *)(v29 - 8);
  v272 = v29;
  v262 = *(unsigned int (**)(char *, uint64_t))(v30 + 48);
  v264 = v17;
  if (v262(v28, 10))
  {
    v31 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for Playlist.Variant(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v28, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v27, v28, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v27, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 10, v272);
  }
  v35 = v12[25];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = v12[26];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = v42;
  v43 = v12[27];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v44[8] = v45[8];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v46 = v12[28];
  v47 = &a1[v46];
  v48 = &a2[v46];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  v49 = v12[29];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = *(_QWORD *)&a2[v49];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v52)
  {
    v53 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = v52;
    *((_QWORD *)v50 + 1) = v53;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
  }
  v54 = v12[30];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = type metadata accessor for ContentRating(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = (uint64_t)v265;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v60 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v61 = v12[31];
  v62 = &a1[v61];
  v63 = &a2[v61];
  v64 = type metadata accessor for MusicFavoriteStatus(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  v67 = v12[32];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = type metadata accessor for GenericMusicItem(0);
  v71 = *(_QWORD *)(v70 - 8);
  v254 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    v72 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  v73 = v12[33];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v274 = v8;
  v275 = v265;
  v276 = v260;
  v277 = v258;
  v278 = v256;
  v76 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v274);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v76);
  v79 = type metadata accessor for SourcedPlaybackIntent(0, v76, WitnessTable, v78);
  v80 = *(_QWORD *)(v79 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v75, 1, v79))
  {
    v81 = type metadata accessor for Optional(0, v79);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v75, v76);
    v247 = v80;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v85 = EnumCaseMultiPayload;
      v86 = type metadata accessor for MusicItemCollection(0, v265, *(_QWORD *)(v248 + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v74, v75, v86);
      v84 = v85;
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v83 = EnumCaseMultiPayload;
      v251(v74, v75, v8);
      v84 = v83;
    }
    else
    {
      v249 = EnumCaseMultiPayload;
      v251(v74, v75, v8);
      v87 = type metadata accessor for Library.Context(255);
      v88 = *(int *)(swift_getTupleTypeMetadata2(0, v8, v87, " context ", 0) + 48);
      v252 = v74;
      v89 = &v74[v88];
      v90 = &v75[v88];
      *(_QWORD *)v89 = *(_QWORD *)&v75[v88];
      v259 = &v74[v88];
      v261 = (int *)v87;
      v91 = *(int *)(v87 + 20);
      v245 = v75;
      __dst = &v89[v91];
      v257 = v90;
      v92 = &v90[v91];
      v93 = type metadata accessor for Album(0);
      v94 = *(_QWORD *)(v93 - 8);
      v95 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v94 + 48);
      v96 = swift_retain();
      if (v95(v92, 1, v93, v96))
      {
        v97 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v94 + 16))(__dst, v92, v93);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(__dst, 0, 1, v93);
      }
      v59 = (uint64_t)v265;
      v75 = v245;
      v98 = v261[6];
      v266 = &v259[v98];
      v99 = &v257[v98];
      v100 = type metadata accessor for Artist(0);
      v101 = *(_QWORD *)(v100 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
      {
        v102 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v266, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v266, v99, v100);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v266, 0, 1, v100);
      }
      v103 = v261[7];
      v267 = &v259[v103];
      v104 = &v257[v103];
      v105 = type metadata accessor for Composer(0);
      v106 = *(_QWORD *)(v105 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
      {
        v107 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v267, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v267, v104, v105);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v267, 0, 1, v105);
      }
      v108 = v261[8];
      v268 = &v259[v108];
      v109 = &v257[v108];
      v110 = type metadata accessor for Genre(0);
      v111 = *(_QWORD *)(v110 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
      {
        v112 = sub_100007E8C(&qword_10119ED08);
        memcpy(v268, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v268, v109, v110);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v268, 0, 1, v110);
      }
      v113 = v261[9];
      v269 = &v259[v113];
      v114 = &v257[v113];
      v115 = type metadata accessor for Playlist(0);
      v116 = *(_QWORD *)(v115 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115))
      {
        v117 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v269, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v269, v114, v115);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v269, 0, 1, v115);
      }
      v118 = v261[10];
      v270 = &v259[v118];
      v119 = &v257[v118];
      v120 = type metadata accessor for TVShow(0);
      v121 = *(_QWORD *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        v122 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v270, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v270, v119, v120);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v270, 0, 1, v120);
      }
      v123 = v261[11];
      v271 = &v259[v123];
      v124 = &v257[v123];
      v125 = type metadata accessor for TVSeason(0);
      v126 = *(_QWORD *)(v125 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
      {
        v127 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v271, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v271, v124, v125);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v271, 0, 1, v125);
      }
      v74 = v252;
      v259[v261[12]] = v257[v261[12]];
      v259[v261[13]] = v257[v261[13]];
      v259[v261[14]] = v257[v261[14]];
      v128 = v261[15];
      v129 = &v259[v128];
      v130 = &v257[v128];
      v131 = *((_QWORD *)v130 + 1);
      *(_QWORD *)v129 = *(_QWORD *)v130;
      *((_QWORD *)v129 + 1) = v131;
      *(_QWORD *)&v259[v261[16]] = *(_QWORD *)&v257[v261[16]];
      v259[v261[17]] = v257[v261[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = v249;
    }
    swift_storeEnumTagMultiPayload(v74, v76, v84);
    v132 = *(int *)(v79 + 36);
    v133 = &v74[v132];
    v134 = &v75[v132];
    v137 = type metadata accessor for PlaybackEnqueueMode(0, v59, v135, v136);
    if (swift_getEnumCaseMultiPayload(v134, v137) == 1)
    {
      v253(v133, v134, (void *)v59);
      v138 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v250 + 48))(v134, 1, v59))
      {
        v139 = type metadata accessor for Optional(0, v59);
        memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
      }
      else
      {
        v253(v133, v134, (void *)v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v250 + 56))(v133, 0, 1, v59);
      }
      v138 = 0;
    }
    swift_storeEnumTagMultiPayload(v133, v137, v138);
    v74[*(int *)(v79 + 40)] = v75[*(int *)(v79 + 40)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v74, 0, 1, v79);
  }
  v140 = v12[34];
  v141 = &a1[v140];
  v142 = &a2[v140];
  v143 = *((_QWORD *)v142 + 1);
  *(_QWORD *)v141 = *(_QWORD *)v142;
  *((_QWORD *)v141 + 1) = v143;
  *(_QWORD *)&a1[v12[35]] = *(_QWORD *)&a2[v12[35]];
  *(_QWORD *)&a1[v12[36]] = *(_QWORD *)&a2[v12[36]];
  v144 = v12[37];
  v145 = *(void **)&a2[v144];
  *(_QWORD *)&a1[v144] = v145;
  v146 = v12[38];
  v147 = &a1[v146];
  v148 = &a2[v146];
  swift_retain();
  swift_retain();
  swift_retain();
  v149 = v145;
  if (v263(v148, 1, v264))
  {
    v150 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
  }
  else
  {
    v151 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v147, v148, v151);
    v152 = *(int *)(v264 + 20);
    v153 = &v147[v152];
    v154 = &v148[v152];
    v155 = type metadata accessor for Artwork.CropStyle(0);
    v156 = *(_QWORD *)(v155 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
    {
      v157 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v153, v154, v155);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v147, 0, 1, v264);
  }
  v158 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v159 = v158[5];
  v160 = &v147[v159];
  v161 = &v148[v159];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v262)(&v148[v159], 10, v272))
  {
    v162 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
  }
  else
  {
    v163 = type metadata accessor for Playlist.Variant(0);
    v164 = *(_QWORD *)(v163 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v161, 1, v163))
    {
      v165 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v160, v161, v163);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v160, 0, 1, v163);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v160, 0, 10, v272);
  }
  *(_QWORD *)&v147[v158[6]] = *(_QWORD *)&v148[v158[6]];
  v166 = v158[7];
  v167 = &v147[v166];
  v168 = &v148[v166];
  *(_OWORD *)v167 = *(_OWORD *)v168;
  v167[16] = v168[16];
  v169 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v170 = v169[5];
  v171 = &v147[v170];
  v172 = &v148[v170];
  v174 = *(_QWORD *)v172;
  v173 = *((_QWORD *)v172 + 1);
  *(_QWORD *)v171 = v174;
  *((_QWORD *)v171 + 1) = v173;
  v175 = v169[6];
  v176 = &v147[v175];
  v177 = &v148[v175];
  v178 = *((_QWORD *)v177 + 1);
  *(_QWORD *)v176 = *(_QWORD *)v177;
  *((_QWORD *)v176 + 1) = v178;
  v179 = v169[7];
  v180 = &v147[v179];
  v181 = &v148[v179];
  v182 = *((_QWORD *)v181 + 1);
  *(_QWORD *)v180 = *(_QWORD *)v181;
  *((_QWORD *)v180 + 1) = v182;
  v147[v169[8]] = v148[v169[8]];
  v147[v169[9]] = v148[v169[9]];
  a1[v12[39]] = a2[v12[39]];
  a1[v12[40]] = a2[v12[40]];
  a1[v12[41]] = a2[v12[41]];
  v183 = v273[19];
  v184 = v273[20];
  v185 = &a1[v183];
  v186 = &a2[v183];
  *v185 = *v186;
  *((_QWORD *)v185 + 1) = *((_QWORD *)v186 + 1);
  v187 = *(void **)&a2[v184];
  *(_QWORD *)&a1[v184] = v187;
  v188 = v273[21];
  v189 = &a1[v188];
  v190 = &a2[v188];
  v191 = *(void **)v190;
  v192 = v190[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v193 = v187;
  sub_1000A4100(v191, v192);
  *(_QWORD *)v189 = v191;
  v189[8] = v192;
  v194 = v273[22];
  v195 = v273[23];
  v196 = &a1[v194];
  v197 = (uint64_t *)&a2[v194];
  v198 = *v197;
  v199 = v197[1];
  *(_QWORD *)v196 = v198;
  *((_QWORD *)v196 + 1) = v199;
  v200 = &a1[v195];
  v201 = (uint64_t *)&a2[v195];
  v203 = *v201;
  v202 = v201[1];
  *(_QWORD *)v200 = v203;
  *((_QWORD *)v200 + 1) = v202;
  v204 = v273[24];
  v205 = &a1[v204];
  v206 = &a2[v204];
  v207 = *(_QWORD *)v206;
  v208 = *((_QWORD *)v206 + 1);
  LOBYTE(v178) = v206[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v207, v208);
  *(_QWORD *)v205 = v207;
  *((_QWORD *)v205 + 1) = v208;
  v205[16] = v178;
  v209 = v273[25];
  v210 = v273[26];
  v211 = &a1[v209];
  v212 = (uint64_t *)&a2[v209];
  v213 = *v212;
  v214 = v212[1];
  *(_QWORD *)v211 = v213;
  *((_QWORD *)v211 + 1) = v214;
  v215 = &a1[v210];
  v216 = (uint64_t *)&a2[v210];
  v218 = *v216;
  v217 = v216[1];
  *(_QWORD *)v215 = v218;
  *((_QWORD *)v215 + 1) = v217;
  v219 = v273[27];
  v220 = v273[28];
  v221 = &a1[v219];
  v222 = (uint64_t *)&a2[v219];
  v224 = *v222;
  v223 = v222[1];
  *(_QWORD *)v221 = v224;
  *((_QWORD *)v221 + 1) = v223;
  v225 = &a1[v220];
  v226 = *(_QWORD *)&a2[v220];
  v227 = *(_QWORD *)&a2[v220 + 8];
  LOBYTE(v182) = a2[v220 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v226, v227, v182);
  *(_QWORD *)v225 = v226;
  *((_QWORD *)v225 + 1) = v227;
  v225[16] = v182;
  v228 = v273[29];
  v229 = &a1[v228];
  v230 = &a2[v228];
  v231 = *(_QWORD *)v230;
  v232 = *((_QWORD *)v230 + 1);
  LOBYTE(v226) = v230[16];
  sub_1000A411C(*(_QWORD *)v230, v232, v226);
  *(_QWORD *)v229 = v231;
  *((_QWORD *)v229 + 1) = v232;
  v229[16] = v226;
  v233 = v273[30];
  v234 = &a1[v233];
  v235 = &a2[v233];
  v236 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v235, v236) == 1)
  {
    v237 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(v234, v235, v237);
    v238 = 1;
  }
  else
  {
    *(_QWORD *)v234 = *(_QWORD *)v235;
    swift_retain();
    v238 = 0;
  }
  swift_storeEnumTagMultiPayload(v234, v236, v238);
  v239 = v273[31];
  v240 = &a1[v239];
  v241 = &a2[v239];
  v242 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(v240, v241, v242);
  v243 = sub_100007E8C(&qword_1011A03B8);
  *(_QWORD *)&v240[*(int *)(v243 + 28)] = *(_QWORD *)&v241[*(int *)(v243 + 28)];
  swift_retain();
  return a1;
}

char *sub_100393B3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t WitnessTable;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(char *, uint64_t, uint64_t);
  int v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t EnumCaseMultiPayload;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  int *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int (*v128)(char *, uint64_t, uint64_t, __n128);
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int (*v141)(char *, uint64_t, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  char *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  void *v236;
  void *v237;
  id v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  int v242;
  int v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  size_t v251;
  void *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t (*v260)(void *, uint64_t, uint64_t);
  int v261;
  int v262;
  int *v263;
  uint64_t v264;
  void *v265;
  char *v266;
  int v267;
  int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t (*v274)(void *, uint64_t, uint64_t);
  int v275;
  int v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  __int128 v280;
  int *v281;
  uint64_t v282;
  _QWORD *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  void *v298;
  void *v299;
  id v300;
  uint64_t v301;
  char *v302;
  char *v303;
  id v304;
  char v305;
  void *v306;
  char v307;
  uint64_t v308;
  char *v309;
  char *v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  char *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  unint64_t v342;
  uint64_t v343;
  unint64_t v344;
  char v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v358;
  unsigned int v359;
  unsigned int v360;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *v370;
  char *v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  _QWORD *v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  __int128 v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  int *v385;
  uint64_t v386;
  uint64_t v387;
  _QWORD *v388;
  int *v389;
  uint64_t (*v390)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v391)(char *, uint64_t, uint64_t);
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  int *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  __int128 v401;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(a3 + 40);
  v11 = *(_QWORD *)(a3 + 48);
  v396 = *(_QWORD *)(a3 + 16);
  v8 = v396;
  v397 = v7;
  v383 = v11;
  v386 = v10;
  v398 = v10;
  v399 = v9;
  v372 = v9;
  v400 = v11;
  v389 = (int *)a3;
  v380 = *(_OWORD *)(a3 + 56);
  v401 = v380;
  v12 = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v396);
  v377 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, char *, uint64_t))(v377 + 24))(&a1[v12[19]], &a2[v12[19]], v7);
  v374 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, char *, uint64_t))(v374 + 24))(&a1[v12[20]], &a2[v12[20]], v8);
  v395 = v12;
  v13 = v12[21];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ArtworkImage.ViewModel(0);
  v379 = *(_QWORD *)(v16 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v379 + 48);
  v18 = v17(v14, 1, v16);
  v391 = v17;
  v19 = v17(v15, 1, v16);
  v392 = v16;
  if (!v18)
  {
    if (!v19)
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v14, v15, v29);
      v30 = *(int *)(v16 + 20);
      v14 += v30;
      v15 += v30;
      v31 = type metadata accessor for Artwork.CropStyle(0);
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
      v34 = v33(v14, 1, v31);
      v35 = v33(v15, 1, v31);
      if (v34)
      {
        if (!v35)
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v14, v15, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v14, 0, 1, v31);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v35)
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v14, v15, v31);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
      }
      v27 = (uint64_t *)&unk_1011A14A0;
LABEL_8:
      v28 = sub_100007E8C(v27);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v14, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v27 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_8;
  }
  if (v19)
    goto LABEL_7;
  v20 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v14, v15, v20);
  v21 = *(int *)(v16 + 20);
  v22 = &v14[v21];
  v23 = &v15[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v379 + 56))(v14, 0, 1, v16);
LABEL_14:
  a1[v395[22]] = a2[v395[22]];
  *(_QWORD *)&a1[v395[23]] = *(_QWORD *)&a2[v395[23]];
  v36 = v395[24];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v378 = *(_QWORD *)(v39 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v378 + 48);
  v41 = v40(v37, 10, v39);
  v393 = v39;
  v390 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
  v42 = v40(v38, 10, v39);
  if (!v41)
  {
    if (!v42)
    {
      v47 = type metadata accessor for Playlist.Variant(0);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
      v50 = v49(v37, 1, v47);
      v51 = v49(v38, 1, v47);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v37, v38, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v37, 0, 1, v47);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v51)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v37, v38, v47);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v47);
      }
      v46 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v37, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v46 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v42)
    goto LABEL_20;
  v43 = type metadata accessor for Playlist.Variant(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v38, 1, v43))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v37, v38, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v37, 0, 1, v43);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v378 + 56))(v37, 0, 10, v39);
LABEL_27:
  v52 = v395[25];
  v53 = &a1[v52];
  v54 = &a2[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v55 = *((_QWORD *)v53 + 1);
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v55);
  v56 = v395[26];
  v57 = &a1[v56];
  v58 = &a2[v56];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v59 = *((_QWORD *)v57 + 1);
  *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v59);
  v60 = v395[27];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = *(_QWORD *)v62;
  v61[8] = v62[8];
  *(_QWORD *)v61 = v63;
  v64 = v395[28];
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = *(_QWORD *)v66;
  v65[8] = v66[8];
  *(_QWORD *)v65 = v67;
  v68 = v395[29];
  v69 = &a1[v68];
  v70 = &a2[v68];
  v71 = *(_QWORD *)&a1[v68];
  v72 = *(_QWORD *)&a2[v68];
  if (v71)
  {
    if (v72)
    {
      v73 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v69 = v72;
      *((_QWORD *)v69 + 1) = v73;
      swift_retain();
      swift_release();
      goto LABEL_34;
    }
    swift_release();
  }
  else if (v72)
  {
    v74 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = v72;
    *((_QWORD *)v69 + 1) = v74;
    swift_retain();
    goto LABEL_34;
  }
  *(_OWORD *)v69 = *(_OWORD *)v70;
LABEL_34:
  v75 = v395[30];
  v76 = &a1[v75];
  v77 = &a2[v75];
  v78 = type metadata accessor for ContentRating(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v76, v77, v78);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v78);
LABEL_39:
    v83 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v79 + 24))(v76, v77, v78);
LABEL_40:
  v84 = v395[31];
  v85 = &a1[v84];
  v86 = &a2[v84];
  v87 = type metadata accessor for MusicFavoriteStatus(0);
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
  v90 = v89(v85, 1, v87);
  v91 = v89(v86, 1, v87);
  if (v90)
  {
    if (!v91)
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v86, v87);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v87);
LABEL_45:
    v92 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v88 + 24))(v85, v86, v87);
LABEL_46:
  v93 = v395[32];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = type metadata accessor for GenericMusicItem(0);
  v97 = *(_QWORD *)(v96 - 8);
  v98 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
  v99 = v98(v94, 1, v96);
  v100 = v98(v95, 1, v96);
  if (v99)
  {
    if (!v100)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v95, v96);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v100)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v96);
LABEL_51:
    v101 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_52;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v94, v95, v96);
LABEL_52:
  v102 = v395[33];
  v103 = &a1[v102];
  v104 = &a2[v102];
  v396 = v8;
  v397 = v7;
  v398 = v386;
  v399 = v383;
  v400 = v380;
  v105 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v396);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v105);
  v108 = type metadata accessor for SourcedPlaybackIntent(0, v105, WitnessTable, v107);
  v387 = *(_QWORD *)(v108 - 8);
  v109 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v387 + 48);
  v110 = v109(v103, 1, v108);
  v111 = v109(v104, 1, v108);
  if (!v110)
  {
    if (v111)
    {
      (*(void (**)(char *, uint64_t))(v387 + 8))(v103, v108);
      goto LABEL_59;
    }
    if (a1 == a2)
    {
LABEL_137:
      v103[*(int *)(v108 + 40)] = v104[*(int *)(v108 + 40)];
      goto LABEL_138;
    }
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v105 - 8) + 8))(v103, v105);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v104, v105);
    v116 = EnumCaseMultiPayload;
    v381 = v105;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v131 = type metadata accessor for MusicItemCollection(0, v7, *(_QWORD *)(v372 + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v103, v104, v131);
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v360 = EnumCaseMultiPayload;
        (*(void (**)(char *, char *, uint64_t))(v374 + 16))(v103, v104, v8);
        v133 = type metadata accessor for Library.Context(255);
        v134 = *(int *)(swift_getTupleTypeMetadata2(0, v8, v133, " context ", 0) + 48);
        v371 = v104;
        v373 = v103;
        v135 = &v103[v134];
        v136 = &v104[v134];
        *(_QWORD *)v135 = *(_QWORD *)&v104[v134];
        v385 = (int *)v133;
        v388 = v135;
        v137 = *(int *)(v133 + 20);
        __dst = &v135[v137];
        v138 = &v136[v137];
        v139 = type metadata accessor for Album(0);
        v140 = *(_QWORD *)(v139 - 8);
        v141 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v140 + 48);
        v142 = swift_retain();
        v376 = v136;
        if (v141(v138, 1, v139, v142))
        {
          v143 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(__dst, v138, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v140 + 16))(__dst, v138, v139);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(__dst, 0, 1, v139);
        }
        v187 = v385[6];
        v188 = (char *)v388 + v187;
        v189 = &v376[v187];
        v190 = type metadata accessor for Artist(0);
        v191 = *(_QWORD *)(v190 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
        {
          v192 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v188, v189, v190);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
        }
        v193 = v385[7];
        v194 = (char *)v388 + v193;
        v195 = &v376[v193];
        v196 = type metadata accessor for Composer(0);
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        {
          v198 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v194, v195, v196);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
        }
        v199 = v385[8];
        v200 = (char *)v388 + v199;
        v201 = &v376[v199];
        v202 = type metadata accessor for Genre(0);
        v203 = *(_QWORD *)(v202 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
        {
          v204 = sub_100007E8C(&qword_10119ED08);
          memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v200, v201, v202);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
        }
        v205 = v385[9];
        __dstf = (char *)v388 + v205;
        v206 = &v376[v205];
        v207 = type metadata accessor for Playlist(0);
        v208 = *(_QWORD *)(v207 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
        {
          v209 = sub_100007E8C(&qword_1011A30F0);
          memcpy(__dstf, v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v208 + 16))(__dstf, v206, v207);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v208 + 56))(__dstf, 0, 1, v207);
        }
        v210 = v385[10];
        __dstg = (char *)v388 + v210;
        v211 = &v376[v210];
        v212 = type metadata accessor for TVShow(0);
        v213 = *(_QWORD *)(v212 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v213 + 48))(v211, 1, v212))
        {
          v214 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(__dstg, v211, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v213 + 16))(__dstg, v211, v212);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v213 + 56))(__dstg, 0, 1, v212);
        }
        v215 = v385[11];
        __dsth = (char *)v388 + v215;
        v216 = &v376[v215];
        v217 = type metadata accessor for TVSeason(0);
        v218 = *(_QWORD *)(v217 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217))
        {
          v219 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(__dsth, v216, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v218 + 16))(__dsth, v216, v217);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v218 + 56))(__dsth, 0, 1, v217);
        }
        v132 = v377;
        *((_BYTE *)v388 + v385[12]) = v376[v385[12]];
        *((_BYTE *)v388 + v385[13]) = v376[v385[13]];
        *((_BYTE *)v388 + v385[14]) = v376[v385[14]];
        v220 = v385[15];
        v221 = (_QWORD *)((char *)v388 + v220);
        v222 = &v376[v220];
        *v221 = *(_QWORD *)v222;
        v221[1] = *((_QWORD *)v222 + 1);
        *(_QWORD *)((char *)v388 + v385[16]) = *(_QWORD *)&v376[v385[16]];
        *((_BYTE *)v388 + v385[17]) = v376[v385[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v104 = v371;
        v103 = v373;
        v116 = v360;
LABEL_130:
        swift_storeEnumTagMultiPayload(v103, v381, v116);
        v223 = *(int *)(v108 + 36);
        v224 = &v103[v223];
        v225 = v104;
        v226 = &v104[v223];
        v229 = type metadata accessor for PlaybackEnqueueMode(0, v7, v227, v228);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v229 - 8) + 8))(v224, v229);
        if (swift_getEnumCaseMultiPayload(v226, v229) == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v224, v226, v7);
          v230 = 1;
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v226, 1, v7))
          {
            v231 = type metadata accessor for Optional(0, v7);
            memcpy(v224, v226, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v224, v226, v7);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v224, 0, 1, v7);
          }
          v230 = 0;
        }
        swift_storeEnumTagMultiPayload(v224, v229, v230);
        v104 = v225;
        goto LABEL_137;
      }
      (*(void (**)(char *, char *, uint64_t))(v374 + 16))(v103, v104, v8);
    }
    v132 = v377;
    goto LABEL_130;
  }
  if (v111)
  {
LABEL_59:
    v114 = type metadata accessor for Optional(0, v108);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_138;
  }
  v112 = swift_getEnumCaseMultiPayload(v104, v105);
  v113 = v112;
  if ((_DWORD)v112 == 2)
  {
    v117 = type metadata accessor for MusicItemCollection(0, v7, *(_QWORD *)(v372 + 8));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16))(v103, v104, v117);
  }
  else if ((_DWORD)v112 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v374 + 16))(v103, v104, v8);
  }
  else
  {
    v359 = v112;
    v382 = v105;
    v358 = v7;
    (*(void (**)(char *, char *, uint64_t))(v374 + 16))(v103, v104, v8);
    v118 = type metadata accessor for Library.Context(255);
    v119 = *(int *)(swift_getTupleTypeMetadata2(0, v8, v118, " context ", 0) + 48);
    v370 = v104;
    v120 = &v103[v119];
    v121 = &v104[v119];
    *(_QWORD *)v120 = *(_QWORD *)&v104[v119];
    v122 = (int *)v118;
    v123 = *(int *)(v118 + 20);
    v375 = v120;
    v124 = &v120[v123];
    v384 = v121;
    v125 = &v121[v123];
    v126 = type metadata accessor for Album(0);
    v127 = *(_QWORD *)(v126 - 8);
    v128 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v127 + 48);
    v129 = swift_retain();
    if (v128(v125, 1, v126, v129))
    {
      v130 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v124, v125, v126);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
    }
    v144 = v122[6];
    v145 = (char *)v375 + v144;
    v146 = &v384[v144];
    v147 = type metadata accessor for Artist(0);
    v148 = *(_QWORD *)(v147 - 8);
    v104 = v370;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
    {
      v149 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v145, v146, v147);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
    }
    v150 = v122[7];
    __dsta = (char *)v375 + v150;
    v151 = &v384[v150];
    v152 = type metadata accessor for Composer(0);
    v153 = *(_QWORD *)(v152 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v151, 1, v152))
    {
      v154 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(__dsta, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v153 + 16))(__dsta, v151, v152);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(__dsta, 0, 1, v152);
    }
    v155 = v122[8];
    __dstb = (char *)v375 + v155;
    v156 = &v384[v155];
    v157 = type metadata accessor for Genre(0);
    v158 = *(_QWORD *)(v157 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
    {
      v159 = sub_100007E8C(&qword_10119ED08);
      memcpy(__dstb, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v158 + 16))(__dstb, v156, v157);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(__dstb, 0, 1, v157);
    }
    v160 = v122[9];
    __dstc = (char *)v375 + v160;
    v161 = &v384[v160];
    v162 = type metadata accessor for Playlist(0);
    v163 = *(_QWORD *)(v162 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
    {
      v164 = sub_100007E8C(&qword_1011A30F0);
      memcpy(__dstc, v161, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v163 + 16))(__dstc, v161, v162);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v163 + 56))(__dstc, 0, 1, v162);
    }
    v165 = v122[10];
    __dstd = (char *)v375 + v165;
    v166 = &v384[v165];
    v167 = type metadata accessor for TVShow(0);
    v168 = *(_QWORD *)(v167 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v166, 1, v167))
    {
      v169 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(__dstd, v166, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v168 + 16))(__dstd, v166, v167);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v168 + 56))(__dstd, 0, 1, v167);
    }
    v170 = v122[11];
    __dste = (char *)v375 + v170;
    v171 = &v384[v170];
    v172 = type metadata accessor for TVSeason(0);
    v173 = *(_QWORD *)(v172 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172))
    {
      v174 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(__dste, v171, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v173 + 16))(__dste, v171, v172);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(__dste, 0, 1, v172);
    }
    *((_BYTE *)v375 + v122[12]) = v384[v122[12]];
    *((_BYTE *)v375 + v122[13]) = v384[v122[13]];
    *((_BYTE *)v375 + v122[14]) = v384[v122[14]];
    v175 = v122[15];
    v176 = (_QWORD *)((char *)v375 + v175);
    v177 = &v384[v175];
    *v176 = *(_QWORD *)v177;
    v176[1] = *((_QWORD *)v177 + 1);
    *(_QWORD *)((char *)v375 + v122[16]) = *(_QWORD *)&v384[v122[16]];
    *((_BYTE *)v375 + v122[17]) = v384[v122[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = v358;
    v105 = v382;
    v113 = v359;
  }
  swift_storeEnumTagMultiPayload(v103, v105, v113);
  v178 = *(int *)(v108 + 36);
  v179 = &v103[v178];
  v180 = v104;
  v181 = &v104[v178];
  v184 = type metadata accessor for PlaybackEnqueueMode(0, v7, v182, v183);
  if (swift_getEnumCaseMultiPayload(v181, v184) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v377 + 16))(v179, v181, v7);
    v185 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v377 + 48))(v181, 1, v7))
    {
      v186 = type metadata accessor for Optional(0, v7);
      memcpy(v179, v181, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v377 + 16))(v179, v181, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v377 + 56))(v179, 0, 1, v7);
    }
    v185 = 0;
  }
  swift_storeEnumTagMultiPayload(v179, v184, v185);
  v103[*(int *)(v108 + 40)] = v180[*(int *)(v108 + 40)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v387 + 56))(v103, 0, 1, v108);
LABEL_138:
  v232 = v395[34];
  v233 = &a1[v232];
  v234 = &a2[v232];
  *(_QWORD *)v233 = *(_QWORD *)v234;
  *((_QWORD *)v233 + 1) = *((_QWORD *)v234 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[v395[35]] = *(_QWORD *)&a2[v395[35]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[v395[36]] = *(_QWORD *)&a2[v395[36]];
  swift_retain();
  swift_release();
  v235 = v395[37];
  v236 = *(void **)&a1[v235];
  v237 = *(void **)&a2[v235];
  *(_QWORD *)&a1[v235] = v237;
  v238 = v237;

  v239 = v395[38];
  v240 = (uint64_t)&a1[v239];
  v241 = &a2[v239];
  v242 = v391(&a1[v239], 1, v392);
  v243 = v391(v241, 1, v392);
  if (!v242)
  {
    if (!v243)
    {
      v254 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 24))(v240, v241, v254);
      v255 = *(int *)(v392 + 20);
      v256 = (void *)(v240 + v255);
      v257 = &v241[v255];
      v258 = type metadata accessor for Artwork.CropStyle(0);
      v259 = *(_QWORD *)(v258 - 8);
      v260 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v259 + 48);
      v261 = v260(v256, 1, v258);
      v262 = v260(v257, 1, v258);
      if (v261)
      {
        if (!v262)
        {
          (*(void (**)(void *, char *, uint64_t))(v259 + 16))(v256, v257, v258);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v259 + 56))(v256, 0, 1, v258);
          goto LABEL_151;
        }
      }
      else
      {
        if (!v262)
        {
          (*(void (**)(void *, char *, uint64_t))(v259 + 24))(v256, v257, v258);
          goto LABEL_151;
        }
        (*(void (**)(void *, uint64_t))(v259 + 8))(v256, v258);
      }
      v251 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v252 = v256;
      v253 = v257;
LABEL_145:
      memcpy(v252, v253, v251);
      goto LABEL_151;
    }
    sub_10005B748(v240, type metadata accessor for ArtworkImage.ViewModel);
LABEL_144:
    v251 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v252 = (void *)v240;
    v253 = v241;
    goto LABEL_145;
  }
  if (v243)
    goto LABEL_144;
  v244 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16))(v240, v241, v244);
  v245 = *(int *)(v392 + 20);
  v246 = (void *)(v240 + v245);
  v247 = &v241[v245];
  v248 = type metadata accessor for Artwork.CropStyle(0);
  v249 = *(_QWORD *)(v248 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v247, 1, v248))
  {
    v250 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v249 + 16))(v246, v247, v248);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v249 + 56))(v246, 0, 1, v248);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v379 + 56))(v240, 0, 1, v392);
LABEL_151:
  v263 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v264 = v263[5];
  v265 = (void *)(v240 + v264);
  v266 = &v241[v264];
  v267 = v390(v240 + v264, 10, v393);
  v268 = v390((uint64_t)v266, 10, v393);
  if (!v267)
  {
    if (!v268)
    {
      v273 = type metadata accessor for Playlist.Variant(0);
      v394 = *(_QWORD *)(v273 - 8);
      v274 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v394 + 48);
      v275 = v274(v265, 1, v273);
      v276 = v274(v266, 1, v273);
      if (v275)
      {
        if (!v276)
        {
          (*(void (**)(void *, char *, uint64_t))(v394 + 16))(v265, v266, v273);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v394 + 56))(v265, 0, 1, v273);
          goto LABEL_164;
        }
      }
      else
      {
        if (!v276)
        {
          (*(void (**)(void *, char *, uint64_t))(v394 + 24))(v265, v266, v273);
          goto LABEL_164;
        }
        (*(void (**)(void *, uint64_t))(v394 + 8))(v265, v273);
      }
      v272 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_158:
      memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
      goto LABEL_164;
    }
    sub_10004FF60((uint64_t)v265, (uint64_t *)&unk_1011A3DB0);
LABEL_157:
    v272 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_158;
  }
  if (v268)
    goto LABEL_157;
  v269 = type metadata accessor for Playlist.Variant(0);
  v270 = *(_QWORD *)(v269 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v270 + 48))(v266, 1, v269))
  {
    v271 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v270 + 16))(v265, v266, v269);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v270 + 56))(v265, 0, 1, v269);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v378 + 56))(v265, 0, 10, v393);
LABEL_164:
  *(_QWORD *)(v240 + v263[6]) = *(_QWORD *)&v241[v263[6]];
  v277 = v263[7];
  v278 = v240 + v277;
  v279 = &v241[v277];
  v280 = *(_OWORD *)v279;
  *(_BYTE *)(v278 + 16) = v279[16];
  *(_OWORD *)v278 = v280;
  v281 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v282 = v281[5];
  v283 = (_QWORD *)(v240 + v282);
  v284 = &v241[v282];
  *v283 = *(_QWORD *)v284;
  v285 = v283[1];
  v283[1] = *((_QWORD *)v284 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v285);
  v286 = v281[6];
  v287 = (_QWORD *)(v240 + v286);
  v288 = &v241[v286];
  *v287 = *(_QWORD *)v288;
  v289 = v287[1];
  v287[1] = *((_QWORD *)v288 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v289);
  v290 = v281[7];
  v291 = (_QWORD *)(v240 + v290);
  v292 = &v241[v290];
  *v291 = *(_QWORD *)v292;
  v293 = v291[1];
  v291[1] = *((_QWORD *)v292 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v293);
  *(_BYTE *)(v240 + v281[8]) = v241[v281[8]];
  *(_BYTE *)(v240 + v281[9]) = v241[v281[9]];
  a1[v395[39]] = a2[v395[39]];
  a1[v395[40]] = a2[v395[40]];
  a1[v395[41]] = a2[v395[41]];
  v294 = v389[19];
  v295 = &a1[v294];
  v296 = &a2[v294];
  *v295 = *v296;
  *((_QWORD *)v295 + 1) = *((_QWORD *)v296 + 1);
  swift_retain();
  swift_release();
  v297 = v389[20];
  v298 = *(void **)&a1[v297];
  v299 = *(void **)&a2[v297];
  *(_QWORD *)&a1[v297] = v299;
  v300 = v299;

  v301 = v389[21];
  v302 = &a1[v301];
  v303 = &a2[v301];
  v304 = *(id *)v303;
  v305 = v303[8];
  sub_1000A4100(*(id *)v303, v305);
  v306 = *(void **)v302;
  v307 = v302[8];
  *(_QWORD *)v302 = v304;
  v302[8] = v305;
  sub_1000A4224(v306, v307);
  v308 = v389[22];
  v309 = &a1[v308];
  v310 = &a2[v308];
  *(_QWORD *)&a1[v308] = *(_QWORD *)&a2[v308];
  swift_retain();
  swift_release();
  *((_QWORD *)v309 + 1) = *((_QWORD *)v310 + 1);
  v311 = v389[23];
  v312 = &a1[v311];
  v313 = &a2[v311];
  *(_QWORD *)&a1[v311] = *(_QWORD *)&a2[v311];
  swift_retain();
  swift_release();
  *((_QWORD *)v312 + 1) = *((_QWORD *)v313 + 1);
  v314 = v389[24];
  v315 = &a1[v314];
  v316 = &a2[v314];
  v317 = *(_QWORD *)v316;
  v318 = *((_QWORD *)v316 + 1);
  LOBYTE(v313) = v316[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v316, v318);
  v319 = *(_QWORD *)v315;
  v320 = *((_QWORD *)v315 + 1);
  *(_QWORD *)v315 = v317;
  *((_QWORD *)v315 + 1) = v318;
  v315[16] = (char)v313;
  sub_1000A6174(v319, v320);
  v321 = v389[25];
  v322 = &a1[v321];
  v323 = &a2[v321];
  *(_QWORD *)&a1[v321] = *(_QWORD *)&a2[v321];
  swift_retain();
  swift_release();
  *((_QWORD *)v322 + 1) = *((_QWORD *)v323 + 1);
  v324 = v389[26];
  v325 = &a1[v324];
  v326 = &a2[v324];
  *(_QWORD *)&a1[v324] = *(_QWORD *)&a2[v324];
  swift_retain();
  swift_release();
  *((_QWORD *)v325 + 1) = *((_QWORD *)v326 + 1);
  v327 = v389[27];
  v328 = &a1[v327];
  v329 = &a2[v327];
  *(_QWORD *)&a1[v327] = *(_QWORD *)&a2[v327];
  swift_retain();
  swift_release();
  *((_QWORD *)v328 + 1) = *((_QWORD *)v329 + 1);
  v330 = v389[28];
  v331 = &a1[v330];
  v332 = &a2[v330];
  v333 = *(_QWORD *)v332;
  v334 = *((_QWORD *)v332 + 1);
  LOBYTE(v329) = v332[16];
  sub_1000A410C(*(_QWORD *)v332, v334, (char)v329);
  v335 = *(_QWORD *)v331;
  v336 = *((_QWORD *)v331 + 1);
  v337 = v331[16];
  *(_QWORD *)v331 = v333;
  *((_QWORD *)v331 + 1) = v334;
  v331[16] = (char)v329;
  sub_1000A4230(v335, v336, v337);
  v338 = v389[29];
  v339 = &a1[v338];
  v340 = &a2[v338];
  v341 = *(_QWORD *)v340;
  v342 = *((_QWORD *)v340 + 1);
  LOBYTE(v329) = v340[16];
  sub_1000A411C(*(_QWORD *)v340, v342, (char)v329);
  v343 = *(_QWORD *)v339;
  v344 = *((_QWORD *)v339 + 1);
  v345 = v339[16];
  *(_QWORD *)v339 = v341;
  *((_QWORD *)v339 + 1) = v342;
  v339[16] = (char)v329;
  sub_1000A4240(v343, v344, v345);
  if (a1 != a2)
  {
    v346 = v389[30];
    v347 = &a1[v346];
    v348 = &a2[v346];
    sub_10004FF60((uint64_t)&a1[v346], (uint64_t *)&unk_1011C72D0);
    v349 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v348, v349) == 1)
    {
      v350 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v347, v348, v350);
      v351 = 1;
    }
    else
    {
      *(_QWORD *)v347 = *(_QWORD *)v348;
      swift_retain();
      v351 = 0;
    }
    swift_storeEnumTagMultiPayload(v347, v349, v351);
  }
  v352 = v389[31];
  v353 = &a1[v352];
  v354 = &a2[v352];
  v355 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v355 - 8) + 24))(v353, v354, v355);
  v356 = sub_100007E8C(&qword_1011A03B8);
  *(_QWORD *)&v353[*(int *)(v356 + 28)] = *(_QWORD *)&v354[*(int *)(v356 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1003958F8(char *a1, char *a2, uint64_t a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t WitnessTable;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int EnumCaseMultiPayload;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  int *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  _QWORD *v194;
  unsigned int (*v195)(char *, uint64_t, uint64_t);
  unsigned int (*v196)(char *, uint64_t, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *__dst;
  int *__dsta;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  __int128 v207;

  v3 = (int *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  v202 = *(_QWORD *)(a3 + 16);
  v7 = v202;
  v203 = v6;
  v191 = v10;
  v193 = v9;
  v204 = v9;
  v205 = v8;
  v176 = v8;
  v206 = v10;
  v189 = *(_OWORD *)(a3 + 56);
  v207 = v189;
  v11 = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v202);
  v12 = *(_QWORD *)(v6 - 8);
  v197 = v6;
  v186 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v186(&a1[v11[19]], &a2[v11[19]], v6);
  v178 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
  v178(&a1[v11[20]], &a2[v11[20]], v7);
  v13 = v11[21];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ArtworkImage.ViewModel(0);
  v188 = *(_QWORD *)(v16 - 8);
  v196 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48);
  v199 = v16;
  v177 = v12;
  if (v196(v15, 1, v16))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v14, v15, v18);
    v19 = *(int *)(v16 + 20);
    v20 = &v14[v19];
    v21 = &v15[v19];
    v22 = type metadata accessor for Artwork.CropStyle(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v14, 0, 1, v199);
  }
  a1[v11[22]] = a2[v11[22]];
  *(_QWORD *)&a1[v11[23]] = *(_QWORD *)&a2[v11[23]];
  v25 = v11[24];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v187 = *(_QWORD *)(v28 - 8);
  v195 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48);
  if (v195(v27, 10, v28))
  {
    v29 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for Playlist.Variant(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v27, 1, v30))
    {
      v32 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v26, v27, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v26, 0, 10, v28);
  }
  *(_OWORD *)&a1[v11[25]] = *(_OWORD *)&a2[v11[25]];
  *(_OWORD *)&a1[v11[26]] = *(_OWORD *)&a2[v11[26]];
  v33 = v11[27];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = v35[8];
  v36 = v11[28];
  v37 = &a1[v36];
  v38 = &a2[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  v39 = v11[29];
  v40 = &a1[v39];
  v41 = (uint64_t *)&a2[v39];
  v42 = *v41;
  if (*v41)
  {
    v43 = v41[1];
    *(_QWORD *)v40 = v42;
    *((_QWORD *)v40 + 1) = v43;
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
  }
  v44 = v11[30];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = type metadata accessor for ContentRating(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = v11[31];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = type metadata accessor for MusicFavoriteStatus(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    v55 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v56 = v11[32];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for GenericMusicItem(0);
  v60 = *(_QWORD *)(v59 - 8);
  v198 = v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  v62 = v11[33];
  __dst = &a1[v62];
  v202 = v7;
  v63 = &a2[v62];
  v64 = v197;
  v203 = v197;
  v204 = v193;
  v205 = v191;
  v206 = v189;
  v65 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v202);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v65);
  v68 = type metadata accessor for SourcedPlaybackIntent(0, v65, WitnessTable, v67);
  v69 = *(_QWORD *)(v68 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v63, 1, v68))
  {
    v70 = type metadata accessor for Optional(0, v68);
    memcpy(__dst, v63, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    v175 = v69;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v63, v65);
    v190 = v63;
    if (EnumCaseMultiPayload == 2)
    {
      v75 = type metadata accessor for MusicItemCollection(0, v197, *(_QWORD *)(v176 + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(__dst, v63, v75);
      v72 = __dst;
      v73 = v65;
      v74 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v178(__dst, v63, v7);
      v72 = __dst;
      v73 = v65;
      v74 = 1;
    }
    else
    {
      v178(__dst, v63, v7);
      v76 = type metadata accessor for Library.Context(255);
      v77 = *(int *)(swift_getTupleTypeMetadata2(0, v7, v76, " context ", 0) + 48);
      v78 = &__dst[v77];
      v79 = &v63[v77];
      *(_QWORD *)v78 = *(_QWORD *)&v63[v77];
      v80 = *(int *)(v76 + 20);
      v192 = v79;
      v194 = v78;
      v179 = &v78[v80];
      v81 = &v79[v80];
      v82 = type metadata accessor for Album(0);
      v83 = *(_QWORD *)(v82 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
      {
        v84 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v179, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v179, v81, v82);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v179, 0, 1, v82);
      }
      v180 = (int *)v76;
      v85 = *(int *)(v76 + 24);
      v86 = (char *)v194 + v85;
      v87 = &v192[v85];
      v88 = type metadata accessor for Artist(0);
      v89 = *(_QWORD *)(v88 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
      {
        v90 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v86, v87, v88);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      }
      v91 = v180;
      v92 = v180[7];
      v181 = (char *)v194 + v92;
      v93 = &v192[v92];
      v94 = type metadata accessor for Composer(0);
      v95 = *(_QWORD *)(v94 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
      {
        v96 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v181, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v181, v93, v94);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v181, 0, 1, v94);
      }
      v97 = v91[8];
      v182 = (char *)v194 + v97;
      v98 = &v192[v97];
      v99 = type metadata accessor for Genre(0);
      v100 = *(_QWORD *)(v99 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
      {
        v101 = sub_100007E8C(&qword_10119ED08);
        memcpy(v182, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v182, v98, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v182, 0, 1, v99);
      }
      v102 = v91[9];
      v183 = (char *)v194 + v102;
      v103 = &v192[v102];
      v104 = type metadata accessor for Playlist(0);
      v105 = *(_QWORD *)(v104 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
      {
        v106 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v183, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v183, v103, v104);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v183, 0, 1, v104);
      }
      v107 = v91[10];
      v184 = (char *)v194 + v107;
      v108 = &v192[v107];
      v109 = type metadata accessor for TVShow(0);
      v110 = *(_QWORD *)(v109 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
      {
        v111 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v184, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v184, v108, v109);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v184, 0, 1, v109);
      }
      v112 = v91[11];
      v185 = (char *)v194 + v112;
      v113 = &v192[v112];
      v114 = type metadata accessor for TVSeason(0);
      v115 = *(_QWORD *)(v114 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
      {
        v116 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v185, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v185, v113, v114);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v185, 0, 1, v114);
      }
      v64 = v197;
      v63 = v190;
      *((_BYTE *)v194 + v91[12]) = v192[v91[12]];
      *((_BYTE *)v194 + v91[13]) = v192[v91[13]];
      *((_BYTE *)v194 + v91[14]) = v192[v91[14]];
      *(_OWORD *)((char *)v194 + v91[15]) = *(_OWORD *)&v192[v91[15]];
      *(_QWORD *)((char *)v194 + v91[16]) = *(_QWORD *)&v192[v91[16]];
      *((_BYTE *)v194 + v91[17]) = v192[v91[17]];
      v72 = __dst;
      v73 = v65;
      v74 = 0;
    }
    swift_storeEnumTagMultiPayload(v72, v73, v74);
    v117 = *(int *)(v68 + 36);
    v118 = &__dst[v117];
    v119 = &v63[v117];
    v122 = type metadata accessor for PlaybackEnqueueMode(0, v64, v120, v121);
    if (swift_getEnumCaseMultiPayload(v119, v122) == 1)
    {
      v186(v118, v119, v64);
      v123 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v119, 1, v64))
      {
        v124 = type metadata accessor for Optional(0, v64);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        v186(v118, v119, v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v118, 0, 1, v64);
      }
      v123 = 0;
    }
    swift_storeEnumTagMultiPayload(v118, v122, v123);
    __dst[*(int *)(v68 + 40)] = v190[*(int *)(v68 + 40)];
    (*(void (**)(void))(v175 + 56))();
  }
  *(_OWORD *)&a1[v11[34]] = *(_OWORD *)&a2[v11[34]];
  *(_QWORD *)&a1[v11[35]] = *(_QWORD *)&a2[v11[35]];
  *(_QWORD *)&a1[v11[36]] = *(_QWORD *)&a2[v11[36]];
  *(_QWORD *)&a1[v11[37]] = *(_QWORD *)&a2[v11[37]];
  v125 = v11[38];
  v126 = &a1[v125];
  v127 = &a2[v125];
  v128 = v198;
  if (v196(&a2[v125], 1, v199))
  {
    v129 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
  }
  else
  {
    v130 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(v126, v127, v130);
    v131 = *(int *)(v199 + 20);
    v132 = &v126[v131];
    v133 = &v127[v131];
    v134 = type metadata accessor for Artwork.CropStyle(0);
    v135 = *(_QWORD *)(v134 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134))
    {
      v136 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v132, v133, v134);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
    }
    v128 = v198;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v126, 0, 1, v199);
  }
  v137 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v138 = v137[5];
  v139 = &v126[v138];
  v140 = &v127[v138];
  if (v195(&v127[v138], 10, v128))
  {
    v141 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
  }
  else
  {
    __dsta = v3;
    v142 = type metadata accessor for Playlist.Variant(0);
    v143 = *(_QWORD *)(v142 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v140, 1, v142))
    {
      v144 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v139, v140, v142);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v139, 0, 1, v142);
    }
    v3 = __dsta;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v139, 0, 10, v198);
  }
  *(_QWORD *)&v126[v137[6]] = *(_QWORD *)&v127[v137[6]];
  v145 = v137[7];
  v146 = &v126[v145];
  v147 = &v127[v145];
  *(_OWORD *)v146 = *(_OWORD *)v147;
  v146[16] = v147[16];
  v148 = (int *)type metadata accessor for ContextualPreview.Data(0);
  *(_OWORD *)&v126[v148[5]] = *(_OWORD *)&v127[v148[5]];
  *(_OWORD *)&v126[v148[6]] = *(_OWORD *)&v127[v148[6]];
  *(_OWORD *)&v126[v148[7]] = *(_OWORD *)&v127[v148[7]];
  v126[v148[8]] = v127[v148[8]];
  v126[v148[9]] = v127[v148[9]];
  a1[v11[39]] = a2[v11[39]];
  a1[v11[40]] = a2[v11[40]];
  a1[v11[41]] = a2[v11[41]];
  v149 = v3[20];
  *(_OWORD *)&a1[v3[19]] = *(_OWORD *)&a2[v3[19]];
  *(_QWORD *)&a1[v149] = *(_QWORD *)&a2[v149];
  v150 = v3[21];
  v151 = v3[22];
  v152 = &a1[v150];
  v153 = &a2[v150];
  *(_QWORD *)v152 = *(_QWORD *)v153;
  v152[8] = v153[8];
  *(_OWORD *)&a1[v151] = *(_OWORD *)&a2[v151];
  v154 = v3[24];
  *(_OWORD *)&a1[v3[23]] = *(_OWORD *)&a2[v3[23]];
  v155 = &a1[v154];
  v156 = &a2[v154];
  *(_OWORD *)v155 = *(_OWORD *)v156;
  v155[16] = v156[16];
  v157 = v3[26];
  *(_OWORD *)&a1[v3[25]] = *(_OWORD *)&a2[v3[25]];
  *(_OWORD *)&a1[v157] = *(_OWORD *)&a2[v157];
  v158 = v3[28];
  *(_OWORD *)&a1[v3[27]] = *(_OWORD *)&a2[v3[27]];
  v159 = &a1[v158];
  v160 = &a2[v158];
  *(_OWORD *)v159 = *(_OWORD *)v160;
  v159[16] = v160[16];
  v161 = v3[29];
  v162 = v3[30];
  v163 = &a1[v161];
  v164 = &a2[v161];
  *(_OWORD *)v163 = *(_OWORD *)v164;
  v163[16] = v164[16];
  v165 = &a1[v162];
  v166 = &a2[v162];
  v167 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v166, v167) == 1)
  {
    v168 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v165, v166, v168);
    swift_storeEnumTagMultiPayload(v165, v167, 1);
  }
  else
  {
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
  }
  v169 = v3[31];
  v170 = &a1[v169];
  v171 = &a2[v169];
  v172 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v170, v171, v172);
  v173 = sub_100007E8C(&qword_1011A03B8);
  *(_QWORD *)&v170[*(int *)(v173 + 28)] = *(_QWORD *)&v171[*(int *)(v173 + 28)];
  return a1;
}

char *sub_1003968FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t WitnessTable;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  int v115;
  char *v116;
  uint64_t EnumCaseMultiPayload;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  int v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  size_t v250;
  void *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t (*v259)(void *, uint64_t, uint64_t);
  int v260;
  int v261;
  int *v262;
  uint64_t v263;
  void *v264;
  char *v265;
  int v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t (*v273)(void *, uint64_t, uint64_t);
  int v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  int *v279;
  uint64_t v280;
  _QWORD *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  char *v300;
  uint64_t v301;
  void *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  void *v307;
  char v308;
  uint64_t v309;
  char *v310;
  char *v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  char *v316;
  char *v317;
  char v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  char *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  char *v331;
  char *v332;
  char v333;
  uint64_t v334;
  uint64_t v335;
  char v336;
  uint64_t v337;
  char *v338;
  char *v339;
  char v340;
  uint64_t v341;
  unint64_t v342;
  char v343;
  uint64_t v344;
  char *v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  unsigned int v355;
  _QWORD *__dst;
  unsigned int __dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  uint64_t v362;
  char *v363;
  int *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  __int128 v368;
  _QWORD *v369;
  char *v370;
  _QWORD *v371;
  int *v372;
  _QWORD *v373;
  uint64_t (*v374)(char *, uint64_t, uint64_t);
  int *v375;
  uint64_t (*v376)(uint64_t, uint64_t, uint64_t);
  void *__src;
  char *__srca;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int *v383;
  uint64_t v384;
  uint64_t v385;
  void *v386;
  _QWORD *v387;
  _QWORD *v388;
  __int128 v389;

  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a3 + 24);
  v11 = *(void **)(a3 + 32);
  v10 = *(_QWORD **)(a3 + 40);
  v12 = *(_QWORD **)(a3 + 48);
  v384 = *(_QWORD *)(a3 + 16);
  v9 = v384;
  v385 = v8;
  __src = v11;
  v386 = v11;
  v387 = v10;
  __dst = v10;
  v371 = v12;
  v388 = v12;
  v375 = (int *)a3;
  v368 = *(_OWORD *)(a3 + 56);
  v389 = v368;
  v13 = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v384);
  v365 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, char *, uint64_t))(v365 + 40))(&a1[v13[19]], &a2[v13[19]], v8);
  v362 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v362 + 40))(&a1[v13[20]], &a2[v13[20]], v9);
  v383 = v13;
  v14 = v13[21];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  v367 = *(_QWORD *)(v17 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v367 + 48);
  v19 = v18(v15, 1, v17);
  v374 = v18;
  v20 = v18(v16, 1, v17);
  v379 = v17;
  if (!v19)
  {
    if (!v20)
    {
      v30 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v15, v16, v30);
      v31 = *(int *)(v17 + 20);
      v15 += v31;
      v16 += v31;
      v32 = type metadata accessor for Artwork.CropStyle(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v15, 1, v32);
      v36 = v34(v16, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v15, v16, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v15, 0, 1, v32);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v36)
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v15, v16, v32);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v32);
      }
      v28 = (uint64_t *)&unk_1011A14A0;
LABEL_8:
      v29 = sub_100007E8C(v28);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v15, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v28 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_8;
  }
  if (v20)
    goto LABEL_7;
  v21 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v15, v16, v21);
  v22 = *(int *)(v17 + 20);
  v23 = &v15[v22];
  v24 = &v16[v22];
  v25 = type metadata accessor for Artwork.CropStyle(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v367 + 56))(v15, 0, 1, v17);
LABEL_14:
  a1[v383[22]] = a2[v383[22]];
  *(_QWORD *)&a1[v383[23]] = *(_QWORD *)&a2[v383[23]];
  v37 = v383[24];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v366 = *(_QWORD *)(v40 - 8);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v366 + 48);
  v42 = v41(v38, 10, v40);
  v381 = v40;
  v376 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v41;
  v43 = v41(v39, 10, v40);
  if (!v42)
  {
    if (!v43)
    {
      v48 = type metadata accessor for Playlist.Variant(0);
      v49 = *(_QWORD *)(v48 - 8);
      v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
      v51 = v50(v38, 1, v48);
      v52 = v50(v39, 1, v48);
      if (v51)
      {
        if (!v52)
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v38, v39, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v38, 0, 1, v48);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v52)
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v38, v39, v48);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t))(v49 + 8))(v38, v48);
      }
      v47 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v38, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v47 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v43)
    goto LABEL_20;
  v44 = type metadata accessor for Playlist.Variant(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v39, 1, v44))
  {
    v46 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v38, v39, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v38, 0, 1, v44);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v366 + 56))(v38, 0, 10, v40);
LABEL_27:
  v53 = v383[25];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v57 = *(_QWORD *)v55;
  v56 = *((_QWORD *)v55 + 1);
  v58 = *((_QWORD *)v54 + 1);
  *(_QWORD *)v54 = v57;
  *((_QWORD *)v54 + 1) = v56;
  swift_bridgeObjectRelease(v58);
  v59 = v383[26];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v63 = *(_QWORD *)v61;
  v62 = *((_QWORD *)v61 + 1);
  v64 = *((_QWORD *)v60 + 1);
  *(_QWORD *)v60 = v63;
  *((_QWORD *)v60 + 1) = v62;
  swift_bridgeObjectRelease(v64);
  v65 = v383[27];
  v66 = &a1[v65];
  v67 = &a2[v65];
  *(_QWORD *)v66 = *(_QWORD *)v67;
  v66[8] = v67[8];
  v68 = v383[28];
  v69 = &a1[v68];
  v70 = &a2[v68];
  v69[8] = v70[8];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v71 = v383[29];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(_QWORD *)&a1[v71];
  v75 = *(_QWORD *)&a2[v71];
  if (v74)
  {
    if (v75)
    {
      v76 = *((_QWORD *)v73 + 1);
      *(_QWORD *)v72 = v75;
      *((_QWORD *)v72 + 1) = v76;
      swift_release();
      goto LABEL_34;
    }
    swift_release();
  }
  else if (v75)
  {
    v77 = *((_QWORD *)v73 + 1);
    *(_QWORD *)v72 = v75;
    *((_QWORD *)v72 + 1) = v77;
    goto LABEL_34;
  }
  *(_OWORD *)v72 = *(_OWORD *)v73;
LABEL_34:
  v78 = v383[30];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = type metadata accessor for ContentRating(0);
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  v84 = v83(v79, 1, v81);
  v85 = v83(v80, 1, v81);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v79, v80, v81);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v81);
LABEL_39:
    v86 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v82 + 40))(v79, v80, v81);
LABEL_40:
  v87 = v383[31];
  v88 = &a1[v87];
  v89 = &a2[v87];
  v90 = type metadata accessor for MusicFavoriteStatus(0);
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
  v93 = v92(v88, 1, v90);
  v94 = v92(v89, 1, v90);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v90);
LABEL_45:
    v95 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v91 + 40))(v88, v89, v90);
LABEL_46:
  v96 = v383[32];
  v97 = &a1[v96];
  v98 = &a2[v96];
  v99 = type metadata accessor for GenericMusicItem(0);
  v100 = *(_QWORD *)(v99 - 8);
  v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
  v102 = v101(v97, 1, v99);
  v103 = v101(v98, 1, v99);
  v380 = v8;
  if (v102)
  {
    if (!v103)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v97, v98, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v103)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v97, v99);
LABEL_51:
    v104 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    goto LABEL_52;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 40))(v97, v98, v99);
LABEL_52:
  v105 = v383[33];
  v106 = &a1[v105];
  v107 = &a2[v105];
  v384 = v9;
  v385 = v380;
  v386 = __src;
  v387 = v371;
  v388 = (_QWORD *)v368;
  v108 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v384);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v108);
  v111 = type metadata accessor for SourcedPlaybackIntent(0, v108, WitnessTable, v110);
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
  v114 = v113(v106, 1, v111);
  __srca = v107;
  v115 = v113(v107, 1, v111);
  if (v114)
  {
    if (!v115)
    {
      v116 = v107;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v107, v108);
      v118 = EnumCaseMultiPayload;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v119 = v380;
        v124 = type metadata accessor for MusicItemCollection(0, v380, __dst[1]);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v106, __srca, v124);
      }
      else if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v362 + 32))(v106, v107, v9);
        v119 = v380;
      }
      else
      {
        v355 = EnumCaseMultiPayload;
        (*(void (**)(char *, char *, uint64_t))(v362 + 32))(v106, v107, v9);
        v125 = type metadata accessor for Library.Context(255);
        v126 = *(int *)(swift_getTupleTypeMetadata2(0, v9, v125, " context ", 0) + 48);
        v127 = &v106[v126];
        v128 = &__srca[v126];
        *(_QWORD *)v127 = *(_QWORD *)&__srca[v126];
        v372 = (int *)v125;
        v129 = *(int *)(v125 + 20);
        v369 = v127;
        v130 = &v127[v129];
        v363 = v128;
        v131 = &v128[v129];
        v132 = type metadata accessor for Album(0);
        v133 = *(_QWORD *)(v132 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
        {
          v134 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v130, v131, v132);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        v147 = v372[6];
        v148 = (char *)v369 + v147;
        v149 = &v363[v147];
        v150 = type metadata accessor for Artist(0);
        v151 = *(_QWORD *)(v150 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v149, 1, v150))
        {
          v152 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v148, v149, v150);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
        }
        v153 = v372[7];
        v154 = (char *)v369 + v153;
        v155 = &v363[v153];
        v156 = type metadata accessor for Composer(0);
        v157 = *(_QWORD *)(v156 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
        {
          v158 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v154, v155, v156);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
        }
        v159 = v372[8];
        __dstb = (char *)v369 + v159;
        v160 = &v363[v159];
        v161 = type metadata accessor for Genre(0);
        v162 = *(_QWORD *)(v161 - 8);
        v119 = v380;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
        {
          v163 = sub_100007E8C(&qword_10119ED08);
          memcpy(__dstb, v160, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v162 + 32))(__dstb, v160, v161);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(__dstb, 0, 1, v161);
        }
        v164 = v372[9];
        __dstc = (char *)v369 + v164;
        v165 = &v363[v164];
        v166 = type metadata accessor for Playlist(0);
        v167 = *(_QWORD *)(v166 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
        {
          v168 = sub_100007E8C(&qword_1011A30F0);
          memcpy(__dstc, v165, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v167 + 32))(__dstc, v165, v166);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(__dstc, 0, 1, v166);
        }
        v169 = v372[10];
        __dstd = (char *)v369 + v169;
        v170 = &v363[v169];
        v171 = type metadata accessor for TVShow(0);
        v172 = *(_QWORD *)(v171 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171))
        {
          v173 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(__dstd, v170, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v172 + 32))(__dstd, v170, v171);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(__dstd, 0, 1, v171);
        }
        v174 = v372[11];
        __dste = (char *)v369 + v174;
        v175 = &v363[v174];
        v176 = type metadata accessor for TVSeason(0);
        v177 = *(_QWORD *)(v176 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176))
        {
          v178 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(__dste, v175, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v177 + 32))(__dste, v175, v176);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(__dste, 0, 1, v176);
        }
        v116 = __srca;
        v118 = v355;
        *((_BYTE *)v369 + v372[12]) = v363[v372[12]];
        *((_BYTE *)v369 + v372[13]) = v363[v372[13]];
        *((_BYTE *)v369 + v372[14]) = v363[v372[14]];
        *(_OWORD *)((char *)v369 + v372[15]) = *(_OWORD *)&v363[v372[15]];
        *(_QWORD *)((char *)v369 + v372[16]) = *(_QWORD *)&v363[v372[16]];
        *((_BYTE *)v369 + v372[17]) = v363[v372[17]];
      }
      swift_storeEnumTagMultiPayload(v106, v108, v118);
      v179 = *(int *)(v111 + 36);
      v180 = &v106[v179];
      v181 = &v116[v179];
      v184 = type metadata accessor for PlaybackEnqueueMode(0, v119, v182, v183);
      if (swift_getEnumCaseMultiPayload(v181, v184) == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v365 + 32))(v180, v181, v119);
        v185 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v365 + 48))(v181, 1, v119))
        {
          v186 = type metadata accessor for Optional(0, v119);
          memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v365 + 32))(v180, v181, v119);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v180, 0, 1, v119);
        }
        v185 = 0;
        v116 = __srca;
      }
      swift_storeEnumTagMultiPayload(v180, v184, v185);
      v106[*(int *)(v111 + 40)] = v116[*(int *)(v111 + 40)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v106, 0, 1, v111);
      goto LABEL_137;
    }
LABEL_59:
    v120 = type metadata accessor for Optional(0, v111);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    goto LABEL_137;
  }
  if (v115)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v106, v111);
    goto LABEL_59;
  }
  if (a1 != a2)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v108 - 8) + 8))(v106, v108);
    v121 = swift_getEnumCaseMultiPayload(v107, v108);
    v122 = v121;
    if ((_DWORD)v121 == 2)
    {
      v135 = v380;
      v136 = type metadata accessor for MusicItemCollection(0, v380, __dst[1]);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v106, v107, v136);
      v123 = v365;
    }
    else
    {
      if ((_DWORD)v121 == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v362 + 32))(v106, v107, v9);
        v123 = v365;
      }
      else
      {
        __dsta = v121;
        (*(void (**)(char *, char *, uint64_t))(v362 + 32))(v106, v107, v9);
        v137 = type metadata accessor for Library.Context(255);
        v138 = *(int *)(swift_getTupleTypeMetadata2(0, v9, v137, " context ", 0) + 48);
        v139 = &v106[v138];
        v140 = &v107[v138];
        *(_QWORD *)v139 = *(_QWORD *)&v107[v138];
        v364 = (int *)v137;
        v141 = *(int *)(v137 + 20);
        v373 = v139;
        v142 = &v139[v141];
        v370 = v140;
        v143 = &v140[v141];
        v144 = type metadata accessor for Album(0);
        v145 = *(_QWORD *)(v144 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
        {
          v146 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v142, v143, v144);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
        }
        v187 = v364[6];
        v188 = (char *)v373 + v187;
        v189 = &v370[v187];
        v190 = type metadata accessor for Artist(0);
        v191 = *(_QWORD *)(v190 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
        {
          v192 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v188, v189, v190);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
        }
        v193 = v364[7];
        v194 = (char *)v373 + v193;
        v195 = &v370[v193];
        v196 = type metadata accessor for Composer(0);
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        {
          v198 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v194, v195, v196);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
        }
        v199 = v364[8];
        v200 = (char *)v373 + v199;
        v201 = &v370[v199];
        v202 = type metadata accessor for Genre(0);
        v203 = *(_QWORD *)(v202 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
        {
          v204 = sub_100007E8C(&qword_10119ED08);
          memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v203 + 32))(v200, v201, v202);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
        }
        v205 = v364[9];
        v206 = (char *)v373 + v205;
        v207 = &v370[v205];
        v208 = type metadata accessor for Playlist(0);
        v209 = *(_QWORD *)(v208 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48))(v207, 1, v208))
        {
          v210 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v206, v207, v208);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56))(v206, 0, 1, v208);
        }
        v211 = v364[10];
        v212 = (char *)v373 + v211;
        v213 = &v370[v211];
        v214 = type metadata accessor for TVShow(0);
        v215 = *(_QWORD *)(v214 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
        {
          v216 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v212, v213, v214);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
        }
        v217 = v364[11];
        v218 = (char *)v373 + v217;
        v219 = &v370[v217];
        v220 = type metadata accessor for TVSeason(0);
        v221 = *(_QWORD *)(v220 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v219, 1, v220))
        {
          v222 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v218, v219, v220);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
        }
        v123 = v365;
        v122 = __dsta;
        *((_BYTE *)v373 + v364[12]) = v370[v364[12]];
        *((_BYTE *)v373 + v364[13]) = v370[v364[13]];
        *((_BYTE *)v373 + v364[14]) = v370[v364[14]];
        *(_OWORD *)((char *)v373 + v364[15]) = *(_OWORD *)&v370[v364[15]];
        *(_QWORD *)((char *)v373 + v364[16]) = *(_QWORD *)&v370[v364[16]];
        *((_BYTE *)v373 + v364[17]) = v370[v364[17]];
      }
      v135 = v380;
    }
    swift_storeEnumTagMultiPayload(v106, v108, v122);
    v223 = *(int *)(v111 + 36);
    v224 = &v106[v223];
    v225 = &v107[v223];
    v228 = type metadata accessor for PlaybackEnqueueMode(0, v135, v226, v227);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v228 - 8) + 8))(v224, v228);
    if (swift_getEnumCaseMultiPayload(v225, v228) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v224, v225, v135);
      v229 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v225, 1, v135))
      {
        v230 = type metadata accessor for Optional(0, v135);
        memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v224, v225, v135);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v224, 0, 1, v135);
      }
      v229 = 0;
    }
    swift_storeEnumTagMultiPayload(v224, v228, v229);
  }
  v106[*(int *)(v111 + 40)] = v107[*(int *)(v111 + 40)];
LABEL_137:
  v231 = v383[34];
  v232 = &a1[v231];
  v233 = &a2[v231];
  v235 = *(_QWORD *)v233;
  v234 = *((_QWORD *)v233 + 1);
  *(_QWORD *)v232 = v235;
  *((_QWORD *)v232 + 1) = v234;
  swift_release();
  *(_QWORD *)&a1[v383[35]] = *(_QWORD *)&a2[v383[35]];
  swift_release();
  *(_QWORD *)&a1[v383[36]] = *(_QWORD *)&a2[v383[36]];
  swift_release();
  v236 = v383[37];
  v237 = *(void **)&a1[v236];
  *(_QWORD *)&a1[v236] = *(_QWORD *)&a2[v236];

  v238 = v383[38];
  v239 = (uint64_t)&a1[v238];
  v240 = &a2[v238];
  v241 = v374(&a1[v238], 1, v379);
  v242 = v374(v240, 1, v379);
  if (!v241)
  {
    if (!v242)
    {
      v253 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 40))(v239, v240, v253);
      v254 = *(int *)(v379 + 20);
      v255 = (void *)(v239 + v254);
      v256 = &v240[v254];
      v257 = type metadata accessor for Artwork.CropStyle(0);
      v258 = *(_QWORD *)(v257 - 8);
      v259 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v258 + 48);
      v260 = v259(v255, 1, v257);
      v261 = v259(v256, 1, v257);
      if (v260)
      {
        if (!v261)
        {
          (*(void (**)(void *, char *, uint64_t))(v258 + 32))(v255, v256, v257);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
          goto LABEL_150;
        }
      }
      else
      {
        if (!v261)
        {
          (*(void (**)(void *, char *, uint64_t))(v258 + 40))(v255, v256, v257);
          goto LABEL_150;
        }
        (*(void (**)(void *, uint64_t))(v258 + 8))(v255, v257);
      }
      v250 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v251 = v255;
      v252 = v256;
LABEL_144:
      memcpy(v251, v252, v250);
      goto LABEL_150;
    }
    sub_10005B748(v239, type metadata accessor for ArtworkImage.ViewModel);
LABEL_143:
    v250 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v251 = (void *)v239;
    v252 = v240;
    goto LABEL_144;
  }
  if (v242)
    goto LABEL_143;
  v243 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v239, v240, v243);
  v244 = *(int *)(v379 + 20);
  v245 = (void *)(v239 + v244);
  v246 = &v240[v244];
  v247 = type metadata accessor for Artwork.CropStyle(0);
  v248 = *(_QWORD *)(v247 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v246, 1, v247))
  {
    v249 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v248 + 32))(v245, v246, v247);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v367 + 56))(v239, 0, 1, v379);
LABEL_150:
  v262 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v263 = v262[5];
  v264 = (void *)(v239 + v263);
  v265 = &v240[v263];
  v266 = v376(v239 + v263, 10, v381);
  v267 = v376((uint64_t)v265, 10, v381);
  if (v266)
  {
    if (!v267)
    {
      v268 = type metadata accessor for Playlist.Variant(0);
      v269 = *(_QWORD *)(v268 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v269 + 48))(v265, 1, v268))
      {
        v270 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v269 + 32))(v264, v265, v268);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v269 + 56))(v264, 0, 1, v268);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v366 + 56))(v264, 0, 10, v381);
      goto LABEL_163;
    }
    goto LABEL_156;
  }
  if (v267)
  {
    sub_10004FF60((uint64_t)v264, (uint64_t *)&unk_1011A3DB0);
LABEL_156:
    v271 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_157:
    memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
    goto LABEL_163;
  }
  v272 = type metadata accessor for Playlist.Variant(0);
  v382 = *(_QWORD *)(v272 - 8);
  v273 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v382 + 48);
  v274 = v273(v264, 1, v272);
  v275 = v273(v265, 1, v272);
  if (v274)
  {
    if (!v275)
    {
      (*(void (**)(void *, char *, uint64_t))(v382 + 32))(v264, v265, v272);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v382 + 56))(v264, 0, 1, v272);
      goto LABEL_163;
    }
LABEL_173:
    v271 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    goto LABEL_157;
  }
  if (v275)
  {
    (*(void (**)(void *, uint64_t))(v382 + 8))(v264, v272);
    goto LABEL_173;
  }
  (*(void (**)(void *, char *, uint64_t))(v382 + 40))(v264, v265, v272);
LABEL_163:
  *(_QWORD *)(v239 + v262[6]) = *(_QWORD *)&v240[v262[6]];
  v276 = v262[7];
  v277 = v239 + v276;
  v278 = &v240[v276];
  *(_OWORD *)v277 = *(_OWORD *)v278;
  *(_BYTE *)(v277 + 16) = v278[16];
  v279 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v280 = v279[5];
  v281 = (_QWORD *)(v239 + v280);
  v282 = &v240[v280];
  v284 = *(_QWORD *)v282;
  v283 = *((_QWORD *)v282 + 1);
  v285 = v281[1];
  *v281 = v284;
  v281[1] = v283;
  swift_bridgeObjectRelease(v285);
  v286 = v279[6];
  v287 = (_QWORD *)(v239 + v286);
  v288 = &v240[v286];
  v290 = *(_QWORD *)v288;
  v289 = *((_QWORD *)v288 + 1);
  v291 = v287[1];
  *v287 = v290;
  v287[1] = v289;
  swift_bridgeObjectRelease(v291);
  v292 = v279[7];
  v293 = (_QWORD *)(v239 + v292);
  v294 = &v240[v292];
  v296 = *(_QWORD *)v294;
  v295 = *((_QWORD *)v294 + 1);
  v297 = v293[1];
  *v293 = v296;
  v293[1] = v295;
  swift_bridgeObjectRelease(v297);
  *(_BYTE *)(v239 + v279[8]) = v240[v279[8]];
  *(_BYTE *)(v239 + v279[9]) = v240[v279[9]];
  a1[v383[39]] = a2[v383[39]];
  a1[v383[40]] = a2[v383[40]];
  a1[v383[41]] = a2[v383[41]];
  v298 = v375[19];
  v299 = &a1[v298];
  v300 = &a2[v298];
  *v299 = *v300;
  *((_QWORD *)v299 + 1) = *((_QWORD *)v300 + 1);
  swift_release();
  v301 = v375[20];
  v302 = *(void **)&a1[v301];
  *(_QWORD *)&a1[v301] = *(_QWORD *)&a2[v301];

  v303 = v375[21];
  v304 = &a1[v303];
  v305 = &a2[v303];
  v306 = *(_QWORD *)v305;
  LOBYTE(v305) = v305[8];
  v307 = *(void **)v304;
  v308 = v304[8];
  *(_QWORD *)v304 = v306;
  v304[8] = (char)v305;
  sub_1000A4224(v307, v308);
  v309 = v375[22];
  v310 = &a1[v309];
  v311 = &a2[v309];
  *(_QWORD *)&a1[v309] = *(_QWORD *)&a2[v309];
  swift_release();
  *((_QWORD *)v310 + 1) = *((_QWORD *)v311 + 1);
  v312 = v375[23];
  v313 = &a1[v312];
  v314 = &a2[v312];
  *(_QWORD *)&a1[v312] = *(_QWORD *)&a2[v312];
  swift_release();
  *((_QWORD *)v313 + 1) = *((_QWORD *)v314 + 1);
  v315 = v375[24];
  v316 = &a1[v315];
  v317 = &a2[v315];
  v318 = v317[16];
  v319 = *(_QWORD *)v316;
  v320 = *((_QWORD *)v316 + 1);
  *(_OWORD *)v316 = *(_OWORD *)v317;
  v316[16] = v318;
  sub_1000A6174(v319, v320);
  v321 = v375[25];
  v322 = &a1[v321];
  v323 = &a2[v321];
  *(_QWORD *)&a1[v321] = *(_QWORD *)&a2[v321];
  swift_release();
  *((_QWORD *)v322 + 1) = *((_QWORD *)v323 + 1);
  v324 = v375[26];
  v325 = &a1[v324];
  v326 = &a2[v324];
  *(_QWORD *)&a1[v324] = *(_QWORD *)&a2[v324];
  swift_release();
  *((_QWORD *)v325 + 1) = *((_QWORD *)v326 + 1);
  v327 = v375[27];
  v328 = &a1[v327];
  v329 = &a2[v327];
  *(_QWORD *)&a1[v327] = *(_QWORD *)&a2[v327];
  swift_release();
  *((_QWORD *)v328 + 1) = *((_QWORD *)v329 + 1);
  v330 = v375[28];
  v331 = &a1[v330];
  v332 = &a2[v330];
  v333 = v332[16];
  v334 = *(_QWORD *)v331;
  v335 = *((_QWORD *)v331 + 1);
  v336 = v331[16];
  *(_OWORD *)v331 = *(_OWORD *)v332;
  v331[16] = v333;
  sub_1000A4230(v334, v335, v336);
  v337 = v375[29];
  v338 = &a1[v337];
  v339 = &a2[v337];
  v340 = v339[16];
  v341 = *(_QWORD *)v338;
  v342 = *((_QWORD *)v338 + 1);
  v343 = v338[16];
  *(_OWORD *)v338 = *(_OWORD *)v339;
  v338[16] = v340;
  sub_1000A4240(v341, v342, v343);
  if (a1 != a2)
  {
    v344 = v375[30];
    v345 = &a1[v344];
    v346 = &a2[v344];
    sub_10004FF60((uint64_t)&a1[v344], (uint64_t *)&unk_1011C72D0);
    v347 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v346, v347) == 1)
    {
      v348 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v348 - 8) + 32))(v345, v346, v348);
      swift_storeEnumTagMultiPayload(v345, v347, 1);
    }
    else
    {
      memcpy(v345, v346, *(_QWORD *)(*(_QWORD *)(v347 - 8) + 64));
    }
  }
  v349 = v375[31];
  v350 = &a1[v349];
  v351 = &a2[v349];
  v352 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v352 - 8) + 40))(v350, v351, v352);
  v353 = sub_100007E8C(&qword_1011A03B8);
  *(_QWORD *)&v350[*(int *)(v353 + 28)] = *(_QWORD *)&v351[*(int *)(v353 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_1003985C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003985D4);
}

uint64_t sub_1003985D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;

  v6 = *(_QWORD *)(a3 + 64);
  v7 = *(_OWORD *)(a3 + 32);
  v17[0] = *(_OWORD *)(a3 + 16);
  v17[1] = v7;
  v17[2] = *(_OWORD *)(a3 + 48);
  v18 = v6;
  v8 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)v17);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, a2, v8);
  if ((_DWORD)a2 == 2147483646)
  {
    v11 = *(_QWORD *)(a1 + *(int *)(a3 + 76) + 8);
    if (v11 >= 0xFFFFFFFF)
      LODWORD(v11) = -1;
    v12 = v11 - 1;
    if (v12 < 0)
      v12 = -1;
    return (v12 + 1);
  }
  else
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v15 = v13;
      v16 = *(int *)(a3 + 120);
    }
    else
    {
      v15 = sub_100007E8C(&qword_1011A03B8);
      v14 = *(_QWORD *)(v15 - 8);
      v16 = *(int *)(a3 + 124);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a1 + v16, a2, v15);
  }
}

uint64_t sub_1003986D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003986E0);
}

uint64_t sub_1003986E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  __int128 v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[3];
  uint64_t v17;

  v8 = *(_QWORD *)(a4 + 64);
  v9 = *(_OWORD *)(a4 + 32);
  v16[0] = *(_OWORD *)(a4 + 16);
  v16[1] = v9;
  v16[2] = *(_OWORD *)(a4 + 48);
  v17 = v8;
  result = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)v16);
  v11 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, a2, a2, result);
  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 76) + 8) = a2;
  }
  else
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v13 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      v14 = v12;
      v15 = *(int *)(a4 + 120);
    }
    else
    {
      v14 = sub_100007E8C(&qword_1011A03B8);
      v13 = *(_QWORD *)(v14 - 8);
      v15 = *(int *)(a4 + 124);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1 + v15, a2, a2, v14);
  }
  return result;
}

uint64_t type metadata accessor for ContainerTrackRow(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ContainerTrackRow);
}

uint64_t sub_1003987DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 80);
}

uint64_t sub_1003987E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  _QWORD v12[6];

  v12[0] = &unk_100EB76B8;
  v12[1] = &unk_100EB76B8;
  v12[2] = &unk_100EB7638;
  v2 = *(_QWORD *)(a1 + 32);
  v9 = *(_OWORD *)(a1 + 16);
  v10 = v2;
  v11 = *(_OWORD *)(a1 + 48);
  v3 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v9);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v3);
  v6 = type metadata accessor for SourcedPlaybackIntent(255, v3, WitnessTable, v5);
  result = type metadata accessor for Optional(319, v6);
  if (v8 <= 0x3F)
  {
    v12[3] = *(_QWORD *)(result - 8) + 64;
    v12[4] = &unk_100EB76B8;
    v12[5] = &unk_100EB7650;
    swift_initStructMetadata(a1, 0, 6, v12, a1 + 72);
    return 0;
  }
  return result;
}

uint64_t *sub_1003988C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  id v92;
  char *v94;
  char *__dst;
  unsigned int v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  int *v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = *(int *)(a3 + 84);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)(a3 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v103 = v13;
    v102 = *(_OWORD *)(a3 + 24);
    v14 = *(_OWORD *)(a3 + 48);
    v104 = v102;
    v105 = v14;
    v15 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v103);
    WitnessTable = swift_getWitnessTable(&unk_100EAF138, v15);
    v18 = type metadata accessor for SourcedPlaybackIntent(0, v15, WitnessTable, v17);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18))
    {
      v20 = type metadata accessor for Optional(0, v18);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v15);
      v23 = EnumCaseMultiPayload;
      v97 = v19;
      v98 = v11;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v24 = type metadata accessor for MusicItemCollection(0, v102, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v12, v24);
      }
      else if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      }
      else
      {
        v96 = EnumCaseMultiPayload;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        v25 = type metadata accessor for Library.Context(255);
        v26 = *(int *)(swift_getTupleTypeMetadata2(0, v13, v25, " context ", 0) + 48);
        v27 = &v11[v26];
        v28 = &v12[v26];
        *(_QWORD *)v27 = *(_QWORD *)&v12[v26];
        v100 = &v11[v26];
        v101 = (int *)v25;
        v29 = *(int *)(v25 + 20);
        v94 = v12;
        __dst = &v27[v29];
        v99 = v28;
        v30 = &v28[v29];
        v31 = type metadata accessor for Album(0);
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v32 + 48);
        v34 = swift_retain();
        if (v33(v30, 1, v31, v34))
        {
          v35 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
        }
        v36 = v101[6];
        v37 = &v100[v36];
        v38 = &v99[v36];
        v39 = type metadata accessor for Artist(0);
        v40 = *(_QWORD *)(v39 - 8);
        v12 = v94;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
          v41 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
        v42 = v101[7];
        v43 = &v100[v42];
        v44 = &v99[v42];
        v45 = type metadata accessor for Composer(0);
        v46 = *(_QWORD *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
        {
          v47 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        v48 = v101[8];
        v49 = &v100[v48];
        v50 = &v99[v48];
        v51 = type metadata accessor for Genre(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          v53 = sub_100007E8C(&qword_10119ED08);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        v54 = v101[9];
        v55 = &v100[v54];
        v56 = &v99[v54];
        v57 = type metadata accessor for Playlist(0);
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          v59 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        v60 = v101[10];
        v61 = &v100[v60];
        v62 = &v99[v60];
        v63 = type metadata accessor for TVShow(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          v65 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v66 = v101[11];
        v67 = &v100[v66];
        v68 = &v99[v66];
        v69 = type metadata accessor for TVSeason(0);
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        {
          v71 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        }
        v11 = v98;
        v23 = v96;
        v100[v101[12]] = v99[v101[12]];
        v100[v101[13]] = v99[v101[13]];
        v100[v101[14]] = v99[v101[14]];
        v72 = v101[15];
        v73 = &v100[v72];
        v74 = &v99[v72];
        v75 = *((_QWORD *)v74 + 1);
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *((_QWORD *)v73 + 1) = v75;
        *(_QWORD *)&v100[v101[16]] = *(_QWORD *)&v99[v101[16]];
        v100[v101[17]] = v99[v101[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload(v11, v15, v23);
      v76 = *(int *)(v18 + 36);
      v77 = &v11[v76];
      v78 = &v12[v76];
      v81 = type metadata accessor for PlaybackEnqueueMode(0, v102, v79, v80);
      v82 = swift_getEnumCaseMultiPayload(v78, v81);
      v83 = *(_QWORD *)(v102 - 8);
      if (v82 == 1)
      {
        (*(void (**)(char *, char *, _QWORD))(v83 + 16))(v77, v78, v102);
        v84 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v83 + 48))(v78, 1, v102))
        {
          v85 = type metadata accessor for Optional(0, v102);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, _QWORD))(v83 + 16))(v77, v78, v102);
          (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v83 + 56))(v77, 0, 1, v102);
        }
        v84 = 0;
      }
      swift_storeEnumTagMultiPayload(v77, v81, v84);
      v98[*(int *)(v18 + 40)] = v12[*(int *)(v18 + 40)];
      (*(void (**)(void))(v97 + 56))();
    }
    v86 = *(int *)(a3 + 88);
    v87 = *(int *)(a3 + 92);
    v88 = (uint64_t *)((char *)a1 + v86);
    v89 = (uint64_t *)((char *)a2 + v86);
    v90 = v89[1];
    *v88 = *v89;
    v88[1] = v90;
    v91 = *(void **)((char *)a2 + v87);
    *(uint64_t *)((char *)a1 + v87) = (uint64_t)v91;
    swift_retain();
    v92 = v91;
  }
  return a1;
}

void sub_100399048(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  __int128 v47;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  v4 = (char *)a1 + *(int *)(a2 + 84);
  v5 = *(_QWORD *)(a2 + 16);
  v45 = v5;
  v44 = *(__n128 *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 48);
  v46 = v44;
  v47 = v6;
  v7 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v45);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v7);
  v10 = type metadata accessor for SourcedPlaybackIntent(0, v7, WitnessTable, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v4, 1, v10))
    goto LABEL_26;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v7);
  if (EnumCaseMultiPayload == 2)
  {
    v38 = type metadata accessor for MusicItemCollection(0, v44.n128_u64[0], *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8));
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v4, v38);
LABEL_22:
    v14 = v44.n128_u64[0];
    goto LABEL_23;
  }
  v14 = v44.n128_u64[0];
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    goto LABEL_22;
  }
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(v4, v5, v44);
    v15 = (int *)type metadata accessor for Library.Context(255);
    v16 = &v4[*(int *)(swift_getTupleTypeMetadata2(0, v5, v15, " context ", 0) + 48)];
    swift_release();
    v17 = &v16[v15[5]];
    v18 = type metadata accessor for Album(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    v20 = &v16[v15[6]];
    v21 = type metadata accessor for Artist(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
    v23 = &v16[v15[7]];
    v24 = type metadata accessor for Composer(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    v26 = &v16[v15[8]];
    v27 = type metadata accessor for Genre(0);
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    v29 = &v16[v15[9]];
    v30 = type metadata accessor for Playlist(0);
    v31 = *(_QWORD *)(v30 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
    v32 = &v16[v15[10]];
    v33 = type metadata accessor for TVShow(0);
    v34 = *(_QWORD *)(v33 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
    v35 = &v16[v15[11]];
    v36 = type metadata accessor for TVSeason(0);
    v37 = *(_QWORD *)(v36 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
    swift_bridgeObjectRelease(*(_QWORD *)&v16[v15[15] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v16[v15[16]]);
    goto LABEL_22;
  }
LABEL_23:
  v39 = &v4[*(int *)(v10 + 36)];
  v40 = v14;
  v41 = type metadata accessor for PlaybackEnqueueMode(0, v14, v12, v13);
  v42 = swift_getEnumCaseMultiPayload(v39, v41);
  v43 = *(_QWORD *)(v40 - 8);
  if (v42 == 1 || !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v39, 1, v40))
    (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v40);
LABEL_26:
  swift_release();

}

_QWORD *sub_100399420(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  char *v92;
  char *__dst;
  unsigned int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  int *v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = *(int *)(a3 + 84);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v101 = v12;
  v100 = *(_OWORD *)(a3 + 24);
  v13 = *(_OWORD *)(a3 + 48);
  v102 = v100;
  v103 = v13;
  v14 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v101);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v14);
  v17 = type metadata accessor for SourcedPlaybackIntent(0, v14, WitnessTable, v16);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17))
  {
    v19 = type metadata accessor for Optional(0, v17);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v14);
    v21 = EnumCaseMultiPayload;
    v95 = v18;
    v96 = v10;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v22 = type metadata accessor for MusicItemCollection(0, v100, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v10, v11, v22);
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      v94 = EnumCaseMultiPayload;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v23 = type metadata accessor for Library.Context(255);
      v24 = *(int *)(swift_getTupleTypeMetadata2(0, v12, v23, " context ", 0) + 48);
      v25 = &v10[v24];
      v26 = &v11[v24];
      *(_QWORD *)v25 = *(_QWORD *)&v11[v24];
      v98 = &v10[v24];
      v99 = (int *)v23;
      v27 = *(int *)(v23 + 20);
      v92 = v11;
      __dst = &v25[v27];
      v97 = v26;
      v28 = &v26[v27];
      v29 = type metadata accessor for Album(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v30 + 48);
      v32 = swift_retain();
      if (v31(v28, 1, v29, v32))
      {
        v33 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
      }
      v11 = v92;
      v34 = v99[6];
      v35 = &v98[v34];
      v36 = &v97[v34];
      v37 = type metadata accessor for Artist(0);
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        v39 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v40 = v99[7];
      v41 = &v98[v40];
      v42 = &v97[v40];
      v43 = type metadata accessor for Composer(0);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        v45 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      v46 = v99[8];
      v47 = &v98[v46];
      v48 = &v97[v46];
      v49 = type metadata accessor for Genre(0);
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = sub_100007E8C(&qword_10119ED08);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      v52 = v99[9];
      v53 = &v98[v52];
      v54 = &v97[v52];
      v55 = type metadata accessor for Playlist(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      v58 = v99[10];
      v59 = &v98[v58];
      v60 = &v97[v58];
      v61 = type metadata accessor for TVShow(0);
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        v63 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      v64 = v99[11];
      v65 = &v98[v64];
      v66 = &v97[v64];
      v67 = type metadata accessor for TVSeason(0);
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        v69 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      v10 = v96;
      v21 = v94;
      v98[v99[12]] = v97[v99[12]];
      v98[v99[13]] = v97[v99[13]];
      v98[v99[14]] = v97[v99[14]];
      v70 = v99[15];
      v71 = &v98[v70];
      v72 = &v97[v70];
      v73 = *((_QWORD *)v72 + 1);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = v73;
      *(_QWORD *)&v98[v99[16]] = *(_QWORD *)&v97[v99[16]];
      v98[v99[17]] = v97[v99[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload(v10, v14, v21);
    v74 = *(int *)(v17 + 36);
    v75 = &v10[v74];
    v76 = &v11[v74];
    v79 = type metadata accessor for PlaybackEnqueueMode(0, v100, v77, v78);
    v80 = swift_getEnumCaseMultiPayload(v76, v79);
    v81 = *(_QWORD *)(v100 - 8);
    if (v80 == 1)
    {
      (*(void (**)(char *, char *, _QWORD))(v81 + 16))(v75, v76, v100);
      v82 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v81 + 48))(v76, 1, v100))
      {
        v83 = type metadata accessor for Optional(0, v100);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, _QWORD))(v81 + 16))(v75, v76, v100);
        (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v81 + 56))(v75, 0, 1, v100);
      }
      v82 = 0;
    }
    swift_storeEnumTagMultiPayload(v75, v79, v82);
    v96[*(int *)(v17 + 40)] = v11[*(int *)(v17 + 40)];
    (*(void (**)(void))(v95 + 56))();
  }
  v84 = *(int *)(a3 + 88);
  v85 = *(int *)(a3 + 92);
  v86 = (_QWORD *)((char *)a1 + v84);
  v87 = (_QWORD *)((char *)a2 + v84);
  v88 = v87[1];
  *v86 = *v87;
  v86[1] = v88;
  v89 = *(void **)((char *)a2 + v85);
  *(_QWORD *)((char *)a1 + v85) = v89;
  swift_retain();
  v90 = v89;
  return a1;
}

_QWORD *sub_100399B78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  void *v153;
  void *v154;
  id v155;
  unsigned int __dst;
  char *__dsta;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  unsigned int v164;
  char *v165;
  char *v166;
  int *v167;
  _QWORD *v168;
  char *v169;
  char *v170;
  __int128 v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = *(int *)(a3 + 84);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)(a3 + 16);
  v174 = v12;
  v171 = *(_OWORD *)(a3 + 24);
  v13 = *(_OWORD *)(a3 + 48);
  v175 = v171;
  v176 = v13;
  v14 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v174);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v14);
  v17 = type metadata accessor for SourcedPlaybackIntent(0, v14, WitnessTable, v16);
  v172 = *(_QWORD *)(v17 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v172 + 48);
  v19 = v18(v10, 1, v17);
  v20 = v18(v11, 1, v17);
  if (v19)
  {
    if (!v20)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v14);
      v22 = EnumCaseMultiPayload;
      v169 = v10;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v26 = type metadata accessor for MusicItemCollection(0, v171, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, v11, v26);
      }
      else if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      }
      else
      {
        __dst = EnumCaseMultiPayload;
        v159 = v14;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        v27 = type metadata accessor for Library.Context(255);
        v28 = *(int *)(swift_getTupleTypeMetadata2(0, v12, v27, " context ", 0) + 48);
        v29 = &v10[v28];
        v30 = &v11[v28];
        *(_QWORD *)v29 = *(_QWORD *)&v11[v28];
        v165 = &v10[v28];
        v167 = (int *)v27;
        v31 = *(int *)(v27 + 20);
        v32 = &v29[v31];
        v161 = v11;
        v163 = v30;
        v33 = &v30[v31];
        v34 = type metadata accessor for Album(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48);
        v37 = swift_retain();
        if (v36(v33, 1, v34, v37))
        {
          v38 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v51 = v167[6];
        v52 = &v165[v51];
        v53 = &v163[v51];
        v54 = type metadata accessor for Artist(0);
        v55 = *(_QWORD *)(v54 - 8);
        v10 = v169;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
        {
          v56 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        v14 = v159;
        v57 = v167[7];
        v58 = &v165[v57];
        v59 = &v163[v57];
        v60 = type metadata accessor for Composer(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
        {
          v62 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        v63 = v167[8];
        v64 = &v165[v63];
        v65 = &v163[v63];
        v66 = type metadata accessor for Genre(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = sub_100007E8C(&qword_10119ED08);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        v69 = v167[9];
        v70 = &v165[v69];
        v71 = &v163[v69];
        v72 = type metadata accessor for Playlist(0);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          v74 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        v75 = v167[10];
        v76 = &v165[v75];
        v77 = &v163[v75];
        v78 = type metadata accessor for TVShow(0);
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          v80 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v76, v77, v78);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        v81 = v167[11];
        v82 = &v165[v81];
        v83 = &v163[v81];
        v84 = type metadata accessor for TVSeason(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
        {
          v86 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        }
        v11 = v161;
        v22 = __dst;
        v165[v167[12]] = v163[v167[12]];
        v165[v167[13]] = v163[v167[13]];
        v165[v167[14]] = v163[v167[14]];
        v87 = v167[15];
        v88 = &v165[v87];
        v89 = &v163[v87];
        *(_QWORD *)v88 = *(_QWORD *)v89;
        *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
        *(_QWORD *)&v165[v167[16]] = *(_QWORD *)&v163[v167[16]];
        v165[v167[17]] = v163[v167[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload(v10, v14, v22);
      v90 = *(int *)(v17 + 36);
      v91 = &v10[v90];
      v92 = &v11[v90];
      v95 = type metadata accessor for PlaybackEnqueueMode(0, v171, v93, v94);
      v96 = swift_getEnumCaseMultiPayload(v92, v95);
      v97 = *(_QWORD *)(v171 - 8);
      if (v96 == 1)
      {
        (*(void (**)(char *, char *, _QWORD))(v97 + 16))(v91, v92, v171);
        v98 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v97 + 48))(v92, 1, v171))
        {
          v99 = type metadata accessor for Optional(0, v171);
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, _QWORD))(v97 + 16))(v91, v92, v171);
          (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v97 + 56))(v91, 0, 1, v171);
        }
        v98 = 0;
      }
      swift_storeEnumTagMultiPayload(v91, v95, v98);
      v169[*(int *)(v17 + 40)] = v11[*(int *)(v17 + 40)];
      (*(void (**)(void))(v172 + 56))();
      goto LABEL_76;
    }
LABEL_8:
    v23 = type metadata accessor for Optional(0, v17);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_76;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v172 + 8))(v10, v17);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v10, v14);
    v24 = swift_getEnumCaseMultiPayload(v11, v14);
    v25 = v24;
    if ((_DWORD)v24 == 2)
    {
      v39 = type metadata accessor for MusicItemCollection(0, v171, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v10, v11, v39);
    }
    else if ((_DWORD)v24 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      v164 = v24;
      v160 = v14;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v40 = type metadata accessor for Library.Context(255);
      v41 = *(int *)(swift_getTupleTypeMetadata2(0, v12, v40, " context ", 0) + 48);
      v42 = &v10[v41];
      v162 = v11;
      v43 = &v11[v41];
      *(_QWORD *)v42 = *(_QWORD *)&v11[v41];
      v173 = (int *)v40;
      v44 = *(int *)(v40 + 20);
      v166 = v43;
      v168 = v42;
      __dsta = &v42[v44];
      v45 = &v43[v44];
      v46 = type metadata accessor for Album(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v47 + 48);
      v49 = swift_retain();
      if (v48(v45, 1, v46, v49))
      {
        v50 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dsta, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dsta, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dsta, 0, 1, v46);
      }
      v100 = v173[6];
      v101 = (char *)v168 + v100;
      v102 = &v166[v100];
      v103 = type metadata accessor for Artist(0);
      v104 = *(_QWORD *)(v103 - 8);
      v14 = v160;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
      {
        v105 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v101, v102, v103);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
      }
      v106 = v173[7];
      v107 = (char *)v168 + v106;
      v108 = &v166[v106];
      v109 = type metadata accessor for Composer(0);
      v110 = *(_QWORD *)(v109 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
      {
        v111 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v107, v108, v109);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
      }
      v112 = v173[8];
      v113 = (char *)v168 + v112;
      v114 = &v166[v112];
      v115 = type metadata accessor for Genre(0);
      v116 = *(_QWORD *)(v115 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115))
      {
        v117 = sub_100007E8C(&qword_10119ED08);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v113, v114, v115);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
      }
      v118 = v173[9];
      v119 = (char *)v168 + v118;
      v120 = &v166[v118];
      v121 = type metadata accessor for Playlist(0);
      v122 = *(_QWORD *)(v121 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
      {
        v123 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v119, v120, v121);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
      }
      v124 = v173[10];
      v125 = (char *)v168 + v124;
      v126 = &v166[v124];
      v127 = type metadata accessor for TVShow(0);
      v128 = *(_QWORD *)(v127 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
      {
        v129 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v125, v126, v127);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
      }
      v130 = v173[11];
      v131 = (char *)v168 + v130;
      v132 = &v166[v130];
      v133 = type metadata accessor for TVSeason(0);
      v134 = *(_QWORD *)(v133 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
      {
        v135 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v131, v132, v133);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
      }
      v11 = v162;
      v25 = v164;
      *((_BYTE *)v168 + v173[12]) = v166[v173[12]];
      *((_BYTE *)v168 + v173[13]) = v166[v173[13]];
      *((_BYTE *)v168 + v173[14]) = v166[v173[14]];
      v136 = v173[15];
      v137 = (_QWORD *)((char *)v168 + v136);
      v138 = &v166[v136];
      *v137 = *(_QWORD *)v138;
      v137[1] = *((_QWORD *)v138 + 1);
      *(_QWORD *)((char *)v168 + v173[16]) = *(_QWORD *)&v166[v173[16]];
      *((_BYTE *)v168 + v173[17]) = v166[v173[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload(v10, v14, v25);
    v139 = *(int *)(v17 + 36);
    v170 = v10;
    v140 = &v10[v139];
    v141 = &v11[v139];
    v144 = type metadata accessor for PlaybackEnqueueMode(0, v171, v142, v143);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v144 - 8) + 8))(v140, v144);
    v145 = swift_getEnumCaseMultiPayload(v141, v144);
    v146 = *(_QWORD *)(v171 - 8);
    if (v145 == 1)
    {
      (*(void (**)(char *, char *, _QWORD))(v146 + 16))(v140, v141, v171);
      v147 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v146 + 48))(v141, 1, v171))
      {
        v148 = type metadata accessor for Optional(0, v171);
        memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, _QWORD))(v146 + 16))(v140, v141, v171);
        (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v146 + 56))(v140, 0, 1, v171);
      }
      v147 = 0;
    }
    swift_storeEnumTagMultiPayload(v140, v144, v147);
    v10 = v170;
  }
  v10[*(int *)(v17 + 40)] = v11[*(int *)(v17 + 40)];
LABEL_76:
  v149 = *(int *)(a3 + 88);
  v150 = (_QWORD *)((char *)a1 + v149);
  v151 = (_QWORD *)((char *)a2 + v149);
  *v150 = *v151;
  v150[1] = v151[1];
  swift_retain();
  swift_release();
  v152 = *(int *)(a3 + 92);
  v153 = *(void **)((char *)a1 + v152);
  v154 = *(void **)((char *)a2 + v152);
  *(_QWORD *)((char *)a1 + v152) = v154;
  v155 = v154;

  return a1;
}

_OWORD *sub_10039A9D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  int *v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 84);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)(a3 + 16);
  v86 = v10;
  v85 = *(_OWORD *)(a3 + 24);
  v11 = *(_OWORD *)(a3 + 48);
  v87 = v85;
  v88 = v11;
  v12 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v86);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v12);
  v15 = type metadata accessor for SourcedPlaybackIntent(0, v12, WitnessTable, v14);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15))
  {
    v17 = type metadata accessor for Optional(0, v15);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v12);
    v19 = EnumCaseMultiPayload;
    v80 = v16;
    v81 = v8;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v20 = type metadata accessor for MusicItemCollection(0, v85, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v8, v9, v20);
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    }
    else
    {
      v79 = EnumCaseMultiPayload;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v21 = type metadata accessor for Library.Context(255);
      v22 = *(int *)(swift_getTupleTypeMetadata2(0, v10, v21, " context ", 0) + 48);
      v23 = &v8[v22];
      v24 = &v9[v22];
      *(_QWORD *)v23 = *(_QWORD *)&v9[v22];
      v83 = &v8[v22];
      v84 = (int *)v21;
      v25 = *(int *)(v21 + 20);
      v26 = &v23[v25];
      v82 = v24;
      v27 = &v24[v25];
      v28 = type metadata accessor for Album(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v31 = v84[6];
      v32 = &v83[v31];
      v33 = &v82[v31];
      v34 = type metadata accessor for Artist(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v84[7];
      v38 = &v83[v37];
      v39 = &v82[v37];
      v40 = type metadata accessor for Composer(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v84[8];
      v44 = &v83[v43];
      v45 = &v82[v43];
      v46 = type metadata accessor for Genre(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C(&qword_10119ED08);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v84[9];
      v50 = &v83[v49];
      v51 = &v82[v49];
      v52 = type metadata accessor for Playlist(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v84[10];
      v56 = &v83[v55];
      v57 = &v82[v55];
      v58 = type metadata accessor for TVShow(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      v61 = v84[11];
      v62 = &v83[v61];
      v63 = &v82[v61];
      v64 = type metadata accessor for TVSeason(0);
      v65 = *(_QWORD *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        v66 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      v8 = v81;
      v19 = v79;
      v83[v84[12]] = v82[v84[12]];
      v83[v84[13]] = v82[v84[13]];
      v83[v84[14]] = v82[v84[14]];
      *(_OWORD *)&v83[v84[15]] = *(_OWORD *)&v82[v84[15]];
      *(_QWORD *)&v83[v84[16]] = *(_QWORD *)&v82[v84[16]];
      v83[v84[17]] = v82[v84[17]];
    }
    swift_storeEnumTagMultiPayload(v8, v12, v19);
    v67 = *(int *)(v15 + 36);
    v68 = &v8[v67];
    v69 = &v9[v67];
    v72 = type metadata accessor for PlaybackEnqueueMode(0, v85, v70, v71);
    v73 = swift_getEnumCaseMultiPayload(v69, v72);
    v74 = *(_QWORD *)(v85 - 8);
    if (v73 == 1)
    {
      (*(void (**)(char *, char *, _QWORD))(v74 + 32))(v68, v69, v85);
      v75 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v74 + 48))(v69, 1, v85))
      {
        v76 = type metadata accessor for Optional(0, v85);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, _QWORD))(v74 + 32))(v68, v69, v85);
        (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v74 + 56))(v68, 0, 1, v85);
      }
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v68, v72, v75);
    v81[*(int *)(v15 + 40)] = v9[*(int *)(v15 + 40)];
    (*(void (**)(void))(v80 + 56))();
  }
  v77 = *(int *)(a3 + 92);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 88)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 88));
  *(_QWORD *)((char *)a1 + v77) = *(_QWORD *)((char *)a2 + v77);
  return a1;
}

_QWORD *sub_10039B0D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  unsigned int v154;
  char *v155;
  char *v156;
  char *v157;
  unsigned int v158;
  int *v159;
  _QWORD *v160;
  char *v161;
  char *v162;
  __int128 v163;
  uint64_t v164;
  int *v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 84);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)(a3 + 16);
  v166 = v15;
  v163 = *(_OWORD *)(a3 + 24);
  v16 = *(_OWORD *)(a3 + 48);
  v167 = v163;
  v168 = v16;
  v17 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v166);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v17);
  v20 = type metadata accessor for SourcedPlaybackIntent(0, v17, WitnessTable, v19);
  v164 = *(_QWORD *)(v20 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v164 + 48);
  v22 = v21(v13, 1, v20);
  v23 = v21(v14, 1, v20);
  if (v22)
  {
    if (!v23)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v17);
      v25 = EnumCaseMultiPayload;
      v161 = v13;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v29 = type metadata accessor for MusicItemCollection(0, v163, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v13, v14, v29);
      }
      else
      {
        if ((_DWORD)EnumCaseMultiPayload != 1)
        {
          v154 = EnumCaseMultiPayload;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
          v31 = type metadata accessor for Library.Context(255);
          v32 = *(int *)(swift_getTupleTypeMetadata2(0, v15, v31, " context ", 0) + 48);
          v33 = &v13[v32];
          v34 = &v14[v32];
          *(_QWORD *)v33 = *(_QWORD *)&v14[v32];
          v157 = &v13[v32];
          v159 = (int *)v31;
          v35 = *(int *)(v31 + 20);
          v36 = &v33[v35];
          v155 = v34;
          v37 = &v34[v35];
          v38 = type metadata accessor for Album(0);
          v39 = *(_QWORD *)(v38 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
          {
            v40 = sub_100007E8C(&qword_1011A8FA0);
            memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
          }
          v52 = v159[6];
          v53 = &v157[v52];
          v54 = &v155[v52];
          v55 = type metadata accessor for Artist(0);
          v56 = *(_QWORD *)(v55 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
          {
            v57 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
          }
          v58 = v159[7];
          v59 = &v157[v58];
          v60 = &v155[v58];
          v61 = type metadata accessor for Composer(0);
          v62 = *(_QWORD *)(v61 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
          {
            v63 = sub_100007E8C((uint64_t *)&unk_1011C7310);
            memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
          }
          v64 = v159[8];
          v65 = &v157[v64];
          v66 = &v155[v64];
          v67 = type metadata accessor for Genre(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          {
            v69 = sub_100007E8C(&qword_10119ED08);
            memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
          }
          v70 = v159[9];
          v71 = &v157[v70];
          v72 = &v155[v70];
          v73 = type metadata accessor for Playlist(0);
          v74 = *(_QWORD *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
          {
            v75 = sub_100007E8C(&qword_1011A30F0);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v71, v72, v73);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
          }
          v76 = v159[10];
          v77 = &v157[v76];
          v78 = &v155[v76];
          v79 = type metadata accessor for TVShow(0);
          v80 = *(_QWORD *)(v79 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
          {
            v81 = sub_100007E8C((uint64_t *)&unk_1011D1410);
            memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          }
          v82 = v159[11];
          v83 = &v157[v82];
          v84 = &v155[v82];
          v85 = type metadata accessor for TVSeason(0);
          v86 = *(_QWORD *)(v85 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
          {
            v87 = sub_100007E8C((uint64_t *)&unk_1011C7320);
            memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v83, v84, v85);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
          }
          v13 = v161;
          v157[v159[12]] = v155[v159[12]];
          v157[v159[13]] = v155[v159[13]];
          v157[v159[14]] = v155[v159[14]];
          *(_OWORD *)&v157[v159[15]] = *(_OWORD *)&v155[v159[15]];
          *(_QWORD *)&v157[v159[16]] = *(_QWORD *)&v155[v159[16]];
          v157[v159[17]] = v155[v159[17]];
          v30 = v14;
          v25 = v154;
LABEL_41:
          swift_storeEnumTagMultiPayload(v13, v17, v25);
          v88 = *(int *)(v20 + 36);
          v89 = &v13[v88];
          v90 = v30;
          v91 = &v30[v88];
          v94 = type metadata accessor for PlaybackEnqueueMode(0, v163, v92, v93);
          v95 = swift_getEnumCaseMultiPayload(v91, v94);
          v96 = *(_QWORD *)(v163 - 8);
          if (v95 == 1)
          {
            (*(void (**)(char *, char *, _QWORD))(v96 + 32))(v89, v91, v163);
            v97 = 1;
          }
          else
          {
            if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v96 + 48))(v91, 1, v163))
            {
              v98 = type metadata accessor for Optional(0, v163);
              memcpy(v89, v91, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, _QWORD))(v96 + 32))(v89, v91, v163);
              (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v96 + 56))(v89, 0, 1, v163);
            }
            v97 = 0;
          }
          swift_storeEnumTagMultiPayload(v89, v94, v97);
          v161[*(int *)(v20 + 40)] = v90[*(int *)(v20 + 40)];
          (*(void (**)(void))(v164 + 56))();
          goto LABEL_76;
        }
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      }
      v30 = v14;
      goto LABEL_41;
    }
LABEL_8:
    v26 = type metadata accessor for Optional(0, v20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_76;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v164 + 8))(v13, v20);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v13, v17);
    v27 = swift_getEnumCaseMultiPayload(v14, v17);
    v28 = v27;
    v162 = v13;
    if ((_DWORD)v27 == 2)
    {
      v41 = type metadata accessor for MusicItemCollection(0, v163, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v13, v14, v41);
    }
    else if ((_DWORD)v27 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    }
    else
    {
      v158 = v27;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      v42 = type metadata accessor for Library.Context(255);
      v43 = *(int *)(swift_getTupleTypeMetadata2(0, v15, v42, " context ", 0) + 48);
      v44 = &v13[v43];
      v156 = v14;
      v45 = &v14[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v165 = (int *)v42;
      v46 = *(int *)(v42 + 20);
      v160 = v44;
      v47 = &v44[v46];
      v48 = &v45[v46];
      v49 = type metadata accessor for Album(0);
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      v99 = v165[6];
      v100 = (char *)v160 + v99;
      v101 = &v45[v99];
      v102 = type metadata accessor for Artist(0);
      v103 = *(_QWORD *)(v102 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
      {
        v104 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v100, v101, v102);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
      }
      v105 = v165[7];
      v106 = (char *)v160 + v105;
      v107 = &v45[v105];
      v108 = type metadata accessor for Composer(0);
      v109 = *(_QWORD *)(v108 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
      {
        v110 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v106, v107, v108);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
      }
      v111 = v165[8];
      v112 = (char *)v160 + v111;
      v113 = &v45[v111];
      v114 = type metadata accessor for Genre(0);
      v115 = *(_QWORD *)(v114 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
      {
        v116 = sub_100007E8C(&qword_10119ED08);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v112, v113, v114);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
      }
      v117 = v165[9];
      v118 = (char *)v160 + v117;
      v119 = &v45[v117];
      v120 = type metadata accessor for Playlist(0);
      v121 = *(_QWORD *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        v122 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v118, v119, v120);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
      }
      v123 = v165[10];
      v124 = (char *)v160 + v123;
      v125 = &v45[v123];
      v126 = type metadata accessor for TVShow(0);
      v127 = *(_QWORD *)(v126 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
      {
        v128 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v124, v125, v126);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
      }
      v129 = v165[11];
      v130 = (char *)v160 + v129;
      v131 = &v45[v129];
      v132 = type metadata accessor for TVSeason(0);
      v133 = *(_QWORD *)(v132 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
      {
        v134 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v130, v131, v132);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
      }
      v13 = v162;
      v28 = v158;
      *((_BYTE *)v160 + v165[12]) = v45[v165[12]];
      *((_BYTE *)v160 + v165[13]) = v45[v165[13]];
      *((_BYTE *)v160 + v165[14]) = v45[v165[14]];
      *(_OWORD *)((char *)v160 + v165[15]) = *(_OWORD *)&v45[v165[15]];
      *(_QWORD *)((char *)v160 + v165[16]) = *(_QWORD *)&v45[v165[16]];
      *((_BYTE *)v160 + v165[17]) = v45[v165[17]];
      v14 = v156;
    }
    swift_storeEnumTagMultiPayload(v13, v17, v28);
    v135 = *(int *)(v20 + 36);
    v136 = &v13[v135];
    v137 = v14;
    v138 = &v14[v135];
    v141 = type metadata accessor for PlaybackEnqueueMode(0, v163, v139, v140);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v141 - 8) + 8))(v136, v141);
    v142 = swift_getEnumCaseMultiPayload(v138, v141);
    v143 = *(_QWORD *)(v163 - 8);
    if (v142 == 1)
    {
      (*(void (**)(char *, char *, _QWORD))(v143 + 32))(v136, v138, v163);
      v144 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v143 + 48))(v138, 1, v163))
      {
        v145 = type metadata accessor for Optional(0, v163);
        memcpy(v136, v138, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, _QWORD))(v143 + 32))(v136, v138, v163);
        (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v143 + 56))(v136, 0, 1, v163);
      }
      v144 = 0;
    }
    v14 = v137;
    swift_storeEnumTagMultiPayload(v136, v141, v144);
    v13 = v162;
  }
  v13[*(int *)(v20 + 40)] = v14[*(int *)(v20 + 40)];
LABEL_76:
  v146 = *(int *)(a3 + 88);
  v147 = (_QWORD *)((char *)a1 + v146);
  v148 = (_QWORD *)((char *)a2 + v146);
  v150 = *v148;
  v149 = v148[1];
  *v147 = v150;
  v147[1] = v149;
  swift_release();
  v151 = *(int *)(a3 + 92);
  v152 = *(void **)((char *)a1 + v151);
  *(_QWORD *)((char *)a1 + v151) = *(_QWORD *)((char *)a2 + v151);

  return a1;
}

uint64_t sub_10039BE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10039BE88);
}

uint64_t sub_10039BE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = *(_QWORD *)(a3 + 32);
    v14 = *(_OWORD *)(a3 + 16);
    v15 = v8;
    v16 = *(_OWORD *)(a3 + 48);
    v9 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v14);
    WitnessTable = swift_getWitnessTable(&unk_100EAF138, v9);
    v12 = type metadata accessor for SourcedPlaybackIntent(255, v9, WitnessTable, v11);
    v13 = type metadata accessor for Optional(0, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(a1 + *(int *)(a3 + 84), a2, v13);
  }
}

uint64_t sub_10039BF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10039BF5C);
}

uint64_t sub_10039BF5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = *(_QWORD *)(a4 + 32);
    v13 = *(_OWORD *)(a4 + 16);
    v14 = v7;
    v15 = *(_OWORD *)(a4 + 48);
    v8 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v13);
    WitnessTable = swift_getWitnessTable(&unk_100EAF138, v8);
    v11 = type metadata accessor for SourcedPlaybackIntent(255, v8, WitnessTable, v10);
    v12 = type metadata accessor for Optional(0, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5 + *(int *)(a4 + 84), a2, a2, v12);
  }
  return result;
}

uint64_t sub_10039C01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 152);
}

uint64_t sub_10039C024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[3];
  __int128 v25;
  _QWORD v26[24];

  v26[0] = &unk_100EB76B8;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v26[1] = *(_QWORD *)(v2 - 8) + 64;
    v5 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    v6 = v5;
    if (v7 > 0x3F)
    {
      return v5;
    }
    else
    {
      v26[2] = *(_QWORD *)(v5 - 8) + 64;
      sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v9 > 0x3F)
        return v8;
      v26[3] = *(_QWORD *)(v8 - 8) + 64;
      v26[4] = &unk_100EB76E0;
      v26[5] = (char *)&value witness table for Builtin.Int64 + 64;
      v8 = type metadata accessor for ArtworkImage.Placeholder(319);
      if (v10 > 0x3F)
        return v8;
      v26[6] = *(_QWORD *)(v8 - 8) + 64;
      v26[7] = &unk_100EB76B8;
      v26[8] = &unk_100EB7638;
      v26[9] = &unk_100EB76F8;
      v26[10] = &unk_100EB7710;
      v26[11] = &unk_100EB7638;
      sub_1000E3A44(319, &qword_1011AF918, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v11 > 0x3F)
        return v8;
      v26[12] = *(_QWORD *)(v8 - 8) + 64;
      sub_1000E3A44(319, (unint64_t *)&qword_1011A8160, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v12 > 0x3F)
        return v8;
      v26[13] = *(_QWORD *)(v8 - 8) + 64;
      sub_1000E3A44(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v13 > 0x3F)
      {
        return v8;
      }
      else
      {
        v26[14] = *(_QWORD *)(v8 - 8) + 64;
        v14 = *(_QWORD *)(a1 + 32);
        v24[0] = v6;
        v24[1] = v3;
        v24[2] = v14;
        v25 = *(_OWORD *)(a1 + 48);
        v15 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v24);
        WitnessTable = swift_getWitnessTable(&unk_100EAF138, v15);
        v18 = type metadata accessor for SourcedPlaybackIntent(255, v15, WitnessTable, v17);
        v19 = type metadata accessor for Optional(319, v18);
        v3 = v19;
        if (v20 <= 0x3F)
        {
          v26[15] = *(_QWORD *)(v19 - 8) + 64;
          v26[16] = &unk_100EB76B8;
          v26[17] = (char *)&value witness table for Builtin.NativeObject + 64;
          v26[18] = (char *)&value witness table for Builtin.NativeObject + 64;
          v26[19] = &unk_100EB7650;
          v21 = type metadata accessor for ContextualPreview.Data(319);
          v3 = v21;
          if (v22 <= 0x3F)
          {
            v26[20] = *(_QWORD *)(v21 - 8) + 64;
            v26[21] = &unk_100EB76E0;
            v26[22] = &unk_100EB76E0;
            v26[23] = &unk_100EB76E0;
            swift_initStructMetadata(a1, 0, 24, v26, a1 + 72);
            return 0;
          }
        }
      }
    }
  }
  return v3;
}

char *sub_10039C2BC(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t WitnessTable;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t EnumCaseMultiPayload;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t, __n128);
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  int *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v189;
  unsigned int v190;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  void (*v202)(char *, char *, uint64_t);
  int *v203;
  void (*v204)(char *, char *, uint64_t);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unsigned int (*v208)(char *, uint64_t, uint64_t);
  unsigned int (*v209)(char *, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD v213[3];
  __int128 v214;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v7;
  v8 = *(int *)(a3 + 76);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)(a3 + 24);
  v205 = *(_QWORD *)(v11 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v205 + 16);
  swift_bridgeObjectRetain();
  v210 = v11;
  v204 = v12;
  v12(v9, v10, v11);
  v13 = *(_QWORD *)(a3 + 16);
  v202 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v202(&a1[*(int *)(a3 + 80)], &a2[*(int *)(a3 + 80)], v13);
  v14 = *(int *)(a3 + 84);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  v207 = *(_QWORD *)(v17 - 8);
  v209 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48);
  v212 = v17;
  if (v209(v16, 1, v17))
  {
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v20 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v15, v16, v20);
    v21 = *(int *)(v17 + 20);
    v22 = &v15[v21];
    v23 = &v16[v21];
    v24 = type metadata accessor for Artwork.CropStyle(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v15, 0, 1, v212);
  }
  v27 = *(int *)(a3 + 92);
  a1[*(int *)(a3 + 88)] = a2[*(int *)(a3 + 88)];
  *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];
  v28 = *(int *)(a3 + 96);
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v206 = *(_QWORD *)(v31 - 8);
  v208 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48);
  if (v208(v30, 10, v31))
  {
    v32 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = type metadata accessor for Playlist.Variant(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v29, v30, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v29, 0, 1, v33);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v29, 0, 10, v31);
  }
  v36 = *(int *)(a3 + 100);
  v37 = *(int *)(a3 + 104);
  v38 = &a1[v36];
  v39 = &a2[v36];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = &a1[v37];
  v42 = &a2[v37];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v44 = *(int *)(a3 + 108);
  v45 = *(int *)(a3 + 112);
  v46 = &a1[v44];
  v47 = &a2[v44];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  v48 = &a1[v45];
  v49 = &a2[v45];
  v48[8] = v49[8];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v50 = *(int *)(a3 + 116);
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *(_QWORD *)&a2[v50];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53)
  {
    v54 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = v53;
    *((_QWORD *)v51 + 1) = v54;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  v55 = *(int *)(a3 + 120);
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for ContentRating(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  v61 = *(int *)(a3 + 124);
  v62 = &a1[v61];
  v63 = &a2[v61];
  v64 = type metadata accessor for MusicFavoriteStatus(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  v67 = *(int *)(a3 + 128);
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = type metadata accessor for GenericMusicItem(0);
  v71 = *(_QWORD *)(v70 - 8);
  v211 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    v72 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  v73 = *(int *)(a3 + 132);
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = *(_QWORD *)(a3 + 32);
  v77 = v11;
  v213[0] = v13;
  v213[1] = v11;
  v213[2] = v76;
  v214 = *(_OWORD *)(a3 + 48);
  v78 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v213);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v78);
  v81 = type metadata accessor for SourcedPlaybackIntent(0, v78, WitnessTable, v80);
  v82 = *(_QWORD *)(v81 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v75, 1, v81))
  {
    v198 = v82;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v75, v78);
    v199 = v74;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v85 = EnumCaseMultiPayload;
      v86 = type metadata accessor for MusicItemCollection(0, v210, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v74, v75, v86);
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v190 = EnumCaseMultiPayload;
        v202(v74, v75, v13);
        v89 = type metadata accessor for Library.Context(255);
        v90 = *(int *)(swift_getTupleTypeMetadata2(0, v13, v89, " context ", 0) + 48);
        v91 = &v74[v90];
        v189 = v75;
        v92 = &v75[v90];
        *(_QWORD *)v91 = *(_QWORD *)&v75[v90];
        v201 = &v74[v90];
        v203 = (int *)v89;
        v93 = *(int *)(v89 + 20);
        __dst = &v91[v93];
        v200 = v92;
        v94 = &v92[v93];
        v95 = type metadata accessor for Album(0);
        v96 = *(_QWORD *)(v95 - 8);
        v97 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v96 + 48);
        v98 = swift_retain();
        if (v97(v94, 1, v95, v98))
        {
          v99 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(__dst, v94, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v96 + 16))(__dst, v94, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(__dst, 0, 1, v95);
        }
        v100 = v203[6];
        __dsta = &v201[v100];
        v101 = &v200[v100];
        v102 = type metadata accessor for Artist(0);
        v103 = *(_QWORD *)(v102 - 8);
        v77 = v210;
        v75 = v189;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
        {
          v104 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(__dsta, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v103 + 16))(__dsta, v101, v102);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(__dsta, 0, 1, v102);
        }
        v105 = v203[7];
        __dstb = &v201[v105];
        v106 = &v200[v105];
        v107 = type metadata accessor for Composer(0);
        v108 = *(_QWORD *)(v107 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
        {
          v109 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(__dstb, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(__dstb, v106, v107);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(__dstb, 0, 1, v107);
        }
        v110 = v203[8];
        __dstc = &v201[v110];
        v111 = &v200[v110];
        v112 = type metadata accessor for Genre(0);
        v113 = *(_QWORD *)(v112 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
        {
          v114 = sub_100007E8C(&qword_10119ED08);
          memcpy(__dstc, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v113 + 16))(__dstc, v111, v112);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(__dstc, 0, 1, v112);
        }
        v115 = v203[9];
        __dstd = &v201[v115];
        v116 = &v200[v115];
        v117 = type metadata accessor for Playlist(0);
        v118 = *(_QWORD *)(v117 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
        {
          v119 = sub_100007E8C(&qword_1011A30F0);
          memcpy(__dstd, v116, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v118 + 16))(__dstd, v116, v117);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(__dstd, 0, 1, v117);
        }
        v120 = v203[10];
        __dste = &v201[v120];
        v121 = &v200[v120];
        v122 = type metadata accessor for TVShow(0);
        v123 = *(_QWORD *)(v122 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
        {
          v124 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(__dste, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v123 + 16))(__dste, v121, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(__dste, 0, 1, v122);
        }
        v125 = v203[11];
        __dstf = &v201[v125];
        v126 = &v200[v125];
        v127 = type metadata accessor for TVSeason(0);
        v128 = *(_QWORD *)(v127 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
        {
          v129 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(__dstf, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v128 + 16))(__dstf, v126, v127);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(__dstf, 0, 1, v127);
        }
        v88 = v205;
        v201[v203[12]] = v200[v203[12]];
        v201[v203[13]] = v200[v203[13]];
        v201[v203[14]] = v200[v203[14]];
        v130 = v203[15];
        v131 = &v201[v130];
        v132 = &v200[v130];
        v133 = *((_QWORD *)v132 + 1);
        *(_QWORD *)v131 = *(_QWORD *)v132;
        *((_QWORD *)v131 + 1) = v133;
        *(_QWORD *)&v201[v203[16]] = *(_QWORD *)&v200[v203[16]];
        v201[v203[17]] = v200[v203[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v74 = v199;
        v87 = v190;
LABEL_56:
        swift_storeEnumTagMultiPayload(v74, v78, v87);
        v134 = *(int *)(v81 + 36);
        v135 = &v74[v134];
        v136 = &v75[v134];
        v139 = type metadata accessor for PlaybackEnqueueMode(0, v77, v137, v138);
        if (swift_getEnumCaseMultiPayload(v136, v139) == 1)
        {
          v204(v135, v136, v77);
          v140 = 1;
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v136, 1, v77))
          {
            v141 = type metadata accessor for Optional(0, v77);
            memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
          }
          else
          {
            v204(v135, v136, v77);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v135, 0, 1, v77);
          }
          v140 = 0;
        }
        swift_storeEnumTagMultiPayload(v135, v139, v140);
        v199[*(int *)(v81 + 40)] = v75[*(int *)(v81 + 40)];
        (*(void (**)(void))(v198 + 56))();
        goto LABEL_63;
      }
      v85 = EnumCaseMultiPayload;
      v202(v74, v75, v13);
    }
    v87 = v85;
    v88 = v205;
    goto LABEL_56;
  }
  v83 = type metadata accessor for Optional(0, v81);
  memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
LABEL_63:
  v142 = *(int *)(a3 + 136);
  v143 = *(int *)(a3 + 140);
  v144 = &a1[v142];
  v145 = &a2[v142];
  v146 = *((_QWORD *)v145 + 1);
  *(_QWORD *)v144 = *(_QWORD *)v145;
  *((_QWORD *)v144 + 1) = v146;
  *(_QWORD *)&a1[v143] = *(_QWORD *)&a2[v143];
  v147 = *(int *)(a3 + 148);
  *(_QWORD *)&a1[*(int *)(a3 + 144)] = *(_QWORD *)&a2[*(int *)(a3 + 144)];
  v148 = *(void **)&a2[v147];
  *(_QWORD *)&a1[v147] = v148;
  v149 = *(int *)(a3 + 152);
  v150 = &a1[v149];
  v151 = &a2[v149];
  swift_retain();
  swift_retain();
  swift_retain();
  v152 = v148;
  v153 = v211;
  if (v209(v151, 1, v212))
  {
    v154 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
  }
  else
  {
    v155 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v150, v151, v155);
    v156 = *(int *)(v212 + 20);
    v157 = &v150[v156];
    v158 = &v151[v156];
    v159 = type metadata accessor for Artwork.CropStyle(0);
    v160 = *(_QWORD *)(v159 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
    {
      v161 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v157, v158, v159);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
    }
    v153 = v211;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v150, 0, 1, v212);
  }
  v162 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v163 = v162[5];
  v164 = &v150[v163];
  v165 = &v151[v163];
  if (v208(&v151[v163], 10, v153))
  {
    v166 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
  }
  else
  {
    v167 = type metadata accessor for Playlist.Variant(0);
    v168 = *(_QWORD *)(v167 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v165, 1, v167))
    {
      v169 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v164, v165, v167);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v164, 0, 1, v167);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v164, 0, 10, v211);
  }
  *(_QWORD *)&v150[v162[6]] = *(_QWORD *)&v151[v162[6]];
  v170 = v162[7];
  v171 = &v150[v170];
  v172 = &v151[v170];
  *(_OWORD *)v171 = *(_OWORD *)v172;
  v171[16] = v172[16];
  v173 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v174 = v173[5];
  v175 = &v150[v174];
  v176 = &v151[v174];
  v178 = *(_QWORD *)v176;
  v177 = *((_QWORD *)v176 + 1);
  *(_QWORD *)v175 = v178;
  *((_QWORD *)v175 + 1) = v177;
  v179 = v173[6];
  v180 = &v150[v179];
  v181 = &v151[v179];
  v182 = *((_QWORD *)v181 + 1);
  *(_QWORD *)v180 = *(_QWORD *)v181;
  *((_QWORD *)v180 + 1) = v182;
  v183 = v173[7];
  v184 = &v150[v183];
  v185 = &v151[v183];
  v186 = *((_QWORD *)v185 + 1);
  *(_QWORD *)v184 = *(_QWORD *)v185;
  *((_QWORD *)v184 + 1) = v186;
  v150[v173[8]] = v151[v173[8]];
  v150[v173[9]] = v151[v173[9]];
  v187 = *(int *)(a3 + 160);
  a1[*(int *)(a3 + 156)] = a2[*(int *)(a3 + 156)];
  a1[v187] = a2[v187];
  a1[*(int *)(a3 + 164)] = a2[*(int *)(a3 + 164)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

double sub_10039D1B8(uint64_t a1, uint64_t a2)
{
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t WitnessTable;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  double result;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, __n128);
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  _QWORD v78[3];
  __int128 v79;

  v4 = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v5 = *(_QWORD *)(a2 + 24);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = *(void (**)(uint64_t, uint64_t, __n128))(v74 + 8);
  v75(a1 + *(int *)(a2 + 76), v5, v4);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(a1 + *(int *)(a2 + 80), v6);
  v8 = a1 + *(int *)(a2 + 84);
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (!v77(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + *(int *)(a2 + 96);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  if (!v76(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 100) + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 104) + 8));
  if (*(_QWORD *)(a1 + *(int *)(a2 + 116)))
    swift_release();
  v18 = a1 + *(int *)(a2 + 120);
  v19 = type metadata accessor for ContentRating(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  v21 = a1 + *(int *)(a2 + 124);
  v22 = type metadata accessor for MusicFavoriteStatus(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = a1 + *(int *)(a2 + 128);
  v25 = type metadata accessor for GenericMusicItem(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  v27 = a1 + *(int *)(a2 + 132);
  v28 = *(_QWORD *)(a2 + 32);
  v78[0] = v6;
  v78[1] = v5;
  v78[2] = v28;
  v79 = *(_OWORD *)(a2 + 48);
  v29 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v78);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v29);
  v32 = type metadata accessor for SourcedPlaybackIntent(0, v29, WitnessTable, v31);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v27, 1, v32))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v27, v29);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v59 = type metadata accessor for MusicItemCollection(0, v5, *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8));
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v27, v59);
        break;
      case 1:
        v7(v27, v6);
        break;
      case 0:
        v7(v27, v6);
        v36 = type metadata accessor for Library.Context(255);
        v37 = v27 + *(int *)(swift_getTupleTypeMetadata2(0, v6, v36, " context ", 0) + 48);
        swift_release();
        v72 = v37;
        v73 = (int *)v36;
        v38 = v37 + *(int *)(v36 + 20);
        v39 = type metadata accessor for Album(0);
        v40 = *(_QWORD *)(v39 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
        v41 = v72 + v73[6];
        v42 = type metadata accessor for Artist(0);
        v43 = *(_QWORD *)(v42 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
        v44 = v72 + v73[7];
        v45 = type metadata accessor for Composer(0);
        v46 = *(_QWORD *)(v45 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
          (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
        v47 = v72 + v73[8];
        v48 = type metadata accessor for Genre(0);
        v49 = *(_QWORD *)(v48 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
        v50 = v72 + v73[9];
        v51 = type metadata accessor for Playlist(0);
        v52 = *(_QWORD *)(v51 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
        v53 = v72 + v73[10];
        v54 = type metadata accessor for TVShow(0);
        v55 = *(_QWORD *)(v54 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
          (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
        v56 = v72 + v73[11];
        v57 = type metadata accessor for TVSeason(0);
        v58 = *(_QWORD *)(v57 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
        swift_bridgeObjectRelease(*(_QWORD *)(v72 + v73[15] + 8));
        swift_bridgeObjectRelease(*(_QWORD *)(v72 + v73[16]));
        break;
    }
    v60 = v27 + *(int *)(v32 + 36);
    v61 = type metadata accessor for PlaybackEnqueueMode(0, v5, v34, v35);
    if (swift_getEnumCaseMultiPayload(v60, v61) == 1
      || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v60, 1, v5))
    {
      ((void (*)(uint64_t, uint64_t))v75)(v60, v5);
    }
  }
  swift_release();
  swift_release();
  swift_release();

  v62 = a1 + *(int *)(a2 + 152);
  if (!v77(v62, 1, v9))
  {
    v63 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
    v64 = v62 + *(int *)(v9 + 20);
    v65 = type metadata accessor for Artwork.CropStyle(0);
    v66 = *(_QWORD *)(v65 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
  }
  v67 = v62 + *(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 20);
  if (!v76(v67, 10, v15))
  {
    v68 = type metadata accessor for Playlist.Variant(0);
    v69 = *(_QWORD *)(v68 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v68);
  }
  v70 = (int *)type metadata accessor for ContextualPreview.Data(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v62 + v70[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v62 + v70[6] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v62 + v70[7] + 8)).n128_u64[0];
  return result;
}

char *sub_10039D8E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  _QWORD *v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t WitnessTable;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t EnumCaseMultiPayload;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t, __n128);
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  int *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v187;
  char *__dst;
  unsigned int v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  void (*v194)(char *, char *, uint64_t);
  int *v195;
  void (*v196)(char *, char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unsigned int (*v200)(char *, uint64_t, uint64_t);
  unsigned int (*v201)(char *, uint64_t, uint64_t);
  void *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD v211[3];
  __int128 v212;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *(int *)(a3 + 76);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = *(_QWORD **)(a3 + 24);
  v197 = *(v10 - 1);
  v11 = *(void (**)(char *, char *, uint64_t))(v197 + 16);
  swift_bridgeObjectRetain();
  v202 = v10;
  v196 = v11;
  v11(v8, v9, (uint64_t)v10);
  v12 = *(_QWORD *)(a3 + 16);
  v194 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v194(&a1[*(int *)(a3 + 80)], &a2[*(int *)(a3 + 80)], v12);
  v13 = *(int *)(a3 + 84);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ArtworkImage.ViewModel(0);
  v199 = *(_QWORD *)(v16 - 8);
  v201 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48);
  v210 = v16;
  if (v201(v15, 1, v16))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
    v19 = *(int *)(v16 + 20);
    v20 = &v14[v19];
    v21 = &v15[v19];
    v22 = type metadata accessor for Artwork.CropStyle(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v14, 0, 1, v210);
  }
  v25 = *(int *)(a3 + 92);
  a1[*(int *)(a3 + 88)] = a2[*(int *)(a3 + 88)];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  v26 = *(int *)(a3 + 96);
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v198 = *(_QWORD *)(v29 - 8);
  v200 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48);
  if (v200(v28, 10, v29))
  {
    v30 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for Playlist.Variant(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v27, v28, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v27, 0, 10, v29);
  }
  v34 = *(int *)(a3 + 100);
  v35 = *(int *)(a3 + 104);
  v36 = &a1[v34];
  v37 = &a2[v34];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = &a1[v35];
  v40 = &a2[v35];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v42 = *(int *)(a3 + 108);
  v43 = *(int *)(a3 + 112);
  v44 = &a1[v42];
  v45 = &a2[v42];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v44[8] = v45[8];
  v46 = &a1[v43];
  v47 = &a2[v43];
  v46[8] = v47[8];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = *(int *)(a3 + 116);
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = *(_QWORD *)&a2[v48];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51)
  {
    v52 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = v51;
    *((_QWORD *)v49 + 1) = v52;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
  }
  v53 = *(int *)(a3 + 120);
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = type metadata accessor for ContentRating(0);
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    v58 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  v59 = *(int *)(a3 + 124);
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for MusicFavoriteStatus(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    v64 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  v65 = *(int *)(a3 + 128);
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = type metadata accessor for GenericMusicItem(0);
  v69 = *(_QWORD *)(v68 - 8);
  v209 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    v70 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  v71 = *(int *)(a3 + 132);
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(_QWORD *)(a3 + 32);
  v75 = (uint64_t)v10;
  v211[0] = v12;
  v211[1] = v10;
  v211[2] = v74;
  v212 = *(_OWORD *)(a3 + 48);
  v76 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v211);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v76);
  v79 = type metadata accessor for SourcedPlaybackIntent(0, v76, WitnessTable, v78);
  v80 = *(_QWORD *)(v79 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79))
  {
    v81 = type metadata accessor for Optional(0, v79);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_61;
  }
  v190 = v80;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v73, v76);
  v191 = v72;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v83 = EnumCaseMultiPayload;
    v84 = type metadata accessor for MusicItemCollection(0, v202, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v72, v73, v84);
    goto LABEL_31;
  }
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v83 = EnumCaseMultiPayload;
    v194(v72, v73, v12);
LABEL_31:
    v85 = v83;
    v86 = v197;
    goto LABEL_54;
  }
  v189 = EnumCaseMultiPayload;
  v194(v72, v73, v12);
  v87 = type metadata accessor for Library.Context(255);
  v88 = *(int *)(swift_getTupleTypeMetadata2(0, v12, v87, " context ", 0) + 48);
  v89 = &v72[v88];
  v90 = &v73[v88];
  *(_QWORD *)v89 = *(_QWORD *)&v73[v88];
  v193 = &v72[v88];
  v195 = (int *)v87;
  v91 = *(int *)(v87 + 20);
  v187 = v73;
  __dst = &v89[v91];
  v192 = v90;
  v92 = &v90[v91];
  v93 = type metadata accessor for Album(0);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v94 + 48);
  v96 = swift_retain();
  if (v95(v92, 1, v93, v96))
  {
    v97 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(__dst, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(__dst, v92, v93);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(__dst, 0, 1, v93);
  }
  v75 = (uint64_t)v202;
  v73 = v187;
  v98 = v195[6];
  v203 = &v193[v98];
  v99 = &v192[v98];
  v100 = type metadata accessor for Artist(0);
  v101 = *(_QWORD *)(v100 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
  {
    v102 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v203, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v203, v99, v100);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v203, 0, 1, v100);
  }
  v103 = v195[7];
  v204 = &v193[v103];
  v104 = &v192[v103];
  v105 = type metadata accessor for Composer(0);
  v106 = *(_QWORD *)(v105 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
  {
    v107 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v204, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v204, v104, v105);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v204, 0, 1, v105);
  }
  v108 = v195[8];
  v205 = &v193[v108];
  v109 = &v192[v108];
  v110 = type metadata accessor for Genre(0);
  v111 = *(_QWORD *)(v110 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
  {
    v112 = sub_100007E8C(&qword_10119ED08);
    memcpy(v205, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v205, v109, v110);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v205, 0, 1, v110);
  }
  v113 = v195[9];
  v206 = &v193[v113];
  v114 = &v192[v113];
  v115 = type metadata accessor for Playlist(0);
  v116 = *(_QWORD *)(v115 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115))
  {
    v117 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v206, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v206, v114, v115);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v206, 0, 1, v115);
  }
  v118 = v195[10];
  v207 = &v193[v118];
  v119 = &v192[v118];
  v120 = type metadata accessor for TVShow(0);
  v121 = *(_QWORD *)(v120 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
  {
    v122 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v207, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v207, v119, v120);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v207, 0, 1, v120);
  }
  v123 = v195[11];
  v208 = &v193[v123];
  v124 = &v192[v123];
  v125 = type metadata accessor for TVSeason(0);
  v126 = *(_QWORD *)(v125 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
  {
    v127 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v208, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v208, v124, v125);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v208, 0, 1, v125);
  }
  v86 = v197;
  v193[v195[12]] = v192[v195[12]];
  v193[v195[13]] = v192[v195[13]];
  v193[v195[14]] = v192[v195[14]];
  v128 = v195[15];
  v129 = &v193[v128];
  v130 = &v192[v128];
  v131 = *((_QWORD *)v130 + 1);
  *(_QWORD *)v129 = *(_QWORD *)v130;
  *((_QWORD *)v129 + 1) = v131;
  *(_QWORD *)&v193[v195[16]] = *(_QWORD *)&v192[v195[16]];
  v193[v195[17]] = v192[v195[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v72 = v191;
  v85 = v189;
LABEL_54:
  swift_storeEnumTagMultiPayload(v72, v76, v85);
  v132 = *(int *)(v79 + 36);
  v133 = &v72[v132];
  v134 = &v73[v132];
  v137 = type metadata accessor for PlaybackEnqueueMode(0, v75, v135, v136);
  if (swift_getEnumCaseMultiPayload(v134, v137) == 1)
  {
    v196(v133, v134, v75);
    v138 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v134, 1, v75))
    {
      v139 = type metadata accessor for Optional(0, v75);
      memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    }
    else
    {
      v196(v133, v134, v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v133, 0, 1, v75);
    }
    v138 = 0;
  }
  swift_storeEnumTagMultiPayload(v133, v137, v138);
  v191[*(int *)(v79 + 40)] = v73[*(int *)(v79 + 40)];
  (*(void (**)(void))(v190 + 56))();
LABEL_61:
  v140 = *(int *)(a3 + 136);
  v141 = *(int *)(a3 + 140);
  v142 = &a1[v140];
  v143 = &a2[v140];
  v144 = *((_QWORD *)v143 + 1);
  *(_QWORD *)v142 = *(_QWORD *)v143;
  *((_QWORD *)v142 + 1) = v144;
  *(_QWORD *)&a1[v141] = *(_QWORD *)&a2[v141];
  v145 = *(int *)(a3 + 148);
  *(_QWORD *)&a1[*(int *)(a3 + 144)] = *(_QWORD *)&a2[*(int *)(a3 + 144)];
  v146 = *(void **)&a2[v145];
  *(_QWORD *)&a1[v145] = v146;
  v147 = *(int *)(a3 + 152);
  v148 = &a1[v147];
  v149 = &a2[v147];
  swift_retain();
  swift_retain();
  swift_retain();
  v150 = v146;
  v151 = v209;
  if (v201(v149, 1, v210))
  {
    v152 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
  }
  else
  {
    v153 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v148, v149, v153);
    v154 = *(int *)(v210 + 20);
    v155 = &v148[v154];
    v156 = &v149[v154];
    v157 = type metadata accessor for Artwork.CropStyle(0);
    v158 = *(_QWORD *)(v157 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
    {
      v159 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v155, v156, v157);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
    }
    v151 = v209;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v148, 0, 1, v210);
  }
  v160 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v161 = v160[5];
  v162 = &v148[v161];
  v163 = &v149[v161];
  if (v200(&v149[v161], 10, v151))
  {
    v164 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
  }
  else
  {
    v165 = type metadata accessor for Playlist.Variant(0);
    v166 = *(_QWORD *)(v165 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v163, 1, v165))
    {
      v167 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v162, v163, v165);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v162, 0, 1, v165);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v162, 0, 10, v209);
  }
  *(_QWORD *)&v148[v160[6]] = *(_QWORD *)&v149[v160[6]];
  v168 = v160[7];
  v169 = &v148[v168];
  v170 = &v149[v168];
  *(_OWORD *)v169 = *(_OWORD *)v170;
  v169[16] = v170[16];
  v171 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v172 = v171[5];
  v173 = &v148[v172];
  v174 = &v149[v172];
  v176 = *(_QWORD *)v174;
  v175 = *((_QWORD *)v174 + 1);
  *(_QWORD *)v173 = v176;
  *((_QWORD *)v173 + 1) = v175;
  v177 = v171[6];
  v178 = &v148[v177];
  v179 = &v149[v177];
  v180 = *((_QWORD *)v179 + 1);
  *(_QWORD *)v178 = *(_QWORD *)v179;
  *((_QWORD *)v178 + 1) = v180;
  v181 = v171[7];
  v182 = &v148[v181];
  v183 = &v149[v181];
  v184 = *((_QWORD *)v183 + 1);
  *(_QWORD *)v182 = *(_QWORD *)v183;
  *((_QWORD *)v182 + 1) = v184;
  v148[v171[8]] = v149[v171[8]];
  v148[v171[9]] = v149[v171[9]];
  v185 = *(int *)(a3 + 160);
  a1[*(int *)(a3 + 156)] = a2[*(int *)(a3 + 156)];
  a1[v185] = a2[v185];
  a1[*(int *)(a3 + 164)] = a2[*(int *)(a3 + 164)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_10039E7B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t WitnessTable;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(char *, uint64_t, uint64_t);
  int v109;
  size_t v110;
  char *v111;
  uint64_t EnumCaseMultiPayload;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(char *, uint64_t, uint64_t, __n128);
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int (*v145)(char *, uint64_t, uint64_t, __n128);
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  void *v248;
  void *v249;
  id v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  int v254;
  char *v255;
  size_t v256;
  void *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t (*v272)(void *, uint64_t, uint64_t);
  int v273;
  int v274;
  int *v275;
  uint64_t v276;
  void *v277;
  char *v278;
  int v279;
  int v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int *v286;
  uint64_t v287;
  uint64_t (*v288)(void *, uint64_t, uint64_t);
  int v289;
  int v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  __int128 v295;
  int *v296;
  uint64_t v297;
  _QWORD *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  char *v307;
  uint64_t v308;
  int *v310;
  unsigned int v311;
  unsigned int v312;
  char *v313;
  char *v314;
  char *v315;
  uint64_t v316;
  void (**__dst)(char *, char *, _QWORD);
  char *__dsta;
  char *__dstb;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  int *v325;
  uint64_t (*v326)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v327)(char *, uint64_t, uint64_t);
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  _QWORD v335[3];
  __int128 v336;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRelease(v6);
  v320 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v329 = *(_QWORD *)(a3 + 24);
  (*(void (**)(char *, char *, __n128))(v320 + 24))(&a1[*(int *)(a3 + 76)], &a2[*(int *)(a3 + 76)], v7);
  v8 = *(_QWORD *)(a3 + 16);
  __dst = *(void (***)(char *, char *, _QWORD))(v8 - 8);
  __dst[3](&a1[*(int *)(a3 + 80)], &a2[*(int *)(a3 + 80)], v8);
  v9 = *(int *)(a3 + 84);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v324 = *(_QWORD *)(v12 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v324 + 48);
  v14 = v13(v10, 1, v12);
  v332 = v12;
  v327 = v13;
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v25 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v10, v11, v25);
      v26 = *(int *)(v12 + 20);
      v10 += v26;
      v11 += v26;
      v27 = type metadata accessor for Artwork.CropStyle(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
      v30 = v29(v10, 1, v27);
      v31 = v29(v11, 1, v27);
      if (v30)
      {
        if (!v31)
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v10, v11, v27);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v27);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v31)
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v10, v11, v27);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v27);
      }
      v23 = (uint64_t *)&unk_1011A14A0;
LABEL_8:
      v24 = sub_100007E8C(v23);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v10, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v23 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
  v17 = *(int *)(v12 + 20);
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = type metadata accessor for Artwork.CropStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v324 + 56))(v10, 0, 1, v12);
LABEL_14:
  a1[*(int *)(a3 + 88)] = a2[*(int *)(a3 + 88)];
  *(_QWORD *)&a1[*(int *)(a3 + 92)] = *(_QWORD *)&a2[*(int *)(a3 + 92)];
  v32 = *(int *)(a3 + 96);
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v323 = *(_QWORD *)(v35 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v323 + 48);
  v37 = v36(v33, 10, v35);
  v331 = v35;
  v326 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
  v38 = v36(v34, 10, v35);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v33, 1, v43);
      v47 = v45(v34, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v33, v34, v43);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v33, v34, v43);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v43);
      }
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v33, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v34, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v33, v34, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v39);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v323 + 56))(v33, 0, 10, v35);
LABEL_27:
  v48 = *(int *)(a3 + 100);
  v49 = &a1[v48];
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v51 = *((_QWORD *)v49 + 1);
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v51);
  v52 = *(int *)(a3 + 104);
  v53 = &a1[v52];
  v54 = &a2[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v55 = *((_QWORD *)v53 + 1);
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v55);
  v56 = *(int *)(a3 + 108);
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = *(_QWORD *)v58;
  v57[8] = v58[8];
  *(_QWORD *)v57 = v59;
  v60 = *(int *)(a3 + 112);
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = *(_QWORD *)v62;
  v61[8] = v62[8];
  *(_QWORD *)v61 = v63;
  v64 = *(int *)(a3 + 116);
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = *(_QWORD *)&a1[v64];
  v68 = *(_QWORD *)&a2[v64];
  if (v67)
  {
    if (v68)
    {
      v69 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = v68;
      *((_QWORD *)v65 + 1) = v69;
      swift_retain();
      swift_release();
      goto LABEL_34;
    }
    swift_release();
  }
  else if (v68)
  {
    v70 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = v68;
    *((_QWORD *)v65 + 1) = v70;
    swift_retain();
    goto LABEL_34;
  }
  *(_OWORD *)v65 = *(_OWORD *)v66;
LABEL_34:
  v71 = *(int *)(a3 + 120);
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = type metadata accessor for ContentRating(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
  v77 = v76(v72, 1, v74);
  v78 = v76(v73, 1, v74);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
LABEL_39:
    v79 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v72, v73, v74);
LABEL_40:
  v80 = *(int *)(a3 + 124);
  v81 = &a1[v80];
  v82 = &a2[v80];
  v83 = type metadata accessor for MusicFavoriteStatus(0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
  v86 = v85(v81, 1, v83);
  v87 = v85(v82, 1, v83);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
LABEL_45:
    v88 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v84 + 24))(v81, v82, v83);
LABEL_46:
  v89 = *(int *)(a3 + 128);
  v90 = &a1[v89];
  v91 = &a2[v89];
  v92 = type metadata accessor for GenericMusicItem(0);
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
  v95 = v94(v90, 1, v92);
  v96 = v94(v91, 1, v92);
  if (v95)
  {
    if (!v96)
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v96)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v92);
LABEL_51:
    v97 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    goto LABEL_52;
  }
  (*(void (**)(char *, char *, uint64_t))(v93 + 24))(v90, v91, v92);
LABEL_52:
  v98 = *(int *)(a3 + 132);
  v99 = &a1[v98];
  v100 = &a2[v98];
  v101 = *(_QWORD *)(a3 + 32);
  v102 = v8;
  v335[0] = v8;
  v335[1] = v329;
  v103 = v329;
  v335[2] = v101;
  v336 = *(_OWORD *)(a3 + 48);
  v104 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v335);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v104);
  v107 = type metadata accessor for SourcedPlaybackIntent(0, v104, WitnessTable, v106);
  v321 = *(_QWORD *)(v107 - 8);
  v108 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v321 + 48);
  v328 = v99;
  LODWORD(v99) = v108(v99, 1, v107);
  v330 = v107;
  v109 = v108(v100, 1, v107);
  if ((_DWORD)v99)
  {
    if (v109)
    {
      v110 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v107) - 8) + 64);
      v111 = v328;
LABEL_57:
      memcpy(v111, v100, v110);
      goto LABEL_138;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v100, v104);
    v113 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v120 = type metadata accessor for MusicItemCollection(0, v329, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      v114 = v328;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v328, v100, v120);
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v311 = EnumCaseMultiPayload;
        __dst[2](v328, v100, v102);
        v122 = type metadata accessor for Library.Context(255);
        v123 = *(int *)(swift_getTupleTypeMetadata2(0, v102, v122, " context ", 0) + 48);
        v124 = &v328[v123];
        v125 = &v100[v123];
        *(_QWORD *)v124 = *(_QWORD *)&v100[v123];
        v310 = (int *)v122;
        v126 = *(int *)(v122 + 20);
        __dsta = v124;
        v127 = &v124[v126];
        v313 = v100;
        v315 = v125;
        v128 = &v125[v126];
        v129 = type metadata accessor for Album(0);
        v130 = *(_QWORD *)(v129 - 8);
        v131 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v130 + 48);
        v132 = swift_retain();
        if (v131(v128, 1, v129, v132))
        {
          v133 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v127, v128, v129);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
        }
        v148 = v310[6];
        v149 = &__dsta[v148];
        v150 = &v315[v148];
        v151 = type metadata accessor for Artist(0);
        v152 = *(_QWORD *)(v151 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151))
        {
          v153 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v149, v150, v151);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
        }
        v154 = v310[7];
        v155 = &__dsta[v154];
        v156 = &v315[v154];
        v157 = type metadata accessor for Composer(0);
        v158 = *(_QWORD *)(v157 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
        {
          v159 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v155, v156, v157);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
        }
        v160 = v310[8];
        v161 = &__dsta[v160];
        v162 = &v315[v160];
        v163 = type metadata accessor for Genre(0);
        v164 = *(_QWORD *)(v163 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v162, 1, v163))
        {
          v165 = sub_100007E8C(&qword_10119ED08);
          memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v161, v162, v163);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
        }
        v166 = v310[9];
        v167 = &__dsta[v166];
        v168 = &v315[v166];
        v169 = type metadata accessor for Playlist(0);
        v170 = *(_QWORD *)(v169 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
        {
          v171 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v167, v168, v169);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
        }
        v172 = v310[10];
        v173 = &__dsta[v172];
        v174 = &v315[v172];
        v175 = type metadata accessor for TVShow(0);
        v176 = *(_QWORD *)(v175 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v174, 1, v175))
        {
          v177 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v173, v174, v175);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
        }
        v178 = v310[11];
        v179 = &__dsta[v178];
        v180 = &v315[v178];
        v181 = type metadata accessor for TVSeason(0);
        v182 = *(_QWORD *)(v181 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v180, 1, v181))
        {
          v183 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v179, v180, v181);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
        }
        v114 = v328;
        __dsta[v310[12]] = v315[v310[12]];
        __dsta[v310[13]] = v315[v310[13]];
        __dsta[v310[14]] = v315[v310[14]];
        v184 = v310[15];
        v185 = &__dsta[v184];
        v186 = &v315[v184];
        *(_QWORD *)v185 = *(_QWORD *)v186;
        *((_QWORD *)v185 + 1) = *((_QWORD *)v186 + 1);
        *(_QWORD *)&__dsta[v310[16]] = *(_QWORD *)&v315[v310[16]];
        __dsta[v310[17]] = v315[v310[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v121 = v313;
        v103 = v329;
        v113 = v311;
LABEL_101:
        swift_storeEnumTagMultiPayload(v114, v104, v113);
        v187 = *(int *)(v330 + 36);
        v188 = v114;
        v189 = &v114[v187];
        v190 = &v121[v187];
        v193 = type metadata accessor for PlaybackEnqueueMode(0, v103, v191, v192);
        if (swift_getEnumCaseMultiPayload(v190, v193) == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v320 + 16))(v189, v190, v103);
          v194 = 1;
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v320 + 48))(v190, 1, v103))
          {
            v195 = type metadata accessor for Optional(0, v103);
            memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v320 + 16))(v189, v190, v103);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v320 + 56))(v189, 0, 1, v103);
          }
          v194 = 0;
        }
        swift_storeEnumTagMultiPayload(v189, v193, v194);
        v188[*(int *)(v330 + 40)] = v121[*(int *)(v330 + 40)];
        (*(void (**)(char *, _QWORD, uint64_t))(v321 + 56))(v188, 0, 1);
        goto LABEL_138;
      }
      v114 = v328;
      __dst[2](v328, v100, v102);
    }
    v121 = v100;
    goto LABEL_101;
  }
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v321 + 8))(v328, v107);
    v110 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v107) - 8) + 64);
    v111 = v328;
    goto LABEL_57;
  }
  v115 = v328;
  if (a1 != a2)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v328, v104);
    v116 = swift_getEnumCaseMultiPayload(v100, v104);
    v117 = v116;
    if ((_DWORD)v116 == 2)
    {
      v118 = v329;
      v134 = type metadata accessor for MusicItemCollection(0, v329, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v328, v100, v134);
      v119 = v320;
    }
    else if ((_DWORD)v116 == 1)
    {
      __dst[2](v328, v100, v102);
      v118 = v329;
      v119 = v320;
    }
    else
    {
      v312 = v116;
      v316 = v104;
      __dst[2](v328, v100, v102);
      v135 = type metadata accessor for Library.Context(255);
      v136 = v102;
      v137 = (int *)v135;
      v138 = *(int *)(swift_getTupleTypeMetadata2(0, v136, v135, " context ", 0) + 48);
      v139 = &v328[v138];
      v314 = v100;
      v140 = &v100[v138];
      *(_QWORD *)v139 = *(_QWORD *)&v100[v138];
      v141 = v137[5];
      v322 = v139;
      __dstb = &v139[v141];
      v142 = &v140[v141];
      v143 = type metadata accessor for Album(0);
      v144 = *(_QWORD *)(v143 - 8);
      v145 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v144 + 48);
      v146 = swift_retain();
      if (v145(v142, 1, v143, v146))
      {
        v147 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(__dstb, v142, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(__dstb, v142, v143);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(__dstb, 0, 1, v143);
      }
      v196 = v137[6];
      v197 = (char *)v322 + v196;
      v198 = &v140[v196];
      v199 = type metadata accessor for Artist(0);
      v200 = *(_QWORD *)(v199 - 8);
      v100 = v314;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v198, 1, v199))
      {
        v201 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v197, v198, v199);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
      }
      v202 = v137[7];
      v203 = (char *)v322 + v202;
      v204 = &v140[v202];
      v205 = type metadata accessor for Composer(0);
      v206 = *(_QWORD *)(v205 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205))
      {
        v207 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v203, v204, v205);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
      }
      v208 = v137[8];
      v209 = (char *)v322 + v208;
      v210 = &v140[v208];
      v211 = type metadata accessor for Genre(0);
      v212 = *(_QWORD *)(v211 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v212 + 48))(v210, 1, v211))
      {
        v213 = sub_100007E8C(&qword_10119ED08);
        memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v212 + 16))(v209, v210, v211);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v212 + 56))(v209, 0, 1, v211);
      }
      v214 = v137[9];
      v215 = (char *)v322 + v214;
      v216 = &v140[v214];
      v217 = type metadata accessor for Playlist(0);
      v218 = *(_QWORD *)(v217 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217))
      {
        v219 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v218 + 16))(v215, v216, v217);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
      }
      v220 = v137[10];
      v221 = (char *)v322 + v220;
      v222 = &v140[v220];
      v223 = type metadata accessor for TVShow(0);
      v224 = *(_QWORD *)(v223 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v222, 1, v223))
      {
        v225 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v221, v222, v223);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v224 + 56))(v221, 0, 1, v223);
      }
      v226 = v137[11];
      v227 = (char *)v322 + v226;
      v228 = &v140[v226];
      v229 = type metadata accessor for TVSeason(0);
      v230 = *(_QWORD *)(v229 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v230 + 48))(v228, 1, v229))
      {
        v231 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v230 + 16))(v227, v228, v229);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v230 + 56))(v227, 0, 1, v229);
      }
      *((_BYTE *)v322 + v137[12]) = v140[v137[12]];
      *((_BYTE *)v322 + v137[13]) = v140[v137[13]];
      *((_BYTE *)v322 + v137[14]) = v140[v137[14]];
      v232 = v137[15];
      v233 = (_QWORD *)((char *)v322 + v232);
      v234 = &v140[v232];
      *v233 = *(_QWORD *)v234;
      v233[1] = *((_QWORD *)v234 + 1);
      *(_QWORD *)((char *)v322 + v137[16]) = *(_QWORD *)&v140[v137[16]];
      *((_BYTE *)v322 + v137[17]) = v140[v137[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v119 = v320;
      v104 = v316;
      v115 = v328;
      v118 = v329;
      v117 = v312;
    }
    swift_storeEnumTagMultiPayload(v115, v104, v117);
    v235 = *(int *)(v330 + 36);
    v236 = v115;
    v237 = &v115[v235];
    v238 = &v100[v235];
    v241 = type metadata accessor for PlaybackEnqueueMode(0, v118, v239, v240);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v241 - 8) + 8))(v237, v241);
    if (swift_getEnumCaseMultiPayload(v238, v241) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v237, v238, v118);
      v242 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v238, 1, v118))
      {
        v243 = type metadata accessor for Optional(0, v118);
        memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v237, v238, v118);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v237, 0, 1, v118);
      }
      v242 = 0;
    }
    swift_storeEnumTagMultiPayload(v237, v241, v242);
    v115 = v236;
  }
  v115[*(int *)(v330 + 40)] = v100[*(int *)(v330 + 40)];
LABEL_138:
  v244 = *(int *)(a3 + 136);
  v245 = &a1[v244];
  v246 = &a2[v244];
  *(_QWORD *)v245 = *(_QWORD *)v246;
  *((_QWORD *)v245 + 1) = *((_QWORD *)v246 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 140)] = *(_QWORD *)&a2[*(int *)(a3 + 140)];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 144)] = *(_QWORD *)&a2[*(int *)(a3 + 144)];
  swift_retain();
  swift_release();
  v247 = *(int *)(a3 + 148);
  v248 = *(void **)&a1[v247];
  v249 = *(void **)&a2[v247];
  *(_QWORD *)&a1[v247] = v249;
  v250 = v249;

  v251 = *(int *)(a3 + 152);
  v252 = (uint64_t)&a1[v251];
  v253 = &a2[v251];
  LODWORD(v248) = v327(&a1[v251], 1, v332);
  v254 = v327(v253, 1, v332);
  v325 = (int *)a3;
  if (!(_DWORD)v248)
  {
    if (v254)
    {
      v255 = a2;
      sub_10005B748(v252, type metadata accessor for ArtworkImage.ViewModel);
      goto LABEL_143;
    }
    v266 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v266 - 8) + 24))(v252, v253, v266);
    v267 = *(int *)(v332 + 20);
    v268 = (void *)(v252 + v267);
    v269 = &v253[v267];
    v270 = type metadata accessor for Artwork.CropStyle(0);
    v271 = *(_QWORD *)(v270 - 8);
    v272 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v271 + 48);
    v273 = v272(v268, 1, v270);
    v333 = v269;
    v274 = v272(v269, 1, v270);
    v255 = a2;
    if (v273)
    {
      if (!v274)
      {
        (*(void (**)(void *, char *, uint64_t))(v271 + 16))(v268, v333, v270);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v268, 0, 1, v270);
        goto LABEL_152;
      }
    }
    else
    {
      if (!v274)
      {
        (*(void (**)(void *, char *, uint64_t))(v271 + 24))(v268, v333, v270);
        goto LABEL_152;
      }
      (*(void (**)(void *, uint64_t))(v271 + 8))(v268, v270);
    }
    v256 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v257 = v268;
    v258 = v333;
    goto LABEL_144;
  }
  if (v254)
  {
    v255 = a2;
LABEL_143:
    v256 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v257 = (void *)v252;
    v258 = v253;
LABEL_144:
    memcpy(v257, v258, v256);
    goto LABEL_152;
  }
  v259 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 16))(v252, v253, v259);
  v260 = *(int *)(v332 + 20);
  v261 = (void *)(v252 + v260);
  v262 = &v253[v260];
  v263 = type metadata accessor for Artwork.CropStyle(0);
  v264 = *(_QWORD *)(v263 - 8);
  v255 = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v264 + 48))(v262, 1, v263))
  {
    v265 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v265 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v264 + 16))(v261, v262, v263);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v264 + 56))(v261, 0, 1, v263);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v324 + 56))(v252, 0, 1, v332);
LABEL_152:
  v275 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v276 = v275[5];
  v277 = (void *)(v252 + v276);
  v278 = &v253[v276];
  v279 = v326(v252 + v276, 10, v331);
  v280 = v326((uint64_t)v278, 10, v331);
  v281 = v255;
  if (!v279)
  {
    if (!v280)
    {
      v287 = type metadata accessor for Playlist.Variant(0);
      v334 = *(_QWORD *)(v287 - 8);
      v288 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v334 + 48);
      v289 = v288(v277, 1, v287);
      v290 = v288(v278, 1, v287);
      if (v289)
      {
        v286 = v325;
        if (!v290)
        {
          (*(void (**)(void *, char *, uint64_t))(v334 + 16))(v277, v278, v287);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v334 + 56))(v277, 0, 1, v287);
          goto LABEL_170;
        }
      }
      else
      {
        v286 = v325;
        if (!v290)
        {
          (*(void (**)(void *, char *, uint64_t))(v334 + 24))(v277, v278, v287);
          goto LABEL_170;
        }
        (*(void (**)(void *, uint64_t))(v334 + 8))(v277, v287);
      }
      v291 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
      goto LABEL_170;
    }
    sub_10004FF60((uint64_t)v277, (uint64_t *)&unk_1011A3DB0);
    goto LABEL_158;
  }
  if (v280)
  {
LABEL_158:
    v285 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
    v286 = v325;
    goto LABEL_170;
  }
  v282 = type metadata accessor for Playlist.Variant(0);
  v283 = *(_QWORD *)(v282 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v283 + 48))(v278, 1, v282))
  {
    v284 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v283 + 16))(v277, v278, v282);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v277, 0, 1, v282);
  }
  v286 = v325;
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v323 + 56))(v277, 0, 10, v331);
LABEL_170:
  *(_QWORD *)(v252 + v275[6]) = *(_QWORD *)&v253[v275[6]];
  v292 = v275[7];
  v293 = v252 + v292;
  v294 = &v253[v292];
  v295 = *(_OWORD *)v294;
  *(_BYTE *)(v293 + 16) = v294[16];
  *(_OWORD *)v293 = v295;
  v296 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v297 = v296[5];
  v298 = (_QWORD *)(v252 + v297);
  v299 = &v253[v297];
  *v298 = *(_QWORD *)v299;
  v300 = v298[1];
  v298[1] = *((_QWORD *)v299 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v300);
  v301 = v296[6];
  v302 = (_QWORD *)(v252 + v301);
  v303 = &v253[v301];
  *v302 = *(_QWORD *)v303;
  v304 = v302[1];
  v302[1] = *((_QWORD *)v303 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v304);
  v305 = v296[7];
  v306 = (_QWORD *)(v252 + v305);
  v307 = &v253[v305];
  *v306 = *(_QWORD *)v307;
  v308 = v306[1];
  v306[1] = *((_QWORD *)v307 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v308);
  *(_BYTE *)(v252 + v296[8]) = v253[v296[8]];
  *(_BYTE *)(v252 + v296[9]) = v253[v296[9]];
  a1[v286[39]] = v281[v286[39]];
  a1[v286[40]] = v281[v286[40]];
  a1[v286[41]] = v281[v286[41]];
  return a1;
}

char *sub_1003A02F8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t WitnessTable;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int EnumCaseMultiPayload;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  int *v163;
  uint64_t v164;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  _QWORD *v172;
  void (*v173)(char *, char *);
  uint64_t v174;
  uint64_t v175;
  unsigned int (*v176)(char *, uint64_t, uint64_t);
  unsigned int (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD v181[3];
  __int128 v182;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(int *)(a3 + 76);
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v178 = v7;
  v173 = *(void (**)(char *, char *))(v8 + 32);
  v173(&a1[v6], &a2[v6]);
  v9 = *(_QWORD *)(a3 + 16);
  v171 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v171(&a1[*(int *)(a3 + 80)], &a2[*(int *)(a3 + 80)], v9);
  v10 = *(int *)(a3 + 84);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v177 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v180 = v13;
  v170 = v8;
  if (v177(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    v18 = &v11[v17];
    v19 = &v12[v17];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v180);
  }
  v23 = *(int *)(a3 + 92);
  a1[*(int *)(a3 + 88)] = a2[*(int *)(a3 + 88)];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  v24 = *(int *)(a3 + 96);
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v175 = *(_QWORD *)(v27 - 8);
  v176 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
  if (v176(v26, 10, v27))
  {
    v28 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for Playlist.Variant(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v25, v26, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v25, 0, 10, v27);
  }
  v32 = *(int *)(a3 + 104);
  *(_OWORD *)&a1[*(int *)(a3 + 100)] = *(_OWORD *)&a2[*(int *)(a3 + 100)];
  *(_OWORD *)&a1[v32] = *(_OWORD *)&a2[v32];
  v33 = *(int *)(a3 + 108);
  v34 = *(int *)(a3 + 112);
  v35 = &a1[v33];
  v36 = &a2[v33];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v36[8];
  v37 = &a1[v34];
  v38 = &a2[v34];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  v39 = *(int *)(a3 + 116);
  v40 = &a1[v39];
  v41 = (uint64_t *)&a2[v39];
  v42 = *v41;
  if (*v41)
  {
    v43 = v41[1];
    *(_QWORD *)v40 = v42;
    *((_QWORD *)v40 + 1) = v43;
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
  }
  v44 = *(int *)(a3 + 120);
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = type metadata accessor for ContentRating(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = *(int *)(a3 + 124);
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = type metadata accessor for MusicFavoriteStatus(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    v55 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v56 = *(int *)(a3 + 128);
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for GenericMusicItem(0);
  v60 = *(_QWORD *)(v59 - 8);
  v179 = v27;
  v174 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  v62 = *(int *)(a3 + 132);
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = *(_QWORD *)(a3 + 32);
  v181[0] = v9;
  v181[1] = v178;
  v181[2] = v65;
  v182 = *(_OWORD *)(a3 + 48);
  v66 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v181);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v66);
  v69 = v9;
  v70 = type metadata accessor for SourcedPlaybackIntent(0, v66, WitnessTable, v68);
  v71 = *(_QWORD *)(v70 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v64, 1, v70))
  {
    v72 = type metadata accessor for Optional(0, v70);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_61;
  }
  v168 = v71;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v64, v66);
  v169 = v64;
  if (EnumCaseMultiPayload == 2)
  {
    v77 = type metadata accessor for MusicItemCollection(0, v178, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v63, v64, v77);
    v74 = v63;
    v75 = v66;
    v76 = 2;
    goto LABEL_31;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v171(v63, v64, v69);
    v74 = v63;
    v75 = v66;
    v76 = 1;
LABEL_31:
    swift_storeEnumTagMultiPayload(v74, v75, v76);
    v80 = v64;
    v81 = v178;
    v82 = v70;
    goto LABEL_54;
  }
  v166 = v66;
  v82 = v70;
  v171(v63, v64, v69);
  v83 = type metadata accessor for Library.Context(255);
  v84 = v69;
  v85 = (int *)v83;
  v86 = *(int *)(swift_getTupleTypeMetadata2(0, v84, v83, " context ", 0) + 48);
  v167 = v63;
  v87 = &v63[v86];
  v88 = &v64[v86];
  *(_QWORD *)v87 = *(_QWORD *)&v64[v86];
  v89 = v85[5];
  v172 = v87;
  v90 = &v87[v89];
  v91 = v88;
  v92 = &v88[v89];
  v93 = type metadata accessor for Album(0);
  v94 = *(_QWORD *)(v93 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
  {
    v95 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v90, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v90, v92, v93);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v90, 0, 1, v93);
  }
  v96 = v85[6];
  v97 = (char *)v172 + v96;
  v98 = &v91[v96];
  v99 = type metadata accessor for Artist(0);
  v100 = *(_QWORD *)(v99 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
  {
    v101 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v97, v98, v99);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
  }
  v102 = v85[7];
  v103 = (char *)v172 + v102;
  v104 = &v91[v102];
  v105 = type metadata accessor for Composer(0);
  v106 = *(_QWORD *)(v105 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
  {
    v107 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v103, v104, v105);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
  }
  v108 = v85[8];
  v109 = (char *)v172 + v108;
  v110 = &v91[v108];
  v111 = type metadata accessor for Genre(0);
  v112 = *(_QWORD *)(v111 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
  {
    v113 = sub_100007E8C(&qword_10119ED08);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v109, v110, v111);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
  }
  v114 = v85[9];
  v115 = (char *)v172 + v114;
  v116 = &v91[v114];
  v117 = type metadata accessor for Playlist(0);
  v118 = *(_QWORD *)(v117 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
  {
    v119 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
  }
  v120 = v85[10];
  v121 = (char *)v172 + v120;
  v122 = &v91[v120];
  v123 = type metadata accessor for TVShow(0);
  v124 = *(_QWORD *)(v123 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
  {
    v125 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v121, v122, v123);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
  }
  v126 = v85[11];
  v127 = (char *)v172 + v126;
  v128 = &v91[v126];
  v129 = type metadata accessor for TVSeason(0);
  v130 = *(_QWORD *)(v129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    v131 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v127, v128, v129);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  v63 = v167;
  *((_BYTE *)v172 + v85[12]) = v91[v85[12]];
  *((_BYTE *)v172 + v85[13]) = v91[v85[13]];
  *((_BYTE *)v172 + v85[14]) = v91[v85[14]];
  *(_OWORD *)((char *)v172 + v85[15]) = *(_OWORD *)&v91[v85[15]];
  *(_QWORD *)((char *)v172 + v85[16]) = *(_QWORD *)&v91[v85[16]];
  *((_BYTE *)v172 + v85[17]) = v91[v85[17]];
  swift_storeEnumTagMultiPayload(v167, v166, 0);
  v81 = v178;
  v80 = v169;
LABEL_54:
  v132 = *(int *)(v82 + 36);
  v133 = &v63[v132];
  v134 = &v80[v132];
  v135 = type metadata accessor for PlaybackEnqueueMode(0, v81, v78, v79);
  if (swift_getEnumCaseMultiPayload(v134, v135) == 1)
  {
    ((void (*)(char *, char *, uint64_t))v173)(v133, v134, v81);
    v136 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v134, 1, v81))
    {
      v137 = type metadata accessor for Optional(0, v81);
      memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v173)(v133, v134, v81);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v133, 0, 1, v81);
    }
    v136 = 0;
  }
  swift_storeEnumTagMultiPayload(v133, v135, v136);
  v63[*(int *)(v82 + 40)] = v169[*(int *)(v82 + 40)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v63, 0, 1, v82);
LABEL_61:
  v138 = *(int *)(a3 + 140);
  *(_OWORD *)&a1[*(int *)(a3 + 136)] = *(_OWORD *)&a2[*(int *)(a3 + 136)];
  *(_QWORD *)&a1[v138] = *(_QWORD *)&a2[v138];
  v139 = *(int *)(a3 + 148);
  *(_QWORD *)&a1[*(int *)(a3 + 144)] = *(_QWORD *)&a2[*(int *)(a3 + 144)];
  *(_QWORD *)&a1[v139] = *(_QWORD *)&a2[v139];
  v140 = *(int *)(a3 + 152);
  v141 = &a1[v140];
  v142 = &a2[v140];
  v143 = v179;
  if (v177(&a2[v140], 1, v180))
  {
    v144 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
  }
  else
  {
    v145 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v141, v142, v145);
    v146 = *(int *)(v180 + 20);
    v147 = &v141[v146];
    v148 = &v142[v146];
    v149 = type metadata accessor for Artwork.CropStyle(0);
    v150 = *(_QWORD *)(v149 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v148, 1, v149))
    {
      v151 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v147, v148, v149);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v147, 0, 1, v149);
    }
    v143 = v179;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v141, 0, 1, v180);
  }
  v152 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v153 = v152[5];
  v154 = &v141[v153];
  v155 = &v142[v153];
  if (v176(&v142[v153], 10, v143))
  {
    v156 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
  }
  else
  {
    v157 = type metadata accessor for Playlist.Variant(0);
    v158 = *(_QWORD *)(v157 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v155, 1, v157))
    {
      v159 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v154, v155, v157);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v154, 0, 1, v157);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v154, 0, 10, v179);
  }
  *(_QWORD *)&v141[v152[6]] = *(_QWORD *)&v142[v152[6]];
  v160 = v152[7];
  v161 = &v141[v160];
  v162 = &v142[v160];
  *(_OWORD *)v161 = *(_OWORD *)v162;
  v161[16] = v162[16];
  v163 = (int *)type metadata accessor for ContextualPreview.Data(0);
  *(_OWORD *)&v141[v163[5]] = *(_OWORD *)&v142[v163[5]];
  *(_OWORD *)&v141[v163[6]] = *(_OWORD *)&v142[v163[6]];
  *(_OWORD *)&v141[v163[7]] = *(_OWORD *)&v142[v163[7]];
  v141[v163[8]] = v142[v163[8]];
  v141[v163[9]] = v142[v163[9]];
  v164 = *(int *)(a3 + 160);
  a1[*(int *)(a3 + 156)] = a2[*(int *)(a3 + 156)];
  a1[v164] = a2[v164];
  a1[*(int *)(a3 + 164)] = a2[*(int *)(a3 + 164)];
  return a1;
}

char *sub_1003A111C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(char *, uint64_t, uint64_t);
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(char *, uint64_t, uint64_t);
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t WitnessTable;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  size_t v115;
  char *v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t EnumCaseMultiPayload;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  int *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  _BYTE *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  int v252;
  int v253;
  char *v254;
  size_t v255;
  void *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  void *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t (*v271)(void *, uint64_t, uint64_t);
  int v272;
  int v273;
  int *v274;
  uint64_t v275;
  void *v276;
  char *v277;
  int v278;
  int v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  int *v285;
  uint64_t v286;
  uint64_t (*v287)(void *, uint64_t, uint64_t);
  int v288;
  int v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  int *v294;
  uint64_t v295;
  _QWORD *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  unsigned int v315;
  uint64_t v316;
  uint64_t v317;
  unsigned int v318;
  _QWORD *v319;
  char *v320;
  char *v321;
  uint64_t v322;
  _QWORD *v323;
  int *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  int *v328;
  uint64_t (*v329)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v330)(char *, uint64_t, uint64_t);
  uint64_t v331;
  uint64_t v332;
  _BYTE *__src;
  uint64_t v334;
  char *v335;
  char *v336;
  uint64_t v337;
  _QWORD v338[3];
  __int128 v339;

  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v8 = swift_bridgeObjectRelease(v7);
  v9 = *(_QWORD *)(a3 + 24);
  v325 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t, __n128))(v325 + 40))(&a1[*(int *)(a3 + 76)], &a2[*(int *)(a3 + 76)], v9, v8);
  v10 = *(_QWORD *)(a3 + 16);
  v322 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, char *, uint64_t))(v322 + 40))(&a1[*(int *)(a3 + 80)], &a2[*(int *)(a3 + 80)], v10);
  v11 = *(int *)(a3 + 84);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v327 = *(_QWORD *)(v14 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v327 + 48);
  v16 = v15(v12, 1, v14);
  v17 = v15(v13, 1, v14);
  v330 = v15;
  v331 = v14;
  v332 = v9;
  if (!v16)
  {
    if (!v17)
    {
      v27 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v12, v13, v27);
      v28 = *(int *)(v14 + 20);
      v12 += v28;
      v13 += v28;
      v29 = type metadata accessor for Artwork.CropStyle(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
      v32 = v31(v12, 1, v29);
      v33 = v31(v13, 1, v29);
      if (v32)
      {
        if (!v33)
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v12, v13, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v12, 0, 1, v29);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v33)
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v12, v13, v29);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v29);
      }
      v25 = (uint64_t *)&unk_1011A14A0;
LABEL_8:
      v26 = sub_100007E8C(v25);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v12, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v25 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_8;
  }
  if (v17)
    goto LABEL_7;
  v18 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v12, v13, v18);
  v19 = *(int *)(v14 + 20);
  v20 = &v12[v19];
  v21 = &v13[v19];
  v22 = type metadata accessor for Artwork.CropStyle(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v327 + 56))(v12, 0, 1, v14);
LABEL_14:
  v34 = *(int *)(a3 + 92);
  a1[*(int *)(a3 + 88)] = a2[*(int *)(a3 + 88)];
  *(_QWORD *)&a1[v34] = *(_QWORD *)&a2[v34];
  v35 = *(int *)(a3 + 96);
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v326 = *(_QWORD *)(v38 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v326 + 48);
  v40 = v39(v36, 10, v38);
  v334 = v38;
  v329 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v39;
  v41 = v39(v37, 10, v38);
  if (!v40)
  {
    if (!v41)
    {
      v46 = type metadata accessor for Playlist.Variant(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
      v49 = v48(v36, 1, v46);
      v50 = v48(v37, 1, v46);
      if (v49)
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v36, v37, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v36, 0, 1, v46);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v36, v37, v46);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v46);
      }
      v45 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v36, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v45 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v41)
    goto LABEL_20;
  v42 = type metadata accessor for Playlist.Variant(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v37, 1, v42))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v36, v37, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v36, 0, 1, v42);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v326 + 56))(v36, 0, 10, v334);
LABEL_27:
  v51 = *(int *)(a3 + 100);
  v52 = &a1[v51];
  v53 = &a2[v51];
  v55 = *(_QWORD *)v53;
  v54 = *((_QWORD *)v53 + 1);
  v56 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v52 = v55;
  *((_QWORD *)v52 + 1) = v54;
  swift_bridgeObjectRelease(v56);
  v57 = *(int *)(a3 + 104);
  v58 = &a1[v57];
  v59 = &a2[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  v62 = *((_QWORD *)v58 + 1);
  *(_QWORD *)v58 = v61;
  *((_QWORD *)v58 + 1) = v60;
  swift_bridgeObjectRelease(v62);
  v63 = *(int *)(a3 + 108);
  v64 = *(int *)(a3 + 112);
  v65 = &a1[v63];
  v66 = &a2[v63];
  v65[8] = v66[8];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v67 = &a1[v64];
  v68 = &a2[v64];
  v67[8] = v68[8];
  *(_QWORD *)v67 = *(_QWORD *)v68;
  v69 = *(int *)(a3 + 116);
  v70 = &a1[v69];
  v71 = &a2[v69];
  v72 = *(_QWORD *)&a1[v69];
  v73 = *(_QWORD *)&a2[v69];
  if (v72)
  {
    if (v73)
    {
      v74 = *((_QWORD *)v71 + 1);
      *(_QWORD *)v70 = v73;
      *((_QWORD *)v70 + 1) = v74;
      swift_release();
      goto LABEL_34;
    }
    swift_release();
  }
  else if (v73)
  {
    v75 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = v73;
    *((_QWORD *)v70 + 1) = v75;
    goto LABEL_34;
  }
  *(_OWORD *)v70 = *(_OWORD *)v71;
LABEL_34:
  v76 = *(int *)(a3 + 120);
  v77 = &a1[v76];
  v78 = &a2[v76];
  v79 = type metadata accessor for ContentRating(0);
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  v82 = v81(v77, 1, v79);
  v83 = v81(v78, 1, v79);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
LABEL_39:
    v84 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 40))(v77, v78, v79);
LABEL_40:
  v85 = *(int *)(a3 + 124);
  v86 = &a1[v85];
  v87 = &a2[v85];
  v88 = type metadata accessor for MusicFavoriteStatus(0);
  v89 = *(_QWORD *)(v88 - 8);
  v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  v91 = v90(v86, 1, v88);
  v92 = v90(v87, 1, v88);
  if (v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v86, v87, v88);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v92)
  {
    (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
LABEL_45:
    v93 = sub_100007E8C(&qword_1011A19A0);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v89 + 40))(v86, v87, v88);
LABEL_46:
  v94 = *(int *)(a3 + 128);
  v95 = &a1[v94];
  v96 = &a2[v94];
  v97 = type metadata accessor for GenericMusicItem(0);
  v98 = *(_QWORD *)(v97 - 8);
  v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
  v100 = v99(v95, 1, v97);
  v101 = v99(v96, 1, v97);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v96, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v95, v97);
LABEL_51:
    v102 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    goto LABEL_52;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v95, v96, v97);
LABEL_52:
  v103 = *(int *)(a3 + 132);
  v104 = &a1[v103];
  v105 = &a2[v103];
  v106 = *(_QWORD *)(a3 + 32);
  v338[0] = v10;
  v338[1] = v332;
  v338[2] = v106;
  v339 = *(_OWORD *)(a3 + 48);
  v107 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v338);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v107);
  v109 = v107;
  v111 = type metadata accessor for SourcedPlaybackIntent(0, v107, WitnessTable, v110);
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
  v335 = v104;
  LODWORD(v104) = v113(v104, 1, v111);
  __src = v105;
  v114 = v113(v105, 1, v111);
  if (!(_DWORD)v104)
  {
    if (v114)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v335, v111);
      v115 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v111) - 8) + 64);
      v116 = v335;
      goto LABEL_57;
    }
    v123 = v105;
    if (a1 == a2)
      goto LABEL_137;
    v124 = v109;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v335, v109);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(__src, v109);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v142 = EnumCaseMultiPayload;
      v128 = v332;
      v143 = type metadata accessor for MusicItemCollection(0, v332, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
      (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v335, __src, v143);
      v127 = v142;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v315 = EnumCaseMultiPayload;
        (*(void (**)(char *, _BYTE *, uint64_t))(v322 + 32))(v335, __src, v10);
        v145 = type metadata accessor for Library.Context(255);
        v146 = *(int *)(swift_getTupleTypeMetadata2(0, v10, v145, " context ", 0) + 48);
        v147 = &v335[v146];
        *(_QWORD *)v147 = *(_QWORD *)&__src[v146];
        v321 = &__src[v146];
        v324 = (int *)v145;
        v148 = *(int *)(v145 + 20);
        v319 = v147;
        v149 = &v147[v148];
        v150 = &v321[v148];
        v151 = type metadata accessor for Album(0);
        v152 = *(_QWORD *)(v151 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151))
        {
          v153 = sub_100007E8C(&qword_1011A8FA0);
          memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v149, v150, v151);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
        }
        v198 = v324[6];
        v199 = (char *)v319 + v198;
        v200 = &v321[v198];
        v201 = type metadata accessor for Artist(0);
        v202 = *(_QWORD *)(v201 - 8);
        v317 = v124;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v202 + 48))(v200, 1, v201))
        {
          v203 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
          memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v202 + 32))(v199, v200, v201);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
        }
        v204 = v324[7];
        v205 = (char *)v319 + v204;
        v206 = &v321[v204];
        v207 = type metadata accessor for Composer(0);
        v208 = *(_QWORD *)(v207 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
        {
          v209 = sub_100007E8C((uint64_t *)&unk_1011C7310);
          memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v208 + 32))(v205, v206, v207);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v208 + 56))(v205, 0, 1, v207);
        }
        v210 = v324[8];
        v211 = (char *)v319 + v210;
        v212 = &v321[v210];
        v213 = type metadata accessor for Genre(0);
        v214 = *(_QWORD *)(v213 - 8);
        v124 = v317;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v212, 1, v213))
        {
          v215 = sub_100007E8C(&qword_10119ED08);
          memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v211, v212, v213);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
        }
        v216 = v324[9];
        v217 = (char *)v319 + v216;
        v218 = &v321[v216];
        v219 = type metadata accessor for Playlist(0);
        v220 = *(_QWORD *)(v219 - 8);
        v128 = v332;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v220 + 48))(v218, 1, v219))
        {
          v221 = sub_100007E8C(&qword_1011A30F0);
          memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v217, v218, v219);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v220 + 56))(v217, 0, 1, v219);
        }
        v222 = v324[10];
        v223 = (char *)v319 + v222;
        v224 = &v321[v222];
        v225 = type metadata accessor for TVShow(0);
        v226 = *(_QWORD *)(v225 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v226 + 48))(v224, 1, v225))
        {
          v227 = sub_100007E8C((uint64_t *)&unk_1011D1410);
          memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v226 + 32))(v223, v224, v225);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v226 + 56))(v223, 0, 1, v225);
        }
        v228 = v324[11];
        v229 = (char *)v319 + v228;
        v230 = &v321[v228];
        v231 = type metadata accessor for TVSeason(0);
        v232 = *(_QWORD *)(v231 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v232 + 48))(v230, 1, v231))
        {
          v233 = sub_100007E8C((uint64_t *)&unk_1011C7320);
          memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v232 + 32))(v229, v230, v231);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v232 + 56))(v229, 0, 1, v231);
        }
        v144 = v325;
        v123 = __src;
        *((_BYTE *)v319 + v324[12]) = v321[v324[12]];
        *((_BYTE *)v319 + v324[13]) = v321[v324[13]];
        *((_BYTE *)v319 + v324[14]) = v321[v324[14]];
        *(_OWORD *)((char *)v319 + v324[15]) = *(_OWORD *)&v321[v324[15]];
        *(_QWORD *)((char *)v319 + v324[16]) = *(_QWORD *)&v321[v324[16]];
        *((_BYTE *)v319 + v324[17]) = v321[v324[17]];
        v127 = v315;
LABEL_130:
        swift_storeEnumTagMultiPayload(v335, v124, v127);
        v234 = *(int *)(v111 + 36);
        v235 = &v335[v234];
        v236 = &v123[v234];
        v239 = type metadata accessor for PlaybackEnqueueMode(0, v128, v237, v238);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v239 - 8) + 8))(v235, v239);
        if (swift_getEnumCaseMultiPayload(v236, v239) == 1)
        {
          (*(void (**)(char *, _BYTE *, uint64_t))(v144 + 32))(v235, v236, v128);
          v240 = 1;
        }
        else
        {
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v144 + 48))(v236, 1, v128))
          {
            v241 = type metadata accessor for Optional(0, v128);
            memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, _BYTE *, uint64_t))(v144 + 32))(v235, v236, v128);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v235, 0, 1, v128);
          }
          v240 = 0;
        }
        swift_storeEnumTagMultiPayload(v235, v239, v240);
        v123 = __src;
LABEL_137:
        v335[*(int *)(v111 + 40)] = v123[*(int *)(v111 + 40)];
        goto LABEL_138;
      }
      v126 = EnumCaseMultiPayload;
      (*(void (**)(char *, _BYTE *, uint64_t))(v322 + 32))(v335, __src, v10);
      v127 = v126;
      v128 = v332;
    }
    v144 = v325;
    goto LABEL_130;
  }
  if (v114)
  {
    v115 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Optional(0, v111) - 8) + 64);
    v116 = v335;
LABEL_57:
    memcpy(v116, v105, v115);
    goto LABEL_138;
  }
  v117 = v105;
  v118 = v109;
  v119 = swift_getEnumCaseMultiPayload(__src, v109);
  if ((_DWORD)v119 == 2)
  {
    v129 = v119;
    v122 = v332;
    v130 = type metadata accessor for MusicItemCollection(0, v332, *(_QWORD *)(*(_QWORD *)(a3 + 40) + 8));
    (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(v335, __src, v130);
    v121 = v129;
  }
  else if ((_DWORD)v119 == 1)
  {
    v120 = v119;
    (*(void (**)(char *, _BYTE *, uint64_t))(v322 + 32))(v335, __src, v10);
    v121 = v120;
    v122 = v332;
  }
  else
  {
    v316 = v109;
    v318 = v119;
    (*(void (**)(char *, _BYTE *, uint64_t))(v322 + 32))(v335, __src, v10);
    v131 = type metadata accessor for Library.Context(255);
    v132 = *(int *)(swift_getTupleTypeMetadata2(0, v10, v131, " context ", 0) + 48);
    v133 = &v335[v132];
    v134 = (int *)v131;
    v135 = &__src[v132];
    *(_QWORD *)v133 = *(_QWORD *)&__src[v132];
    v136 = *(int *)(v131 + 20);
    v320 = v135;
    v323 = v133;
    v137 = &v133[v136];
    v138 = &v135[v136];
    v139 = type metadata accessor for Album(0);
    v140 = *(_QWORD *)(v139 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139))
    {
      v141 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v137, v138, v139);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
    }
    v154 = v134[6];
    v155 = (char *)v323 + v154;
    v156 = &v320[v154];
    v157 = type metadata accessor for Artist(0);
    v158 = *(_QWORD *)(v157 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
    {
      v159 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v155, v156, v157);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
    }
    v160 = v134[7];
    v161 = (char *)v323 + v160;
    v162 = &v320[v160];
    v163 = type metadata accessor for Composer(0);
    v164 = *(_QWORD *)(v163 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v162, 1, v163))
    {
      v165 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v161, v162, v163);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
    }
    v166 = v134[8];
    v167 = (char *)v323 + v166;
    v168 = &v320[v166];
    v169 = type metadata accessor for Genre(0);
    v170 = *(_QWORD *)(v169 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
    {
      v171 = sub_100007E8C(&qword_10119ED08);
      memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v167, v168, v169);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
    }
    v172 = v134[9];
    v173 = (char *)v323 + v172;
    v174 = &v320[v172];
    v175 = type metadata accessor for Playlist(0);
    v176 = *(_QWORD *)(v175 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v174, 1, v175))
    {
      v177 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v176 + 32))(v173, v174, v175);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
    }
    v178 = v134[10];
    v179 = (char *)v323 + v178;
    v180 = &v320[v178];
    v181 = type metadata accessor for TVShow(0);
    v182 = *(_QWORD *)(v181 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v180, 1, v181))
    {
      v183 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v179, v180, v181);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
    }
    v184 = v134[11];
    v185 = (char *)v323 + v184;
    v186 = &v320[v184];
    v187 = type metadata accessor for TVSeason(0);
    v188 = *(_QWORD *)(v187 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v186, 1, v187))
    {
      v189 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v185, v186, v187);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
    }
    v122 = v332;
    v117 = __src;
    *((_BYTE *)v323 + v134[12]) = v320[v134[12]];
    *((_BYTE *)v323 + v134[13]) = v320[v134[13]];
    *((_BYTE *)v323 + v134[14]) = v320[v134[14]];
    *(_OWORD *)((char *)v323 + v134[15]) = *(_OWORD *)&v320[v134[15]];
    *(_QWORD *)((char *)v323 + v134[16]) = *(_QWORD *)&v320[v134[16]];
    *((_BYTE *)v323 + v134[17]) = v320[v134[17]];
    v121 = v318;
    v118 = v316;
  }
  swift_storeEnumTagMultiPayload(v335, v118, v121);
  v190 = *(int *)(v111 + 36);
  v191 = &v335[v190];
  v192 = &v117[v190];
  v195 = type metadata accessor for PlaybackEnqueueMode(0, v122, v193, v194);
  if (swift_getEnumCaseMultiPayload(v192, v195) == 1)
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v325 + 32))(v191, v192, v122);
    v196 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v325 + 48))(v192, 1, v122))
    {
      v197 = type metadata accessor for Optional(0, v122);
      memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, _BYTE *, uint64_t))(v325 + 32))(v191, v192, v122);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v325 + 56))(v191, 0, 1, v122);
    }
    v196 = 0;
  }
  swift_storeEnumTagMultiPayload(v191, v195, v196);
  v335[*(int *)(v111 + 40)] = __src[*(int *)(v111 + 40)];
  (*(void (**)(void))(v112 + 56))();
LABEL_138:
  v242 = *(int *)(a3 + 136);
  v243 = &a1[v242];
  v244 = &a2[v242];
  v246 = *(_QWORD *)v244;
  v245 = *((_QWORD *)v244 + 1);
  *(_QWORD *)v243 = v246;
  *((_QWORD *)v243 + 1) = v245;
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 140)] = *(_QWORD *)&a2[*(int *)(a3 + 140)];
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 144)] = *(_QWORD *)&a2[*(int *)(a3 + 144)];
  swift_release();
  v247 = *(int *)(a3 + 148);
  v248 = *(void **)&a1[v247];
  *(_QWORD *)&a1[v247] = *(_QWORD *)&a2[v247];

  v249 = *(int *)(a3 + 152);
  v250 = (uint64_t)&a1[v249];
  v251 = &a2[v249];
  v252 = v330(&a1[v249], 1, v331);
  v253 = v330(v251, 1, v331);
  v328 = (int *)a3;
  if (!v252)
  {
    if (v253)
    {
      v254 = a2;
      sub_10005B748(v250, type metadata accessor for ArtworkImage.ViewModel);
      goto LABEL_143;
    }
    v265 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v265 - 8) + 40))(v250, v251, v265);
    v266 = *(int *)(v331 + 20);
    v267 = (void *)(v250 + v266);
    v268 = &v251[v266];
    v269 = type metadata accessor for Artwork.CropStyle(0);
    v270 = *(_QWORD *)(v269 - 8);
    v271 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v270 + 48);
    v272 = v271(v267, 1, v269);
    v336 = v268;
    v273 = v271(v268, 1, v269);
    v254 = a2;
    if (v272)
    {
      if (!v273)
      {
        (*(void (**)(void *, char *, uint64_t))(v270 + 32))(v267, v336, v269);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v270 + 56))(v267, 0, 1, v269);
        goto LABEL_152;
      }
    }
    else
    {
      if (!v273)
      {
        (*(void (**)(void *, char *, uint64_t))(v270 + 40))(v267, v336, v269);
        goto LABEL_152;
      }
      (*(void (**)(void *, uint64_t))(v270 + 8))(v267, v269);
    }
    v255 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v256 = v267;
    v257 = v336;
    goto LABEL_144;
  }
  if (v253)
  {
    v254 = a2;
LABEL_143:
    v255 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v256 = (void *)v250;
    v257 = v251;
LABEL_144:
    memcpy(v256, v257, v255);
    goto LABEL_152;
  }
  v258 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 32))(v250, v251, v258);
  v259 = *(int *)(v331 + 20);
  v260 = (void *)(v250 + v259);
  v261 = &v251[v259];
  v262 = type metadata accessor for Artwork.CropStyle(0);
  v263 = *(_QWORD *)(v262 - 8);
  v254 = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v263 + 48))(v261, 1, v262))
  {
    v264 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v263 + 32))(v260, v261, v262);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v260, 0, 1, v262);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v327 + 56))(v250, 0, 1, v331);
LABEL_152:
  v274 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v275 = v274[5];
  v276 = (void *)(v250 + v275);
  v277 = &v251[v275];
  v278 = v329(v250 + v275, 10, v334);
  v279 = v329((uint64_t)v277, 10, v334);
  v280 = v254;
  if (!v278)
  {
    if (!v279)
    {
      v286 = type metadata accessor for Playlist.Variant(0);
      v337 = *(_QWORD *)(v286 - 8);
      v287 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v337 + 48);
      v288 = v287(v276, 1, v286);
      v289 = v287(v277, 1, v286);
      if (v288)
      {
        v285 = v328;
        if (!v289)
        {
          (*(void (**)(void *, char *, uint64_t))(v337 + 32))(v276, v277, v286);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v337 + 56))(v276, 0, 1, v286);
          goto LABEL_170;
        }
      }
      else
      {
        v285 = v328;
        if (!v289)
        {
          (*(void (**)(void *, char *, uint64_t))(v337 + 40))(v276, v277, v286);
          goto LABEL_170;
        }
        (*(void (**)(void *, uint64_t))(v337 + 8))(v276, v286);
      }
      v290 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
      goto LABEL_170;
    }
    sub_10004FF60((uint64_t)v276, (uint64_t *)&unk_1011A3DB0);
    goto LABEL_158;
  }
  if (v279)
  {
LABEL_158:
    v284 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
    v285 = v328;
    goto LABEL_170;
  }
  v281 = type metadata accessor for Playlist.Variant(0);
  v282 = *(_QWORD *)(v281 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v277, 1, v281))
  {
    v283 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v282 + 32))(v276, v277, v281);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v282 + 56))(v276, 0, 1, v281);
  }
  v285 = v328;
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v326 + 56))(v276, 0, 10, v334);
LABEL_170:
  *(_QWORD *)(v250 + v274[6]) = *(_QWORD *)&v251[v274[6]];
  v291 = v274[7];
  v292 = v250 + v291;
  v293 = &v251[v291];
  *(_OWORD *)v292 = *(_OWORD *)v293;
  *(_BYTE *)(v292 + 16) = v293[16];
  v294 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v295 = v294[5];
  v296 = (_QWORD *)(v250 + v295);
  v297 = &v251[v295];
  v299 = *(_QWORD *)v297;
  v298 = *((_QWORD *)v297 + 1);
  v300 = v296[1];
  *v296 = v299;
  v296[1] = v298;
  swift_bridgeObjectRelease(v300);
  v301 = v294[6];
  v302 = (_QWORD *)(v250 + v301);
  v303 = &v251[v301];
  v305 = *(_QWORD *)v303;
  v304 = *((_QWORD *)v303 + 1);
  v306 = v302[1];
  *v302 = v305;
  v302[1] = v304;
  swift_bridgeObjectRelease(v306);
  v307 = v294[7];
  v308 = (_QWORD *)(v250 + v307);
  v309 = &v251[v307];
  v311 = *(_QWORD *)v309;
  v310 = *((_QWORD *)v309 + 1);
  v312 = v308[1];
  *v308 = v311;
  v308[1] = v310;
  swift_bridgeObjectRelease(v312);
  *(_BYTE *)(v250 + v294[8]) = v251[v294[8]];
  *(_BYTE *)(v250 + v294[9]) = v251[v294[9]];
  v313 = v285[40];
  a1[v285[39]] = v280[v285[39]];
  a1[v313] = v280[v313];
  a1[v285[41]] = v280[v285[41]];
  return a1;
}

uint64_t sub_1003A2B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A2B90);
}

uint64_t sub_1003A2B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  __int128 v30;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v9 + 48))(a1 + *(int *)(a3 + 76), a2, *(_QWORD *)(a3 + 24));
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v11 + 48))(a1 + *(int *)(a3 + 80), a2, *(_QWORD *)(a3 + 16));
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v13 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v14 = v12;
    v15 = *(int *)(a3 + 84);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1 + v15, a2, v14);
  }
  v16 = type metadata accessor for ArtworkImage.Placeholder(0);
  v13 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v14 = v16;
    v15 = *(int *)(a3 + 96);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1 + v15, a2, v14);
  }
  v17 = sub_100007E8C(&qword_1011B8D50);
  v13 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v14 = v17;
    v15 = *(int *)(a3 + 120);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1 + v15, a2, v14);
  }
  v18 = sub_100007E8C(&qword_1011A19A0);
  v13 = *(_QWORD *)(v18 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v14 = v18;
    v15 = *(int *)(a3 + 124);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1 + v15, a2, v14);
  }
  v19 = sub_100007E8C(&qword_1011A7648);
  v13 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v14 = v19;
    v15 = *(int *)(a3 + 128);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1 + v15, a2, v14);
  }
  v20 = *(_QWORD *)(a3 + 32);
  v29[0] = v10;
  v29[1] = v8;
  v29[2] = v20;
  v30 = *(_OWORD *)(a3 + 48);
  v21 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v29);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v21);
  v24 = type metadata accessor for SourcedPlaybackIntent(255, v21, WitnessTable, v23);
  v25 = type metadata accessor for Optional(0, v24);
  v26 = *(_QWORD *)(v25 - 8);
  if (*(_DWORD *)(v26 + 84) == (_DWORD)a2)
  {
    v27 = v25;
    v28 = *(int *)(a3 + 132);
  }
  else
  {
    v27 = type metadata accessor for ContextualPreview.Data(0);
    v26 = *(_QWORD *)(v27 - 8);
    v28 = *(int *)(a3 + 152);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(a1 + v28, a2, v27);
}

uint64_t sub_1003A2DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A2DC8);
}

uint64_t sub_1003A2DC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  __int128 v30;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
    return result;
  }
  v8 = *(_QWORD *)(a4 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9 + 56))(result + *(int *)(a4 + 76), a2, a2, *(_QWORD *)(a4 + 24));
  v10 = *(_QWORD *)(a4 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 56))(result + *(int *)(a4 + 80), a2, a2, *(_QWORD *)(a4 + 16));
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v13 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    v14 = v12;
    v15 = *(int *)(a4 + 84);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v5 + v15, a2, a2, v14);
  }
  v16 = type metadata accessor for ArtworkImage.Placeholder(0);
  v13 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    v14 = v16;
    v15 = *(int *)(a4 + 96);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v5 + v15, a2, a2, v14);
  }
  v17 = sub_100007E8C(&qword_1011B8D50);
  v13 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    v14 = v17;
    v15 = *(int *)(a4 + 120);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v5 + v15, a2, a2, v14);
  }
  v18 = sub_100007E8C(&qword_1011A19A0);
  v13 = *(_QWORD *)(v18 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    v14 = v18;
    v15 = *(int *)(a4 + 124);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v5 + v15, a2, a2, v14);
  }
  v19 = sub_100007E8C(&qword_1011A7648);
  v13 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    v14 = v19;
    v15 = *(int *)(a4 + 128);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v5 + v15, a2, a2, v14);
  }
  v20 = *(_QWORD *)(a4 + 32);
  v29[0] = v10;
  v29[1] = v8;
  v29[2] = v20;
  v30 = *(_OWORD *)(a4 + 48);
  v21 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v29);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v21);
  v24 = type metadata accessor for SourcedPlaybackIntent(255, v21, WitnessTable, v23);
  v25 = type metadata accessor for Optional(0, v24);
  v26 = *(_QWORD *)(v25 - 8);
  if (*(_DWORD *)(v26 + 84) == a3)
  {
    v27 = v25;
    v28 = *(int *)(a4 + 132);
  }
  else
  {
    v27 = type metadata accessor for ContextualPreview.Data(0);
    v26 = *(_QWORD *)(v27 - 8);
    v28 = *(int *)(a4 + 152);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v5 + v28, a2, a2, v27);
}

uint64_t sub_1003A3000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  v28 = a10;
  v19 = type metadata accessor for ContainerHeaderRow.ViewModel(0, (uint64_t)&v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  v28 = a10;
  v20 = type metadata accessor for ContainerHeaderRow(0, (uint64_t)&v22);
  return sub_100065228(a2, a9 + *(int *)(v20 + 76), (uint64_t *)&unk_1011C72A0);
}

uint64_t sub_1003A30D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = swift_getKeyPath(&unk_100EB7B18);
  v2 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  return swift_storeEnumTagMultiPayload(a1, v2, 0);
}

uint64_t sub_1003A3114@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;

  v56 = a4;
  v52 = a3;
  v19 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v54 = *(_QWORD *)(v19 - 8);
  v55 = v19;
  __chkstk_darwin(v19);
  v53 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a5;
  v58 = a6;
  v59 = a7;
  v60 = a8;
  v61 = a10;
  v62 = a11;
  v63 = a12;
  v21 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v57);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v57 = a5;
  v58 = a6;
  v59 = a7;
  v60 = a8;
  v61 = a10;
  v62 = a11;
  v63 = a12;
  v22 = (int *)type metadata accessor for ContainerTrackRow(0, (uint64_t)&v57);
  v23 = a9 + v22[19];
  v64 = a2;
  State.init(wrappedValue:)(&v64, &type metadata for Bool);
  v24 = v58;
  *(_BYTE *)v23 = v57;
  *(_QWORD *)(v23 + 8) = v24;
  *(_QWORD *)(a9 + v22[20]) = v52;
  v25 = a9 + v22[21];
  *(_QWORD *)v25 = swift_getKeyPath(&unk_100EB7B40);
  *(_BYTE *)(v25 + 8) = 0;
  v26 = (_QWORD *)(a9 + v22[22]);
  v27 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v28 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v26 = EnvironmentObject.init()(v27, v28);
  v26[1] = v29;
  v30 = (_QWORD *)(a9 + v22[23]);
  v31 = type metadata accessor for NoticePresenter(0);
  v32 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v30 = EnvironmentObject.init()(v31, v32);
  v30[1] = v33;
  v34 = a9 + v22[24];
  *(_QWORD *)v34 = sub_1000DEC04;
  *(_QWORD *)(v34 + 8) = 0;
  *(_BYTE *)(v34 + 16) = 0;
  v35 = (_QWORD *)(a9 + v22[25]);
  v36 = type metadata accessor for NavigationPusher();
  v37 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v35 = EnvironmentObject.init()(v36, v37);
  v35[1] = v38;
  v39 = (_QWORD *)(a9 + v22[26]);
  v40 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v41 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v39 = EnvironmentObject.init()(v40, v41);
  v39[1] = v42;
  v43 = (_QWORD *)(a9 + v22[27]);
  v44 = type metadata accessor for TabSelectionManager(0);
  v45 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v43 = EnvironmentObject.init()(v44, v45);
  v43[1] = v46;
  v47 = a9 + v22[28];
  *(_QWORD *)v47 = swift_getKeyPath(&unk_100EB7B68);
  *(_QWORD *)(v47 + 8) = 0;
  *(_BYTE *)(v47 + 16) = 0;
  v48 = a9 + v22[29];
  *(_QWORD *)v48 = swift_getKeyPath(&unk_100EB7B90);
  *(_QWORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 16) = 0;
  sub_100065228(v56, a9 + v22[30], (uint64_t *)&unk_1011C72A0);
  v49 = (uint64_t)v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, enum case for MusicLibrary.DownloadStatus.downloadable(_:), v55);
  return sub_1003A367C(v49);
}

void sub_1003A344C()
{
  qword_1011AF708 = Int.seconds.getter(16);
}

void sub_1003A346C()
{
  qword_1011AF710 = Int.seconds.getter(48);
}

uint64_t sub_1003A348C()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011C4DD0);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_1003A34E0(char a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[9];
  uint64_t v9;

  v3 = (char *)(v2 + *(int *)(a2 + 76));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v8[1] = v4;
  v9 = v5;
  v8[0] = a1;
  v6 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(v8, v6);
}

uint64_t Actions.GoToArtist.Context.menuItemSubtitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_1003A3564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  __int128 v14;

  v4 = v2 + *(int *)(a1 + 132);
  v5 = *(_QWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 16);
  v13 = v5;
  v14 = *(_OWORD *)(a1 + 48);
  v6 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v12);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v6);
  v9 = type metadata accessor for SourcedPlaybackIntent(255, v6, WitnessTable, v8);
  v10 = type metadata accessor for Optional(0, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, v4, v10);
}

void *sub_1003A3604(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 148));
  v3 = v2;
  return v2;
}

uint64_t sub_1003A362C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10005B704(v2 + *(int *)(a1 + 152), a2, type metadata accessor for ContextualPreview.Data);
}

uint64_t sub_1003A3654(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_1003A365C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t sub_1003A3664(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 48);
}

uint64_t sub_1003A366C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 56);
}

uint64_t sub_1003A3674(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 64);
}

uint64_t sub_1003A367C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  State.init(wrappedValue:)(v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_1003A371C@<X0>(int *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  id v96;
  char v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  unint64_t v123;
  uint64_t KeyPath;
  uint64_t v125;
  uint64_t v126;
  char v127;
  int *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  double v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  int *v146;
  _QWORD *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  void *v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  int *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  void *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  __n128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  unint64_t *v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  ValueMetadata *v211;
  unint64_t v212;
  void *v213;
  void *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  uint64_t v257;
  void *v258;
  uint64_t v259;
  void *v260;
  _QWORD *v261;
  _QWORD *v262;
  int *v263;
  uint64_t v264;
  _BYTE v265[32];
  uint64_t v266;
  _QWORD v267[5];
  _QWORD v268[5];
  _QWORD v269[5];
  _QWORD v270[3];
  uint64_t v271;
  _UNKNOWN **v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  void *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  uint64_t v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  void *v296;
  __int128 v297;
  uint64_t v298;

  v245 = a2;
  v4 = type metadata accessor for TapGesture(0, a3);
  v241 = *(_QWORD *)(v4 - 8);
  v242 = v4;
  __chkstk_darwin(v4);
  v240 = (char *)&v213 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = sub_100007E8C(&qword_1011AD9B0);
  v244 = *(_QWORD *)(v257 - 8);
  __chkstk_darwin(v257);
  v243 = (char *)&v213 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = (int *)sub_100044B54(&qword_1011AFA10);
  v253 = sub_100044B54((uint64_t *)&unk_1011C72B0);
  v7 = sub_100044B54(&qword_1011AFA18);
  v8 = (_QWORD *)*((_QWORD *)a1 + 2);
  v260 = (void *)*((_QWORD *)a1 + 3);
  v261 = v8;
  v9 = (void *)*((_QWORD *)a1 + 5);
  v262 = (_QWORD *)*((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 6);
  v255 = *((_QWORD *)a1 + 7);
  v256 = v9;
  v258 = (void *)*((_QWORD *)a1 + 8);
  v259 = v10;
  *(_QWORD *)&v293 = v8;
  *((_QWORD *)&v293 + 1) = v260;
  *(_QWORD *)&v294 = v262;
  *((_QWORD *)&v294 + 1) = v9;
  *(_QWORD *)&v295 = v10;
  *((_QWORD *)&v295 + 1) = v255;
  v296 = v258;
  v11 = type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)&v293);
  v254 = v11;
  WitnessTable = swift_getWitnessTable(&unk_100EB7748, v11);
  v14 = type metadata accessor for PlaybackRowModifier(255, v11, WitnessTable, v13);
  v15 = type metadata accessor for ModifiedContent(255, v7, v14);
  v16 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v17 = type metadata accessor for ModifiedContent(255, v15, v16);
  v18 = sub_100044B54(&qword_1011A05B8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v17, v18, 0, 0);
  v20 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v20);
  v22 = type metadata accessor for HStack(255, v20, v21);
  v23 = type metadata accessor for ModifiedContent(255, v22, &type metadata for _PaddingLayout);
  v24 = type metadata accessor for ModifiedContent(255, v23, &type metadata for _FlexFrameLayout);
  v281 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v22);
  v282 = &protocol witness table for _PaddingLayout;
  v279 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  v280 = &protocol witness table for _FlexFrameLayout;
  v25 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  *(_QWORD *)&v293 = v24;
  *((_QWORD *)&v293 + 1) = v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v293, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  *(_QWORD *)&v293 = v24;
  *((_QWORD *)&v293 + 1) = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v293, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  *(_QWORD *)&v293 = OpaqueTypeMetadata2;
  *((_QWORD *)&v293 + 1) = OpaqueTypeConformance2;
  v28 = swift_getOpaqueTypeMetadata2(255, &v293, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 0);
  v29 = sub_100044B54(&qword_1011AFA20);
  v30 = type metadata accessor for ModifiedContent(255, v28, v29);
  v31 = type metadata accessor for ContextualPreview(255);
  *(_QWORD *)&v293 = OpaqueTypeMetadata2;
  *((_QWORD *)&v293 + 1) = OpaqueTypeConformance2;
  v32 = swift_getOpaqueTypeConformance2(&v293, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v33 = sub_100049F28(&qword_1011AFA28, &qword_1011AFA20, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v277 = v32;
  v278 = v33;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v35 = sub_1000E3EE4();
  v36 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
  *(_QWORD *)&v293 = v30;
  *((_QWORD *)&v293 + 1) = &type metadata for ActionType;
  *(_QWORD *)&v294 = v31;
  *((_QWORD *)&v294 + 1) = v34;
  *(_QWORD *)&v295 = v35;
  *((_QWORD *)&v295 + 1) = v36;
  v37 = swift_getOpaqueTypeMetadata2(255, &v293, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 0);
  *(_QWORD *)&v293 = v30;
  *((_QWORD *)&v293 + 1) = &type metadata for ActionType;
  *(_QWORD *)&v294 = v31;
  *((_QWORD *)&v294 + 1) = v34;
  *(_QWORD *)&v295 = v35;
  *((_QWORD *)&v295 + 1) = v36;
  v38 = swift_getOpaqueTypeConformance2(&v293, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  *(_QWORD *)&v293 = v37;
  *((_QWORD *)&v293 + 1) = v38;
  v39 = swift_getOpaqueTypeMetadata2(255, &v293, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 0);
  v40 = sub_100049F28(&qword_1011AFA30, (uint64_t *)&unk_1011C72B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  *(_QWORD *)&v293 = v37;
  *((_QWORD *)&v293 + 1) = v38;
  v41 = swift_getOpaqueTypeConformance2(&v293, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
  *(_QWORD *)&v293 = v253;
  *((_QWORD *)&v293 + 1) = v39;
  *(_QWORD *)&v294 = v40;
  *((_QWORD *)&v294 + 1) = v41;
  v42 = type metadata accessor for SubscriptionView(255, &v293);
  v43 = swift_getTupleTypeMetadata2(255, v263, v42, 0, 0);
  v44 = type metadata accessor for TupleView(255, v43);
  v45 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v44);
  v225 = v44;
  v223 = v45;
  v46 = type metadata accessor for HStack(0, v44, v45);
  v229 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v226 = (char *)&v213 - v47;
  v48 = type metadata accessor for ModifiedContent(0, v46, &type metadata for _PaddingLayout);
  v227 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v224 = (void **)((char *)&v213 - v49);
  v50 = v261;
  *(_QWORD *)&v293 = v261;
  *((_QWORD *)&v293 + 1) = v260;
  *(_QWORD *)&v294 = v262;
  *((_QWORD *)&v294 + 1) = v256;
  *(_QWORD *)&v295 = v259;
  *((_QWORD *)&v295 + 1) = v255;
  v296 = v258;
  v51 = type metadata accessor for ContainerTrackRow.AccessibilityTrackRowFrame(255, (uint64_t)&v293);
  v52 = type metadata accessor for ModifiedContent(0, v48, v51);
  v238 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v237 = (char *)&v213 - v53;
  v230 = v46;
  v220 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v46);
  v275 = v220;
  v276 = &protocol witness table for _PaddingLayout;
  v228 = v48;
  v54 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v48);
  v222 = v51;
  v55 = swift_getWitnessTable(&unk_100EB79F4, v51);
  v221 = v54;
  v273 = v54;
  v274 = v55;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v52);
  v57 = sub_100049F28(&qword_1011ADA10, &qword_1011AD9B0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v239 = v52;
  *(_QWORD *)&v293 = v52;
  *((_QWORD *)&v293 + 1) = v257;
  v235 = v56;
  *(_QWORD *)&v294 = v56;
  *((_QWORD *)&v294 + 1) = v57;
  v232 = v57;
  v236 = swift_getOpaqueTypeMetadata2(0, &v293, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 0);
  v234 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin(v236);
  v231 = (char *)&v213 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v233 = (uint64_t)&v213 - v60;
  v263 = a1;
  v246 = *((_QWORD *)a1 - 1);
  __chkstk_darwin(v61);
  v218 = v62;
  v219 = (char *)&v213 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  v253 = (uint64_t)&v213 - v64;
  v65 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v65);
  v67 = (char *)&v213 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v50;
  v69 = *(v50 - 1);
  __chkstk_darwin(v70);
  v72 = (char *)&v213 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011A7648);
  __chkstk_darwin(v73);
  v75 = (char *)&v213 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v76);
  v78 = (char *)&v213 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = (int *)swift_checkMetadataState(0, v254);
  sub_10004A160(v264 + v79[32], (uint64_t)v75, &qword_1011A7648);
  sub_100065228((uint64_t)v75, (uint64_t)v78, (uint64_t *)&unk_1011A20D0);
  v80 = type metadata accessor for GenericMusicItem(0);
  v81 = *(_QWORD *)(v80 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v78, 1, v80) == 1)
  {
    v82 = sub_10004FF60((uint64_t)v78, (uint64_t *)&unk_1011A20D0);
    v83 = 0;
    v84 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
    v88 = 0;
    v89 = 0;
    v90 = 0;
    v91 = 0;
    v92 = 0;
LABEL_13:
    v155 = v246;
    v247 = v84;
    v248 = v85;
    v249 = v86;
    v250 = v87;
    v251 = v88;
    v252 = v89;
    v253 = v90;
    v254 = v91;
    v216 = v83;
    v217 = (char *)v92;
    *(_QWORD *)&v293 = v83;
    *((_QWORD *)&v293 + 1) = v84;
    *(_QWORD *)&v294 = v85;
    *((_QWORD *)&v294 + 1) = v86;
    *(_QWORD *)&v295 = v87;
    *((_QWORD *)&v295 + 1) = v88;
    v296 = v89;
    *(_QWORD *)&v297 = v90;
    *((_QWORD *)&v297 + 1) = v91;
    v298 = v92;
    __chkstk_darwin(v82);
    *(&v213 - 10) = v261;
    *(&v213 - 9) = v260;
    v156 = v255;
    v157 = v256;
    *(&v213 - 8) = v262;
    *(&v213 - 7) = v157;
    v207 = v259;
    v208 = v156;
    v158 = v264;
    v209 = v258;
    v210 = v264;
    v211 = (ValueMetadata *)&v293;
    v160 = static VerticalAlignment.center.getter(v159);
    v161 = v226;
    v162 = HStack.init(alignment:spacing:content:)(v160, 0x4018000000000000, 0, sub_1003AB378, &v213 - 12, v225, v223);
    v163 = static Edge.Set.leading.getter(v162);
    v164 = v224;
    v165 = v230;
    View.padding(_:_:)(v224, v163, qword_1011CCD38 ^ 0x8000000000000000, 0, v230, v220);
    v166 = (*(uint64_t (**)(char *, uint64_t))(v229 + 8))(v161, v165);
    v167 = v237;
    v168 = v228;
    View.modifier<A>(_:)(v166, v228, v222, v221);
    (*(void (**)(_QWORD *, uint64_t))(v227 + 8))(v164, v168);
    v169 = v158;
    v170 = v240;
    TapGesture.init(count:)(1);
    v171 = v219;
    v172 = v263;
    (*(void (**)(char *, uint64_t, int *))(v155 + 16))(v219, v169, v263);
    v173 = *(unsigned __int8 *)(v155 + 80);
    v174 = (v173 + 72) & ~v173;
    v175 = (char *)swift_allocObject(&unk_1010C2578, v174 + v218, v173 | 7);
    v176 = v260;
    *((_QWORD *)v175 + 2) = v261;
    *((_QWORD *)v175 + 3) = v176;
    *((_QWORD *)v175 + 4) = v262;
    *((_QWORD *)v175 + 5) = v157;
    *((_QWORD *)v175 + 6) = v259;
    *((_QWORD *)v175 + 7) = v156;
    *((_QWORD *)v175 + 8) = v258;
    (*(void (**)(char *, char *, int *))(v155 + 32))(&v175[v174], v171, v172);
    v177 = swift_allocObject(&unk_1010C25A0, 32, 7);
    *(_QWORD *)(v177 + 16) = sub_1003AB388;
    *(_QWORD *)(v177 + 24) = v175;
    v179 = v242;
    v178 = v243;
    Gesture.onEnded(_:)(sub_10004D5F4, v177, v242, &protocol witness table for TapGesture);
    v180 = swift_release();
    v181 = (*(uint64_t (**)(char *, uint64_t, __n128))(v241 + 8))(v170, v179, v180);
    v182 = static GestureMask.all.getter(v181);
    v184 = (uint64_t)v231;
    v183 = v232;
    v185 = v239;
    v186 = v257;
    v187 = v235;
    View.simultaneousGesture<A>(_:including:)(v178, v182, v239, v257, v235, v232);
    sub_1000E4164(v216, v247, v248, v249, v250, v251, v252, v253, v254, (uint64_t)v217);
    (*(void (**)(char *, uint64_t))(v244 + 8))(v178, v186);
    (*(void (**)(char *, uint64_t))(v238 + 8))(v167, v185);
    v270[0] = v185;
    v270[1] = v186;
    v270[2] = v187;
    v271 = v183;
    swift_getOpaqueTypeConformance2(v270, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
    v188 = v233;
    v189 = v236;
    sub_10081EB14(v184, v236, v233);
    v190 = *(void (**)(uint64_t, uint64_t))(v234 + 8);
    v190(v184, v189);
    sub_1000EA744(v188, v189, v245);
    return ((uint64_t (*)(uint64_t, uint64_t))v190)(v188, v189);
  }
  v215 = v81;
  v216 = v80;
  sub_1000E3E80();
  v93 = v264;
  (*(void (**)(char *, uint64_t, _QWORD *))(v69 + 16))(v72, v264 + v79[20], v68);
  v214 = (void *)MPCPlaybackIntent.init<A>(_:)(v72, v68, v262[1]);
  v94 = v263;
  v95 = v93 + v263[21];
  v96 = *(id *)v95;
  v97 = *(_BYTE *)(v95 + 8);
  sub_1000A4100(*(id *)v95, v97);
  v98 = sub_100824044(v96, v97);
  sub_1000A4224(v96, v97);
  v99 = *(void **)(v93 + v79[35]);
  v100 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v67, 1, 1, v100);
  v101 = (uint64_t *)(v93 + v94[22]);
  v102 = *v101;
  if (*v101)
  {
    v103 = (uint64_t)v67;
    v252 = v99;
    v217 = v78;
    v104 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v272 = &protocol witness table for <A> PresentedViewState<A>;
    v271 = v104;
    v270[0] = v102;
    v105 = (uint64_t *)(v264 + v263[23]);
    v106 = *v105;
    if (*v105)
    {
      v107 = type metadata accessor for NoticePresenter(0);
      v269[4] = &protocol witness table for NoticePresenter;
      v269[3] = v107;
      v269[0] = v106;
      v296 = 0;
      v294 = 0u;
      v295 = 0u;
      v293 = 0u;
      v297 = xmmword_100EA93A0;
      v108 = v263;
      v109 = v264;
      v110 = v264 + v263[24];
      v111 = *(_QWORD *)v110;
      v112 = *(_QWORD *)(v110 + 8);
      v113 = *(unsigned __int8 *)(v110 + 16);
      swift_retain();
      swift_retain();
      v114 = sub_100007E8C(&qword_1011A03A8);
      v115 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v116 = StateObject.wrappedValue.getter(v111, v112, v113, v114, v115);
      v268[4] = &protocol witness table for <A> PresentedViewState<A>;
      v268[3] = v114;
      v268[0] = v116;
      v117 = (uint64_t *)(v109 + v108[25]);
      v118 = *v117;
      if (*v117)
      {
        v119 = type metadata accessor for NavigationPusher();
        v267[3] = v119;
        v267[4] = &off_1010D58B0;
        v267[0] = v118;
        v266 = 0;
        memset(v265, 0, sizeof(v265));
        v120 = (_QWORD *)(v264 + v263[26]);
        if (*v120)
        {
          v213 = v98;
          v254 = v103;
          v121 = v264;
          v122 = (_QWORD *)(v264 + v263[27]);
          if (*v122)
          {
            __chkstk_darwin(v119);
            v123 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100EB7890);
            __chkstk_darwin(KeyPath);
            v211 = &type metadata for TabIdentifier;
            v212 = v123;
            v125 = swift_getKeyPath(&unk_100EB78C8);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v283, v126, KeyPath, v125);
            swift_release();
            swift_release();
            swift_release();
            v127 = v283;
            v128 = v263;
            v129 = v121 + v263[28];
            v130 = *(_QWORD *)v129;
            v131 = *(_QWORD *)(v129 + 8);
            LOBYTE(v125) = *(_BYTE *)(v129 + 16);
            sub_1000A410C(*(_QWORD *)v129, v131, v125);
            sub_100824224(v130, v131, v125);
            v133 = v132;
            sub_1000A4230(v130, v131, v125);
            sub_10066D160(v127);
            v251 = v134;
            v136 = v135;
            swift_release();
            swift_bridgeObjectRelease(v133);
            v137 = v121 + v128[29];
            v138 = *(_QWORD *)v137;
            v139 = *(_QWORD *)(v137 + 8);
            LOBYTE(v133) = *(_BYTE *)(v137 + 16);
            sub_1000A411C(*(_QWORD *)v137, v139, v133);
            sub_100824400(v138, v139, v133, &v283);
            v140 = sub_1000A4240(v138, v139, v133);
            v142 = v283;
            v141 = v284;
            v143 = v246;
            v144 = v253;
            (*(void (**)(uint64_t, uint64_t, int *, double))(v246 + 16))(v253, v121, v128, v140);
            v146 = v128;
            if (v141 >> 60 != 15)
            {
              v148 = v254;
              goto LABEL_12;
            }
            v147 = (_QWORD *)(v144 + v128[26]);
            v148 = v254;
            if (*v147)
            {
              swift_retain();
              v142 = sub_10066D7A8();
              v141 = v149;
              v145 = swift_release();
LABEL_12:
              (*(void (**)(uint64_t, int *, __n128))(v143 + 8))(v144, v146, v145);
              v150 = v136;
              v210 = v136;
              v152 = v213;
              v151 = v214;
              v153 = (uint64_t)v217;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v214, v213, (uint64_t)v252, v148, (uint64_t)v270, (unint64_t)v269, (unint64_t)&v293, (unint64_t)v268, &v283, (uint64_t)v267, (unint64_t)v265, v251, v210, v142, v141);
              v83 = v283;
              v247 = v284;
              v248 = v285;
              v249 = v286;
              v250 = v287;
              v251 = v288;
              v252 = v289;
              v154 = v292;
              v253 = v290;
              v254 = v291;
              sub_1000822B4(v142, v141);

              swift_bridgeObjectRelease(v150);
              sub_10004FF60((uint64_t)v265, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v293, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v148, (uint64_t *)&unk_1011A20C0);
              sub_10004FF60((uint64_t)v267, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v268);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v269);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v270);
              v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v215 + 8))(v153, v216);
              v92 = v154;
              v90 = v253;
              v91 = v254;
              v88 = v251;
              v89 = v252;
              v86 = v249;
              v87 = v250;
              v84 = v247;
              v85 = v248;
              goto LABEL_13;
            }
          }
          else
          {
            v203 = v122[1];
            v204 = type metadata accessor for TabSelectionManager(0);
            v205 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v203, v204, v205);
            __break(1u);
          }
          v192 = v147[1];
          goto LABEL_20;
        }
LABEL_17:
        v192 = v120[1];
        swift_retain();
LABEL_20:
        v193 = (uint64_t *)&unk_10119CBE0;
        v194 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v195 = &qword_1011C5B90;
        v196 = &unk_100EC0A50;
        goto LABEL_21;
      }
    }
    else
    {
      v197 = v105[1];
      v198 = type metadata accessor for NoticePresenter(0);
      v199 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v197, v198, v199);
      __break(1u);
    }
    v200 = v117[1];
    v201 = type metadata accessor for NavigationPusher();
    v202 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v200, v201, v202);
    __break(1u);
    goto LABEL_17;
  }
  v192 = v101[1];
  v193 = (uint64_t *)&unk_1011B4E40;
  v194 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v195 = (unint64_t *)&unk_10119CC10;
  v196 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_21:
  v206 = sub_100049F28(v195, v193, (uint64_t)v196);
  result = EnvironmentObject.error()(0, v192, v194, v206);
  __break(1u);
  return result;
}

uint64_t sub_1003A4964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t TupleTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v44;
  uint64_t OpaqueTypeConformance2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  char v96;
  void (*v97)(char *, uint64_t);
  unint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t KeyPath;
  int v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _OWORD *v116;
  __int128 v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  double v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  double v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  double v148;
  char v149;
  uint64_t v150;
  double v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  __n128 v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  __n128 v192;
  __n128 v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  __n128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t, uint64_t);
  uint64_t v212;
  uint64_t v213;
  void (*v214)(char *, uint64_t, uint64_t);
  uint64_t v215;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  int *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  char *v297;
  char *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD v304[2];
  uint64_t v305[8];
  __int128 v306;
  __int128 v307;
  __int128 v308;
  uint64_t v309;

  v291 = a2;
  v294 = a1;
  v286 = a9;
  *(_QWORD *)&v306 = a3;
  *((_QWORD *)&v306 + 1) = a4;
  *(_QWORD *)&v307 = a5;
  *((_QWORD *)&v307 + 1) = a6;
  *(_QWORD *)&v308 = a7;
  *((_QWORD *)&v308 + 1) = a8;
  v309 = a10;
  v292 = type metadata accessor for ContainerTrackRow(0, (uint64_t)&v306);
  v282 = *(_QWORD *)(v292 - 8);
  v280 = *(_QWORD *)(v282 + 64);
  __chkstk_darwin(v292);
  v281 = (char *)&v224 - v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011C72B0);
  v284 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v283 = (char *)&v224 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = sub_100007E8C(&qword_1011AFA38);
  v271 = *(_QWORD *)(v272 - 8);
  __chkstk_darwin(v272);
  v270 = (char *)&v224 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = sub_100007E8C(&qword_1011AFA40);
  __chkstk_darwin(v273);
  v274 = (char *)&v224 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = sub_100007E8C(&qword_1011AFA48);
  v276 = *(_QWORD *)(v278 - 8);
  __chkstk_darwin(v278);
  v275 = (char *)&v224 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = sub_100007E8C(&qword_1011AFA50);
  __chkstk_darwin(v279);
  v277 = (char *)&v224 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = type metadata accessor for AccessibilityChildBehavior(0);
  v246 = *(_QWORD *)(v247 - 8);
  __chkstk_darwin(v247);
  v244 = (char *)&v224 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100044B54(&qword_1011AFA18);
  v295 = a3;
  *(_QWORD *)&v306 = a3;
  *((_QWORD *)&v306 + 1) = a4;
  v297 = a4;
  v298 = a5;
  *(_QWORD *)&v307 = a5;
  *((_QWORD *)&v307 + 1) = a6;
  v299 = a6;
  v300 = a7;
  *(_QWORD *)&v308 = a7;
  *((_QWORD *)&v308 + 1) = a8;
  v301 = a8;
  v296 = a10;
  v309 = a10;
  v25 = type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)&v306);
  v293 = (int *)v25;
  WitnessTable = swift_getWitnessTable(&unk_100EB7748, v25);
  v28 = type metadata accessor for PlaybackRowModifier(255, v25, WitnessTable, v27);
  v29 = type metadata accessor for ModifiedContent(255, v24, v28);
  v30 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v31 = type metadata accessor for ModifiedContent(255, v29, v30);
  v32 = sub_100044B54(&qword_1011A05B8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v31, v32, 0, 0);
  v34 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v34);
  v228 = v34;
  v227 = v35;
  v36 = type metadata accessor for HStack(0, v34, v35);
  v231 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v230 = (char *)&v224 - v37;
  v38 = type metadata accessor for ModifiedContent(0, v36, &type metadata for _PaddingLayout);
  v236 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v234 = (char **)((char *)&v224 - v39);
  v40 = type metadata accessor for ModifiedContent(0, v38, &type metadata for _FlexFrameLayout);
  v238 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v235 = (char *)&v224 - v41;
  v233 = v36;
  v225 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v36);
  v305[6] = v225;
  v305[7] = (uint64_t)&protocol witness table for _PaddingLayout;
  v237 = v38;
  v226 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
  v305[4] = v226;
  v305[5] = (uint64_t)&protocol witness table for _FlexFrameLayout;
  v42 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v40);
  *(_QWORD *)&v306 = v40;
  *((_QWORD *)&v306 + 1) = v42;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v306, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v241 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v240 = (char *)&v224 - v44;
  v239 = v40;
  *(_QWORD *)&v306 = v40;
  *((_QWORD *)&v306 + 1) = v42;
  v229 = v42;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v306, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  *(_QWORD *)&v306 = OpaqueTypeMetadata2;
  *((_QWORD *)&v306 + 1) = OpaqueTypeConformance2;
  v46 = swift_getOpaqueTypeMetadata2(0, &v306, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 0);
  v252 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v288 = (char *)&v224 - v47;
  v48 = sub_100044B54(&qword_1011AFA20);
  v254 = v46;
  v49 = type metadata accessor for ModifiedContent(0, v46, v48);
  v263 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v260 = (char **)((char *)&v224 - v50);
  v51 = type metadata accessor for ContextualPreview(255);
  v242 = OpaqueTypeMetadata2;
  *(_QWORD *)&v306 = OpaqueTypeMetadata2;
  *((_QWORD *)&v306 + 1) = OpaqueTypeConformance2;
  v232 = OpaqueTypeConformance2;
  v52 = swift_getOpaqueTypeConformance2(&v306, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v53 = sub_100049F28(&qword_1011AFA28, &qword_1011AFA20, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v243 = v52;
  v305[2] = v52;
  v305[3] = v53;
  v54 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v55 = sub_1000E3EE4();
  v56 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
  *(_QWORD *)&v306 = v49;
  *((_QWORD *)&v306 + 1) = &type metadata for ActionType;
  *(_QWORD *)&v307 = v51;
  *((_QWORD *)&v307 + 1) = v54;
  *(_QWORD *)&v308 = v55;
  *((_QWORD *)&v308 + 1) = v56;
  v57 = swift_getOpaqueTypeMetadata2(0, &v306, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 0);
  v256 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v255 = (uint64_t)&v224 - v58;
  v264 = v49;
  *(_QWORD *)&v306 = v49;
  *((_QWORD *)&v306 + 1) = &type metadata for ActionType;
  v251 = v51;
  *(_QWORD *)&v307 = v51;
  *((_QWORD *)&v307 + 1) = v54;
  v249 = v54;
  v248 = v55;
  *(_QWORD *)&v308 = v55;
  *((_QWORD *)&v308 + 1) = v56;
  v245 = v56;
  v59 = swift_getOpaqueTypeConformance2(&v306, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  *(_QWORD *)&v306 = v57;
  *((_QWORD *)&v306 + 1) = v59;
  v60 = swift_getOpaqueTypeMetadata2(0, &v306, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 0);
  v265 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v262 = (char *)&v224 - v61;
  v62 = sub_100049F28(&qword_1011AFA30, (uint64_t *)&unk_1011C72B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v259 = v57;
  *(_QWORD *)&v306 = v57;
  *((_QWORD *)&v306 + 1) = v59;
  v250 = v59;
  v63 = swift_getOpaqueTypeConformance2(&v306, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
  v285 = v17;
  *(_QWORD *)&v306 = v17;
  *((_QWORD *)&v306 + 1) = v60;
  v266 = v60;
  v258 = v62;
  *(_QWORD *)&v307 = v62;
  *((_QWORD *)&v307 + 1) = v63;
  v253 = v63;
  v269 = type metadata accessor for SubscriptionView(0, &v306);
  v261 = *(_QWORD *)(v269 - 8);
  __chkstk_darwin(v269);
  v268 = (char *)&v224 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v65);
  v257 = (char *)&v224 - v66;
  __chkstk_darwin(v67);
  v267 = (uint64_t)&v224 - v68;
  v69 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v69);
  v71 = (char *)&v224 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011AFA58);
  __chkstk_darwin(v72);
  v224 = (char *)&v224 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v287 = sub_100007E8C(&qword_1011AFA10);
  __chkstk_darwin(v287);
  v290 = (uint64_t)&v224 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v75);
  v289 = (uint64_t)&v224 - v76;
  v77 = type metadata accessor for MusicFavoriteStatus(0);
  v78 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v80 = (char *)&v224 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100007E8C(&qword_1011AFA60);
  __chkstk_darwin(v81);
  v83 = (char *)&v224 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100007E8C(&qword_1011A19A0);
  __chkstk_darwin(v84);
  v86 = (char *)&v224 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v87);
  v89 = (char *)&v224 - v88;
  __chkstk_darwin(v90);
  v92 = (char *)&v224 - v91;
  sub_10004A160(v294 + v293[31], (uint64_t)&v224 - v91, &qword_1011A19A0);
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v89, enum case for MusicFavoriteStatus.favorited(_:), v77);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v89, 0, 1, v77);
  v93 = (uint64_t)&v83[*(int *)(v81 + 48)];
  sub_10004A160((uint64_t)v92, (uint64_t)v83, &qword_1011A19A0);
  sub_10004A160((uint64_t)v89, v93, &qword_1011A19A0);
  v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  if (v94((uint64_t)v83, 1, v77) == 1)
  {
    sub_10004FF60((uint64_t)v89, &qword_1011A19A0);
    sub_10004FF60((uint64_t)v92, &qword_1011A19A0);
    if (v94(v93, 1, v77) == 1)
    {
      sub_10004FF60((uint64_t)v83, &qword_1011A19A0);
LABEL_8:
      v98 = 0xE90000000000006CLL;
      v99 = 0x6C69662E72617473;
      v100 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
LABEL_11:
      v101 = *v100;
      v102 = v100[1];
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    goto LABEL_6;
  }
  sub_10004A160((uint64_t)v83, (uint64_t)v86, &qword_1011A19A0);
  if (v94(v93, 1, v77) == 1)
  {
    sub_10004FF60((uint64_t)v89, &qword_1011A19A0);
    sub_10004FF60((uint64_t)v92, &qword_1011A19A0);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v86, v77);
LABEL_6:
    sub_10004FF60((uint64_t)v83, &qword_1011AFA60);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v80, v93, v77);
  v95 = sub_100048748(&qword_1011A4008, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
  v96 = dispatch thunk of static Equatable.== infix(_:_:)(v86, v80, v77, v95);
  v97 = *(void (**)(char *, uint64_t))(v78 + 8);
  v97(v80, v77);
  sub_10004FF60((uint64_t)v89, &qword_1011A19A0);
  sub_10004FF60((uint64_t)v92, &qword_1011A19A0);
  v97(v86, v77);
  sub_10004FF60((uint64_t)v83, &qword_1011A19A0);
  if ((v96 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  if (*(_BYTE *)(v294 + v293[40]) == 1)
  {
    v98 = 0xEB000000006C6C69;
    v99 = 0x662E656C63726963;
    v100 = AccessibilityString.popularBadgeLabel.unsafeMutableAddressor();
    goto LABEL_11;
  }
  v101 = 0;
  v102 = 0;
  v99 = 0;
  v98 = 0xE000000000000000;
LABEL_13:
  swift_bridgeObjectRetain();
  v103 = Image.init(systemName:)(v99, v98);
  v104 = static Font.Weight.semibold.getter(v103);
  v105 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v71, 1, 1, v105);
  v106 = static Font.system(size:weight:design:)(*(_QWORD *)&v104, 0, v71, 8.0);
  sub_10004FF60((uint64_t)v71, &qword_1011C4F30);
  KeyPath = swift_getKeyPath(&unk_100EB78E8);
  v108 = static HierarchicalShapeStyle.secondary.getter(KeyPath);
  *(_QWORD *)&v306 = v103;
  *((_QWORD *)&v306 + 1) = KeyPath;
  *(_QWORD *)&v307 = v106;
  DWORD2(v307) = v108;
  v109 = sub_100007E8C(&qword_1011AFA68);
  v110 = sub_1003AB478();
  v111 = (uint64_t)v224;
  View.accessibilityLabel(_:)(v101, v102, v109, v110);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v98);
  swift_bridgeObjectRelease(v102);
  v112 = *(double *)&qword_1011CCD38 + -6.0;
  v113 = static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)(&v306, *(_QWORD *)&v112, 0, 0, 1, v113, v114);
  v115 = v290;
  sub_10004A160(v111, v290, &qword_1011AFA58);
  v116 = (_OWORD *)(v115 + *(int *)(v287 + 36));
  v117 = v307;
  *v116 = v306;
  v116[1] = v117;
  v116[2] = v308;
  sub_10004FF60(v111, &qword_1011AFA58);
  v118 = sub_100065228(v115, v289, &qword_1011AFA10);
  __chkstk_darwin(v118);
  v119 = v297;
  *(&v224 - 10) = v295;
  *(&v224 - 9) = v119;
  v217 = v298;
  v218 = v299;
  v219 = v300;
  v220 = v301;
  v120 = v294;
  v221 = v296;
  v222 = v294;
  v223 = v291;
  v122 = static VerticalAlignment.center.getter(v121);
  v123 = v230;
  HStack.init(alignment:spacing:content:)(v122, 0, 1, sub_1003AB4FC, &v224 - 12, v228, v227);
  v125 = static Edge.Set.trailing.getter(v124);
  if (qword_10119C8D8 != -1)
    swift_once(&qword_10119C8D8, sub_10085FA00);
  v126 = v234;
  v127 = v125;
  v128 = v233;
  View.padding(_:_:)(v234, v127, qword_10124DA50, 0, v233, v225);
  v129 = (*(uint64_t (**)(char *, uint64_t))(v231 + 8))(v123, v128);
  v130 = static Alignment.center.getter(v129);
  v131 = v237;
  LOBYTE(v220) = 0;
  LOBYTE(v218) = 1;
  v132 = v235;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, 0, (_DWORD)v218, 0x7FF0000000000000, v220, v130, v133, v237, v226);
  v134 = (*(uint64_t (**)(_QWORD *, uint64_t))(v236 + 8))(v126, v131);
  v135 = v244;
  static AccessibilityChildBehavior.combine.getter(v134);
  v136 = v240;
  v137 = v239;
  View.accessibilityElement(children:)(v135, v239, v229);
  (*(void (**)(char *, uint64_t))(v246 + 8))(v135, v247);
  (*(void (**)(char *, uint64_t))(v238 + 8))(v132, v137);
  v138 = (uint64_t)v274;
  v139 = v273;
  if (qword_10119BF70 != -1)
    swift_once(&qword_10119BF70, sub_1003A344C);
  v140 = 0.0;
  v141 = v242;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(qword_1011AF708, -1, 0, 0, 0, 1, 1, v242, 0.0, v232);
  (*(void (**)(char *, uint64_t))(v241 + 8))(v136, v141);
  v305[0] = *Color.MusicTint.normal.unsafeMutableAddressor();
  v142 = v270;
  View.corner(_:)(qword_1011AF708, -1, 0, (uint64_t)&type metadata for Color, (uint64_t)&protocol witness table for Color);
  if ((sub_1003A348C() & 1) != 0)
    v140 = 0.5;
  v143 = v271;
  v144 = v272;
  (*(void (**)(uint64_t, char *, uint64_t))(v271 + 16))(v138, v142, v272);
  *(double *)(v138 + *(int *)(v139 + 36)) = v140;
  (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
  v145 = sub_1003A348C();
  if ((v145 & 1) != 0)
  {
    v146 = Border.artwork.unsafeMutableAddressor();
    v147 = *v146;
    v148 = *((double *)v146 + 1);
    v149 = *((_BYTE *)v146 + 16);
    swift_retain();
  }
  else
  {
    v150 = static Color.clear.getter(v145);
    v151 = UIScreen.Dimensions.size.getter(v150);
    v147 = v152;
    v148 = v151;
    v149 = v153;
  }
  v154 = qword_1011AF708;
  v155 = sub_1003AB540();
  v156 = v275;
  View.border(_:corner:)(v147, v149, v154, -1, 0, v139, v155, v148);
  swift_release();
  v157 = sub_10004FF60(v138, &qword_1011AFA40);
  v158 = static Animation.easeOut.getter(v157);
  v159 = v292;
  v160 = sub_1003A348C();
  v161 = v276;
  v162 = (uint64_t)v277;
  v163 = v278;
  (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v277, v156, v278);
  v164 = v279;
  v165 = v162 + *(int *)(v279 + 36);
  *(_QWORD *)v165 = v158;
  *(_BYTE *)(v165 + 8) = v160 & 1;
  v166 = (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v156, v163);
  v167 = static Alignment.center.getter(v166);
  v169 = v168;
  v170 = sub_1003AB5D0();
  v171 = v260;
  v172 = v167;
  v173 = v169;
  v174 = v254;
  v175 = v288;
  View.background<A>(_:alignment:)(v260, v162, v172, v173, v254, v164, v243, v170);
  sub_10004FF60(v162, &qword_1011AFA50);
  v176 = (*(uint64_t (**)(char *, uint64_t))(v252 + 8))(v175, v174);
  if (*(_BYTE *)(v120 + v293[41]))
    v177 = &off_1010ABD28;
  else
    v177 = _swiftEmptyArrayStorage;
  __chkstk_darwin(v176);
  v217 = v295;
  v218 = v297;
  v178 = (_QWORD *)swift_checkMetadataState(0, v251);
  v179 = v264;
  v180 = v255;
  View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, v291, (uint64_t)v177, (uint64_t)sub_1003AB67C, (uint64_t)(&v224 - 10), (uint64_t)UIScreen.Dimensions.size.getter, 0, v255, v264, (uint64_t)&type metadata for ActionType, v178, v249, v248, v245);
  v181 = swift_bridgeObjectRelease(v177);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v263 + 8))(v171, v179, v181);
  v182 = (uint64_t *)(v120 + *(int *)(v159 + 96));
  v183 = *v182;
  v184 = v182[1];
  v185 = *((unsigned __int8 *)v182 + 16);
  v186 = v120;
  v187 = sub_100007E8C(&qword_1011A03A8);
  v188 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v189 = StateObject.wrappedValue.getter(v183, v184, v185, v187, v188);
  v190 = v262;
  v191 = v259;
  View.shareSheetPresenting(_:)(v189, v259, v250);
  v192 = swift_release();
  v193.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, __n128))(v256 + 8))(v180, v191, v192);
  v194 = v283;
  dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v193);
  v195 = v282;
  v196 = v281;
  (*(void (**)(char *, uint64_t, uint64_t))(v282 + 16))(v281, v186, v159);
  v197 = *(unsigned __int8 *)(v195 + 80);
  v198 = (v197 + 72) & ~v197;
  v199 = (char *)swift_allocObject(&unk_1010C25C8, v198 + v280, v197 | 7);
  v200 = v297;
  *((_QWORD *)v199 + 2) = v295;
  *((_QWORD *)v199 + 3) = v200;
  v201 = v299;
  *((_QWORD *)v199 + 4) = v298;
  *((_QWORD *)v199 + 5) = v201;
  v202 = v301;
  *((_QWORD *)v199 + 6) = v300;
  *((_QWORD *)v199 + 7) = v202;
  *((_QWORD *)v199 + 8) = v296;
  (*(void (**)(char *, char *, uint64_t))(v195 + 32))(&v199[v198], v196, v159);
  v203 = (uint64_t)v257;
  v204 = v266;
  v205 = v285;
  View.onReceive<A>(_:perform:)(v194, sub_1003ABF84, v199, v266, v285, v253, v258);
  v206 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v284 + 8))(v194, v205, v206);
  (*(void (**)(char *, uint64_t))(v265 + 8))(v190, v204);
  v207 = v269;
  v208 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v269);
  v209 = v267;
  sub_10081EB14(v203, v207, v267);
  v210 = v261;
  v211 = *(void (**)(uint64_t, uint64_t))(v261 + 8);
  v211(v203, v207);
  v212 = v289;
  v213 = v290;
  sub_10004A160(v289, v290, &qword_1011AFA10);
  v305[0] = v213;
  v214 = *(void (**)(char *, uint64_t, uint64_t))(v210 + 16);
  v215 = (uint64_t)v268;
  v214(v268, v209, v207);
  v305[1] = v215;
  v304[0] = v287;
  v304[1] = v207;
  v302 = sub_10005610C(&qword_1011AFA98, &qword_1011AFA10, (void (*)(void))sub_1003AC02C);
  v303 = v208;
  sub_1004D49B8(v305, 2uLL, (uint64_t)v304);
  v211(v209, v207);
  sub_10004FF60(v212, &qword_1011AFA10);
  v211(v215, v207);
  return sub_10004FF60(v213, &qword_1011AFA10);
}

uint64_t sub_1003A6178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t OpaqueTypeConformance2;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  ValueMetadata *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t KeyPath;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  ValueMetadata *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t WitnessTable;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  ValueMetadata *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(char *, uint64_t);
  ValueMetadata *v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  _QWORD v198[6];
  _OWORD v199[5];
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;

  v190 = a1;
  v191 = (void (*)(char *, uint64_t))a8;
  v186 = a7;
  v154 = a6;
  v173 = a2;
  v179 = a9;
  v165 = a10;
  v15 = type metadata accessor for ControlSize(0);
  v151 = *(_QWORD *)(v15 - 8);
  v152 = v15;
  __chkstk_darwin(v15);
  v150 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ButtonBorderShape(0);
  v145 = *(_QWORD *)(v17 - 8);
  v146 = v17;
  __chkstk_darwin(v17);
  v144 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011A0598);
  v142 = *(_QWORD *)(v19 - 8);
  v143 = v19;
  __chkstk_darwin(v19);
  v141 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100007E8C(&qword_1011A05A0);
  __chkstk_darwin(v139);
  v149 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for BorderlessButtonStyle(0);
  v148 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v147 = (char *)&v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ButtonMenuStyle(0);
  v137 = *(_QWORD *)(v23 - 8);
  v138 = v23;
  __chkstk_darwin(v23);
  v135 = (char *)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C(&qword_1011A05A8);
  v134 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v133 = (char *)&v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100007E8C(&qword_1011A05B0);
  v140 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v180 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_100007E8C(&qword_1011A05B8);
  __chkstk_darwin(v177);
  v178 = (uint64_t)&v132 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v175 = (char *)&v132 - v29;
  __chkstk_darwin(v30);
  v176 = (uint64_t)&v132 - v31;
  v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v171 = *(_QWORD *)(v32 - 8);
  v172 = v32;
  __chkstk_darwin(v32);
  v170 = (uint64_t)&v132 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for AccessibilityChildBehavior(0);
  v166 = *(_QWORD *)(v34 - 8);
  v167 = v34;
  __chkstk_darwin(v34);
  v162 = (char *)&v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011A2C50);
  __chkstk_darwin(v36);
  v38 = (char *)&v132 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100007E8C(&qword_1011A2C58);
  __chkstk_darwin(v159);
  v155 = (uint64_t)&v132 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C(&qword_1011AFA18);
  v169 = *(_QWORD *)(v40 - 8);
  v157 = v40;
  __chkstk_darwin(v40);
  v153 = (char *)&v132 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v200 = a3;
  *((_QWORD *)&v200 + 1) = a4;
  v185 = a3;
  *(_QWORD *)&v201 = a5;
  *((_QWORD *)&v201 + 1) = a6;
  v42 = a5;
  v43 = v186;
  *(_QWORD *)&v202 = v186;
  *((_QWORD *)&v202 + 1) = a8;
  v44 = v165;
  *(_QWORD *)&v203 = v165;
  v45 = type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)&v200);
  v183 = v45;
  WitnessTable = swift_getWitnessTable(&unk_100EB7748, v45);
  v164 = type metadata accessor for PlaybackRowModifier(255, v45, WitnessTable, v46);
  v47 = type metadata accessor for ModifiedContent(0, v40, v164);
  v48 = *(_QWORD *)(v47 - 8);
  v163 = v47;
  v168 = v48;
  __chkstk_darwin(v47);
  v156 = (uint64_t)&v132 - v49;
  v50 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v189 = type metadata accessor for ModifiedContent(0, v47, v50);
  v187 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v174 = (ValueMetadata *)((char *)&v132 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v52);
  v158 = (char *)&v132 - v53;
  __chkstk_darwin(v54);
  v161 = (char *)&v132 - v55;
  __chkstk_darwin(v56);
  v188 = (uint64_t)&v132 - v57;
  *(_QWORD *)v38 = static VerticalAlignment.center.getter(v58);
  *((_QWORD *)v38 + 1) = 0;
  v38[16] = 0;
  v59 = (uint64_t)&v38[*(int *)(sub_100007E8C(&qword_1011AFAA8) + 44)];
  v184 = a4;
  v60 = (void *)a4;
  v61 = v154;
  v62 = sub_1003A6E04(v190, a3, v60, v42, v154, v43, (uint64_t)v191, v44, v59);
  v63 = static Alignment.center.getter(v62);
  v64 = v155;
  sub_10014A56C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v155, 0.0, 1, INFINITY, 0, v63, v65);
  v66 = sub_10004FF60((uint64_t)v38, &qword_1011A2C50);
  v67 = v162;
  static AccessibilityChildBehavior.combine.getter(v66);
  v68 = sub_1003AC0B0();
  v69 = v159;
  View.accessibilityElement(children:)(v67, v159, v68);
  (*(void (**)(char *, uint64_t))(v166 + 8))(v67, v167);
  v70 = v190;
  sub_10004FF60(v64, &qword_1011A2C58);
  *(_QWORD *)&v200 = v185;
  *((_QWORD *)&v200 + 1) = v184;
  *(_QWORD *)&v201 = v42;
  *((_QWORD *)&v201 + 1) = v61;
  *(_QWORD *)&v202 = v43;
  *((_QWORD *)&v202 + 1) = v191;
  *(_QWORD *)&v203 = v44;
  type metadata accessor for ContainerTrackRow(0, (uint64_t)&v200);
  v71 = v170;
  sub_100824838(v170);
  *(_QWORD *)&v200 = v69;
  *((_QWORD *)&v200 + 1) = v68;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v200, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v74 = v156;
  v73 = v157;
  v75 = v153;
  sub_1003A97E4(v70, v71, v157, v183, OpaqueTypeConformance2, WitnessTable, v156);
  (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v71, v172);
  (*(void (**)(char *, uint64_t))(v169 + 8))(v75, v73);
  v76 = sub_1003AC1D0(v70, v185, v184, v42, v61, v186, (uint64_t)v191, v44);
  v77 = swift_getWitnessTable(&unk_100EB7A44, v164);
  v198[4] = OpaqueTypeConformance2;
  v198[5] = v77;
  v78 = v163;
  v79 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v163);
  v80 = v158;
  View.accessibilityInputLabels(_:)(v76, v78, v79);
  v81 = swift_bridgeObjectRelease(v76);
  (*(void (**)(uint64_t, uint64_t, __n128))(v168 + 8))(v74, v78, v81);
  v82 = (uint64_t)v161;
  v83 = v189;
  ModifiedContent<>.accessibilitySortPriority(_:)(v189, 0.0);
  v84 = *(void (**)(char *, uint64_t))(v187 + 8);
  v84(v80, v83);
  v85 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v198[2] = v79;
  v198[3] = v85;
  v86 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v83);
  sub_10081EB14(v82, v83, v188);
  v84((char *)v82, v83);
  sub_100065228(v173, (uint64_t)v199, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v199[0] + 1))
  {
    v202 = v199[2];
    v203 = v199[3];
    v204 = v199[4];
    v200 = v199[0];
    v201 = v199[1];
    if (*(_BYTE *)(v190 + *(int *)(v183 + 164)))
      v87 = &off_1010ABD50;
    else
      v87 = _swiftEmptyArrayStorage;
    v88 = sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v89 = sub_100007E8C(&qword_1011A05F8);
    v90 = sub_1000E41D0();
    v190 = v86;
    v91 = v133;
    ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(0, 0, (uint64_t)v87, (uint64_t)sub_100558D1C, 0, (uint64_t)UIScreen.Dimensions.size.getter, 0, v88, v133, v89, v90);
    swift_bridgeObjectRelease(v87);
    v191 = v84;
    v92 = v135;
    ButtonMenuStyle.init()(v93);
    v94 = sub_1000E3EE4();
    v192 = &type metadata for ActionType;
    v193 = v89;
    v194 = v94;
    v195 = v90;
    v95 = swift_getOpaqueTypeConformance2(&v192, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v96 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v97 = (ValueMetadata *)v136;
    v98 = v138;
    View.menuStyle<A>(_:)(v92, v136, v138, v95, v96);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v92, v98);
    v99 = (*(uint64_t (**)(char *, ValueMetadata *))(v134 + 8))(v91, v97);
    v100 = v147;
    BorderlessButtonStyle.init()(v99);
    v192 = v97;
    v193 = v98;
    v194 = v95;
    v195 = v96;
    v101 = swift_getOpaqueTypeConformance2(&v192, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v102 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v103 = v141;
    v104 = View.buttonStyle<A>(_:)(v100, v181, v182, v101, v102);
    v105 = v144;
    static ButtonBorderShape.circle.getter(v104);
    KeyPath = swift_getKeyPath(&unk_100EB7918);
    v107 = (uint64_t)v149;
    v108 = (uint64_t *)&v149[*(int *)(v139 + 36)];
    v109 = sub_100007E8C(&qword_1011A0610);
    v111 = v145;
    v110 = v146;
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))((char *)v108 + *(int *)(v109 + 28), v105, v146);
    *v108 = KeyPath;
    v113 = v142;
    v112 = v143;
    (*(void (**)(uint64_t, char *, uint64_t))(v142 + 16))(v107, v103, v143);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v105, v110);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v103, v112);
    v115 = v150;
    v114 = v151;
    v116 = v152;
    (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v150, enum case for ControlSize.regular(_:), v152);
    v117 = swift_getKeyPath(&unk_100EB7948);
    v118 = sub_100007E8C(&qword_1011A05E8);
    v119 = (uint64_t)v175;
    v120 = (uint64_t *)&v175[*(int *)(v118 + 36)];
    v121 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))((char *)v120 + *(int *)(v121 + 28), v115, v116);
    *v120 = v117;
    sub_10004A160(v107, v119, &qword_1011A05A0);
    v122 = v115;
    v86 = v190;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v122, v116);
    sub_10004FF60(v107, &qword_1011A05A0);
    v123 = v100;
    v84 = v191;
    (*(void (**)(char *, uint64_t))(v148 + 8))(v123, v182);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v180, v181);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v119, 0, 1, v118);
  }
  else
  {
    v124 = sub_100007E8C(&qword_1011A05E8);
    v119 = (uint64_t)v175;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v175, 1, 1, v124);
  }
  v125 = v119;
  v126 = v176;
  sub_100065228(v125, v176, &qword_1011A05B8);
  v127 = v188;
  v128 = v174;
  v129 = v189;
  (*(void (**)(ValueMetadata *, uint64_t, uint64_t))(v187 + 16))(v174, v188, v189);
  v192 = v128;
  v130 = v178;
  sub_10004A160(v126, v178, &qword_1011A05B8);
  v193 = v130;
  v198[0] = v129;
  v198[1] = v177;
  v196 = v86;
  v197 = sub_1003AC520();
  sub_1004D49B8((uint64_t *)&v192, 2uLL, (uint64_t)v198);
  sub_10004FF60(v126, &qword_1011A05B8);
  v84((char *)v127, v129);
  sub_10004FF60(v130, &qword_1011A05B8);
  return ((uint64_t (*)(ValueMetadata *, uint64_t))v84)(v128, v129);
}

uint64_t sub_1003A6E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char v124;
  void (*v125)(char *, uint64_t);
  char *v126;
  __n128 v127;
  uint64_t v128;
  uint64_t KeyPath;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  double v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _OWORD *v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  double v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t OpaqueTypeConformance2;
  uint64_t v176;
  char *v177;
  uint64_t *v178;
  uint64_t v179;
  double v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char v186;
  uint64_t v187;
  __n128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _OWORD *v204;
  __int128 v205;
  uint64_t v206;
  char v207;
  double v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  double v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  double v228;
  char v229;
  double v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  int *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _OWORD *v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  double v262;
  double v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  double v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  void (*v290)(char *, uint64_t);
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char v303;
  uint64_t v304;
  uint64_t v305;
  __n128 v306;
  uint64_t v307;
  char v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  double v320;
  char v321;
  double v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  char *v344;
  uint64_t v345;
  char *v346;
  char *v347;
  __n128 v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char v357;
  uint64_t v358;
  uint64_t v359;
  unint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  int *v372;
  uint64_t v373;
  int v375;
  int v376;
  int v377;
  int v378;
  char *v379;
  uint64_t v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  char *v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  uint64_t v415;
  char *v416;
  uint64_t v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  char *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  char *v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  int *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  _QWORD *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  unint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  _QWORD *v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  _OWORD v487[2];
  char v488;
  char v489;
  char v490;
  char v491;
  char v492;
  char v493;
  char v494;
  char v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  _OWORD v506[4];
  _OWORD v507[7];
  _OWORD v508[7];
  _BYTE v509[48];
  _OWORD v510[3];
  _OWORD v511[7];
  uint64_t v512;
  char v513;
  uint64_t v514;
  char v515;
  uint64_t v516;
  char v517;
  uint64_t v518;
  char v519;
  uint64_t v520;
  char v521;
  uint64_t v522;
  char v523;
  uint64_t v524;
  uint64_t v525;

  v475 = a1;
  v457 = a9;
  v16 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0);
  v424 = *(_QWORD *)(v16 - 8);
  v425 = v16;
  __chkstk_darwin(v16);
  v423 = (char *)&v379 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v422 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0);
  v420 = *(_QWORD *)(v422 - 8);
  __chkstk_darwin(v422);
  v418 = (char *)&v379 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v417 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0);
  v415 = *(_QWORD *)(v417 - 8);
  __chkstk_darwin(v417);
  v414 = (char *)&v379 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v421 = type metadata accessor for Duration.UnitsFormatStyle(0);
  v419 = *(_QWORD *)(v421 - 8);
  __chkstk_darwin(v421);
  v416 = (char *)&v379 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v452 = sub_100007E8C(&qword_1011AFAD8);
  v451 = *(_QWORD *)(v452 - 8);
  __chkstk_darwin(v452);
  v427 = (char *)&v379 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v426 = (uint64_t)&v379 - v23;
  v24 = sub_100007E8C(&qword_1011AFAE0);
  __chkstk_darwin(v24);
  v456 = (uint64_t)&v379 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v455 = (uint64_t)&v379 - v27;
  v444 = _s27DownloadStatusIndicatorViewVMa(0);
  __chkstk_darwin(v444);
  v448 = (char **)((char *)&v379 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v445 = sub_100007E8C(&qword_1011AFAE8);
  __chkstk_darwin(v445);
  v449 = (uint64_t)&v379 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v447 = sub_100007E8C(&qword_1011AFAF0);
  __chkstk_darwin(v447);
  v454 = (uint64_t)&v379 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v446 = (uint64_t)&v379 - v32;
  __chkstk_darwin(v33);
  v469 = (uint64_t)&v379 - v34;
  v439 = type metadata accessor for ContainerRowText(0);
  __chkstk_darwin(v439);
  v453 = (uint64_t)&v379 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v472 = (char **)((char *)&v379 - v37);
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v392 = *(_QWORD *)(v38 - 8);
  v393 = v38;
  __chkstk_darwin(v38);
  v391 = (char *)&v379 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v397 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v395 = *(_QWORD *)(v397 - 8);
  __chkstk_darwin(v397);
  v394 = (uint64_t)&v379 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v401 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v399 = *(_QWORD *)(v401 - 8);
  __chkstk_darwin(v401);
  v398 = (char *)&v379 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v404 = *(_QWORD *)(v42 - 8);
  v405 = v42;
  __chkstk_darwin(v42);
  v402 = (char *)&v379 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v396 = sub_100007E8C(&qword_1011AFAF8);
  __chkstk_darwin(v396);
  v403 = (char *)&v379 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v400 = sub_100007E8C(&qword_1011AFB00);
  __chkstk_darwin(v400);
  v407 = (uint64_t)&v379 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v406 = sub_100007E8C(&qword_1011AFB08);
  __chkstk_darwin(v406);
  v410 = (uint64_t)&v379 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v408 = sub_100007E8C(&qword_1011AFB10);
  __chkstk_darwin(v408);
  v411 = (uint64_t)&v379 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v409 = sub_100007E8C(&qword_1011AFB18);
  __chkstk_darwin(v409);
  v413 = (uint64_t)&v379 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v459 = sub_100007E8C(&qword_1011AFB20);
  v438 = *(_QWORD *)(v459 - 8);
  __chkstk_darwin(v459);
  v412 = (uint64_t)&v379 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011AFB28);
  __chkstk_darwin(v50);
  v450 = (uint64_t)&v379 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v474 = (uint64_t)&v379 - v53;
  v54 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v442 = *(_QWORD *)(v54 - 8);
  v443 = v54;
  __chkstk_darwin(v54);
  v441 = (char *)&v379 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v440 = (uint64_t)&v379 - v57;
  v383 = sub_100007E8C(&qword_1011AFB30);
  v380 = *(_QWORD *)(v383 - 8);
  __chkstk_darwin(v383);
  v379 = (char *)&v379 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v382 = sub_100007E8C(&qword_1011AFB38);
  __chkstk_darwin(v382);
  v381 = (char *)&v379 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011AFB40);
  v388 = *(_QWORD *)(v60 - 8);
  v389 = v60;
  __chkstk_darwin(v60);
  v385 = (char *)&v379 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v384 = sub_100007E8C(&qword_1011AFB48);
  __chkstk_darwin(v384);
  v390 = (char *)&v379 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v458 = sub_100007E8C(&qword_1011AFB50);
  v436 = *(_QWORD *)(v458 - 8);
  __chkstk_darwin(v458);
  v387 = (uint64_t)&v379 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  v386 = (uint64_t)&v379 - v65;
  v66 = sub_100007E8C(&qword_1011AFB58);
  __chkstk_darwin(v66);
  v468 = (uint64_t)&v379 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v68);
  v473 = (uint64_t)&v379 - v69;
  *(_QWORD *)&v496 = a2;
  *((_QWORD *)&v496 + 1) = a3;
  v70 = a4;
  *(_QWORD *)&v497 = a4;
  *((_QWORD *)&v497 + 1) = a5;
  *(_QWORD *)&v498 = a6;
  *((_QWORD *)&v498 + 1) = a7;
  v71 = a7;
  *(_QWORD *)&v499 = a8;
  v72 = a8;
  v470 = type metadata accessor for ContainerTrackRow(0, (uint64_t)&v496);
  v431 = *(_QWORD *)(v470 - 8);
  __chkstk_darwin(v470);
  v429 = (char *)&v379 - v73;
  v74 = sub_100007E8C(&qword_1011AFB60);
  __chkstk_darwin(v74);
  v76 = (char *)&v379 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v428 = v76;
  v430 = sub_100007E8C(&qword_1011AFB68);
  __chkstk_darwin(v430);
  v78 = (char *)&v379 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v432 = sub_100007E8C(&qword_1011AFB70);
  __chkstk_darwin(v432);
  v435 = (uint64_t)&v379 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v434 = sub_100007E8C(&qword_1011AFB78);
  __chkstk_darwin(v434);
  v467 = (uint64_t)&v379 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v81);
  v433 = (uint64_t)&v379 - v82;
  __chkstk_darwin(v83);
  v471 = (uint64_t)&v379 - v84;
  v85 = (uint64_t)v76;
  v86 = v475;
  sub_1003A8C80(v475, a2, a3, v70, a5, a6, v71, v72, v85);
  v87 = a2;
  v88 = (uint64_t)v78;
  v460 = v87;
  *(_QWORD *)&v496 = v87;
  v461 = (uint64_t)a3;
  *((_QWORD *)&v496 + 1) = a3;
  v462 = v70;
  *(_QWORD *)&v497 = v70;
  v463 = a5;
  *((_QWORD *)&v497 + 1) = a5;
  v89 = a6;
  v90 = v429;
  v464 = v89;
  *(_QWORD *)&v498 = v89;
  v465 = v71;
  *((_QWORD *)&v498 + 1) = v71;
  v466 = v72;
  *(_QWORD *)&v499 = v72;
  v91 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v496);
  v92 = *(int *)(v91 + 156);
  LODWORD(v71) = *(unsigned __int8 *)(v86 + v92);
  v93 = static Alignment.center.getter(v91);
  v95 = 0x4048000000000000;
  if (!(_DWORD)v71)
    v95 = 0x404A000000000000;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v507, v95, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v93, v94);
  v96 = (uint64_t)v428;
  sub_10004A160((uint64_t)v428, (uint64_t)v78, &qword_1011AFB60);
  v97 = &v78[*(int *)(v430 + 36)];
  v98 = v507[5];
  *((_OWORD *)v97 + 4) = v507[4];
  *((_OWORD *)v97 + 5) = v98;
  *((_OWORD *)v97 + 6) = v507[6];
  v99 = v507[1];
  *(_OWORD *)v97 = v507[0];
  *((_OWORD *)v97 + 1) = v99;
  v100 = v507[3];
  *((_OWORD *)v97 + 2) = v507[2];
  *((_OWORD *)v97 + 3) = v100;
  v101 = v96;
  v102 = v470;
  v103 = v86;
  v104 = v431;
  sub_10004FF60(v101, &qword_1011AFB60);
  v105 = *(_QWORD *)(v103 + *(int *)(v102 + 80));
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v90, v103, v102);
  v437 = (int *)v91;
  if (!v105)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v90, v102);
    goto LABEL_7;
  }
  v106 = v90[*(int *)(v91 + 88)];
  (*(void (**)(char *, uint64_t))(v104 + 8))(v90, v102);
  v107 = 0.0;
  if ((v106 & 1) != 0)
LABEL_7:
    v107 = 1.0;
  v108 = v435;
  sub_10004A160(v88, v435, &qword_1011AFB68);
  *(double *)(v108 + *(int *)(v432 + 36)) = v107;
  v109 = sub_10004FF60(v88, &qword_1011AFB68);
  v110 = static Alignment.center.getter(v109);
  v112 = v111;
  sub_1003A961C(v103, v460, v461, v462, v463, v464, v465, v466, (uint64_t)&v496);
  v113 = v496;
  v114 = BYTE8(v496);
  v115 = v433;
  sub_10004A160(v108, v433, &qword_1011AFB70);
  v116 = v115 + *(int *)(v434 + 36);
  *(_QWORD *)v116 = v113;
  *(_BYTE *)(v116 + 8) = v114;
  *(_QWORD *)(v116 + 16) = v110;
  *(_QWORD *)(v116 + 24) = v112;
  sub_10004FF60(v108, &qword_1011AFB70);
  sub_100065228(v115, v471, &qword_1011AFB78);
  v117 = 1;
  v118 = v459;
  v119 = v458;
  if (*(_BYTE *)(v475 + v92) == 1)
  {
    *(_QWORD *)&v496 = Image.init(systemName:)(0x6F6E2E636973756DLL, 0xED000076742E6574);
    LODWORD(v477) = static HierarchicalShapeStyle.secondary.getter(v496);
    v120 = v440;
    sub_100824838(v440);
    v122 = v441;
    v121 = v442;
    v123 = v443;
    (*(void (**)(char *, _QWORD, uint64_t))(v442 + 104))(v441, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v443);
    v124 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v120, v122);
    v125 = *(void (**)(char *, uint64_t))(v121 + 8);
    v125(v122, v123);
    v125((char *)v120, v123);
    v126 = v379;
    View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v477, v124 & 1, (uint64_t)&type metadata for Image, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for Image);
    v127 = swift_release();
    v128 = static Font.caption.getter(v127);
    KeyPath = swift_getKeyPath(&unk_100EB78E8);
    v131 = v380;
    v130 = (uint64_t)v381;
    v132 = v383;
    (*(void (**)(char *, char *, uint64_t))(v380 + 16))(v381, v126, v383);
    v133 = v382;
    v134 = (uint64_t *)(v130 + *(int *)(v382 + 36));
    *v134 = KeyPath;
    v134[1] = v128;
    v135 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v126, v132);
    v136 = static Font.Weight.bold.getter(v135);
    v137 = sub_1003AC850();
    v138 = v385;
    v139 = v133;
    v119 = v458;
    View.fontWeight(_:)(*(_QWORD *)&v136, 0, v139, v137);
    v140 = sub_10004FF60(v130, &qword_1011AFB38);
    v141 = static Alignment.center.getter(v140);
    LOBYTE(v377) = 1;
    LOBYTE(v375) = 1;
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v508, 0x403E000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v375, 0, v377, v141, v142);
    v144 = v388;
    v143 = v389;
    v145 = (uint64_t)v390;
    (*(void (**)(char *, char *, uint64_t))(v388 + 16))(v390, v138, v389);
    v146 = (_OWORD *)(v145 + *(int *)(v384 + 36));
    v147 = v508[5];
    v146[4] = v508[4];
    v146[5] = v147;
    v146[6] = v508[6];
    v148 = v508[1];
    *v146 = v508[0];
    v146[1] = v148;
    v149 = v508[3];
    v146[2] = v508[2];
    v146[3] = v149;
    v150 = (*(double (**)(char *, uint64_t))(v144 + 8))(v138, v143);
    LOBYTE(v143) = static Edge.Set.trailing.getter(v150);
    v151 = EdgeInsets.init(_all:)(6.0);
    v153 = v152;
    v155 = v154;
    v157 = v156;
    v158 = v387;
    sub_10004A160(v145, v387, &qword_1011AFB48);
    v159 = v158 + *(int *)(v119 + 36);
    *(_BYTE *)v159 = v143;
    *(double *)(v159 + 8) = v151;
    *(_QWORD *)(v159 + 16) = v153;
    *(_QWORD *)(v159 + 24) = v155;
    *(_QWORD *)(v159 + 32) = v157;
    *(_BYTE *)(v159 + 40) = 0;
    sub_10004FF60(v145, &qword_1011AFB48);
    v160 = v386;
    sub_100065228(v158, v386, &qword_1011AFB50);
    sub_100065228(v160, v473, &qword_1011AFB50);
    v117 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v436 + 56))(v473, v117, 1, v119);
  v161 = v437;
  v162 = 1;
  if (*(_BYTE *)(v475 + v437[22]) == 1)
  {
    v163 = v475 + v437[21];
    v164 = v475 + v437[24];
    ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v509);
    v166 = (uint64_t)v391;
    v165 = v392;
    v167 = v393;
    (*(void (**)(char *, _QWORD, uint64_t))(v392 + 104))(v391, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v393);
    v168 = v394;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v163, v164, (uint64_t)v509, v166, v394);
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v166, v167);
    v169 = Corner.medium.unsafeMutableAddressor();
    v170 = *v169;
    v171 = v169[1];
    LOBYTE(v165) = *((_BYTE *)v169 + 16);
    v172 = v161;
    v173 = sub_100044B54((uint64_t *)&unk_1011C5080);
    v174 = sub_1000E4264();
    *(_QWORD *)&v496 = v173;
    *((_QWORD *)&v496 + 1) = v174;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v496, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    v176 = v397;
    v177 = v398;
    View.corner(_:)(v170, v171, v165, v397, OpaqueTypeConformance2);
    (*(void (**)(uint64_t, uint64_t))(v395 + 8))(v168, v176);
    v178 = Border.artwork.unsafeMutableAddressor();
    v179 = *v178;
    v180 = *((double *)v178 + 1);
    v181 = *v169;
    v182 = v169[1];
    LOBYTE(v169) = *((_BYTE *)v169 + 16);
    LOBYTE(v168) = *((_BYTE *)v178 + 16);
    swift_retain();
    *(_QWORD *)&v496 = v176;
    v183 = v475;
    *((_QWORD *)&v496 + 1) = OpaqueTypeConformance2;
    v161 = v172;
    v184 = swift_getOpaqueTypeConformance2(&v496, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v185 = v402;
    v186 = (char)v169;
    v187 = v401;
    View.border(_:corner:)(v179, v168, v181, v182, v186, v401, v184, v180);
    v188 = swift_release();
    v189 = (*(uint64_t (**)(char *, uint64_t, __n128))(v399 + 8))(v177, v187, v188);
    v190 = static Alignment.center.getter(v189);
    v192 = v191;
    v193 = (uint64_t)v403;
    v194 = (uint64_t)&v403[*(int *)(v396 + 36)];
    sub_1003A96EC(v183, v460, v461, v462, v463, v464, v465, v466, v194);
    v195 = (uint64_t *)(v194 + *(int *)(sub_100007E8C(&qword_1011AFB98) + 36));
    *v195 = v190;
    v195[1] = v192;
    (*(void (**)(uint64_t, char *, uint64_t))(v404 + 32))(v193, v185, v405);
    v196 = *(_QWORD *)(v183 + v161[23]);
    v197 = v407;
    sub_10004A160(v193, v407, &qword_1011AFAF8);
    v198 = v197 + *(int *)(v400 + 36);
    *(_QWORD *)v198 = v196;
    *(_WORD *)(v198 + 8) = 0;
    v199 = sub_10004FF60(v193, &qword_1011AFAF8);
    if (qword_10119BF78 != -1)
      v199 = swift_once(&qword_10119BF78, sub_1003A346C);
    v200 = qword_1011AF710;
    v201 = static Alignment.center.getter(v199);
    _FrameLayout.init(width:height:alignment:)(v510, 0, 1, v200, 0, v201, v202);
    v203 = v410;
    sub_10004A160(v197, v410, &qword_1011AFB00);
    v204 = (_OWORD *)(v203 + *(int *)(v406 + 36));
    v205 = v510[1];
    *v204 = v510[0];
    v204[1] = v205;
    v204[2] = v510[2];
    v206 = sub_10004FF60(v197, &qword_1011AFB00);
    v207 = static Edge.Set.vertical.getter(v206);
    v118 = v459;
    if (qword_10119C8D8 != -1)
      swift_once(&qword_10119C8D8, sub_10085FA00);
    v208 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
    v210 = v209;
    v212 = v211;
    v214 = v213;
    v215 = v411;
    sub_10004A160(v203, v411, &qword_1011AFB08);
    v216 = v215 + *(int *)(v408 + 36);
    *(_BYTE *)v216 = v207;
    *(double *)(v216 + 8) = v208;
    *(_QWORD *)(v216 + 16) = v210;
    *(_QWORD *)(v216 + 24) = v212;
    *(_QWORD *)(v216 + 32) = v214;
    *(_BYTE *)(v216 + 40) = 0;
    v217 = sub_10004FF60(v203, &qword_1011AFB08);
    v218 = static Edge.Set.leading.getter(v217);
    v219 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
    v221 = v220;
    v223 = v222;
    v225 = v224;
    v226 = v413;
    sub_10004A160(v215, v413, &qword_1011AFB10);
    v227 = v226 + *(int *)(v409 + 36);
    *(_BYTE *)v227 = v218;
    *(double *)(v227 + 8) = v219;
    *(_QWORD *)(v227 + 16) = v221;
    *(_QWORD *)(v227 + 24) = v223;
    *(_QWORD *)(v227 + 32) = v225;
    *(_BYTE *)(v227 + 40) = 0;
    sub_10004FF60(v215, &qword_1011AFB10);
    v229 = static Edge.Set.trailing.getter(v228);
    v230 = EdgeInsets.init(_all:)(12.0);
    v232 = v231;
    v234 = v233;
    v236 = v235;
    v237 = v412;
    sub_10004A160(v226, v412, &qword_1011AFB18);
    v238 = v237 + *(int *)(v118 + 36);
    *(_BYTE *)v238 = v229;
    *(double *)(v238 + 8) = v230;
    *(_QWORD *)(v238 + 16) = v232;
    *(_QWORD *)(v238 + 24) = v234;
    *(_QWORD *)(v238 + 32) = v236;
    *(_BYTE *)(v238 + 40) = 0;
    sub_10004FF60(v226, &qword_1011AFB18);
    sub_100065228(v237, v474, &qword_1011AFB20);
    v162 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v438 + 56))(v474, v162, 1, v118);
  v239 = v161[26];
  v240 = (uint64_t *)(v475 + v161[25]);
  v241 = v161;
  v243 = *v240;
  v242 = v240[1];
  v245 = *(_QWORD *)(v475 + v239);
  v244 = *(_QWORD *)(v475 + v239 + 8);
  v246 = v439;
  v247 = v472;
  sub_10004A160(v475 + v241[30], (uint64_t)v472 + *(int *)(v439 + 24), &qword_1011B8D50);
  v248 = (uint64_t)v247 + *(int *)(v246 + 28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100824838(v248);
  *v247 = v243;
  v247[1] = v242;
  v247[2] = v245;
  v247[3] = v244;
  v249 = v475;
  v250 = sub_100007E8C(&qword_1011A03B8);
  v251 = v448;
  State.wrappedValue.getter(v448, v250);
  v252 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v252 - 8) + 56))(v251, 0, 1, v252);
  *(_QWORD *)&v496 = 0x4000000000000000;
  v253 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v496, &type metadata for CGFloat, v253);
  *(_QWORD *)&v496 = 0x3FF0000000000000;
  v254 = ScaledMetric.init(wrappedValue:)(&v496, &type metadata for CGFloat, v253);
  v255 = static Alignment.center.getter(v254);
  LOBYTE(v377) = 1;
  LOBYTE(v375) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v511, 0x4046000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v375, 0, v377, v255, v256);
  v257 = v449;
  sub_10005B704((uint64_t)v251, v449, _s27DownloadStatusIndicatorViewVMa);
  v258 = (_OWORD *)(v257 + *(int *)(v445 + 36));
  v259 = v511[5];
  v258[4] = v511[4];
  v258[5] = v259;
  v258[6] = v511[6];
  v260 = v511[1];
  *v258 = v511[0];
  v258[1] = v260;
  v261 = v511[3];
  v258[2] = v511[2];
  v258[3] = v261;
  sub_10005B748((uint64_t)v251, _s27DownloadStatusIndicatorViewVMa);
  LOBYTE(v246) = static Edge.Set.trailing.getter(v262);
  v263 = EdgeInsets.init(_all:)(6.0);
  v265 = v264;
  v267 = v266;
  v269 = v268;
  v270 = v446;
  sub_10004A160(v257, v446, &qword_1011AFAE8);
  v271 = v270 + *(int *)(v447 + 36);
  *(_BYTE *)v271 = v246;
  *(double *)(v271 + 8) = v263;
  *(_QWORD *)(v271 + 16) = v265;
  *(_QWORD *)(v271 + 24) = v267;
  *(_QWORD *)(v271 + 32) = v269;
  *(_BYTE *)(v271 + 40) = 0;
  sub_10004FF60(v257, &qword_1011AFAE8);
  sub_100065228(v270, v469, &qword_1011AFAF0);
  v272 = v249 + v241[28];
  if ((*(_BYTE *)(v272 + 8) & 1) != 0)
  {
    v273 = v455;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v451 + 56))(v455, 1, 1, v452);
  }
  else
  {
    v274 = *(double *)v272;
    if (qword_10119BFD0 != -1)
      swift_once(&qword_10119BFD0, sub_10040FE08);
    v275 = objc_msgSend((id)qword_10124CF88, "stringFromSeconds:", v274);
    v276 = static String._unconditionallyBridgeFromObjectiveC(_:)(v275);
    v278 = v277;

    *(_QWORD *)&v496 = v276;
    *((_QWORD *)&v496 + 1) = v278;
    v466 = sub_100055B68();
    v279 = Text.init<A>(_:)(&v496, &type metadata for String, v466);
    v281 = v280;
    v283 = v282;
    v285 = v284 & 1;
    LODWORD(v496) = static HierarchicalShapeStyle.secondary.getter(v279);
    v286 = v440;
    sub_100824838(v440);
    v288 = v441;
    v287 = v442;
    v289 = v443;
    (*(void (**)(char *, _QWORD, uint64_t))(v442 + 104))(v441, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v443);
    LOBYTE(v275) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v286, v288);
    v290 = *(void (**)(char *, uint64_t))(v287 + 8);
    v290(v288, v289);
    v290((char *)v286, v289);
    v291 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v496, v275 & 1, v279, v281, v285, v283, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v293 = v292;
    v295 = v294;
    v297 = v296 & 1;
    sub_100055BAC(v279, v281, v285);
    swift_bridgeObjectRelease(v283);
    v299 = static Font.body.getter(v298);
    v300 = Text.font(_:)(v299, v291, v293, v297, v295);
    v302 = v301;
    LOBYTE(v279) = v303;
    v305 = v304;
    swift_release();
    sub_100055BAC(v291, v293, v297);
    v306 = swift_bridgeObjectRelease(v295);
    v475 = Text.monospacedDigit()(v300, v302, v279 & 1, v305, v306);
    v470 = v307;
    LOBYTE(v293) = v308;
    v465 = v309;
    sub_100055BAC(v300, v302, v279 & 1);
    swift_bridgeObjectRelease(v305);
    v311 = static Alignment.center.getter(v310);
    LOBYTE(v378) = 1;
    LOBYTE(v376) = 1;
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v512, 0x4048000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v376, 0, v378, v311, v312);
    v313 = v512;
    v314 = v514;
    v315 = v516;
    v316 = v518;
    v317 = v520;
    v318 = v522;
    v319 = v524;
    v464 = v525;
    v494 = v293 & 1;
    v493 = v513;
    v492 = v515;
    v491 = v517;
    v490 = v519;
    v489 = v521;
    v488 = v523;
    v321 = static Edge.Set.trailing.getter(v320);
    if (qword_10119C8D8 != -1)
      swift_once(&qword_10119C8D8, sub_10085FA00);
    v322 = EdgeInsets.init(_all:)(*(double *)&qword_10124DA50);
    v495 = 0;
    *(_QWORD *)&v477 = v475;
    *((_QWORD *)&v477 + 1) = v470;
    LOBYTE(v478) = v494;
    *((_QWORD *)&v478 + 1) = v465;
    *(_QWORD *)&v479 = v313;
    BYTE8(v479) = v493;
    *(_QWORD *)&v480 = v314;
    BYTE8(v480) = v492;
    *(_QWORD *)&v481 = v315;
    BYTE8(v481) = v491;
    *(_QWORD *)&v482 = v316;
    BYTE8(v482) = v490;
    *(_QWORD *)&v483 = v317;
    BYTE8(v483) = v489;
    *(_QWORD *)&v484 = v318;
    BYTE8(v484) = v488;
    *(_QWORD *)&v485 = v319;
    *((_QWORD *)&v485 + 1) = v464;
    LOBYTE(v486) = v321;
    *((double *)&v486 + 1) = v322;
    *(_QWORD *)&v487[0] = v323;
    *((_QWORD *)&v487[0] + 1) = v324;
    *(_QWORD *)&v487[1] = v325;
    BYTE8(v487[1]) = 0;
    v328 = static Duration.seconds(_:)(v326, v327, v274);
    v330 = v329;
    v331 = sub_100007E8C(&qword_1011A0640);
    v332 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0);
    v333 = *(_QWORD *)(v332 - 8);
    v334 = *(_QWORD *)(v333 + 72);
    v335 = *(unsigned __int8 *)(v333 + 80);
    v336 = (v335 + 32) & ~v335;
    v337 = swift_allocObject(v331, v336 + 3 * v334, v335 | 7);
    *(_OWORD *)(v337 + 16) = xmmword_100EA7AC0;
    v338 = static Duration.UnitsFormatStyle.Unit.hours.getter();
    v339 = static Duration.UnitsFormatStyle.Unit.minutes.getter(v338);
    static Duration.UnitsFormatStyle.Unit.seconds.getter(v339);
    v340 = sub_1000476D0(v337);
    swift_setDeallocating(v337);
    swift_arrayDestroy(v337 + v336, 3, v332);
    v341 = swift_deallocClassInstance(v337, 32, 7);
    v342 = v414;
    v343 = static Duration.UnitsFormatStyle.UnitWidth.wide.getter(v341);
    v344 = v418;
    v345 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v343);
    v346 = v423;
    static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v345);
    v347 = v416;
    static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)(v340, v342, 0, 1, v344, 0, 1, v346);
    v348 = swift_bridgeObjectRelease(v340);
    (*(void (**)(char *, uint64_t, __n128))(v424 + 8))(v346, v425, v348);
    (*(void (**)(char *, uint64_t))(v420 + 8))(v344, v422);
    (*(void (**)(char *, uint64_t))(v415 + 8))(v342, v417);
    v349 = sub_100048748((unint64_t *)&unk_1011CEA50, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
    v350 = v328;
    v351 = v421;
    Duration.formatted<A>(_:)(&v496, v347, v350, v330, v421, v349);
    (*(void (**)(char *, uint64_t))(v419 + 8))(v347, v351);
    v476 = v496;
    v352 = Text.init<A>(_:)(&v476, &type metadata for String, v466);
    v354 = v353;
    v356 = v355;
    v358 = v357 & 1;
    v359 = sub_100007E8C(&qword_1011AFB88);
    v360 = sub_1003AC7CC();
    v361 = (uint64_t)v427;
    View.accessibility(label:)(v352, v354, v358, v356, v359, v360);
    sub_100055BAC(v352, v354, v358);
    swift_bridgeObjectRelease(v356);
    v504 = v485;
    v505 = v486;
    v506[0] = v487[0];
    *(_OWORD *)((char *)v506 + 9) = *(_OWORD *)((char *)v487 + 9);
    v500 = v481;
    v501 = v482;
    v502 = v483;
    v503 = v484;
    v496 = v477;
    v497 = v478;
    v498 = v479;
    v499 = v480;
    sub_1003630A4((uint64_t)&v496);
    v362 = v426;
    sub_100065228(v361, v426, &qword_1011AFAD8);
    v273 = v455;
    sub_100065228(v362, v455, &qword_1011AFAD8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v451 + 56))(v273, 0, 1, v452);
  }
  v363 = v467;
  sub_10004A160(v471, v467, &qword_1011AFB78);
  v364 = v468;
  sub_10004A160(v473, v468, &qword_1011AFB58);
  v365 = v450;
  sub_10004A160(v474, v450, &qword_1011AFB28);
  v366 = v453;
  sub_10005B704((uint64_t)v472, v453, type metadata accessor for ContainerRowText);
  v367 = v469;
  v368 = v454;
  sub_10004A160(v469, v454, &qword_1011AFAF0);
  v369 = v456;
  sub_10004A160(v273, v456, &qword_1011AFAE0);
  v370 = v457;
  sub_10004A160(v363, v457, &qword_1011AFB78);
  v371 = v273;
  v372 = (int *)sub_100007E8C(&qword_1011AFB80);
  sub_10004A160(v364, v370 + v372[12], &qword_1011AFB58);
  sub_10004A160(v365, v370 + v372[16], &qword_1011AFB28);
  sub_10005B704(v366, v370 + v372[20], type metadata accessor for ContainerRowText);
  v373 = v370 + v372[24];
  *(_QWORD *)v373 = 0;
  *(_BYTE *)(v373 + 8) = 1;
  sub_10004A160(v368, v370 + v372[28], &qword_1011AFAF0);
  sub_10004A160(v369, v370 + v372[32], &qword_1011AFAE0);
  sub_10004FF60(v371, &qword_1011AFAE0);
  sub_10004FF60(v367, &qword_1011AFAF0);
  sub_10005B748((uint64_t)v472, type metadata accessor for ContainerRowText);
  sub_10004FF60(v474, &qword_1011AFB28);
  sub_10004FF60(v473, &qword_1011AFB58);
  sub_10004FF60(v471, &qword_1011AFB78);
  sub_10004FF60(v369, &qword_1011AFAE0);
  sub_10004FF60(v368, &qword_1011AFAF0);
  sub_10005B748(v366, type metadata accessor for ContainerRowText);
  sub_10004FF60(v365, &qword_1011AFB28);
  sub_10004FF60(v468, &qword_1011AFB58);
  return sub_10004FF60(v467, &qword_1011AFB78);
}

uint64_t sub_1003A8C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  __int128 *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t KeyPath;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  Swift::String v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  Swift::String v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  Swift::String v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;

  v135 = a9;
  v17 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v17);
  v119 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100007E8C(&qword_1011AFBB8);
  __chkstk_darwin(v133);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011AFBC0);
  __chkstk_darwin(v21);
  v122 = (uint64_t)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v128 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v123 = (uint64_t)&v114 - v26;
  v120 = sub_100007E8C(&qword_1011AFBC8);
  v118 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v116 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_1011AFBD0);
  __chkstk_darwin(v114);
  v117 = (char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100007E8C(&qword_1011AFBD8);
  __chkstk_darwin(v132);
  v115 = (uint64_t)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v121 = (uint64_t)&v114 - v31;
  v124._countAndFlagsBits = a2;
  v143._countAndFlagsBits = a2;
  v143._object = a3;
  v124._object = a3;
  v126 = a4;
  v144 = a4;
  v145 = a5;
  v127 = a5;
  v129 = a6;
  v146 = a6;
  v147 = a7;
  v130 = a7;
  v131 = a8;
  v148 = a8;
  v32 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v143);
  v33 = *(int *)(v32 + 108);
  v134 = a1;
  v34 = a1 + v33;
  v35 = *(_QWORD *)v34;
  v36 = *(unsigned __int8 *)(v34 + 8);
  if (v36 == 1)
  {
    v143._countAndFlagsBits = v35;
    sub_1001AA49C();
    v143 = BinaryInteger.formatted()();
    v51 = sub_100055B68();
    v52 = v20;
    v53 = Text.init<A>(_:)(&v143, &type metadata for String, v51);
    v55 = v54;
    v122 = v56;
    v58 = v57 & 1;
    LODWORD(v136._countAndFlagsBits) = static HierarchicalShapeStyle.secondary.getter(v53);
    v143 = v124;
    v144 = v126;
    v145 = v127;
    v146 = v129;
    v147 = v130;
    v148 = v131;
    type metadata accessor for ContainerTrackRow(0, (uint64_t)&v143);
    v59 = v123;
    sub_100824838(v123);
    v60 = v128;
    v61 = v125;
    (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v24, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v125);
    v62 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v59, v24);
    v63 = *(void (**)(char *, uint64_t))(v60 + 8);
    v63(v24, v61);
    v63((char *)v59, v61);
    v64 = v122;
    v65 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v136, v62 & 1, v53, v55, v58, v122, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v67 = v66;
    v69 = v68;
    v71 = v70 & 1;
    sub_100055BAC(v53, v55, v58);
    swift_bridgeObjectRelease(v64);
    v73 = static Font.Weight.bold.getter(v72);
    v74 = type metadata accessor for Font.Design(0);
    v75 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v119, 1, 1, v74);
    v76 = static Font.system(size:weight:design:)(*(_QWORD *)&v73, 0, v75, 20.0);
    sub_10004FF60(v75, &qword_1011C4F30);
    v77 = Text.font(_:)(v76, v65, v67, v71, v69);
    v79 = v78;
    v81 = v80;
    v83 = v82;
    swift_release();
    sub_100055BAC(v65, v67, v71);
    swift_bridgeObjectRelease(v69);
    *(_QWORD *)v52 = v77;
    *((_QWORD *)v52 + 1) = v79;
    v52[16] = v81 & 1;
    *((_QWORD *)v52 + 3) = v83;
    swift_storeEnumTagMultiPayload(v52, v133, 1);
    v84 = sub_10005610C(&qword_1011AFBE8, &qword_1011AFBD8, (void (*)(void))sub_1003AC950);
    v85 = v135;
    _ConditionalContent<>.init(storage:)(v52, v132, &type metadata for Text, v84, &protocol witness table for Text);
    v86 = sub_100007E8C(&qword_1011AFBE0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 0, 1, v86);
  }
  else if (v36)
  {
    v88 = sub_100007E8C(&qword_1011AFBE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v135, 1, 1, v88);
  }
  else
  {
    v37 = v32;
    v119 = v20;
    v143._countAndFlagsBits = v35;
    sub_1001AA49C();
    v143 = BinaryInteger.formatted()();
    v38 = sub_100055B68();
    v39 = (__int128 *)Text.init<A>(_:)(&v143, &type metadata for String, v38);
    v40 = (uint64_t)v39;
    v42 = v41;
    v44 = v43;
    v46 = v45;
    if ((*(_BYTE *)(v134 + *(int *)(v37 + 156)) & 1) != 0)
    {
      v47 = 0;
      v48 = 0;
      v49 = 0x4020000000000000;
      v50 = 0x4024000000000000;
    }
    else
    {
      v39 = EdgeInsets.zero.unsafeMutableAddressor();
      v47 = *(_QWORD *)v39;
      v50 = *((_QWORD *)v39 + 1);
      v48 = *((_QWORD *)v39 + 2);
      v49 = *((_QWORD *)v39 + 3);
    }
    v89 = static Edge.Set.all.getter(v39);
    v143._countAndFlagsBits = v40;
    v143._object = v42;
    LOBYTE(v144) = v44 & 1;
    v145 = v46;
    LOBYTE(v146) = v89;
    v147 = v47;
    v148 = v50;
    v149 = v48;
    v150 = v49;
    v151 = 0;
    v142 = static HierarchicalShapeStyle.secondary.getter(v89);
    v136 = v124;
    v137 = v126;
    v138 = v127;
    v139 = v129;
    v140 = v130;
    v141 = v131;
    type metadata accessor for ContainerTrackRow(0, (uint64_t)&v136);
    v90 = v123;
    sub_100824838(v123);
    v91 = v128;
    v92 = v125;
    (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v24, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v125);
    v93 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v90, v24);
    v94 = *(void (**)(char *, uint64_t))(v91 + 8);
    v94(v24, v92);
    v94((char *)v90, v92);
    v95 = sub_100007E8C(&qword_1011C9470);
    v96 = sub_1003ACA30((unint64_t *)&qword_1011A0658, &qword_1011C9470);
    v97 = v116;
    View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v142, v93 & 1, v95, (uint64_t)&type metadata for HierarchicalShapeStyle, v96);
    v98 = v145;
    sub_100055BAC(v143._countAndFlagsBits, (uint64_t)v143._object, v144);
    swift_bridgeObjectRelease(v98);
    v100 = static Font.body.getter(v99);
    KeyPath = swift_getKeyPath(&unk_100EB78E8);
    v102 = v118;
    v103 = (uint64_t)v117;
    v104 = v120;
    (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v117, v97, v120);
    v105 = (uint64_t *)(v103 + *(int *)(v114 + 36));
    *v105 = KeyPath;
    v105[1] = v100;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v97, v104);
    if (v35)
      v106 = 1.0;
    else
      v106 = 0.0;
    v107 = v115;
    sub_10004A160(v103, v115, &qword_1011AFBD0);
    v108 = v132;
    *(double *)(v107 + *(int *)(v132 + 36)) = v106;
    sub_10004FF60(v103, &qword_1011AFBD0);
    v109 = v121;
    sub_100065228(v107, v121, &qword_1011AFBD8);
    v110 = (uint64_t)v119;
    sub_10004A160(v109, (uint64_t)v119, &qword_1011AFBD8);
    swift_storeEnumTagMultiPayload(v110, v133, 0);
    v111 = sub_10005610C(&qword_1011AFBE8, &qword_1011AFBD8, (void (*)(void))sub_1003AC950);
    v112 = v122;
    _ConditionalContent<>.init(storage:)(v110, v108, &type metadata for Text, v111, &protocol witness table for Text);
    sub_10004FF60(v109, &qword_1011AFBD8);
    v113 = sub_100007E8C(&qword_1011AFBE0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v112, 0, 1, v113);
    return sub_100065228(v112, v135, &qword_1011AFBC0);
  }
}

int *sub_1003A961C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *result;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  result = (int *)type metadata accessor for ContainerTrackRow(0, (uint64_t)&v21);
  v19 = *(void **)(a1 + result[20]);
  if (v19)
  {
    v21 = a2;
    v22 = a3;
    v23 = a4;
    v24 = a5;
    v25 = a6;
    v26 = a7;
    v27 = a8;
    result = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v21);
    v20 = 0;
    if ((*(_BYTE *)(a1 + result[22]) & 1) == 0)
    {
      result = v19;
      v20 = v19;
    }
  }
  else
  {
    v20 = 0;
  }
  *(_QWORD *)a9 = v20;
  *(_BYTE *)(a9 + 8) = 0;
  return result;
}

uint64_t sub_1003A96EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v22 = a2;
  v23 = a3;
  v24 = a4;
  v25 = a5;
  v26 = a6;
  v27 = a7;
  v28 = a8;
  v11 = type metadata accessor for ContainerTrackRow(0, (uint64_t)&v22);
  v12 = *(void **)(a1 + *(int *)(v11 + 80));
  if (v12)
  {
    v22 = *(_QWORD *)(a1 + *(int *)(v11 + 80));
    LOBYTE(v23) = 1;
    v13 = v12;
    v14 = Corner.medium.unsafeMutableAddressor();
    v15 = *v14;
    v16 = v14[1];
    v17 = *((_BYTE *)v14 + 16);
    v18 = sub_1003AC90C();
    View.corner(_:)(v15, v16, v17, (uint64_t)&type metadata for ContainerDetailPlaybackIndicatorView, v18);

    v19 = sub_100007E8C(&qword_1011AFBA8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a9, 0, 1, v19);
  }
  else
  {
    v21 = sub_100007E8C(&qword_1011AFBA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a9, 1, 1, v21);
  }
}

uint64_t sub_1003A97E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a5;
  v26 = a7;
  v27 = a3;
  v24 = a1;
  v25 = a2;
  v9 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PlaybackRowModifier(0, a4, a6, v17);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v24 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, v24, a4, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v25, v9);
  sub_1003AB2F4((uint64_t)v16, (uint64_t)v12, a4, a6, (uint64_t)v22);
  View.modifier<A>(_:)(v22, v27, v18, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
}

uint64_t sub_1003A993C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v18[7];

  v18[0] = a2;
  v18[1] = a3;
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v18[6] = a8;
  v11 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)v18);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v18[-1] - v13;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v18[-1] - v13, a1, v11, v12);
  return sub_1001CAFAC((uint64_t)v14, 2u, v11, (uint64_t)&off_1010C2558, a9);
}

uint64_t sub_1003A99E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t result;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];

  v28 = a8;
  v29 = a2;
  v15 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v27 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v27 - v19;
  v30[0] = a3;
  v30[1] = a4;
  v30[2] = a5;
  v30[3] = a6;
  v30[4] = a7;
  v30[5] = v28;
  v30[6] = a9;
  type metadata accessor for ContainerTrackRow(0, (uint64_t)v30);
  v21 = sub_100007E8C(&qword_1011A03B8);
  State.wrappedValue.getter(v20, v21);
  v22 = sub_100048748(&qword_1011A0590, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
  LOBYTE(a5) = dispatch thunk of static Equatable.== infix(_:_:)(a1, v20, v15, v22);
  v23 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  result = v23(v20, v15);
  if ((a5 & 1) == 0)
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v25(v20, a1, v15);
    v26 = v27;
    v25(v27, (uint64_t)v20, v15);
    State.wrappedValue.setter(v26, v21);
    return v23(v20, v15);
  }
  return result;
}

uint64_t sub_1003A9B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v43 = a1;
  v46 = a9;
  v16 = type metadata accessor for AccessibilityChildBehavior(0);
  v44 = *(_QWORD *)(v16 - 8);
  v45 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a2;
  v50 = a3;
  v51 = a4;
  v52 = a5;
  v53 = a6;
  v54 = a7;
  v55 = a8;
  v19 = type metadata accessor for ContainerTrackRow.AccessibilityTrackRowFrame(255, (uint64_t)&v49);
  WitnessTable = swift_getWitnessTable(&unk_100EB79F4, v19);
  v21 = type metadata accessor for _ViewModifier_Content(255, v19, WitnessTable);
  v22 = sub_100044B54(&qword_1011A49B0);
  v23 = type metadata accessor for ModifiedContent(0, v21, v22);
  v42 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v40 - v24;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v21);
  v27 = sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
  v47 = v26;
  v48 = v27;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  v49 = v23;
  v50 = v28;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v49, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v41 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v31 = (char *)&v40 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v40 - v33;
  v49 = static Color.clear.getter(v35);
  v36 = static Edge.Set.all.getter(v49);
  View.background<A>(_:ignoresSafeAreaEdges:)(&v49, v36, v21, &type metadata for Color, v26, &protocol witness table for Color);
  swift_release();
  static AccessibilityChildBehavior.combine.getter(v37);
  View.accessibilityElement(children:)(v18, v23, v28);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v45);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v23);
  v49 = v23;
  v50 = v28;
  swift_getOpaqueTypeConformance2(&v49, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_10081EB14((uint64_t)v31, OpaqueTypeMetadata2, (uint64_t)v34);
  v38 = *(void (**)(char *, uint64_t))(v41 + 8);
  v38(v31, OpaqueTypeMetadata2);
  sub_1000EA744((uint64_t)v34, OpaqueTypeMetadata2, v46);
  return ((uint64_t (*)(char *, uint64_t))v38)(v34, OpaqueTypeMetadata2);
}

uint64_t sub_1003A9E44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003A9B74(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3);
}

uint64_t sub_1003A9E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  __int128 v14;

  v4 = v2 + *(int *)(a1 + 84);
  v5 = *(_QWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 16);
  v13 = v5;
  v14 = *(_OWORD *)(a1 + 48);
  v6 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v12);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v6);
  v9 = type metadata accessor for SourcedPlaybackIntent(255, v6, WitnessTable, v8);
  v10 = type metadata accessor for Optional(0, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, v4, v10);
}

void *sub_1003A9F00(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 92));
  v3 = v2;
  return v2;
}

uint64_t sub_1003A9F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003AE0AC(a1, a2, a3, (uint64_t)&unk_100F9DF50);
}

uint64_t sub_1003A9F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003AE0AC(a1, a2, a3, (uint64_t)&unk_100F9DEEC);
}

uint64_t sub_1003A9F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[3];
  uint64_t v78;

  v74 = a2;
  v73 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v70 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContainerRowText(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = sub_100007E8C(&qword_1011A2C40);
  __chkstk_darwin(v58);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011A2C48);
  __chkstk_darwin(v65);
  v57 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AF9F0);
  v67 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v66 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 32);
  v77[0] = *(_OWORD *)(a1 + 16);
  v77[1] = v14;
  v77[2] = *(_OWORD *)(a1 + 48);
  v78 = v13;
  v15 = type metadata accessor for ContainerHeaderRow.ViewModel(255, (uint64_t)v77);
  WitnessTable = swift_getWitnessTable(&unk_100EB779C, v15);
  v60 = v15;
  v59 = WitnessTable;
  v18 = type metadata accessor for PlaybackRowModifier(255, v15, WitnessTable, v17);
  v68 = v11;
  v61 = v18;
  v56 = type metadata accessor for ModifiedContent(0, v11, v18);
  v64 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v62 = (uint64_t)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v55 - v21;
  v23 = v2[2];
  v22 = v2[3];
  v25 = v2[4];
  v24 = v2[5];
  v26 = (uint64_t)v7 + *(int *)(v5 + 28);
  v69 = a1;
  v72 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100824838(v26);
  v27 = (char *)v7 + *(int *)(v5 + 24);
  v28 = type metadata accessor for ContentRating(0);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  *v7 = v23;
  v7[1] = v22;
  v30 = v24 == 0;
  v7[2] = v25;
  v7[3] = v24;
  if (v24)
    v31 = 0x4036000000000000;
  else
    v31 = 0x4046800000000000;
  if (v30)
    v32 = 0x4028000000000000;
  else
    v32 = 0x402C000000000000;
  v33 = static Edge.Set.all.getter(v29);
  sub_10005B704((uint64_t)v7, (uint64_t)v9, type metadata accessor for ContainerRowText);
  v34 = &v9[*(int *)(v58 + 36)];
  *v34 = v33;
  *((_QWORD *)v34 + 1) = v31;
  *((_QWORD *)v34 + 2) = 0x4036000000000000;
  *((_QWORD *)v34 + 3) = v32;
  *((_QWORD *)v34 + 4) = 0x4024000000000000;
  v35 = (uint64_t)v57;
  v34[40] = 0;
  v36 = sub_10005B748((uint64_t)v7, type metadata accessor for ContainerRowText);
  v37 = static Alignment.leading.getter(v36);
  sub_10014A5D0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v35, 0.0, 1, INFINITY, 0, v37, v38);
  sub_10004FF60((uint64_t)v9, &qword_1011A2C40);
  if (qword_10119BF70 != -1)
    swift_once(&qword_10119BF70, sub_1003A344C);
  v39 = qword_1011AF708;
  v40 = sub_10005610C(&qword_1011AF9F8, &qword_1011A2C48, (void (*)(void))sub_1003AA4F0);
  v41 = v66;
  v42 = v39;
  v43 = v65;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v42, -1, 0, 0, 0, 1, 1, v65, 0.0, v40);
  sub_10004FF60(v35, &qword_1011A2C48);
  v44 = v70;
  v45 = (uint64_t)v72;
  sub_100824838(v70);
  *(_QWORD *)&v77[0] = v43;
  *((_QWORD *)&v77[0] + 1) = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v77, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v47 = v62;
  v48 = v45;
  v49 = v68;
  sub_1003A97E4(v48, v44, v68, v60, OpaqueTypeConformance2, v59, v62);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v44, v73);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v49);
  v50 = swift_getWitnessTable(&unk_100EB7A44, v61);
  v75 = OpaqueTypeConformance2;
  v76 = v50;
  v51 = v56;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v56);
  v52 = v63;
  sub_10081EB14(v47, v51, v63);
  v53 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
  v53(v47, v51);
  sub_1000EA744(v52, v51, v74);
  return ((uint64_t (*)(uint64_t, uint64_t))v53)(v52, v51);
}

uint64_t type metadata accessor for ContainerRowText(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AFD50;
  if (!qword_1011AFD50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContainerRowText);
  return result;
}

uint64_t type metadata accessor for PlaybackRowModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackRowModifier);
}

unint64_t sub_1003AA4F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFA00;
  if (!qword_1011AFA00)
  {
    v1 = sub_100044B54(&qword_1011A2C40);
    sub_100048748(&qword_1011AFA08, type metadata accessor for ContainerRowText, (uint64_t)&unk_100EB7A94);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFA00);
  }
  return result;
}

double sub_1003AA574@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __n128 v42;
  void (*v43)(char *, uint64_t);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  uint64_t v63;
  void (*v64)(char *);
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *);
  uint64_t v90;
  double result;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t KeyPath;
  void (*v102)(char *);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v4 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v8);
  v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  v12 = *a1;
  v13 = a1[1];
  v14 = v11;
  v107 = v12;
  v108 = v13;
  v15 = sub_100055B68();
  swift_bridgeObjectRetain();
  v93 = v15;
  v105 = Text.init<A>(_:)(&v107, &type metadata for String, v15);
  v106 = v16;
  v18 = v17;
  LODWORD(v104) = v19 & 1;
  v20 = type metadata accessor for ContainerRowText(0);
  v21 = *(int *)(v20 + 24);
  v100 = (uint64_t)v14;
  sub_10004A160((uint64_t)v14 + v21, (uint64_t)v10, &qword_1011B8D50);
  v103 = (uint64_t)v14 + *(int *)(v20 + 28);
  v22 = v103;
  LODWORD(KeyPath) = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  v102 = *(void (**)(char *))(v5 + 104);
  v23 = v4;
  v94 = v4;
  v102(v7);
  LOBYTE(v4) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v22, v7);
  v99 = *(void (**)(char *, uint64_t))(v5 + 8);
  v99(v7, v23);
  v24 = TextBadge.init(for:isPlayable:)(v10, v4 & 1);
  v25 = TextBadge.view.getter(v24);
  v27 = v26;
  v29 = v28;
  v31 = v30 & 1;
  v32 = v105;
  v33 = v106;
  LOBYTE(v20) = v104;
  v34 = static Text.+ infix(_:_:)(v105, v18, v104, v106, v25, v26, v31, v28);
  v96 = v35;
  v97 = v34;
  v98 = v36;
  LODWORD(v95) = v37 & 1;
  sub_100055BAC(v25, v27, v31);
  v38 = v29;
  v39 = v94;
  swift_bridgeObjectRelease(v38);
  v40 = v18;
  v41 = v7;
  sub_100055BAC(v32, v40, v20);
  v42 = swift_bridgeObjectRelease(v33);
  LODWORD(v107) = static HierarchicalShapeStyle.primary.getter(v42);
  ((void (*)(char *, _QWORD, uint64_t))v102)(v7, KeyPath, v39);
  v43 = v99;
  LOBYTE(v25) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v103, v41);
  v43(v41, v39);
  v44 = v25 & 1;
  v46 = v96;
  v45 = v97;
  LOBYTE(v20) = LOBYTE(v95);
  v47 = v98;
  v48 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v107, v44, v97, v96, SLOBYTE(v95), v98, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v104 = v49;
  v105 = v48;
  v51 = v50;
  v106 = v52;
  sub_100055BAC(v45, v46, v20);
  swift_bridgeObjectRelease(v47);
  v53 = *(_QWORD *)(v100 + 24);
  if (v53)
  {
    v107 = *(_QWORD *)(v100 + 16);
    v108 = v53;
    swift_bridgeObjectRetain();
    v54 = Text.init<A>(_:)(&v107, &type metadata for String, v93);
    v56 = v55;
    v57 = v51;
    v59 = v58;
    v61 = v60 & 1;
    LODWORD(v107) = static HierarchicalShapeStyle.secondary.getter(v54);
    ((void (*)(char *, _QWORD, uint64_t))v102)(v41, KeyPath, v39);
    v62 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v103, v41);
    v43(v41, v39);
    v63 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v107, v62 & 1, v54, v56, v61, v59, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v102 = v64;
    v103 = v63;
    v100 = v65;
    v67 = v66 & 1;
    sub_100055BAC(v54, v56, v61);
    v68 = v59;
    v51 = v57;
    swift_bridgeObjectRelease(v68);
    KeyPath = swift_getKeyPath(&unk_100EB7AE8);
    v98 = static Font.subheadline.getter(KeyPath);
    v99 = (void (*)(char *, uint64_t))swift_getKeyPath(&unk_100EB78E8);
    LOBYTE(v56) = static Edge.Set.top.getter(v99);
    v69 = EdgeInsets.init(_all:)(1.0);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v76 = v56;
    v77 = 1;
  }
  else
  {
    v102 = 0;
    v103 = 0;
    v100 = 0;
    KeyPath = 0;
    v67 = 0;
    v77 = 0;
    v98 = 0;
    v99 = 0;
    v76 = 0;
    v69 = 0.0;
    v71 = 0;
    v73 = 0;
    v75 = 0;
  }
  v96 = v67;
  LOBYTE(v107) = v51 & 1;
  v78 = v105;
  v79 = v106;
  *(_QWORD *)a2 = v105;
  v80 = v78;
  v81 = v104;
  *(_QWORD *)(a2 + 8) = v104;
  v82 = v81;
  *(_BYTE *)(a2 + 16) = v51 & 1;
  v83 = v51 & 1;
  LODWORD(v97) = v51 & 1;
  v84 = v103;
  *(_QWORD *)(a2 + 24) = v79;
  *(_QWORD *)(a2 + 32) = v84;
  v85 = v99;
  v86 = v100;
  *(_QWORD *)(a2 + 40) = v100;
  *(_QWORD *)(a2 + 48) = v67;
  v87 = KeyPath;
  *(_QWORD *)(a2 + 56) = v102;
  *(_QWORD *)(a2 + 64) = v87;
  *(_QWORD *)(a2 + 72) = v77;
  *(_QWORD *)(a2 + 80) = 0;
  v88 = v98;
  *(_QWORD *)(a2 + 88) = v85;
  *(_QWORD *)(a2 + 96) = v88;
  *(_QWORD *)(a2 + 104) = v76;
  *(double *)(a2 + 112) = v69;
  *(_QWORD *)(a2 + 120) = v71;
  *(_QWORD *)(a2 + 128) = v73;
  *(_QWORD *)(a2 + 136) = v75;
  *(_BYTE *)(a2 + 144) = 0;
  v94 = v76;
  v95 = v69;
  v93 = v71;
  sub_100055BBC(v80, v82, v83);
  swift_bridgeObjectRetain();
  v89 = v102;
  v90 = v103;
  LOBYTE(v79) = v96;
  sub_1003AE130(v103, v86, v96, (uint64_t)v102);
  sub_1003AE18C(v90, v86, v79, (uint64_t)v89);
  sub_100055BAC(v105, v104, v97);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v106).n128_u64[0];
  return result;
}

double sub_1003AAA98@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[9];
  char v11;
  _BYTE v12[152];

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_1003AA574(v2, (uint64_t)v10);
  *(_OWORD *)&v12[119] = v10[7];
  *(_OWORD *)&v12[103] = v10[6];
  *(_OWORD *)&v12[55] = v10[3];
  *(_OWORD *)&v12[39] = v10[2];
  *(_OWORD *)&v12[135] = v10[8];
  v12[151] = v11;
  *(_OWORD *)&v12[71] = v10[4];
  *(_OWORD *)&v12[87] = v10[5];
  *(_OWORD *)&v12[7] = v10[0];
  *(_OWORD *)&v12[23] = v10[1];
  v5 = *(_OWORD *)&v12[112];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v12[96];
  *(_OWORD *)(a2 + 129) = v5;
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v12[128];
  v6 = *(_OWORD *)&v12[48];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v12[32];
  *(_OWORD *)(a2 + 65) = v6;
  v7 = *(_OWORD *)&v12[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v12[64];
  *(_OWORD *)(a2 + 97) = v7;
  result = *(double *)v12;
  v9 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v12;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 161) = *(_QWORD *)&v12[144];
  *(_OWORD *)(a2 + 33) = v9;
  return result;
}

uint64_t sub_1003AAB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[6];

  v60 = a1;
  v61 = a3;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 - 8) + 64);
  v58 = *(_QWORD *)(a2 - 8);
  v59 = v5;
  __chkstk_darwin(a1);
  v57 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v46 = *(_QWORD *)(v62 - 8);
  v7 = v46;
  __chkstk_darwin(v62);
  v56 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9, v10, &unk_100F9DB70, &unk_100F9DBA0);
  v12 = swift_getAssociatedTypeWitness(255, v9, v10, &unk_100F9DB70, &unk_100F9DBA8);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v9, v10, AssociatedTypeWitness, &unk_100F9DB70, &unk_100F9DB78);
  v14 = swift_getAssociatedConformanceWitness(v9, v10, v12, &unk_100F9DB70, &unk_100F9DB88);
  v15 = swift_getAssociatedConformanceWitness(v9, v10, v12, &unk_100F9DB70, &unk_100F9DB90);
  v67[0] = AssociatedTypeWitness;
  v67[1] = v12;
  v67[2] = AssociatedConformanceWitness;
  v67[3] = v14;
  v67[4] = v15;
  v16 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)v67);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v16);
  v48 = v16;
  v18 = WitnessTable;
  v49 = WitnessTable;
  v20 = type metadata accessor for SourcedPlaybackIntent(255, v16, WitnessTable, v19);
  v21 = type metadata accessor for Optional(0, v20);
  v54 = *(_QWORD *)(v21 - 8);
  v55 = v21;
  __chkstk_darwin(v21);
  v45 = (uint64_t)&v45 - v22;
  v23 = swift_getWitnessTable(&unk_100EB7A44, a2);
  v24 = type metadata accessor for _ViewModifier_Content(255, a2, v23);
  v51 = type metadata accessor for PlaybackSelection(255, v16, v18, v25);
  v52 = type metadata accessor for ModifiedContent(255, v24, v51);
  v26 = type metadata accessor for _ConditionalContent(0, v52, v24);
  v53 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v47 = (uint64_t)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v28);
  v50 = (uint64_t)&v45 - v30;
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 88))(v10, v9, v29);
  v31 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v56, v3 + *(int *)(a2 + 36), v62);
  v33 = v57;
  v32 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v3, a2);
  v34 = *(unsigned __int8 *)(v32 + 80);
  v35 = (v34 + 32) & ~v34;
  v36 = swift_allocObject(&unk_1010C2648, v35 + v59, v34 | 7);
  *(_QWORD *)(v36 + 16) = v10;
  *(_QWORD *)(v36 + 24) = v9;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v36 + v35, v33, a2);
  v37 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v24);
  v38 = v47;
  v39 = v45;
  View.enqueueOnTap<A>(_:playabilityStatus:onSelection:)(v45, v31, (uint64_t)sub_1003AE290, v36, v24, v48, v37, v49, v47);
  v40 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v46 + 8))(v31, v62, v40);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v39, v55);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v51);
  v65 = v37;
  v66 = v41;
  v63 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v52);
  v64 = v37;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v26);
  v42 = v50;
  sub_10081EB14(v38, v26, v50);
  v43 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v43(v38, v26);
  sub_1000EA744(v42, v26, v61);
  return ((uint64_t (*)(uint64_t, uint64_t))v43)(v42, v26);
}

uint64_t sub_1003AAFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  char *v51;

  v5 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v5);
  v50 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for MetricsEvent.Click(0);
  v14 = __chkstk_darwin(v13);
  v51 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 64))(a2, a3, v14);
  v47 = v17;
  v48 = v16;
  v18 = type metadata accessor for URL(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v49 = v12;
  v19(v12, 1, 1, v18);
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 96);
  v21 = v20(a2, a3);
  if (v21)
  {
    v22 = (void *)v21;
    v23 = JSComponentController.pageIdentifier.getter();
    v45 = v24;
    v46 = v23;

  }
  else
  {
    v45 = 0xE000000000000000;
    v46 = 0;
  }
  v25 = v20(a2, a3);
  if (v25)
  {
    v26 = (void *)v25;
    v27 = JSComponentController.pageType.getter();
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0xE000000000000000;
  }
  v30 = v20(a2, a3);
  if (v30)
  {
    v31 = (void *)v30;
    JSComponentController.pageURL.getter(v9);

  }
  else
  {
    v19(v9, 1, 1, v18);
  }
  v32 = (uint64_t)v51;
  v33 = v20(a2, a3);
  if (v33)
  {
    v34 = (void *)v33;
    v35 = JSComponentController.pageDetails.getter();

  }
  else
  {
    v35 = 0;
  }
  v36 = v50;
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v46, v45, v27, v29, (uint64_t)v9, v35, 0, 0, v50);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v48, v47, 20, 24, (uint64_t)v49, 0, 0, 9, v32, 0, 0, 0xFF00u, v36, 0);
  v37 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  v38 = v20(a2, a3);
  if (v38)
  {
    v39 = (void *)v38;
    v40 = JSComponentController.pageIdentifier.getter();
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))((swift_isaMask & *v37) + 0xB8))(v32, v40, v42, 2, 0, 0);

  swift_bridgeObjectRelease(v42);
  return sub_10005B748(v32, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_1003AB2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for PlaybackRowModifier(0, a3, a4, v9) + 36);
  v11 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
}

uint64_t type metadata accessor for ContainerTrackRow.AccessibilityTrackRowFrame(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ContainerTrackRow.AccessibilityTrackRowFrame);
}

uint64_t sub_1003AB378()
{
  return sub_1003AB508((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003A4964);
}

uint64_t sub_1003AB388()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[7];
  v7 = v0[8];
  v10 = v0[2];
  v1 = v10;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  type metadata accessor for ContainerTrackRow(0, (uint64_t)&v10);
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v8 = type metadata accessor for ContainerTrackRow(0, (uint64_t)&v10);
  return sub_1003A34E0(0, v8);
}

uint64_t sub_1003AB428()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003AB458()
{
  return 16;
}

__n128 sub_1003AB464(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1003AB478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFA70;
  if (!qword_1011AFA70)
  {
    v1 = sub_100044B54(&qword_1011AFA68);
    sub_100318590();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFA70);
  }
  return result;
}

uint64_t sub_1003AB4FC()
{
  return sub_1003AB508((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003A6178);
}

uint64_t sub_1003AB508(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

unint64_t sub_1003AB540()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011AFA78;
  if (!qword_1011AFA78)
  {
    v1 = sub_100044B54(&qword_1011AFA40);
    v2[0] = &type metadata for Color;
    v2[1] = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFA78);
  }
  return result;
}

unint64_t sub_1003AB5D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011AFA80;
  if (!qword_1011AFA80)
  {
    v1 = sub_100044B54(&qword_1011AFA50);
    v2[0] = sub_100044B54(&qword_1011AFA40);
    v2[1] = sub_1003AB540();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    sub_100049F28((unint64_t *)&qword_1011AFA88, &qword_1011AFA90, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFA80);
  }
  return result;
}

uint64_t sub_1003AB67C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1003A993C(v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_1003AB694()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t WitnessTable;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  int *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  unsigned int (*v87)(char *, uint64_t);
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v1 = v0[3];
  v4 = v0[4];
  v3 = v0[5];
  v6 = v0[6];
  v5 = v0[7];
  v7 = v0[8];
  v92 = v0[2];
  v2 = v92;
  v93 = v1;
  v94 = v4;
  v95 = v3;
  v96 = v6;
  v97 = v5;
  v98 = v7;
  v8 = (int *)type metadata accessor for ContainerTrackRow(0, (uint64_t)&v92);
  v9 = *((_QWORD *)v8 - 1);
  v86 = v0;
  v84 = *(_QWORD *)(v9 + 64);
  v85 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v10 = (char *)v0 + v85;
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 1));
  v92 = v2;
  v93 = v1;
  v94 = v4;
  v95 = v3;
  v79 = v3;
  v96 = v6;
  v97 = v5;
  v98 = v7;
  v11 = (int *)type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v92);
  v82 = *(_QWORD *)(v1 - 8);
  v90 = v1;
  v83 = *(void (**)(char *, uint64_t))(v82 + 8);
  v83(&v10[v11[19]], v1);
  v80 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v80(&v10[v11[20]], v2);
  v12 = &v10[v11[21]];
  v91 = type metadata accessor for ArtworkImage.ViewModel(0);
  v89 = *(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v91 - 8) + 48);
  if (!v89(v12, 1))
  {
    v13 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = &v12[*(int *)(v91 + 20)];
    v15 = type metadata accessor for Artwork.CropStyle(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  v17 = &v10[v11[24]];
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v87 = *(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
  v88 = v18;
  if (!v87(v17, 10))
  {
    v19 = type metadata accessor for Playlist.Variant(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[25] + 8]);
  swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[26] + 8]);
  if (*(_QWORD *)&v10[v11[29]])
    swift_release();
  v21 = &v10[v11[30]];
  v22 = type metadata accessor for ContentRating(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  v24 = &v10[v11[31]];
  v25 = type metadata accessor for MusicFavoriteStatus(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
  v27 = &v10[v11[32]];
  v28 = type metadata accessor for GenericMusicItem(0);
  v29 = *(_QWORD *)(v28 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
  v30 = &v10[v11[33]];
  v92 = v2;
  v93 = v90;
  v94 = v4;
  v95 = v6;
  v96 = v5;
  v31 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&v92);
  WitnessTable = swift_getWitnessTable(&unk_100EAF138, v31);
  v34 = type metadata accessor for SourcedPlaybackIntent(0, v31, WitnessTable, v33);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v30, 1, v34))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v30, v31);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v61 = type metadata accessor for MusicItemCollection(0, v90, *(_QWORD *)(v79 + 8));
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v30, v61);
        break;
      case 1:
        v80(v30, v2);
        break;
      case 0:
        v80(v30, v2);
        v38 = type metadata accessor for Library.Context(255);
        v39 = &v30[*(int *)(swift_getTupleTypeMetadata2(0, v2, v38, " context ", 0) + 48)];
        swift_release();
        v81 = (int *)v38;
        v40 = &v39[*(int *)(v38 + 20)];
        v41 = type metadata accessor for Album(0);
        v42 = *(_QWORD *)(v41 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
          (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
        v43 = &v39[v81[6]];
        v44 = type metadata accessor for Artist(0);
        v45 = *(_QWORD *)(v44 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
          (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
        v46 = &v39[v81[7]];
        v47 = type metadata accessor for Composer(0);
        v48 = *(_QWORD *)(v47 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
          (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
        v49 = &v39[v81[8]];
        v50 = type metadata accessor for Genre(0);
        v51 = *(_QWORD *)(v50 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
          (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
        v52 = &v39[v81[9]];
        v53 = type metadata accessor for Playlist(0);
        v54 = *(_QWORD *)(v53 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
          (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
        v55 = &v39[v81[10]];
        v56 = type metadata accessor for TVShow(0);
        v57 = *(_QWORD *)(v56 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
          (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v56);
        v58 = &v39[v81[11]];
        v59 = type metadata accessor for TVSeason(0);
        v60 = *(_QWORD *)(v59 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
          (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
        swift_bridgeObjectRelease(*(_QWORD *)&v39[v81[15] + 8]);
        swift_bridgeObjectRelease(*(_QWORD *)&v39[v81[16]]);
        break;
    }
    v62 = &v30[*(int *)(v34 + 36)];
    v63 = type metadata accessor for PlaybackEnqueueMode(0, v90, v36, v37);
    if (swift_getEnumCaseMultiPayload(v62, v63) == 1
      || !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v62, 1, v90))
    {
      v83(v62, v90);
    }
  }
  swift_release();
  swift_release();
  swift_release();

  v64 = &v10[v11[38]];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v89)(v64, 1, v91))
  {
    v65 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
    v66 = &v64[*(int *)(v91 + 20)];
    v67 = type metadata accessor for Artwork.CropStyle(0);
    v68 = *(_QWORD *)(v67 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
  }
  v69 = &v64[*(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 20)];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v69, 10, v88))
  {
    v70 = type metadata accessor for Playlist.Variant(0);
    v71 = *(_QWORD *)(v70 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v70);
  }
  v72 = (int *)type metadata accessor for ContextualPreview.Data(0);
  swift_bridgeObjectRelease(*(_QWORD *)&v64[v72[5] + 8]);
  swift_bridgeObjectRelease(*(_QWORD *)&v64[v72[6] + 8]);
  swift_bridgeObjectRelease(*(_QWORD *)&v64[v72[7] + 8]);
  swift_release();

  sub_1000A4224(*(id *)&v10[v8[21]], v10[v8[21] + 8]);
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)&v10[v8[24]], *(_QWORD *)&v10[v8[24] + 8]);
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)&v10[v8[28]], *(_QWORD *)&v10[v8[28] + 8], v10[v8[28] + 16]);
  sub_1000A4240(*(_QWORD *)&v10[v8[29]], *(_QWORD *)&v10[v8[29] + 8], v10[v8[29] + 16]);
  v73 = &v10[v8[30]];
  v74 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v73, v74) == 1)
  {
    v75 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v73, v75);
  }
  else
  {
    swift_release();
  }
  v76 = &v10[v8[31]];
  v77 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
  sub_100007E8C(&qword_1011A03B8);
  swift_release();
  return swift_deallocObject(v86, v85 + v84);
}

uint64_t sub_1003ABF84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[7];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v12[0] = v1[2];
  v3 = v12[0];
  v12[1] = v4;
  v12[2] = v5;
  v12[3] = v6;
  v12[4] = v7;
  v12[5] = v8;
  v12[6] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContainerTrackRow(0, (uint64_t)v12) - 8) + 80);
  return sub_1003A99E4(a1, (uint64_t)v1 + ((v10 + 72) & ~v10), v3, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_1003AC02C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFAA0;
  if (!qword_1011AFAA0)
  {
    v1 = sub_100044B54(&qword_1011AFA58);
    sub_1003AB478();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFAA0);
  }
  return result;
}

unint64_t sub_1003AC0B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFAB0;
  if (!qword_1011AFAB0)
  {
    v1 = sub_100044B54(&qword_1011A2C58);
    sub_100049F28(&qword_1011AFAB8, &qword_1011A2C50, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFAB0);
  }
  return result;
}

uint64_t sub_1003AC134()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_1003AC154(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ButtonBorderShape(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues._buttonBorderShape.setter(v4);
}

_QWORD *sub_1003AC1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  __n128 v45;
  uint64_t v46;
  Swift::String v47;
  uint64_t v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v16 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for ContentRating(0);
  v19 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v58 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v59 = (char *)&v57 - v22;
  v62 = a2;
  v63 = a3;
  v64 = a4;
  v65 = a5;
  v66 = a6;
  v67 = a7;
  v68 = a8;
  v23 = type metadata accessor for ContainerTrackRow.ViewModel(0, (uint64_t)&v62);
  v24 = *(int *)(v23 + 100);
  v60 = a1;
  v25 = (uint64_t *)(a1 + v24);
  v26 = *(_QWORD *)(a1 + v24);
  v27 = v25[1];
  v57 = v25;
  v62 = v26;
  v63 = v27;
  v28 = sub_100055B68();
  swift_bridgeObjectRetain();
  v29 = Text.init<A>(_:)(&v62, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = sub_100432428(0, 1, 1, _swiftEmptyArrayStorage);
  v38 = v36[2];
  v37 = v36[3];
  if (v38 >= v37 >> 1)
    v36 = sub_100432428((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
  v36[2] = v38 + 1;
  v39 = &v36[4 * v38];
  v39[4] = v29;
  v39[5] = v31;
  *((_BYTE *)v39 + 48) = v33 & 1;
  v39[7] = v35;
  sub_10004A160(v60 + *(int *)(v23 + 120), (uint64_t)v18, &qword_1011B8D50);
  v40 = v61;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v61) == 1)
  {
    sub_10004FF60((uint64_t)v18, &qword_1011B8D50);
  }
  else
  {
    v41 = v59;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v59, v18, v40);
    v42 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v58, enum case for ContentRating.explicit(_:), v40);
    v43 = static ContentRating.== infix(_:_:)(v41, v42);
    v44 = *(void (**)(char *, uint64_t))(v19 + 8);
    v44(v42, v40);
    if ((v43 & 1) != 0)
    {
      v46 = v57[1];
      v62 = *v57;
      v63 = v46;
      swift_bridgeObjectRetain();
      v47._countAndFlagsBits = 8236;
      v47._object = (void *)0xE200000000000000;
      String.append(_:)(v47);
      if (qword_10119BE50 != -1)
        swift_once(&qword_10119BE50, sub_1002F406C);
      v48 = qword_10124CD50;
      v49 = *(void **)algn_10124CD58;
      swift_bridgeObjectRetain();
      v50._countAndFlagsBits = v48;
      v50._object = v49;
      String.append(_:)(v50);
      swift_bridgeObjectRelease(v49);
      v51 = v62;
      v52 = v63;
      v53 = v36[2];
      v54 = v36[3];
      swift_bridgeObjectRetain();
      if (v53 >= v54 >> 1)
        v36 = sub_100432428((_QWORD *)(v54 > 1), v53 + 1, 1, v36);
      v36[2] = v53 + 1;
      v55 = &v36[4 * v53];
      v55[4] = v51;
      v55[5] = v52;
      *((_BYTE *)v55 + 48) = 0;
      v55[7] = _swiftEmptyArrayStorage;
      v45 = swift_bridgeObjectRelease(v52);
    }
    ((void (*)(char *, uint64_t, __n128))v44)(v41, v40, v45);
  }
  return v36;
}

unint64_t sub_1003AC520()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFAC0;
  if (!qword_1011AFAC0)
  {
    v1 = sub_100044B54(&qword_1011A05B8);
    sub_1003AC584();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFAC0);
  }
  return result;
}

unint64_t sub_1003AC584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFAC8;
  if (!qword_1011AFAC8)
  {
    v1 = sub_100044B54(&qword_1011A05E8);
    sub_1003AC608();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFAC8);
  }
  return result;
}

unint64_t sub_1003AC608()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  ValueMetadata *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  result = qword_1011AFAD0;
  if (!qword_1011AFAD0)
  {
    v1 = sub_100044B54(&qword_1011A05A0);
    v2 = sub_100044B54(&qword_1011A05B0);
    v3 = type metadata accessor for BorderlessButtonStyle(255);
    v4 = sub_100044B54(&qword_1011A05A8);
    v5 = type metadata accessor for ButtonMenuStyle(255);
    v10 = &type metadata for ActionType;
    v11 = sub_100044B54(&qword_1011A05F8);
    v12 = sub_1000E3EE4();
    v13 = sub_1000E41D0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v7 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v10 = (ValueMetadata *)v4;
    v11 = v5;
    v12 = OpaqueTypeConformance2;
    v13 = v7;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v9 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v10 = (ValueMetadata *)v2;
    v11 = v3;
    v12 = v8;
    v13 = v9;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFAD0);
  }
  return result;
}

uint64_t sub_1003AC7A0()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

unint64_t sub_1003AC7CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AFB90;
  if (!qword_1011AFB90)
  {
    v1 = sub_100044B54(&qword_1011AFB88);
    sub_1003ACA30((unint64_t *)&qword_1011A53F8, &qword_1011A5400);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFB90);
  }
  return result;
}

unint64_t sub_1003AC850()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011AFBA0;
  if (!qword_1011AFBA0)
  {
    v1 = sub_100044B54(&qword_1011AFB38);
    v2[0] = &type metadata for Image;
    v2[1] = &type metadata for HierarchicalShapeStyle;
    v2[2] = &protocol witness table for Image;
    v2[3] = &protocol witness table for HierarchicalShapeStyle;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.playableForegroundStyle<A>(_:isPlayable:)>>, 1);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011AFBA0);
  }
  return result;
}

unint64_t sub_1003AC90C()
{
  unint64_t result;

  result = qword_1011AFBB0;
  if (!qword_1011AFBB0)
  {
    result = swift_getWitnessTable(&unk_100EC34F0, &type metadata for ContainerDetailPlaybackIndicatorView);
    atomic_store(result, (unint64_t *)&qword_1011AFBB0);
  }
  return result;
}

unint64_t sub_1003AC950()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011AFBF0[0];
  if (!qword_1011AFBF0[0])
  {
    v1 = sub_100044B54(&qword_1011AFBD0);
    v2[0] = sub_100044B54(&qword_1011C9470);
    v2[1] = &type metadata for HierarchicalShapeStyle;
    v2[2] = sub_1003ACA30((unint64_t *)&qword_1011A0658, &qword_1011C9470);
    v2[3] = &protocol witness table for HierarchicalShapeStyle;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.playableForegroundStyle<A>(_:isPlayable:)>>, 1);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, qword_1011AFBF0);
  }
  return result;
}

uint64_t sub_1003ACA30(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003ACA8C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for MusicPlayer.PlayabilityStatus(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1003ACB14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain(v15);
  }
  else
  {
    v16 = v8;
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_1003ACBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + a1 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_1003ACC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1003ACCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1003ACD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1003ACD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1003ACE08(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = (v13 & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, v8);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_1003ACFA0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v12 = 0;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = &dword_100000004;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = &_mh_execute_header.magic + 1;
  }
  if (v10 < a2)
  {
    v13 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t *sub_1003AD1BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for ContentRating(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C(&qword_1011B8D50);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 28);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t sub_1003AD300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ContentRating(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 28);
  v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *sub_1003AD3A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ContentRating(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *sub_1003AD4B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ContentRating(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *sub_1003AD634(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ContentRating(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 28);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *sub_1003AD72C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for ContentRating(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_100007E8C(&qword_1011B8D50);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(a3 + 28);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_1003AD888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003AD894);
}

uint64_t sub_1003AD894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011B8D50);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1003AD938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003AD944);
}

uint64_t sub_1003AD944(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011B8D50);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1003AD9E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_100EB76B8;
  v6[1] = &unk_100EB7638;
  sub_1000E3A44(319, &qword_1011AF918, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for MusicPlayer.PlayabilityStatus(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_1003ADA94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[3];
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = sub_100044B54(&qword_1011AF9F0);
  v4 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v4;
  v13[2] = *(_OWORD *)(a1 + 32);
  v14 = v2;
  v5 = type metadata accessor for ContainerHeaderRow.ViewModel(255, (uint64_t)v13);
  WitnessTable = swift_getWitnessTable(&unk_100EB779C, v5);
  v8 = type metadata accessor for PlaybackRowModifier(255, v5, WitnessTable, v7);
  v9 = type metadata accessor for ModifiedContent(255, v3, v8);
  v10 = sub_100044B54(&qword_1011A2C48);
  v11 = sub_10005610C(&qword_1011AF9F8, &qword_1011A2C48, (void (*)(void))sub_1003AA4F0);
  *(_QWORD *)&v13[0] = v10;
  *((_QWORD *)&v13[0] + 1) = v11;
  swift_getOpaqueTypeConformance2(v13, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  swift_getWitnessTable(&unk_100EB7A44, v8);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
}

uint64_t sub_1003ADBA8(uint64_t *a1)
{
  uint64_t v1;
  ValueMetadata *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  ValueMetadata *v57;
  uint64_t v58;
  uint64_t v59;
  ValueMetadata *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = *a1;
  v2 = (ValueMetadata *)a1[1];
  v57 = v2;
  v58 = *a1;
  v3 = a1[2];
  v4 = a1[3];
  v55 = v4;
  v56 = v3;
  v5 = a1[4];
  v6 = a1[5];
  v53 = v6;
  v54 = v5;
  v7 = a1[6];
  v52 = v7;
  v51 = sub_100044B54(&qword_1011AFA10);
  v8 = sub_100044B54((uint64_t *)&unk_1011C72B0);
  v9 = sub_100044B54(&qword_1011AFA18);
  v59 = v1;
  v60 = v2;
  v61 = v3;
  v62 = v4;
  v63 = v5;
  v64 = v6;
  v65 = v7;
  v10 = type metadata accessor for ContainerTrackRow.ViewModel(255, (uint64_t)&v59);
  WitnessTable = swift_getWitnessTable(&unk_100EB7748, v10);
  v13 = type metadata accessor for PlaybackRowModifier(255, v10, WitnessTable, v12);
  v14 = type metadata accessor for ModifiedContent(255, v9, v13);
  v15 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v16 = type metadata accessor for ModifiedContent(255, v14, v15);
  v17 = sub_100044B54(&qword_1011A05B8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v16, v17, 0, 0);
  v19 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v20 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v21 = type metadata accessor for HStack(255, v19, v20);
  v22 = type metadata accessor for ModifiedContent(255, v21, &type metadata for _PaddingLayout);
  v23 = type metadata accessor for ModifiedContent(255, v22, &type metadata for _FlexFrameLayout);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v21);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  v59 = v23;
  v60 = (ValueMetadata *)v24;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v59 = v23;
  v60 = (ValueMetadata *)v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v59 = OpaqueTypeMetadata2;
  v60 = (ValueMetadata *)OpaqueTypeConformance2;
  v27 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 0);
  v28 = sub_100044B54(&qword_1011AFA20);
  v29 = type metadata accessor for ModifiedContent(255, v27, v28);
  v30 = type metadata accessor for ContextualPreview(255);
  v59 = OpaqueTypeMetadata2;
  v60 = (ValueMetadata *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  sub_100049F28(&qword_1011AFA28, &qword_1011AFA20, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v32 = sub_1000E3EE4();
  v33 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
  v59 = v29;
  v60 = &type metadata for ActionType;
  v61 = v30;
  v62 = v31;
  v63 = v32;
  v64 = v33;
  v34 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 0);
  v59 = v29;
  v60 = &type metadata for ActionType;
  v61 = v30;
  v62 = v31;
  v63 = v32;
  v64 = v33;
  v35 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v59 = v34;
  v60 = (ValueMetadata *)v35;
  v36 = swift_getOpaqueTypeMetadata2(255, &v59, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 0);
  v37 = sub_100049F28(&qword_1011AFA30, (uint64_t *)&unk_1011C72B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v59 = v34;
  v60 = (ValueMetadata *)v35;
  v38 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
  v59 = v8;
  v60 = (ValueMetadata *)v36;
  v61 = v37;
  v62 = v38;
  v39 = type metadata accessor for SubscriptionView(255, &v59);
  v40 = swift_getTupleTypeMetadata2(255, v51, v39, 0, 0);
  v41 = type metadata accessor for TupleView(255, v40);
  v42 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v41);
  v43 = type metadata accessor for HStack(255, v41, v42);
  v44 = type metadata accessor for ModifiedContent(255, v43, &type metadata for _PaddingLayout);
  v59 = v58;
  v60 = v57;
  v61 = v56;
  v62 = v55;
  v63 = v54;
  v64 = v53;
  v65 = v52;
  v45 = type metadata accessor for ContainerTrackRow.AccessibilityTrackRowFrame(255, (uint64_t)&v59);
  v46 = type metadata accessor for ModifiedContent(255, v44, v45);
  v47 = sub_100044B54(&qword_1011AD9B0);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v43);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v44);
  swift_getWitnessTable(&unk_100EB79F4, v45);
  v48 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
  v49 = sub_100049F28(&qword_1011ADA10, &qword_1011AD9B0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v59 = v46;
  v60 = (ValueMetadata *)v47;
  v61 = v48;
  v62 = v49;
  return swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
}

uint64_t sub_1003AE0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003AE0AC(a1, a2, a3, (uint64_t)&unk_100F9E080);
}

uint64_t sub_1003AE0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v5;
  _OWORD v7[3];
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 32);
  v7[0] = *(_OWORD *)(a2 + 16);
  v7[1] = v5;
  v7[2] = *(_OWORD *)(a2 + 48);
  v8 = v4;
  return swift_getOpaqueTypeConformance2(v7, a4, 1);
}

uint64_t sub_1003AE0EC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100F9DFFC, 1);
}

uint64_t sub_1003AE120(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9DFB4, 1);
}

double sub_1003AE130(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100055BBC(a1, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

double sub_1003AE18C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100055BAC(a1, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(a4);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1003AE1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for PlaybackRowModifier(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v8, v5);
  v11 = v10 + *(int *)(v6 + 36);
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject(v4, v9);
}

uint64_t sub_1003AE290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaybackRowModifier(0, v5, v6, a4) - 8) + 80);
  return sub_1003AAFCC(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_1003AE2E0()
{
  return sub_100049F28(&qword_1011AFD90, &qword_1011AFD98, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1003AE30C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for PlaybackRowModifier(255, *a1, v5, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EB7A44, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5, v4, &unk_100F9DB70, &unk_100F9DBA0);
  v17 = swift_getAssociatedTypeWitness(255, v5, v4, &unk_100F9DB70, &unk_100F9DBA8);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v4, AssociatedTypeWitness, &unk_100F9DB70, &unk_100F9DB78);
  v19 = swift_getAssociatedConformanceWitness(v5, v4, v17, &unk_100F9DB70, &unk_100F9DB88);
  v20 = swift_getAssociatedConformanceWitness(v5, v4, v17, &unk_100F9DB70, &unk_100F9DB90);
  v9 = type metadata accessor for ContainerPlaybackSource(255, (uint64_t)&AssociatedTypeWitness);
  v10 = swift_getWitnessTable(&unk_100EAF138, v9);
  v12 = type metadata accessor for PlaybackSelection(255, v9, v10, v11);
  v13 = type metadata accessor for ModifiedContent(255, v8, v12);
  v14 = type metadata accessor for _ConditionalContent(255, v13, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v12);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v14);
}

uint64_t sub_1003AE4E0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[3];
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v2;
  v10[2] = *(_OWORD *)(a1 + 32);
  v11 = v1;
  v3 = type metadata accessor for ContainerTrackRow.AccessibilityTrackRowFrame(255, (uint64_t)v10);
  WitnessTable = swift_getWitnessTable(&unk_100EB79F4, v3);
  v5 = type metadata accessor for _ViewModifier_Content(255, v3, WitnessTable);
  v6 = sub_100044B54(&qword_1011A49B0);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v5);
  sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  *(_QWORD *)&v10[0] = v7;
  *((_QWORD *)&v10[0] + 1) = v8;
  return swift_getOpaqueTypeConformance2(v10, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_1003AE610(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain(a2);
  return AnyHashable.init<A>(_:)(v3, &type metadata for String, &protocol witness table for String);
}

void sub_1003AE65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_100048ABC((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_1005ED52C(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v9;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_10004FF60(a1, &qword_10119DCC0);
    sub_1003AED84(a2, a3, v10);
    swift_bridgeObjectRelease(a3);
    sub_10004FF60((uint64_t)v10, &qword_10119DCC0);
  }
}

double sub_1003AE730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];

  v6 = v5;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_10004FF60(a1, (uint64_t *)&unk_1011D1360);
    sub_1003AEE74(a2, a3, a4, a5, (uint64_t)v15);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a5);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011D1360);
  }
  else
  {
    sub_100065228(a1, (uint64_t)v15, &qword_1011B8D70);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v14 = *v5;
    *v5 = 0x8000000000000000;
    sub_1005ED7D0((uint64_t)v15, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
    v13 = *v5;
    *v6 = v14;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v13);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a5).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003AE83C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  _OWORD v8[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_100048ABC((_OWORD *)a1, v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v7 = *v2;
    *v2 = 0x8000000000000000;
    sub_1005EE030(v8, a2, isUniquelyReferenced_nonNull_native);
    v5 = *v2;
    *v2 = v7;
    swift_bridgeObjectRelease(v5);
    return sub_10004FF2C(a2);
  }
  else
  {
    sub_10004FF60(a1, &qword_10119DCC0);
    sub_1003AF064(a2, v8);
    sub_10004FF2C(a2);
    return sub_10004FF60((uint64_t)v8, &qword_10119DCC0);
  }
}

BOOL sub_1003AE8F8(void **a1, void **a2)
{
  void *v2;
  void *v3;
  _BOOL8 result;
  BOOL v5;
  id v6;
  id v7;
  char v8;

  v2 = *a1;
  v3 = *a2;
  result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
    v6 = v2;
    v7 = v3;
    v8 = static NSObject.== infix(_:_:)(v6, v7);

    return v8 & 1;
  }
  return result;
}

void sub_1003AE984(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100007E8C(&qword_1011A14B0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v10 = sub_10004A07C(0, &qword_1011AFDC8, ICMediaUserState_ptr);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v10);
    swift_continuation_throwingResume(v3);
  }
}

void sub_1003AEA2C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100007E8C(&qword_1011A14B0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003AEAB8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124CE78);
  sub_100048B14(v0, (uint64_t)qword_10124CE78);
  return static Logger.music(_:)(0x746E756F636341, 0xE700000000000000);
}

uint64_t sub_1003AEB14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_10079C2C4(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1007A6C30();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v7);
  sub_1007AA830(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_1003AEC00(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain();
  v5 = sub_10079C5A4(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1007A6DE4();
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for SidebarMenu.Item(0);
  sub_1003B260C(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_1007AAA04(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_1003AECD0(char a1)
{
  uint64_t *v1;
  uint64_t *v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  v3 = a1 & 1;
  v4 = *v2;
  swift_bridgeObjectRetain();
  v5 = sub_10079C780(v3);
  v7 = v6;
  swift_bridgeObjectRelease(v4);
  if ((v7 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v9 = *v2;
  v13 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1007A71A8();
    v9 = v13;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v5);
  sub_1007AB01C(v5, v9);
  v11 = *v2;
  *v2 = v9;
  swift_bridgeObjectRelease(v11);
  return v10;
}

double sub_1003AED84@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain();
  v9 = sub_10079C1D4(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1007A7348();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_100048ABC((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_1007AB230(v9, v12);
    v13 = *v4;
    *v4 = v12;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_1003AEE74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = v5;
  v12 = *v6;
  swift_bridgeObjectRetain();
  v13 = sub_10079C32C(a1, a2, a3, a4);
  v15 = v14;
  swift_bridgeObjectRelease(v12);
  if ((v15 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
    v17 = *v6;
    v21 = *v6;
    *v6 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1007A7544();
      v17 = v21;
    }
    v18 = *(_QWORD *)(v17 + 48) + 32 * v13;
    v19 = *(_QWORD *)(v18 + 24);
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 8));
    swift_bridgeObjectRelease(v19);
    sub_100065228(*(_QWORD *)(v17 + 56) + 8 * v13, a5, &qword_1011B8D70);
    sub_1007AB404(v13, v17);
    v20 = *v6;
    *v6 = v17;
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    *(_QWORD *)a5 = 0;
  }
  *(_BYTE *)(a5 + 8) = (v15 & 1) == 0;
}

uint64_t sub_1003AEF88(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_10079C1D4(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1007A7C24();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1007AA65C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1003AF064@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_10079C294(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1007A879C();
      v10 = v13;
    }
    sub_10004FF2C(*(_QWORD *)(v10 + 48) + 40 * v7);
    sub_100048ABC((_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v7), a2);
    sub_1007ABBE8(v7, v10);
    v11 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1003AF14C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_10079CA8C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1007A8EAC();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for IndexPath(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1007ABF8C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1003AF224(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_10079CB24(a1);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1007A9288();
      v10 = v18;
    }
    v11 = (unsigned __int8 *)(*(_QWORD *)(v10 + 56) + 48 * v6);
    v12 = *v11;
    v16 = *(_OWORD *)(v11 + 24);
    v17 = *(_OWORD *)(v11 + 8);
    v13 = *((_QWORD *)v11 + 5);
    sub_1007AC22C(v6, v10);
    *v3 = v10;
    swift_bridgeObjectRelease();
    v15 = v16;
    v14 = v17;
  }
  else
  {
    v12 = 0;
    v13 = 0;
    v14 = 0uLL;
    v15 = 0uLL;
  }
  *(_QWORD *)a2 = v12;
  *(_OWORD *)(a2 + 8) = v14;
  *(_OWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 40) = v13;
}

uint64_t sub_1003AF318(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_10079C1D4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1007AA4A4();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1007AA65C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1003AF3E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2[29] = a1;
  v2[30] = a2;
  v3 = type metadata accessor for URLRequest(0);
  v2[31] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[32] = v4;
  v2[33] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119E460);
  v2[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v2[35] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[36] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[37] = swift_task_alloc(v8);
  v2[38] = swift_task_alloc(v8);
  return swift_task_switch(sub_1003AF4A0, 0, 0);
}

void sub_1003AF4A0()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  UIImage *v9;
  NSData *v10;
  NSData *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String_optional v22;
  Swift::String v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String_optional v33;
  id v34;
  id v35;
  id v36;
  id v37;
  Class isa;
  id v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;

  v1 = *(void **)(v0 + 240);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "urlForBagKey:", v2);

  if (!v3)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 56))(*(_QWORD *)(v0 + 272), 1, 1, *(_QWORD *)(v0 + 280));
    goto LABEL_6;
  }
  v5 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 280);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v3);

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v8(v7, v4, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) == 1)
  {
LABEL_6:
    sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_10119E460);
    v15 = sub_1003B25B8();
    swift_allocError(&type metadata for SocialProfileUpdater.Error, v15, 0, 0);
    *(_QWORD *)v16 = 0xD00000000000001BLL;
    *(_QWORD *)(v16 + 8) = 0x8000000100E37B50;
    *(_BYTE *)(v16 + 16) = 1;
    swift_willThrow(v17);
    v18 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 272);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v9 = *(UIImage **)(v0 + 232);
  v8(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280));
  v10 = UIImageJPEGRepresentation(v9, 0.8);
  if (v10)
  {
    v11 = v10;
    v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 312) = v12;
  *(_QWORD *)(v0 + 320) = v14;
  v21 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 16))(v21, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 280));
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v21, 0, 60.0);
  URLRequest.httpMethod.setter(1414745936, 0xE400000000000000);
  v22.value._countAndFlagsBits = 0x706A2F6567616D69;
  v22.value._object = (void *)0xEA00000000006765;
  v23._countAndFlagsBits = 0x2D746E65746E6F43;
  v23._object = (void *)0xEC00000065707954;
  URLRequest.setValue(_:forHTTPHeaderField:)(v22, v23);
  v24 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  v25 = objc_msgSend(v24, "UUIDString");

  if (v25)
  {
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "stringByAppendingPathExtension:", v26);

    if (v27)
    {
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0;
    }
    v31 = v0 + 16;
    v32._countAndFlagsBits = 0xD000000000000013;
    v32._object = (void *)0x8000000100E37B70;
    v33.value._countAndFlagsBits = v28;
    v33.value._object = v30;
    URLRequest.setValue(_:forHTTPHeaderField:)(v33, v32);
    swift_bridgeObjectRelease(v30);
    sub_1000A0168(v12, v14);
    URLRequest.httpBody.setter(v12, v14);
    sub_10004A07C(0, &qword_1011E8110, ICUserIdentity_ptr);
    v34 = static ICUserIdentity.active.getter();
    v35 = objc_msgSend(objc_allocWithZone((Class)ICStoreRequestContext), "initWithIdentity:", v34);
    *(_QWORD *)(v0 + 328) = v35;

    v36 = objc_allocWithZone((Class)ICStoreURLRequest);
    v37 = v35;
    isa = URLRequest._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend(v36, "initWithURLRequest:requestContext:", isa, v37);
    *(_QWORD *)(v0 + 336) = v39;

    sub_10004A07C(0, &qword_1011AFDC0, ICURLSessionManager_ptr);
    v40 = static ICURLSessionManager.musicSession.getter();
    *(_QWORD *)(v0 + 344) = v40;
    *(_QWORD *)(v0 + 56) = v0 + 224;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1003AF920;
    v41 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v42 = (_QWORD *)(v0 + 80);
    v42[1] = 0x40000000;
    v42[2] = sub_1003AE980;
    v42[3] = &unk_1010C2778;
    v42[4] = v41;
    objc_msgSend(v40, "enqueueUploadRequest:withCompletionHandler:", v39, v42);
    swift_continuation_await(v31, v43);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003AF920()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 352) = v1;
  if (v1)
    v2 = sub_1003AFC40;
  else
    v2 = sub_1003AF980;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003AF980()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(void **)(v0 + 224);

  v2 = objc_msgSend(v1, "parsedBodyDictionary");
  if (v2)
  {
    v3 = v2;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    *(_QWORD *)(v0 + 208) = 0x6E656B6F74;
    *(_QWORD *)(v0 + 216) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v0 + 208, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v5 = sub_10079C294(v0 + 120), (v6 & 1) != 0))
    {
      sub_10004FA40(*(_QWORD *)(v4 + 56) + 32 * v5, v0 + 160);
    }
    else
    {
      *(_OWORD *)(v0 + 160) = 0u;
      *(_OWORD *)(v0 + 176) = 0u;
    }
    swift_bridgeObjectRelease(v4);
    sub_10004FF2C(v0 + 120);
    if (*(_QWORD *)(v0 + 184))
    {
      if ((swift_dynamicCast(v0 + 192, v0 + 160, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v7 = *(void **)(v0 + 328);
        v8 = *(void **)(v0 + 336);
        v10 = *(_QWORD *)(v0 + 312);
        v9 = *(_QWORD *)(v0 + 320);
        v11 = *(_QWORD *)(v0 + 304);
        v29 = *(_QWORD *)(v0 + 288);
        v31 = *(_QWORD *)(v0 + 280);
        v33 = *(_QWORD *)(v0 + 296);
        v12 = *(_QWORD *)(v0 + 264);
        v35 = *(_QWORD *)(v0 + 272);
        v14 = *(_QWORD *)(v0 + 248);
        v13 = *(_QWORD *)(v0 + 256);

        sub_1000822B4(v10, v9);
        v16 = *(_QWORD *)(v0 + 192);
        v15 = *(_QWORD *)(v0 + 200);
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v11, v31);
        swift_task_dealloc(v11);
        swift_task_dealloc(v33);
        swift_task_dealloc(v35);
        swift_task_dealloc(v12);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v16, v15);
      }
    }
    else
    {
      sub_10004FF60(v0 + 160, &qword_10119DCC0);
    }
  }
  v19 = *(void **)(v0 + 328);
  v18 = *(void **)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 312);
  v30 = *(_QWORD *)(v0 + 320);
  v32 = *(_QWORD *)(v0 + 288);
  v34 = *(_QWORD *)(v0 + 280);
  v36 = *(_QWORD *)(v0 + 304);
  v21 = *(_QWORD *)(v0 + 256);
  v22 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 248);
  v24 = sub_1003B25B8();
  swift_allocError(&type metadata for SocialProfileUpdater.Error, v24, 0, 0);
  *(_OWORD *)v25 = xmmword_100EA93A0;
  *(_BYTE *)(v25 + 16) = 2;
  swift_willThrow((__n128)xmmword_100EA93A0);

  sub_1000822B4(v20, v30);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v34);
  v26 = *(_QWORD *)(v0 + 296);
  v28 = *(_QWORD *)(v0 + 264);
  v27 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003AFC40(__n128 a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v2 = *(void **)(v1 + 328);
  v3 = *(void **)(v1 + 336);
  v4 = *(_QWORD *)(v1 + 312);
  v5 = *(_QWORD *)(v1 + 320);
  v15 = *(_QWORD *)(v1 + 304);
  v16 = *(void **)(v1 + 344);
  v6 = *(_QWORD *)(v1 + 288);
  v14 = *(_QWORD *)(v1 + 280);
  v7 = *(_QWORD *)(v1 + 256);
  v8 = *(_QWORD *)(v1 + 264);
  v9 = *(_QWORD *)(v1 + 248);
  swift_willThrow(a1);

  sub_1000822B4(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v14);

  v10 = *(_QWORD *)(v1 + 296);
  v12 = *(_QWORD *)(v1 + 264);
  v11 = *(_QWORD *)(v1 + 272);
  swift_task_dealloc(*(_QWORD *)(v1 + 304));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003AFD10(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicCommon);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "dictionaryForBagKey:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

  if (!v5)
  {
    v8 = ICURLBagKeyAMPMusicAPIDomains;
    goto LABEL_13;
  }
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v7 = sub_100050E78(v6);
  swift_bridgeObjectRelease(v6);
  v8 = ICURLBagKeyAMPMusicAPIDomains;
  if (!v7)
  {
LABEL_13:
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v20 = v19;
    v21 = sub_1003B25B8();
    swift_allocError(&type metadata for SocialProfileUpdater.Error, v21, 0, 0);
    *(_QWORD *)v22 = v18;
    *(_QWORD *)(v22 + 8) = v20;
    *(_BYTE *)(v22 + 16) = 1;
    return swift_willThrow(v23);
  }
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyAMPMusicAPIDomains);
  v11 = v10;
  if (!*(_QWORD *)(v7 + 16) || (v12 = sub_10079C2C4(v9, v10), (v13 & 1) == 0))
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v7);
    goto LABEL_12;
  }
  sub_100051FEC(*(_QWORD *)(v7 + 56) + 40 * v12, (uint64_t)&v26);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v7);
  if (!*((_QWORD *)&v27 + 1))
  {
LABEL_12:
    sub_10004FF60((uint64_t)&v26, &qword_1011EAEC0);
    goto LABEL_13;
  }
  v14 = sub_100007E8C(qword_1011AFDE8);
  if ((swift_dynamicCast(&v25, &v26, &type metadata for AnyHashable, v14, 6) & 1) == 0)
    goto LABEL_13;
  v15 = v25;
  if (*(_QWORD *)(v25 + 16) && (v16 = sub_10079C2C4(0x746C7561666564, 0xE700000000000000), (v17 & 1) != 0))
  {
    sub_100051FEC(*(_QWORD *)(v15 + 56) + 40 * v16, (uint64_t)&v26);
  }
  else
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease(v15);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_12;
  if ((swift_dynamicCast(&v25, &v26, &type metadata for AnyHashable, &type metadata for String, 6) & 1) == 0)
    goto LABEL_13;
  return v25;
}

uint64_t sub_1003AFF60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1[32] = a1;
  v2 = type metadata accessor for URLRequest(0);
  v1[33] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[34] = v3;
  v1[35] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119E460);
  v1[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v1[37] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[38] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[39] = swift_task_alloc(v7);
  v1[40] = swift_task_alloc(v7);
  return swift_task_switch(sub_1003B0048, 0, 0);
}

uint64_t sub_1003B0048()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  __n128 v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t inited;
  unint64_t v20;
  void *v21;
  Class isa;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  void *v38;
  void *v39;
  Swift::String_optional v40;
  void *v41;
  id v42;
  Class v43;
  id v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  __n128 v48;

  v1 = sub_1003AFD10(*(void **)(v0 + 256));
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 288);
  _StringGuts.grow(_:)(75);
  v7._countAndFlagsBits = 0x2F2F3A7370747468;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = v1;
  v8._object = v3;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v3);
  v9._object = (void *)0x8000000100E37C00;
  v9._countAndFlagsBits = 0xD000000000000041;
  String.append(_:)(v9);
  URL.init(string:)(0, 0xE000000000000000);
  v10 = swift_bridgeObjectRelease(0xE000000000000000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v6, 1, v4, v10) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 288), &qword_10119E460);
    v11 = sub_1003B25B8();
    swift_allocError(&type metadata for SocialProfileUpdater.Error, v11, 0, 0);
    *(_QWORD *)v12 = 0;
    *(_QWORD *)(v12 + 8) = 0;
    *(_BYTE *)(v12 + 16) = 2;
    swift_willThrow(v13);
    v14 = *(_QWORD *)(v0 + 312);
    v16 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 320));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 32))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
    v18 = sub_100007E8C((uint64_t *)&unk_1011A2180);
    inited = swift_initStackObject(v18, v0 + 80);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v0 + 224) = 0x65756C6176;
    *(_QWORD *)(v0 + 232) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v0 + 224, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = sub_100007E8C((uint64_t *)&unk_1011AD420);
    *(_QWORD *)(inited + 72) = &off_1010ABD78;
    v20 = sub_1000423DC(inited);
    v21 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
    *(_QWORD *)(v0 + 240) = 0;
    v24 = objc_msgSend(v21, "dataWithJSONObject:options:error:", isa, 0, v0 + 240, v23);

    v25 = *(id *)(v0 + 240);
    if (v24)
    {
      v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;

    }
    else
    {
      v29 = v25;
      v30 = _convertNSErrorToError(_:)(v25);

      swift_willThrow(v31);
      swift_errorRelease(v30);
      v26 = 0;
      v28 = 0xF000000000000000;
    }
    v32 = v0 + 16;
    *(_QWORD *)(v0 + 328) = v26;
    *(_QWORD *)(v0 + 336) = v28;
    v33 = *(_QWORD *)(v0 + 312);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 16))(v33, *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 296));
    URLRequest.init(url:cachePolicy:timeoutInterval:)(v33, 1, 30.0);
    URLRequest.httpMethod.setter(1414745936, 0xE400000000000000);
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICHTTPHeaderContentTypeJSON);
    v36 = v35;
    v37._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(ICHTTPHeaderKeyContentType);
    v39 = v38;
    v40.value._countAndFlagsBits = v34;
    v40.value._object = v36;
    v37._object = v39;
    URLRequest.setValue(_:forHTTPHeaderField:)(v40, v37);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v36);
    sub_1000A0168(v26, v28);
    URLRequest.httpBody.setter(v26, v28);
    sub_10004A07C(0, &qword_1011AFDD8, ICMusicKitRequestContext_ptr);
    v41 = (void *)static ICMusicKitRequestContext.music.getter();
    v42 = objc_allocWithZone((Class)ICMusicKitURLRequest);
    v43 = URLRequest._bridgeToObjectiveC()().super.isa;
    v44 = objc_msgSend(v42, "initWithURLRequest:requestContext:", v43, v41);
    *(_QWORD *)(v0 + 344) = v44;

    objc_msgSend(v44, "setCancelOnHTTPErrors:", 0);
    sub_10004A07C(0, &qword_1011AFDC0, ICURLSessionManager_ptr);
    v45 = static ICURLSessionManager.musicSession.getter();
    *(_QWORD *)(v0 + 352) = v45;
    *(_QWORD *)(v0 + 56) = v0 + 248;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1003B0540;
    v46 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 184) = _NSConcreteStackBlock;
    v47 = (_QWORD *)(v0 + 184);
    v47[1] = 0x40000000;
    v47[2] = sub_1003AE980;
    v47[3] = &unk_1010C27A8;
    v47[4] = v46;
    objc_msgSend(v45, "enqueueUploadRequest:withCompletionHandler:", v44, v47);
    return swift_continuation_await(v32, v48);
  }
}

uint64_t sub_1003B0540()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 360) = v1;
  if (v1)
    v2 = sub_1003B06D4;
  else
    v2 = sub_1003B05E4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003B05E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 312);
  v12 = *(_QWORD *)(v0 + 288);
  v9 = *(_QWORD *)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 272);

  sub_1000822B4(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  swift_task_dealloc(v4);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B06D4(__n128 a1)
{
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;

  v2 = *(_QWORD *)(v1 + 336);
  v3 = *(void **)(v1 + 344);
  v4 = *(_QWORD *)(v1 + 328);
  v14 = *(_QWORD *)(v1 + 320);
  v15 = *(void **)(v1 + 352);
  v5 = *(_QWORD *)(v1 + 296);
  v6 = *(_QWORD *)(v1 + 304);
  v7 = *(_QWORD *)(v1 + 272);
  v8 = *(_QWORD *)(v1 + 280);
  v9 = *(_QWORD *)(v1 + 264);
  swift_willThrow(a1);

  sub_1000822B4(v4, v2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);

  v10 = *(_QWORD *)(v1 + 312);
  v12 = *(_QWORD *)(v1 + 280);
  v11 = *(_QWORD *)(v1 + 288);
  swift_task_dealloc(*(_QWORD *)(v1 + 320));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003B07C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4[126] = a4;
  v4[125] = a3;
  v4[124] = a2;
  v4[123] = a1;
  v5 = type metadata accessor for URLRequest(0);
  v4[127] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[128] = v6;
  v4[129] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_10119E460);
  v4[130] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v4[131] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[132] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[133] = swift_task_alloc(v10);
  v4[134] = swift_task_alloc(v10);
  v4[135] = swift_task_alloc(v10);
  return swift_task_switch(sub_1003B08C8, 0, 0);
}

uint64_t sub_1003B08C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _OWORD *v36;
  uint64_t v37;
  int v38;
  char v39;
  uint64_t v40;
  uint64_t inited;
  unint64_t v42;
  void *v43;
  Class isa;
  double v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  Swift::String v58;
  void *v59;
  void *v60;
  Swift::String_optional v61;
  void *v62;
  id v63;
  Class v64;
  id v65;
  id v66;
  __n128 v67;
  unint64_t v68;

  v1 = sub_1003AFD10(*(void **)(v0 + 992));
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 1056);
  v5 = *(_QWORD *)(v0 + 1048);
  v6 = *(_QWORD *)(v0 + 1040);
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7._countAndFlagsBits = v1;
  v7._object = v3;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v3);
  v8._object = (void *)0x8000000100E37BC0;
  v8._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v8);
  URL.init(string:)(0x2F2F3A7370747468, 0xE800000000000000);
  v9 = swift_bridgeObjectRelease(0xE800000000000000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v6, 1, v5, v9) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 1040), &qword_10119E460);
    v10 = sub_1003B25B8();
    swift_allocError(&type metadata for SocialProfileUpdater.Error, v10, 0, 0);
    *(_QWORD *)v11 = 0;
    *(_QWORD *)(v11 + 8) = 0;
    *(_BYTE *)(v11 + 16) = 2;
    swift_willThrow(v12);
    v13 = *(_QWORD *)(v0 + 1072);
    v14 = *(_QWORD *)(v0 + 1064);
    v15 = *(_QWORD *)(v0 + 1040);
    v16 = *(_QWORD *)(v0 + 1032);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = *(_QWORD *)(v0 + 1072);
  v19 = *(_QWORD *)(v0 + 984);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1056) + 32))(*(_QWORD *)(v0 + 1080), *(_QWORD *)(v0 + 1040), *(_QWORD *)(v0 + 1048));
  v20 = sub_100041F44((uint64_t)&off_1010ABDB8);
  URL.parametrize(_:)(v20, v18);
  swift_bridgeObjectRelease(v20);
  v21 = sub_1000423DC((uint64_t)_swiftEmptyArrayStorage);
  v22 = *(_QWORD *)(v19 + 8);
  if (v22)
  {
    v23 = **(_QWORD **)(v0 + 984);
    *(_QWORD *)(v0 + 848) = 1701667182;
    *(_QWORD *)(v0 + 856) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)(v0 + 848, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 616) = &type metadata for String;
    *(_QWORD *)(v0 + 592) = v23;
    *(_QWORD *)(v0 + 600) = v22;
    sub_100048ABC((_OWORD *)(v0 + 592), (_OWORD *)(v0 + 464));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    sub_1005EE030((_OWORD *)(v0 + 464), v0 + 264, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_10004FF2C(v0 + 264);
  }
  v25 = v0 + 1152;
  v26 = *(_QWORD *)(v0 + 984);
  v27 = *(_QWORD *)(v26 + 24);
  if (v27)
  {
    v28 = *(_QWORD *)(v26 + 16);
    *(_QWORD *)(v0 + 864) = 0x656C646E6168;
    *(_QWORD *)(v0 + 872) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)(v0 + 864, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 744) = &type metadata for String;
    *(_QWORD *)(v0 + 720) = v28;
    *(_QWORD *)(v0 + 728) = v27;
    sub_100048ABC((_OWORD *)(v0 + 720), (_OWORD *)(v0 + 752));
    v29 = swift_isUniquelyReferenced_nonNull_native(v21);
    sub_1005EE030((_OWORD *)(v0 + 752), v0 + 344, v29);
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_10004FF2C(v0 + 344);
  }
  v30 = v0 + 912;
  v31 = v0 + 944;
  v32 = *(_QWORD *)(v0 + 1008);
  if (v32)
  {
    v33 = v0 + 184;
    v34 = *(_QWORD *)(v0 + 1000);
    strcpy((char *)(v0 + 896), "artworkToken");
    *(_BYTE *)(v0 + 909) = 0;
    *(_WORD *)(v0 + 910) = -5120;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)(v0 + 896, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 552) = &type metadata for String;
    *(_QWORD *)(v0 + 528) = v34;
    v31 = v0 + 944;
    v30 = v0 + 912;
    v25 = v0 + 1152;
    *(_QWORD *)(v0 + 536) = v32;
    sub_100048ABC((_OWORD *)(v0 + 528), (_OWORD *)(v0 + 624));
    v35 = swift_isUniquelyReferenced_nonNull_native(v21);
    v68 = v21;
    v36 = (_OWORD *)(v0 + 624);
  }
  else
  {
    sub_100065228(*(_QWORD *)(v0 + 984) + 32, v0 + 968, &qword_1011AFDD0);
    sub_100065228(v0 + 968, v0 + 952, &qword_1011AFDD0);
    if (*(_QWORD *)(v0 + 952) == 1
      || (sub_1003B25FC((_QWORD *)(v0 + 952), (_QWORD *)(v0 + 928)),
          sub_1003B25FC((_QWORD *)(v0 + 928), (_QWORD *)(v0 + 936)),
          *(_QWORD *)(v0 + 936)))
    {
      v37 = v0 + 1153;
      goto LABEL_13;
    }
    v33 = v0 + 224;
    strcpy((char *)(v0 + 832), "artworkToken");
    *(_BYTE *)(v0 + 845) = 0;
    *(_WORD *)(v0 + 846) = -5120;
    AnyHashable.init<A>(_:)(v0 + 832, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 680) = &type metadata for String;
    *(_QWORD *)(v0 + 656) = 0;
    *(_QWORD *)(v0 + 664) = 0xE000000000000000;
    sub_100048ABC((_OWORD *)(v0 + 656), (_OWORD *)(v0 + 496));
    v35 = swift_isUniquelyReferenced_nonNull_native(v21);
    v68 = v21;
    v36 = (_OWORD *)(v0 + 496);
  }
  sub_1005EE030(v36, v33, v35);
  v21 = v68;
  swift_bridgeObjectRelease(0x8000000000000000);
  v37 = v0 + 1153;
  sub_10004FF2C(v33);
LABEL_13:
  sub_100065228(*(_QWORD *)(v0 + 984) + 41, v25, &qword_1011A3670);
  sub_100065228(v25, v37, &qword_1011A3670);
  v38 = *(unsigned __int8 *)(v0 + 1153);
  if (v38 != 2)
  {
    *(_QWORD *)(v0 + 816) = 0x72616F626E4F7369;
    *(_QWORD *)(v0 + 824) = 0xEB00000000646564;
    AnyHashable.init<A>(_:)(v0 + 816, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 712) = &type metadata for Bool;
    *(_BYTE *)(v0 + 688) = v38;
    sub_100048ABC((_OWORD *)(v0 + 688), (_OWORD *)(v0 + 784));
    v39 = swift_isUniquelyReferenced_nonNull_native(v21);
    sub_1005EE030((_OWORD *)(v0 + 784), v0 + 424, v39);
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_10004FF2C(v0 + 424);
  }
  v40 = sub_100007E8C((uint64_t *)&unk_1011A2180);
  inited = swift_initStackObject(v40, v0 + 80);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v0 + 912) = 0x7475626972747461;
  *(_QWORD *)(v0 + 920) = 0xEA00000000007365;
  AnyHashable.init<A>(_:)(v30, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = sub_100007E8C(&qword_1011E8750);
  *(_QWORD *)(inited + 72) = v21;
  v42 = sub_1000423DC(inited);
  v43 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v45 = swift_bridgeObjectRelease(v42).n128_u64[0];
  *(_QWORD *)(v0 + 944) = 0;
  v46 = objc_msgSend(v43, "dataWithJSONObject:options:error:", isa, 0, v31, v45);

  v47 = *(id *)(v0 + 944);
  if (v46)
  {
    v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v50 = v49;

  }
  else
  {
    v51 = v47;
    v52 = _convertNSErrorToError(_:)(v47);

    swift_willThrow(v53);
    swift_errorRelease(v52);
    v48 = 0;
    v50 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 1096) = v50;
  *(_QWORD *)(v0 + 1088) = v48;
  v54 = *(_QWORD *)(v0 + 1064);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1056) + 16))(v54, *(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1048));
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v54, 1, 30.0);
  URLRequest.httpMethod.setter(0x4843544150, 0xE500000000000000);
  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICHTTPHeaderContentTypeJSON);
  v57 = v56;
  v58._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(ICHTTPHeaderKeyContentType);
  v60 = v59;
  v61.value._countAndFlagsBits = v55;
  v61.value._object = v57;
  v58._object = v60;
  URLRequest.setValue(_:forHTTPHeaderField:)(v61, v58);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v57);
  sub_1000A0168(v48, v50);
  URLRequest.httpBody.setter(v48, v50);
  sub_10004A07C(0, &qword_1011AFDD8, ICMusicKitRequestContext_ptr);
  v62 = (void *)static ICMusicKitRequestContext.music.getter();
  v63 = objc_allocWithZone((Class)ICMusicKitURLRequest);
  v64 = URLRequest._bridgeToObjectiveC()().super.isa;
  v65 = objc_msgSend(v63, "initWithURLRequest:requestContext:", v64, v62);
  *(_QWORD *)(v0 + 1104) = v65;

  objc_msgSend(v65, "setCancelOnHTTPErrors:", 0);
  sub_10004A07C(0, &qword_1011AFDC0, ICURLSessionManager_ptr);
  v66 = static ICURLSessionManager.musicSession.getter();
  *(_QWORD *)(v0 + 1112) = v66;
  *(_QWORD *)(v0 + 56) = v0 + 960;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1003B1228;
  *(_QWORD *)(v0 + 416) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 384) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 392) = 0x40000000;
  *(_QWORD *)(v0 + 400) = sub_1003AE980;
  *(_QWORD *)(v0 + 408) = &unk_1010C2790;
  objc_msgSend(v66, "enqueueDataRequest:withCompletionHandler:", v65, v0 + 384);
  return swift_continuation_await(v0 + 16, v67);
}

uint64_t sub_1003B1228()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 1120) = v1;
  if (v1)
    v2 = sub_1003B18F8;
  else
    v2 = sub_1003B12CC;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003B12CC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  _OWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(void **)(v0 + 1112);
  v2 = *(void **)(v0 + 960);
  *(_QWORD *)(v0 + 1128) = v2;

  v3 = objc_msgSend(v2, "urlResponse");
  if (!v3)
    goto LABEL_9;
  v4 = v3;
  objc_opt_self(NSHTTPURLResponse);
  v5 = (void *)swift_dynamicCastObjCClass(v4);
  if (!v5 || objc_msgSend(v5, "statusCode") != (id)409)
  {

LABEL_9:
    v12 = (_QWORD *)swift_task_alloc(dword_1011AFDE4);
    *(_QWORD *)(v0 + 1136) = v12;
    *v12 = v0;
    v12[1] = sub_1003B1610;
    return sub_1003AFF60(*(_QWORD *)(v0 + 992));
  }
  v6 = (_OWORD *)(v0 + 560);
  v7 = objc_msgSend(v2, "parsedBodyDictionary");
  if (!v7)
  {
    *v6 = 0u;
    *(_OWORD *)(v0 + 576) = 0u;
LABEL_15:
    sub_10004FF60(v0 + 560, &qword_10119DCC0);
    goto LABEL_16;
  }
  v8 = v7;
  v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)(v0 + 880) = 0xD000000000000010;
  *(_QWORD *)(v0 + 888) = 0x8000000100E37BE0;
  AnyHashable.init<A>(_:)(v0 + 880, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_10079C294(v0 + 304), (v11 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v9 + 56) + 32 * v10, v0 + 560);
  }
  else
  {
    *v6 = 0u;
    *(_OWORD *)(v0 + 576) = 0u;
  }
  swift_bridgeObjectRelease(v9);
  sub_10004FF2C(v0 + 304);
  if (!*(_QWORD *)(v0 + 584))
    goto LABEL_15;
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  if (!swift_dynamicCast(v0 + 976, v0 + 560, (char *)&type metadata for Any + 8, v14, 6))
  {
LABEL_16:
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  v15 = *(_QWORD **)(v0 + 976);
LABEL_17:
  v16 = *(void **)(v0 + 1104);
  v17 = *(_QWORD *)(v0 + 1088);
  v32 = *(_QWORD *)(v0 + 1072);
  v33 = *(_QWORD *)(v0 + 1080);
  v30 = *(_QWORD *)(v0 + 1096);
  v31 = *(_QWORD *)(v0 + 1056);
  v18 = *(_QWORD *)(v0 + 1048);
  v29 = *(_QWORD *)(v0 + 1032);
  v19 = *(_QWORD *)(v0 + 1024);
  v20 = *(_QWORD *)(v0 + 1016);
  v21 = sub_1003B25B8();
  swift_allocError(&type metadata for SocialProfileUpdater.Error, v21, 0, 0);
  *(_QWORD *)v22 = v15;
  *(_QWORD *)(v22 + 8) = 0;
  *(_BYTE *)(v22 + 16) = 0;
  swift_willThrow(v23);

  sub_1000822B4(v17, v30);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v29, v20);
  v24 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v24(v32, v18);
  v24(v33, v18);
  v25 = *(_QWORD *)(v0 + 1072);
  v26 = *(_QWORD *)(v0 + 1064);
  v27 = *(_QWORD *)(v0 + 1040);
  v28 = *(_QWORD *)(v0 + 1032);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B1610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1136);
  *(_QWORD *)(*(_QWORD *)v1 + 1144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003B17D8;
  else
    v3 = sub_1003B16B8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003B16B8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 1104);
  v2 = *(_QWORD *)(v0 + 1096);
  v3 = *(_QWORD *)(v0 + 1088);
  v4 = *(_QWORD *)(v0 + 1080);
  v5 = *(_QWORD *)(v0 + 1072);
  v12 = *(_QWORD *)(v0 + 1056);
  v13 = *(_QWORD *)(v0 + 1064);
  v6 = *(_QWORD *)(v0 + 1048);
  v14 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);

  sub_1000822B4(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v10(v5, v6);
  v10(v4, v6);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B17D8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(void **)(v0 + 1104);
  v2 = *(_QWORD *)(v0 + 1096);
  v3 = *(_QWORD *)(v0 + 1088);
  v16 = *(_QWORD *)(v0 + 1080);
  v4 = *(_QWORD *)(v0 + 1072);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1048);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);

  sub_1000822B4(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v4, v6);
  v10(v16, v6);
  v11 = *(_QWORD *)(v0 + 1072);
  v12 = *(_QWORD *)(v0 + 1064);
  v13 = *(_QWORD *)(v0 + 1040);
  v14 = *(_QWORD *)(v0 + 1032);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B18F8(__n128 a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v2 = *(void **)(v1 + 1104);
  v3 = *(_QWORD *)(v1 + 1096);
  v4 = *(_QWORD *)(v1 + 1088);
  v17 = *(_QWORD *)(v1 + 1080);
  v18 = *(void **)(v1 + 1112);
  v16 = *(_QWORD *)(v1 + 1072);
  v5 = *(_QWORD *)(v1 + 1056);
  v6 = *(_QWORD *)(v1 + 1048);
  v7 = *(_QWORD *)(v1 + 1032);
  v8 = *(_QWORD *)(v1 + 1024);
  v9 = *(_QWORD *)(v1 + 1016);
  swift_willThrow(a1);

  sub_1000822B4(v4, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v16, v6);
  v10(v17, v6);

  v11 = *(_QWORD *)(v1 + 1072);
  v12 = *(_QWORD *)(v1 + 1064);
  v13 = *(_QWORD *)(v1 + 1040);
  v14 = *(_QWORD *)(v1 + 1032);
  swift_task_dealloc(*(_QWORD *)(v1 + 1080));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003B1A28(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 186) = a2;
  *(_QWORD *)(v2 + 296) = a1;
  return swift_task_switch(sub_1003B1A44, 0, 0);
}

uint64_t sub_1003B1A44()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  id v3;
  id v4;
  uint64_t v5;
  __n128 v6;

  v1 = v0;
  v2 = v0 + 10;
  v3 = objc_msgSend((id)objc_opt_self(ICURLBagProvider), "sharedBagProvider");
  v1[38] = v3;
  sub_10004A07C(0, (unint64_t *)&qword_10119DC80, ICStoreRequestContext_ptr);
  v4 = static ICStoreRequestContext.current.getter();
  v1[39] = v4;
  v1[15] = v1 + 34;
  v1[10] = v1;
  v1[11] = sub_1003B1B34;
  v5 = swift_continuation_init(v2, 1);
  v1[24] = _NSConcreteStackBlock;
  v1 += 24;
  v1[1] = 0x40000000;
  v1[2] = sub_1003AE980;
  v1[3] = &unk_1010C2748;
  v1[4] = v5;
  objc_msgSend(v3, "getBagForRequestContext:withCompletionHandler:", v4, v1);
  return swift_continuation_await(v2, v6);
}

uint64_t sub_1003B1B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 320) = v1;
  if (v1)
    v2 = sub_1003B247C;
  else
    v2 = sub_1003B1B94;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003B1B94()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  _QWORD *v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 304);
  v2 = *(void **)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 328) = v4;

  v5 = *(void **)(v3 + 32);
  *(_QWORD *)(v0 + 336) = v5;
  if ((unint64_t)v5 >= 2)
  {
    v20 = dword_1011AFDB4;
    v21 = v5;
    v22 = (_QWORD *)swift_task_alloc(v20);
    *(_QWORD *)(v0 + 344) = v22;
    *v22 = v0;
    v22[1] = sub_1003B1E30;
    return sub_1003AF3E4((uint64_t)v21, v4);
  }
  else
  {
    *(_QWORD *)(v0 + 376) = 0;
    if (qword_10119BF80 != -1)
      swift_once(&qword_10119BF80, sub_1003AEAB8);
    v6 = *(_QWORD *)(v0 + 296);
    v7 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 384) = sub_100048B14(v7, (uint64_t)qword_10124CE78);
    sub_1003B250C(v6);
    v8 = sub_1003B250C(v6);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 296);
    if (v11)
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v25 = v14;
      *(_DWORD *)v13 = 136446210;
      v15 = *(_OWORD *)(v12 + 26);
      v16 = *(_OWORD *)(v12 + 16);
      *(_OWORD *)(v0 + 144) = *(_OWORD *)v12;
      *(_OWORD *)(v0 + 160) = v16;
      *(_OWORD *)(v0 + 170) = v15;
      sub_1003B250C(v12);
      v17 = String.init<A>(describing:)(v0 + 144, &type metadata for SocialProfileUpdater.ProfileUpdate);
      v19 = v18;
      *(_QWORD *)(v0 + 288) = sub_100322200(v17, v18, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 288, v0 + 296);
      swift_bridgeObjectRelease(v19);
      sub_1003B2564((_QWORD *)v12);
      sub_1003B2564((_QWORD *)v12);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Will update profile with=%{public}s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {
      sub_1003B2564(*(_QWORD **)(v0 + 296));
      sub_1003B2564((_QWORD *)v12);
    }

    v24 = (_QWORD *)swift_task_alloc(dword_1011AFDAC);
    *(_QWORD *)(v0 + 392) = v24;
    *v24 = v0;
    v24[1] = sub_1003B211C;
    return sub_1003B07C8(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 328), 0, 0);
  }
}

uint64_t sub_1003B1E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 344);
  *(_QWORD *)(*v3 + 352) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1003B20E0;
  }
  else
  {
    *(_QWORD *)(v6 + 360) = a2;
    *(_QWORD *)(v6 + 368) = a1;
    v8 = sub_1003B1EA8;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1003B1EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 360);
  sub_1003B25A8(*(id *)(v0 + 336));
  v2 = *(_QWORD *)(v0 + 368);
  *(_QWORD *)(v0 + 376) = v1;
  if (qword_10119BF80 != -1)
    swift_once(&qword_10119BF80, sub_1003AEAB8);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 384) = sub_100048B14(v4, (uint64_t)qword_10124CE78);
  sub_1003B250C(v3);
  v5 = sub_1003B250C(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 296);
  if (v8)
  {
    v20 = v1;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v21 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = *(_OWORD *)(v9 + 26);
    v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)v9;
    *(_OWORD *)(v0 + 160) = v13;
    *(_OWORD *)(v0 + 170) = v12;
    sub_1003B250C(v9);
    v14 = String.init<A>(describing:)(v0 + 144, &type metadata for SocialProfileUpdater.ProfileUpdate);
    v16 = v15;
    *(_QWORD *)(v0 + 288) = sub_100322200(v14, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 288, v0 + 296);
    swift_bridgeObjectRelease(v16);
    sub_1003B2564((_QWORD *)v9);
    sub_1003B2564((_QWORD *)v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Will update profile with=%{public}s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    v17 = v10;
    v1 = v20;
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    sub_1003B2564(*(_QWORD **)(v0 + 296));
    sub_1003B2564((_QWORD *)v9);
  }

  v18 = (_QWORD *)swift_task_alloc(dword_1011AFDAC);
  *(_QWORD *)(v0 + 392) = v18;
  *v18 = v0;
  v18[1] = sub_1003B211C;
  return sub_1003B07C8(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 328), v2, v1);
}

uint64_t sub_1003B20E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 336);

  sub_1003B25A8(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B211C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 392);
  *(_QWORD *)(*v1 + 400) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003B2320;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 376));
    v4 = sub_1003B2188;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003B2188(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;
  int v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v1 + 186);
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    *(_DWORD *)(v1 + 188) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 188, v1 + 192);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Updated user profile, refreshing activeUserState=%{BOOL}d", v5, 8u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(unsigned __int8 *)(v1 + 186);

  if (v6 == 1)
  {
    v7 = v1 + 16;
    v8 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
    *(_QWORD *)(v1 + 408) = v8;
    *(_QWORD *)(v1 + 56) = v1 + 280;
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_1003B2360;
    v9 = swift_continuation_init(v1 + 16, 1);
    *(_QWORD *)(v1 + 232) = _NSConcreteStackBlock;
    v10 = (_QWORD *)(v1 + 232);
    v10[1] = 0x40000000;
    v10[2] = sub_1003AE984;
    v10[3] = &unk_1010C2760;
    v10[4] = v9;
    objc_msgSend(v8, "refreshUserStatesWithOptions:completion:", 1, v10);
    return swift_continuation_await(v7, v11);
  }
  else
  {

    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1003B2320()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 376);

  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B2360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 416) = v1;
  if (v1)
    v2 = sub_1003B24C4;
  else
    v2 = sub_1003B23C0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003B23C0()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  v1 = *(void **)(v0 + 408);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));

  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Active user state updated", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B247C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 312);
  v2 = *(void **)(v0 + 304);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B24C4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 408);
  v2 = *(void **)(v0 + 328);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B250C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1003B2554(v2);
  return a1;
}

id sub_1003B2554(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

_QWORD *sub_1003B2564(_QWORD *a1)
{
  uint64_t v2;
  void *v3;

  v2 = a1[3];
  v3 = (void *)a1[4];
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v2);
  sub_1003B25A8(v3);
  return a1;
}

void sub_1003B25A8(id a1)
{
  if (a1 != (id)1)

}

unint64_t sub_1003B25B8()
{
  unint64_t result;

  result = qword_1011AFDB8;
  if (!qword_1011AFDB8)
  {
    result = swift_getWitnessTable(&unk_100EB7C30, &type metadata for SocialProfileUpdater.Error);
    atomic_store(result, (unint64_t *)&qword_1011AFDB8);
  }
  return result;
}

_QWORD *sub_1003B25FC(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t sub_1003B260C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SocialProfileUpdater()
{
  return &type metadata for SocialProfileUpdater;
}

ValueMetadata *type metadata accessor for SocialProfileUpdater.ProfileUpdate.PhotoUpdate()
{
  return &type metadata for SocialProfileUpdater.ProfileUpdate.PhotoUpdate;
}

uint64_t sub_1003B266C(uint64_t result, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 != 1)
      return result;
    result = a2;
  }
  return swift_bridgeObjectRetain(result);
}

uint64_t destroy for SocialProfileUpdater.Error(uint64_t a1)
{
  return sub_1003B2698(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1003B2698(uint64_t result, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 != 1)
      return result;
    result = a2;
  }
  return swift_bridgeObjectRelease(result);
}

uint64_t _s5Music20SocialProfileUpdaterV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1003B266C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SocialProfileUpdater.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1003B266C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1003B2698(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SocialProfileUpdater.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1003B2698(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SocialProfileUpdater.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SocialProfileUpdater.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1003B2820(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1003B2838(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SocialProfileUpdater.Error()
{
  return &type metadata for SocialProfileUpdater.Error;
}

void destroy for SocialProfileUpdater.ProfileUpdate(_QWORD *a1)
{
  void *v2;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  v2 = (void *)a1[4];
  if (v2 != (void *)1)

}

uint64_t initializeWithCopy for SocialProfileUpdater.ProfileUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  if (v6 != (void *)1)
    v7 = v6;
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for SocialProfileUpdater.ProfileUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = (_QWORD *)(a1 + 32);
  v7 = *(void **)(a1 + 32);
  v8 = *(void **)(a2 + 32);
  if (v7 != (void *)1)
  {
    if (v8 != (void *)1)
    {
      *v6 = v8;
      v10 = v8;

      goto LABEL_8;
    }
    sub_100065200((id *)(a1 + 32));
    v8 = *(void **)(a2 + 32);
    goto LABEL_6;
  }
  if (v8 == (void *)1)
  {
LABEL_6:
    *v6 = v8;
    goto LABEL_8;
  }
  *v6 = v8;
  v9 = v8;
LABEL_8:
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t assignWithTake for SocialProfileUpdater.ProfileUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v9 = (uint64_t *)(a1 + 32);
  v8 = *(void **)(a1 + 32);
  v10 = *(_QWORD *)(a2 + 32);
  if (v8 != (void *)1)
  {
    if (v10 != 1)
    {
      *v9 = v10;

      goto LABEL_6;
    }
    sub_100065200((id *)(a1 + 32));
    v10 = 1;
  }
  *v9 = v10;
LABEL_6:
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SocialProfileUpdater.ProfileUpdate(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SocialProfileUpdater.ProfileUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SocialProfileUpdater.ProfileUpdate()
{
  return &type metadata for SocialProfileUpdater.ProfileUpdate;
}

uint64_t sub_1003B2B34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  __int128 v17;

  v3 = *v1;
  v4 = *(_QWORD *)(a1 + 16);
  if ((v3 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v5 = v3;
    else
      v5 = v3 & 0xFFFFFFFFFFFFFF8;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = __CocoaDictionary.makeIterator()(v5) | 0x8000000000000000;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v7 = ~v10;
    v6 = v3 + 64;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v8 = v12 & *(_QWORD *)(v3 + 64);
    v9 = v3;
  }
  v13 = (_QWORD *)swift_allocObject(&unk_1010C2A30, 56, 7);
  v13[2] = v9;
  v13[3] = v6;
  v13[4] = v7;
  v13[5] = 0;
  v13[6] = v8;
  v14 = swift_allocObject(&unk_1010C2A58, 48, 7);
  *(_QWORD *)(v14 + 16) = v4;
  v17 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v14 + 24) = v17;
  *(_QWORD *)(v14 + 40) = v13;
  swift_bridgeObjectRetain();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v4, v17, 0, 0);
  return AnyIterator.init(_:)(sub_1003B3944, v14, TupleTypeMetadata2);
}

uint64_t sub_1003B2C58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  int64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[24];

  v63 = *(_QWORD *)(a2 - 8);
  v5 = __chkstk_darwin(a1);
  v60 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v5);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v11;
  v14 = v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v11, v13, "key value ", 0);
  v16 = type metadata accessor for Optional(0, TupleTypeMetadata2);
  v61 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  result = swift_beginAccess(a1 + 2, v64, 33, 0);
  v20 = a1[2];
  v62 = v16;
  if (v20 < 0)
  {
    v39 = __CocoaDictionary.Iterator.next()(result);
    if (v39)
    {
      v42 = v39;
      v43 = v40;
      _forceBridgeFromObjectiveC<A>(_:_:)(v39, v12, v12);
      swift_unknownObjectRelease(v42);
      _forceBridgeFromObjectiveC<A>(_:_:)(v43, v14, v14);
      v44 = swift_unknownObjectRelease(v43);
      v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v36 + 56))(v18, 0, 1, TupleTypeMetadata2, v44);
    }
    else
    {
      v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v36 + 56))(v18, 1, 1, TupleTypeMetadata2, v41);
    }
    goto LABEL_13;
  }
  v21 = a1[3];
  v22 = a1[4];
  v24 = a1[5];
  v23 = a1[6];
  v58 = v22;
  v59 = v21;
  if (!v23)
  {
    v45 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      return result;
    }
    v46 = (unint64_t)(v22 + 64) >> 6;
    if (v45 >= v46)
    {
      v57 = v24;
      v35 = 0;
      v34 = 1;
      v32 = v20;
      goto LABEL_5;
    }
    v47 = *(_QWORD *)(v21 + 8 * v45);
    if (v47)
      goto LABEL_11;
    if (v24 + 2 < v46)
    {
      v47 = *(_QWORD *)(v21 + 8 * (v24 + 2));
      if (v47)
      {
        v45 = v24 + 2;
LABEL_11:
        v55 = (v47 - 1) & v47;
        v56 = a3;
        v25 = __clz(__rbit64(v47)) + (v45 << 6);
        v57 = v45;
        goto LABEL_4;
      }
      v45 = v24 + 3;
      if (v24 + 3 >= v46)
      {
        v35 = 0;
        v34 = 1;
        v57 = v24 + 2;
        v32 = v20;
        goto LABEL_5;
      }
      v47 = *(_QWORD *)(v21 + 8 * v45);
      if (v47)
        goto LABEL_11;
      v45 = v46 - 1;
      v52 = v24 + 4;
      while (v46 != v52)
      {
        v47 = *(_QWORD *)(v21 + 8 * v52++);
        if (v47)
        {
          v45 = v52 - 1;
          goto LABEL_11;
        }
      }
    }
    v35 = 0;
    v34 = 1;
    v57 = v45;
    v32 = v20;
    goto LABEL_5;
  }
  v55 = (v23 - 1) & v23;
  v56 = a3;
  v57 = v24;
  v25 = __clz(__rbit64(v23)) | (v24 << 6);
LABEL_4:
  v26 = v20;
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v8 + 72) * v25, v12);
  v27 = v8;
  v28 = v63;
  v29 = *(_QWORD *)(v26 + 56) + *(_QWORD *)(v63 + 72) * v25;
  v30 = v60;
  (*(void (**)(char *, unint64_t, uint64_t))(v63 + 16))(v60, v29, v14);
  v54 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
  v31 = v10;
  v32 = v26;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v18, v31, v12);
  v33 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v8 = v27;
  v33(v54, v30, v14);
  v34 = 0;
  v35 = v55;
  a3 = v56;
LABEL_5:
  v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v18, v34, 1, TupleTypeMetadata2);
  v37 = v59;
  a1[2] = v32;
  a1[3] = v37;
  v38 = v57;
  a1[4] = v58;
  a1[5] = v38;
  a1[6] = v35;
LABEL_13:
  swift_endAccess(v64);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v18, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v62);
    v48 = swift_getTupleTypeMetadata2(0, v12, v14, 0, 0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(a3, 1, 1, v48);
  }
  else
  {
    v49 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    v50 = swift_getTupleTypeMetadata2(0, v12, v14, 0, 0);
    v51 = a3 + *(int *)(v50 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v18, v12);
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v51, v49, v14);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(a3, 0, 1, v50);
  }
}

uint64_t sub_1003B309C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = sub_1003B2B34(a1);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1003B30E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = j___ss30_copySequenceToContiguousArrayys0dE0Vy7ElementQzGxSTRzlF(v2, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  return v4;
}

uint64_t sub_1003B3134(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, _QWORD *, uint64_t);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v7 = a5;
  v12 = type metadata accessor for DefaultDictionary(0, a3, a4, a5);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v24 - v18;
  LOBYTE(v7) = static Dictionary<>.== infix(_:_:)(*a1, *a2, a3, a4, v7, a6, v17);
  v20 = *(void (**)(char *, _QWORD *, uint64_t))(v13 + 16);
  v20(v19, a1, v12);
  v20(v15, a2, v12);
  if ((v7 & 1) != 0)
    v21 = dispatch thunk of static Equatable.== infix(_:_:)(&v19[*(int *)(v12 + 44)], &v15[*(int *)(v12 + 44)], a4, a6);
  else
    v21 = 0;
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v15, v12);
  v22(v19, v12);
  return v21 & 1;
}

uint64_t sub_1003B3274(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  return sub_1003B3134(a1, a2, a3[2], a3[3], a3[4], *(_QWORD *)(a4 - 8));
}

uint64_t type metadata accessor for DefaultDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultDictionary);
}

uint64_t sub_1003B3294(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 40);
    return 0;
  }
  return result;
}

uint64_t *sub_1003B3310(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain(v9);
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v9);
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_1003B33CC(_QWORD *a1, uint64_t a2)
{
  swift_bridgeObjectRelease(*a1);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))(((unint64_t)a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t *sub_1003B3410(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain(v4);
  v10(v8, v9, v5);
  return a1;
}

uint64_t *sub_1003B3480(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_QWORD *sub_1003B34F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t *sub_1003B3540(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1003B35A8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1003B367C + 4 * byte_100EB7C70[(v9 - 1)]))();
}

void sub_1003B36EC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1003B38E0(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for AnyIterator<A>, a1);
}

uint64_t sub_1003B38F4()
{
  uint64_t v0;

  sub_10004FA7C(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56);
}

uint64_t sub_1003B3920()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B3944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003B2C58(*(_QWORD **)(v1 + 40), *(_QWORD *)(v1 + 24), a1);
}

BOOL sub_1003B3950(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  objc_super v18;
  CGPoint v19;
  CGRect v20;

  if (*((_BYTE *)v3 + OBJC_IVAR____TtC5Music35NowPlayingTransportControlStackView_useBoundsAsPointInside) == 1)
  {
    objc_msgSend(v3, "bounds");
    v19.x = a2;
    v19.y = a3;
    return CGRectContainsPoint(v20, v19);
  }
  else
  {
    v18.receiver = v3;
    v18.super_class = (Class)type metadata accessor for NowPlayingTransportControlStackView();
    if ((objc_msgSendSuper2(&v18, "pointInside:withEvent:", a1, a2, a3) & 1) != 0)
    {
      return 1;
    }
    else
    {
      v8 = objc_msgSend(v3, "arrangedSubviews");
      v9 = sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

      if ((unint64_t)v10 >> 62)
        goto LABEL_17;
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v11)
      {
        v12 = 4;
        while (1)
        {
          v13 = (v10 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v10)
              : *(id *)(v10 + 8 * v12);
          v14 = v13;
          v15 = v12 - 3;
          if (__OFADD__(v12 - 4, 1))
            break;
          objc_msgSend(v13, "convertPoint:fromCoordinateSpace:", v3, a2, a3);
          v16 = objc_msgSend(v14, "pointInside:withEvent:", a1);

          if (v16)
          {
            swift_bridgeObjectRelease(v10);
            return 1;
          }
          ++v12;
          if (v15 == v11)
            goto LABEL_13;
        }
        __break(1u);
LABEL_17:
        if (v10 < 0)
          v17 = v10;
        else
          v17 = v10 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v10);
      }
LABEL_13:
      swift_bridgeObjectRelease(v10);
      return 0;
    }
  }
}

id sub_1003B3C58()
{
  return sub_1001EB7B8(type metadata accessor for NowPlayingTransportControlStackView);
}

uint64_t type metadata accessor for NowPlayingTransportControlStackView()
{
  return objc_opt_self(_TtC5Music35NowPlayingTransportControlStackView);
}

void sub_1003B3C84(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  Class isa;
  id v35;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
  if (v5)
  {
    if (!a1)
    {
LABEL_11:
      v35 = v5;
      v13 = objc_msgSend(v35, "superview");
      if (!v13)
        goto LABEL_15;
      v14 = v13;
      sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
      v15 = v2;
      v16 = v14;
      LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);

      if ((v14 & 1) != 0)
      {

      }
      else
      {
LABEL_15:
        objc_msgSend(v35, "setUserInteractionEnabled:", 0);
        objc_msgSend(v2, "addSubview:", v35);
        v17 = (void *)objc_opt_self(NSLayoutConstraint);
        v18 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v19 = swift_allocObject(v18, 64, 7);
        *(_OWORD *)(v19 + 16) = xmmword_100EA7AB0;
        v20 = objc_msgSend(v35, "leadingAnchor");
        v21 = objc_msgSend(v2, "leadingAnchor");
        v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

        *(_QWORD *)(v19 + 32) = v22;
        v23 = objc_msgSend(v35, "trailingAnchor");
        v24 = objc_msgSend(v2, "trailingAnchor");
        v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

        *(_QWORD *)(v19 + 40) = v25;
        v26 = objc_msgSend(v35, "topAnchor");
        v27 = objc_msgSend(v2, "topAnchor");
        v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

        *(_QWORD *)(v19 + 48) = v28;
        v29 = objc_msgSend(v35, "bottomAnchor");
        v30 = objc_msgSend(v2, "bottomAnchor");
        v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

        *(_QWORD *)(v19 + 56) = v31;
        specialized Array._endMutation()(v32);
        v33 = v19;
        sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

      }
      return;
    }
    type metadata accessor for CoreAnimationPackageView();
    v6 = a1;
    v7 = v5;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
      return;
  }
  else
  {
    if (!a1)
      return;
    v6 = a1;
  }
  v9 = objc_msgSend(v6, "superview");
  if (v9)
  {
    v10 = v9;
    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v11 = v2;
    v12 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)(v12, v11);

    if ((v10 & 1) != 0)
      objc_msgSend(a1, "removeFromSuperview");
  }
  v5 = *(void **)&v2[v4];
  if (v5)
    goto LABEL_11;
}

void sub_1003B4064()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void (*v19)(_QWORD *);
  id v20;
  id v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  CGAffineTransform v31;
  _QWORD v32[11];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition + 8];
  if (v3)
  {
    v4 = (void *)*((_QWORD *)v2 + 2);
    v5 = *((_QWORD *)v2 + 4);
    v6 = *((_QWORD *)v2 + 5);
    v7 = *((_QWORD *)v2 + 6);
    v8 = *((_QWORD *)v2 + 7);
    v10 = *((_QWORD *)v2 + 8);
    v9 = *((_QWORD *)v2 + 9);
    v28 = *((_QWORD *)v2 + 3);
    v29 = *(id *)v2;
    v32[0] = *(_QWORD *)v2;
    v32[1] = v3;
    v32[2] = v4;
    v32[3] = v28;
    v26 = v6;
    v27 = v5;
    v32[4] = v5;
    v32[5] = v6;
    v24 = v8;
    v25 = v7;
    v32[6] = v7;
    v32[7] = v8;
    v32[8] = v10;
    v32[9] = v9;
    swift_bridgeObjectRetain();
    v11 = v4;
    swift_bridgeObjectRetain();
    objc_msgSend(v1, "setImage:forState:", 0, 0);
    v12 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView;
    v13 = *(void **)&v1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
    if (v13)
    {
      v14 = *(_QWORD **)&v1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
    }
    else
    {
      v16 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
      swift_bridgeObjectRetain();
      v17 = v11;
      swift_bridgeObjectRetain();
      v18 = CoreAnimationPackageView.init(definition:)((uint64_t)v32);
      v14 = UIView.forAutolayout.getter();

      v13 = 0;
    }
    v19 = *(void (**)(_QWORD *))((swift_isaMask & *v14) + 0xA0);
    sub_10013C5B4((uint64_t)v29, v3, v4, v28, v27, v26, v25, v24, v10, v9);
    v20 = v13;
    v19(v32);
    v21 = objc_msgSend(v1, "tintColor");
    (*(void (**)(id))((swift_isaMask & *v14) + 0xD8))(v21);
    if (objc_msgSend(v1, "isHighlighted"))
    {
      CGAffineTransformMakeScale(&v31, 0.8, 0.8);
    }
    else
    {
      v31.a = 1.0;
      v31.b = 0.0;
      v31.c = 0.0;
      v31.d = 1.0;
      v31.tx = 0.0;
      v31.ty = 0.0;
    }
    objc_msgSend(v14, "setTransform:", &v31);
    v22 = *(void **)&v1[v12];
    *(_QWORD *)&v1[v12] = v14;
    v23 = v14;
    sub_1003B3C84(v22);

    sub_10013C57C((uint64_t)v29, v3, v4, v28, v27, v26, v25, v24, v10, v9);
  }
  else
  {
    v15 = *(void **)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
    v30 = v15;
    *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView] = 0;
    sub_1003B3C84(v15);

  }
}

void sub_1003B42DC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  CGFloat a;
  Class isa;
  id v50;
  void *v51;
  CGAffineTransform v52;
  objc_super v53;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView] = 0;
  v9 = &v4[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidth] = 0x4046000000000000;
  v53.receiver = v4;
  v53.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  v10 = objc_msgSendSuper2(&v53, "initWithFrame:", a1, a2, a3, a4);
  v11 = objc_allocWithZone((Class)UIView);
  v12 = (char *)v10;
  v13 = objc_msgSend(v11, "init");
  v14 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView;
  v15 = *(void **)&v12[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView];
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView] = v13;

  v16 = *(void **)&v12[v14];
  if (!v16)
  {
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = *(void **)&v12[v14];
  if (!v17)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v18 = qword_10119C330;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_10119C330, sub_1005D304C);
  objc_msgSend(v19, "setBackgroundColor:", qword_10124D410);

  v20 = *(void **)&v12[v14];
  if (!v20)
    goto LABEL_19;
  objc_msgSend(v20, "setAlpha:", 0.0);
  v21 = *(void **)&v12[v14];
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  CGAffineTransformMakeScale(&v52, 1.4, 1.4);
  objc_msgSend(v21, "setTransform:", &v52);
  v22 = *(_QWORD *)&v12[v14];
  if (!v22)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v12, "insertSubview:atIndex:", v22, 0);
  v23 = *(void **)&v12[v14];
  if (!v23)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v24 = objc_msgSend(v23, "widthAnchor");
  v25 = objc_msgSend(v24, "constraintEqualToConstant:", 44.0);

  v26 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint;
  v27 = *(void **)&v12[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = v25;

  v28 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100EA7AB0;
  v30 = *(void **)&v12[v26];
  if (!v30)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v31 = (_QWORD *)v29;
  *(_QWORD *)(v29 + 32) = v30;
  v32 = *(void **)&v12[v14];
  if (!v32)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v33 = v30;
  v34 = objc_msgSend(v32, "heightAnchor");
  v35 = *(void **)&v12[v14];
  if (!v35)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v36 = objc_msgSend(v35, "widthAnchor");
  v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);

  v31[5] = v37;
  v38 = *(void **)&v12[v14];
  if (!v38)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v39 = objc_msgSend(v38, "centerXAnchor");
  v40 = objc_msgSend(v12, "centerXAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  v31[6] = v41;
  v42 = *(void **)&v12[v14];
  if (!v42)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v43 = (void *)objc_opt_self(NSLayoutConstraint);
  v44 = objc_msgSend(v42, "centerYAnchor");
  v45 = objc_msgSend(v12, "centerYAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  v31[7] = v46;
  *(_QWORD *)&v52.a = v31;
  specialized Array._endMutation()(v47);
  a = v52.a;
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "activateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&a).n128_f64[0]);

  v50 = objc_msgSend(v12, "imageView");
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v50, "setContentMode:", 1);

  }
}

void sub_1003B4808()
{
  id v0;
  uint64_t ObjectType;
  unsigned int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  void *v14;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  v2 = objc_msgSend(v0, "isHighlighted");
  v3 = (void *)objc_opt_self(UIView);
  if (v2)
  {
    v4 = swift_allocObject(&unk_1010C2B88, 32, 7);
    *(_QWORD *)(v4 + 16) = v0;
    *(_QWORD *)(v4 + 24) = ObjectType;
    v14 = sub_1003B5454;
    v15 = v4;
    v10 = _NSConcreteStackBlock;
    v11 = 1107296256;
    v12 = sub_1001DBD98;
    v13 = &unk_1010C2BA0;
  }
  else
  {
    v5 = swift_allocObject(&unk_1010C2AE8, 24, 7);
    *(_QWORD *)(v5 + 16) = v0;
    v14 = sub_1003B5408;
    v15 = v5;
    v10 = _NSConcreteStackBlock;
    v11 = 1107296256;
    v12 = sub_1001DBD98;
    v13 = &unk_1010C2B00;
    v6 = _Block_copy(&v10);
    v0 = v0;
    swift_release();
    objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 2, v6, 0, 0.47, 0.0);
    _Block_release(v6);
    v7 = swift_allocObject(&unk_1010C2B38, 24, 7);
    *(_QWORD *)(v7 + 16) = v0;
    v14 = sub_1003B5428;
    v15 = v7;
    v10 = _NSConcreteStackBlock;
    v11 = 1107296256;
    v12 = sub_1001DBD98;
    v13 = &unk_1010C2B50;
  }
  v8 = _Block_copy(&v10);
  v9 = v0;
  swift_release();
  objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 2, v8, 0, 0.2, 0.0, v10, v11, v12, v13, v14, v15);
  _Block_release(v8);
}

void sub_1003B49F0(char *a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  unsigned int v8;
  double v9;
  void *v10;
  CGAffineTransform v11;

  v2 = objc_msgSend(a1, "imageView");
  if (v2)
  {
    v3 = v2;
    CGAffineTransformMakeScale(&v11, 0.8, 0.8);
    objc_msgSend(v3, "setTransform:", &v11);

  }
  v4 = *(void **)&a1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
  if (v4)
  {
    CGAffineTransformMakeScale(&v11, 0.8, 0.8);
    objc_msgSend(v4, "setTransform:", &v11);
  }
  v5 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView;
  v6 = *(void **)&a1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView];
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(a1, "isHovered");
    v9 = 0.1;
    if (v8)
      v9 = 0.0;
    objc_msgSend(v7, "setAlpha:", v9);

    v10 = *(void **)&a1[v5];
    if (v10)
    {
      CGAffineTransformMakeScale(&v11, 1.2, 1.2);
      objc_msgSend(v10, "setTransform:", &v11);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1003B4B4C(char *a1)
{
  id v2;
  void *v3;
  void *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = objc_msgSend(a1, "imageView");
  if (v2)
  {
    v3 = v2;
    v6 = 0x3FF0000000000000;
    v7 = 0;
    v8 = 0;
    v9 = 0x3FF0000000000000;
    v10 = 0;
    v11 = 0;
    objc_msgSend(v2, "setTransform:", &v6);

  }
  v4 = *(void **)&a1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView];
  if (v4)
  {
    v6 = 0x3FF0000000000000;
    v7 = 0;
    v8 = 0;
    v9 = 0x3FF0000000000000;
    v10 = 0;
    v11 = 0;
    objc_msgSend(v4, "setTransform:", &v6);
  }
  result = *(id *)&a1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView];
  if (result)
    return objc_msgSend(result, "setAlpha:", 0.0);
  __break(1u);
  return result;
}

char *sub_1003B4C08(char *result)
{
  void *v1;
  CGAffineTransform v2;

  v1 = *(void **)&result[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView];
  if (v1)
  {
    CGAffineTransformMakeScale(&v2, 1.4, 1.4);
    return (char *)objc_msgSend(v1, "setTransform:", &v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1003B4C84(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_1003B4E00()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  objc_super v12;
  CGRect v13;

  v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  objc_msgSendSuper2(&v12, "layoutSubviews");
  v2 = objc_msgSend(v0, "imageView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v1, "contentRectForBounds:");
    objc_msgSend(v1, "imageRectForContentRect:");
    UIView.untransformedFrame.setter(v4, v5, v6, v7);

  }
  v8 = OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView;
  v9 = *(void **)&v1[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView];
  if (v9)
  {
    v10 = objc_msgSend(v9, "layer");
    v11 = *(void **)&v1[v8];
    if (v11)
    {
      objc_msgSend(v11, "bounds");
      objc_msgSend(v10, "setCornerRadius:", CGRectGetWidth(v13) * 0.5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1003B4FD0()
{
  return sub_1001EB7B8(type metadata accessor for NowPlayingTransportButton);
}

uint64_t type metadata accessor for NowPlayingTransportButton()
{
  return objc_opt_self(_TtC5Music25NowPlayingTransportButton);
}

void sub_1003B50CC()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageView] = 0;
  v1 = &v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_packageDefinition];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorWidth] = 0x4046000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingTransportButton.swift", 37, 2, 104, 0);
  __break(1u);
}

uint64_t sub_1003B5178()
{
  char *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v1 = sub_100007E8C(&qword_1011AFF50);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIPointerEffect(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v26 - v10);
  v12 = *(void **)&v0[OBJC_IVAR____TtC5Music25NowPlayingTransportButton_highlightIndicatorView];
  if (!v12)
    return 0;
  v13 = v12;
  if (!objc_msgSend(v0, "isUserInteractionEnabled"))
  {

    return 0;
  }
  v14 = objc_msgSend(v0, "traitCollection");
  v15 = objc_msgSend(v14, "userInterfaceIdiom");

  if (v15 == (id)6)
  {
    v16 = (int *)sub_100007E8C(&qword_1011AFF60);
    v17 = (char *)v11 + v16[12];
    v18 = v16[16];
    v19 = v16[20];
    *v11 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v13);
    v20 = enum case for UIPointerEffect.TintMode.underlay(_:);
    v21 = type metadata accessor for UIPointerEffect.TintMode(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v17, v20, v21);
    *((_BYTE *)v11 + v18) = 0;
    *((_BYTE *)v11 + v19) = 0;
    v22 = (unsigned int *)&enum case for UIPointerEffect.hover(_:);
  }
  else
  {
    *v11 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v13);
    v22 = (unsigned int *)&enum case for UIPointerEffect.highlight(_:);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v11, *v22, v5);
  sub_10004A07C(0, &qword_1011AFF58, UIPointerStyle_ptr);
  (*(void (**)(char *, _QWORD *, uint64_t))(v6 + 16))(v8, v11, v5);
  v24 = type metadata accessor for UIPointerShape(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v4, 1, 1, v24);
  v23 = UIPointerStyle.init(effect:shape:)(v8, v4);

  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v11, v5);
  return v23;
}

uint64_t sub_1003B53E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003B5408()
{
  uint64_t v0;

  return sub_1003B4B4C(*(char **)(v0 + 16));
}

uint64_t sub_1003B5410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003B5420(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_1003B5428()
{
  uint64_t v0;

  return sub_1003B4C08(*(char **)(v0 + 16));
}

uint64_t sub_1003B5430()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003B5454()
{
  uint64_t v0;

  sub_1003B49F0(*(char **)(v0 + 16));
}

uint64_t sub_1003B5470()
{
  uint64_t v0;
  uint64_t result;

  v0 = _s20PlaybackStateManagerCMa(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_1003B54D4();
  qword_10124CE90 = result;
  return result;
}

uint64_t sub_1003B54AC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001ED7F8((uint64_t)&unk_100EB7E48, (uint64_t)&unk_100EB7E70, a1);
}

uint64_t sub_1003B54C0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001ED7F8((uint64_t)&unk_100EB7E90, (uint64_t)&unk_100EB7EB8, a1);
}

uint64_t sub_1003B54D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = sub_100007E8C(&qword_10119F340);
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  __chkstk_darwin(v1);
  v30 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v29);
  v28 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - v5;
  v7 = sub_100007E8C(&qword_1011B0048);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v27 - v15;
  v17 = v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic20PlaybackStateManager__selectedEntry;
  v18 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_10004A160((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1011B59A0);
  Published.init(initialValue:)(v13, v11);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B59A0);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17, v10, v7);
  v19 = v0;
  v20 = v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic20PlaybackStateManager__selectedPlaylist;
  v21 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  v22 = v28;
  sub_10004A160((uint64_t)v6, v28, &qword_1011A30F0);
  v23 = v30;
  Published.init(initialValue:)(v22, v29);
  sub_10004FF60((uint64_t)v6, &qword_1011A30F0);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v20, v23, v32);
  v24 = OBJC_IVAR____TtCO5Music14ClarityUIMusic20PlaybackStateManager_playbackIndicator;
  v25 = type metadata accessor for PlaybackIndicator(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)(v19 + v24) = sub_10058E284();
  return v19;
}

uint64_t sub_1003B5764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  char v20;
  uint64_t v22;
  void *v23;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Playlist.Entry(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EB7E48);
  v12 = swift_getKeyPath(&unk_100EB7E70);
  static Published.subscript.getter(v6, v2, KeyPath, v12);
  swift_release();
  v13 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v13) == 1)
  {
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011B59A0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 32))(v10, v6, v7);
    v15 = swift_getKeyPath(&unk_100EB7ED8);
    v16 = swift_getKeyPath(&unk_100EB7F00);
    swift_retain();
    static Published.subscript.getter(&v23, v17, v15, v16);
    swift_release();
    swift_release();
    swift_release();
    v18 = v23;
    if (!v23 || (v14 = MPCPlayerResponse.playState(for:in:)(v10, a1), v20 = v19, v18, (v20 & 1) != 0))
      v14 = 0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v14;
}

uint64_t sub_1003B5938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v5 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v22 - v15;
  sub_10004A160(a1, (uint64_t)&v22 - v15, (uint64_t *)&unk_1011B59A0);
  KeyPath = swift_getKeyPath(&unk_100EB7E48);
  v18 = swift_getKeyPath(&unk_100EB7E70);
  sub_10004A160((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1011B59A0);
  swift_retain();
  static Published.subscript.setter(v13, v2, KeyPath, v18);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B59A0);
  sub_10004A160(a2, (uint64_t)v10, &qword_1011A30F0);
  v19 = swift_getKeyPath(&unk_100EB7E90);
  v20 = swift_getKeyPath(&unk_100EB7EB8);
  sub_10004A160((uint64_t)v10, (uint64_t)v7, &qword_1011A30F0);
  swift_retain();
  static Published.subscript.setter(v7, v2, v19, v20);
  return sub_10004FF60((uint64_t)v10, &qword_1011A30F0);
}

uint64_t sub_1003B5AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t KeyPath;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _BYTE v71[40];
  __int128 v72;
  __int128 v73;
  unint64_t v74;
  __int128 v75;
  __int128 v76;
  void *v77;

  v70 = type metadata accessor for PlaybackIntentDescriptor(0);
  v62 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v59 = v4;
  v61 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v5);
  v60 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v57);
  v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v8);
  v64 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v66 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v56 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A19D0);
  v65 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v17);
  v69 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v68 = (uint64_t)&v56 - v20;
  v21 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v21);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Playlist(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v63 = a1;
  v26(v23, a1, v24);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
  v27(v23, 0, 1, v24);
  sub_1003B5938(a2, (uint64_t)v23);
  sub_10004FF60((uint64_t)v23, &qword_1011A30F0);
  sub_10004A160(a2, (uint64_t)v16, (uint64_t *)&unk_1011B59A0);
  v28 = type metadata accessor for Playlist.Entry(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v28) == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011B59A0);
    v75 = 0u;
    v76 = 0u;
    v77 = 0;
  }
  else
  {
    *((_QWORD *)&v76 + 1) = v28;
    v77 = &protocol witness table for Playlist.Entry;
    v30 = sub_100049F68(&v75);
    (*(void (**)(_QWORD *, char *, uint64_t))(v29 + 32))(v30, v16, v28);
  }
  v31 = v62;
  MusicLibrarySectionedRequest.init()(v24, v28, &protocol witness table for Playlist, &protocol witness table for Playlist.Entry);
  KeyPath = swift_getKeyPath(&unk_100EB7E20);
  v26(v23, v63, v24);
  v27(v23, 0, 1, v24);
  v33 = sub_1003B666C();
  MusicLibrarySectionedRequest<>.filterItems<A>(matching:equalTo:)(KeyPath, v23, v11, &protocol witness table for Playlist.Entry, v33);
  swift_release();
  sub_10004FF60((uint64_t)v23, &qword_1011A30F0);
  *((_QWORD *)&v73 + 1) = v11;
  v74 = sub_10010E0A8();
  v34 = sub_100049F68(&v72);
  v35 = v65;
  (*(void (**)(_QWORD *, char *, uint64_t))(v65 + 16))(v34, v13, v11);
  sub_10004A160((uint64_t)&v75, (uint64_t)v71, &qword_1011A16C8);
  v36 = v64;
  MusicPlaybackIntentDescriptor.init(request:startingAt:)(&v72, v71);
  v37 = v66;
  v38 = v67;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v36, 0, 1, v67);
  v39 = v56;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v56, v36, v38);
  v40 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v39, v38);
  swift_storeEnumTagMultiPayload(v40, v57, 1);
  v74 = 0;
  v72 = 0u;
  v73 = 0u;
  v41 = v68;
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v40, (uint64_t)&v72, 3, 0, 0, 1, 0, 1, v68, 0);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  v42 = (uint64_t)v69;
  v43 = v70;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v41, 0, 1, v70);
  sub_10004FF60((uint64_t)&v75, &qword_1011A16C8);
  sub_10004A160(v41, v42, &qword_1011A9A10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v42, 1, v43) == 1)
  {
    sub_10004FF60(v41, &qword_1011A9A10);
    return sub_10004FF60(v42, &qword_1011A9A10);
  }
  else
  {
    v45 = type metadata accessor for TaskPriority(0);
    v46 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v60, 1, 1, v45);
    v47 = v61;
    sub_1001493F0(v42, v61);
    type metadata accessor for MainActor(0);
    v49 = static MainActor.shared.getter(v48);
    v50 = *(unsigned __int8 *)(v31 + 80);
    v51 = (v50 + 32) & ~v50;
    v52 = (v59 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    v54 = swift_allocObject(&unk_1010C2BD8, v53 + 16, v50 | 7);
    *(_QWORD *)(v54 + 16) = v49;
    *(_QWORD *)(v54 + 24) = &protocol witness table for MainActor;
    sub_100149448(v47, v54 + v51);
    *(_QWORD *)(v54 + v52) = 0;
    v55 = (_QWORD *)(v54 + v53);
    *v55 = 0;
    v55[1] = 0;
    sub_100166D14(v46, (uint64_t)&unk_1011A3D90, v54);
    swift_release();
    sub_10004FF60(v41, &qword_1011A9A10);
    return sub_100108888(v42);
  }
}

uint64_t sub_1003B6234(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[7] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[8] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[9] = v4;
  v1[10] = v5;
  return swift_task_switch(sub_1003B62A0, v4, v5);
}

uint64_t sub_1003B62A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v1 = (void *)qword_10124C798;
  *(_QWORD *)(v0 + 88) = qword_10124C798;
  *(_QWORD *)(v0 + 40) = &type metadata for Player.PlaybackCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.PlaybackCommand;
  *(_BYTE *)(v0 + 16) = 3;
  v2 = dword_1011D86AC;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_10011755C;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0, 0, 0);
}

uint64_t sub_1003B6364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic20PlaybackStateManager__selectedEntry;
  v2 = sub_100007E8C(&qword_1011B0048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic20PlaybackStateManager__selectedPlaylist;
  v4 = sub_100007E8C(&qword_10119F340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003B63F4()
{
  return _s20PlaybackStateManagerCMa(0);
}

uint64_t _s20PlaybackStateManagerCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011AFFA0;
  if (!qword_1011AFFA0)
    return swift_getSingletonMetadata(a1, &_s20PlaybackStateManagerCMn);
  return result;
}

void sub_1003B6438(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_1000EA54C(319, &qword_1011AFFB0, (uint64_t *)&unk_1011B59A0);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000EA54C(319, (unint64_t *)&unk_1011AFFB8, &qword_1011A30F0);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

unint64_t sub_1003B64EC()
{
  unsigned __int8 *v0;
  int v1;
  void *v2;
  id v3;
  unint64_t v4;
  unsigned __int8 v5;

  v1 = *v0;
  if (qword_10119C278 != -1)
    swift_once(&qword_10119C278, sub_10058F8BC);
  v2 = (void *)qword_10124D348;
  v3 = objc_allocWithZone((Class)type metadata accessor for WaveformPlayIndicator(0));
  v4 = WaveformPlayIndicator.init(settings:)(v2);
  if (v1 == 2)
    v5 = 3;
  else
    v5 = v1;
  WaveformPlayIndicator.mode.setter(v5);
  return v4;
}

void sub_1003B6570()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  if (*v0 == 2)
    v1 = 3;
  else
    v1 = *v0;
  WaveformPlayIndicator.mode.setter(v1);
}

uint64_t sub_1003B65A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003B6A28();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003B65F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003B6A28();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1003B6644(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B6A28();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_1003B666C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A60B0;
  if (!qword_1011A60B0)
  {
    v1 = type metadata accessor for Playlist(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Playlist, v1);
    atomic_store(result, (unint64_t *)&qword_1011A60B0);
  }
  return result;
}

uint64_t sub_1003B66B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = (id *)(v0 + v3);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {

  }
  v8 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (id *)((char *)v5 + *(int *)(v1 + 28));
  if (v9[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);

  if (*(_QWORD *)(v0 + v8))
    swift_release();
  return swift_deallocObject(v0, v8 + 16);
}

uint64_t sub_1003B679C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EB7E48);
  v5 = swift_getKeyPath(&unk_100EB7E70);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1003B6808(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10004A160(a1, (uint64_t)&v14 - v8, (uint64_t *)&unk_1011B59A0);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EB7E48);
  v12 = swift_getKeyPath(&unk_100EB7E70);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1011B59A0);
  swift_retain();
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011B59A0);
}

uint64_t _s21WaveformIndicatorViewVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1003B6960 + 4 * byte_100EB7DC5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1003B6994 + 4 * asc_100EB7DC0[v4]))();
}

uint64_t sub_1003B6994(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B699C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003B69A4);
  return result;
}

uint64_t sub_1003B69B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003B69B8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1003B69BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B69C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s21WaveformIndicatorViewVMa()
{
  return &_s21WaveformIndicatorViewVN;
}

unint64_t sub_1003B69E4()
{
  unint64_t result;

  result = qword_1011B0058;
  if (!qword_1011B0058)
  {
    result = swift_getWitnessTable(&unk_100EB7F38, &_s21WaveformIndicatorViewVN);
    atomic_store(result, (unint64_t *)&qword_1011B0058);
  }
  return result;
}

unint64_t sub_1003B6A28()
{
  unint64_t result;

  result = qword_1011B0060;
  if (!qword_1011B0060)
  {
    result = swift_getWitnessTable(&unk_100EB7F88, &_s21WaveformIndicatorViewVN);
    atomic_store(result, (unint64_t *)&qword_1011B0060);
  }
  return result;
}

uint64_t *sub_1003B6A6C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  id v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v108;
  int *v109;
  int *v110;
  unsigned int (*v111)(uint64_t *, uint64_t, uint64_t);
  uint64_t v112;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v111 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v112 = v7;
    v108 = v8;
    v110 = a3;
    if (v111(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for Brick(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v11[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v109 = v11;
    v24 = v11[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for ArtworkImage.ViewModel(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v26, 1, v27))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v31 = v109;
    }
    else
    {
      v32 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
      v33 = *(int *)(v27 + 20);
      v34 = &v25[v33];
      v35 = &v26[v33];
      v36 = type metadata accessor for Artwork.CropStyle(0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v31 = v109;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v39 = v31[9];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    v42 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 10, v42))
    {
      v44 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v45 = type metadata accessor for Playlist.Variant(0);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v41, 1, v45))
      {
        v47 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v40, v41, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v40, 0, 1, v45);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 10, v42);
    }
    v48 = v31[10];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    v51 = *(void **)((char *)a2 + v48);
    *(uint64_t *)((char *)a1 + v48) = (uint64_t)v51;
    v52 = (int *)type metadata accessor for SegueContext(0);
    v53 = v52[5];
    v54 = &v49[v53];
    v55 = &v50[v53];
    v56 = v51;
    if (v111((uint64_t *)v55, 1, v112))
    {
      v57 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v54, v55, v112);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v54, 0, 1, v112);
    }
    v49[v52[6]] = v50[v52[6]];
    v58 = v52[7];
    v59 = &v49[v58];
    v60 = &v50[v58];
    if (*(_QWORD *)v60)
    {
      v61 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v59 = *(_OWORD *)v60;
    }
    v62 = v110[5];
    v63 = (char *)a1 + v62;
    v64 = (char *)a2 + v62;
    v65 = *(id *)v64;
    v66 = v64[8];
    sub_1000A4100(*(id *)v64, v66);
    *(_QWORD *)v63 = v65;
    v63[8] = v66;
    v67 = v110[6];
    v68 = v110[7];
    v69 = (uint64_t *)((char *)a1 + v67);
    v70 = (uint64_t *)((char *)a2 + v67);
    v71 = *v70;
    v72 = v70[1];
    *v69 = v71;
    v69[1] = v72;
    v73 = (uint64_t *)((char *)a1 + v68);
    v74 = (uint64_t *)((char *)a2 + v68);
    v76 = *v74;
    v75 = v74[1];
    *v73 = v76;
    v73[1] = v75;
    v77 = v110[8];
    v78 = (char *)a1 + v77;
    v79 = (char *)a2 + v77;
    v80 = *(_QWORD *)v79;
    v81 = *((_QWORD *)v79 + 1);
    v82 = v79[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v80, v81);
    *(_QWORD *)v78 = v80;
    *((_QWORD *)v78 + 1) = v81;
    v78[16] = v82;
    v83 = v110[9];
    v84 = v110[10];
    v85 = (uint64_t *)((char *)a1 + v83);
    v86 = (uint64_t *)((char *)a2 + v83);
    v87 = *v86;
    v88 = v86[1];
    *v85 = v87;
    v85[1] = v88;
    v89 = (uint64_t *)((char *)a1 + v84);
    v90 = (uint64_t *)((char *)a2 + v84);
    v92 = *v90;
    v91 = v90[1];
    *v89 = v92;
    v89[1] = v91;
    v93 = v110[11];
    v94 = v110[12];
    v95 = (uint64_t *)((char *)a1 + v93);
    v96 = (uint64_t *)((char *)a2 + v93);
    v98 = *v96;
    v97 = v96[1];
    *v95 = v98;
    v95[1] = v97;
    v99 = (char *)a1 + v94;
    v100 = *(uint64_t *)((char *)a2 + v94);
    v101 = *(uint64_t *)((char *)a2 + v94 + 8);
    LOBYTE(v78) = *((_BYTE *)a2 + v94 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v100, v101, (char)v78);
    *(_QWORD *)v99 = v100;
    *((_QWORD *)v99 + 1) = v101;
    v99[16] = (char)v78;
    v102 = v110[13];
    v103 = (char *)a1 + v102;
    v104 = (char *)a2 + v102;
    v105 = *(_QWORD *)v104;
    v106 = *((_QWORD *)v104 + 1);
    LOBYTE(v92) = v104[16];
    sub_1000A411C(*(_QWORD *)v104, v106, v92);
    *(_QWORD *)v103 = v105;
    *((_QWORD *)v103 + 1) = v106;
    v103[16] = v92;
  }
  return a1;
}

uint64_t type metadata accessor for Brick(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B0170, (uint64_t)&nominal type descriptor for Brick);
}

double sub_1003B6FE4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  char *v20;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Brick(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[7] + 8));
  v8 = a1 + v7[8];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[9];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = (id *)(a1 + v7[10]);

  v19 = type metadata accessor for SegueContext(0);
  v20 = (char *)v18 + *(int *)(v19 + 20);
  if (!v6((uint64_t)v20, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  if (*(id *)((char *)v18 + *(int *)(v19 + 28)))
    swift_release();
  sub_1000A4224(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[12]), *(_QWORD *)(a1 + a2[12] + 8), *(_BYTE *)(a1 + a2[12] + 16));
  return sub_1000A4240(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
}

char *sub_1003B7274(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  id v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v106;
  int *v107;
  unsigned int (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v109 = v5;
  v106 = v6;
  if (v108(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Brick(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v107 = v8;
  v21 = v8[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    v28 = v107;
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
    v30 = *(int *)(v24 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v28 = v107;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v36 = v28[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  v45 = v28[10];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(void **)&a2[v45];
  *(_QWORD *)&a1[v45] = v48;
  v49 = (int *)type metadata accessor for SegueContext(0);
  v50 = v49[5];
  v51 = &v46[v50];
  v52 = &v47[v50];
  v53 = v48;
  if (v108(v52, 1, v109))
  {
    v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v51, v52, v109);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v51, 0, 1, v109);
  }
  v46[v49[6]] = v47[v49[6]];
  v55 = v49[7];
  v56 = &v46[v55];
  v57 = &v47[v55];
  if (*(_QWORD *)v57)
  {
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  v59 = a3[5];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(id *)v61;
  v63 = v61[8];
  sub_1000A4100(*(id *)v61, v63);
  *(_QWORD *)v60 = v62;
  v60[8] = v63;
  v64 = a3[6];
  v65 = a3[7];
  v66 = &a1[v64];
  v67 = &a2[v64];
  v68 = *(_QWORD *)v67;
  v69 = *((_QWORD *)v67 + 1);
  *(_QWORD *)v66 = v68;
  *((_QWORD *)v66 + 1) = v69;
  v70 = &a1[v65];
  v71 = &a2[v65];
  v73 = *(_QWORD *)v71;
  v72 = *((_QWORD *)v71 + 1);
  *(_QWORD *)v70 = v73;
  *((_QWORD *)v70 + 1) = v72;
  v74 = a3[8];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = *(_QWORD *)v76;
  v78 = *((_QWORD *)v76 + 1);
  v79 = v76[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v77, v78);
  *(_QWORD *)v75 = v77;
  *((_QWORD *)v75 + 1) = v78;
  v75[16] = v79;
  v80 = a3[9];
  v81 = a3[10];
  v82 = &a1[v80];
  v83 = &a2[v80];
  v84 = *(_QWORD *)v83;
  v85 = *((_QWORD *)v83 + 1);
  *(_QWORD *)v82 = v84;
  *((_QWORD *)v82 + 1) = v85;
  v86 = &a1[v81];
  v87 = &a2[v81];
  v89 = *(_QWORD *)v87;
  v88 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = v89;
  *((_QWORD *)v86 + 1) = v88;
  v90 = a3[11];
  v91 = a3[12];
  v92 = &a1[v90];
  v93 = &a2[v90];
  v95 = *(_QWORD *)v93;
  v94 = *((_QWORD *)v93 + 1);
  *(_QWORD *)v92 = v95;
  *((_QWORD *)v92 + 1) = v94;
  v96 = &a1[v91];
  v97 = *(_QWORD *)&a2[v91];
  v98 = *(_QWORD *)&a2[v91 + 8];
  v99 = a2[v91 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v97, v98, v99);
  *(_QWORD *)v96 = v97;
  *((_QWORD *)v96 + 1) = v98;
  v96[16] = v99;
  v100 = a3[13];
  v101 = &a1[v100];
  v102 = &a2[v100];
  v103 = *(_QWORD *)v102;
  v104 = *((_QWORD *)v102 + 1);
  LOBYTE(v89) = v102[16];
  sub_1000A411C(*(_QWORD *)v102, v104, v89);
  *(_QWORD *)v101 = v103;
  *((_QWORD *)v101 + 1) = v104;
  v101[16] = v89;
  return a1;
}

char *sub_1003B77A8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  void **v69;
  char *v70;
  void *v71;
  void *v72;
  id v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  id v91;
  char v92;
  void *v93;
  char v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  void *__dst;
  uint64_t v137;
  int *v138;
  uint64_t (*v139)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v137 = v7;
  v138 = a3;
  v139 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Brick(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = v12[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = v12[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = v12[8];
  v26 = (uint64_t)&a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30((uint64_t)v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      v42 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v26, v27, v42);
      v43 = *(int *)(v28 + 20);
      v44 = (void *)(v26 + v43);
      v45 = &v27[v43];
      v46 = type metadata accessor for Artwork.CropStyle(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
      v49 = v48(v44, 1, v46);
      v50 = v48(v45, 1, v46);
      if (v49)
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
      }
      v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v40 = v44;
      v41 = v45;
LABEL_14:
      memcpy(v40, v41, v39);
      goto LABEL_21;
    }
    sub_10005B748(v26, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v40 = (void *)v26;
    v41 = v27;
    goto LABEL_14;
  }
  if (v32)
    goto LABEL_13;
  v33 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v26, v27, v33);
  v34 = *(int *)(v28 + 20);
  __dst = (void *)(v26 + v34);
  v35 = &v27[v34];
  v36 = type metadata accessor for Artwork.CropStyle(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_21:
  v51 = v12[9];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 10, v54);
  v58 = v56(v53, 10, v54);
  if (!v57)
  {
    if (!v58)
    {
      v63 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v63 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v52, 1, v63);
      v67 = v65(v53, 1, v63);
      if (v66)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v52, v53, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v52, 0, 1, v63);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v52, v53, v63);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v63);
      }
      v62 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v52, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v62 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v58)
    goto LABEL_27;
  v59 = type metadata accessor for Playlist.Variant(0);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v53, 1, v59))
  {
    v61 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v52, v53, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v52, 0, 1, v59);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 10, v54);
LABEL_34:
  v68 = v12[10];
  v69 = (void **)&a1[v68];
  v70 = &a2[v68];
  v71 = *(void **)&a2[v68];
  v72 = *v69;
  *v69 = v71;
  v73 = v71;

  v74 = (int *)type metadata accessor for SegueContext(0);
  v75 = v74[5];
  v76 = (char *)v69 + v75;
  v77 = &v70[v75];
  v78 = v139((char *)v69 + v75, 1, v6);
  v79 = v139(v77, 1, v6);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v76, v77, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v76, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v137 + 8))(v76, v6);
LABEL_39:
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v137 + 24))(v76, v77, v6);
LABEL_40:
  *((_BYTE *)v69 + v74[6]) = v70[v74[6]];
  v81 = v74[7];
  v82 = (void **)((char *)v69 + v81);
  v83 = &v70[v81];
  v84 = *(uint64_t *)((char *)v69 + v81);
  v85 = *(_QWORD *)&v70[v81];
  if (!v84)
  {
    if (v85)
    {
      v87 = *((_QWORD *)v83 + 1);
      *v82 = v85;
      v82[1] = v87;
      swift_retain();
      goto LABEL_47;
    }
LABEL_46:
    *(_OWORD *)v82 = *(_OWORD *)v83;
    goto LABEL_47;
  }
  if (!v85)
  {
    swift_release();
    goto LABEL_46;
  }
  v86 = *((_QWORD *)v83 + 1);
  *v82 = v85;
  v82[1] = v86;
  swift_retain();
  swift_release();
LABEL_47:
  v88 = v138[5];
  v89 = &a1[v88];
  v90 = &a2[v88];
  v91 = *(id *)v90;
  v92 = v90[8];
  sub_1000A4100(*(id *)v90, v92);
  v93 = *(void **)v89;
  v94 = v89[8];
  *(_QWORD *)v89 = v91;
  v89[8] = v92;
  sub_1000A4224(v93, v94);
  v95 = v138[6];
  v96 = &a1[v95];
  v97 = &a2[v95];
  *(_QWORD *)&a1[v95] = *(_QWORD *)&a2[v95];
  swift_retain();
  swift_release();
  *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
  v98 = v138[7];
  v99 = &a1[v98];
  v100 = &a2[v98];
  *(_QWORD *)&a1[v98] = *(_QWORD *)&a2[v98];
  swift_retain();
  swift_release();
  *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
  v101 = v138[8];
  v102 = &a1[v101];
  v103 = &a2[v101];
  v104 = *(_QWORD *)v103;
  v105 = *((_QWORD *)v103 + 1);
  v106 = v103[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v103, v105);
  v107 = *(_QWORD *)v102;
  v108 = *((_QWORD *)v102 + 1);
  *(_QWORD *)v102 = v104;
  *((_QWORD *)v102 + 1) = v105;
  v102[16] = v106;
  sub_1000A6174(v107, v108);
  v109 = v138[9];
  v110 = &a1[v109];
  v111 = &a2[v109];
  *(_QWORD *)&a1[v109] = *(_QWORD *)&a2[v109];
  swift_retain();
  swift_release();
  *((_QWORD *)v110 + 1) = *((_QWORD *)v111 + 1);
  v112 = v138[10];
  v113 = &a1[v112];
  v114 = &a2[v112];
  *(_QWORD *)&a1[v112] = *(_QWORD *)&a2[v112];
  swift_retain();
  swift_release();
  *((_QWORD *)v113 + 1) = *((_QWORD *)v114 + 1);
  v115 = v138[11];
  v116 = &a1[v115];
  v117 = &a2[v115];
  *(_QWORD *)&a1[v115] = *(_QWORD *)&a2[v115];
  swift_retain();
  swift_release();
  *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
  v118 = v138[12];
  v119 = &a1[v118];
  v120 = &a2[v118];
  v121 = *(_QWORD *)v120;
  v122 = *((_QWORD *)v120 + 1);
  v123 = v120[16];
  sub_1000A410C(*(_QWORD *)v120, v122, v123);
  v124 = *(_QWORD *)v119;
  v125 = *((_QWORD *)v119 + 1);
  v126 = v119[16];
  *(_QWORD *)v119 = v121;
  *((_QWORD *)v119 + 1) = v122;
  v119[16] = v123;
  sub_1000A4230(v124, v125, v126);
  v127 = v138[13];
  v128 = &a1[v127];
  v129 = &a2[v127];
  v130 = *(_QWORD *)v129;
  v131 = *((_QWORD *)v129 + 1);
  LOBYTE(v121) = v129[16];
  sub_1000A411C(*(_QWORD *)v129, v131, v121);
  v132 = *(_QWORD *)v128;
  v133 = *((_QWORD *)v128 + 1);
  v134 = v128[16];
  *(_QWORD *)v128 = v130;
  *((_QWORD *)v128 + 1) = v131;
  v128[16] = v121;
  sub_1000A4240(v132, v133, v134);
  return a1;
}

char *sub_1003B8040(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *__dst;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v60 = v7;
  if (v63(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Brick(0);
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  v10 = v9[8];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v61 = v6;
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    __dst = &v11[v17];
    v18 = &v12[v17];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    v6 = v61;
  }
  v22 = v9[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 10, v25))
  {
    v27 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v62 = v6;
    v28 = type metadata accessor for Playlist.Variant(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v23, v24, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
    }
    v6 = v62;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 10, v25);
  }
  v31 = v9[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
  v34 = (int *)type metadata accessor for SegueContext(0);
  v35 = v34[5];
  v36 = &v32[v35];
  v37 = &v33[v35];
  if (v63(&v33[v35], 1, v6))
  {
    v38 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v36, v37, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v36, 0, 1, v6);
  }
  v32[v34[6]] = v33[v34[6]];
  v39 = v34[7];
  v40 = &v32[v39];
  v41 = &v33[v39];
  v42 = *(_QWORD *)v41;
  if (*(_QWORD *)v41)
  {
    v43 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = v42;
    *((_QWORD *)v40 + 1) = v43;
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
  }
  v44 = a3[5];
  v45 = a3[6];
  v46 = &a1[v44];
  v47 = &a2[v44];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  *(_OWORD *)&a1[v45] = *(_OWORD *)&a2[v45];
  v48 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v49 = &a1[v48];
  v50 = &a2[v48];
  *(_OWORD *)v49 = *(_OWORD *)v50;
  v49[16] = v50[16];
  v51 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v51] = *(_OWORD *)&a2[v51];
  v52 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v53[16] = v54[16];
  *(_OWORD *)v53 = *(_OWORD *)v54;
  v55 = a3[13];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v56[16] = v57[16];
  *(_OWORD *)v56 = *(_OWORD *)v57;
  return a1;
}

char *sub_1003B84B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t);
  int v75;
  int v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void *v99;
  char v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  uint64_t v137;
  int *v138;
  uint64_t (*v139)(char *, uint64_t, uint64_t);
  uint64_t v140;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v139 = v8;
  v140 = v6;
  v137 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Brick(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease(v30);
  v31 = v12[8];
  v32 = (uint64_t)&a1[v31];
  v33 = &a2[v31];
  v34 = type metadata accessor for ArtworkImage.ViewModel(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36((uint64_t)v33, 1, v34);
  v138 = a3;
  if (!v37)
  {
    if (!v38)
    {
      v49 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v32, v33, v49);
      v50 = *(int *)(v34 + 20);
      v51 = (void *)(v32 + v50);
      v52 = &v33[v50];
      v53 = type metadata accessor for Artwork.CropStyle(0);
      v54 = *(_QWORD *)(v53 - 8);
      v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
      v56 = v55(v51, 1, v53);
      v57 = v55(v52, 1, v53);
      if (v56)
      {
        if (!v57)
        {
          (*(void (**)(void *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v57)
        {
          (*(void (**)(void *, char *, uint64_t))(v54 + 40))(v51, v52, v53);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
      }
      v46 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v47 = v51;
      v48 = v52;
LABEL_14:
      memcpy(v47, v48, v46);
      goto LABEL_21;
    }
    sub_10005B748(v32, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v46 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v47 = (void *)v32;
    v48 = v33;
    goto LABEL_14;
  }
  if (v38)
    goto LABEL_13;
  v39 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v32, v33, v39);
  v40 = *(int *)(v34 + 20);
  v41 = (void *)(v32 + v40);
  v42 = &v33[v40];
  v43 = type metadata accessor for Artwork.CropStyle(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_21:
  v58 = v12[9];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v59, 10, v61);
  v65 = v63(v60, 10, v61);
  if (v64)
  {
    if (!v65)
    {
      v69 = type metadata accessor for Playlist.Variant(0);
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v60, 1, v69))
      {
        v71 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v59, v60, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v59, 0, 1, v69);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 10, v61);
      goto LABEL_34;
    }
    v66 = type metadata accessor for ArtworkImage.Placeholder(0);
  }
  else
  {
    v67 = v140;
    if (v65)
    {
      sub_10004FF60((uint64_t)v59, (uint64_t *)&unk_1011A3DB0);
      v68 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      goto LABEL_35;
    }
    v72 = type metadata accessor for Playlist.Variant(0);
    v73 = *(_QWORD *)(v72 - 8);
    v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    v75 = v74(v59, 1, v72);
    v76 = v74(v60, 1, v72);
    if (v75)
    {
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v59, v60, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v59, 0, 1, v72);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v59, v60, v72);
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v59, v72);
    }
    v66 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  }
  memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
LABEL_34:
  v67 = v140;
LABEL_35:
  v77 = v12[10];
  v78 = &a1[v77];
  v79 = &a2[v77];
  v80 = *(void **)&a1[v77];
  *(_QWORD *)&a1[v77] = *(_QWORD *)&a2[v77];

  v81 = (int *)type metadata accessor for SegueContext(0);
  v82 = v81[5];
  v83 = &v78[v82];
  v84 = &v79[v82];
  v85 = v139(&v78[v82], 1, v67);
  v86 = v139(v84, 1, v67);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v83, v84, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v83, 0, 1, v67);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v137 + 8))(v83, v67);
LABEL_40:
    v87 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v137 + 40))(v83, v84, v67);
LABEL_41:
  v78[v81[6]] = v79[v81[6]];
  v88 = v81[7];
  v89 = &v78[v88];
  v90 = &v79[v88];
  v91 = *(_QWORD *)&v78[v88];
  v92 = *(_QWORD *)&v79[v88];
  if (!v91)
  {
    if (v92)
    {
      v94 = *((_QWORD *)v90 + 1);
      *(_QWORD *)v89 = v92;
      *((_QWORD *)v89 + 1) = v94;
      goto LABEL_48;
    }
LABEL_47:
    *(_OWORD *)v89 = *(_OWORD *)v90;
    goto LABEL_48;
  }
  if (!v92)
  {
    swift_release();
    goto LABEL_47;
  }
  v93 = *((_QWORD *)v90 + 1);
  *(_QWORD *)v89 = v92;
  *((_QWORD *)v89 + 1) = v93;
  swift_release();
LABEL_48:
  v95 = v138[5];
  v96 = &a1[v95];
  v97 = &a2[v95];
  v98 = *(_QWORD *)v97;
  LOBYTE(v97) = v97[8];
  v99 = *(void **)v96;
  v100 = v96[8];
  *(_QWORD *)v96 = v98;
  v96[8] = (char)v97;
  sub_1000A4224(v99, v100);
  v101 = v138[6];
  v102 = &a1[v101];
  v103 = &a2[v101];
  *(_QWORD *)&a1[v101] = *(_QWORD *)&a2[v101];
  swift_release();
  *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
  v104 = v138[7];
  v105 = &a1[v104];
  v106 = &a2[v104];
  *(_QWORD *)&a1[v104] = *(_QWORD *)&a2[v104];
  swift_release();
  *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
  v107 = v138[8];
  v108 = &a1[v107];
  v109 = &a2[v107];
  v110 = v109[16];
  v111 = *(_QWORD *)v108;
  v112 = *((_QWORD *)v108 + 1);
  *(_OWORD *)v108 = *(_OWORD *)v109;
  v108[16] = v110;
  sub_1000A6174(v111, v112);
  v113 = v138[9];
  v114 = &a1[v113];
  v115 = &a2[v113];
  *(_QWORD *)&a1[v113] = *(_QWORD *)&a2[v113];
  swift_release();
  *((_QWORD *)v114 + 1) = *((_QWORD *)v115 + 1);
  v116 = v138[10];
  v117 = &a1[v116];
  v118 = &a2[v116];
  *(_QWORD *)&a1[v116] = *(_QWORD *)&a2[v116];
  swift_release();
  *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
  v119 = v138[11];
  v120 = &a1[v119];
  v121 = &a2[v119];
  *(_QWORD *)&a1[v119] = *(_QWORD *)&a2[v119];
  swift_release();
  *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
  v122 = v138[12];
  v123 = &a1[v122];
  v124 = &a2[v122];
  v125 = v124[16];
  v126 = *(_QWORD *)v123;
  v127 = *((_QWORD *)v123 + 1);
  v128 = v123[16];
  *(_OWORD *)v123 = *(_OWORD *)v124;
  v123[16] = v125;
  sub_1000A4230(v126, v127, v128);
  v129 = v138[13];
  v130 = &a1[v129];
  v131 = &a2[v129];
  v132 = v131[16];
  v133 = *(_QWORD *)v130;
  v134 = *((_QWORD *)v130 + 1);
  v135 = v130[16];
  *(_OWORD *)v130 = *(_OWORD *)v131;
  v130[16] = v132;
  sub_1000A4240(v133, v134, v135);
  return a1;
}

uint64_t sub_1003B8CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B8CE0);
}

uint64_t sub_1003B8CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Brick(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1003B8D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B8D74);
}

uint64_t sub_1003B8D74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Brick(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for BrickView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B00C0, (uint64_t)&nominal type descriptor for BrickView);
}

uint64_t sub_1003B8E00(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  result = type metadata accessor for Brick(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_100EB8040;
    v4[3] = &unk_100EB8040;
    v4[4] = &unk_100EB8058;
    v4[5] = &unk_100EB8040;
    v4[6] = &unk_100EB8040;
    v4[7] = &unk_100EB8040;
    v4[8] = &unk_100EB8058;
    v4[9] = &unk_100EB8058;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1003B8E90(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;
  char *__dst;
  unsigned int (*v62)(uint64_t *, uint64_t, uint64_t);
  uint64_t v63;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v62 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v63 = v7;
    v60 = v8;
    if (v62(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[7];
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    __dst = (char *)a1 + v20;
    v24 = (char *)a2 + v20;
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v24, v29);
      v30 = *(int *)(v25 + 20);
      v31 = &__dst[v30];
      v32 = &v24[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v36 = a3[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
    {
      v41 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
    }
    v45 = a3[10];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(void **)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v62((uint64_t *)v52, 1, v63))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v51, v52, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v51, 0, 1, v63);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
  }
  return a1;
}

double sub_1003B92B4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  char *v19;
  double result;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  v7 = a1 + a2[8];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = a1 + a2[9];
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 10, v14))
  {
    v15 = type metadata accessor for Playlist.Variant(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }
  v17 = (id *)(a1 + a2[10]);

  v18 = type metadata accessor for SegueContext(0);
  v19 = (char *)v17 + *(int *)(v18 + 20);
  if (!v6((uint64_t)v19, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
  if (*(id *)((char *)v17 + *(int *)(v18 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1003B94BC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;
  int *v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v63 = v6;
  v60 = v7;
  if (v62(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v61 = a3;
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    v28 = v61;
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
    v30 = *(int *)(v24 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v28 = v61;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v36 = v28[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  v45 = v28[10];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(void **)&a2[v45];
  *(_QWORD *)&a1[v45] = v48;
  v49 = (int *)type metadata accessor for SegueContext(0);
  v50 = v49[5];
  v51 = &v46[v50];
  v52 = &v47[v50];
  v53 = v48;
  if (v62(v52, 1, v63))
  {
    v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v51, v52, v63);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v51, 0, 1, v63);
  }
  v46[v49[6]] = v47[v49[6]];
  v55 = v49[7];
  v56 = &v46[v55];
  v57 = &v47[v55];
  if (*(_QWORD *)v57)
  {
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  return a1;
}

char *sub_1003B98B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  void **v70;
  char *v71;
  void *v72;
  void *v73;
  id v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *__dst;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v91 = v7;
  v92 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v23);
  v24 = a3[8];
  v25 = (uint64_t)&a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29((uint64_t)v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      v41 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v25, v26, v41);
      v42 = *(int *)(v27 + 20);
      v43 = (void *)(v25 + v42);
      v44 = &v26[v42];
      v45 = type metadata accessor for Artwork.CropStyle(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
      v48 = v47(v43, 1, v45);
      v49 = v47(v44, 1, v45);
      if (v48)
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
      }
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v39 = v43;
      v40 = v44;
LABEL_14:
      memcpy(v39, v40, v38);
      goto LABEL_21;
    }
    sub_10005B748(v25, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v39 = (void *)v25;
    v40 = v26;
    goto LABEL_14;
  }
  if (v31)
    goto LABEL_13;
  v32 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
  v33 = *(int *)(v27 + 20);
  __dst = (void *)(v25 + v33);
  v34 = &v26[v33];
  v35 = type metadata accessor for Artwork.CropStyle(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 16))(__dst, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_21:
  v50 = a3[9];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 10, v53);
  v57 = v55(v52, 10, v53);
  if (!v56)
  {
    if (!v57)
    {
      v63 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v63 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v51, 1, v63);
      v67 = v65(v52, 1, v63);
      if (v66)
      {
        v62 = v92;
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v51, v52, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v51, 0, 1, v63);
          goto LABEL_40;
        }
      }
      else
      {
        v62 = v92;
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v51, v52, v63);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v51, v63);
      }
      v68 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v51, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v61 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    v62 = v92;
    goto LABEL_40;
  }
  if (v57)
    goto LABEL_27;
  v58 = type metadata accessor for Playlist.Variant(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v52, 1, v58))
  {
    v60 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v51, v52, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v51, 0, 1, v58);
  }
  v62 = v92;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 10, v53);
LABEL_40:
  v69 = a3[10];
  v70 = (void **)&a1[v69];
  v71 = &a2[v69];
  v72 = *(void **)&a2[v69];
  v73 = *v70;
  *v70 = v72;
  v74 = v72;

  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = (char *)v70 + v76;
  v78 = &v71[v76];
  v79 = v62((char *)v70 + v76, 1, v6);
  v80 = v62(v78, 1, v6);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v77, v78, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v77, 0, 1, v6);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v77, v6);
LABEL_45:
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v91 + 24))(v77, v78, v6);
LABEL_46:
  *((_BYTE *)v70 + v75[6]) = v71[v75[6]];
  v82 = v75[7];
  v83 = (void **)((char *)v70 + v82);
  v84 = &v71[v82];
  v85 = *(uint64_t *)((char *)v70 + v82);
  v86 = *(_QWORD *)&v71[v82];
  if (!v85)
  {
    if (v86)
    {
      v88 = *((_QWORD *)v84 + 1);
      *v83 = v86;
      v83[1] = v88;
      swift_retain();
      return a1;
    }
LABEL_52:
    *(_OWORD *)v83 = *(_OWORD *)v84;
    return a1;
  }
  if (!v86)
  {
    swift_release();
    goto LABEL_52;
  }
  v87 = *((_QWORD *)v84 + 1);
  *v83 = v86;
  v83[1] = v87;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1003B9FA4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *__dst;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  unsigned int (*v49)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v47 = v7;
  if (v8(a2, 1, v6))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v48 = v8;
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    v18 = *(int *)(v14 + 20);
    __dst = &v12[v18];
    v19 = &v13[v18];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v8 = v48;
  }
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 10, v26))
  {
    v28 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v49 = v8;
    v29 = type metadata accessor for Playlist.Variant(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v24, v25, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v29);
    }
    v8 = v49;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 10, v26);
  }
  v32 = a3[10];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  v35 = (int *)type metadata accessor for SegueContext(0);
  v36 = v35[5];
  v37 = &v33[v36];
  v38 = &v34[v36];
  if (v8(&v34[v36], 1, v6))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v37, v38, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v37, 0, 1, v6);
  }
  v33[v35[6]] = v34[v35[6]];
  v40 = v35[7];
  v41 = &v33[v40];
  v42 = &v34[v40];
  v43 = *(_QWORD *)v42;
  if (*(_QWORD *)v42)
  {
    v44 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = v43;
    *((_QWORD *)v41 + 1) = v44;
  }
  else
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
  }
  return a1;
}

char *sub_1003BA364(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void *v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *__dst;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v95 = v7;
  v96 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  v23 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease(v23);
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  v29 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease(v29);
  v30 = a3[8];
  v31 = (uint64_t)&a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for ArtworkImage.ViewModel(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35((uint64_t)v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      v47 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v31, v32, v47);
      v48 = *(int *)(v33 + 20);
      v49 = (void *)(v31 + v48);
      v50 = &v32[v48];
      v51 = type metadata accessor for Artwork.CropStyle(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
      v54 = v53(v49, 1, v51);
      v55 = v53(v50, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 40))(v49, v50, v51);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
      }
      v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v45 = v49;
      v46 = v50;
LABEL_14:
      memcpy(v45, v46, v44);
      goto LABEL_21;
    }
    sub_10005B748(v31, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v45 = (void *)v31;
    v46 = v32;
    goto LABEL_14;
  }
  if (v37)
    goto LABEL_13;
  v38 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v31, v32, v38);
  v39 = *(int *)(v33 + 20);
  __dst = (void *)(v31 + v39);
  v40 = &v32[v39];
  v41 = type metadata accessor for Artwork.CropStyle(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v42 + 32))(__dst, v40, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v41);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_21:
  v56 = a3[9];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 10, v59);
  v63 = v61(v58, 10, v59);
  if (!v62)
  {
    if (!v63)
    {
      v69 = type metadata accessor for Playlist.Variant(0);
      v70 = *(_QWORD *)(v69 - 8);
      v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
      v72 = v71(v57, 1, v69);
      v73 = v71(v58, 1, v69);
      if (v72)
      {
        v68 = v96;
        if (!v73)
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v57, v58, v69);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v57, 0, 1, v69);
          goto LABEL_40;
        }
      }
      else
      {
        v68 = v96;
        if (!v73)
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v57, v58, v69);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v69);
      }
      v74 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v57, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v67 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    v68 = v96;
    goto LABEL_40;
  }
  if (v63)
    goto LABEL_27;
  v64 = type metadata accessor for Playlist.Variant(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v58, 1, v64))
  {
    v66 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v57, v58, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v57, 0, 1, v64);
  }
  v68 = v96;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 10, v59);
LABEL_40:
  v75 = a3[10];
  v76 = &a1[v75];
  v77 = &a2[v75];
  v78 = *(void **)&a1[v75];
  *(_QWORD *)&a1[v75] = *(_QWORD *)&a2[v75];

  v79 = (int *)type metadata accessor for SegueContext(0);
  v80 = v79[5];
  v81 = &v76[v80];
  v82 = &v77[v80];
  v83 = v68(&v76[v80], 1, v6);
  v84 = v68(v82, 1, v6);
  if (v83)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v81, v82, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v81, 0, 1, v6);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v84)
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v81, v6);
LABEL_45:
    v85 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v95 + 40))(v81, v82, v6);
LABEL_46:
  v76[v79[6]] = v77[v79[6]];
  v86 = v79[7];
  v87 = &v76[v86];
  v88 = &v77[v86];
  v89 = *(_QWORD *)&v76[v86];
  v90 = *(_QWORD *)&v77[v86];
  if (!v89)
  {
    if (v90)
    {
      v92 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = v90;
      *((_QWORD *)v87 + 1) = v92;
      return a1;
    }
LABEL_52:
    *(_OWORD *)v87 = *(_OWORD *)v88;
    return a1;
  }
  if (!v90)
  {
    swift_release();
    goto LABEL_52;
  }
  v91 = *((_QWORD *)v88 + 1);
  *(_QWORD *)v87 = v90;
  *((_QWORD *)v87 + 1) = v91;
  swift_release();
  return a1;
}

uint64_t sub_1003BAA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BAA1C);
}

uint64_t sub_1003BAA1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[8];
    }
    else
    {
      v15 = type metadata accessor for ArtworkImage.Placeholder(0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[9];
      }
      else
      {
        v13 = type metadata accessor for SegueContext(0);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[10];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1003BAB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BAB30);
}

uint64_t sub_1003BAB30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v16 = type metadata accessor for ArtworkImage.Placeholder(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v10 = type metadata accessor for SegueContext(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[10];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003BAC28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];

  sub_1000E3A44(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_100EB8040;
    v10[2] = &unk_100EB8040;
    v10[3] = &unk_100EB8040;
    sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ArtworkImage.Placeholder(319);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for SegueContext(319);
        if (v9 <= 0x3F)
        {
          v10[6] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 7, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1003BAD20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9E3B4, 1);
}

uint64_t sub_1003BAD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  int *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t *v58;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[24];
  char v71[24];
  char v72[32];

  v64 = a3;
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7);
  v61 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v69 = (uint64_t)&v60 - v10;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v11);
  v68 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v60 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v60 - v23;
  sub_10004A160(a2, (uint64_t)&v60 - v23, (uint64_t *)&unk_1011A20D0);
  v25 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore11JSBrickItem_headlineText);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore11JSBrickItem_headlineText, v72, 0, 0);
  v27 = *v25;
  v26 = v25[1];
  v67 = a1;
  v28 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore11JSBrickItem_titleText);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore11JSBrickItem_titleText, v71, 0, 0);
  v30 = *v28;
  v29 = v28[1];
  v31 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0)
    v31 = v30 & 0xFFFFFFFFFFFFLL;
  v65 = v26;
  v66 = a2;
  if (v31)
  {
    swift_bridgeObjectRetain();
    v63 = v29;
    swift_bridgeObjectRetain();
    v32 = (uint64_t)v15;
  }
  else
  {
    sub_10004A160(a2, (uint64_t)v21, (uint64_t *)&unk_1011A20D0);
    v33 = type metadata accessor for GenericMusicItem(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v21, 1, v33);
    swift_bridgeObjectRetain();
    v32 = (uint64_t)v15;
    if (v35 == 1)
    {
      sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A20D0);
      v30 = 0;
      v63 = 0;
    }
    else
    {
      v30 = sub_1003BB270();
      v63 = v36;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v33);
    }
    a2 = v66;
  }
  v37 = (uint64_t *)(v67 + OBJC_IVAR____TtC11MusicJSCore11JSBrickItem_subtitleText);
  swift_beginAccess(v67 + OBJC_IVAR____TtC11MusicJSCore11JSBrickItem_subtitleText, v70, 0, 0);
  v38 = v37[1];
  v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v39 = *v37 & 0xFFFFFFFFFFFFLL;
  if (v39)
  {
    v62 = *v37;
    swift_bridgeObjectRetain();
  }
  else
  {
    v60 = v24;
    sub_10004A160(a2, (uint64_t)v18, (uint64_t *)&unk_1011A20D0);
    v40 = type metadata accessor for GenericMusicItem(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v18, 1, v40) == 1)
    {
      sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A20D0);
      v62 = 0;
      v38 = 0;
    }
    else
    {
      v62 = sub_1003BBB80();
      v38 = v42;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v40);
    }
    a2 = v66;
    v24 = v60;
  }
  v43 = v64;
  sub_10004A160(v64, v68, (uint64_t *)&unk_1011A3E10);
  sub_10004A160(a2, v32, (uint64_t *)&unk_1011A20D0);
  v44 = type metadata accessor for GenericMusicItem(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v32, 1, v44) == 1)
  {
    sub_10004FF60(v43, (uint64_t *)&unk_1011A3E10);
    sub_10004FF60(v32, (uint64_t *)&unk_1011A20D0);
    v46 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v69, 1, 10, v46);
  }
  else
  {
    v60 = (char *)a4;
    v47 = v27;
    v48 = v61;
    GenericMusicItem.placeholder.getter(v61);
    sub_10004FF60(v43, (uint64_t *)&unk_1011A3E10);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v32, v44);
    v49 = v48;
    v27 = v47;
    a4 = (uint64_t)v60;
    sub_10005B6C0(v49, v69, type metadata accessor for ArtworkImage.Placeholder);
  }
  v50 = (int *)type metadata accessor for Brick(0);
  v51 = (_QWORD *)(a4 + v50[10]);
  *v51 = v67;
  v52 = (int *)type metadata accessor for SegueContext(0);
  sub_100065228(v66, (uint64_t)v51 + v52[5], (uint64_t *)&unk_1011A20D0);
  *((_BYTE *)v51 + v52[6]) = 0;
  v53 = (_QWORD *)((char *)v51 + v52[7]);
  *v53 = 0;
  v53[1] = 0;
  sub_100065228((uint64_t)v24, a4, (uint64_t *)&unk_1011A20D0);
  v54 = (_QWORD *)(a4 + v50[5]);
  v55 = v65;
  *v54 = v27;
  v54[1] = v55;
  v56 = (uint64_t *)(a4 + v50[6]);
  v57 = v63;
  *v56 = v30;
  v56[1] = v57;
  v58 = (uint64_t *)(a4 + v50[7]);
  *v58 = v62;
  v58[1] = v38;
  sub_100065228(v68, a4 + v50[8], (uint64_t *)&unk_1011A3E10);
  return sub_10005B6C0(v69, a4 + v50[9], type metadata accessor for ArtworkImage.Placeholder);
}

uint64_t sub_1003BB270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  __n128 v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  void (*v69)(char *, uint64_t, __n128);
  void (*v70)(char *, uint64_t, uint64_t, __n128);
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100[2];

  v80 = type metadata accessor for Logger(0);
  v76 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (char *)&v70 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for UploadedVideo(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v72 = (char *)&v70 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for UploadedAudio(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Station(0);
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  __chkstk_darwin(v3);
  v81 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Song(0);
  v85 = *(_QWORD *)(v5 - 8);
  v86 = v5;
  __chkstk_darwin(v5);
  v84 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RadioShow(0);
  v88 = *(_QWORD *)(v7 - 8);
  v89 = v7;
  __chkstk_darwin(v7);
  v87 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  __chkstk_darwin(v9);
  v90 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicVideo(0);
  v94 = *(_QWORD *)(v11 - 8);
  v95 = v11;
  __chkstk_darwin(v11);
  v93 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Curator(0);
  v96 = *(_QWORD *)(v13 - 8);
  v97 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for GenericMusicItem(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v71 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v70 - v29;
  v70 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16);
  v70((char *)&v70 - v29, v98, v24, v28);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v30, v24);
  if (v31 != enum case for GenericMusicItem.album(_:))
  {
    if (v31 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v30, v16);
      v33 = Artist.name.getter(v34);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return v33;
    }
    v35 = v24;
    if (v31 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v37 = v96;
      v36 = v97;
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v96 + 32))(v15, v30, v97);
      v33 = Curator.name.getter(v38);
      v39 = *(void (**)(char *, uint64_t))(v37 + 8);
      v40 = v15;
LABEL_26:
      v39(v40, v36);
      return v33;
    }
    v41 = v30;
    if (v31 == enum case for GenericMusicItem.genre(_:))
      goto LABEL_8;
    if (v31 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v42 = v93;
      v43 = v94;
      v36 = v95;
      v44.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v94 + 32))(v93, v30, v95);
      v45 = MusicVideo.title.getter(v44);
    }
    else if (v31 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v42 = v90;
      v43 = v91;
      v36 = v92;
      v46.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v91 + 32))(v90, v30, v92);
      v45 = Playlist.name.getter(v46);
    }
    else if (v31 == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v42 = v87;
      v43 = v88;
      v36 = v89;
      v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v30, v89);
      v45 = RadioShow.name.getter(v47);
    }
    else
    {
      if (v31 == enum case for GenericMusicItem.recordLabel(_:))
      {
LABEL_8:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
        return 0;
      }
      if (v31 == enum case for GenericMusicItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v42 = v84;
        v43 = v85;
        v36 = v86;
        v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 32))(v84, v30, v86);
        v45 = Song.title.getter(v48);
      }
      else if (v31 == enum case for GenericMusicItem.station(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v42 = v81;
        v43 = v82;
        v36 = v83;
        v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v82 + 32))(v81, v30, v83);
        v45 = Station.name.getter(v49);
      }
      else if (v31 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v43 = v78;
        v42 = v77;
        v36 = v79;
        v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v78 + 32))(v77, v30, v79);
        v45 = UploadedAudio.title.getter(v50);
      }
      else
      {
        if (v31 != enum case for GenericMusicItem.uploadedVideo(_:))
        {
          v53 = Logger.musicKit.unsafeMutableAddressor();
          v54 = v76;
          v55 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v53, v80);
          v56 = v71;
          v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v70)(v71, v98, v24);
          v58 = Logger.logObject.getter(v57);
          v60 = static os_log_type_t.fault.getter(v59);
          v61 = v60;
          if (os_log_type_enabled(v58, v60))
          {
            v62 = swift_slowAlloc(22, -1);
            v63 = swift_slowAlloc(64, -1);
            v100[0] = v63;
            *(_DWORD *)v62 = 136446466;
            LODWORD(v98) = v61;
            v99 = sub_100322200(0xD000000000000010, 0x8000000100E32610, v100);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100);
            *(_WORD *)(v62 + 12) = 2082;
            v64 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
            v65 = dispatch thunk of CustomStringConvertible.description.getter(v24, v64);
            v67 = v66;
            v99 = sub_100322200(v65, v66, v100);
            v41 = v30;
            v35 = v24;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100);
            v68 = swift_bridgeObjectRelease(v67);
            v69 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
            v69(v56, v24, v68);
            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v98, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v63, -1, -1);
            swift_slowDealloc(v62, -1, -1);

            (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v80);
          }
          else
          {
            v69 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
            ((void (*)(char *, uint64_t))v69)(v56, v24);

            (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v80);
          }
          ((void (*)(char *, uint64_t))v69)(v41, v35);
          return 0;
        }
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v43 = v73;
        v42 = v72;
        v36 = v74;
        v51.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v73 + 32))(v72, v30, v74);
        v45 = UploadedVideo.title.getter(v51);
      }
    }
    v33 = v45;
    v39 = *(void (**)(char *, uint64_t))(v43 + 8);
    v40 = v42;
    goto LABEL_26;
  }
  (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
  v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v30, v20);
  v33 = Album.artistName.getter(v32);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  return v33;
}

uint64_t sub_1003BBB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, __n128);
  int v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  __n128 v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  void (*v28)(_BYTE *, uint64_t, __n128);
  uint64_t v29;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v9);
  v12 = &v31[-v11];
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16);
  v13(&v31[-v11], v0, v5, v10);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 88))(v12, v5);
  if (v14 == enum case for GenericMusicItem.album(_:)
    || v14 == enum case for GenericMusicItem.artist(_:)
    || v14 == enum case for GenericMusicItem.composer(_:)
    || v14 == enum case for GenericMusicItem.curator(_:)
    || v14 == enum case for GenericMusicItem.genre(_:)
    || v14 == enum case for GenericMusicItem.musicMovie(_:)
    || v14 == enum case for GenericMusicItem.musicVideo(_:)
    || v14 == enum case for GenericMusicItem.playlist(_:)
    || v14 == enum case for GenericMusicItem.radioShow(_:)
    || v14 == enum case for GenericMusicItem.recordLabel(_:)
    || v14 == enum case for GenericMusicItem.song(_:)
    || v14 == enum case for GenericMusicItem.station(_:)
    || v14 == enum case for GenericMusicItem.tvEpisode(_:)
    || v14 == enum case for GenericMusicItem.tvSeason(_:)
    || v14 == enum case for GenericMusicItem.tvShow(_:)
    || v14 == enum case for GenericMusicItem.uploadedAudio(_:)
    || v14 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v12, v5);
  }
  else
  {
    v15 = Logger.musicKit.unsafeMutableAddressor();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v4, v15, v1);
    v16 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v13)(v8, v0, v5);
    v17 = Logger.logObject.getter(v16);
    v19 = static os_log_type_t.fault.getter(v18);
    v20 = v19;
    if (os_log_type_enabled(v17, v19))
    {
      v21 = swift_slowAlloc(22, -1);
      v35 = v1;
      v22 = v21;
      v33 = swift_slowAlloc(64, -1);
      v37 = v33;
      *(_DWORD *)v22 = 136446466;
      v32 = v20;
      v36 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v37);
      v34 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
      *(_WORD *)(v22 + 12) = 2082;
      v23 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v5, v23);
      v26 = v25;
      v36 = sub_100322200(v24, v25, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
      v27 = swift_bridgeObjectRelease(v26);
      v28 = *(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8);
      v28(v8, v5, v27);
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v32, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v22, 0x16u);
      v29 = v33;
      swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v4, v35);
    }
    else
    {
      v28 = *(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8);
      ((void (*)(_BYTE *, uint64_t))v28)(v8, v5);

      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
    }
    ((void (*)(_BYTE *, uint64_t))v28)(v12, v5);
  }
  return 0;
}

uint64_t sub_1003BBFB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t KeyPath;
  uint64_t v73;
  uint64_t v74;
  char v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  ValueMetadata *v90;
  unint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t OpaqueTypeConformance2;
  unint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t result;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  unint64_t *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  ValueMetadata *v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t *v158;
  _UNKNOWN **v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE v184[32];
  uint64_t v185;
  _QWORD v186[5];
  _QWORD v187[5];
  _QWORD v188[5];
  uint64_t v189;
  ValueMetadata *v190;
  _QWORD *v191;
  uint64_t v192;
  _UNKNOWN **v193;
  _QWORD *v194;
  ValueMetadata *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  void *v208;
  __int128 v209;
  uint64_t v210;

  v2 = v1;
  v175 = a1;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v173 = *(_QWORD *)(v3 - 8);
  v174 = v3;
  __chkstk_darwin(v3);
  v172 = (char *)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for BrickView(0);
  __chkstk_darwin(v5);
  v183 = (uint64_t)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v7);
  v158 = (uint64_t *)((char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AC448);
  __chkstk_darwin(v12);
  v14 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AC450);
  __chkstk_darwin(v15);
  v17 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011B01C0);
  v161 = *(_QWORD *)(v18 - 8);
  v162 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_100007E8C(&qword_1011B01C8);
  v164 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v163 = (uint64_t)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011B01D0);
  v170 = *(_QWORD *)(v22 - 8);
  v171 = v22;
  __chkstk_darwin(v22);
  v169 = (char *)&v148 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_100007E8C(&qword_1011B01D8);
  v166 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v165 = (char *)&v148 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v25);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v26 = sub_100007E8C(&qword_1011B01E0);
  sub_1003BCCB0(v2, (uint64_t)&v14[*(int *)(v26 + 44)]);
  v27 = type metadata accessor for Brick(0);
  sub_10030ECB8(v2 + *(int *)(v27 + 40), (uint64_t)v17);
  sub_10004FF60((uint64_t)v14, &qword_1011AC448);
  v28 = Corner.large.unsafeMutableAddressor();
  v29 = *v28;
  v30 = v28[1];
  v31 = *((_BYTE *)v28 + 16);
  v32 = *HI.HoverOutset.grid.unsafeMutableAddressor();
  v157 = sub_1003BDDF4();
  v159 = (_UNKNOWN **)v15;
  v160 = v20;
  v33 = v31;
  v34 = (uint64_t)v11;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v29, v30, v33, 1u, 0, 1, 1, v15, *(double *)&v32, v157);
  sub_10004FF60((uint64_t)v17, &qword_1011AC450);
  sub_10004A160(v2, (uint64_t)v11, (uint64_t *)&unk_1011A20D0);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
  v176 = v5;
  v156 = v2;
  if (v37 == 1)
  {
    v38 = sub_10004FF60(v34, (uint64_t *)&unk_1011A20D0);
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 0;
    v48 = 0;
LABEL_12:
    v182 = v43;
    v183 = v42;
    v180 = v45;
    v181 = v44;
    v178 = v47;
    v179 = v46;
    v177 = v48;
    v158 = &v148;
    *(_QWORD *)&v205 = v39;
    *((_QWORD *)&v205 + 1) = v40;
    *(_QWORD *)&v206 = v41;
    *((_QWORD *)&v206 + 1) = v42;
    *(_QWORD *)&v207 = v43;
    *((_QWORD *)&v207 + 1) = v44;
    v208 = v45;
    *(_QWORD *)&v209 = v46;
    *((_QWORD *)&v209 + 1) = v47;
    v210 = v48;
    __chkstk_darwin(v38);
    v104 = v156;
    v105 = (_QWORD *)sub_100007E8C(&qword_1011AC3B0);
    v155 = v105;
    v189 = (uint64_t)v159;
    v190 = (ValueMetadata *)v157;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    v157 = OpaqueTypeConformance2;
    v107 = sub_1000E3EE4();
    v159 = (_UNKNOWN **)v107;
    v108 = (_QWORD *)sub_100314AC0();
    v144 = v105;
    v145 = OpaqueTypeConformance2;
    v109 = v162;
    v110 = v163;
    v111 = v160;
    View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v205, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100314AB8, (uint64_t)&v144, (uint64_t)UIScreen.Dimensions.size.getter, 0, v163, v162, (uint64_t)&type metadata for ActionType, v144, v145, v107, v108);
    sub_1000E4164(v39, v40, v41, v183, v182, v181, v180, v179, v178, v177);
    (*(void (**)(char *, uint64_t))(v161 + 8))(v111, v109);
    v112 = (uint64_t *)(v104 + v176[8]);
    v113 = *v112;
    v114 = v112[1];
    v115 = *((unsigned __int8 *)v112 + 16);
    v116 = sub_100007E8C(&qword_1011A03A8);
    v117 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v118 = StateObject.wrappedValue.getter(v113, v114, v115, v116, v117);
    v189 = v109;
    v190 = &type metadata for ActionType;
    v191 = v155;
    v192 = v157;
    v193 = v159;
    v194 = v108;
    v119 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v120 = v169;
    v121 = v167;
    View.shareSheetPresenting(_:)(v118, v167, v119);
    v122 = swift_release();
    v123 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v164 + 8))(v110, v121, v122);
    v124 = v172;
    static AccessibilityChildBehavior.combine.getter(v123);
    v189 = v121;
    v190 = (ValueMetadata *)v119;
    v125 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    v126 = v165;
    v127 = v171;
    View.accessibilityElement(children:)(v124, v171, v125);
    (*(void (**)(char *, uint64_t))(v173 + 8))(v124, v174);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v120, v127);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v166 + 32))(v175, v126, v168);
  }
  v49 = (void *)Optional<A>.playbackIntent.getter();
  v50 = v2 + v5[5];
  v51 = *(id *)v50;
  v52 = *(_BYTE *)(v50 + 8);
  sub_1000A4100(*(id *)v50, v52);
  v151 = sub_100824044(v51, v52);
  sub_1000A4224(v51, v52);
  v53 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v158, 1, 1, v53);
  v54 = (uint64_t *)(v2 + v5[6]);
  v55 = *v54;
  if (*v54)
  {
    v152 = v49;
    v153 = v36;
    v154 = v35;
    v192 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v193 = &protocol witness table for <A> PresentedViewState<A>;
    v189 = v55;
    v56 = (uint64_t *)(v2 + v5[7]);
    v57 = *v56;
    if (*v56)
    {
      v188[3] = type metadata accessor for NoticePresenter(0);
      v188[4] = &protocol witness table for NoticePresenter;
      v188[0] = v57;
      v208 = 0;
      v206 = 0u;
      v207 = 0u;
      v205 = 0u;
      v209 = xmmword_100EA93A0;
      v58 = v2 + v5[8];
      v59 = *(_QWORD *)v58;
      v60 = *(_QWORD *)(v58 + 8);
      v61 = *(unsigned __int8 *)(v58 + 16);
      swift_retain();
      swift_retain();
      v62 = sub_100007E8C(&qword_1011A03A8);
      v63 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v64 = StateObject.wrappedValue.getter(v59, v60, v61, v62, v63);
      v187[3] = v62;
      v187[4] = &protocol witness table for <A> PresentedViewState<A>;
      v187[0] = v64;
      v65 = (uint64_t *)(v2 + v5[9]);
      v66 = *v65;
      if (*v65)
      {
        v67 = type metadata accessor for NavigationPusher();
        v186[3] = v67;
        v186[4] = &off_1010D58B0;
        v185 = 0;
        v186[0] = v66;
        memset(v184, 0, sizeof(v184));
        v68 = (_QWORD *)(v2 + v5[10]);
        if (*v68)
        {
          v155 = (_QWORD *)v34;
          v69 = (_QWORD *)(v2 + v5[11]);
          if (*v69)
          {
            v70 = v2;
            __chkstk_darwin(v67);
            v71 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100EB80C8);
            __chkstk_darwin(KeyPath);
            v146 = &type metadata for TabIdentifier;
            v147 = v71;
            v73 = swift_getKeyPath(&unk_100EB8100);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v195, v74, KeyPath, v73);
            swift_release();
            swift_release();
            swift_release();
            v75 = (char)v195;
            v76 = v176;
            v77 = v2 + v176[12];
            v78 = *(_QWORD *)v77;
            v79 = *(_QWORD *)(v77 + 8);
            LOBYTE(v73) = *(_BYTE *)(v77 + 16);
            sub_1000A410C(*(_QWORD *)v77, v79, v73);
            sub_100824224(v78, v79, v73);
            v81 = v80;
            sub_1000A4230(v78, v79, v73);
            sub_10066D160(v75);
            v83 = v82;
            v85 = v84;
            swift_release();
            swift_bridgeObjectRelease(v81);
            v86 = v70 + v76[13];
            v87 = *(_QWORD *)v86;
            v88 = *(_QWORD *)(v86 + 8);
            LOBYTE(v79) = *(_BYTE *)(v86 + 16);
            sub_1000A411C(*(_QWORD *)v86, v88, v79);
            sub_100824400(v87, v88, v79, (uint64_t *)&v195);
            sub_1000A4240(v87, v88, v79);
            v89 = v70;
            v90 = v195;
            v91 = v196;
            v92 = v183;
            sub_10005B704(v89, v183, type metadata accessor for BrickView);
            if (v91 >> 60 != 15)
            {
LABEL_11:
              sub_10005B748(v92, type metadata accessor for BrickView);
              v95 = type metadata accessor for MusicLibrary(0);
              v96 = static MusicLibrary.shared.getter(v95);
              v146 = v90;
              v144 = v83;
              v145 = v85;
              v97 = (uint64_t)v90;
              v99 = v151;
              v98 = v152;
              v100 = v85;
              v101 = (uint64_t)v158;
              v102 = v155;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v152, v151, v96, (uint64_t)v158, (uint64_t)&v189, (unint64_t)v188, (unint64_t)&v205, (unint64_t)v187, (uint64_t *)&v195, (uint64_t)v186, (unint64_t)v184, (uint64_t)v144, v145, (uint64_t)v146, v91);
              v103 = (uint64_t)v195;
              v149 = v197;
              v150 = v196;
              v182 = v199;
              v183 = v198;
              v180 = v201;
              v181 = v200;
              v178 = v203;
              v179 = v202;
              v177 = v204;
              swift_release();
              sub_1000822B4(v97, v91);

              v39 = v103;
              swift_bridgeObjectRelease(v100);

              sub_10004FF60((uint64_t)v184, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v205, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v101, (uint64_t *)&unk_1011A20C0);
              sub_10004FF60((uint64_t)v186, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v187);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v188);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v189);
              v38 = (*(uint64_t (**)(_QWORD *, uint64_t))(v153 + 8))(v102, v154);
              v48 = v177;
              v47 = v178;
              v46 = v179;
              v45 = v180;
              v44 = v181;
              v43 = v182;
              v42 = v183;
              v41 = v149;
              v40 = v150;
              goto LABEL_12;
            }
            v93 = (_QWORD *)(v92 + v76[10]);
            if (*v93)
            {
              swift_retain();
              v90 = (ValueMetadata *)sub_10066D7A8();
              v91 = v94;
              swift_release();
              goto LABEL_11;
            }
          }
          else
          {
            v140 = v69[1];
            v141 = type metadata accessor for TabSelectionManager(0);
            v142 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v140, v141, v142);
            __break(1u);
          }
          v129 = v93[1];
          goto LABEL_19;
        }
LABEL_16:
        v129 = v68[1];
        swift_retain();
LABEL_19:
        v130 = (uint64_t *)&unk_10119CBE0;
        v131 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v132 = &qword_1011C5B90;
        v133 = &unk_100EC0A50;
        goto LABEL_20;
      }
    }
    else
    {
      v134 = v56[1];
      v135 = type metadata accessor for NoticePresenter(0);
      v136 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v134, v135, v136);
      __break(1u);
    }
    v137 = v65[1];
    v138 = type metadata accessor for NavigationPusher();
    v139 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v137, v138, v139);
    __break(1u);
    goto LABEL_16;
  }
  v129 = v54[1];
  v130 = (uint64_t *)&unk_1011B4E40;
  v131 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v132 = (unint64_t *)&unk_10119CC10;
  v133 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_20:
  v143 = sub_100049F28(v132, v130, (uint64_t)v133);
  result = EnvironmentObject.error()(0, v129, v131, v143);
  __break(1u);
  return result;
}

uint64_t sub_1003BCCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for BrickView.TextContentView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for BrickView.ArtworkView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v20 - v14;
  sub_10005B704(a1, (uint64_t)&v20 - v14, type metadata accessor for Brick);
  sub_10005B704(a1, (uint64_t)v6, type metadata accessor for Brick);
  v16 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_100EB8120);
  v17 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v16, v17, 0);
  sub_10005B6C0((uint64_t)v6, (uint64_t)v9, type metadata accessor for BrickView.TextContentView);
  sub_10005B704((uint64_t)v15, (uint64_t)v12, type metadata accessor for BrickView.ArtworkView);
  sub_10005B704((uint64_t)v9, (uint64_t)v6, type metadata accessor for BrickView.TextContentView);
  sub_10005B704((uint64_t)v12, a2, type metadata accessor for BrickView.ArtworkView);
  v18 = sub_100007E8C(&qword_1011B01F8);
  sub_10005B704((uint64_t)v6, a2 + *(int *)(v18 + 48), type metadata accessor for BrickView.TextContentView);
  sub_10005B748((uint64_t)v9, type metadata accessor for BrickView.TextContentView);
  sub_10005B748((uint64_t)v15, type metadata accessor for BrickView.ArtworkView);
  sub_10005B748((uint64_t)v6, type metadata accessor for BrickView.TextContentView);
  return sub_10005B748((uint64_t)v12, type metadata accessor for BrickView.ArtworkView);
}

uint64_t sub_1003BCE94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _BYTE v44[48];

  v41 = a1;
  v2 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v37 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Brick(0);
  v16 = v1 + *(int *)(v15 + 32);
  v17 = v1 + *(int *)(v15 + 36);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v44);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v2);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v16, v17, (uint64_t)v44, (uint64_t)v5, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v18 = Corner.large.unsafeMutableAddressor();
  v19 = *v18;
  v20 = v18[1];
  LOBYTE(v5) = *((_BYTE *)v18 + 16);
  v21 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v22 = sub_1000E4264();
  v42 = v21;
  v43 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v42, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(v19, v20, (char)v5, v6, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
  v24 = Border.artwork.unsafeMutableAddressor();
  v25 = *v24;
  v26 = *((double *)v24 + 1);
  v27 = *v18;
  v28 = v18[1];
  LOBYTE(v18) = *((_BYTE *)v18 + 16);
  LOBYTE(v8) = *((_BYTE *)v24 + 16);
  swift_retain();
  v42 = v6;
  v43 = OpaqueTypeConformance2;
  v29 = swift_getOpaqueTypeConformance2(&v42, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  View.border(_:corner:)(v25, (char)v8, v27, v28, (char)v18, v9, v29, v26);
  v30 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v11, v9, v30);
  v32 = v38;
  v31 = v39;
  v33 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v41, v14, v39);
  v34 = v33 + *(int *)(sub_100007E8C(&qword_1011A0628) + 36);
  *(_QWORD *)v34 = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(v34 + 8) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v31);
}

uint64_t sub_1003BD1A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[16];
  uint64_t v38;
  _BYTE v39[80];
  _QWORD v40[2];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A2E30);
  __chkstk_darwin(v4);
  v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A2E38);
  __chkstk_darwin(v7);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DynamicTypeSize(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for BrickView.TextContentView(0);
  v14 = sub_1008237B8((uint64_t)v13);
  v15 = DynamicTypeSize.isAccessibilitySize.getter(v14);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
    v16 = 4;
  else
    v16 = 3;
  v17 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v17, v39);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  v19 = (int *)type metadata accessor for Brick(0);
  v20 = (_QWORD *)(v2 + v19[5]);
  v21 = v20[1];
  *(_QWORD *)(inited + 32) = *v20;
  v22 = inited + 32;
  *(_QWORD *)(inited + 40) = v21;
  v23 = (_QWORD *)(v2 + v19[6]);
  v24 = v23[1];
  *(_QWORD *)(inited + 48) = *v23;
  *(_QWORD *)(inited + 56) = v24;
  v25 = (_QWORD *)(v2 + v19[7]);
  v26 = v25[1];
  *(_QWORD *)(inited + 64) = *v25;
  *(_QWORD *)(inited + 72) = v26;
  v38 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = sub_10016C700((void (*)(_QWORD *))sub_1003C1D30, (uint64_t)v37, inited);
  swift_setDeallocating(inited);
  v28 = *(_QWORD *)(inited + 16);
  v29 = sub_100007E8C(&qword_10119DCA0);
  swift_arrayDestroy(v22, v28, v29);
  v30 = v27[2];
  swift_bridgeObjectRelease(v27);
  v40[0] = v16;
  v40[1] = v30;
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v31);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v32 = sub_100007E8C(&qword_1011B0320);
  v33 = sub_1003BD50C(v2, (uint64_t)v40, (uint64_t)&v6[*(int *)(v32 + 44)]);
  v34 = static Alignment.leading.getter(v33);
  sub_10014A634(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v34, v35);
  sub_10004FF60((uint64_t)v6, &qword_1011A2E30);
  sub_10004A160((uint64_t)v9, a1, &qword_1011A2E38);
  *(_WORD *)(a1 + *(int *)(sub_100007E8C(&qword_1011B0328) + 36)) = 256;
  return sub_10004FF60((uint64_t)v9, &qword_1011A2E38);
}

uint64_t sub_1003BD470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = a1[1];
  if (v4 && ((v4 & 0x2000000000000000) != 0 ? (v5 = HIBYTE(v4) & 0xF) : (v5 = *a1 & 0xFFFFFFFFFFFFLL), v5))
  {
    sub_10005B704(a2, a3, type metadata accessor for BrickView.TextContentView);
    v6 = type metadata accessor for BrickView.TextContentView(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 0, 1, v6);
  }
  else
  {
    v8 = type metadata accessor for BrickView.TextContentView(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a3, 1, 1, v8);
  }
}

uint64_t sub_1003BD50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  double v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  Swift::Int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v95 = a1;
  v96 = a2;
  v100 = a3;
  v4 = type metadata accessor for DynamicTypeSize(0);
  v98 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  __chkstk_darwin(v4);
  v97 = (uint64_t)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v6);
  v101 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C(&qword_1011A0F48);
  v103 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C(&qword_1011B0330);
  __chkstk_darwin(v93);
  v92 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011B0338);
  __chkstk_darwin(v104);
  v102 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100007E8C(&qword_1011B0340);
  __chkstk_darwin(v106);
  v108 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v107 = (uint64_t)&v92 - v14;
  v94 = type metadata accessor for Brick(0);
  v15 = (uint64_t *)(a1 + *(int *)(v94 + 20));
  v16 = *v15;
  v17 = v15[1];
  v18 = sub_1004872C4((uint64_t)&off_1010ABDF8);
  swift_bridgeObjectRetain();
  v19 = Text.init(optional:options:)(v16, v17, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = static Font.footnote.getter(v19);
  KeyPath = swift_getKeyPath(&unk_100EB8288);
  v109 = v19;
  v110 = v21;
  v111 = v23;
  v112 = v25;
  v113 = KeyPath;
  v114 = v26;
  v28 = static Font.Weight.semibold.getter(KeyPath);
  v29 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v30 = sub_1000F59AC();
  View.fontWeight(_:)(*(_QWORD *)&v28, 0, v29, v30);
  sub_1000E450C(v19, v21, v23, v25);
  swift_release();
  swift_release();
  v31 = enum case for Text.Case.uppercase(_:);
  v32 = type metadata accessor for Text.Case(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = (uint64_t)v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v101, v31, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
  v35 = swift_getKeyPath(&unk_100EB82B8);
  v36 = (uint64_t)v92;
  v37 = (uint64_t *)&v92[*(int *)(v93 + 36)];
  v38 = sub_100007E8C((uint64_t *)&unk_1011C4EE0);
  sub_10004A160(v34, (uint64_t)v37 + *(int *)(v38 + 28), (uint64_t *)&unk_1011A4380);
  *v37 = v35;
  v39 = v103;
  v40 = v105;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v36, v9, v105);
  sub_10004FF60(v34, (uint64_t *)&unk_1011A4380);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
  v41 = sub_100551E8C(1);
  v42 = swift_getKeyPath(&unk_100EB82E8);
  v43 = v102;
  sub_10004A160(v36, v102, &qword_1011B0330);
  v44 = v43 + *(int *)(v104 + 36);
  *(_QWORD *)v44 = v42;
  *(_QWORD *)(v44 + 8) = v41;
  *(_BYTE *)(v44 + 16) = 0;
  v45 = sub_10004FF60(v36, &qword_1011B0330);
  LODWORD(v41) = static HierarchicalShapeStyle.secondary.getter(v45);
  v46 = v108;
  sub_10004A160(v43, v108, &qword_1011B0338);
  *(_DWORD *)(v46 + *(int *)(v106 + 36)) = v41;
  sub_10004FF60(v43, &qword_1011B0338);
  v47 = v107;
  sub_100065228(v46, v107, &qword_1011B0340);
  v49 = v94;
  v48 = v95;
  v50 = (uint64_t *)(v95 + *(int *)(v94 + 24));
  v51 = *v50;
  v52 = v50[1];
  v53 = sub_1004872C4((uint64_t)&off_1010ABE20);
  swift_bridgeObjectRetain();
  v54 = Text.init(optional:options:)(v51, v52, v53);
  v105 = v55;
  v106 = v54;
  v103 = v57;
  v104 = v56;
  v102 = static Font.callout.getter(v58);
  v101 = (char *)swift_getKeyPath(&unk_100EB8288);
  type metadata accessor for BrickView.TextContentView(0);
  v59 = v97;
  v60 = sub_1008237B8(v97);
  LOBYTE(v51) = DynamicTypeSize.isAccessibilitySize.getter(v60);
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v59, v99);
  if ((v51 & 1) != 0)
    v61 = 3;
  else
    v61 = 2;
  v99 = sub_100551E8C(v61);
  v98 = swift_getKeyPath(&unk_100EB82E8);
  LODWORD(v97) = static HierarchicalShapeStyle.primary.getter(v62);
  v63 = (uint64_t *)(v48 + *(int *)(v49 + 28));
  v64 = *v63;
  v65 = v63[1];
  v66 = sub_1004872C4((uint64_t)&off_1010ABE48);
  swift_bridgeObjectRetain();
  v67 = Text.init(optional:options:)(v64, v65, v66);
  v69 = v68;
  v71 = v70;
  v95 = v72;
  v73 = static Font.subheadline.getter(v67);
  v74 = swift_getKeyPath(&unk_100EB8288);
  v96 = sub_100551E8C(1);
  v75 = swift_getKeyPath(&unk_100EB82E8);
  LODWORD(v94) = static HierarchicalShapeStyle.secondary.getter(v75);
  v76 = v108;
  sub_10004A160(v47, v108, &qword_1011B0340);
  v77 = v76;
  v78 = v100;
  sub_10004A160(v77, v100, &qword_1011B0340);
  v79 = sub_100007E8C(&qword_1011B0348);
  v80 = v78;
  v81 = v78 + *(int *)(v79 + 48);
  v82 = v105;
  v83 = v106;
  *(_QWORD *)v81 = v106;
  *(_QWORD *)(v81 + 8) = v82;
  v85 = v103;
  v84 = v104;
  *(_QWORD *)(v81 + 16) = v104;
  *(_QWORD *)(v81 + 24) = v85;
  v86 = v102;
  *(_QWORD *)(v81 + 32) = v101;
  *(_QWORD *)(v81 + 40) = v86;
  v87 = v99;
  *(_QWORD *)(v81 + 48) = v98;
  *(_QWORD *)(v81 + 56) = v87;
  *(_BYTE *)(v81 + 64) = 0;
  *(_DWORD *)(v81 + 68) = v97;
  v88 = v80 + *(int *)(v79 + 64);
  *(_QWORD *)v88 = v67;
  *(_QWORD *)(v88 + 8) = v69;
  v90 = v95;
  v89 = v96;
  *(_QWORD *)(v88 + 16) = v71;
  *(_QWORD *)(v88 + 24) = v90;
  *(_QWORD *)(v88 + 32) = v74;
  *(_QWORD *)(v88 + 40) = v73;
  *(_QWORD *)(v88 + 48) = v75;
  *(_QWORD *)(v88 + 56) = v89;
  *(_BYTE *)(v88 + 64) = 0;
  *(_DWORD *)(v88 + 68) = v94;
  sub_1000E4440(v83, v82, v84, v85);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000E4440(v67, v69, v71, v90);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60(v107, &qword_1011B0340);
  sub_1000E450C(v67, v69, v71, v90);
  swift_release();
  swift_release();
  swift_release();
  sub_1000E450C(v106, v105, v104, v103);
  swift_release();
  swift_release();
  swift_release();
  return sub_10004FF60(v108, &qword_1011B0340);
}

uint64_t sub_1003BDBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;

  sub_10005B6C0(a1, a2, type metadata accessor for Brick);
  v3 = (int *)type metadata accessor for BrickView(0);
  v4 = a2 + v3[5];
  *(_QWORD *)v4 = swift_getKeyPath(&unk_100EB8150);
  *(_BYTE *)(v4 + 8) = 0;
  v5 = (_QWORD *)(a2 + v3[6]);
  v6 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v7 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v5 = EnvironmentObject.init()(v6, v7);
  v5[1] = v8;
  v9 = (_QWORD *)(a2 + v3[7]);
  v10 = type metadata accessor for NoticePresenter(0);
  v11 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v9 = EnvironmentObject.init()(v10, v11);
  v9[1] = v12;
  v13 = a2 + v3[8];
  *(_QWORD *)v13 = sub_1000DEC04;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 0;
  v14 = (_QWORD *)(a2 + v3[9]);
  v15 = type metadata accessor for NavigationPusher();
  v16 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v14 = EnvironmentObject.init()(v15, v16);
  v14[1] = v17;
  v18 = (_QWORD *)(a2 + v3[10]);
  v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v18 = EnvironmentObject.init()(v19, v20);
  v18[1] = v21;
  v22 = (_QWORD *)(a2 + v3[11]);
  v23 = type metadata accessor for TabSelectionManager(0);
  v24 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v22 = EnvironmentObject.init()(v23, v24);
  v22[1] = v25;
  v26 = a2 + v3[12];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_100EB8178);
  *(_QWORD *)(v26 + 8) = 0;
  *(_BYTE *)(v26 + 16) = 0;
  v27 = a2 + v3[13];
  result = swift_getKeyPath(&unk_100EB81A0);
  *(_QWORD *)v27 = result;
  *(_QWORD *)(v27 + 8) = 0;
  *(_BYTE *)(v27 + 16) = 0;
  return result;
}

unint64_t sub_1003BDDF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B01E8;
  if (!qword_1011B01E8)
  {
    v1 = sub_100044B54(&qword_1011AC450);
    sub_100049F28(&qword_1011B01F0, &qword_1011AC448, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B01E8);
  }
  return result;
}

uint64_t sub_1003BDE98()
{
  return 16;
}

__n128 sub_1003BDEA4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for BrickView.TextContentView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B0258, (uint64_t)&nominal type descriptor for BrickView.TextContentView);
}

uint64_t type metadata accessor for BrickView.ArtworkView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B02E8, (uint64_t)&nominal type descriptor for BrickView.ArtworkView);
}

uint64_t *sub_1003BDEF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  int *v71;
  unsigned int (*v72)(uint64_t *, uint64_t, uint64_t);
  uint64_t v73;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    v72 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    v73 = v6;
    v70 = v7;
    if (v72(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v10 = (int *)type metadata accessor for Brick(0);
    v11 = v10[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v10[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v10[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v71 = v10;
    v23 = v10[8];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for ArtworkImage.ViewModel(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v71;
    }
    else
    {
      v31 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
      v32 = *(int *)(v26 + 20);
      v33 = &v24[v32];
      v34 = &v25[v32];
      v35 = type metadata accessor for Artwork.CropStyle(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v30 = v71;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v38 = v30[9];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 10, v41))
    {
      v43 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for Playlist.Variant(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v39, v40, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v44);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 10, v41);
    }
    v47 = v30[10];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *(void **)((char *)a2 + v47);
    *(uint64_t *)((char *)a1 + v47) = (uint64_t)v50;
    v51 = (int *)type metadata accessor for SegueContext(0);
    v52 = v51[5];
    v53 = &v48[v52];
    v54 = &v49[v52];
    v55 = v50;
    if (v72((uint64_t *)v54, 1, v73))
    {
      v56 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v53, v54, v73);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v53, 0, 1, v73);
    }
    v48[v51[6]] = v49[v51[6]];
    v57 = v51[7];
    v58 = &v48[v57];
    v59 = &v49[v57];
    if (*(_QWORD *)v59)
    {
      v60 = *((_QWORD *)v59 + 1);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
    }
    v61 = *(int *)(a3 + 20);
    v62 = (uint64_t *)((char *)a1 + v61);
    v63 = (uint64_t *)((char *)a2 + v61);
    v64 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v63, v64) == 1)
    {
      v65 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v62, v63, v65);
      v66 = v62;
      v67 = v64;
      v68 = 1;
    }
    else
    {
      *v62 = *v63;
      swift_retain();
      v66 = v62;
      v67 = v64;
      v68 = 0;
    }
    swift_storeEnumTagMultiPayload(v66, v67, v68);
  }
  return a1;
}

double sub_1003BE3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Brick(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[7] + 8));
  v8 = a1 + v7[8];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[9];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = (id *)(a1 + v7[10]);

  v19 = type metadata accessor for SegueContext(0);
  v20 = (char *)v18 + *(int *)(v19 + 20);
  if (!v6((uint64_t)v20, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  if (*(id *)((char *)v18 + *(int *)(v19 + 28)))
    swift_release();
  v21 = a1 + *(int *)(a2 + 20);
  v22 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

char *sub_1003BE618(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v71 = v5;
  v68 = v6;
  if (v70(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Brick(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = v8[8];
  v69 = a1;
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    v28 = v69;
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
    v30 = *(int *)(v24 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v28 = v69;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v36 = v8[9];
  v37 = &v28[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  v45 = v8[10];
  v46 = &v28[v45];
  v47 = &a2[v45];
  v48 = *(void **)&a2[v45];
  *(_QWORD *)&v28[v45] = v48;
  v49 = (int *)type metadata accessor for SegueContext(0);
  v50 = v49[5];
  v51 = &v46[v50];
  v52 = &v47[v50];
  v53 = v48;
  if (v70(v52, 1, v71))
  {
    v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v51, v52, v71);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v51, 0, 1, v71);
  }
  v46[v49[6]] = v47[v49[6]];
  v55 = v49[7];
  v56 = &v46[v55];
  v57 = &v47[v55];
  if (*(_QWORD *)v57)
  {
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  v59 = *(int *)(a3 + 20);
  v60 = &v28[v59];
  v61 = &a2[v59];
  v62 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v61, v62) == 1)
  {
    v63 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v60, v61, v63);
    v64 = v60;
    v65 = v62;
    v66 = 1;
  }
  else
  {
    *(_QWORD *)v60 = *(_QWORD *)v61;
    swift_retain();
    v64 = v60;
    v65 = v62;
    v66 = 0;
  }
  swift_storeEnumTagMultiPayload(v64, v65, v66);
  return v28;
}

char *sub_1003BEAA8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  void **v68;
  char *v69;
  void *v70;
  void *v71;
  id v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void *__dst;
  uint64_t v97;
  uint64_t (*v99)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v97 = v6;
  v99 = v7;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, v5);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 24))(a1, a2, v5);
LABEL_7:
  v11 = (int *)type metadata accessor for Brick(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = v11[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = v11[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v23);
  v24 = v11[8];
  v25 = (uint64_t)&a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29((uint64_t)v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      v41 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v25, v26, v41);
      v42 = *(int *)(v27 + 20);
      v43 = (void *)(v25 + v42);
      v44 = &v26[v42];
      v45 = type metadata accessor for Artwork.CropStyle(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
      v48 = v47(v43, 1, v45);
      v49 = v47(v44, 1, v45);
      if (v48)
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
      }
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v39 = v43;
      v40 = v44;
LABEL_14:
      memcpy(v39, v40, v38);
      goto LABEL_21;
    }
    sub_10005B748(v25, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v39 = (void *)v25;
    v40 = v26;
    goto LABEL_14;
  }
  if (v31)
    goto LABEL_13;
  v32 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
  v33 = *(int *)(v27 + 20);
  __dst = (void *)(v25 + v33);
  v34 = &v26[v33];
  v35 = type metadata accessor for Artwork.CropStyle(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 16))(__dst, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_21:
  v50 = v11[9];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 10, v53);
  v57 = v55(v52, 10, v53);
  if (!v56)
  {
    if (!v57)
    {
      v62 = type metadata accessor for Playlist.Variant(0);
      v63 = *(_QWORD *)(v62 - 8);
      v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
      v65 = v64(v51, 1, v62);
      v66 = v64(v52, 1, v62);
      if (v65)
      {
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v51, v52, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v51, 0, 1, v62);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v51, v52, v62);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v63 + 8))(v51, v62);
      }
      v61 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v51, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v61 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v57)
    goto LABEL_27;
  v58 = type metadata accessor for Playlist.Variant(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v52, 1, v58))
  {
    v60 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v51, v52, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v51, 0, 1, v58);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 10, v53);
LABEL_34:
  v67 = v11[10];
  v68 = (void **)&a1[v67];
  v69 = &a2[v67];
  v70 = *(void **)&a2[v67];
  v71 = *v68;
  *v68 = v70;
  v72 = v70;

  v73 = (int *)type metadata accessor for SegueContext(0);
  v74 = v73[5];
  v75 = (char *)v68 + v74;
  v76 = &v69[v74];
  v77 = v99((char *)v68 + v74, 1, v5);
  v78 = v99(v76, 1, v5);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v75, v76, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v75, 0, 1, v5);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v75, v5);
LABEL_39:
    v79 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v75, v76, v5);
LABEL_40:
  *((_BYTE *)v68 + v73[6]) = v69[v73[6]];
  v80 = v73[7];
  v81 = (void **)((char *)v68 + v80);
  v82 = &v69[v80];
  v83 = *(uint64_t *)((char *)v68 + v80);
  v84 = *(_QWORD *)&v69[v80];
  if (v83)
  {
    if (v84)
    {
      v85 = *((_QWORD *)v82 + 1);
      *v81 = v84;
      v81[1] = v85;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v84)
  {
    v86 = *((_QWORD *)v82 + 1);
    *v81 = v84;
    v81[1] = v86;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v81 = *(_OWORD *)v82;
LABEL_47:
  if (a1 != a2)
  {
    v87 = *(int *)(a3 + 20);
    v88 = &a1[v87];
    v89 = &a2[v87];
    sub_10004FF60((uint64_t)&a1[v87], (uint64_t *)&unk_1011ACE40);
    v90 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v89, v90) == 1)
    {
      v91 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v88, v89, v91);
      v92 = v88;
      v93 = v90;
      v94 = 1;
    }
    else
    {
      *(_QWORD *)v88 = *(_QWORD *)v89;
      swift_retain();
      v92 = v88;
      v93 = v90;
      v94 = 0;
    }
    swift_storeEnumTagMultiPayload(v92, v93, v94);
  }
  return a1;
}

char *sub_1003BF21C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *__dst;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  unsigned int (*v56)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v52 = v7;
  if (v8(a2, 1, v6))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = (int *)type metadata accessor for Brick(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
  *(_OWORD *)&a1[v10[7]] = *(_OWORD *)&a2[v10[7]];
  v11 = v10[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v53 = a3;
    v55 = v8;
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    v18 = *(int *)(v14 + 20);
    __dst = &v12[v18];
    v19 = &v13[v18];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    a3 = v53;
    v8 = v55;
  }
  v23 = v10[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 10, v26))
  {
    v28 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v54 = a3;
    v56 = v8;
    v29 = type metadata accessor for Playlist.Variant(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v24, v25, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v29);
    }
    v8 = v56;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 10, v26);
    a3 = v54;
  }
  v32 = v10[10];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  v35 = (int *)type metadata accessor for SegueContext(0);
  v36 = v35[5];
  v37 = &v33[v36];
  v38 = &v34[v36];
  if (v8(&v34[v36], 1, v6))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v37, v38, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v37, 0, 1, v6);
  }
  v33[v35[6]] = v34[v35[6]];
  v40 = v35[7];
  v41 = &v33[v40];
  v42 = &v34[v40];
  v43 = *(_QWORD *)v42;
  if (*(_QWORD *)v42)
  {
    v44 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = v43;
    *((_QWORD *)v41 + 1) = v44;
  }
  else
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
  }
  v45 = *(int *)(a3 + 20);
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
  {
    v49 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v46, v47, v49);
    swift_storeEnumTagMultiPayload(v46, v48, 1);
  }
  else
  {
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  return a1;
}

char *sub_1003BF66C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  int v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void *v76;
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void *__dst;
  uint64_t v98;
  uint64_t (*v100)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v98 = v6;
  v100 = v7;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, v5);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(a1, a2, v5);
LABEL_7:
  v11 = (int *)type metadata accessor for Brick(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = v11[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  v23 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease(v23);
  v24 = v11[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  v29 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease(v29);
  v30 = v11[8];
  v31 = (uint64_t)&a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for ArtworkImage.ViewModel(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35((uint64_t)v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      v47 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v31, v32, v47);
      v48 = *(int *)(v33 + 20);
      v49 = (void *)(v31 + v48);
      v50 = &v32[v48];
      v51 = type metadata accessor for Artwork.CropStyle(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
      v54 = v53(v49, 1, v51);
      v55 = v53(v50, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v55)
        {
          (*(void (**)(void *, char *, uint64_t))(v52 + 40))(v49, v50, v51);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
      }
      v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v45 = v49;
      v46 = v50;
LABEL_14:
      memcpy(v45, v46, v44);
      goto LABEL_21;
    }
    sub_10005B748(v31, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v45 = (void *)v31;
    v46 = v32;
    goto LABEL_14;
  }
  if (v37)
    goto LABEL_13;
  v38 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v31, v32, v38);
  v39 = *(int *)(v33 + 20);
  __dst = (void *)(v31 + v39);
  v40 = &v32[v39];
  v41 = type metadata accessor for Artwork.CropStyle(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v42 + 32))(__dst, v40, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v41);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_21:
  v56 = v11[9];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 10, v59);
  v63 = v61(v58, 10, v59);
  if (!v62)
  {
    if (!v63)
    {
      v68 = type metadata accessor for Playlist.Variant(0);
      v69 = *(_QWORD *)(v68 - 8);
      v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
      v71 = v70(v57, 1, v68);
      v72 = v70(v58, 1, v68);
      if (v71)
      {
        if (!v72)
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v57, v58, v68);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v57, 0, 1, v68);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v72)
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 40))(v57, v58, v68);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v69 + 8))(v57, v68);
      }
      v67 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v57, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v67 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v63)
    goto LABEL_27;
  v64 = type metadata accessor for Playlist.Variant(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v58, 1, v64))
  {
    v66 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v57, v58, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v57, 0, 1, v64);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 10, v59);
LABEL_34:
  v73 = v11[10];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = *(void **)&a1[v73];
  *(_QWORD *)&a1[v73] = *(_QWORD *)&a2[v73];

  v77 = (int *)type metadata accessor for SegueContext(0);
  v78 = v77[5];
  v79 = &v74[v78];
  v80 = &v75[v78];
  v81 = v100(&v74[v78], 1, v5);
  v82 = v100(v80, 1, v5);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v79, v80, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v79, 0, 1, v5);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v79, v5);
LABEL_39:
    v83 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v79, v80, v5);
LABEL_40:
  v74[v77[6]] = v75[v77[6]];
  v84 = v77[7];
  v85 = &v74[v84];
  v86 = &v75[v84];
  v87 = *(_QWORD *)&v74[v84];
  v88 = *(_QWORD *)&v75[v84];
  if (v87)
  {
    if (v88)
    {
      v89 = *((_QWORD *)v86 + 1);
      *(_QWORD *)v85 = v88;
      *((_QWORD *)v85 + 1) = v89;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v88)
  {
    v90 = *((_QWORD *)v86 + 1);
    *(_QWORD *)v85 = v88;
    *((_QWORD *)v85 + 1) = v90;
    goto LABEL_47;
  }
  *(_OWORD *)v85 = *(_OWORD *)v86;
LABEL_47:
  if (a1 != a2)
  {
    v91 = *(int *)(a3 + 20);
    v92 = &a1[v91];
    v93 = &a2[v91];
    sub_10004FF60((uint64_t)&a1[v91], (uint64_t *)&unk_1011ACE40);
    v94 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v93, v94) == 1)
    {
      v95 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v92, v93, v95);
      swift_storeEnumTagMultiPayload(v92, v94, 1);
    }
    else
    {
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003BFD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BFDA8);
}

uint64_t sub_1003BFDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Brick(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1003BFE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BFE2C);
}

uint64_t sub_1003BFE2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Brick(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011C6890);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003BFEAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Brick(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1003BFF48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;
  char *__dst;
  unsigned int (*v62)(uint64_t *, uint64_t, uint64_t);
  uint64_t v63;

  v4 = type metadata accessor for Brick(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v62 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v63 = v7;
    v60 = v8;
    if (v62(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = v6[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v6[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v6[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v6[8];
    __dst = (char *)a1 + v23;
    v24 = (char *)a2 + v23;
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v24, v29);
      v30 = *(int *)(v25 + 20);
      v31 = &__dst[v30];
      v32 = &v24[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v36 = v6[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
    {
      v41 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
    }
    v45 = v6[10];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *(void **)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v62((uint64_t *)v52, 1, v63))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v51, v52, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v51, 0, 1, v63);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
  }
  return a1;
}

double sub_1003C037C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  char *v18;
  double result;

  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v5 = (int *)type metadata accessor for Brick(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[7] + 8));
  v6 = a1 + v5[8];
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = v6 + *(int *)(v7 + 20);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  v12 = a1 + v5[9];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 10, v13))
  {
    v14 = type metadata accessor for Playlist.Variant(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }
  v16 = (id *)(a1 + v5[10]);

  v17 = type metadata accessor for SegueContext(0);
  v18 = (char *)v16 + *(int *)(v17 + 20);
  if (!v4((uint64_t)v18, 1, v2))
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v2);
  if (*(id *)((char *)v16 + *(int *)(v17 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1003C058C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v62 = v4;
  v59 = v5;
  if (v61(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for Brick(0);
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v11;
  v12 = v7[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v7[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = v7[8];
  v60 = a1;
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    v27 = v60;
  }
  else
  {
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
    v29 = *(int *)(v23 + 20);
    v30 = &v21[v29];
    v31 = &v22[v29];
    v32 = type metadata accessor for Artwork.CropStyle(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v27 = v60;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v35 = v7[9];
  v36 = &v27[v35];
  v37 = &a2[v35];
  v38 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 10, v38))
  {
    v40 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v41 = type metadata accessor for Playlist.Variant(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v37, 1, v41))
    {
      v43 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v36, v37, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v41);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 10, v38);
  }
  v44 = v7[10];
  v45 = &v27[v44];
  v46 = &a2[v44];
  v47 = *(void **)&a2[v44];
  *(_QWORD *)&v27[v44] = v47;
  v48 = (int *)type metadata accessor for SegueContext(0);
  v49 = v48[5];
  v50 = &v45[v49];
  v51 = &v46[v49];
  v52 = v47;
  if (v61(v51, 1, v62))
  {
    v53 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v50, v51, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v50, 0, 1, v62);
  }
  v45[v48[6]] = v46[v48[6]];
  v54 = v48[7];
  v55 = &v45[v54];
  v56 = &v46[v54];
  if (*(_QWORD *)v56)
  {
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v55 = *(_OWORD *)v56;
  }
  return v27;
}

char *sub_1003C0998(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void **v69;
  char *v70;
  void *v71;
  void *v72;
  id v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *__dst;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v90 = v5;
  v91 = v6;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Brick(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v12 + 1);
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  v15 = v10[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v16 + 1);
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v18);
  v19 = v10[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v20 + 1);
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v22);
  v23 = v10[8];
  v24 = (uint64_t)&a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for ArtworkImage.ViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28((uint64_t)v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      v40 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v24, v25, v40);
      v41 = *(int *)(v26 + 20);
      v42 = (void *)(v24 + v41);
      v43 = &v25[v41];
      v44 = type metadata accessor for Artwork.CropStyle(0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
      v47 = v46(v42, 1, v44);
      v48 = v46(v43, 1, v44);
      if (v47)
      {
        if (!v48)
        {
          (*(void (**)(void *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v48)
        {
          (*(void (**)(void *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
      }
      v37 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v38 = v42;
      v39 = v43;
LABEL_14:
      memcpy(v38, v39, v37);
      goto LABEL_21;
    }
    sub_10005B748(v24, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v37 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v38 = (void *)v24;
    v39 = v25;
    goto LABEL_14;
  }
  if (v30)
    goto LABEL_13;
  v31 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
  v32 = *(int *)(v26 + 20);
  __dst = (void *)(v24 + v32);
  v33 = &v25[v32];
  v34 = type metadata accessor for Artwork.CropStyle(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v35 + 16))(__dst, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_21:
  v49 = v10[9];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 10, v52);
  v56 = v54(v51, 10, v52);
  if (!v55)
  {
    if (!v56)
    {
      v62 = type metadata accessor for Playlist.Variant(0);
      v63 = *(_QWORD *)(v62 - 8);
      v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
      v65 = v64(v50, 1, v62);
      v66 = v64(v51, 1, v62);
      if (v65)
      {
        v61 = v91;
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v50, v51, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v50, 0, 1, v62);
          goto LABEL_40;
        }
      }
      else
      {
        v61 = v91;
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v50, v51, v62);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v63 + 8))(v50, v62);
      }
      v67 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v50, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v60 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    v61 = v91;
    goto LABEL_40;
  }
  if (v56)
    goto LABEL_27;
  v57 = type metadata accessor for Playlist.Variant(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v51, 1, v57))
  {
    v59 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v50, v51, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v50, 0, 1, v57);
  }
  v61 = v91;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 10, v52);
LABEL_40:
  v68 = v10[10];
  v69 = (void **)&a1[v68];
  v70 = &a2[v68];
  v71 = *(void **)&a2[v68];
  v72 = *v69;
  *v69 = v71;
  v73 = v71;

  v74 = (int *)type metadata accessor for SegueContext(0);
  v75 = v74[5];
  v76 = (char *)v69 + v75;
  v77 = &v70[v75];
  v78 = v61((char *)v69 + v75, 1, v4);
  v79 = v61(v77, 1, v4);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v76, v77, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v76, 0, 1, v4);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v90 + 8))(v76, v4);
LABEL_45:
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v90 + 24))(v76, v77, v4);
LABEL_46:
  *((_BYTE *)v69 + v74[6]) = v70[v74[6]];
  v81 = v74[7];
  v82 = (void **)((char *)v69 + v81);
  v83 = &v70[v81];
  v84 = *(uint64_t *)((char *)v69 + v81);
  v85 = *(_QWORD *)&v70[v81];
  if (!v84)
  {
    if (v85)
    {
      v87 = *((_QWORD *)v83 + 1);
      *v82 = v85;
      v82[1] = v87;
      swift_retain();
      return a1;
    }
LABEL_52:
    *(_OWORD *)v82 = *(_OWORD *)v83;
    return a1;
  }
  if (!v85)
  {
    swift_release();
    goto LABEL_52;
  }
  v86 = *((_QWORD *)v83 + 1);
  *v82 = v85;
  v82[1] = v86;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1003C108C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(char *, uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *__dst;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  unsigned int (*v47)(char *, uint64_t, uint64_t);

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v45 = v5;
  if (v6(a2, 1, v4))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v8 = (int *)type metadata accessor for Brick(0);
  *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
  *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  v9 = v8[8];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v46 = v6;
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v16 = *(int *)(v12 + 20);
    __dst = &v10[v16];
    v17 = &v11[v16];
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    v6 = v46;
  }
  v21 = v8[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 10, v24))
  {
    v26 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v47 = v6;
    v27 = type metadata accessor for Playlist.Variant(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v23, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v22, v23, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v27);
    }
    v6 = v47;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 10, v24);
  }
  v30 = v8[10];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  v33 = (int *)type metadata accessor for SegueContext(0);
  v34 = v33[5];
  v35 = &v31[v34];
  v36 = &v32[v34];
  if (v6(&v32[v34], 1, v4))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v35, v36, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v35, 0, 1, v4);
  }
  v31[v33[6]] = v32[v33[6]];
  v38 = v33[7];
  v39 = &v31[v38];
  v40 = &v32[v38];
  v41 = *(_QWORD *)v40;
  if (*(_QWORD *)v40)
  {
    v42 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = v41;
    *((_QWORD *)v39 + 1) = v42;
  }
  else
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
  }
  return a1;
}

char *sub_1003C145C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *__dst;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v94 = v5;
  v95 = v6;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Brick(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease(v16);
  v17 = v10[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  v22 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease(v22);
  v23 = v10[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  v28 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease(v28);
  v29 = v10[8];
  v30 = (uint64_t)&a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for ArtworkImage.ViewModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34((uint64_t)v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      v46 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v30, v31, v46);
      v47 = *(int *)(v32 + 20);
      v48 = (void *)(v30 + v47);
      v49 = &v31[v47];
      v50 = type metadata accessor for Artwork.CropStyle(0);
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
      v53 = v52(v48, 1, v50);
      v54 = v52(v49, 1, v50);
      if (v53)
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v54)
        {
          (*(void (**)(void *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v51 + 8))(v48, v50);
      }
      v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v44 = v48;
      v45 = v49;
LABEL_14:
      memcpy(v44, v45, v43);
      goto LABEL_21;
    }
    sub_10005B748(v30, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v43 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v44 = (void *)v30;
    v45 = v31;
    goto LABEL_14;
  }
  if (v36)
    goto LABEL_13;
  v37 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v30, v31, v37);
  v38 = *(int *)(v32 + 20);
  __dst = (void *)(v30 + v38);
  v39 = &v31[v38];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 32))(__dst, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_21:
  v55 = v10[9];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 10, v58);
  v62 = v60(v57, 10, v58);
  if (!v61)
  {
    if (!v62)
    {
      v68 = type metadata accessor for Playlist.Variant(0);
      v69 = *(_QWORD *)(v68 - 8);
      v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
      v71 = v70(v56, 1, v68);
      v72 = v70(v57, 1, v68);
      if (v71)
      {
        v67 = v95;
        if (!v72)
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v56, v57, v68);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v56, 0, 1, v68);
          goto LABEL_40;
        }
      }
      else
      {
        v67 = v95;
        if (!v72)
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 40))(v56, v57, v68);
          goto LABEL_40;
        }
        (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v68);
      }
      v73 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      goto LABEL_40;
    }
    sub_10004FF60((uint64_t)v56, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v66 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    v67 = v95;
    goto LABEL_40;
  }
  if (v62)
    goto LABEL_27;
  v63 = type metadata accessor for Playlist.Variant(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v57, 1, v63))
  {
    v65 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v56, v57, v63);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v56, 0, 1, v63);
  }
  v67 = v95;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 10, v58);
LABEL_40:
  v74 = v10[10];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = *(void **)&a1[v74];
  *(_QWORD *)&a1[v74] = *(_QWORD *)&a2[v74];

  v78 = (int *)type metadata accessor for SegueContext(0);
  v79 = v78[5];
  v80 = &v75[v79];
  v81 = &v76[v79];
  v82 = v67(&v75[v79], 1, v4);
  v83 = v67(v81, 1, v4);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v80, v81, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v80, 0, 1, v4);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v94 + 8))(v80, v4);
LABEL_45:
    v84 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v94 + 40))(v80, v81, v4);
LABEL_46:
  v75[v78[6]] = v76[v78[6]];
  v85 = v78[7];
  v86 = &v75[v85];
  v87 = &v76[v85];
  v88 = *(_QWORD *)&v75[v85];
  v89 = *(_QWORD *)&v76[v85];
  if (!v88)
  {
    if (v89)
    {
      v91 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = v89;
      *((_QWORD *)v86 + 1) = v91;
      return a1;
    }
LABEL_52:
    *(_OWORD *)v86 = *(_OWORD *)v87;
    return a1;
  }
  if (!v89)
  {
    swift_release();
    goto LABEL_52;
  }
  v90 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = v89;
  *((_QWORD *)v86 + 1) = v90;
  swift_release();
  return a1;
}

uint64_t sub_1003C1B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C1B1C);
}

uint64_t sub_1003C1B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Brick(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1003C1B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C1B64);
}

uint64_t sub_1003C1B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Brick(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1003C1BA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Brick(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003C1C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  ValueMetadata *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v0 = sub_100044B54(&qword_1011B01D0);
  v1 = sub_100044B54(&qword_1011B01C8);
  v2 = sub_100044B54(&qword_1011B01C0);
  v3 = sub_100044B54(&qword_1011AC3B0);
  v10 = sub_100044B54(&qword_1011AC450);
  v11 = (ValueMetadata *)sub_1003BDDF4();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
  v5 = sub_1000E3EE4();
  v6 = sub_100314AC0();
  v10 = v2;
  v11 = &type metadata for ActionType;
  v12 = v3;
  v13 = OpaqueTypeConformance2;
  v14 = v5;
  v15 = v6;
  v7 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v10 = v1;
  v11 = (ValueMetadata *)v7;
  v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
  v10 = v0;
  v11 = (ValueMetadata *)v8;
  return swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_1003C1D10(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9E404, 1);
}

uint64_t sub_1003C1D20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9E3DC, 1);
}

uint64_t sub_1003C1D30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1003BD470(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1003C1D64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0350;
  if (!qword_1011B0350)
  {
    v1 = sub_100044B54(&qword_1011B0328);
    sub_1003C1DD0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0350);
  }
  return result;
}

unint64_t sub_1003C1DD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0358;
  if (!qword_1011B0358)
  {
    v1 = sub_100044B54(&qword_1011A2E38);
    sub_100049F28(&qword_1011B0360, &qword_1011A2E30, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0358);
  }
  return result;
}

uint64_t sub_1003C1E54(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  const char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v21[15];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v16 = 0x7972617262694CLL;
    v17 = 0xE700000000000000;
LABEL_6:
    v18 = String.LocalizationValue.init(stringLiteral:)(v16, v17);
    static Locale.current.getter(v18);
    v12 = v7;
    v13 = v4;
    v11 = 0;
    v14 = 0;
    v15 = 256;
    return String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v13, v11, v14, v15);
  }
  static ApplicationCapabilities.shared.getter((uint64_t)v21);
  v8 = v21[3];
  swift_bridgeObjectRetain();
  sub_100065184(v21);
  v9 = sub_10075BDAC(2u, v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    v16 = 0x6F69646152;
    v17 = 0xE500000000000000;
    goto LABEL_6;
  }
  v10 = String.LocalizationValue.init(stringLiteral:)(0x754D20656C707041, 0xEB00000000636973);
  static Locale.current.getter(v10);
  v11 = "Apple Music catalog search source";
  v12 = v7;
  v13 = v4;
  v14 = 33;
  v15 = 2;
  return String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v13, v11, v14, v15);
}

uint64_t sub_1003C1FD4(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  const char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v20[15];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v12 = String.LocalizationValue.init(stringLiteral:)(0x62694C2072756F59, 0xEC00000079726172);
    static Locale.current.getter(v12);
    v13 = "Library search bar Placeholder";
    v14 = v7;
    v15 = v4;
    v16 = 30;
  }
  else
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v20);
    v8 = v20[3];
    swift_bridgeObjectRetain();
    sub_100065184(v20);
    v9 = sub_10075BDAC(2u, v8);
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      v10 = 0x8000000100E37F70;
      v11 = 0xD000000000000020;
    }
    else
    {
      v11 = 0x7453206F69646152;
      v10 = 0xEE00736E6F697461;
    }
    v17 = String.LocalizationValue.init(stringLiteral:)(v11, v10);
    static Locale.current.getter(v17);
    v13 = "Apple Music catalog search bar placeholder";
    v14 = v7;
    v15 = v4;
    v16 = 42;
  }
  return String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v15, v13, v16, 2);
}

uint64_t sub_1003C216C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010ABE70, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1003C21C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003C31C4();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1003C2224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003C31C4();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1003C2270(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  _QWORD v5[15];

  v2 = 0;
  if ((*a1 & 1) == 0 && *a2)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v5);
    v3 = v5[3];
    swift_bridgeObjectRetain();
    sub_100065184(v5);
    v2 = sub_10075BDAC(2u, v3);
    swift_bridgeObjectRelease(v3);
  }
  return v2 & 1;
}

uint64_t sub_1003C22DC(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  char v4;
  _QWORD v6[15];

  v2 = 1;
  if ((*a2 & 1) == 0 && *a1)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v6);
    v3 = v6[3];
    swift_bridgeObjectRetain();
    sub_100065184(v6);
    v4 = sub_10075BDAC(2u, v3);
    swift_bridgeObjectRelease(v3);
    v2 = v4 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1003C234C(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  char v4;
  _QWORD v6[15];

  v2 = 1;
  if ((*a1 & 1) == 0 && *a2)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v6);
    v3 = v6[3];
    swift_bridgeObjectRetain();
    sub_100065184(v6);
    v4 = sub_10075BDAC(2u, v3);
    swift_bridgeObjectRelease(v3);
    v2 = v4 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1003C23BC(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  _QWORD v5[15];

  v2 = 0;
  if ((*a2 & 1) == 0 && *a1)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v5);
    v3 = v5[3];
    swift_bridgeObjectRetain();
    sub_100065184(v5);
    v2 = sub_10075BDAC(2u, v3);
    swift_bridgeObjectRelease(v3);
  }
  return v2 & 1;
}

uint64_t sub_1003C2428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = _s13SourceManagerCMa(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_1003C2464();
  qword_10124CEA0 = v1;
  return result;
}

uint64_t sub_1003C2464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011B04A8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtCV5Music6Search13SourceManager__availableSources;
  v40 = &_swiftEmptySetSingleton;
  v7 = sub_100007E8C((uint64_t *)&unk_1011B03B8);
  Published.init(initialValue:)(&v40, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  v8 = OBJC_IVAR____TtCV5Music6Search13SourceManager_sourceAvailabilityBinding;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Music6Search13SourceManager_sourceAvailabilityBinding) = 0;
  ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  v9 = sub_100007E8C(&qword_1011A23A8);
  inited = swift_initStackObject(v9, &v39);
  *(_OWORD *)(inited + 16) = xmmword_100EB02A0;
  swift_retain();
  v11 = (void *)*ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v11);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v13;
  swift_retain();
  v14 = v11;
  v15 = (void *)*ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v15);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 80) = v17;
  swift_retain();
  v18 = v15;
  v19 = (void *)*ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v19);
  *(_QWORD *)(inited + 136) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 144) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 112) = v20;
  *(_QWORD *)(inited + 120) = v21;
  swift_retain();
  v22 = v19;
  v23 = (void *)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v23);
  *(_QWORD *)(inited + 176) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 184) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 152) = v24;
  *(_QWORD *)(inited + 160) = v25;
  swift_retain();
  v26 = v23;
  v27 = (void *)*ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v27);
  *(_QWORD *)(inited + 216) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 224) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 192) = v28;
  *(_QWORD *)(inited + 200) = v29;
  swift_retain();
  v30 = v27;
  v31 = (void *)*ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v31);
  *(_QWORD *)(inited + 256) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 264) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 232) = v32;
  *(_QWORD *)(inited + 240) = v33;
  v34 = swift_allocObject(&unk_1010C2E48, 24, 7);
  swift_weakInit(v34 + 16, v1);
  v35 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v35, 48, 7);
  v36 = v31;
  *(_QWORD *)(v1 + v8) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_1003C3508, v34);
  swift_release();
  return v1;
}

double sub_1003C26D4(uint64_t a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0, 0);
  if (swift_weakLoadStrong(v1))
  {
    sub_1003C2DEC();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1003C2728()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  BOOL v3;
  id v4;
  char v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  Swift::String v43;
  os_log_type_t type;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  static ApplicationCapabilities.shared.getter((uint64_t)&v49);
  sub_100065184(&v49);
  v2 = v50;
  v3 = (v50 & 0x80) == 0;
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v5 = sub_1003C2C68();

  if (v5 == 2)
    v6 = v3;
  else
    v6 = v5;
  if (qword_10119C9C0 != -1)
    swift_once(&qword_10119C9C0, sub_100899D30);
  v7 = type metadata accessor for Logger(0);
  sub_100048B14(v7, (uint64_t)qword_10124DB48);
  v8 = swift_retain_n(v1, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    type = v10;
    v11 = swift_slowAlloc(42, -1);
    v45 = swift_slowAlloc(128, -1);
    v47 = v45;
    *(_DWORD *)v11 = 136315906;
    if (v2 < 0)
      v12 = 0x676F6C61746163;
    else
      v12 = 0x7972617262696CLL;
    v13 = v1;
    v14 = v6;
    v46 = sub_100322200(v12, 0xE700000000000000, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_bridgeObjectRelease(0xE700000000000000);
    *(_WORD *)(v11 + 12) = 2080;
    v15 = 0x7972617262696CLL;
    if ((v5 & 1) == 0)
      v15 = 0x676F6C61746163;
    if (v5 == 2)
      v16 = 0;
    else
      v16 = v15;
    if (v5 == 2)
      v17 = 0;
    else
      v17 = 0xE700000000000000;
    v18 = Optional<A>.description.getter(v16, v17);
    v20 = v19;
    swift_bridgeObjectRelease(v17);
    v46 = sub_100322200(v18, v20, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    v21 = v20;
    v6 = v14;
    v1 = v13;
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v11 + 22) = 2080;
    if (v6)
      v22 = 0x7972617262696CLL;
    else
      v22 = 0x676F6C61746163;
    v46 = sub_100322200(v22, 0xE700000000000000, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_bridgeObjectRelease(0xE700000000000000);
    *(_WORD *)(v11 + 32) = 2080;
    KeyPath = swift_getKeyPath(&unk_100EB8508);
    v24 = swift_getKeyPath(&unk_100EB8530);
    static Published.subscript.getter(&v46, v13, KeyPath, v24);
    swift_release();
    swift_release();
    v25 = v46;
    v26 = sub_1003C3648();
    v27 = Set.description.getter(v25, &_s6SourceON, v26);
    v29 = v28;
    swift_bridgeObjectRelease(v25);
    v46 = sub_100322200(v27, v29, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_release_n(v13, 2, v30);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v9, type, "    Source:\n        - fallbackDefaultSource=%s\n        - userDefaultSource=%s\n        - preferredDefaultSource=%s\n        - availableSources=%s", (uint8_t *)v11, 0x2Au);
    swift_arrayDestroy(v45, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2, v31);
  }
  v32 = swift_getKeyPath(&unk_100EB8508);
  v33 = swift_getKeyPath(&unk_100EB8530);
  static Published.subscript.getter(&v47, v1, v32, v33);
  swift_release();
  swift_release();
  v34 = v47;
  v35 = v6;
  v36 = sub_10075C990(v6, v47);
  swift_bridgeObjectRelease(v34);
  if ((v36 & 1) != 0)
    return v35;
  v37 = swift_getKeyPath(&unk_100EB8508);
  v38 = swift_getKeyPath(&unk_100EB8530);
  static Published.subscript.getter(&v47, v1, v37, v38);
  swift_release();
  swift_release();
  v39 = v47;
  v40 = sub_10031E4DC(v47);
  swift_bridgeObjectRelease(v39);
  if (v40 != 2)
    return v40 & 1;
  v47 = 0;
  v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(80);
  v46 = v1;
  v42 = _s13SourceManagerCMa(0);
  _print_unlocked<A, B>(_:_:)(&v46, &v47, v42, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v43._object = (void *)0x8000000100E37ED0;
  v43._countAndFlagsBits = 0xD00000000000004ELL;
  String.append(_:)(v43);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v47, v48, "Music/Source.swift", 18, 2, 146, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003C2C68()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[2];
  _QWORD v8[4];

  v0 = sub_1003C35B8();
  v1 = sub_100055B68();
  NSUserDefaults.subscript.getter((uint64_t)&_s9SearchKeyON, v0, v1, (uint64_t)v8);
  if (v8[3])
  {
    if ((swift_dynamicCast(v7, v8, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
    {
      v2 = v7[0];
      v3 = v7[1];
      v4 = type metadata accessor for JSONDecoder(0);
      swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
      JSONDecoder.init()();
      v5 = sub_1003C35FC();
      dispatch thunk of JSONDecoder.decode<A>(_:from:)(v8, &_s6SourceON, v2, v3, &_s6SourceON, v5);
      sub_1000652DC(v2, v3);
      swift_release();
      return LOBYTE(v8[0]);
    }
  }
  else
  {
    sub_1002293F8((uint64_t)v8);
  }
  return 2;
}

uint64_t sub_1003C2D7C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EB8508);
  v2 = swift_getKeyPath(&unk_100EB8530);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

_QWORD *sub_1003C2DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  void *v7;
  uint64_t KeyPath;
  uint64_t v9;
  void *v11;
  void *v12;
  _QWORD v13[3];
  uint64_t v14;

  v1 = v0;
  v12 = &_swiftEmptySetSingleton;
  static ApplicationCapabilities.shared.getter((uint64_t)v13);
  v2 = v14;
  if ((sub_10075BDAC(0, v14) & 1) == 0)
    goto LABEL_6;
  v3 = BYTE1(v13[0]);
  if ((sub_10075BDAC(2u, v2) & 1) != 0)
  {
    if ((v3 & 1) != 0)
    {
      sub_1001959F4((char *)&v11, 1);
LABEL_8:
      v5 = 0;
      goto LABEL_9;
    }
LABEL_6:
    v5 = 1;
LABEL_9:
    sub_1001959F4((char *)&v11, v5);
    goto LABEL_10;
  }
  v4 = sub_10075BDAC(4u, v2);
  if ((v3 & 1) == 0)
    goto LABEL_6;
  v6 = v4;
  sub_1001959F4((char *)&v11, 1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
LABEL_10:
  v7 = v12;
  KeyPath = swift_getKeyPath(&unk_100EB8508);
  v9 = swift_getKeyPath(&unk_100EB8530);
  v11 = v7;
  swift_retain();
  static Published.subscript.setter(&v11, v1, KeyPath, v9);
  return sub_100065184(v13);
}

uint64_t sub_1003C2F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV5Music6Search13SourceManager__availableSources;
  v2 = sub_100007E8C(&qword_1011B04A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003C2F64()
{
  return _s13SourceManagerCMa(0);
}

uint64_t _s13SourceManagerCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011B03A0;
  if (!qword_1011B03A0)
    return swift_getSingletonMetadata(a1, &_s13SourceManagerCMn);
  return result;
}

void sub_1003C2FA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1003C301C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_1003C301C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B03B0)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011B03B8);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011B03B0);
  }
}

uint64_t _s6SourceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003C30C0 + 4 * byte_100EB831D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003C30F4 + 4 * byte_100EB8318[v4]))();
}

uint64_t sub_1003C30F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C30FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003C3104);
  return result;
}

uint64_t sub_1003C3110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003C3118);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003C311C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C3124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6SourceOMa()
{
  return &_s6SourceON;
}

unint64_t sub_1003C3144()
{
  unint64_t result;

  result = qword_1011B0498;
  if (!qword_1011B0498)
  {
    result = swift_getWitnessTable(&unk_100EB84A8, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1011B0498);
  }
  return result;
}

uint64_t sub_1003C3188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = _s13SourceManagerCMa(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

unint64_t sub_1003C31C4()
{
  unint64_t result;

  result = qword_1011B04A0;
  if (!qword_1011B04A0)
  {
    result = swift_getWitnessTable(&unk_100EB8430, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1011B04A0);
  }
  return result;
}

Swift::Int sub_1003C3208()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0xD000000000000018, 0x8000000100E2B4C0);
  return Hasher._finalize()();
}

uint64_t sub_1003C325C(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD000000000000018, 0x8000000100E2B4C0);
}

Swift::Int sub_1003C3278(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0xD000000000000018, 0x8000000100E2B4C0);
  return Hasher._finalize()();
}

uint64_t sub_1003C32C8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010ABEC0, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1003C3318(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x8000000100E2B4C0;
}

void sub_1003C3338(unsigned __int8 a1)
{
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v1 = a1;
  v2 = sub_1003C2C68();
  if (v1 == 2)
  {
    if (v2 == 2)
      return;
    goto LABEL_14;
  }
  if (v2 == 2)
    goto LABEL_14;
  if ((v1 & 1) != 0)
    v3 = 0x7972617262696CLL;
  else
    v3 = 0x676F6C61746163;
  if (v2)
    v4 = 0x7972617262696CLL;
  else
    v4 = 0x676F6C61746163;
  if (v3 == v4)
  {
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    return;
  }
  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, 0xE700000000000000, v4, 0xE700000000000000, 0);
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    v6 = type metadata accessor for JSONEncoder(0);
    v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    JSONEncoder.init()(v7);
    LOBYTE(v16) = v1;
    v8 = sub_100007E8C(&qword_1011B04B0);
    v9 = sub_1003C3510();
    v10 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v16, v8, v9);
    v12 = v11;
    swift_release();
    if (v12 >> 60 == 15)
    {
      v16 = 0u;
      v17 = 0u;
    }
    else
    {
      *((_QWORD *)&v17 + 1) = &type metadata for Data;
      *(_QWORD *)&v16 = v10;
      *((_QWORD *)&v16 + 1) = v12;
    }
    sub_1000A0168(v10, v12);
    v13 = sub_1003C35B8();
    v14 = sub_100055B68();
    NSUserDefaults.subscript.setter((uint64_t)&v16, v15, (uint64_t)&_s9SearchKeyON, v13, v14);
    sub_1000822B4(v10, v12);
  }
}

uint64_t sub_1003C34E4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1003C3508()
{
  uint64_t v0;

  return sub_1003C26D4(v0);
}

unint64_t sub_1003C3510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B04B8;
  if (!qword_1011B04B8)
  {
    v1 = sub_100044B54(&qword_1011B04B0);
    sub_1003C3574();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011B04B8);
  }
  return result;
}

unint64_t sub_1003C3574()
{
  unint64_t result;

  result = qword_1011B04C0;
  if (!qword_1011B04C0)
  {
    result = swift_getWitnessTable(&unk_100EB83E0, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1011B04C0);
  }
  return result;
}

unint64_t sub_1003C35B8()
{
  unint64_t result;

  result = qword_1011B04C8;
  if (!qword_1011B04C8)
  {
    result = swift_getWitnessTable(&unk_100EB85C8, &_s9SearchKeyON);
    atomic_store(result, (unint64_t *)&qword_1011B04C8);
  }
  return result;
}

unint64_t sub_1003C35FC()
{
  unint64_t result;

  result = qword_1011B04D0;
  if (!qword_1011B04D0)
  {
    result = swift_getWitnessTable(&unk_100EB8408, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1011B04D0);
  }
  return result;
}

unint64_t sub_1003C3648()
{
  unint64_t result;

  result = qword_1011B04D8;
  if (!qword_1011B04D8)
  {
    result = swift_getWitnessTable(&unk_100EB8468, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1011B04D8);
  }
  return result;
}

uint64_t _s9SearchKeyOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003C36CC + 4 * byte_100EB8322[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003C36EC + 4 * byte_100EB8327[v4]))();
}

_BYTE *sub_1003C36CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003C36EC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003C36F4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003C36FC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003C3704(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003C370C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s9SearchKeyOMa()
{
  return &_s9SearchKeyON;
}

unint64_t sub_1003C372C()
{
  unint64_t result;

  result = qword_1011B04E0;
  if (!qword_1011B04E0)
  {
    result = swift_getWitnessTable(&unk_100EB85A0, &_s9SearchKeyON);
    atomic_store(result, (unint64_t *)&qword_1011B04E0);
  }
  return result;
}

id sub_1003C3770()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for NowPlayingDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_1003CC2D8();
  qword_10124CEA8 = (uint64_t)result;
  return result;
}

uint64_t sub_1003C37AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t);
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];

  v1 = v0;
  v2 = type metadata accessor for WidgetDiskCache(0);
  v56 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v56 + 64);
  __chkstk_darwin(v2);
  v58 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B08E8);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119FA90);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v0 + OBJC_IVAR____TtC5Music22NowPlayingDataProvider_logger;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Clearing current item, progress, and background", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = *(_QWORD *)(v1 + 16);
  v18 = type metadata accessor for WidgetMusicItem(0);
  v53 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v54 = v18;
  v53(v12, 1, 1);
  v57 = v12;
  sub_1003CCF04((uint64_t)v12);
  v19 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  sub_1003CCF20((uint64_t)v9);
  v20 = v17
      + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground;
  swift_beginAccess(v17+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground, v60, 33, 0);
  v52 = sub_100007E8C(&qword_1011B08F0);
  v21 = (uint64_t *)(v20 + *(int *)(v52 + 44));
  v23 = *v21;
  v22 = v21[1];
  static TaskPriority.userInitiated.getter(v24);
  v25 = type metadata accessor for TaskPriority(0);
  v49 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v50 = v25;
  v49(v6, 0, 1);
  v26 = v58;
  sub_10005B704(v20, v58, type metadata accessor for WidgetDiskCache);
  v59 = 1;
  v27 = *(unsigned __int8 *)(v56 + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = (v3 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v47 = v30 + 8;
  v48 = v27 | 7;
  v31 = swift_allocObject(&unk_1010C31F8, v30 + 8, v27 | 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  sub_10005B6C0(v26, v31 + v28, type metadata accessor for WidgetDiskCache);
  v51 = v29;
  v32 = (_QWORD *)(v31 + v29);
  *v32 = v23;
  v32[1] = v22;
  v56 = v30;
  sub_100065228((uint64_t)&v59, v31 + v30, &qword_1011AE0E8);
  swift_bridgeObjectRetain();
  sub_1000E8908((uint64_t)v6, (uint64_t)&unk_1011B0978, v31);
  swift_release();
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A13B0);
  v33 = swift_endAccess(v60);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Clearing current container and background", v36, 2u);
    swift_slowDealloc(v36, -1, -1);
  }

  v37 = (uint64_t)v57;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v53)(v57, 1, 1, v54);
  sub_1003CD4A8(v37);
  v38 = v17
      + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground;
  v39 = swift_beginAccess(v17+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground, v60, 33, 0);
  v40 = (uint64_t *)(v38 + *(int *)(v52 + 44));
  v42 = *v40;
  v41 = v40[1];
  static TaskPriority.userInitiated.getter(v39);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v49)(v6, 0, 1, v50);
  v43 = v58;
  sub_10005B704(v38, v58, type metadata accessor for WidgetDiskCache);
  v59 = 1;
  v44 = swift_allocObject(&unk_1010C3220, v47, v48);
  *(_QWORD *)(v44 + 16) = 0;
  *(_QWORD *)(v44 + 24) = 0;
  sub_10005B6C0(v43, v44 + v28, type metadata accessor for WidgetDiskCache);
  v45 = (_QWORD *)(v44 + v51);
  *v45 = v42;
  v45[1] = v41;
  sub_100065228((uint64_t)&v59, v44 + v56, &qword_1011AE0E8);
  swift_bridgeObjectRetain();
  sub_1000E8908((uint64_t)v6, (uint64_t)&unk_1011B0980, v44);
  swift_release();
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A13B0);
  return swift_endAccess(v60);
}

void sub_1003C3C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_100007E8C(&qword_1011B0960);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (void *)objc_opt_self(MPAVRoutingController);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_1010C3130, v9 + v6, v8 | 7);
  *(_QWORD *)(v10 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1003D0588;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001E5304;
  aBlock[3] = &unk_1010C3148;
  v11 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(v7, "getActiveRouteWithCompletion:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
}

void sub_1003C3DD0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _QWORD aBlock[6];

  v6 = sub_100007E8C(&qword_1011B0960);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = objc_msgSend(objc_allocWithZone((Class)MPCPlayerRequest), "init");
  v10 = a1;
  v11 = MPCPlaybackEngine.Configuration.systemMusic.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = objc_msgSend((id)objc_opt_self(MPCPlayerPath), "pathWithRoute:bundleID:playerID:", v10, 0, v12);

  objc_msgSend(v9, "setPlayerPath:", v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(&unk_1010C3180, v15 + v8, v14 | 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v9;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1003D0664;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E2F4;
  aBlock[3] = &unk_1010C3198;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = v9;
  v19 = objc_msgSend(v18, "performWithCompletion:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);
  swift_unknownObjectRelease(v19);

}

uint64_t sub_1003C3FD8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __CFString *v16;
  __CFString *v17;
  __CFString *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v29;
  uint64_t v30;

  if (a1)
  {
    v5 = (unint64_t)objc_msgSend(a1, "state");
    v6 = v5 - 2;
    if (v5 - 2 <= 4 && ((0x1Du >> v6) & 1) != 0)
    {
      v7 = 8 * v6;
      v8 = 0x100010000uLL >> (v7 & 0xF8);
      v5 = *(_QWORD *)((char *)&unk_100EB88B0 + v7);
      goto LABEL_7;
    }
  }
  else
  {
    v5 = 0;
  }
  LOBYTE(v8) = 2;
LABEL_7:
  v9 = a4;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(32, -1);
    v13 = swift_slowAlloc(96, -1);
    v30 = v13;
    *(_DWORD *)v12 = 136446722;
    LOBYTE(v29) = v8;
    v14 = String.init<A>(describing:)(&v29, &type metadata for NowPlayingDataProvider.PlayerState);
    v16 = (__CFString *)v15;
    v29 = (id)sub_100322200(v14, v15, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v12 + 12) = 2082;
    if (v5 <= 6)
    {
      v16 = off_1010C3390[v5];
      v17 = off_1010C3358[v5];
    }
    v18 = v16;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v29 = (id)sub_100322200(v19, v21, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v21).n128_u64[0];
    *(_WORD *)(v12 + 22) = 2082;
    v29 = objc_msgSend(v9, "playerPath", v22);
    v23 = sub_100007E8C(&qword_1011B0968);
    v24 = String.init<A>(describing:)(&v29, v23);
    v26 = v25;
    v29 = (id)sub_100322200(v24, v25, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    swift_bridgeObjectRelease(v26);

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Widget state: %{public}s, mpcState: %{public}s, path: %{public}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy(v13, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  LOBYTE(v30) = v8;
  v27 = sub_100007E8C(&qword_1011B0960);
  return CheckedContinuation.resume(returning:)(&v30, v27);
}

uint64_t sub_1003C42CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005D152C(*a1, *a2);
}

Swift::Int sub_1003C42D8()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE600000000000000;
  v3 = 0x646573756170;
  if (v1 != 1)
  {
    v3 = 0x646570706F7473;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x676E6979616C70;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1003C4374(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x646573756170;
  if (*v1 != 1)
  {
    v3 = 0x646570706F7473;
    v2 = 0xE700000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x676E6979616C70;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1003C43EC(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE600000000000000;
  v4 = 0x646573756170;
  if (v2 != 1)
  {
    v4 = 0x646570706F7473;
    v3 = 0xE700000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x676E6979616C70;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE700000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_1003C4484@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1003D09C4(*a1);
  *a2 = result;
  return result;
}

void sub_1003C44B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x646573756170;
  if (v2 != 1)
  {
    v5 = 0x646570706F7473;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x676E6979616C70;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1003C450C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v3[11] = v5;
  v3[12] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v7);
  v3[15] = swift_task_alloc(v7);
  v8 = type metadata accessor for WidgetMusicItem(0);
  v3[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[17] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v10);
  v3[19] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v3[20] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v3[21] = v13;
  v3[22] = v14;
  return swift_task_switch(sub_1003C4634, v13, v14);
}

uint64_t sub_1003C4634()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = *(void **)(v0 + 64);
    v3 = dword_1011B0954;
    v4 = v1;
    v5 = v2;
    v6 = (_QWORD *)swift_task_alloc(v3);
    *(_QWORD *)(v0 + 184) = v6;
    *v6 = v0;
    v6[1] = sub_1003C491C;
    return sub_1003C4F10(*(_QWORD *)(v0 + 120), (uint64_t)v4, *(_QWORD *)(v0 + 64), 1);
  }
  else
  {
    swift_release();
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Clearing current item and background", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 96);
    v37 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 80);

    v19 = *(_QWORD *)(v17 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v15, 1, 1, v12);
    sub_1003CCF04(v15);
    v20 = v19
        + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground;
    swift_beginAccess(v19+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground, v0 + 16, 33, 0);
    v21 = (uint64_t *)(v20 + *(int *)(sub_100007E8C(&qword_1011B08F0) + 44));
    v22 = v21[1];
    v36 = *v21;
    static TaskPriority.userInitiated.getter(v23);
    v24 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 0, 1, v24);
    sub_10005B704(v20, v16, type metadata accessor for WidgetDiskCache);
    *(_QWORD *)(v0 + 40) = 1;
    v25 = *(unsigned __int8 *)(v18 + 80);
    v26 = (v25 + 32) & ~v25;
    v27 = (v37 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject(&unk_1010C31D0, v28 + 8, v25 | 7);
    *(_QWORD *)(v29 + 16) = 0;
    *(_QWORD *)(v29 + 24) = 0;
    sub_10005B6C0(v16, v29 + v26, type metadata accessor for WidgetDiskCache);
    v30 = (_QWORD *)(v29 + v27);
    *v30 = v36;
    v30[1] = v22;
    sub_100065228(v0 + 40, v29 + v28, &qword_1011AE0E8);
    swift_bridgeObjectRetain();
    sub_1000E8908(v14, (uint64_t)&unk_1011B0970, v29);
    swift_release();
    sub_10004FF60(v14, (uint64_t *)&unk_1011A13B0);
    swift_endAccess(v0 + 16);
    v31 = *(_QWORD *)(v0 + 144);
    v33 = *(_QWORD *)(v0 + 112);
    v32 = *(_QWORD *)(v0 + 120);
    v35 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003C491C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 184));
  return swift_task_switch(sub_1003C4968, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_1003C4968()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 48))(v1, 1, *(_QWORD *)(v0 + 128)) == 1)
  {
    v2 = *(void **)(v0 + 56);
    swift_release();

    v3 = sub_10004FF60(v1, &qword_10119FA90);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Clearing current item and background", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 96);
    v53 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);

    v14 = *(_QWORD *)(v12 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v10, 1, 1, v7);
    sub_1003CCF04(v10);
    v15 = v14
        + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground;
    swift_beginAccess(v14+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground, v0 + 16, 33, 0);
    v16 = (uint64_t *)(v15 + *(int *)(sub_100007E8C(&qword_1011B08F0) + 44));
    v17 = v16[1];
    v52 = *v16;
    static TaskPriority.userInitiated.getter(v18);
    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 0, 1, v19);
    sub_10005B704(v15, v11, type metadata accessor for WidgetDiskCache);
    *(_QWORD *)(v0 + 40) = 1;
    v20 = *(unsigned __int8 *)(v13 + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = (v53 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject(&unk_1010C31D0, v23 + 8, v20 | 7);
    *(_QWORD *)(v24 + 16) = 0;
    *(_QWORD *)(v24 + 24) = 0;
    sub_10005B6C0(v11, v24 + v21, type metadata accessor for WidgetDiskCache);
    v25 = (_QWORD *)(v24 + v22);
    *v25 = v52;
    v25[1] = v17;
    sub_100065228(v0 + 40, v24 + v23, &qword_1011AE0E8);
    swift_bridgeObjectRetain();
    sub_1000E8908(v9, (uint64_t)&unk_1011B0970, v24);
    swift_release();
    sub_10004FF60(v9, (uint64_t *)&unk_1011A13B0);
    swift_endAccess(v0 + 16);
    v26 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 96);
    v29 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v33 = *(_QWORD *)(v0 + 144);
    v32 = *(_QWORD *)(v0 + 152);
    sub_10005B6C0(v1, v32, type metadata accessor for WidgetMusicItem);
    v34 = sub_10005B704(v32, v33, type metadata accessor for WidgetMusicItem);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    v37 = os_log_type_enabled(v35, v36);
    v38 = *(_QWORD *)(v0 + 144);
    if (v37)
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v54 = v40;
      *(_DWORD *)v39 = 136446210;
      v41 = sub_100400BD0();
      v43 = v42;
      *(_QWORD *)(v0 + 48) = sub_100322200(v41, v42, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
      swift_bridgeObjectRelease(v43);
      sub_10005B748(v38, type metadata accessor for WidgetMusicItem);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Updating current item: %{public}s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);

    }
    else
    {

      sub_10005B748(v38, type metadata accessor for WidgetMusicItem);
    }
    v44 = *(_QWORD *)(v0 + 152);
    v45 = *(_QWORD *)(v0 + 128);
    v46 = *(_QWORD *)(v0 + 136);
    v47 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 16);
    sub_10005B704(v44, v47, type metadata accessor for WidgetMusicItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
    sub_1003CCF04(v47);
    v48 = *(void **)(v44 + *(int *)(v45 + 72));
    *(_QWORD *)(v0 + 200) = v48;
    v49 = dword_1011B0544;
    v50 = v48;
    v51 = (_QWORD *)swift_task_alloc(v49);
    *(_QWORD *)(v0 + 208) = v51;
    *v51 = v0;
    v51[1] = sub_1003C4E14;
    return sub_1003CC548((uint64_t)v48);
  }
}

uint64_t sub_1003C4E14(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v4 = *(void **)(*v1 + 200);
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = a1;
  swift_task_dealloc(v3);

  return swift_task_switch(sub_1003C4E70, *(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
}

uint64_t sub_1003C4E70()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(void **)(v0 + 56);
  swift_release();
  sub_1003CD1A0(v1);

  sub_10005B748(v2, type metadata accessor for WidgetMusicItem);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C4F10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_BYTE *)(v4 + 1416) = a4;
  *(_QWORD *)(v4 + 304) = a2;
  *(_QWORD *)(v4 + 312) = a3;
  *(_QWORD *)(v4 + 296) = a1;
  v5 = type metadata accessor for MusicMovie(0);
  *(_QWORD *)(v4 + 320) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 328) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 336) = swift_task_alloc(v7);
  *(_QWORD *)(v4 + 344) = swift_task_alloc(v7);
  v8 = type metadata accessor for TVEpisode(0);
  *(_QWORD *)(v4 + 352) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 360) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 368) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 376) = swift_task_alloc(v10);
  v11 = type metadata accessor for MusicVideo(0);
  *(_QWORD *)(v4 + 384) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 392) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 400) = swift_task_alloc(v13);
  *(_QWORD *)(v4 + 408) = swift_task_alloc(v13);
  v14 = sub_100007E8C(&qword_1011A19A0);
  *(_QWORD *)(v4 + 416) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011B8D50);
  *(_QWORD *)(v4 + 424) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicSiriRepresentation(0);
  *(_QWORD *)(v4 + 432) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v4 + 440) = v17;
  *(_QWORD *)(v4 + 448) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ArtworkImage.Placeholder(0);
  *(_QWORD *)(v4 + 456) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 464) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 472) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 480) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 488) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 496) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 504) = swift_task_alloc(v19);
  *(_QWORD *)(v4 + 512) = swift_task_alloc(v19);
  v20 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 520) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 528) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 536) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 544) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 552) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 560) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 568) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 576) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 584) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 592) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 600) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 608) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 616) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 624) = swift_task_alloc(v20);
  v21 = type metadata accessor for URL(0);
  *(_QWORD *)(v4 + 632) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v4 + 640) = v22;
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 648) = swift_task_alloc(v23);
  *(_QWORD *)(v4 + 656) = swift_task_alloc(v23);
  *(_QWORD *)(v4 + 664) = swift_task_alloc(v23);
  *(_QWORD *)(v4 + 672) = swift_task_alloc(v23);
  *(_QWORD *)(v4 + 680) = swift_task_alloc(v23);
  *(_QWORD *)(v4 + 688) = swift_task_alloc(v23);
  *(_QWORD *)(v4 + 696) = swift_task_alloc(v23);
  v24 = type metadata accessor for Song(0);
  *(_QWORD *)(v4 + 704) = v24;
  v25 = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v4 + 712) = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v26);
  *(_QWORD *)(v4 + 728) = swift_task_alloc(v26);
  v27 = type metadata accessor for Station(0);
  *(_QWORD *)(v4 + 736) = v27;
  v28 = *(_QWORD *)(v27 - 8);
  *(_QWORD *)(v4 + 744) = v28;
  v29 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 752) = swift_task_alloc(v29);
  *(_QWORD *)(v4 + 760) = swift_task_alloc(v29);
  *(_QWORD *)(v4 + 768) = swift_task_alloc(v29);
  *(_QWORD *)(v4 + 776) = swift_task_alloc(v29);
  v30 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v4 + 784) = v30;
  v31 = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v4 + 792) = v31;
  v32 = (*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 800) = swift_task_alloc(v32);
  *(_QWORD *)(v4 + 808) = swift_task_alloc(v32);
  *(_QWORD *)(v4 + 816) = swift_task_alloc(v32);
  *(_QWORD *)(v4 + 824) = swift_task_alloc(v32);
  v33 = type metadata accessor for Album(0);
  *(_QWORD *)(v4 + 832) = v33;
  v34 = *(_QWORD *)(v33 - 8);
  *(_QWORD *)(v4 + 840) = v34;
  v35 = (*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 848) = swift_task_alloc(v35);
  *(_QWORD *)(v4 + 856) = swift_task_alloc(v35);
  *(_QWORD *)(v4 + 864) = swift_task_alloc(v35);
  *(_QWORD *)(v4 + 872) = swift_task_alloc(v35);
  v36 = type metadata accessor for WidgetMusicItem(0);
  *(_QWORD *)(v4 + 880) = v36;
  v37 = *(_QWORD *)(v36 - 8);
  *(_QWORD *)(v4 + 888) = v37;
  *(_QWORD *)(v4 + 896) = swift_task_alloc((*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003C5380, 0, 0);
}

uint64_t sub_1003C5380()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  sub_1003CE940((_QWORD *)(v0 + 56));
  v1 = *(void **)(v0 + 312);
  if (!*(_QWORD *)(v0 + 80))
  {

    sub_10004FF60(v0 + 56, &qword_1011A16C8);
    v5 = *(_QWORD *)(v0 + 896);
    v6 = *(_QWORD *)(v0 + 872);
    v7 = *(_QWORD *)(v0 + 864);
    v8 = *(_QWORD *)(v0 + 856);
    v9 = *(_QWORD *)(v0 + 848);
    v10 = *(_QWORD *)(v0 + 824);
    v11 = *(_QWORD *)(v0 + 816);
    v12 = *(_QWORD *)(v0 + 808);
    v13 = *(_QWORD *)(v0 + 800);
    v46 = *(_QWORD *)(v0 + 776);
    v47 = *(_QWORD *)(v0 + 768);
    v48 = *(_QWORD *)(v0 + 760);
    v49 = *(_QWORD *)(v0 + 752);
    v50 = *(_QWORD *)(v0 + 728);
    v51 = *(_QWORD *)(v0 + 720);
    v52 = *(_QWORD *)(v0 + 696);
    v53 = *(_QWORD *)(v0 + 688);
    v54 = *(_QWORD *)(v0 + 680);
    v55 = *(_QWORD *)(v0 + 672);
    v56 = *(_QWORD *)(v0 + 664);
    v57 = *(_QWORD *)(v0 + 656);
    v63 = *(_QWORD *)(v0 + 616);
    v65 = *(_QWORD *)(v0 + 608);
    v66 = *(_QWORD *)(v0 + 600);
    v68 = *(_QWORD *)(v0 + 592);
    v70 = *(_QWORD *)(v0 + 584);
    v72 = *(_QWORD *)(v0 + 576);
    v58 = *(_QWORD *)(v0 + 568);
    v59 = *(_QWORD *)(v0 + 648);
    v60 = *(_QWORD *)(v0 + 560);
    v61 = *(_QWORD *)(v0 + 624);
    v62 = *(_QWORD *)(v0 + 552);
    v64 = *(_QWORD *)(v0 + 544);
    v67 = *(_QWORD *)(v0 + 536);
    v69 = *(_QWORD *)(v0 + 528);
    v71 = *(_QWORD *)(v0 + 520);
    v73 = *(_QWORD *)(v0 + 512);
    v74 = *(_QWORD *)(v0 + 504);
    v75 = *(_QWORD *)(v0 + 496);
    v76 = *(_QWORD *)(v0 + 488);
    v77 = *(_QWORD *)(v0 + 480);
    v78 = *(_QWORD *)(v0 + 472);
    v79 = *(_QWORD *)(v0 + 464);
    v80 = *(_QWORD *)(v0 + 456);
    v81 = *(_QWORD *)(v0 + 448);
    v82 = *(_QWORD *)(v0 + 424);
    v83 = *(_QWORD *)(v0 + 416);
    v84 = *(_QWORD *)(v0 + 408);
    v85 = *(_QWORD *)(v0 + 400);
    v86 = *(_QWORD *)(v0 + 376);
    v87 = *(_QWORD *)(v0 + 368);
    v88 = *(_QWORD *)(v0 + 344);
    v89 = *(_QWORD *)(v0 + 336);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), 1, 1, *(_QWORD *)(v0 + 880));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = (_QWORD *)(v0 + 16);
  v3 = v0 + 136;
  sub_100064C48((__int128 *)(v0 + 56), v0 + 16);
  if (v1)
  {
    v4 = *(id *)(v0 + 312);
    sub_1003CE940((_QWORD *)(v0 + 96));

  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  sub_10004A160(v0 + 96, v0 + 136, &qword_1011A16C8);
  if (!*(_QWORD *)(v0 + 160))
    goto LABEL_15;
  v15 = (_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 872);
  v17 = *(_QWORD *)(v0 + 832);
  sub_10004A160(v0 + 136, v0 + 256, &qword_1011A16C8);
  v18 = sub_100007E8C(&qword_1011A16E0);
  if (!swift_dynamicCast(v16, v0 + 256, v18, v17, 0))
  {
    if (swift_dynamicCast(*(_QWORD *)(v0 + 824), v0 + 256, v18, *(_QWORD *)(v0 + 784), 0))
    {
      v90 = v0 + 136;
      v19 = (_QWORD *)(v0 + 16);
      v20 = *(_QWORD *)(v0 + 816);
      v21 = *(_QWORD *)(v0 + 792);
      v22 = *(_QWORD *)(v0 + 784);
      v29 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v21 + 32))(v20, *(_QWORD *)(v0 + 824), v22);
      v24 = Playlist.id.getter(v29);
      v26 = v30;
      v27 = Playlist.catalogID.getter(v24);
      goto LABEL_11;
    }
    if (swift_dynamicCast(*(_QWORD *)(v0 + 776), v0 + 256, v18, *(_QWORD *)(v0 + 736), 0))
    {
      v34 = *(_QWORD *)(v0 + 768);
      v35 = *(_QWORD *)(v0 + 744);
      v36 = *(_QWORD *)(v0 + 736);
      v37 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v35 + 32))(v34, *(_QWORD *)(v0 + 776), v36);
      v24 = Station.id.getter(v37);
      v26 = v38;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
LABEL_17:
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v15);
      v31 = 0;
      v32 = 0;
      goto LABEL_19;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 256));
LABEL_15:
    v15 = (_QWORD *)(v0 + 176);
    sub_10004A160(v0 + 96, v0 + 176, &qword_1011A16C8);
    v24 = *(_QWORD *)(v0 + 200);
    if (!v24)
    {
      sub_10004FF60(v0 + 176, &qword_1011A16C8);
      v31 = 0;
      v32 = 0;
      v26 = 0;
      goto LABEL_19;
    }
    v39 = *(_QWORD *)(v0 + 208);
    sub_100007E68((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 200));
    v24 = dispatch thunk of MusicItem.id.getter(v24, *(_QWORD *)(v39 + 8));
    v26 = v40;
    goto LABEL_17;
  }
  v90 = v0 + 136;
  v19 = (_QWORD *)(v0 + 16);
  v20 = *(_QWORD *)(v0 + 864);
  v21 = *(_QWORD *)(v0 + 840);
  v22 = *(_QWORD *)(v0 + 832);
  v23 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v21 + 32))(v20, *(_QWORD *)(v0 + 872), v22);
  v24 = Album.id.getter(v23);
  v26 = v25;
  v27 = Album.catalogID.getter(v24);
LABEL_11:
  v31 = v27;
  v32 = v28;
  v33 = v20;
  v2 = v19;
  v3 = v90;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v33, v22);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 256));
LABEL_19:
  *(_QWORD *)(v0 + 928) = v26;
  *(_QWORD *)(v0 + 920) = v24;
  *(_QWORD *)(v0 + 912) = v32;
  *(_QWORD *)(v0 + 904) = v31;
  sub_10004FF60(v3, &qword_1011A16C8);
  v41 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 936) = v41;
  *(_QWORD *)(v0 + 952) = sub_100007E68(v2, v41);
  v42 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 960) = static MainActor.shared.getter(v43);
  v44 = dispatch thunk of Actor.unownedExecutor.getter(v42, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003C59F4, v44, v45);
}

uint64_t sub_1003C59F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 944);
  v2 = *(_QWORD *)(v0 + 936);
  swift_release();
  *(_BYTE *)(v0 + 1417) = sub_10040077C(v2, v1) & 1;
  return swift_task_switch(sub_1003C5A58, 0, 0);
}

uint64_t sub_1003C5A58()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t *v192;
  uint64_t *v193;
  _QWORD *v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  __n128 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(uint64_t, uint64_t, uint64_t);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unsigned int (*v237)(uint64_t, uint64_t, uint64_t);
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t *v266;
  uint64_t *v267;
  uint64_t *v268;
  _QWORD *v269;
  _QWORD *v270;
  _QWORD *v271;
  uint64_t v272;
  uint64_t v273;
  void *v274;
  _QWORD *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;
  _QWORD *v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  __int128 v368;
  __int128 v369;
  uint64_t v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char v389;
  uint64_t v390;
  char v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  _QWORD *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t *v417;
  uint64_t v418;
  uint64_t *v419;
  uint64_t v420;
  uint64_t *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  _QWORD *v426;
  uint64_t v427;
  _QWORD *v428;
  uint64_t v429;

  v1 = (char *)(v0 + 1417);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 704);
  sub_100064C78(v0 + 16, v0 + 216);
  v4 = sub_100007E8C(&qword_1011A16E0);
  if (swift_dynamicCast(v2, v0 + 216, v4, v3, 0))
  {
    v5 = *(_QWORD *)(v0 + 640);
    v6 = *(_QWORD *)(v0 + 632);
    v7 = *(_QWORD *)(v0 + 624);
    v8 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 712) + 32))(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 704));
    v9 = Song.title.getter(v8);
    *(_QWORD *)(v0 + 968) = v9;
    *(_QWORD *)(v0 + 976) = v10;
    v11 = Song.artistName.getter(v9);
    *(_QWORD *)(v0 + 984) = v11;
    *(_QWORD *)(v0 + 992) = v12;
    Song.url.getter(v11);
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v13(v7, 1, v6) != 1)
    {
      v18 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 624), *(_QWORD *)(v0 + 632));
      goto LABEL_10;
    }
    v14 = *(_QWORD *)(v0 + 632);
    v15 = *(_QWORD *)(v0 + 616);
    URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v15, 1, v14);
    if ((_DWORD)result != 1)
    {
      v17 = *(_QWORD *)(v0 + 624);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 632));
      v18 = sub_10004FF60(v17, &qword_10119E460);
LABEL_10:
      v32 = *(_QWORD *)(v0 + 512);
      Song.artwork.getter(v18);
      v33 = type metadata accessor for Artwork(0);
      *(_QWORD *)(v0 + 1000) = v33;
      v34 = *(_QWORD *)(v33 - 8);
      *(_QWORD *)(v0 + 1008) = v34;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
      {
        v424 = v0 + 96;
        v426 = (_QWORD *)(v0 + 216);
        v428 = (_QWORD *)(v0 + 16);
        v419 = (uint64_t *)(v0 + 720);
        v421 = (uint64_t *)(v0 + 704);
        v417 = (uint64_t *)(v0 + 712);
        sub_10004FF60(*(_QWORD *)(v0 + 512), &qword_1011A1440);
        v375 = *(_QWORD *)(v0 + 984);
        v382 = *(_QWORD *)(v0 + 992);
        v368 = *(_OWORD *)(v0 + 968);
        v35 = *v1;
        v402 = *(_QWORD *)(v0 + 928);
        v407 = *(_QWORD *)(v0 + 912);
        v392 = *(_QWORD *)(v0 + 920);
        v397 = *(_QWORD *)(v0 + 904);
        v36 = *(_QWORD *)(v0 + 896);
        v37 = *(int **)(v0 + 880);
        v415 = (uint64_t *)(v0 + 696);
        v347 = *(_QWORD *)(v0 + 640);
        v354 = *(_QWORD *)(v0 + 632);
        v361 = *(_QWORD *)(v0 + 696);
        v39 = *(_QWORD *)(v0 + 448);
        v38 = *(_QWORD *)(v0 + 456);
        v330 = v38;
        v41 = *(_QWORD *)(v0 + 432);
        v40 = *(_QWORD *)(v0 + 440);
        if (*(_BYTE *)(v0 + 1416) != 2)
          v35 = *(_BYTE *)(v0 + 1416);
        v389 = v35;
        v43 = *(_QWORD *)(v0 + 416);
        v42 = *(_QWORD *)(v0 + 424);
        v44 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v38, 1, 10, v44);
        v46 = Song.id.getter(v45);
        v335 = v47;
        v341 = v46;
        v48 = Song.catalogID.getter(v46);
        v321 = v49;
        v325 = v48;
        v50 = Song.siriRepresentation.getter();
        v51 = MusicSiriRepresentation.id.getter(v50);
        v314 = v52;
        v317 = v51;
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
        v53 = sub_100007E8C(&qword_1011B0958);
        v54 = swift_allocObject(v53, 34, 7);
        *(_OWORD *)(v54 + 16) = xmmword_100EA7A80;
        Song.contentRating.getter(v54);
        v55 = TextBadge.init(for:isPlayable:)(v42, 1);
        *(_BYTE *)(v54 + 32) = v55;
        Song.favoriteStatus.getter(v55);
LABEL_14:
        v56 = type metadata accessor for MusicFavoriteStatus(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v43, 0, 1, v56);
        *(_BYTE *)(v54 + 33) = TextBadge.init(for:)(v43);
        v412 = (_QWORD *)(v36 + v37[18]);
        *v412 = 0;
        *(_QWORD *)(v36 + v37[19]) = _swiftEmptyArrayStorage;
        *(_QWORD *)v36 = 0;
        *(_QWORD *)(v36 + 8) = 0;
        *(_OWORD *)(v36 + 16) = v368;
        *(_QWORD *)(v36 + 32) = v375;
        *(_QWORD *)(v36 + 40) = v382;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v347 + 16))(v36 + v37[7], v361, v354);
        sub_10005B704(v330, v36 + v37[16], type metadata accessor for ArtworkImage.Placeholder);
        *(_QWORD *)(v36 + v37[17]) = 0x3FF0000000000000;
        v57 = (uint64_t *)(v36 + v37[8]);
        *v57 = v341;
        v57[1] = v335;
        v58 = (uint64_t *)(v36 + v37[9]);
        *v58 = v325;
        v58[1] = v321;
        v59 = (uint64_t *)(v36 + v37[10]);
        *v59 = v317;
        v60 = v314;
LABEL_15:
        v59[1] = v60;
        v61 = (_QWORD *)(v36 + v37[11]);
        *v61 = v392;
        v61[1] = v402;
        v62 = (_QWORD *)(v36 + v37[12]);
        *v62 = v397;
        v62[1] = v407;
        v63 = (_QWORD *)(v36 + v37[13]);
        *v63 = 0;
        v63[1] = 0;
        *(_QWORD *)(v36 + v37[14]) = v54;
LABEL_29:
        *(_BYTE *)(v36 + v37[15]) = v389 & 1;
LABEL_30:
        sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
        v107 = *v419;
        v108 = *v421;
        v109 = *v417;
        v110 = *v415;
        v422 = *(_QWORD *)(v0 + 896);
        v111 = *(_QWORD *)(v0 + 640);
        v112 = *(_QWORD *)(v0 + 632);
        v113 = *(_QWORD *)(v0 + 456);
        v114 = *(void **)(v0 + 304);
        v115 = *(void **)(v0 + 312);
        v116 = *(_QWORD *)(v0 + 296);
        *v412 = 0;
        sub_10005B748(v113, type metadata accessor for ArtworkImage.Placeholder);
        (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v112);

        (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v107, v108);
        sub_10004FF60(v424, &qword_1011A16C8);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v426);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v428);
        sub_10005B6C0(v422, v116, type metadata accessor for WidgetMusicItem);
        v117 = 0;
LABEL_31:
        v118 = *(_QWORD *)(v0 + 896);
        v119 = *(_QWORD *)(v0 + 872);
        v120 = *(_QWORD *)(v0 + 864);
        v121 = *(_QWORD *)(v0 + 856);
        v122 = *(_QWORD *)(v0 + 848);
        v123 = *(_QWORD *)(v0 + 824);
        v124 = *(_QWORD *)(v0 + 816);
        v125 = *(_QWORD *)(v0 + 808);
        v126 = *(_QWORD *)(v0 + 800);
        v296 = *(_QWORD *)(v0 + 776);
        v297 = *(_QWORD *)(v0 + 768);
        v298 = *(_QWORD *)(v0 + 760);
        v299 = *(_QWORD *)(v0 + 752);
        v300 = *(_QWORD *)(v0 + 728);
        v301 = *(_QWORD *)(v0 + 720);
        v302 = *(_QWORD *)(v0 + 696);
        v303 = *(_QWORD *)(v0 + 688);
        v304 = *(_QWORD *)(v0 + 680);
        v305 = *(_QWORD *)(v0 + 672);
        v306 = *(_QWORD *)(v0 + 664);
        v307 = *(_QWORD *)(v0 + 656);
        v313 = *(_QWORD *)(v0 + 616);
        v319 = *(_QWORD *)(v0 + 608);
        v323 = *(_QWORD *)(v0 + 600);
        v331 = *(_QWORD *)(v0 + 592);
        v343 = *(_QWORD *)(v0 + 584);
        v356 = *(_QWORD *)(v0 + 576);
        v308 = *(_QWORD *)(v0 + 568);
        v309 = *(_QWORD *)(v0 + 648);
        v310 = *(_QWORD *)(v0 + 560);
        v311 = *(_QWORD *)(v0 + 624);
        v312 = *(_QWORD *)(v0 + 552);
        v316 = *(_QWORD *)(v0 + 544);
        v327 = *(_QWORD *)(v0 + 536);
        v337 = *(_QWORD *)(v0 + 528);
        v349 = *(_QWORD *)(v0 + 520);
        v363 = *(_QWORD *)(v0 + 512);
        v370 = *(_QWORD *)(v0 + 504);
        v377 = *(_QWORD *)(v0 + 496);
        v384 = *(_QWORD *)(v0 + 488);
        v390 = *(_QWORD *)(v0 + 480);
        v394 = *(_QWORD *)(v0 + 472);
        v399 = *(_QWORD *)(v0 + 464);
        v404 = *(_QWORD *)(v0 + 456);
        v409 = *(_QWORD *)(v0 + 448);
        v413 = *(_QWORD *)(v0 + 424);
        v416 = *(_QWORD *)(v0 + 416);
        v418 = *(_QWORD *)(v0 + 408);
        v420 = *(_QWORD *)(v0 + 400);
        v423 = *(_QWORD *)(v0 + 376);
        v425 = *(_QWORD *)(v0 + 368);
        v427 = *(_QWORD *)(v0 + 344);
        v429 = *(_QWORD *)(v0 + 336);
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), v117, 1, *(_QWORD *)(v0 + 880));
        swift_task_dealloc(v118);
        swift_task_dealloc(v119);
        swift_task_dealloc(v120);
        swift_task_dealloc(v121);
        swift_task_dealloc(v122);
        swift_task_dealloc(v123);
        swift_task_dealloc(v124);
        swift_task_dealloc(v125);
        swift_task_dealloc(v126);
        swift_task_dealloc(v296);
        swift_task_dealloc(v297);
        swift_task_dealloc(v298);
        swift_task_dealloc(v299);
        swift_task_dealloc(v300);
        swift_task_dealloc(v301);
        swift_task_dealloc(v302);
        swift_task_dealloc(v303);
        swift_task_dealloc(v304);
        swift_task_dealloc(v305);
        swift_task_dealloc(v306);
        swift_task_dealloc(v307);
        swift_task_dealloc(v309);
        swift_task_dealloc(v311);
        swift_task_dealloc(v313);
        swift_task_dealloc(v319);
        swift_task_dealloc(v323);
        swift_task_dealloc(v331);
        swift_task_dealloc(v343);
        swift_task_dealloc(v356);
        swift_task_dealloc(v308);
        swift_task_dealloc(v310);
        swift_task_dealloc(v312);
        swift_task_dealloc(v316);
        swift_task_dealloc(v327);
        swift_task_dealloc(v337);
        swift_task_dealloc(v349);
        swift_task_dealloc(v363);
        swift_task_dealloc(v370);
        swift_task_dealloc(v377);
        swift_task_dealloc(v384);
        swift_task_dealloc(v390);
        swift_task_dealloc(v394);
        swift_task_dealloc(v399);
        swift_task_dealloc(v404);
        swift_task_dealloc(v409);
        swift_task_dealloc(v413);
        swift_task_dealloc(v416);
        swift_task_dealloc(v418);
        swift_task_dealloc(v420);
        swift_task_dealloc(v423);
        swift_task_dealloc(v425);
        swift_task_dealloc(v427);
        swift_task_dealloc(v429);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
        v76 = 350;
      else
        v76 = 275;
      v77 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
      *(_QWORD *)(v0 + 1016) = v77;
      *v77 = v0;
      v77[1] = sub_1003C77D4;
      return sub_1005FE0C4(v76);
    }
    __break(1u);
    goto LABEL_101;
  }
  if (swift_dynamicCast(*(_QWORD *)(v0 + 408), v0 + 216, v4, *(_QWORD *)(v0 + 384), 0))
  {
    v19 = *(_QWORD *)(v0 + 640);
    v20 = *(_QWORD *)(v0 + 632);
    v21 = *(_QWORD *)(v0 + 608);
    v22.n128_f64[0] = (*(double (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 32))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 384));
    v23 = MusicVideo.title.getter(v22);
    *(_QWORD *)(v0 + 1032) = v23;
    *(_QWORD *)(v0 + 1040) = v24;
    v25 = MusicVideo.artistName.getter(v23);
    *(_QWORD *)(v0 + 1048) = v25;
    *(_QWORD *)(v0 + 1056) = v26;
    MusicVideo.url.getter(v25);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (v27(v21, 1, v20) == 1)
    {
      v28 = *(_QWORD *)(v0 + 632);
      v29 = *(_QWORD *)(v0 + 600);
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v27(v29, 1, v28);
      if ((_DWORD)result == 1)
      {
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      v30 = *(_QWORD *)(v0 + 608);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 688), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 632));
      v31 = sub_10004FF60(v30, &qword_10119E460);
    }
    else
    {
      v31 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 688), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 632));
    }
    v78 = *(_QWORD *)(v0 + 504);
    MusicVideo.artwork.getter(v31);
    v79 = type metadata accessor for Artwork(0);
    *(_QWORD *)(v0 + 1064) = v79;
    v80 = *(_QWORD *)(v79 - 8);
    *(_QWORD *)(v0 + 1072) = v80;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79) == 1)
    {
      v424 = v0 + 96;
      v426 = (_QWORD *)(v0 + 216);
      v428 = (_QWORD *)(v0 + 16);
      v419 = (uint64_t *)(v0 + 400);
      v421 = (uint64_t *)(v0 + 384);
      v417 = (uint64_t *)(v0 + 392);
      sub_10004FF60(*(_QWORD *)(v0 + 504), &qword_1011A1440);
      v376 = *(_QWORD *)(v0 + 1048);
      v383 = *(_QWORD *)(v0 + 1056);
      v369 = *(_OWORD *)(v0 + 1032);
      v81 = *v1;
      v403 = *(_QWORD *)(v0 + 928);
      v408 = *(_QWORD *)(v0 + 912);
      v393 = *(_QWORD *)(v0 + 920);
      v398 = *(_QWORD *)(v0 + 904);
      v36 = *(_QWORD *)(v0 + 896);
      v37 = *(int **)(v0 + 880);
      v415 = (uint64_t *)(v0 + 688);
      v348 = *(_QWORD *)(v0 + 640);
      v355 = *(_QWORD *)(v0 + 632);
      v362 = *(_QWORD *)(v0 + 688);
      v83 = *(_QWORD *)(v0 + 448);
      v82 = *(_QWORD *)(v0 + 456);
      v84 = *(_QWORD *)(v0 + 432);
      v85 = *(_QWORD *)(v0 + 440);
      v86 = *(_QWORD *)(v0 + 416);
      v87 = *(_QWORD *)(v0 + 424);
      if (*(_BYTE *)(v0 + 1416) != 2)
        v81 = *(_BYTE *)(v0 + 1416);
      v389 = v81;
      v88 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v82, 4, 10, v88);
      v90 = MusicVideo.id.getter(v89);
      v336 = v91;
      v342 = v90;
      v92 = MusicVideo.catalogID.getter(v90);
      v322 = v93;
      v326 = v92;
      v94 = MusicVideo.siriRepresentation.getter();
      v95 = MusicSiriRepresentation.id.getter(v94);
      v315 = v96;
      v318 = v95;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
      v97 = sub_100007E8C(&qword_1011B0958);
      v98 = swift_allocObject(v97, 34, 7);
      *(_OWORD *)(v98 + 16) = xmmword_100EA7A80;
      MusicVideo.contentRating.getter(v98);
      v99 = TextBadge.init(for:isPlayable:)(v87, 1);
      *(_BYTE *)(v98 + 32) = v99;
      MusicVideo.favoriteStatus.getter(v99);
      v100 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v86, 0, 1, v100);
      *(_BYTE *)(v98 + 33) = TextBadge.init(for:)(v86);
      v412 = (_QWORD *)(v36 + v37[18]);
      *v412 = 0;
      *(_QWORD *)(v36 + v37[19]) = _swiftEmptyArrayStorage;
      *(_QWORD *)v36 = 0;
      *(_QWORD *)(v36 + 8) = 0;
      *(_OWORD *)(v36 + 16) = v369;
      *(_QWORD *)(v36 + 32) = v376;
      *(_QWORD *)(v36 + 40) = v383;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v348 + 16))(v36 + v37[7], v362, v355);
      sub_10005B704(v82, v36 + v37[16], type metadata accessor for ArtworkImage.Placeholder);
      *(_QWORD *)(v36 + v37[17]) = 0x3FFC71C71C71C71CLL;
      v101 = (uint64_t *)(v36 + v37[8]);
      *v101 = v342;
      v101[1] = v336;
      v102 = (uint64_t *)(v36 + v37[9]);
      *v102 = v326;
      v102[1] = v322;
      v103 = (uint64_t *)(v36 + v37[10]);
      *v103 = v318;
      v103[1] = v315;
      v104 = (_QWORD *)(v36 + v37[11]);
      *v104 = v393;
      v104[1] = v403;
      v105 = (_QWORD *)(v36 + v37[12]);
      *v105 = v398;
      v105[1] = v408;
      v106 = (_QWORD *)(v36 + v37[13]);
      *v106 = 0;
      v106[1] = 0;
      *(_QWORD *)(v36 + v37[14]) = v98;
      goto LABEL_29;
    }
    if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
      v76 = 350;
    else
      v76 = 275;
    v139 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
    *(_QWORD *)(v0 + 1080) = v139;
    *v139 = v0;
    v139[1] = sub_1003C7EB4;
    return sub_1005FE0C4(v76);
  }
  if (swift_dynamicCast(*(_QWORD *)(v0 + 376), v0 + 216, v4, *(_QWORD *)(v0 + 352), 0))
  {
    v64 = *(_QWORD *)(v0 + 640);
    v65 = *(_QWORD *)(v0 + 632);
    v66 = *(_QWORD *)(v0 + 592);
    v67 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 32))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
    *(_QWORD *)(v0 + 1096) = TVEpisode.title.getter(v67);
    *(_QWORD *)(v0 + 1104) = v68;
    v69 = TVEpisode.showName.getter();
    *(_QWORD *)(v0 + 1112) = v69;
    *(_QWORD *)(v0 + 1120) = v70;
    TVEpisode.url.getter(v69);
    v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    if (v71(v66, 1, v65) == 1)
    {
      v72 = *(_QWORD *)(v0 + 632);
      v73 = *(_QWORD *)(v0 + 584);
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v71(v73, 1, v72);
      if ((_DWORD)result == 1)
      {
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      v74 = *(_QWORD *)(v0 + 592);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 632));
      v75 = sub_10004FF60(v74, &qword_10119E460);
    }
    else
    {
      v75 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 632));
    }
    v140 = *(_QWORD *)(v0 + 496);
    TVEpisode.artwork.getter(v75);
    v141 = type metadata accessor for Artwork(0);
    *(_QWORD *)(v0 + 1128) = v141;
    v142 = *(_QWORD *)(v141 - 8);
    *(_QWORD *)(v0 + 1136) = v142;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141) != 1)
    {
      if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
        v76 = 350;
      else
        v76 = 275;
      v175 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
      *(_QWORD *)(v0 + 1144) = v175;
      *v175 = v0;
      v175[1] = sub_1003C859C;
      return sub_1005FE0C4(v76);
    }
    v424 = v0 + 96;
    v426 = (_QWORD *)(v0 + 216);
    v428 = (_QWORD *)(v0 + 16);
    v419 = (uint64_t *)(v0 + 368);
    v421 = (uint64_t *)(v0 + 352);
    v417 = (uint64_t *)(v0 + 360);
    sub_10004FF60(*(_QWORD *)(v0 + 496), &qword_1011A1440);
    v378 = *(_QWORD *)(v0 + 1112);
    v385 = *(_QWORD *)(v0 + 1120);
    v371 = *(_OWORD *)(v0 + 1096);
    v143 = *v1;
    v405 = *(_QWORD *)(v0 + 928);
    v410 = *(_QWORD *)(v0 + 912);
    v395 = *(_QWORD *)(v0 + 920);
    v400 = *(_QWORD *)(v0 + 904);
    v144 = *(_QWORD *)(v0 + 896);
    v145 = *(int **)(v0 + 880);
    v415 = (uint64_t *)(v0 + 680);
    v350 = *(_QWORD *)(v0 + 640);
    v357 = *(_QWORD *)(v0 + 632);
    v364 = *(_QWORD *)(v0 + 680);
    v147 = *(_QWORD *)(v0 + 448);
    v146 = *(_QWORD *)(v0 + 456);
    v148 = *(_QWORD *)(v0 + 432);
    v149 = *(_QWORD *)(v0 + 440);
    if (*(_BYTE *)(v0 + 1416) != 2)
      v143 = *(_BYTE *)(v0 + 1416);
    v391 = v143;
    v150 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v151 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v146, 5, 10, v150);
    v152 = TVEpisode.id.getter(v151);
    v338 = v153;
    v344 = v152;
    v332 = TVEpisode.catalogID.getter(v152);
    v155 = v154;
    v156 = TVEpisode.siriRepresentation.getter();
    v157 = MusicSiriRepresentation.id.getter(v156);
    v159 = v158;
    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v147, v148);
    v412 = (_QWORD *)(v144 + v145[18]);
    *v412 = 0;
    *(_QWORD *)(v144 + v145[19]) = _swiftEmptyArrayStorage;
    *(_QWORD *)v144 = 0;
    *(_QWORD *)(v144 + 8) = 0;
    *(_OWORD *)(v144 + 16) = v371;
    *(_QWORD *)(v144 + 32) = v378;
    *(_QWORD *)(v144 + 40) = v385;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v350 + 16))(v144 + v145[7], v364, v357);
    sub_10005B704(v146, v144 + v145[16], type metadata accessor for ArtworkImage.Placeholder);
    v160 = v145[17];
    v161 = 0x3FFC71C71C71C71CLL;
LABEL_58:
    *(_QWORD *)(v144 + v160) = v161;
    v191 = (uint64_t *)(v144 + v145[8]);
    *v191 = v344;
    v191[1] = v338;
    v192 = (uint64_t *)(v144 + v145[9]);
    *v192 = v332;
    v192[1] = v155;
    v193 = (uint64_t *)(v144 + v145[10]);
    *v193 = v157;
    v193[1] = v159;
    v194 = (_QWORD *)(v144 + v145[11]);
    *v194 = v395;
    v194[1] = v405;
    v195 = (_QWORD *)(v144 + v145[12]);
    *v195 = v400;
    v195[1] = v410;
    v196 = (_QWORD *)(v144 + v145[13]);
    *v196 = 0;
    v196[1] = 0;
    *(_QWORD *)(v144 + v145[14]) = _swiftEmptyArrayStorage;
    *(_BYTE *)(v144 + v145[15]) = v391 & 1;
    goto LABEL_30;
  }
  if (swift_dynamicCast(*(_QWORD *)(v0 + 344), v0 + 216, v4, *(_QWORD *)(v0 + 320), 0))
  {
    v127 = *(_QWORD *)(v0 + 640);
    v128 = *(_QWORD *)(v0 + 632);
    v129 = *(_QWORD *)(v0 + 576);
    v130.n128_f64[0] = (*(double (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 32))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 320));
    *(_QWORD *)(v0 + 1160) = MusicMovie.title.getter(v130);
    *(_QWORD *)(v0 + 1168) = v131;
    v132 = MusicMovie.artistName.getter();
    *(_QWORD *)(v0 + 1176) = v132;
    *(_QWORD *)(v0 + 1184) = v133;
    MusicMovie.url.getter(v132);
    v134 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
    if (v134(v129, 1, v128) == 1)
    {
      v135 = *(_QWORD *)(v0 + 632);
      v136 = *(_QWORD *)(v0 + 568);
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v134(v136, 1, v135);
      if ((_DWORD)result == 1)
      {
LABEL_103:
        __break(1u);
        goto LABEL_104;
      }
      v137 = *(_QWORD *)(v0 + 576);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 632));
      v138 = sub_10004FF60(v137, &qword_10119E460);
    }
    else
    {
      v138 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 632));
    }
    v176 = *(_QWORD *)(v0 + 488);
    MusicMovie.artwork.getter(v138);
    v177 = type metadata accessor for Artwork(0);
    *(_QWORD *)(v0 + 1192) = v177;
    v178 = *(_QWORD *)(v177 - 8);
    *(_QWORD *)(v0 + 1200) = v178;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v176, 1, v177) != 1)
    {
      if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
        v76 = 350;
      else
        v76 = 275;
      v210 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
      *(_QWORD *)(v0 + 1208) = v210;
      *v210 = v0;
      v210[1] = sub_1003C8BF0;
      return sub_1005FE0C4(v76);
    }
    v424 = v0 + 96;
    v426 = (_QWORD *)(v0 + 216);
    v428 = (_QWORD *)(v0 + 16);
    v419 = (uint64_t *)(v0 + 336);
    v421 = (uint64_t *)(v0 + 320);
    v417 = (uint64_t *)(v0 + 328);
    sub_10004FF60(*(_QWORD *)(v0 + 488), &qword_1011A1440);
    v379 = *(_QWORD *)(v0 + 1176);
    v386 = *(_QWORD *)(v0 + 1184);
    v372 = *(_OWORD *)(v0 + 1160);
    v179 = *v1;
    v405 = *(_QWORD *)(v0 + 928);
    v410 = *(_QWORD *)(v0 + 912);
    v395 = *(_QWORD *)(v0 + 920);
    v400 = *(_QWORD *)(v0 + 904);
    v144 = *(_QWORD *)(v0 + 896);
    v145 = *(int **)(v0 + 880);
    v415 = (uint64_t *)(v0 + 672);
    v351 = *(_QWORD *)(v0 + 640);
    v358 = *(_QWORD *)(v0 + 632);
    v365 = *(_QWORD *)(v0 + 672);
    v181 = *(_QWORD *)(v0 + 448);
    v180 = *(_QWORD *)(v0 + 456);
    v182 = *(_QWORD *)(v0 + 432);
    v183 = *(_QWORD *)(v0 + 440);
    if (*(_BYTE *)(v0 + 1416) != 2)
      v179 = *(_BYTE *)(v0 + 1416);
    v391 = v179;
    v184 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v185 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v184 - 8) + 56))(v180, 5, 10, v184);
    v186 = MusicMovie.id.getter(v185);
    v338 = v187;
    v344 = v186;
    v332 = MusicMovie.catalogID.getter(v186);
    v155 = v188;
    v189 = MusicMovie.siriRepresentation.getter();
    v157 = MusicSiriRepresentation.id.getter(v189);
    v159 = v190;
    (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v181, v182);
    v412 = (_QWORD *)(v144 + v145[18]);
    *v412 = 0;
    *(_QWORD *)(v144 + v145[19]) = _swiftEmptyArrayStorage;
    *(_QWORD *)v144 = 0;
    *(_QWORD *)(v144 + 8) = 0;
    *(_OWORD *)(v144 + 16) = v372;
    *(_QWORD *)(v144 + 32) = v379;
    *(_QWORD *)(v144 + 40) = v386;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v351 + 16))(v144 + v145[7], v365, v358);
    sub_10005B704(v180, v144 + v145[16], type metadata accessor for ArtworkImage.Placeholder);
    v160 = v145[17];
    v161 = 0x3FE5555555555555;
    goto LABEL_58;
  }
  if (swift_dynamicCast(*(_QWORD *)(v0 + 856), v0 + 216, v4, *(_QWORD *)(v0 + 832), 0))
  {
    v162 = *(_QWORD *)(v0 + 640);
    v163 = *(_QWORD *)(v0 + 632);
    v164 = *(_QWORD *)(v0 + 560);
    v165 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 840) + 32))(*(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 832));
    v166 = Album.title.getter(v165);
    *(_QWORD *)(v0 + 1224) = v166;
    *(_QWORD *)(v0 + 1232) = v167;
    v168 = Album.artistName.getter(v166);
    *(_QWORD *)(v0 + 1240) = v168;
    *(_QWORD *)(v0 + 1248) = v169;
    Album.url.getter(v168);
    v170 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
    if (v170(v164, 1, v163) == 1)
    {
      v171 = *(_QWORD *)(v0 + 632);
      v172 = *(_QWORD *)(v0 + 552);
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v170(v172, 1, v171);
      if ((_DWORD)result == 1)
      {
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      v173 = *(_QWORD *)(v0 + 560);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 632));
      v174 = sub_10004FF60(v173, &qword_10119E460);
    }
    else
    {
      v174 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 632));
    }
    v211 = *(_QWORD *)(v0 + 480);
    Album.artwork.getter(v174);
    v212 = type metadata accessor for Artwork(0);
    *(_QWORD *)(v0 + 1256) = v212;
    v213 = *(_QWORD *)(v212 - 8);
    *(_QWORD *)(v0 + 1264) = v213;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48))(v211, 1, v212) == 1)
    {
      v424 = v0 + 96;
      v426 = (_QWORD *)(v0 + 216);
      v428 = (_QWORD *)(v0 + 16);
      v419 = (uint64_t *)(v0 + 848);
      v421 = (uint64_t *)(v0 + 832);
      v417 = (uint64_t *)(v0 + 840);
      sub_10004FF60(*(_QWORD *)(v0 + 480), &qword_1011A1440);
      v375 = *(_QWORD *)(v0 + 1240);
      v382 = *(_QWORD *)(v0 + 1248);
      v368 = *(_OWORD *)(v0 + 1224);
      v214 = *v1;
      v402 = *(_QWORD *)(v0 + 928);
      v407 = *(_QWORD *)(v0 + 912);
      v392 = *(_QWORD *)(v0 + 920);
      v397 = *(_QWORD *)(v0 + 904);
      v36 = *(_QWORD *)(v0 + 896);
      v37 = *(int **)(v0 + 880);
      v415 = (uint64_t *)(v0 + 664);
      v347 = *(_QWORD *)(v0 + 640);
      v354 = *(_QWORD *)(v0 + 632);
      v361 = *(_QWORD *)(v0 + 664);
      v216 = *(_QWORD *)(v0 + 448);
      v215 = *(_QWORD *)(v0 + 456);
      v330 = v215;
      v217 = *(_QWORD *)(v0 + 432);
      v218 = *(_QWORD *)(v0 + 440);
      if (*(_BYTE *)(v0 + 1416) != 2)
        v214 = *(_BYTE *)(v0 + 1416);
      v389 = v214;
      v43 = *(_QWORD *)(v0 + 416);
      v219 = *(_QWORD *)(v0 + 424);
      v220 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v221 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 56))(v215, 1, 10, v220);
      v222 = Album.id.getter(v221);
      v335 = v223;
      v341 = v222;
      v224 = Album.catalogID.getter(v222);
      v321 = v225;
      v325 = v224;
      v226 = Album.siriRepresentation.getter();
      v227 = MusicSiriRepresentation.id.getter(v226);
      v314 = v228;
      v317 = v227;
      (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v216, v217);
      v229 = sub_100007E8C(&qword_1011B0958);
      v54 = swift_allocObject(v229, 34, 7);
      *(_OWORD *)(v54 + 16) = xmmword_100EA7A80;
      Album.contentRating.getter(v54);
      *(_BYTE *)(v54 + 32) = TextBadge.init(for:isPlayable:)(v219, 1);
      Album.favoriteStatus.getter();
      goto LABEL_14;
    }
    if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
      v76 = 350;
    else
      v76 = 275;
    v242 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
    *(_QWORD *)(v0 + 1272) = v242;
    *v242 = v0;
    v242[1] = sub_1003C9238;
    return sub_1005FE0C4(v76);
  }
  if (swift_dynamicCast(*(_QWORD *)(v0 + 808), v0 + 216, v4, *(_QWORD *)(v0 + 784), 0))
  {
    v197 = *(_QWORD *)(v0 + 640);
    v198 = *(_QWORD *)(v0 + 632);
    v199 = *(_QWORD *)(v0 + 544);
    v200.n128_f64[0] = (*(double (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 792) + 32))(*(_QWORD *)(v0 + 800), *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 784));
    v201 = Playlist.name.getter(v200);
    *(_QWORD *)(v0 + 1288) = v201;
    *(_QWORD *)(v0 + 1296) = v202;
    v203 = Playlist.curatorName.getter(v201);
    *(_QWORD *)(v0 + 1304) = v203;
    *(_QWORD *)(v0 + 1312) = v204;
    Playlist.url.getter(v203);
    v205 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v197 + 48);
    if (v205(v199, 1, v198) == 1)
    {
      v206 = *(_QWORD *)(v0 + 632);
      v207 = *(_QWORD *)(v0 + 536);
      URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
      result = v205(v207, 1, v206);
      if ((_DWORD)result == 1)
      {
LABEL_105:
        __break(1u);
        goto LABEL_106;
      }
      v208 = *(_QWORD *)(v0 + 544);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 632));
      v209 = sub_10004FF60(v208, &qword_10119E460);
    }
    else
    {
      v209 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 632));
    }
    v243 = *(_QWORD *)(v0 + 472);
    Playlist.artwork.getter(v209);
    v244 = type metadata accessor for Artwork(0);
    *(_QWORD *)(v0 + 1320) = v244;
    v245 = *(_QWORD *)(v244 - 8);
    *(_QWORD *)(v0 + 1328) = v245;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v245 + 48))(v243, 1, v244) == 1)
    {
      v424 = v0 + 96;
      v426 = (_QWORD *)(v0 + 216);
      v428 = (_QWORD *)(v0 + 16);
      v419 = (uint64_t *)(v0 + 800);
      v421 = (uint64_t *)(v0 + 784);
      v417 = (uint64_t *)(v0 + 792);
      v246 = sub_10004FF60(*(_QWORD *)(v0 + 472), &qword_1011A1440);
      v380 = *(_QWORD *)(v0 + 1304);
      v387 = *(_QWORD *)(v0 + 1312);
      v373 = *(_OWORD *)(v0 + 1288);
      v247 = *v1;
      v406 = *(_QWORD *)(v0 + 928);
      v411 = *(_QWORD *)(v0 + 912);
      v396 = *(_QWORD *)(v0 + 920);
      v401 = *(_QWORD *)(v0 + 904);
      v36 = *(_QWORD *)(v0 + 896);
      v37 = *(int **)(v0 + 880);
      v415 = (uint64_t *)(v0 + 656);
      v352 = *(_QWORD *)(v0 + 640);
      v359 = *(_QWORD *)(v0 + 632);
      v366 = *(_QWORD *)(v0 + 656);
      v248 = *(_QWORD *)(v0 + 448);
      v249 = *(_QWORD *)(v0 + 456);
      v250 = *(_QWORD *)(v0 + 440);
      v414 = *(_QWORD *)(v0 + 432);
      if (*(_BYTE *)(v0 + 1416) != 2)
        v247 = *(_BYTE *)(v0 + 1416);
      v389 = v247;
      v251 = *(_QWORD *)(v0 + 416);
      v252 = *(_QWORD *)(v0 + 424);
      v339 = *(_QWORD *)(v0 + 456);
      Playlist.variant.getter(v246);
      v253 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v254 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v253 - 8) + 56))(v249, 0, 10, v253);
      v255 = Playlist.id.getter(v254);
      v345 = v256;
      v257 = Playlist.catalogID.getter(v255);
      v328 = v258;
      v333 = v257;
      v259 = Playlist.siriRepresentation.getter();
      v260 = MusicSiriRepresentation.id.getter(v259);
      v320 = v261;
      v324 = v260;
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v248, v414);
      v262 = sub_100007E8C(&qword_1011B0958);
      v263 = swift_allocObject(v262, 34, 7);
      *(_OWORD *)(v263 + 16) = xmmword_100EA7A80;
      Playlist.contentRating.getter(v263);
      v264 = TextBadge.init(for:isPlayable:)(v252, 1);
      *(_BYTE *)(v263 + 32) = v264;
      Playlist.favoriteStatus.getter(v264);
      v265 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v265 - 8) + 56))(v251, 0, 1, v265);
      *(_BYTE *)(v263 + 33) = TextBadge.init(for:)(v251);
      v412 = (_QWORD *)(v36 + v37[18]);
      *v412 = 0;
      *(_QWORD *)(v36 + v37[19]) = _swiftEmptyArrayStorage;
      *(_QWORD *)v36 = 0;
      *(_QWORD *)(v36 + 8) = 0;
      *(_OWORD *)(v36 + 16) = v373;
      *(_QWORD *)(v36 + 32) = v380;
      *(_QWORD *)(v36 + 40) = v387;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v352 + 16))(v36 + v37[7], v366, v359);
      sub_10005B704(v339, v36 + v37[16], type metadata accessor for ArtworkImage.Placeholder);
      *(_QWORD *)(v36 + v37[17]) = 0x3FF0000000000000;
      v266 = (uint64_t *)(v36 + v37[8]);
      *v266 = v255;
      v266[1] = v345;
      v267 = (uint64_t *)(v36 + v37[9]);
      *v267 = v333;
      v267[1] = v328;
      v268 = (uint64_t *)(v36 + v37[10]);
      *v268 = v324;
      v268[1] = v320;
      v269 = (_QWORD *)(v36 + v37[11]);
      *v269 = v396;
      v269[1] = v406;
      v270 = (_QWORD *)(v36 + v37[12]);
      *v270 = v401;
      v270[1] = v411;
      v271 = (_QWORD *)(v36 + v37[13]);
      *v271 = 0;
      v271[1] = 0;
      *(_QWORD *)(v36 + v37[14]) = v263;
      goto LABEL_29;
    }
    if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
      v76 = 350;
    else
      v76 = 275;
    v275 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
    *(_QWORD *)(v0 + 1336) = v275;
    *v275 = v0;
    v275[1] = sub_1003C9918;
    return sub_1005FE0C4(v76);
  }
  if (!swift_dynamicCast(*(_QWORD *)(v0 + 760), v0 + 216, v4, *(_QWORD *)(v0 + 736), 0))
  {
    v272 = *(_QWORD *)(v0 + 928);
    v273 = *(_QWORD *)(v0 + 912);
    v274 = *(void **)(v0 + 312);

    swift_bridgeObjectRelease(v273);
    swift_bridgeObjectRelease(v272);
    sub_10004FF60(v0 + 96, &qword_1011A16C8);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
    v117 = 1;
    goto LABEL_31;
  }
  v230 = *(_QWORD *)(v0 + 640);
  v231 = *(_QWORD *)(v0 + 632);
  v232 = *(_QWORD *)(v0 + 528);
  v233 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 744) + 32))(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 736));
  *(_QWORD *)(v0 + 1352) = Station.name.getter(v233);
  *(_QWORD *)(v0 + 1360) = v234;
  v235 = Station.stationProviderName.getter();
  *(_QWORD *)(v0 + 1368) = v235;
  *(_QWORD *)(v0 + 1376) = v236;
  Station.url.getter(v235);
  v237 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v230 + 48);
  if (v237(v232, 1, v231) != 1)
  {
    v241 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 632));
    goto LABEL_91;
  }
  v238 = *(_QWORD *)(v0 + 632);
  v239 = *(_QWORD *)(v0 + 520);
  URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v237)(v239, 1, v238);
  if ((_DWORD)result != 1)
  {
    v240 = *(_QWORD *)(v0 + 528);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 32))(*(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 632));
    v241 = sub_10004FF60(v240, &qword_10119E460);
LABEL_91:
    v276 = *(_QWORD *)(v0 + 464);
    Station.artwork.getter(v241);
    v277 = type metadata accessor for Artwork(0);
    *(_QWORD *)(v0 + 1384) = v277;
    v278 = *(_QWORD *)(v277 - 8);
    *(_QWORD *)(v0 + 1392) = v278;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v278 + 48))(v276, 1, v277) == 1)
    {
      v424 = v0 + 96;
      v426 = (_QWORD *)(v0 + 216);
      v428 = (_QWORD *)(v0 + 16);
      v419 = (uint64_t *)(v0 + 752);
      v421 = (uint64_t *)(v0 + 736);
      v417 = (uint64_t *)(v0 + 744);
      sub_10004FF60(*(_QWORD *)(v0 + 464), &qword_1011A1440);
      v381 = *(_QWORD *)(v0 + 1368);
      v388 = *(_QWORD *)(v0 + 1376);
      v374 = *(_OWORD *)(v0 + 1352);
      v279 = *v1;
      v402 = *(_QWORD *)(v0 + 928);
      v407 = *(_QWORD *)(v0 + 912);
      v392 = *(_QWORD *)(v0 + 920);
      v397 = *(_QWORD *)(v0 + 904);
      v36 = *(_QWORD *)(v0 + 896);
      v37 = *(int **)(v0 + 880);
      v415 = (uint64_t *)(v0 + 648);
      v353 = *(_QWORD *)(v0 + 640);
      v360 = *(_QWORD *)(v0 + 632);
      v367 = *(_QWORD *)(v0 + 648);
      v281 = *(_QWORD *)(v0 + 448);
      v280 = *(_QWORD *)(v0 + 456);
      v282 = *(_QWORD *)(v0 + 432);
      v283 = *(_QWORD *)(v0 + 440);
      if (*(_BYTE *)(v0 + 1416) != 2)
        v279 = *(_BYTE *)(v0 + 1416);
      v389 = v279;
      v284 = *(_QWORD *)(v0 + 424);
      v285 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
      v286 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v285 - 8) + 56))(v280, 8, 10, v285);
      v287 = Station.id.getter(v286);
      v340 = v288;
      v346 = v287;
      v289 = Station.siriRepresentation.getter();
      v290 = MusicSiriRepresentation.id.getter(v289);
      v329 = v291;
      v334 = v290;
      (*(void (**)(uint64_t, uint64_t))(v283 + 8))(v281, v282);
      v292 = sub_100007E8C(&qword_1011B0958);
      v54 = swift_allocObject(v292, 33, 7);
      *(_OWORD *)(v54 + 16) = xmmword_100EA7AA0;
      Station.contentRating.getter();
      *(_BYTE *)(v54 + 32) = TextBadge.init(for:isPlayable:)(v284, 1);
      v412 = (_QWORD *)(v36 + v37[18]);
      *v412 = 0;
      *(_QWORD *)(v36 + v37[19]) = _swiftEmptyArrayStorage;
      *(_QWORD *)v36 = 0;
      *(_QWORD *)(v36 + 8) = 0;
      *(_OWORD *)(v36 + 16) = v374;
      *(_QWORD *)(v36 + 32) = v381;
      *(_QWORD *)(v36 + 40) = v388;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v353 + 16))(v36 + v37[7], v367, v360);
      sub_10005B704(v280, v36 + v37[16], type metadata accessor for ArtworkImage.Placeholder);
      *(_QWORD *)(v36 + v37[17]) = 0x3FF0000000000000;
      v293 = (uint64_t *)(v36 + v37[8]);
      *v293 = v346;
      v293[1] = v340;
      v294 = (_QWORD *)(v36 + v37[9]);
      *v294 = 0;
      v294[1] = 0;
      v59 = (uint64_t *)(v36 + v37[10]);
      *v59 = v334;
      v60 = v329;
      goto LABEL_15;
    }
    if (*DeviceCapabilities.deviceType.unsafeMutableAddressor() == 2)
      v76 = 350;
    else
      v76 = 275;
    v295 = (_QWORD *)swift_task_alloc(dword_1011BD36C);
    *(_QWORD *)(v0 + 1400) = v295;
    *v295 = v0;
    v295[1] = sub_1003CA000;
    return sub_1005FE0C4(v76);
  }
LABEL_106:
  __break(1u);
  return result;
}

uint64_t sub_1003C77D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1016);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1008);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1000);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 512);
  *(_QWORD *)(*(_QWORD *)v1 + 1024) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1003C7854, 0, 0);
}

uint64_t sub_1003C7854()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v107 = *(_QWORD *)(v0 + 1024);
  v91 = *(_QWORD *)(v0 + 984);
  v93 = *(_QWORD *)(v0 + 992);
  v89 = *(_OWORD *)(v0 + 968);
  v1 = *(_BYTE *)(v0 + 1417);
  v101 = *(_QWORD *)(v0 + 928);
  v104 = *(_QWORD *)(v0 + 912);
  v97 = *(_QWORD *)(v0 + 920);
  v99 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(int **)(v0 + 880);
  v83 = *(_QWORD *)(v0 + 640);
  v85 = *(_QWORD *)(v0 + 632);
  v87 = *(_QWORD *)(v0 + 696);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  if (*(_BYTE *)(v0 + 1416) != 2)
    v1 = *(_BYTE *)(v0 + 1416);
  v95 = v1;
  v8 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 424);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 10, v10);
  v81 = Song.id.getter(v11);
  v79 = v12;
  v13 = Song.catalogID.getter(v81);
  v74 = v14;
  v76 = v13;
  v15 = Song.siriRepresentation.getter();
  v16 = MusicSiriRepresentation.id.getter(v15);
  v70 = v17;
  v72 = v16;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v18 = sub_100007E8C(&qword_1011B0958);
  v19 = swift_allocObject(v18, 34, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EA7A80;
  Song.contentRating.getter(v19);
  v20 = TextBadge.init(for:isPlayable:)(v9, 1);
  *(_BYTE *)(v19 + 32) = v20;
  Song.favoriteStatus.getter(v20);
  v21 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 0, 1, v21);
  *(_BYTE *)(v19 + 33) = TextBadge.init(for:)(v8);
  v68 = v3[18];
  *(_QWORD *)(v2 + v68) = 0;
  *(_QWORD *)(v2 + v3[19]) = _swiftEmptyArrayStorage;
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v89;
  *(_QWORD *)(v2 + 32) = v91;
  *(_QWORD *)(v2 + 40) = v93;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v2 + v3[7], v87, v85);
  sub_10005B704(v4, v2 + v3[16], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)(v2 + v3[17]) = 0x3FF0000000000000;
  v22 = (uint64_t *)(v2 + v3[8]);
  *v22 = v81;
  v22[1] = v79;
  v23 = (uint64_t *)(v2 + v3[9]);
  *v23 = v76;
  v23[1] = v74;
  v24 = (uint64_t *)(v2 + v3[10]);
  *v24 = v72;
  v24[1] = v70;
  v25 = (_QWORD *)(v2 + v3[11]);
  *v25 = v97;
  v25[1] = v101;
  v26 = (_QWORD *)(v2 + v3[12]);
  *v26 = v99;
  v26[1] = v104;
  v27 = (_QWORD *)(v2 + v3[13]);
  *v27 = 0;
  v27[1] = 0;
  *(_QWORD *)(v2 + v3[14]) = v19;
  *(_BYTE *)(v2 + v3[15]) = v95 & 1;
  sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
  v28 = *(_QWORD *)(v0 + 720);
  v29 = *(_QWORD *)(v0 + 712);
  v30 = *(_QWORD *)(v0 + 704);
  v31 = *(_QWORD *)(v0 + 696);
  v32 = *(_QWORD *)(v0 + 640);
  v33 = *(_QWORD *)(v0 + 632);
  v34 = *(_QWORD *)(v0 + 456);
  v35 = *(void **)(v0 + 304);
  v36 = *(void **)(v0 + 312);
  v102 = *(_QWORD *)(v0 + 296);
  v105 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v2 + v68) = v107;
  sub_10005B748(v34, type metadata accessor for ArtworkImage.Placeholder);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  sub_10004FF60(v0 + 96, &qword_1011A16C8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  sub_10005B6C0(v105, v102, type metadata accessor for WidgetMusicItem);
  v37 = *(_QWORD *)(v0 + 896);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 856);
  v41 = *(_QWORD *)(v0 + 848);
  v42 = *(_QWORD *)(v0 + 824);
  v43 = *(_QWORD *)(v0 + 816);
  v44 = *(_QWORD *)(v0 + 808);
  v45 = *(_QWORD *)(v0 + 800);
  v47 = *(_QWORD *)(v0 + 776);
  v48 = *(_QWORD *)(v0 + 768);
  v49 = *(_QWORD *)(v0 + 760);
  v50 = *(_QWORD *)(v0 + 752);
  v51 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 720);
  v53 = *(_QWORD *)(v0 + 696);
  v54 = *(_QWORD *)(v0 + 688);
  v55 = *(_QWORD *)(v0 + 680);
  v56 = *(_QWORD *)(v0 + 672);
  v57 = *(_QWORD *)(v0 + 664);
  v58 = *(_QWORD *)(v0 + 656);
  v64 = *(_QWORD *)(v0 + 616);
  v66 = *(_QWORD *)(v0 + 608);
  v67 = *(_QWORD *)(v0 + 600);
  v71 = *(_QWORD *)(v0 + 592);
  v75 = *(_QWORD *)(v0 + 584);
  v78 = *(_QWORD *)(v0 + 576);
  v59 = *(_QWORD *)(v0 + 568);
  v60 = *(_QWORD *)(v0 + 648);
  v61 = *(_QWORD *)(v0 + 560);
  v62 = *(_QWORD *)(v0 + 624);
  v63 = *(_QWORD *)(v0 + 552);
  v65 = *(_QWORD *)(v0 + 544);
  v69 = *(_QWORD *)(v0 + 536);
  v73 = *(_QWORD *)(v0 + 528);
  v77 = *(_QWORD *)(v0 + 520);
  v80 = *(_QWORD *)(v0 + 512);
  v82 = *(_QWORD *)(v0 + 504);
  v84 = *(_QWORD *)(v0 + 496);
  v86 = *(_QWORD *)(v0 + 488);
  v88 = *(_QWORD *)(v0 + 480);
  v90 = *(_QWORD *)(v0 + 472);
  v92 = *(_QWORD *)(v0 + 464);
  v94 = *(_QWORD *)(v0 + 456);
  v96 = *(_QWORD *)(v0 + 448);
  v98 = *(_QWORD *)(v0 + 424);
  v100 = *(_QWORD *)(v0 + 416);
  v103 = *(_QWORD *)(v0 + 408);
  v106 = *(_QWORD *)(v0 + 400);
  v108 = *(_QWORD *)(v0 + 376);
  v109 = *(_QWORD *)(v0 + 368);
  v110 = *(_QWORD *)(v0 + 344);
  v111 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), 0, 1, *(_QWORD *)(v0 + 880));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v71);
  swift_task_dealloc(v75);
  swift_task_dealloc(v78);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v69);
  swift_task_dealloc(v73);
  swift_task_dealloc(v77);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v103);
  swift_task_dealloc(v106);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C7EB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1080);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1072);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1064);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  *(_QWORD *)(*(_QWORD *)v1 + 1088) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1003C7F34, 0, 0);
}

uint64_t sub_1003C7F34()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v107 = *(_QWORD *)(v0 + 1088);
  v91 = *(_QWORD *)(v0 + 1048);
  v93 = *(_QWORD *)(v0 + 1056);
  v89 = *(_OWORD *)(v0 + 1032);
  v1 = *(_BYTE *)(v0 + 1417);
  v101 = *(_QWORD *)(v0 + 928);
  v104 = *(_QWORD *)(v0 + 912);
  v97 = *(_QWORD *)(v0 + 920);
  v99 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(int **)(v0 + 880);
  v83 = *(_QWORD *)(v0 + 640);
  v85 = *(_QWORD *)(v0 + 632);
  v87 = *(_QWORD *)(v0 + 688);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  v8 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 424);
  if (*(_BYTE *)(v0 + 1416) != 2)
    v1 = *(_BYTE *)(v0 + 1416);
  v95 = v1;
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 4, 10, v10);
  v81 = MusicVideo.id.getter(v11);
  v79 = v12;
  v13 = MusicVideo.catalogID.getter(v81);
  v74 = v14;
  v76 = v13;
  v15 = MusicVideo.siriRepresentation.getter();
  v16 = MusicSiriRepresentation.id.getter(v15);
  v70 = v17;
  v72 = v16;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v18 = sub_100007E8C(&qword_1011B0958);
  v19 = swift_allocObject(v18, 34, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EA7A80;
  MusicVideo.contentRating.getter(v19);
  v20 = TextBadge.init(for:isPlayable:)(v9, 1);
  *(_BYTE *)(v19 + 32) = v20;
  MusicVideo.favoriteStatus.getter(v20);
  v21 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 0, 1, v21);
  *(_BYTE *)(v19 + 33) = TextBadge.init(for:)(v8);
  v68 = v3[18];
  *(_QWORD *)(v2 + v68) = 0;
  *(_QWORD *)(v2 + v3[19]) = _swiftEmptyArrayStorage;
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v89;
  *(_QWORD *)(v2 + 32) = v91;
  *(_QWORD *)(v2 + 40) = v93;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v2 + v3[7], v87, v85);
  sub_10005B704(v4, v2 + v3[16], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)(v2 + v3[17]) = 0x3FFC71C71C71C71CLL;
  v22 = (uint64_t *)(v2 + v3[8]);
  *v22 = v81;
  v22[1] = v79;
  v23 = (uint64_t *)(v2 + v3[9]);
  *v23 = v76;
  v23[1] = v74;
  v24 = (uint64_t *)(v2 + v3[10]);
  *v24 = v72;
  v24[1] = v70;
  v25 = (_QWORD *)(v2 + v3[11]);
  *v25 = v97;
  v25[1] = v101;
  v26 = (_QWORD *)(v2 + v3[12]);
  *v26 = v99;
  v26[1] = v104;
  v27 = (_QWORD *)(v2 + v3[13]);
  *v27 = 0;
  v27[1] = 0;
  *(_QWORD *)(v2 + v3[14]) = v19;
  *(_BYTE *)(v2 + v3[15]) = v95 & 1;
  sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
  v28 = *(_QWORD *)(v0 + 688);
  v30 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 400);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 640);
  v33 = *(_QWORD *)(v0 + 632);
  v34 = *(_QWORD *)(v0 + 456);
  v35 = *(void **)(v0 + 304);
  v36 = *(void **)(v0 + 312);
  v102 = *(_QWORD *)(v0 + 296);
  v105 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v2 + v68) = v107;
  sub_10005B748(v34, type metadata accessor for ArtworkImage.Placeholder);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v28, v33);

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  sub_10004FF60(v0 + 96, &qword_1011A16C8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  sub_10005B6C0(v105, v102, type metadata accessor for WidgetMusicItem);
  v37 = *(_QWORD *)(v0 + 896);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 856);
  v41 = *(_QWORD *)(v0 + 848);
  v42 = *(_QWORD *)(v0 + 824);
  v43 = *(_QWORD *)(v0 + 816);
  v44 = *(_QWORD *)(v0 + 808);
  v45 = *(_QWORD *)(v0 + 800);
  v47 = *(_QWORD *)(v0 + 776);
  v48 = *(_QWORD *)(v0 + 768);
  v49 = *(_QWORD *)(v0 + 760);
  v50 = *(_QWORD *)(v0 + 752);
  v51 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 720);
  v53 = *(_QWORD *)(v0 + 696);
  v54 = *(_QWORD *)(v0 + 688);
  v55 = *(_QWORD *)(v0 + 680);
  v56 = *(_QWORD *)(v0 + 672);
  v57 = *(_QWORD *)(v0 + 664);
  v58 = *(_QWORD *)(v0 + 656);
  v64 = *(_QWORD *)(v0 + 616);
  v66 = *(_QWORD *)(v0 + 608);
  v67 = *(_QWORD *)(v0 + 600);
  v71 = *(_QWORD *)(v0 + 592);
  v75 = *(_QWORD *)(v0 + 584);
  v78 = *(_QWORD *)(v0 + 576);
  v59 = *(_QWORD *)(v0 + 568);
  v60 = *(_QWORD *)(v0 + 648);
  v61 = *(_QWORD *)(v0 + 560);
  v62 = *(_QWORD *)(v0 + 624);
  v63 = *(_QWORD *)(v0 + 552);
  v65 = *(_QWORD *)(v0 + 544);
  v69 = *(_QWORD *)(v0 + 536);
  v73 = *(_QWORD *)(v0 + 528);
  v77 = *(_QWORD *)(v0 + 520);
  v80 = *(_QWORD *)(v0 + 512);
  v82 = *(_QWORD *)(v0 + 504);
  v84 = *(_QWORD *)(v0 + 496);
  v86 = *(_QWORD *)(v0 + 488);
  v88 = *(_QWORD *)(v0 + 480);
  v90 = *(_QWORD *)(v0 + 472);
  v92 = *(_QWORD *)(v0 + 464);
  v94 = *(_QWORD *)(v0 + 456);
  v96 = *(_QWORD *)(v0 + 448);
  v98 = *(_QWORD *)(v0 + 424);
  v100 = *(_QWORD *)(v0 + 416);
  v103 = *(_QWORD *)(v0 + 408);
  v106 = *(_QWORD *)(v0 + 400);
  v108 = *(_QWORD *)(v0 + 376);
  v109 = *(_QWORD *)(v0 + 368);
  v110 = *(_QWORD *)(v0 + 344);
  v111 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), 0, 1, *(_QWORD *)(v0 + 880));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v71);
  swift_task_dealloc(v75);
  swift_task_dealloc(v78);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v69);
  swift_task_dealloc(v73);
  swift_task_dealloc(v77);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v103);
  swift_task_dealloc(v106);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C859C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1144);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1136);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  *(_QWORD *)(*(_QWORD *)v1 + 1152) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1003C861C, 0, 0);
}

uint64_t sub_1003C861C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v100 = *(_QWORD *)(v0 + 1152);
  v84 = *(_QWORD *)(v0 + 1112);
  v86 = *(_QWORD *)(v0 + 1120);
  v80 = *(_OWORD *)(v0 + 1096);
  v1 = *(_BYTE *)(v0 + 1417);
  v94 = *(_QWORD *)(v0 + 928);
  v97 = *(_QWORD *)(v0 + 912);
  v90 = *(_QWORD *)(v0 + 920);
  v92 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(int **)(v0 + 880);
  v74 = *(_QWORD *)(v0 + 640);
  v76 = *(_QWORD *)(v0 + 632);
  v78 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 432);
  v7 = *(_QWORD *)(v0 + 440);
  if (*(_BYTE *)(v0 + 1416) != 2)
    v1 = *(_BYTE *)(v0 + 1416);
  v88 = v1;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 5, 10, v8);
  v10 = TVEpisode.id.getter(v9);
  v70 = v11;
  v72 = v10;
  v68 = TVEpisode.catalogID.getter(v10);
  v13 = v12;
  v14 = TVEpisode.siriRepresentation.getter();
  v15 = MusicSiriRepresentation.id.getter(v14);
  v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v82 = v3[18];
  *(_QWORD *)(v2 + v82) = 0;
  *(_QWORD *)(v2 + v3[19]) = _swiftEmptyArrayStorage;
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v80;
  *(_QWORD *)(v2 + 32) = v84;
  *(_QWORD *)(v2 + 40) = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v2 + v3[7], v78, v76);
  sub_10005B704(v5, v2 + v3[16], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)(v2 + v3[17]) = 0x3FFC71C71C71C71CLL;
  v18 = (uint64_t *)(v2 + v3[8]);
  *v18 = v72;
  v18[1] = v70;
  v19 = (uint64_t *)(v2 + v3[9]);
  *v19 = v68;
  v19[1] = v13;
  v20 = (uint64_t *)(v2 + v3[10]);
  *v20 = v15;
  v20[1] = v17;
  v21 = (_QWORD *)(v2 + v3[11]);
  *v21 = v90;
  v21[1] = v94;
  v22 = (_QWORD *)(v2 + v3[12]);
  *v22 = v92;
  v22[1] = v97;
  v23 = (_QWORD *)(v2 + v3[13]);
  *v23 = 0;
  v23[1] = 0;
  *(_QWORD *)(v2 + v3[14]) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v2 + v3[15]) = v88 & 1;
  sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
  v24 = *(_QWORD *)(v0 + 680);
  v26 = *(_QWORD *)(v0 + 360);
  v25 = *(_QWORD *)(v0 + 368);
  v27 = *(_QWORD *)(v0 + 352);
  v28 = *(_QWORD *)(v0 + 640);
  v29 = *(_QWORD *)(v0 + 632);
  v30 = *(_QWORD *)(v0 + 456);
  v31 = *(void **)(v0 + 304);
  v32 = *(void **)(v0 + 312);
  v95 = *(_QWORD *)(v0 + 296);
  v98 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v2 + v82) = v100;
  sub_10005B748(v30, type metadata accessor for ArtworkImage.Placeholder);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v24, v29);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  sub_10004FF60(v0 + 96, &qword_1011A16C8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  sub_10005B6C0(v98, v95, type metadata accessor for WidgetMusicItem);
  v33 = *(_QWORD *)(v0 + 896);
  v34 = *(_QWORD *)(v0 + 872);
  v35 = *(_QWORD *)(v0 + 864);
  v36 = *(_QWORD *)(v0 + 856);
  v37 = *(_QWORD *)(v0 + 848);
  v38 = *(_QWORD *)(v0 + 824);
  v39 = *(_QWORD *)(v0 + 816);
  v40 = *(_QWORD *)(v0 + 808);
  v41 = *(_QWORD *)(v0 + 800);
  v43 = *(_QWORD *)(v0 + 776);
  v44 = *(_QWORD *)(v0 + 768);
  v45 = *(_QWORD *)(v0 + 760);
  v46 = *(_QWORD *)(v0 + 752);
  v47 = *(_QWORD *)(v0 + 728);
  v48 = *(_QWORD *)(v0 + 720);
  v49 = *(_QWORD *)(v0 + 696);
  v50 = *(_QWORD *)(v0 + 688);
  v51 = *(_QWORD *)(v0 + 680);
  v52 = *(_QWORD *)(v0 + 672);
  v53 = *(_QWORD *)(v0 + 664);
  v54 = *(_QWORD *)(v0 + 656);
  v60 = *(_QWORD *)(v0 + 616);
  v62 = *(_QWORD *)(v0 + 608);
  v63 = *(_QWORD *)(v0 + 600);
  v65 = *(_QWORD *)(v0 + 592);
  v67 = *(_QWORD *)(v0 + 584);
  v71 = *(_QWORD *)(v0 + 576);
  v55 = *(_QWORD *)(v0 + 568);
  v56 = *(_QWORD *)(v0 + 648);
  v57 = *(_QWORD *)(v0 + 560);
  v58 = *(_QWORD *)(v0 + 624);
  v59 = *(_QWORD *)(v0 + 552);
  v61 = *(_QWORD *)(v0 + 544);
  v64 = *(_QWORD *)(v0 + 536);
  v66 = *(_QWORD *)(v0 + 528);
  v69 = *(_QWORD *)(v0 + 520);
  v73 = *(_QWORD *)(v0 + 512);
  v75 = *(_QWORD *)(v0 + 504);
  v77 = *(_QWORD *)(v0 + 496);
  v79 = *(_QWORD *)(v0 + 488);
  v81 = *(_QWORD *)(v0 + 480);
  v83 = *(_QWORD *)(v0 + 472);
  v85 = *(_QWORD *)(v0 + 464);
  v87 = *(_QWORD *)(v0 + 456);
  v89 = *(_QWORD *)(v0 + 448);
  v91 = *(_QWORD *)(v0 + 424);
  v93 = *(_QWORD *)(v0 + 416);
  v96 = *(_QWORD *)(v0 + 408);
  v99 = *(_QWORD *)(v0 + 400);
  v101 = *(_QWORD *)(v0 + 376);
  v102 = *(_QWORD *)(v0 + 368);
  v103 = *(_QWORD *)(v0 + 344);
  v104 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), 0, 1, *(_QWORD *)(v0 + 880));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v71);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v69);
  swift_task_dealloc(v73);
  swift_task_dealloc(v75);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v96);
  swift_task_dealloc(v99);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C8BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1208);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1192);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 488);
  *(_QWORD *)(*(_QWORD *)v1 + 1216) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1003C8C70, 0, 0);
}

uint64_t sub_1003C8C70()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v100 = *(_QWORD *)(v0 + 1216);
  v84 = *(_QWORD *)(v0 + 1176);
  v86 = *(_QWORD *)(v0 + 1184);
  v80 = *(_OWORD *)(v0 + 1160);
  v1 = *(_BYTE *)(v0 + 1417);
  v94 = *(_QWORD *)(v0 + 928);
  v97 = *(_QWORD *)(v0 + 912);
  v90 = *(_QWORD *)(v0 + 920);
  v92 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(int **)(v0 + 880);
  v74 = *(_QWORD *)(v0 + 640);
  v76 = *(_QWORD *)(v0 + 632);
  v78 = *(_QWORD *)(v0 + 672);
  v4 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 432);
  v7 = *(_QWORD *)(v0 + 440);
  if (*(_BYTE *)(v0 + 1416) != 2)
    v1 = *(_BYTE *)(v0 + 1416);
  v88 = v1;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 5, 10, v8);
  v10 = MusicMovie.id.getter(v9);
  v70 = v11;
  v72 = v10;
  v68 = MusicMovie.catalogID.getter(v10);
  v13 = v12;
  v14 = MusicMovie.siriRepresentation.getter();
  v15 = MusicSiriRepresentation.id.getter(v14);
  v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v82 = v3[18];
  *(_QWORD *)(v2 + v82) = 0;
  *(_QWORD *)(v2 + v3[19]) = _swiftEmptyArrayStorage;
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v80;
  *(_QWORD *)(v2 + 32) = v84;
  *(_QWORD *)(v2 + 40) = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v2 + v3[7], v78, v76);
  sub_10005B704(v5, v2 + v3[16], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)(v2 + v3[17]) = 0x3FE5555555555555;
  v18 = (uint64_t *)(v2 + v3[8]);
  *v18 = v72;
  v18[1] = v70;
  v19 = (uint64_t *)(v2 + v3[9]);
  *v19 = v68;
  v19[1] = v13;
  v20 = (uint64_t *)(v2 + v3[10]);
  *v20 = v15;
  v20[1] = v17;
  v21 = (_QWORD *)(v2 + v3[11]);
  *v21 = v90;
  v21[1] = v94;
  v22 = (_QWORD *)(v2 + v3[12]);
  *v22 = v92;
  v22[1] = v97;
  v23 = (_QWORD *)(v2 + v3[13]);
  *v23 = 0;
  v23[1] = 0;
  *(_QWORD *)(v2 + v3[14]) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v2 + v3[15]) = v88 & 1;
  sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
  v24 = *(_QWORD *)(v0 + 672);
  v26 = *(_QWORD *)(v0 + 328);
  v25 = *(_QWORD *)(v0 + 336);
  v27 = *(_QWORD *)(v0 + 640);
  v28 = *(_QWORD *)(v0 + 632);
  v29 = *(_QWORD *)(v0 + 456);
  v31 = *(void **)(v0 + 312);
  v30 = *(_QWORD *)(v0 + 320);
  v32 = *(void **)(v0 + 304);
  v95 = *(_QWORD *)(v0 + 296);
  v98 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v2 + v82) = v100;
  sub_10005B748(v29, type metadata accessor for ArtworkImage.Placeholder);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v28);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v30);
  sub_10004FF60(v0 + 96, &qword_1011A16C8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  sub_10005B6C0(v98, v95, type metadata accessor for WidgetMusicItem);
  v33 = *(_QWORD *)(v0 + 896);
  v34 = *(_QWORD *)(v0 + 872);
  v35 = *(_QWORD *)(v0 + 864);
  v36 = *(_QWORD *)(v0 + 856);
  v37 = *(_QWORD *)(v0 + 848);
  v38 = *(_QWORD *)(v0 + 824);
  v39 = *(_QWORD *)(v0 + 816);
  v40 = *(_QWORD *)(v0 + 808);
  v41 = *(_QWORD *)(v0 + 800);
  v43 = *(_QWORD *)(v0 + 776);
  v44 = *(_QWORD *)(v0 + 768);
  v45 = *(_QWORD *)(v0 + 760);
  v46 = *(_QWORD *)(v0 + 752);
  v47 = *(_QWORD *)(v0 + 728);
  v48 = *(_QWORD *)(v0 + 720);
  v49 = *(_QWORD *)(v0 + 696);
  v50 = *(_QWORD *)(v0 + 688);
  v51 = *(_QWORD *)(v0 + 680);
  v52 = *(_QWORD *)(v0 + 672);
  v53 = *(_QWORD *)(v0 + 664);
  v54 = *(_QWORD *)(v0 + 656);
  v60 = *(_QWORD *)(v0 + 616);
  v62 = *(_QWORD *)(v0 + 608);
  v63 = *(_QWORD *)(v0 + 600);
  v65 = *(_QWORD *)(v0 + 592);
  v67 = *(_QWORD *)(v0 + 584);
  v71 = *(_QWORD *)(v0 + 576);
  v55 = *(_QWORD *)(v0 + 568);
  v56 = *(_QWORD *)(v0 + 648);
  v57 = *(_QWORD *)(v0 + 560);
  v58 = *(_QWORD *)(v0 + 624);
  v59 = *(_QWORD *)(v0 + 552);
  v61 = *(_QWORD *)(v0 + 544);
  v64 = *(_QWORD *)(v0 + 536);
  v66 = *(_QWORD *)(v0 + 528);
  v69 = *(_QWORD *)(v0 + 520);
  v73 = *(_QWORD *)(v0 + 512);
  v75 = *(_QWORD *)(v0 + 504);
  v77 = *(_QWORD *)(v0 + 496);
  v79 = *(_QWORD *)(v0 + 488);
  v81 = *(_QWORD *)(v0 + 480);
  v83 = *(_QWORD *)(v0 + 472);
  v85 = *(_QWORD *)(v0 + 464);
  v87 = *(_QWORD *)(v0 + 456);
  v89 = *(_QWORD *)(v0 + 448);
  v91 = *(_QWORD *)(v0 + 424);
  v93 = *(_QWORD *)(v0 + 416);
  v96 = *(_QWORD *)(v0 + 408);
  v99 = *(_QWORD *)(v0 + 400);
  v101 = *(_QWORD *)(v0 + 376);
  v102 = *(_QWORD *)(v0 + 368);
  v103 = *(_QWORD *)(v0 + 344);
  v104 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), 0, 1, *(_QWORD *)(v0 + 880));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v71);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v69);
  swift_task_dealloc(v73);
  swift_task_dealloc(v75);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v96);
  swift_task_dealloc(v99);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C9238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1272);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1264);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1256);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 480);
  *(_QWORD *)(*(_QWORD *)v1 + 1280) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1003C92B8, 0, 0);
}

uint64_t sub_1003C92B8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v106 = *(_QWORD *)(v0 + 1280);
  v90 = *(_QWORD *)(v0 + 1240);
  v92 = *(_QWORD *)(v0 + 1248);
  v88 = *(_OWORD *)(v0 + 1224);
  v1 = *(_BYTE *)(v0 + 1417);
  v100 = *(_QWORD *)(v0 + 928);
  v103 = *(_QWORD *)(v0 + 912);
  v96 = *(_QWORD *)(v0 + 920);
  v98 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(int **)(v0 + 880);
  v82 = *(_QWORD *)(v0 + 640);
  v84 = *(_QWORD *)(v0 + 632);
  v86 = *(_QWORD *)(v0 + 664);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  if (*(_BYTE *)(v0 + 1416) != 2)
    v1 = *(_BYTE *)(v0 + 1416);
  v94 = v1;
  v8 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 424);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 10, v10);
  v80 = Album.id.getter(v11);
  v78 = v12;
  v13 = Album.catalogID.getter(v80);
  v73 = v14;
  v75 = v13;
  v15 = Album.siriRepresentation.getter();
  v16 = MusicSiriRepresentation.id.getter(v15);
  v69 = v17;
  v71 = v16;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v18 = sub_100007E8C(&qword_1011B0958);
  v19 = swift_allocObject(v18, 34, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EA7A80;
  Album.contentRating.getter(v19);
  *(_BYTE *)(v19 + 32) = TextBadge.init(for:isPlayable:)(v9, 1);
  Album.favoriteStatus.getter();
  v20 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
  *(_BYTE *)(v19 + 33) = TextBadge.init(for:)(v8);
  v67 = v3[18];
  *(_QWORD *)(v2 + v67) = 0;
  *(_QWORD *)(v2 + v3[19]) = _swiftEmptyArrayStorage;
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v88;
  *(_QWORD *)(v2 + 32) = v90;
  *(_QWORD *)(v2 + 40) = v92;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v2 + v3[7], v86, v84);
  sub_10005B704(v4, v2 + v3[16], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)(v2 + v3[17]) = 0x3FF0000000000000;
  v21 = (uint64_t *)(v2 + v3[8]);
  *v21 = v80;
  v21[1] = v78;
  v22 = (uint64_t *)(v2 + v3[9]);
  *v22 = v75;
  v22[1] = v73;
  v23 = (uint64_t *)(v2 + v3[10]);
  *v23 = v71;
  v23[1] = v69;
  v24 = (_QWORD *)(v2 + v3[11]);
  *v24 = v96;
  v24[1] = v100;
  v25 = (_QWORD *)(v2 + v3[12]);
  *v25 = v98;
  v25[1] = v103;
  v26 = (_QWORD *)(v2 + v3[13]);
  *v26 = 0;
  v26[1] = 0;
  *(_QWORD *)(v2 + v3[14]) = v19;
  *(_BYTE *)(v2 + v3[15]) = v94 & 1;
  sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
  v27 = *(_QWORD *)(v0 + 848);
  v28 = *(_QWORD *)(v0 + 840);
  v29 = *(_QWORD *)(v0 + 832);
  v30 = *(_QWORD *)(v0 + 664);
  v31 = *(_QWORD *)(v0 + 640);
  v32 = *(_QWORD *)(v0 + 632);
  v33 = *(_QWORD *)(v0 + 456);
  v34 = *(void **)(v0 + 304);
  v35 = *(void **)(v0 + 312);
  v101 = *(_QWORD *)(v0 + 296);
  v104 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v2 + v67) = v106;
  sub_10005B748(v33, type metadata accessor for ArtworkImage.Placeholder);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  sub_10004FF60(v0 + 96, &qword_1011A16C8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  sub_10005B6C0(v104, v101, type metadata accessor for WidgetMusicItem);
  v36 = *(_QWORD *)(v0 + 896);
  v37 = *(_QWORD *)(v0 + 872);
  v38 = *(_QWORD *)(v0 + 864);
  v39 = *(_QWORD *)(v0 + 856);
  v40 = *(_QWORD *)(v0 + 848);
  v41 = *(_QWORD *)(v0 + 824);
  v42 = *(_QWORD *)(v0 + 816);
  v43 = *(_QWORD *)(v0 + 808);
  v44 = *(_QWORD *)(v0 + 800);
  v46 = *(_QWORD *)(v0 + 776);
  v47 = *(_QWORD *)(v0 + 768);
  v48 = *(_QWORD *)(v0 + 760);
  v49 = *(_QWORD *)(v0 + 752);
  v50 = *(_QWORD *)(v0 + 728);
  v51 = *(_QWORD *)(v0 + 720);
  v52 = *(_QWORD *)(v0 + 696);
  v53 = *(_QWORD *)(v0 + 688);
  v54 = *(_QWORD *)(v0 + 680);
  v55 = *(_QWORD *)(v0 + 672);
  v56 = *(_QWORD *)(v0 + 664);
  v57 = *(_QWORD *)(v0 + 656);
  v63 = *(_QWORD *)(v0 + 616);
  v65 = *(_QWORD *)(v0 + 608);
  v66 = *(_QWORD *)(v0 + 600);
  v70 = *(_QWORD *)(v0 + 592);
  v74 = *(_QWORD *)(v0 + 584);
  v77 = *(_QWORD *)(v0 + 576);
  v58 = *(_QWORD *)(v0 + 568);
  v59 = *(_QWORD *)(v0 + 648);
  v60 = *(_QWORD *)(v0 + 560);
  v61 = *(_QWORD *)(v0 + 624);
  v62 = *(_QWORD *)(v0 + 552);
  v64 = *(_QWORD *)(v0 + 544);
  v68 = *(_QWORD *)(v0 + 536);
  v72 = *(_QWORD *)(v0 + 528);
  v76 = *(_QWORD *)(v0 + 520);
  v79 = *(_QWORD *)(v0 + 512);
  v81 = *(_QWORD *)(v0 + 504);
  v83 = *(_QWORD *)(v0 + 496);
  v85 = *(_QWORD *)(v0 + 488);
  v87 = *(_QWORD *)(v0 + 480);
  v89 = *(_QWORD *)(v0 + 472);
  v91 = *(_QWORD *)(v0 + 464);
  v93 = *(_QWORD *)(v0 + 456);
  v95 = *(_QWORD *)(v0 + 448);
  v97 = *(_QWORD *)(v0 + 424);
  v99 = *(_QWORD *)(v0 + 416);
  v102 = *(_QWORD *)(v0 + 408);
  v105 = *(_QWORD *)(v0 + 400);
  v107 = *(_QWORD *)(v0 + 376);
  v108 = *(_QWORD *)(v0 + 368);
  v109 = *(_QWORD *)(v0 + 344);
  v110 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), 0, 1, *(_QWORD *)(v0 + 880));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v70);
  swift_task_dealloc(v74);
  swift_task_dealloc(v77);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v68);
  swift_task_dealloc(v72);
  swift_task_dealloc(v76);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v97);
  swift_task_dealloc(v99);
  swift_task_dealloc(v102);
  swift_task_dealloc(v105);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C9918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1336);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1328);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1320);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 1344) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1003C9998, 0, 0);
}

uint64_t sub_1003C9998(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v109 = *(_QWORD *)(v1 + 1344);
  v93 = *(_QWORD *)(v1 + 1304);
  v95 = *(_QWORD *)(v1 + 1312);
  v91 = *(_OWORD *)(v1 + 1288);
  v2 = *(_BYTE *)(v1 + 1417);
  v103 = *(_QWORD *)(v1 + 928);
  v106 = *(_QWORD *)(v1 + 912);
  v99 = *(_QWORD *)(v1 + 920);
  v101 = *(_QWORD *)(v1 + 904);
  v3 = *(_QWORD *)(v1 + 896);
  v4 = *(int **)(v1 + 880);
  v85 = *(_QWORD *)(v1 + 640);
  v87 = *(_QWORD *)(v1 + 632);
  v89 = *(_QWORD *)(v1 + 656);
  v5 = *(_QWORD *)(v1 + 448);
  v6 = *(_QWORD *)(v1 + 456);
  v7 = *(_QWORD *)(v1 + 440);
  v70 = *(_QWORD *)(v1 + 432);
  if (*(_BYTE *)(v1 + 1416) != 2)
    v2 = *(_BYTE *)(v1 + 1416);
  v97 = v2;
  v8 = *(_QWORD *)(v1 + 416);
  v9 = *(_QWORD *)(v1 + 424);
  v81 = *(_QWORD *)(v1 + 456);
  Playlist.variant.getter(a1);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 10, v10);
  v12 = Playlist.id.getter(v11);
  v83 = v13;
  v14 = Playlist.catalogID.getter(v12);
  v77 = v15;
  v79 = v14;
  v16 = Playlist.siriRepresentation.getter();
  v17 = MusicSiriRepresentation.id.getter(v16);
  v73 = v18;
  v75 = v17;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v70);
  v19 = sub_100007E8C(&qword_1011B0958);
  v20 = swift_allocObject(v19, 34, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EA7A80;
  Playlist.contentRating.getter(v20);
  v21 = TextBadge.init(for:isPlayable:)(v9, 1);
  *(_BYTE *)(v20 + 32) = v21;
  Playlist.favoriteStatus.getter(v21);
  v22 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 0, 1, v22);
  *(_BYTE *)(v20 + 33) = TextBadge.init(for:)(v8);
  v71 = v4[18];
  *(_QWORD *)(v3 + v71) = 0;
  *(_QWORD *)(v3 + v4[19]) = _swiftEmptyArrayStorage;
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_OWORD *)(v3 + 16) = v91;
  *(_QWORD *)(v3 + 32) = v93;
  *(_QWORD *)(v3 + 40) = v95;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v3 + v4[7], v89, v87);
  sub_10005B704(v81, v3 + v4[16], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)(v3 + v4[17]) = 0x3FF0000000000000;
  v23 = (uint64_t *)(v3 + v4[8]);
  *v23 = v12;
  v23[1] = v83;
  v24 = (uint64_t *)(v3 + v4[9]);
  *v24 = v79;
  v24[1] = v77;
  v25 = (uint64_t *)(v3 + v4[10]);
  *v25 = v75;
  v25[1] = v73;
  v26 = (_QWORD *)(v3 + v4[11]);
  *v26 = v99;
  v26[1] = v103;
  v27 = (_QWORD *)(v3 + v4[12]);
  *v27 = v101;
  v27[1] = v106;
  v28 = (_QWORD *)(v3 + v4[13]);
  *v28 = 0;
  v28[1] = 0;
  *(_QWORD *)(v3 + v4[14]) = v20;
  *(_BYTE *)(v3 + v4[15]) = v97 & 1;
  sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
  v29 = *(_QWORD *)(v1 + 800);
  v30 = *(_QWORD *)(v1 + 792);
  v31 = *(_QWORD *)(v1 + 784);
  v32 = *(_QWORD *)(v1 + 656);
  v33 = *(_QWORD *)(v1 + 640);
  v34 = *(_QWORD *)(v1 + 632);
  v35 = *(_QWORD *)(v1 + 456);
  v37 = *(void **)(v1 + 304);
  v36 = *(void **)(v1 + 312);
  v104 = *(_QWORD *)(v1 + 296);
  v107 = *(_QWORD *)(v1 + 896);
  *(_QWORD *)(v3 + v71) = v109;
  sub_10005B748(v35, type metadata accessor for ArtworkImage.Placeholder);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  sub_10004FF60(v1 + 96, &qword_1011A16C8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v1 + 216));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v1 + 16));
  sub_10005B6C0(v107, v104, type metadata accessor for WidgetMusicItem);
  v38 = *(_QWORD *)(v1 + 896);
  v39 = *(_QWORD *)(v1 + 872);
  v40 = *(_QWORD *)(v1 + 864);
  v41 = *(_QWORD *)(v1 + 856);
  v42 = *(_QWORD *)(v1 + 848);
  v43 = *(_QWORD *)(v1 + 824);
  v44 = *(_QWORD *)(v1 + 816);
  v45 = *(_QWORD *)(v1 + 808);
  v46 = *(_QWORD *)(v1 + 800);
  v48 = *(_QWORD *)(v1 + 776);
  v49 = *(_QWORD *)(v1 + 768);
  v50 = *(_QWORD *)(v1 + 760);
  v51 = *(_QWORD *)(v1 + 752);
  v52 = *(_QWORD *)(v1 + 728);
  v53 = *(_QWORD *)(v1 + 720);
  v54 = *(_QWORD *)(v1 + 696);
  v55 = *(_QWORD *)(v1 + 688);
  v56 = *(_QWORD *)(v1 + 680);
  v57 = *(_QWORD *)(v1 + 672);
  v58 = *(_QWORD *)(v1 + 664);
  v59 = *(_QWORD *)(v1 + 656);
  v65 = *(_QWORD *)(v1 + 616);
  v67 = *(_QWORD *)(v1 + 608);
  v68 = *(_QWORD *)(v1 + 600);
  v72 = *(_QWORD *)(v1 + 592);
  v76 = *(_QWORD *)(v1 + 584);
  v80 = *(_QWORD *)(v1 + 576);
  v60 = *(_QWORD *)(v1 + 568);
  v61 = *(_QWORD *)(v1 + 648);
  v62 = *(_QWORD *)(v1 + 560);
  v63 = *(_QWORD *)(v1 + 624);
  v64 = *(_QWORD *)(v1 + 552);
  v66 = *(_QWORD *)(v1 + 544);
  v69 = *(_QWORD *)(v1 + 536);
  v74 = *(_QWORD *)(v1 + 528);
  v78 = *(_QWORD *)(v1 + 520);
  v82 = *(_QWORD *)(v1 + 512);
  v84 = *(_QWORD *)(v1 + 504);
  v86 = *(_QWORD *)(v1 + 496);
  v88 = *(_QWORD *)(v1 + 488);
  v90 = *(_QWORD *)(v1 + 480);
  v92 = *(_QWORD *)(v1 + 472);
  v94 = *(_QWORD *)(v1 + 464);
  v96 = *(_QWORD *)(v1 + 456);
  v98 = *(_QWORD *)(v1 + 448);
  v100 = *(_QWORD *)(v1 + 424);
  v102 = *(_QWORD *)(v1 + 416);
  v105 = *(_QWORD *)(v1 + 408);
  v108 = *(_QWORD *)(v1 + 400);
  v110 = *(_QWORD *)(v1 + 376);
  v111 = *(_QWORD *)(v1 + 368);
  v112 = *(_QWORD *)(v1 + 344);
  v113 = *(_QWORD *)(v1 + 336);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 + 888) + 56))(*(_QWORD *)(v1 + 296), 0, 1, *(_QWORD *)(v1 + 880));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v72);
  swift_task_dealloc(v76);
  swift_task_dealloc(v80);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v69);
  swift_task_dealloc(v74);
  swift_task_dealloc(v78);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v102);
  swift_task_dealloc(v105);
  swift_task_dealloc(v108);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003CA000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1400);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1392);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1384);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 1408) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  return swift_task_switch(sub_1003CA080, 0, 0);
}

uint64_t sub_1003CA080()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v100 = *(_QWORD *)(v0 + 1408);
  v84 = *(_QWORD *)(v0 + 1368);
  v86 = *(_QWORD *)(v0 + 1376);
  v82 = *(_OWORD *)(v0 + 1352);
  v1 = *(_BYTE *)(v0 + 1417);
  v94 = *(_QWORD *)(v0 + 928);
  v97 = *(_QWORD *)(v0 + 912);
  v90 = *(_QWORD *)(v0 + 920);
  v92 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(int **)(v0 + 880);
  v76 = *(_QWORD *)(v0 + 640);
  v78 = *(_QWORD *)(v0 + 632);
  v80 = *(_QWORD *)(v0 + 648);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 440);
  if (*(_BYTE *)(v0 + 1416) != 2)
    v1 = *(_BYTE *)(v0 + 1416);
  v88 = v1;
  v8 = *(_QWORD *)(v0 + 424);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 8, 10, v9);
  v74 = Station.id.getter(v10);
  v72 = v11;
  v12 = Station.siriRepresentation.getter();
  v13 = MusicSiriRepresentation.id.getter(v12);
  v68 = v14;
  v70 = v13;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v15 = sub_100007E8C(&qword_1011B0958);
  v16 = swift_allocObject(v15, 33, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EA7AA0;
  Station.contentRating.getter();
  *(_BYTE *)(v16 + 32) = TextBadge.init(for:isPlayable:)(v8, 1);
  v66 = v3[18];
  *(_QWORD *)(v2 + v66) = 0;
  *(_QWORD *)(v2 + v3[19]) = _swiftEmptyArrayStorage;
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v82;
  *(_QWORD *)(v2 + 32) = v84;
  *(_QWORD *)(v2 + 40) = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v2 + v3[7], v80, v78);
  sub_10005B704(v4, v2 + v3[16], type metadata accessor for ArtworkImage.Placeholder);
  *(_QWORD *)(v2 + v3[17]) = 0x3FF0000000000000;
  v17 = (uint64_t *)(v2 + v3[8]);
  *v17 = v74;
  v17[1] = v72;
  v18 = (_QWORD *)(v2 + v3[9]);
  *v18 = 0;
  v18[1] = 0;
  v19 = (uint64_t *)(v2 + v3[10]);
  *v19 = v70;
  v19[1] = v68;
  v20 = (_QWORD *)(v2 + v3[11]);
  *v20 = v90;
  v20[1] = v94;
  v21 = (_QWORD *)(v2 + v3[12]);
  *v21 = v92;
  v21[1] = v97;
  v22 = (_QWORD *)(v2 + v3[13]);
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)(v2 + v3[14]) = v16;
  *(_BYTE *)(v2 + v3[15]) = v88 & 1;
  sub_100400AC8((uint64_t)_swiftEmptyArrayStorage);
  v23 = *(_QWORD *)(v0 + 752);
  v24 = *(_QWORD *)(v0 + 744);
  v25 = *(_QWORD *)(v0 + 736);
  v26 = *(_QWORD *)(v0 + 648);
  v27 = *(_QWORD *)(v0 + 640);
  v28 = *(_QWORD *)(v0 + 632);
  v29 = *(_QWORD *)(v0 + 456);
  v31 = *(void **)(v0 + 304);
  v30 = *(void **)(v0 + 312);
  v95 = *(_QWORD *)(v0 + 296);
  v98 = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v2 + v66) = v100;
  sub_10005B748(v29, type metadata accessor for ArtworkImage.Placeholder);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);

  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  sub_10004FF60(v0 + 96, &qword_1011A16C8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  sub_10005B6C0(v98, v95, type metadata accessor for WidgetMusicItem);
  v32 = *(_QWORD *)(v0 + 896);
  v33 = *(_QWORD *)(v0 + 872);
  v34 = *(_QWORD *)(v0 + 864);
  v35 = *(_QWORD *)(v0 + 856);
  v36 = *(_QWORD *)(v0 + 848);
  v37 = *(_QWORD *)(v0 + 824);
  v38 = *(_QWORD *)(v0 + 816);
  v39 = *(_QWORD *)(v0 + 808);
  v40 = *(_QWORD *)(v0 + 800);
  v42 = *(_QWORD *)(v0 + 776);
  v43 = *(_QWORD *)(v0 + 768);
  v44 = *(_QWORD *)(v0 + 760);
  v45 = *(_QWORD *)(v0 + 752);
  v46 = *(_QWORD *)(v0 + 728);
  v47 = *(_QWORD *)(v0 + 720);
  v48 = *(_QWORD *)(v0 + 696);
  v49 = *(_QWORD *)(v0 + 688);
  v50 = *(_QWORD *)(v0 + 680);
  v51 = *(_QWORD *)(v0 + 672);
  v52 = *(_QWORD *)(v0 + 664);
  v53 = *(_QWORD *)(v0 + 656);
  v59 = *(_QWORD *)(v0 + 616);
  v61 = *(_QWORD *)(v0 + 608);
  v62 = *(_QWORD *)(v0 + 600);
  v64 = *(_QWORD *)(v0 + 592);
  v67 = *(_QWORD *)(v0 + 584);
  v71 = *(_QWORD *)(v0 + 576);
  v54 = *(_QWORD *)(v0 + 568);
  v55 = *(_QWORD *)(v0 + 648);
  v56 = *(_QWORD *)(v0 + 560);
  v57 = *(_QWORD *)(v0 + 624);
  v58 = *(_QWORD *)(v0 + 552);
  v60 = *(_QWORD *)(v0 + 544);
  v63 = *(_QWORD *)(v0 + 536);
  v65 = *(_QWORD *)(v0 + 528);
  v69 = *(_QWORD *)(v0 + 520);
  v73 = *(_QWORD *)(v0 + 512);
  v75 = *(_QWORD *)(v0 + 504);
  v77 = *(_QWORD *)(v0 + 496);
  v79 = *(_QWORD *)(v0 + 488);
  v81 = *(_QWORD *)(v0 + 480);
  v83 = *(_QWORD *)(v0 + 472);
  v85 = *(_QWORD *)(v0 + 464);
  v87 = *(_QWORD *)(v0 + 456);
  v89 = *(_QWORD *)(v0 + 448);
  v91 = *(_QWORD *)(v0 + 424);
  v93 = *(_QWORD *)(v0 + 416);
  v96 = *(_QWORD *)(v0 + 408);
  v99 = *(_QWORD *)(v0 + 400);
  v101 = *(_QWORD *)(v0 + 376);
  v102 = *(_QWORD *)(v0 + 368);
  v103 = *(_QWORD *)(v0 + 344);
  v104 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 888) + 56))(*(_QWORD *)(v0 + 296), 0, 1, *(_QWORD *)(v0 + 880));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v67);
  swift_task_dealloc(v71);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v69);
  swift_task_dealloc(v73);
  swift_task_dealloc(v75);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v96);
  swift_task_dealloc(v99);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CA694(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v2[12] = a1;
  v2[13] = v1;
  v3 = sub_100007E8C(&qword_1011B08E8);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v2[19] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[20] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v9);
  v2[22] = swift_task_alloc(v9);
  v2[23] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v2[24] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v2[25] = v12;
  v2[26] = v13;
  return swift_task_switch(sub_1003CA7B4, v12, v13);
}

uint64_t sub_1003CA7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  float v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_100065228(*(_QWORD *)(v0 + 96), v0 + 16, &qword_1011AAD88);
  v2 = *(unsigned __int8 *)(v0 + 64);
  if (v2 == 2)
  {
    swift_release();
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Clearing current item progress", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, 1, 1, v7);
  }
  else
  {
    v10 = *(double *)(v0 + 48);
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 40);
    v11 = *(double *)(v0 + 16);
    v12 = *(float *)(v0 + 56);
    *(double *)(v0 + 224) = v10 + (static Date.timeIntervalSinceReferenceDate.getter(v1) - v11) * v12;
    if ((v2 & 1) == 0)
      return swift_task_switch(sub_1003CAA6C, 0, 0);
    swift_release();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v17 = 67240192;
      *(_DWORD *)(v0 + 240) = 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 244);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Using placeholder item progress. isLiveContent: %{BOOL,public}d", v17, 8u);
      swift_slowDealloc(v17, -1, -1);
    }

    if (qword_10119BFA0 != -1)
      swift_once(&qword_10119BFA0, sub_1003CAF98);
    v18 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 112);
    v20 = sub_100048B14(v18, (uint64_t)qword_10124CEB0);
    sub_10005B704(v20, v9, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v18);
  }
  sub_1003CCF20(v9);
  v21 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 168);
  v23 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CAA6C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 232) = v1;
  *v1 = v0;
  v1[1] = sub_1003CAAF8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 244, 0, 0, 0x7453726579616C70, 0xEB00000000657461, sub_1003D0508, *(_QWORD *)(v0 + 104), &type metadata for NowPlayingDataProvider.PlayerState);
}

uint64_t sub_1003CAAF8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 232));
  return swift_task_switch(sub_1003CAB4C, 0, 0);
}

uint64_t sub_1003CAB4C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 245) = *(_BYTE *)(v0 + 244);
  return swift_task_switch(sub_1003CAB64, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
}

uint64_t sub_1003CAB64()
{
  uint64_t v0;
  int v1;
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;

  v1 = *(unsigned __int8 *)(v0 + 245);
  swift_release();
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = *(double *)(v0 + 216);
      v3 = *(double *)(v0 + 224);
      swift_bridgeObjectRelease(0xE600000000000000);
      if (v3 >= v2)
        v5 = v2;
      else
        v5 = v3;
      v6 = fmax(v5, 0.0);
      v7 = static Date.now.getter(v4);
      v8 = Date.addingTimeInterval(_:)(v7, -v6);
      Date.addingTimeInterval(_:)(v8, v2);
LABEL_12:
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
      v17 = 0;
      goto LABEL_14;
    }
    v9 = 0x646570706F7473;
  }
  else
  {
    v9 = 0x676E6979616C70;
  }
  v11 = *(double *)(v0 + 216);
  v10 = *(double *)(v0 + 224);
  if (v10 >= v11)
    v10 = *(double *)(v0 + 216);
  v12 = fmax(v10, 0.0);
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, 0xE700000000000000, 0x646573756170, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  v15 = static Date.now.getter(v14);
  v16 = Date.addingTimeInterval(_:)(v15, -v12);
  Date.addingTimeInterval(_:)(v16, v11);
  if ((v13 & 1) != 0)
    goto LABEL_12;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  v17 = 1;
LABEL_14:
  v18 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 152);
  v22 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(v22, v17, 1, *(_QWORD *)(v0 + 128));
  sub_100065228(v22, v18 + *(int *)(v21 + 24), (uint64_t *)&unk_1011A30A0);
  sub_10005B6C0(v18, v19, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  v23 = sub_10005B704(v19, v20, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v52 = v0 + 88;
    v27 = *(double *)(v0 + 216);
    v26 = *(double *)(v0 + 224);
    v28 = *(_QWORD *)(v0 + 168);
    if (v26 >= v27)
      v26 = *(double *)(v0 + 216);
    v29 = fmax(v26, 0.0);
    v30 = swift_slowAlloc(32, -1);
    v31 = swift_slowAlloc(96, -1);
    v53 = v31;
    *(_DWORD *)v30 = 136446722;
    v32 = sub_1003CB0F4();
    v34 = v33;
    *(_QWORD *)(v0 + 72) = sub_100322200(v32, v33, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    swift_bridgeObjectRelease(v34);
    sub_10005B748(v28, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    *(_WORD *)(v30 + 12) = 2082;
    v35 = Double.description.getter(v29);
    v37 = v36;
    *(_QWORD *)(v0 + 80) = sub_100322200(v35, v36, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v52);
    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v30 + 22) = 2082;
    v38 = Double.description.getter(v27);
    v40 = v39;
    *(_QWORD *)(v0 + 88) = sub_100322200(v38, v39, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v52, v0 + 96);
    swift_bridgeObjectRelease(v40);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Updating current item progress: %{public}s, elapsedDuration: %{public}s, duration: %{public}s", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy(v31, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {
    v41 = *(_QWORD *)(v0 + 168);

    sub_10005B748(v41, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  }
  v42 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 160);
  v45 = *(_QWORD *)(v0 + 112);
  sub_10005B704(v42, v45, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  sub_1003CCF20(v45);
  sub_10005B748(v42, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  v46 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 168);
  v48 = *(_QWORD *)(v0 + 144);
  v50 = *(_QWORD *)(v0 + 112);
  v49 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CAF98()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, char *, uint64_t);
  uint64_t v16;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - v8;
  v10 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  sub_10004FACC(v10, qword_10124CEB0);
  v11 = sub_100048B14(v10, (uint64_t)qword_10124CEB0);
  v12 = static Date.now.getter(v11);
  v13 = static Date.distantFuture.getter(v12);
  static Date.distantPast.getter(v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  v14 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v14(v11, v9, v3);
  v14(v11 + *(int *)(v10 + 20), v6, v3);
  return sub_100065228((uint64_t)v2, v11 + *(int *)(v10 + 24), (uint64_t *)&unk_1011A30A0);
}

uint64_t sub_1003CB0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  void *v14;
  Swift::String v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v20;
  _QWORD v21[2];

  v1 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v21, "ItemProgress(");
  HIWORD(v21[1]) = -4864;
  v20._countAndFlagsBits = 0x7461447472617473;
  v20._object = (void *)0xEB00000000203A65;
  v4 = type metadata accessor for Date(0);
  v5 = sub_100048748(&qword_1011B08E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v9);
  v20._countAndFlagsBits = 0x3A65746144646E65;
  v20._object = (void *)0xE900000000000020;
  v10 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v5);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v14);
  v20._countAndFlagsBits = 0x7461446573756170;
  v20._object = (void *)0xEB00000000203A65;
  sub_10004A160(v0 + *(int *)(v10 + 24), (uint64_t)v3, (uint64_t *)&unk_1011A30A0);
  v15._countAndFlagsBits = String.init<A>(describing:)(v3, v1);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  return v21[0];
}

uint64_t sub_1003CB310(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  char v21;

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011B08C0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_1003CE8FC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, v11, v9, v10);
  v21 = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_100048748(&qword_1011B08C8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v21, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
    v15 = v3 + *(int *)(v14 + 20);
    v20 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v20, v5, v12, v13);
    v16 = v3 + *(int *)(v14 + 24);
    v19 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v16, &v19, v5, v12, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003CB4A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char v41;
  char v42;
  char v43;

  v33 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v3);
  v34 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = type metadata accessor for Date(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v36 = (uint64_t *)((char *)&v31 - v8);
  v38 = sub_100007E8C(&qword_1011B08A8);
  v9 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v15 = a1[4];
  sub_100007E68(a1, v16);
  v17 = sub_1003CE8FC();
  v39 = v11;
  v18 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys, v17, v16, v15);
  if (v18)
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  v19 = v9;
  v31 = v12;
  v32 = v14;
  v40 = a1;
  v43 = 0;
  v20 = (_QWORD *)sub_100048748(&qword_1011B08B8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v21 = v36;
  v22 = v37;
  v23 = v38;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v36, v37, &v43, v38, v37, v20);
  v24 = *(void (**)(char *, _QWORD *, uint64_t))(v35 + 32);
  v24(v32, v21, v22);
  v42 = 1;
  v36 = v20;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v6, v22, &v42, v23, v22, v20);
  v25 = v23;
  v26 = v31;
  v24(&v32[*(int *)(v31 + 20)], v6, v22);
  v41 = 2;
  v27 = v34;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v34, v22, &v41, v25, v22, v36);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v39, v38);
  v28 = *(int *)(v26 + 24);
  v29 = (uint64_t)v32;
  sub_100065228((uint64_t)v27, (uint64_t)&v32[v28], (uint64_t *)&unk_1011A30A0);
  sub_10005B704(v29, v33, type metadata accessor for NowPlayingDataProvider.ItemProgress);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v40);
  return sub_10005B748(v29, type metadata accessor for NowPlayingDataProvider.ItemProgress);
}

uint64_t sub_1003CB820()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65746144646E65;
  if (*v0 != 1)
    v1 = 0x7461446573756170;
  if (*v0)
    return v1;
  else
    return 0x7461447472617473;
}

uint64_t sub_1003CB87C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003D0A0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003CB8A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003CE8FC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003CB8C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003CE8FC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003CB8F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003CB4A8(a1, a2);
}

uint64_t sub_1003CB904(_QWORD *a1)
{
  return sub_1003CB310(a1);
}

uint64_t sub_1003CB920(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[7] = a1;
  v2[8] = v1;
  v3 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v2[10] = v4;
  v2[11] = swift_task_alloc((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v6);
  v2[14] = swift_task_alloc(v6);
  v7 = type metadata accessor for WidgetMusicItem(0);
  v2[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[17] = swift_task_alloc(v9);
  v2[18] = swift_task_alloc(v9);
  return swift_task_switch(sub_1003CBA10, 0, 0);
}

uint64_t sub_1003CBA10(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *(void **)(v1 + 56);
  if (v2)
  {
    v3 = dword_1011B0954;
    v4 = v2;
    v5 = (_QWORD *)swift_task_alloc(v3);
    *(_QWORD *)(v1 + 152) = v5;
    *v5 = v1;
    v5[1] = sub_1003CBCE8;
    return sub_1003C4F10(*(_QWORD *)(v1 + 112), (uint64_t)v4, 0, 2);
  }
  else
  {
    v7 = Logger.logObject.getter(a1);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Clearing current container and background", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
    v10 = *(_QWORD *)(v1 + 120);
    v11 = *(_QWORD *)(v1 + 128);
    v12 = *(_QWORD *)(v1 + 96);
    v13 = *(_QWORD *)(v1 + 104);
    v14 = *(_QWORD *)(v1 + 88);
    v35 = *(_QWORD *)(v1 + 80);
    v15 = *(_QWORD *)(v1 + 64);
    v16 = *(_QWORD *)(v1 + 72);

    v17 = *(_QWORD *)(v15 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    sub_1003CD4A8(v13);
    v18 = v17
        + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground;
    swift_beginAccess(v17+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground, v1 + 16, 33, 0);
    v19 = (uint64_t *)(v18 + *(int *)(sub_100007E8C(&qword_1011B08F0) + 44));
    v20 = v19[1];
    v34 = *v19;
    static TaskPriority.userInitiated.getter(v21);
    v22 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v12, 0, 1, v22);
    sub_10005B704(v18, v14, type metadata accessor for WidgetDiskCache);
    *(_QWORD *)(v1 + 40) = 1;
    v23 = *(unsigned __int8 *)(v16 + 80);
    v24 = (v23 + 32) & ~v23;
    v25 = (v35 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
    v27 = swift_allocObject(&unk_1010C3108, v26 + 8, v23 | 7);
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0;
    sub_10005B6C0(v14, v27 + v24, type metadata accessor for WidgetDiskCache);
    v28 = (_QWORD *)(v27 + v25);
    *v28 = v34;
    v28[1] = v20;
    sub_100065228(v1 + 40, v27 + v26, &qword_1011AE0E8);
    swift_bridgeObjectRetain();
    sub_1000E8908(v12, (uint64_t)&unk_1011B0948, v27);
    swift_release();
    sub_10004FF60(v12, (uint64_t *)&unk_1011A13B0);
    swift_endAccess(v1 + 16);
    v29 = *(_QWORD *)(v1 + 136);
    v31 = *(_QWORD *)(v1 + 104);
    v30 = *(_QWORD *)(v1 + 112);
    v33 = *(_QWORD *)(v1 + 88);
    v32 = *(_QWORD *)(v1 + 96);
    swift_task_dealloc(*(_QWORD *)(v1 + 144));
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1003CBCE8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_1003CBD3C, 0, 0);
}

uint64_t sub_1003CBD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 48))(v1, 1, *(_QWORD *)(v0 + 120)) == 1)
  {

    v2 = sub_10004FF60(v1, &qword_10119FA90);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Clearing current container and background", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 88);
    v52 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 72);

    v13 = *(_QWORD *)(v11 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v6);
    sub_1003CD4A8(v9);
    v14 = v13
        + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground;
    swift_beginAccess(v13+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground, v0 + 16, 33, 0);
    v15 = (uint64_t *)(v14 + *(int *)(sub_100007E8C(&qword_1011B08F0) + 44));
    v16 = v15[1];
    v51 = *v15;
    static TaskPriority.userInitiated.getter(v17);
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
    sub_10005B704(v14, v10, type metadata accessor for WidgetDiskCache);
    *(_QWORD *)(v0 + 40) = 1;
    v19 = *(unsigned __int8 *)(v12 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = (v52 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject(&unk_1010C3108, v22 + 8, v19 | 7);
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0;
    sub_10005B6C0(v10, v23 + v20, type metadata accessor for WidgetDiskCache);
    v24 = (_QWORD *)(v23 + v21);
    *v24 = v51;
    v24[1] = v16;
    sub_100065228(v0 + 40, v23 + v22, &qword_1011AE0E8);
    swift_bridgeObjectRetain();
    sub_1000E8908(v8, (uint64_t)&unk_1011B0948, v23);
    swift_release();
    sub_10004FF60(v8, (uint64_t *)&unk_1011A13B0);
    swift_endAccess(v0 + 16);
    v25 = *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v0 + 104);
    v26 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 136);
    v31 = *(_QWORD *)(v0 + 144);
    sub_10005B6C0(v1, v31, type metadata accessor for WidgetMusicItem);
    v33 = sub_10005B704(v31, v32, type metadata accessor for WidgetMusicItem);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter(v34);
    v36 = os_log_type_enabled(v34, v35);
    v37 = *(_QWORD *)(v0 + 136);
    if (v36)
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v53 = v39;
      *(_DWORD *)v38 = 136446210;
      v40 = sub_100400BD0();
      v42 = v41;
      *(_QWORD *)(v0 + 48) = sub_100322200(v40, v41, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
      swift_bridgeObjectRelease(v42);
      sub_10005B748(v37, type metadata accessor for WidgetMusicItem);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Updating current container: %{public}s", v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

    }
    else
    {

      sub_10005B748(v37, type metadata accessor for WidgetMusicItem);
    }
    v43 = *(_QWORD *)(v0 + 144);
    v44 = *(_QWORD *)(v0 + 120);
    v45 = *(_QWORD *)(v0 + 128);
    v46 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 16);
    sub_10005B704(v43, v46, type metadata accessor for WidgetMusicItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
    sub_1003CD4A8(v46);
    v47 = *(void **)(v43 + *(int *)(v44 + 72));
    *(_QWORD *)(v0 + 168) = v47;
    v48 = dword_1011B0544;
    v49 = v47;
    v50 = (_QWORD *)swift_task_alloc(v48);
    *(_QWORD *)(v0 + 176) = v50;
    *v50 = v0;
    v50[1] = sub_1003CC1E0;
    return sub_1003CC548((uint64_t)v47);
  }
}

uint64_t sub_1003CC1E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v3 = *(void **)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc(v2);

  return swift_task_switch(sub_1003CC240, 0, 0);
}

uint64_t sub_1003CC240()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void **)(v0 + 56);
  sub_1003CD748(*(void **)(v0 + 184));

  sub_10005B748(v1, type metadata accessor for WidgetMusicItem);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1003CC2D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id result;
  void *v19;

  v1 = v0;
  v2 = type metadata accessor for NowPlayingDataProvider.Cache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_QWORD *)(v0 + 16) = sub_1003CDAF8();
  static Logger.music(_:)(0xD000000000000016, 0x8000000100EB8600);
  v3 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v4 = objc_msgSend(v3, "processName");

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  if (v5 == 0x646957636973754DLL && v7 == 0xEC00000073746567)
  {
    swift_bridgeObjectRelease(0xEC00000073746567);
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, 0x646957636973754DLL, 0xEC00000073746567, 0);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) == 0)
      return (id)v1;
  }
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "running in widget process, disabling fallback cache", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v15 = objc_msgSend(v14, "artworkDataSource");
  if (v15)
  {
    v16 = v15;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v17 = (void *)swift_dynamicCastObjCClass(v16);
    if (v17)
      objc_msgSend(v17, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v16);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v19 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003CC548(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[9] = a1;
  v2[10] = v1;
  v3 = type metadata accessor for Backdrop.SnapshotConfiguration(0);
  v2[11] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[12] = v4;
  v2[13] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003CC5A8, 0, 0);
}

uint64_t sub_1003CC5A8()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v1 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v2 = objc_msgSend(v1, "processName");

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  if (v3 == 0x636973754DLL && v5 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    goto LABEL_10;
  }
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0x636973754DLL, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v5);
  if ((v7 & 1) != 0)
  {
LABEL_10:
    v13 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 112) = objc_opt_self(UIScreen);
    v14 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 120) = v14;
    v15 = v13;
    *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v16);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
    return swift_task_switch(sub_1003CC77C, v17, v18);
  }
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Not in Music process: skipping background image generation", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1003CC77C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = objc_msgSend(*(id *)(v0 + 112), "mainScreen", swift_release().n128_f64[0]);
  return swift_task_switch(sub_1003CC7D8, 0, 0);
}

uint64_t sub_1003CC7D8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 144) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003CC838, v3, v4);
}

uint64_t sub_1003CC838()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 136);
  objc_msgSend(v1, "scale", swift_release().n128_f64[0]);
  *(_QWORD *)(v0 + 152) = v2;

  return swift_task_switch(sub_1003CC88C, 0, 0);
}

uint64_t sub_1003CC88C()
{
  double *v0;
  double v1;
  uint64_t v2;
  id v3;
  double **v4;

  v1 = v0[19];
  v2 = *((_QWORD *)v0 + 9);
  v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
  Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)(v2, v3, 100.0, 100.0, v1, 0.0);
  v0[5] = 0.0;
  type metadata accessor for Backdrop.CompositeRenderer(0);
  v4 = (double **)swift_task_alloc(async function pointer to static Backdrop.CompositeRenderer.snapshot(configuration:)[1]);
  *((_QWORD *)v0 + 20) = v4;
  *v4 = v0;
  v4[1] = (double *)sub_1003CC948;
  return static Backdrop.CompositeRenderer.snapshot(configuration:)(*((_QWORD *)v0 + 13));
}

uint64_t sub_1003CC948(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1003CCBB8;
  }
  else
  {
    *(_QWORD *)(v4 + 176) = a1;
    v6 = sub_1003CC9BC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003CC9BC()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 176);
  *(_QWORD *)(v0 + 40) = v1;
  v2 = v1;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 104);
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    *(_DWORD *)v5 = 136446210;
    v20 = v6;
    *(_QWORD *)(v0 + 48) = v1;
    v7 = v2;
    v8 = sub_100007E8C(&qword_10119E588);
    v9 = String.init<A>(describing:)(v0 + 48, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 56) = sub_100322200(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    swift_bridgeObjectRelease(v11);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Generated background image: %{public}s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_beginAccess(v0 + 40, v0 + 16, 0, 0);
  v15 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
}

uint64_t sub_1003CCBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 168);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 168);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138543362;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 64) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to generate background image: %{public}@", v6, 0xCu);
    v9 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
    swift_errorRelease(v5);

    v10 = *(void **)(v0 + 40);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(v11);

    swift_errorRelease(v11);
    swift_errorRelease(v11);
    v10 = 0;
  }
  v12 = v10;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 88);
  if (v15)
  {
    v28 = *(_QWORD *)(v0 + 104);
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v29 = v20;
    *(_DWORD *)v19 = 136446210;
    *(_QWORD *)(v0 + 48) = v10;
    v21 = v12;
    v22 = sub_100007E8C(&qword_10119E588);
    v23 = String.init<A>(describing:)(v0 + 48, v22);
    v25 = v24;
    *(_QWORD *)(v0 + 56) = sub_100322200(v23, v24, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    swift_bridgeObjectRelease(v25);

    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Generated background image: %{public}s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v28, v18);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_beginAccess(v0 + 40, v0 + 16, 0, 0);
  v26 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
}

uint64_t sub_1003CCF04(uint64_t a1)
{
  return sub_1003CD4C4(a1, &OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentItem, (uint64_t)&unk_1010C30E0, (uint64_t)&unk_1011B0940);
}

uint64_t sub_1003CCF20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v31 = a1;
  v3 = type metadata accessor for WidgetDiskCache(0);
  v30 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v30 + 64);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B08E8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - v14;
  sub_10004A160(a1, (uint64_t)&v29 - v14, &qword_1011B08E8);
  v16 = v1
      + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentItemProgress;
  swift_beginAccess(v1 + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentItemProgress, v32, 33, 0);
  v17 = (uint64_t *)(v16 + *(int *)(sub_100007E8C(&qword_1011B08F8) + 44));
  v18 = v17[1];
  v29 = *v17;
  static TaskPriority.userInitiated.getter(v19);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
  sub_10005B704(v16, (uint64_t)v5, type metadata accessor for WidgetDiskCache);
  sub_10004A160((uint64_t)v15, (uint64_t)v12, &qword_1011B08E8);
  v21 = *(unsigned __int8 *)(v30 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = (v4 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(unsigned __int8 *)(v10 + 80);
  v25 = (v24 + v23 + 16) & ~v24;
  v26 = swift_allocObject(&unk_1010C30B8, v25 + v11, v21 | v24 | 7);
  *(_QWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = 0;
  sub_10005B6C0((uint64_t)v5, v26 + v22, type metadata accessor for WidgetDiskCache);
  v27 = (_QWORD *)(v26 + v23);
  *v27 = v29;
  v27[1] = v18;
  sub_100065228((uint64_t)v12, v26 + v25, &qword_1011B08E8);
  swift_bridgeObjectRetain();
  sub_1000E8908((uint64_t)v8, (uint64_t)&unk_1011B0938, v26);
  swift_release();
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A13B0);
  sub_10004FF60((uint64_t)v15, &qword_1011B08E8);
  swift_endAccess(v32);
  return sub_10004FF60(v31, &qword_1011B08E8);
}

void sub_1003CD1A0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _BYTE v35[24];

  v3 = type metadata accessor for WidgetDiskCache(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v1
      + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground;
  swift_beginAccess(v1+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground, v35, 33, 0);
  v11 = (uint64_t *)(v10 + *(int *)(sub_100007E8C(&qword_1011B08F0) + 44));
  if (a1)
  {
    v14 = *v11;
    v13 = v11[1];
    v15 = a1;
    static TaskPriority.userInitiated.getter(v16);
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
    sub_10005B704(v10, (uint64_t)&v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for WidgetDiskCache);
    v34 = (uint64_t)a1;
    v18 = *(unsigned __int8 *)(v4 + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_1010C3090, v21 + 8, v18 | 7);
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = 0;
    sub_10005B6C0((uint64_t)v6, v22 + v19, type metadata accessor for WidgetDiskCache);
    v23 = (_QWORD *)(v22 + v20);
    *v23 = v14;
    v23[1] = v13;
    sub_100065228((uint64_t)&v34, v22 + v21, &qword_1011AE0E8);
    v24 = v15;
    swift_bridgeObjectRetain();
    sub_1000E8908((uint64_t)v9, (uint64_t)&unk_1011B0930, v22);
    swift_release();
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A13B0);

    swift_endAccess(v35);
  }
  else
  {
    v26 = *v11;
    v25 = v11[1];
    static TaskPriority.userInitiated.getter(v12);
    v27 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 0, 1, v27);
    sub_10005B704(v10, (uint64_t)&v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for WidgetDiskCache);
    v34 = 1;
    v28 = *(unsigned __int8 *)(v4 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = (v5 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject(&unk_1010C3068, v31 + 8, v28 | 7);
    *(_QWORD *)(v32 + 16) = 0;
    *(_QWORD *)(v32 + 24) = 0;
    sub_10005B6C0((uint64_t)v6, v32 + v29, type metadata accessor for WidgetDiskCache);
    v33 = (_QWORD *)(v32 + v30);
    *v33 = v26;
    v33[1] = v25;
    sub_100065228((uint64_t)&v34, v32 + v31, &qword_1011AE0E8);
    swift_bridgeObjectRetain();
    sub_1000E8908((uint64_t)v9, (uint64_t)&unk_1011B0928, v32);
    swift_release();
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A13B0);
    swift_endAccess(v35);
  }
}

uint64_t sub_1003CD4A8(uint64_t a1)
{
  return sub_1003CD4C4(a1, &OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentContainer, (uint64_t)&unk_1010C3040, (uint64_t)&unk_1011B0920);
}

uint64_t sub_1003CD4C4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v35 = a3;
  v36 = a4;
  v32 = a2;
  v34 = a1;
  v6 = type metadata accessor for WidgetDiskCache(0);
  v33 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v33 + 64);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_10119FA90);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - v17;
  sub_10004A160(a1, (uint64_t)&v32 - v17, &qword_10119FA90);
  v19 = v4 + *v32;
  swift_beginAccess(v19, v37, 33, 0);
  v20 = v19 + *(int *)(sub_100007E8C(&qword_1011B0900) + 44);
  v21 = *(_QWORD *)(v20 + 8);
  v32 = *(_QWORD **)v20;
  static TaskPriority.userInitiated.getter(v22);
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 0, 1, v23);
  sub_10005B704(v19, (uint64_t)v8, type metadata accessor for WidgetDiskCache);
  sub_10004A160((uint64_t)v18, (uint64_t)v15, &qword_10119FA90);
  v24 = *(unsigned __int8 *)(v33 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = (v7 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(unsigned __int8 *)(v13 + 80);
  v28 = (v27 + v26 + 16) & ~v27;
  v29 = swift_allocObject(v35, v28 + v14, v24 | v27 | 7);
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  sub_10005B6C0((uint64_t)v8, v29 + v25, type metadata accessor for WidgetDiskCache);
  v30 = (_QWORD *)(v29 + v26);
  *v30 = v32;
  v30[1] = v21;
  sub_100065228((uint64_t)v15, v29 + v28, &qword_10119FA90);
  swift_bridgeObjectRetain();
  sub_1000E8908((uint64_t)v11, v36, v29);
  swift_release();
  sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A13B0);
  sub_10004FF60((uint64_t)v18, &qword_10119FA90);
  swift_endAccess(v37);
  return sub_10004FF60(v34, &qword_10119FA90);
}

void sub_1003CD748(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _BYTE v35[24];

  v3 = type metadata accessor for WidgetDiskCache(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v1
      + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground;
  swift_beginAccess(v1+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground, v35, 33, 0);
  v11 = (uint64_t *)(v10 + *(int *)(sub_100007E8C(&qword_1011B08F0) + 44));
  if (a1)
  {
    v14 = *v11;
    v13 = v11[1];
    v15 = a1;
    static TaskPriority.userInitiated.getter(v16);
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
    sub_10005B704(v10, (uint64_t)&v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for WidgetDiskCache);
    v34 = (uint64_t)a1;
    v18 = *(unsigned __int8 *)(v4 + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_1010C3018, v21 + 8, v18 | 7);
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = 0;
    sub_10005B6C0((uint64_t)v6, v22 + v19, type metadata accessor for WidgetDiskCache);
    v23 = (_QWORD *)(v22 + v20);
    *v23 = v14;
    v23[1] = v13;
    sub_100065228((uint64_t)&v34, v22 + v21, &qword_1011AE0E8);
    v24 = v15;
    swift_bridgeObjectRetain();
    sub_1000E8908((uint64_t)v9, (uint64_t)&unk_1011B0918, v22);
    swift_release();
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A13B0);

    swift_endAccess(v35);
  }
  else
  {
    v26 = *v11;
    v25 = v11[1];
    static TaskPriority.userInitiated.getter(v12);
    v27 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 0, 1, v27);
    sub_10005B704(v10, (uint64_t)&v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for WidgetDiskCache);
    v34 = 1;
    v28 = *(unsigned __int8 *)(v4 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = (v5 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject(&unk_1010C2FF0, v31 + 8, v28 | 7);
    *(_QWORD *)(v32 + 16) = 0;
    *(_QWORD *)(v32 + 24) = 0;
    sub_10005B6C0((uint64_t)v6, v32 + v29, type metadata accessor for WidgetDiskCache);
    v33 = (_QWORD *)(v32 + v30);
    *v33 = v26;
    v33[1] = v25;
    sub_100065228((uint64_t)&v34, v32 + v31, &qword_1011AE0E8);
    swift_bridgeObjectRetain();
    sub_1000E8908((uint64_t)v9, (uint64_t)&unk_1011B0910, v32);
    swift_release();
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A13B0);
    swift_endAccess(v35);
  }
}

uint64_t sub_1003CDA50()
{
  uint64_t v0;

  sub_10004FF60(v0 + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentItem, &qword_1011B0900);
  sub_10004FF60(v0 + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentItemProgress, &qword_1011B08F8);
  sub_10004FF60(v0+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground, &qword_1011B08F0);
  sub_10004FF60(v0 + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentContainer, &qword_1011B0900);
  sub_10004FF60(v0+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground, &qword_1011B08F0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003CDAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = sub_100007E8C(&qword_1011B08E8);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119FA90);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0 + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentItem;
  v8 = type metadata accessor for WidgetMusicItem(0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v6, 1, 1, v8);
  sub_1003CF468((uint64_t)v6, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0x49746E6572727563, 0xEB000000006D6574, &qword_10119FA90, &qword_1011B0900, v7);
  v10 = v0
      + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentItemProgress;
  v11 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  sub_1003CF468((uint64_t)v3, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD000000000000013, 0x8000000100E380F0, &qword_1011B08E8, &qword_1011B08F8, v10);
  sub_1003CF710((void *)1, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD000000000000015, 0x8000000100E38110, (char *)(v0+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentItemBackground));
  v12 = v0 + OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__currentContainer;
  v9(v6, 1, 1, v8);
  sub_1003CF468((uint64_t)v6, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD000000000000010, 0x8000000100E38130, &qword_10119FA90, &qword_1011B0900, v12);
  sub_1003CF710((void *)1, 0x6979616C50776F4ELL, 0xEA0000000000676ELL, 0xD00000000000001ALL, 0x8000000100E38150, (char *)(v0+ OBJC_IVAR____TtCC5Music22NowPlayingDataProviderP33_2FC75CDB8B46BF9DF1FD00C5072461DA5Cache__codableCurrentContainerBackground));
  return v0;
}

uint64_t sub_1003CDD9C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC5Music22NowPlayingDataProvider_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1003CDDF4()
{
  return type metadata accessor for NowPlayingDataProvider(0);
}

uint64_t type metadata accessor for NowPlayingDataProvider(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B0518, (uint64_t)&nominal type descriptor for NowPlayingDataProvider);
}

uint64_t sub_1003CDE10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003CDE8C()
{
  return type metadata accessor for NowPlayingDataProvider.Cache(0);
}

uint64_t type metadata accessor for NowPlayingDataProvider.Cache(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011B0678, (uint64_t)&nominal type descriptor for NowPlayingDataProvider.Cache);
}

void sub_1003CDEA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1003CDF50(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v9[0] = v4;
    sub_1003CDFF4(319);
    if (v6 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(v5 - 8) + 64;
      sub_1003CE0AC(319);
      if (v8 <= 0x3F)
      {
        v10 = *(_QWORD *)(v7 - 8) + 64;
        v11 = v4;
        v12 = v10;
        swift_updateClassMetadata2(a1, 256, 5, v9, a1 + 80);
      }
    }
  }
}

void sub_1003CDF50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1011B0688)
  {
    v2 = type metadata accessor for WidgetMusicItem(255);
    v3 = sub_100048748(&qword_1011B0690, type metadata accessor for WidgetMusicItem, (uint64_t)&unk_100EB9CB8);
    v4 = sub_100048748(&qword_1011B0698, type metadata accessor for WidgetMusicItem, (uint64_t)&unk_100EB9C90);
    v5 = type metadata accessor for FileBacked(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1011B0688);
  }
}

void sub_1003CDFF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1011B06A0)
  {
    v2 = type metadata accessor for NowPlayingDataProvider.ItemProgress(255);
    v3 = sub_100048748(&qword_1011B06A8, type metadata accessor for NowPlayingDataProvider.ItemProgress, (uint64_t)&unk_100EB86C4);
    v4 = sub_100048748(&qword_1011B06B0, type metadata accessor for NowPlayingDataProvider.ItemProgress, (uint64_t)&unk_100EB869C);
    v5 = type metadata accessor for FileBacked(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1011B06A0);
  }
}

uint64_t type metadata accessor for NowPlayingDataProvider.ItemProgress(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B0868, (uint64_t)&nominal type descriptor for NowPlayingDataProvider.ItemProgress);
}

void sub_1003CE0AC(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1011B06B8)
  {
    v2 = sub_1003CE110();
    v3 = sub_1003CE154();
    v4 = type metadata accessor for FileBacked(a1, (uint64_t)&type metadata for CodableImage, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1011B06B8);
  }
}

unint64_t sub_1003CE110()
{
  unint64_t result;

  result = qword_1011B06C0;
  if (!qword_1011B06C0)
  {
    result = swift_getWitnessTable(&unk_100ECE55C, &type metadata for CodableImage);
    atomic_store(result, (unint64_t *)&qword_1011B06C0);
  }
  return result;
}

unint64_t sub_1003CE154()
{
  unint64_t result;

  result = qword_1011B06C8;
  if (!qword_1011B06C8)
  {
    result = swift_getWitnessTable(&unk_100ECE534, &type metadata for CodableImage);
    atomic_store(result, (unint64_t *)&qword_1011B06C8);
  }
  return result;
}

uint64_t *sub_1003CE198(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1003CE2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v8(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *sub_1003CE350(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_1003CE430(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_1003CE55C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_1003CE63C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_1003CE768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CE774);
}

uint64_t sub_1003CE774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1003CE7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CE7F8);
}

uint64_t sub_1003CE7F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003CE878(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    sub_1001AC1BC(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

unint64_t sub_1003CE8FC()
{
  unint64_t result;

  result = qword_1011B08B0;
  if (!qword_1011B08B0)
  {
    result = swift_getWitnessTable(&unk_100EB885C, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B08B0);
  }
  return result;
}

void sub_1003CE940(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  char *v72;
  void (*v73)(char *, char *, uint64_t);
  _QWORD *v74;
  char *v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  _QWORD *v80;
  char *v81;
  void *v82;
  uint64_t v83;
  char *v84;
  id v85;
  void *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _QWORD *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;

  v2 = v1;
  v4 = sub_100007E8C(&qword_10119FD98);
  __chkstk_darwin(v4);
  v90 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for Station(0);
  v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v87 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v7);
  v94 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for Playlist(0);
  v107 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v88 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v10);
  v106 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Album(0);
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  __chkstk_darwin(v12);
  v92 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119D3A0);
  __chkstk_darwin(v14);
  v102 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for MusicMovie(0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v96 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v17);
  v105 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TVEpisode(0);
  v104 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v99 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v21);
  v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MusicVideo(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v93 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v27);
  v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Song(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self(MPModelSong);
  v34 = swift_dynamicCastObjCClass(v2);
  v35 = a1;
  if (v34)
  {
    v36 = (void *)v34;
    v100 = v35;
    v86 = v2;
    v37 = v2;
    if ((objc_msgSend(v36, "hasVideo") & 1) != 0)
    {

    }
    else
    {
      v85 = v37;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)(v36, v30, &protocol witness table for Song);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) != 1)
      {
        v73 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v73(v33, v29, v30);
        v74 = v100;
        v100[3] = v30;
        v74[4] = &protocol witness table for Song;
        v75 = (char *)sub_100049F68(v74);
        v73(v75, v33, v30);

        return;
      }

      sub_10004FF60((uint64_t)v29, &qword_10119E480);
    }
    v38 = v37;
    if (objc_msgSend(v36, "hasVideo"))
    {
      v39 = v38;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)(v36, v24, &protocol witness table for MusicVideo);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
      {
        v78 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
        v79 = v93;
        v78(v93, v23, v24);
        v80 = v100;
        v100[3] = v24;
        v80[4] = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
        v81 = (char *)sub_100049F68(v80);
        v78(v81, v79, v24);

        return;
      }

      sub_10004FF60((uint64_t)v23, &qword_1011B59B0);
    }
    else
    {

    }
    v35 = v100;
    v2 = v86;
  }
  v40 = v35;
  objc_opt_self(MPModelTVEpisode);
  v41 = swift_dynamicCastObjCClass(v2);
  if (v41)
  {
    v42 = v41;
    v43 = v2;
    v44 = (uint64_t)v105;
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(v42, v19, &protocol witness table for TVEpisode);
    v45 = v104;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v44, 1, v19) != 1)
    {
      v70 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
      v71 = v99;
      v70(v99, v44, v19);
      v40[3] = v19;
      v40[4] = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      v72 = (char *)sub_100049F68(v40);
      v70(v72, (uint64_t)v71, v19);
      return;
    }
    sub_10004FF60(v44, &qword_10119FD80);
  }
  objc_opt_self(MPModelMovie);
  v46 = swift_dynamicCastObjCClass(v2);
  v48 = (uint64_t)v106;
  v47 = v107;
  if (!v46)
  {
LABEL_17:
    objc_opt_self(MPModelAlbum);
    v54 = swift_dynamicCastObjCClass(v2);
    if (v54)
    {
      v55 = v54;
      v56 = v2;
      v51 = v98;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)(v55, v98, &protocol witness table for Album);
      v57 = v97;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v48, 1, v51) != 1)
      {
        v76 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
        v77 = v92;
        v76(v92, v48, v51);
        v82 = &protocol witness table for Album;
        goto LABEL_34;
      }
      sub_10004FF60(v48, &qword_1011A8FA0);
    }
    objc_opt_self(MPModelPlaylist);
    v58 = swift_dynamicCastObjCClass(v2);
    if (!v58)
    {
LABEL_23:
      objc_opt_self(MPModelRadioStation);
      v63 = swift_dynamicCastObjCClass(v2);
      if (!v63)
      {
LABEL_26:
        v40[4] = 0;
        *(_OWORD *)v40 = 0u;
        *((_OWORD *)v40 + 1) = 0u;
        return;
      }
      v64 = v63;
      v65 = v2;
      v66 = (uint64_t)v90;
      v51 = v91;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)(v64, v91, &protocol witness table for Station);
      v67 = v89;
      v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v66, 1, v51);
      v69 = v66;
      if (v68 == 1)
      {
        sub_10004FF60(v66, &qword_10119FD98);
        goto LABEL_26;
      }
      v76 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 32);
      v77 = v87;
      v76(v87, v69, v51);
      v82 = &protocol witness table for Station;
      goto LABEL_34;
    }
    v59 = v58;
    v60 = v2;
    v51 = v95;
    v61 = v59;
    v62 = (uint64_t)v94;
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(v61, v95, &protocol witness table for Playlist);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v62, 1, v51) == 1)
    {
      sub_10004FF60(v62, &qword_1011A30F0);
      goto LABEL_23;
    }
    v83 = v62;
    v76 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
    v77 = v88;
    v76(v88, v83, v51);
    v82 = &protocol witness table for Playlist;
LABEL_34:
    v40[3] = v51;
    v40[4] = v82;
    goto LABEL_35;
  }
  v49 = v46;
  v50 = v2;
  v52 = (uint64_t)v102;
  v51 = v103;
  dispatch thunk of LegacyModelObjectConvertible.init(_:)(v49, v103, &protocol witness table for MusicMovie);
  v53 = v101;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v52, 1, v51) == 1)
  {
    sub_10004FF60(v52, &qword_10119D3A0);
    goto LABEL_17;
  }
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
  v77 = v96;
  v76(v96, v52, v51);
  v40[3] = v51;
  v40[4] = sub_100048748(&qword_10119D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
LABEL_35:
  v84 = (char *)sub_100049F68(v40);
  v76(v84, (uint64_t)v77, v51);
}

uint64_t sub_1003CF204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v32 = a4;
  v33 = a5;
  v29 = a2;
  v30 = a3;
  v31 = a1;
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(int *)(type metadata accessor for WidgetDiskCache(0) + 20);
  v27 = sub_1000A9B84();
  static DispatchQoS.unspecified.getter(v17);
  v34 = _swiftEmptyArrayStorage;
  v18 = sub_100048748((unint64_t *)&qword_1011A6388, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100007E8C(&qword_1011A6390);
  v20 = sub_1003CFD40();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v19, v20, v11, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7);
  v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100E38170, v16, v13, v10, 0);
  *(_QWORD *)&a6[v28] = v21;
  static Logger.music(_:)(0x6944746567646957, 0xEF65686361436B73);
  v22 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v23 = v30;
  sub_1005100F0(v29, v30, a6);

  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v31);
  result = sub_100007E8C(&qword_1011B0988);
  v25 = &a6[*(int *)(result + 44)];
  v26 = v33;
  *(_QWORD *)v25 = v32;
  *((_QWORD *)v25 + 1) = v26;
  return result;
}

uint64_t sub_1003CF468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v39 = a6;
  v40 = a7;
  v41 = a4;
  v42 = a5;
  v35 = a2;
  v36 = a3;
  v37 = a1;
  v38 = a8;
  v34 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for WidgetDiskCache(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(int *)(v20 + 20);
  sub_1000A9B84();
  static DispatchQoS.unspecified.getter(v21);
  v43 = _swiftEmptyArrayStorage;
  v22 = sub_100048748((unint64_t *)&qword_1011A6388, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v23 = sub_100007E8C(&qword_1011A6390);
  v24 = sub_1003CFD40();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v23, v24, v11, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v34);
  v25 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100E38170, v16, v13, v10, 0);
  *(_QWORD *)&v19[v33] = v25;
  static Logger.music(_:)(0x6944746567646957, 0xEF65686361436B73);
  v26 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v27 = v36;
  sub_1005100F0(v35, v36, v19);

  swift_bridgeObjectRelease(v27);
  sub_10004FF60(v37, v39);
  v28 = v38;
  sub_10005B6C0((uint64_t)v19, v38, type metadata accessor for WidgetDiskCache);
  result = sub_100007E8C(v40);
  v30 = (_QWORD *)(v28 + *(int *)(result + 44));
  v31 = v42;
  *v30 = v41;
  v30[1] = v31;
  return result;
}

uint64_t sub_1003CF710@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v32 = a4;
  v33 = a5;
  v29 = a2;
  v30 = a3;
  v31 = a1;
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(int *)(type metadata accessor for WidgetDiskCache(0) + 20);
  v27 = sub_1000A9B84();
  static DispatchQoS.unspecified.getter(v17);
  v34 = _swiftEmptyArrayStorage;
  v18 = sub_100048748((unint64_t *)&qword_1011A6388, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100007E8C(&qword_1011A6390);
  v20 = sub_1003CFD40();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v19, v20, v11, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7);
  v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100E38170, v16, v13, v10, 0);
  *(_QWORD *)&a6[v28] = v21;
  static Logger.music(_:)(0x6944746567646957, 0xEF65686361436B73);
  v22 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v23 = v30;
  sub_1005100F0(v29, v30, a6);

  swift_bridgeObjectRelease(v23);
  sub_1003B25A8(v31);
  result = sub_100007E8C(&qword_1011B08F0);
  v25 = &a6[*(int *)(result + 44)];
  v26 = v33;
  *(_QWORD *)v25 = v32;
  *((_QWORD *)v25 + 1) = v26;
  return result;
}

uint64_t sub_1003CF974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7;
  uint64_t v14;
  _QWORD *v15;

  v14 = *a7;
  v15 = (_QWORD *)swift_task_alloc(dword_1011C816C);
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_10006AEE4;
  return sub_1007856FC(a1, a2, a3, a4, a5, a6, v14);
}

BOOL sub_1003CFA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B08D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v30 - v19;
  if ((static Date.== infix(_:_:)(a1, a2, v18) & 1) == 0)
    return 0;
  v31 = v7;
  v21 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  if ((static Date.== infix(_:_:)(a1 + *(int *)(v21 + 20), a2 + *(int *)(v21 + 20), v22) & 1) == 0)
    return 0;
  sub_10004A160(a1 + *(int *)(v21 + 24), (uint64_t)v20, (uint64_t *)&unk_1011A30A0);
  sub_10004A160(a2 + *(int *)(v21 + 24), (uint64_t)v16, (uint64_t *)&unk_1011A30A0);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10004A160((uint64_t)v20, (uint64_t)v10, (uint64_t *)&unk_1011A30A0);
  sub_10004A160((uint64_t)v16, v23, (uint64_t *)&unk_1011A30A0);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A30A0);
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A30A0);
    if (v24(v23, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A30A0);
      return 1;
    }
    goto LABEL_8;
  }
  sub_10004A160((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1011A30A0);
  if (v24(v23, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A30A0);
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A30A0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_8:
    sub_10004FF60((uint64_t)v10, &qword_1011B08D0);
    return 0;
  }
  v25 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v23, v4);
  v26 = sub_100048748((unint64_t *)&qword_1011B08D8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v27 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v25, v4, v26);
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v25, v4);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A30A0);
  sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A30A0);
  v28(v13, v4);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A30A0);
  return (v27 & 1) != 0;
}

unint64_t sub_1003CFD40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A6398;
  if (!qword_1011A6398)
  {
    v1 = sub_100044B54(&qword_1011A6390);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011A6398);
  }
  return result;
}

uint64_t sub_1003CFD90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + v6);
  v12 = *v11;
  v13 = v11[1];
  v14 = (uint64_t *)(v1 + v7);
  v15 = (_QWORD *)swift_task_alloc(dword_1011B090C);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1011B0908
                                                                                                  + dword_1011B0908))(a1, v8, v9, v10, v12, v13, v14);
}

uint64_t sub_1003CFE68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_1011C8174);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10006AEE4;
  return sub_100784858(a1, v9, v10, v11, v13, v14, v15);
}

uint64_t sub_1003CFF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, uint64_t);
  unint64_t v18;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011B08E8) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);

  v11 = v8 + *(int *)(v1 + 24);
  v12 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v13 = v0 + v6;
  v14 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v6, 1, v14))
  {
    v15 = type metadata accessor for Date(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
    v17(v0 + v6, v15);
    v17(v13 + *(int *)(v14 + 20), v15);
    v18 = v13 + *(int *)(v14 + 24);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15))
      v17(v18, v15);
  }
  return swift_deallocObject(v0, v6 + v7);
}

uint64_t sub_1003D00EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011B08E8) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_1011C817C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10006AEE4;
  return sub_10078640C(a1, v9, v10, v11, v13, v14, v15);
}

uint64_t sub_1003D01CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  __n128 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);

  v11 = v8 + *(int *)(v1 + 24);
  v12 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v13 = (char *)(v0 + v6);
  v14 = (int *)type metadata accessor for WidgetMusicItem(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v0 + v6, 1, v14))
  {
    swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)v13 + 3));
    v15 = swift_bridgeObjectRelease(*((_QWORD *)v13 + 5));
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(&v13[v14[7]], v9, v15);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[8] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[9] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[10] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[11] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[12] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[13] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[14]]);
    v16 = &v13[v14[16]];
    v17 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 10, v17))
    {
      v18 = type metadata accessor for Playlist.Variant(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    }

    swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[19]]);
  }
  return swift_deallocObject(v0, v6 + v7);
}

uint64_t sub_1003D0428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_10119FA90) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_1011C8174);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10005AEE4;
  return sub_100784858(a1, v9, v10, v11, v13, v14, v15);
}

void sub_1003D0508(uint64_t a1)
{
  uint64_t v1;

  sub_1003C3C80(a1, v1);
}

uint64_t sub_1003D0510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011B0960);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

void sub_1003D0588(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011B0960) - 8) + 80);
  sub_1003C3DD0(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1003D05CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1003D05DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1003D05E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C(&qword_1011B0960);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1003D0664(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100007E8C(&qword_1011B0960);
  return sub_1003C3FD8(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1003D06C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v3;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

  v9 = v6 + *(int *)(v1 + 24);
  v10 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v11 = *(void **)(v0 + v5);
  if (v11 != (void *)1)

  return swift_deallocObject(v0, v5 + 8);
}

ValueMetadata *type metadata accessor for NowPlayingDataProvider.PlayerState()
{
  return &type metadata for NowPlayingDataProvider.PlayerState;
}

uint64_t _s5Music22NowPlayingDataProviderC11PlayerStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003D0824 + 4 * byte_100EB8605[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003D0858 + 4 * byte_100EB8600[v4]))();
}

uint64_t sub_1003D0858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D0860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D0868);
  return result;
}

uint64_t sub_1003D0874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D087CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003D0880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D0888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingDataProvider.ItemProgress.CodingKeys()
{
  return &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys;
}

unint64_t sub_1003D08A8()
{
  unint64_t result;

  result = qword_1011B0990;
  if (!qword_1011B0990)
  {
    result = swift_getWitnessTable(&unk_100EB8794, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B0990);
  }
  return result;
}

unint64_t sub_1003D08F0()
{
  unint64_t result;

  result = qword_1011B0998;
  if (!qword_1011B0998)
  {
    result = swift_getWitnessTable(&unk_100EB8834, &type metadata for NowPlayingDataProvider.PlayerState);
    atomic_store(result, (unint64_t *)&qword_1011B0998);
  }
  return result;
}

unint64_t sub_1003D0938()
{
  unint64_t result;

  result = qword_1011B09A0;
  if (!qword_1011B09A0)
  {
    result = swift_getWitnessTable(&unk_100EB8704, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B09A0);
  }
  return result;
}

unint64_t sub_1003D0980()
{
  unint64_t result;

  result = qword_1011B09A8;
  if (!qword_1011B09A8)
  {
    result = swift_getWitnessTable(&unk_100EB872C, &type metadata for NowPlayingDataProvider.ItemProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011B09A8);
  }
  return result;
}

unint64_t sub_1003D09C4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010ABEF8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1003D0A0C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461447472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65746144646E65, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x7461446573756170 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7461446573756170, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t *sub_1003D0B80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  id v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v129;
  int *v130;
  unsigned int (*v131)(uint64_t *, uint64_t, uint64_t);
  uint64_t v132;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v131 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v132 = v7;
    v129 = v8;
    v130 = a3;
    if (v131(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for Playable(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v11[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for ArtworkImage.ViewModel(0);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      v27 = v130;
    }
    else
    {
      v28 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
      v29 = *(int *)(v23 + 20);
      v30 = &v21[v29];
      v31 = &v22[v29];
      v32 = type metadata accessor for Artwork.CropStyle(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v27 = v130;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v35 = v11[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 10, v38))
    {
      v40 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = type metadata accessor for Playlist.Variant(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v37, 1, v41))
      {
        v43 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v36, v37, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v41);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 10, v38);
    }
    v44 = v11[9];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v45[8] = v46[8];
    v47 = v11[10];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *(void **)((char *)a2 + v47);
    *(uint64_t *)((char *)a1 + v47) = (uint64_t)v50;
    v51 = (int *)type metadata accessor for SegueContext(0);
    v52 = v51[5];
    v53 = &v48[v52];
    v54 = &v49[v52];
    v55 = v50;
    if (v131((uint64_t *)v54, 1, v132))
    {
      v56 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v53, v54, v132);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v53, 0, 1, v132);
    }
    v48[v51[6]] = v49[v51[6]];
    v57 = v51[7];
    v58 = &v48[v57];
    v59 = &v49[v57];
    if (*(_QWORD *)v59)
    {
      v60 = *((_QWORD *)v59 + 1);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
    }
    v61 = v11[11];
    v62 = *(void **)((char *)a2 + v61);
    *(uint64_t *)((char *)a1 + v61) = (uint64_t)v62;
    v63 = v11[12];
    v64 = (uint64_t *)((char *)a1 + v63);
    v65 = (char *)a2 + v63;
    v66 = *(uint64_t *)((char *)a2 + v63);
    v67 = v62;
    if (v66)
    {
      v68 = *((_QWORD *)v65 + 1);
      *v64 = v66;
      v64[1] = v68;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v64 = *(_OWORD *)v65;
    }
    v69 = v27[5];
    v70 = v27[6];
    v71 = (uint64_t *)((char *)a1 + v69);
    v72 = (uint64_t *)((char *)a2 + v69);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    v74 = (uint64_t *)((char *)a1 + v70);
    v75 = (uint64_t *)((char *)a2 + v70);
    swift_retain();
    v76 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v75, v76) == 1)
    {
      v77 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v74, v75, v77);
      v78 = 1;
    }
    else
    {
      *v74 = *v75;
      swift_retain();
      v78 = 0;
    }
    swift_storeEnumTagMultiPayload(v74, v76, v78);
    v79 = v27[7];
    v80 = (char *)a1 + v79;
    v81 = (char *)a2 + v79;
    v82 = *(id *)v81;
    v83 = v81[8];
    sub_1000A4100(*(id *)v81, v83);
    *(_QWORD *)v80 = v82;
    v80[8] = v83;
    v84 = v27[8];
    v85 = v27[9];
    v86 = (uint64_t *)((char *)a1 + v84);
    v87 = (uint64_t *)((char *)a2 + v84);
    v88 = *v87;
    v89 = v87[1];
    *v86 = v88;
    v86[1] = v89;
    v90 = (uint64_t *)((char *)a1 + v85);
    v91 = (uint64_t *)((char *)a2 + v85);
    v93 = *v91;
    v92 = v91[1];
    *v90 = v93;
    v90[1] = v92;
    v94 = v27[10];
    v95 = (char *)a1 + v94;
    v96 = (char *)a2 + v94;
    v97 = *(_QWORD *)v96;
    v98 = *((_QWORD *)v96 + 1);
    v99 = v96[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v97, v98);
    *(_QWORD *)v95 = v97;
    *((_QWORD *)v95 + 1) = v98;
    v95[16] = v99;
    v100 = v27[11];
    v101 = v27[12];
    v102 = (uint64_t *)((char *)a1 + v100);
    v103 = (uint64_t *)((char *)a2 + v100);
    v104 = *v103;
    v105 = v103[1];
    *v102 = v104;
    v102[1] = v105;
    v106 = (uint64_t *)((char *)a1 + v101);
    v107 = (uint64_t *)((char *)a2 + v101);
    v109 = *v107;
    v108 = v107[1];
    *v106 = v109;
    v106[1] = v108;
    v110 = v27[13];
    v111 = v27[14];
    v112 = (uint64_t *)((char *)a1 + v110);
    v113 = (uint64_t *)((char *)a2 + v110);
    v115 = *v113;
    v114 = v113[1];
    *v112 = v115;
    v112[1] = v114;
    v116 = (char *)a1 + v111;
    v117 = *(uint64_t *)((char *)a2 + v111);
    v118 = *(uint64_t *)((char *)a2 + v111 + 8);
    LOBYTE(v95) = *((_BYTE *)a2 + v111 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v117, v118, (char)v95);
    *(_QWORD *)v116 = v117;
    *((_QWORD *)v116 + 1) = v118;
    v116[16] = (char)v95;
    v119 = v27[15];
    v120 = (char *)a1 + v119;
    v121 = (char *)a2 + v119;
    v122 = *(_QWORD *)v121;
    v123 = *((_QWORD *)v121 + 1);
    LOBYTE(v117) = v121[16];
    sub_1000A411C(*(_QWORD *)v121, v123, v117);
    *(_QWORD *)v120 = v122;
    *((_QWORD *)v120 + 1) = v123;
    v120[16] = v117;
    v124 = v27[16];
    v125 = (char *)a1 + v124;
    v126 = (char *)a2 + v124;
    v127 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
  }
  return a1;
}

uint64_t type metadata accessor for Playable(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B0AC8, (uint64_t)&nominal type descriptor for Playable);
}

uint64_t sub_1003D11EC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for Playable(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[6] + 8));
  v8 = a1 + v7[7];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[8];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = (id *)(a1 + v7[10]);

  v19 = type metadata accessor for SegueContext(0);
  v20 = (char *)v18 + *(int *)(v19 + 20);
  if (!v6((uint64_t)v20, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  if (*(id *)((char *)v18 + *(int *)(v19 + 28)))
    swift_release();

  if (*(_QWORD *)(a1 + v7[12]))
    swift_release();
  swift_release();
  v21 = a1 + a2[6];
  v22 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    swift_release();
  }
  sub_1000A4224(*(id *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[10]), *(_QWORD *)(a1 + a2[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[14]), *(_QWORD *)(a1 + a2[14] + 8), *(_BYTE *)(a1 + a2[14] + 16));
  sub_1000A4240(*(_QWORD *)(a1 + a2[15]), *(_QWORD *)(a1 + a2[15] + 8), *(_BYTE *)(a1 + a2[15] + 16));
  v24 = a1 + a2[16];
  v25 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
}

char *sub_1003D1518(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  id v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v125;
  unsigned int (*v126)(char *, uint64_t, uint64_t);
  uint64_t v127;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v127 = v5;
  v125 = v6;
  if (v126(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Playable(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for ArtworkImage.ViewModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v18, v19, v24);
    v25 = *(int *)(v20 + 20);
    v26 = &v18[v25];
    v27 = &v19[v25];
    v28 = type metadata accessor for Artwork.CropStyle(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v31 = v8[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 10, v34))
  {
    v36 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = type metadata accessor for Playlist.Variant(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, v37))
    {
      v39 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v33, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v32, 0, 1, v37);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
  }
  v40 = v8[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = v8[10];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = *(void **)&a2[v43];
  *(_QWORD *)&a1[v43] = v46;
  v47 = (int *)type metadata accessor for SegueContext(0);
  v48 = v47[5];
  v49 = &v44[v48];
  v50 = &v45[v48];
  v51 = v46;
  if (v126(v50, 1, v127))
  {
    v52 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v49, v50, v127);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v49, 0, 1, v127);
  }
  v44[v47[6]] = v45[v47[6]];
  v53 = v47[7];
  v54 = &v44[v53];
  v55 = &v45[v53];
  if (*(_QWORD *)v55)
  {
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
  }
  v57 = v8[11];
  v58 = *(void **)&a2[v57];
  *(_QWORD *)&a1[v57] = v58;
  v59 = v8[12];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)&a2[v59];
  v63 = v58;
  if (v62)
  {
    v64 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = v62;
    *((_QWORD *)v60 + 1) = v64;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
  }
  v65 = a3[5];
  v66 = a3[6];
  v67 = &a1[v65];
  v68 = &a2[v65];
  v69 = *((_QWORD *)v68 + 1);
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *((_QWORD *)v67 + 1) = v69;
  v70 = &a1[v66];
  v71 = &a2[v66];
  swift_retain();
  v72 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v71, v72) == 1)
  {
    v73 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v70, v71, v73);
    v74 = 1;
  }
  else
  {
    *(_QWORD *)v70 = *(_QWORD *)v71;
    swift_retain();
    v74 = 0;
  }
  swift_storeEnumTagMultiPayload(v70, v72, v74);
  v75 = a3[7];
  v76 = &a1[v75];
  v77 = &a2[v75];
  v78 = *(id *)v77;
  v79 = v77[8];
  sub_1000A4100(*(id *)v77, v79);
  *(_QWORD *)v76 = v78;
  v76[8] = v79;
  v80 = a3[8];
  v81 = a3[9];
  v82 = &a1[v80];
  v83 = &a2[v80];
  v84 = *(_QWORD *)v83;
  v85 = *((_QWORD *)v83 + 1);
  *(_QWORD *)v82 = v84;
  *((_QWORD *)v82 + 1) = v85;
  v86 = &a1[v81];
  v87 = &a2[v81];
  v89 = *(_QWORD *)v87;
  v88 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = v89;
  *((_QWORD *)v86 + 1) = v88;
  v90 = a3[10];
  v91 = &a1[v90];
  v92 = &a2[v90];
  v93 = *(_QWORD *)v92;
  v94 = *((_QWORD *)v92 + 1);
  v95 = v92[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v93, v94);
  *(_QWORD *)v91 = v93;
  *((_QWORD *)v91 + 1) = v94;
  v91[16] = v95;
  v96 = a3[11];
  v97 = a3[12];
  v98 = &a1[v96];
  v99 = &a2[v96];
  v100 = *(_QWORD *)v99;
  v101 = *((_QWORD *)v99 + 1);
  *(_QWORD *)v98 = v100;
  *((_QWORD *)v98 + 1) = v101;
  v102 = &a1[v97];
  v103 = &a2[v97];
  v105 = *(_QWORD *)v103;
  v104 = *((_QWORD *)v103 + 1);
  *(_QWORD *)v102 = v105;
  *((_QWORD *)v102 + 1) = v104;
  v106 = a3[13];
  v107 = a3[14];
  v108 = &a1[v106];
  v109 = &a2[v106];
  v111 = *(_QWORD *)v109;
  v110 = *((_QWORD *)v109 + 1);
  *(_QWORD *)v108 = v111;
  *((_QWORD *)v108 + 1) = v110;
  v112 = &a1[v107];
  v113 = *(_QWORD *)&a2[v107];
  v114 = *(_QWORD *)&a2[v107 + 8];
  LOBYTE(v91) = a2[v107 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v113, v114, (char)v91);
  *(_QWORD *)v112 = v113;
  *((_QWORD *)v112 + 1) = v114;
  v112[16] = (char)v91;
  v115 = a3[15];
  v116 = &a1[v115];
  v117 = &a2[v115];
  v118 = *(_QWORD *)v117;
  v119 = *((_QWORD *)v117 + 1);
  LOBYTE(v113) = v117[16];
  sub_1000A411C(*(_QWORD *)v117, v119, v113);
  *(_QWORD *)v116 = v118;
  *((_QWORD *)v116 + 1) = v119;
  v116[16] = v113;
  v120 = a3[16];
  v121 = &a1[v120];
  v122 = &a2[v120];
  v123 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
  return a1;
}

char *sub_1003D1B3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void **v70;
  char *v71;
  void *v72;
  void *v73;
  id v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  id v112;
  char v113;
  void *v114;
  char v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v159;
  int *v160;
  uint64_t (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v162 = v6;
  v10 = v8(a2, 1, v6);
  v159 = v7;
  v161 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Playable(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  v17 = v12[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v20);
  v21 = v12[7];
  v22 = (uint64_t)&a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  v160 = a3;
  if (!v27)
  {
    if (!v28)
    {
      v39 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v22, v23, v39);
      v40 = *(int *)(v24 + 20);
      v41 = (void *)(v22 + v40);
      v42 = &v23[v40];
      v43 = type metadata accessor for Artwork.CropStyle(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v41, 1, v43);
      v47 = v45(v42, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
      }
      v36 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v37 = v41;
      v38 = v42;
LABEL_14:
      memcpy(v37, v38, v36);
      goto LABEL_21;
    }
    sub_10005B748(v22, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v36 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v37 = (void *)v22;
    v38 = v23;
    goto LABEL_14;
  }
  if (v28)
    goto LABEL_13;
  v29 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
  v30 = *(int *)(v24 + 20);
  v31 = (void *)(v22 + v30);
  v32 = &v23[v30];
  v33 = type metadata accessor for Artwork.CropStyle(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_21:
  v48 = v12[8];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v49, 10, v51);
  v55 = v53(v50, 10, v51);
  if (!v54)
  {
    if (!v55)
    {
      v60 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v49, 1, v60);
      v64 = v62(v50, 1, v60);
      if (v63)
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v49, v50, v60);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v49, 0, 1, v60);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v49, v50, v60);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v60);
      }
      v59 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v49, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v59 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v55)
    goto LABEL_27;
  v56 = type metadata accessor for Playlist.Variant(0);
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v50, 1, v56))
  {
    v58 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v49, v50, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v49, 0, 1, v56);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 10, v51);
LABEL_34:
  v65 = v12[9];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = *(_QWORD *)v67;
  v66[8] = v67[8];
  *(_QWORD *)v66 = v68;
  v69 = v12[10];
  v70 = (void **)&a1[v69];
  v71 = &a2[v69];
  v72 = *(void **)&a2[v69];
  v73 = *v70;
  *v70 = v72;
  v74 = v72;

  v75 = (int *)type metadata accessor for SegueContext(0);
  v76 = v75[5];
  v77 = (char *)v70 + v76;
  v78 = &v71[v76];
  v79 = v161((char *)v70 + v76, 1, v162);
  v80 = v161(v78, 1, v162);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v77, v78, v162);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v77, 0, 1, v162);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v159 + 8))(v77, v162);
LABEL_39:
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v159 + 24))(v77, v78, v162);
LABEL_40:
  *((_BYTE *)v70 + v75[6]) = v71[v75[6]];
  v82 = v75[7];
  v83 = (void **)((char *)v70 + v82);
  v84 = &v71[v82];
  v85 = *(uint64_t *)((char *)v70 + v82);
  v86 = *(_QWORD *)v84;
  if (v85)
  {
    if (v86)
    {
      v87 = *((_QWORD *)v84 + 1);
      *v83 = v86;
      v83[1] = v87;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v86)
  {
    v88 = *((_QWORD *)v84 + 1);
    *v83 = v86;
    v83[1] = v88;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v83 = *(_OWORD *)v84;
LABEL_47:
  v89 = v12[11];
  v90 = *(void **)&a1[v89];
  v91 = *(void **)&a2[v89];
  *(_QWORD *)&a1[v89] = v91;
  v92 = v91;

  v93 = v12[12];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = *(_QWORD *)&a1[v93];
  v97 = *(_QWORD *)&a2[v93];
  if (v96)
  {
    if (v97)
    {
      v98 = *((_QWORD *)v95 + 1);
      *(_QWORD *)v94 = v97;
      *((_QWORD *)v94 + 1) = v98;
      swift_retain();
      swift_release();
      goto LABEL_54;
    }
    swift_release();
  }
  else if (v97)
  {
    v99 = *((_QWORD *)v95 + 1);
    *(_QWORD *)v94 = v97;
    *((_QWORD *)v94 + 1) = v99;
    swift_retain();
    goto LABEL_54;
  }
  *(_OWORD *)v94 = *(_OWORD *)v95;
LABEL_54:
  v100 = v160[5];
  v101 = &a1[v100];
  v102 = &a2[v100];
  *(_QWORD *)v101 = *(_QWORD *)v102;
  *((_QWORD *)v101 + 1) = *((_QWORD *)v102 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v103 = v160[6];
    v104 = &a1[v103];
    v105 = &a2[v103];
    sub_10004FF60((uint64_t)&a1[v103], (uint64_t *)&unk_1011C72D0);
    v106 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v105, v106) == 1)
    {
      v107 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v104, v105, v107);
      v108 = 1;
    }
    else
    {
      *(_QWORD *)v104 = *(_QWORD *)v105;
      swift_retain();
      v108 = 0;
    }
    swift_storeEnumTagMultiPayload(v104, v106, v108);
  }
  v109 = v160[7];
  v110 = &a1[v109];
  v111 = &a2[v109];
  v112 = *(id *)v111;
  v113 = v111[8];
  sub_1000A4100(*(id *)v111, v113);
  v114 = *(void **)v110;
  v115 = v110[8];
  *(_QWORD *)v110 = v112;
  v110[8] = v113;
  sub_1000A4224(v114, v115);
  v116 = v160[8];
  v117 = &a1[v116];
  v118 = &a2[v116];
  *(_QWORD *)&a1[v116] = *(_QWORD *)&a2[v116];
  swift_retain();
  swift_release();
  *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
  v119 = v160[9];
  v120 = &a1[v119];
  v121 = &a2[v119];
  *(_QWORD *)&a1[v119] = *(_QWORD *)&a2[v119];
  swift_retain();
  swift_release();
  *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
  v122 = v160[10];
  v123 = &a1[v122];
  v124 = &a2[v122];
  v125 = *(_QWORD *)v124;
  v126 = *((_QWORD *)v124 + 1);
  LOBYTE(v121) = v124[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v124, v126);
  v127 = *(_QWORD *)v123;
  v128 = *((_QWORD *)v123 + 1);
  *(_QWORD *)v123 = v125;
  *((_QWORD *)v123 + 1) = v126;
  v123[16] = (char)v121;
  sub_1000A6174(v127, v128);
  v129 = v160[11];
  v130 = &a1[v129];
  v131 = &a2[v129];
  *(_QWORD *)&a1[v129] = *(_QWORD *)&a2[v129];
  swift_retain();
  swift_release();
  *((_QWORD *)v130 + 1) = *((_QWORD *)v131 + 1);
  v132 = v160[12];
  v133 = &a1[v132];
  v134 = &a2[v132];
  *(_QWORD *)&a1[v132] = *(_QWORD *)&a2[v132];
  swift_retain();
  swift_release();
  *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
  v135 = v160[13];
  v136 = &a1[v135];
  v137 = &a2[v135];
  *(_QWORD *)&a1[v135] = *(_QWORD *)&a2[v135];
  swift_retain();
  swift_release();
  *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
  v138 = v160[14];
  v139 = &a1[v138];
  v140 = &a2[v138];
  v141 = *(_QWORD *)v140;
  v142 = *((_QWORD *)v140 + 1);
  LOBYTE(v137) = v140[16];
  sub_1000A410C(*(_QWORD *)v140, v142, (char)v137);
  v143 = *(_QWORD *)v139;
  v144 = *((_QWORD *)v139 + 1);
  v145 = v139[16];
  *(_QWORD *)v139 = v141;
  *((_QWORD *)v139 + 1) = v142;
  v139[16] = (char)v137;
  sub_1000A4230(v143, v144, v145);
  v146 = v160[15];
  v147 = &a1[v146];
  v148 = &a2[v146];
  v149 = *(_QWORD *)v148;
  v150 = *((_QWORD *)v148 + 1);
  LOBYTE(v137) = v148[16];
  sub_1000A411C(*(_QWORD *)v148, v150, (char)v137);
  v151 = *(_QWORD *)v147;
  v152 = *((_QWORD *)v147 + 1);
  v153 = v147[16];
  *(_QWORD *)v147 = v149;
  *((_QWORD *)v147 + 1) = v150;
  v147[16] = (char)v137;
  sub_1000A4240(v151, v152, v153);
  v154 = v160[16];
  v155 = &a1[v154];
  v156 = &a2[v154];
  v157 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 24))(v155, v156, v157);
  return a1;
}

char *sub_1003D2530(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *__dst;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v77 = v7;
  if (v80(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for Playable(0);
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  v10 = v9[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v78 = v6;
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    __dst = &v11[v17];
    v18 = &v12[v17];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    v6 = v78;
  }
  v22 = v9[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 10, v25))
  {
    v27 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v79 = v6;
    v28 = type metadata accessor for Playlist.Variant(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v23, v24, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
    }
    v6 = v79;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 10, v25);
  }
  v31 = v9[9];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  v34 = v9[10];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_QWORD *)&a1[v34] = *(_QWORD *)&a2[v34];
  v37 = (int *)type metadata accessor for SegueContext(0);
  v38 = v37[5];
  v39 = &v35[v38];
  v40 = &v36[v38];
  if (v80(&v36[v38], 1, v6))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v39, v40, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v39, 0, 1, v6);
  }
  v35[v37[6]] = v36[v37[6]];
  v42 = v37[7];
  v43 = &v35[v42];
  v44 = &v36[v42];
  v45 = *(_QWORD *)v44;
  if (*(_QWORD *)v44)
  {
    v46 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = v45;
    *((_QWORD *)v43 + 1) = v46;
  }
  else
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
  }
  *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
  v47 = v9[12];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  if (*(_QWORD *)v49)
  {
    v51 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = v50;
    *((_QWORD *)v48 + 1) = v51;
  }
  else
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  v52 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v54, v55) == 1)
  {
    v56 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v53, v54, v56);
    swift_storeEnumTagMultiPayload(v53, v55, 1);
  }
  else
  {
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  v57 = a3[7];
  v58 = a3[8];
  v59 = &a1[v57];
  v60 = &a2[v57];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v59[8] = v60[8];
  *(_OWORD *)&a1[v58] = *(_OWORD *)&a2[v58];
  v61 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v62 = &a1[v61];
  v63 = &a2[v61];
  *(_OWORD *)v62 = *(_OWORD *)v63;
  v62[16] = v63[16];
  v64 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v64] = *(_OWORD *)&a2[v64];
  v65 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v66[16] = v67[16];
  *(_OWORD *)v66 = *(_OWORD *)v67;
  v68 = a3[15];
  v69 = a3[16];
  v70 = &a1[v68];
  v71 = &a2[v68];
  v70[16] = v71[16];
  v72 = &a1[v69];
  v73 = &a2[v69];
  *(_OWORD *)v70 = *(_OWORD *)v71;
  v74 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
  return a1;
}

char *sub_1003D2AA0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  size_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void *v75;
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void *v113;
  char v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v155;
  int *v156;
  uint64_t (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v158 = v6;
  v10 = v8(a2, 1, v6);
  v155 = v7;
  v157 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Playable(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease(v18);
  v19 = v12[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  v25 = v12[7];
  v26 = (uint64_t)&a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30((uint64_t)v27, 1, v28);
  v156 = a3;
  if (!v31)
  {
    if (!v32)
    {
      v43 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v26, v27, v43);
      v44 = *(int *)(v28 + 20);
      v45 = (void *)(v26 + v44);
      v46 = &v27[v44];
      v47 = type metadata accessor for Artwork.CropStyle(0);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
      v50 = v49(v45, 1, v47);
      v51 = v49(v46, 1, v47);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 40))(v45, v46, v47);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
      }
      v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v41 = v45;
      v42 = v46;
LABEL_14:
      memcpy(v41, v42, v40);
      goto LABEL_21;
    }
    sub_10005B748(v26, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v41 = (void *)v26;
    v42 = v27;
    goto LABEL_14;
  }
  if (v32)
    goto LABEL_13;
  v33 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v26, v27, v33);
  v34 = *(int *)(v28 + 20);
  v35 = (void *)(v26 + v34);
  v36 = &v27[v34];
  v37 = type metadata accessor for Artwork.CropStyle(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_21:
  v52 = v12[8];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 10, v55);
  v59 = v57(v54, 10, v55);
  if (!v58)
  {
    if (!v59)
    {
      v64 = type metadata accessor for Playlist.Variant(0);
      v65 = *(_QWORD *)(v64 - 8);
      v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
      v67 = v66(v53, 1, v64);
      v68 = v66(v54, 1, v64);
      if (v67)
      {
        if (!v68)
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v53, v54, v64);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v53, 0, 1, v64);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v68)
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v53, v54, v64);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v65 + 8))(v53, v64);
      }
      v63 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v53, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v63 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v59)
    goto LABEL_27;
  v60 = type metadata accessor for Playlist.Variant(0);
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v54, 1, v60))
  {
    v62 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v53, v54, v60);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v53, 0, 1, v60);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 10, v55);
LABEL_34:
  v69 = v12[9];
  v70 = &a1[v69];
  v71 = &a2[v69];
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v70[8] = v71[8];
  v72 = v12[10];
  v73 = &a1[v72];
  v74 = &a2[v72];
  v75 = *(void **)&a1[v72];
  *(_QWORD *)&a1[v72] = *(_QWORD *)&a2[v72];

  v76 = (int *)type metadata accessor for SegueContext(0);
  v77 = v76[5];
  v78 = &v73[v77];
  v79 = &v74[v77];
  v80 = v157(&v73[v77], 1, v158);
  v81 = v157(v79, 1, v158);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v78, v79, v158);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v78, 0, 1, v158);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v155 + 8))(v78, v158);
LABEL_39:
    v82 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v155 + 40))(v78, v79, v158);
LABEL_40:
  v73[v76[6]] = v74[v76[6]];
  v83 = v76[7];
  v84 = &v73[v83];
  v85 = &v74[v83];
  v86 = *(_QWORD *)&v73[v83];
  v87 = *(_QWORD *)v85;
  if (v86)
  {
    if (v87)
    {
      v88 = *((_QWORD *)v85 + 1);
      *(_QWORD *)v84 = v87;
      *((_QWORD *)v84 + 1) = v88;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v87)
  {
    v89 = *((_QWORD *)v85 + 1);
    *(_QWORD *)v84 = v87;
    *((_QWORD *)v84 + 1) = v89;
    goto LABEL_47;
  }
  *(_OWORD *)v84 = *(_OWORD *)v85;
LABEL_47:
  v90 = v12[11];
  v91 = *(void **)&a1[v90];
  *(_QWORD *)&a1[v90] = *(_QWORD *)&a2[v90];

  v92 = v12[12];
  v93 = &a1[v92];
  v94 = &a2[v92];
  v95 = *(_QWORD *)&a1[v92];
  v96 = *(_QWORD *)&a2[v92];
  if (v95)
  {
    if (v96)
    {
      v97 = *((_QWORD *)v94 + 1);
      *(_QWORD *)v93 = v96;
      *((_QWORD *)v93 + 1) = v97;
      swift_release();
      goto LABEL_54;
    }
    swift_release();
  }
  else if (v96)
  {
    v98 = *((_QWORD *)v94 + 1);
    *(_QWORD *)v93 = v96;
    *((_QWORD *)v93 + 1) = v98;
    goto LABEL_54;
  }
  *(_OWORD *)v93 = *(_OWORD *)v94;
LABEL_54:
  v99 = v156[5];
  v100 = &a1[v99];
  v101 = &a2[v99];
  v103 = *(_QWORD *)v101;
  v102 = *((_QWORD *)v101 + 1);
  *(_QWORD *)v100 = v103;
  *((_QWORD *)v100 + 1) = v102;
  swift_release();
  if (a1 != a2)
  {
    v104 = v156[6];
    v105 = &a1[v104];
    v106 = &a2[v104];
    sub_10004FF60((uint64_t)&a1[v104], (uint64_t *)&unk_1011C72D0);
    v107 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
    if (swift_getEnumCaseMultiPayload(v106, v107) == 1)
    {
      v108 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v105, v106, v108);
      swift_storeEnumTagMultiPayload(v105, v107, 1);
    }
    else
    {
      memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    }
  }
  v109 = v156[7];
  v110 = &a1[v109];
  v111 = &a2[v109];
  v112 = *(_QWORD *)v111;
  LOBYTE(v111) = v111[8];
  v113 = *(void **)v110;
  v114 = v110[8];
  *(_QWORD *)v110 = v112;
  v110[8] = (char)v111;
  sub_1000A4224(v113, v114);
  v115 = v156[8];
  v116 = &a1[v115];
  v117 = &a2[v115];
  *(_QWORD *)&a1[v115] = *(_QWORD *)&a2[v115];
  swift_release();
  *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
  v118 = v156[9];
  v119 = &a1[v118];
  v120 = &a2[v118];
  *(_QWORD *)&a1[v118] = *(_QWORD *)&a2[v118];
  swift_release();
  *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
  v121 = v156[10];
  v122 = &a1[v121];
  v123 = &a2[v121];
  v124 = v123[16];
  v125 = *(_QWORD *)v122;
  v126 = *((_QWORD *)v122 + 1);
  *(_OWORD *)v122 = *(_OWORD *)v123;
  v122[16] = v124;
  sub_1000A6174(v125, v126);
  v127 = v156[11];
  v128 = &a1[v127];
  v129 = &a2[v127];
  *(_QWORD *)&a1[v127] = *(_QWORD *)&a2[v127];
  swift_release();
  *((_QWORD *)v128 + 1) = *((_QWORD *)v129 + 1);
  v130 = v156[12];
  v131 = &a1[v130];
  v132 = &a2[v130];
  *(_QWORD *)&a1[v130] = *(_QWORD *)&a2[v130];
  swift_release();
  *((_QWORD *)v131 + 1) = *((_QWORD *)v132 + 1);
  v133 = v156[13];
  v134 = &a1[v133];
  v135 = &a2[v133];
  *(_QWORD *)&a1[v133] = *(_QWORD *)&a2[v133];
  swift_release();
  *((_QWORD *)v134 + 1) = *((_QWORD *)v135 + 1);
  v136 = v156[14];
  v137 = &a1[v136];
  v138 = &a2[v136];
  v139 = v138[16];
  v140 = *(_QWORD *)v137;
  v141 = *((_QWORD *)v137 + 1);
  v142 = v137[16];
  *(_OWORD *)v137 = *(_OWORD *)v138;
  v137[16] = v139;
  sub_1000A4230(v140, v141, v142);
  v143 = v156[15];
  v144 = &a1[v143];
  v145 = &a2[v143];
  v146 = v145[16];
  v147 = *(_QWORD *)v144;
  v148 = *((_QWORD *)v144 + 1);
  v149 = v144[16];
  *(_OWORD *)v144 = *(_OWORD *)v145;
  v144[16] = v146;
  sub_1000A4240(v147, v148, v149);
  v150 = v156[16];
  v151 = &a1[v150];
  v152 = &a2[v150];
  v153 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 40))(v151, v152, v153);
  return a1;
}

uint64_t sub_1003D33E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D33F0);
}

uint64_t sub_1003D33F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Playable(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v8 = sub_100007E8C(qword_1011C9550);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[16];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1003D34C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D34D4);
}

uint64_t sub_1003D34D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for Playable(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011C72A0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = sub_100007E8C(qword_1011C9550);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[16];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for PlayableView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011B0A08, (uint64_t)&nominal type descriptor for PlayableView);
}

void sub_1003D35BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[13];

  v2 = type metadata accessor for Playable(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100EB88F0;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F6B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = &unk_100EB8908;
      v8[4] = &unk_100EB8920;
      v8[5] = &unk_100EB8920;
      v8[6] = &unk_100EB8938;
      v8[7] = &unk_100EB8920;
      v8[8] = &unk_100EB8920;
      v8[9] = &unk_100EB8920;
      v8[10] = &unk_100EB8938;
      v8[11] = &unk_100EB8938;
      sub_1000F6458(319);
      if (v7 <= 0x3F)
      {
        v8[12] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 13, v8, a1 + 16);
      }
    }
  }
}

uint64_t *sub_1003D36A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v68;
  unsigned int (*v69)(uint64_t *, uint64_t, uint64_t);
  uint64_t v70;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v69 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v70 = v7;
    v68 = v8;
    if (v69(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for ArtworkImage.ViewModel(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v20, v21, v26);
      v27 = *(int *)(v22 + 20);
      v28 = &v20[v27];
      v29 = &v21[v27];
      v30 = type metadata accessor for Artwork.CropStyle(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v33 = a3[8];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
    {
      v38 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v35, 1, v39))
      {
        v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v34, v35, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v39);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 10, v36);
    }
    v42 = a3[9];
    v43 = a3[10];
    v44 = (char *)a1 + v42;
    v45 = (char *)a2 + v42;
    *(_QWORD *)v44 = *(_QWORD *)v45;
    v44[8] = v45[8];
    v46 = (char *)a1 + v43;
    v47 = (char *)a2 + v43;
    v48 = *(void **)((char *)a2 + v43);
    *(uint64_t *)((char *)a1 + v43) = (uint64_t)v48;
    v49 = (int *)type metadata accessor for SegueContext(0);
    v50 = v49[5];
    v51 = &v46[v50];
    v52 = &v47[v50];
    v53 = v48;
    if (v69((uint64_t *)v52, 1, v70))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v51, v52, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v51, 0, 1, v70);
    }
    v46[v49[6]] = v47[v49[6]];
    v55 = v49[7];
    v56 = &v46[v55];
    v57 = &v47[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    v59 = a3[11];
    v60 = a3[12];
    v61 = *(void **)((char *)a2 + v59);
    *(uint64_t *)((char *)a1 + v59) = (uint64_t)v61;
    v62 = (uint64_t *)((char *)a1 + v60);
    v63 = (uint64_t *)((char *)a2 + v60);
    v64 = *v63;
    v65 = v61;
    if (v64)
    {
      v66 = v63[1];
      *v62 = v64;
      v62[1] = v66;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
    }
  }
  return a1;
}

double sub_1003D3AF8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  char *v19;
  double result;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  v7 = a1 + a2[7];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = a1 + a2[8];
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 10, v14))
  {
    v15 = type metadata accessor for Playlist.Variant(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }
  v17 = (id *)(a1 + a2[10]);

  v18 = type metadata accessor for SegueContext(0);
  v19 = (char *)v17 + *(int *)(v18 + 20);
  if (!v6((uint64_t)v19, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
  if (*(id *)((char *)v17 + *(int *)(v18 + 28)))
    swift_release();

  if (*(_QWORD *)(a1 + a2[12]))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1003D3D14(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  void *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v68 = v6;
  v66 = v7;
  if (v67(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = type metadata accessor for ArtworkImage.ViewModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v18, v19, v24);
    v25 = *(int *)(v20 + 20);
    v26 = &v18[v25];
    v27 = &v19[v25];
    v28 = type metadata accessor for Artwork.CropStyle(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 10, v34))
  {
    v36 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = type metadata accessor for Playlist.Variant(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, v37))
    {
      v39 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v33, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v32, 0, 1, v37);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
  }
  v40 = a3[9];
  v41 = a3[10];
  v42 = &a1[v40];
  v43 = &a2[v40];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = v43[8];
  v44 = &a1[v41];
  v45 = &a2[v41];
  v46 = *(void **)&a2[v41];
  *(_QWORD *)&a1[v41] = v46;
  v47 = (int *)type metadata accessor for SegueContext(0);
  v48 = v47[5];
  v49 = &v44[v48];
  v50 = &v45[v48];
  v51 = v46;
  if (v67(v50, 1, v68))
  {
    v52 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v49, v50, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v49, 0, 1, v68);
  }
  v44[v47[6]] = v45[v47[6]];
  v53 = v47[7];
  v54 = &v44[v53];
  v55 = &v45[v53];
  if (*(_QWORD *)v55)
  {
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v54 = *(_OWORD *)v55;
  }
  v57 = a3[11];
  v58 = a3[12];
  v59 = *(void **)&a2[v57];
  *(_QWORD *)&a1[v57] = v59;
  v60 = &a1[v58];
  v61 = &a2[v58];
  v62 = *(_QWORD *)v61;
  v63 = v59;
  if (v62)
  {
    v64 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = v62;
    *((_QWORD *)v60 + 1) = v64;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
  }
  return a1;
}

char *sub_1003D413C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  size_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void **v68;
  char *v69;
  char *v70;
  void *v71;
  void *v72;
  id v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t (*v100)(char *, uint64_t, uint64_t);
  void *__dst;
  char *__dsta;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v99 = v7;
  v100 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v15);
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = a3[7];
  v21 = (uint64_t)&a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25((uint64_t)v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      v37 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v21, v22, v37);
      v38 = *(int *)(v23 + 20);
      v39 = (void *)(v21 + v38);
      v40 = &v22[v38];
      v41 = type metadata accessor for Artwork.CropStyle(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
      v44 = v43(v39, 1, v41);
      v45 = v43(v40, 1, v41);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v42 + 8))(v39, v41);
      }
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v35 = v39;
      v36 = v40;
LABEL_14:
      memcpy(v35, v36, v34);
      goto LABEL_21;
    }
    sub_10005B748(v21, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v34 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v35 = (void *)v21;
    v36 = v22;
    goto LABEL_14;
  }
  if (v27)
    goto LABEL_13;
  v28 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
  v29 = *(int *)(v23 + 20);
  __dst = (void *)(v21 + v29);
  v30 = &v22[v29];
  v31 = type metadata accessor for Artwork.CropStyle(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_21:
  v46 = a3[8];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 10, v49);
  v53 = v51(v48, 10, v49);
  if (!v52)
  {
    if (!v53)
    {
      v58 = type metadata accessor for Playlist.Variant(0);
      v59 = *(_QWORD *)(v58 - 8);
      v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
      v61 = v60(v47, 1, v58);
      v62 = v60(v48, 1, v58);
      if (v61)
      {
        if (!v62)
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v47, v48, v58);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v47, 0, 1, v58);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v62)
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v47, v48, v58);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v58);
      }
      v57 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v47, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v57 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v53)
    goto LABEL_27;
  v54 = type metadata accessor for Playlist.Variant(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v48, 1, v54))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v47, v48, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v47, 0, 1, v54);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 10, v49);
LABEL_34:
  v63 = a3[9];
  v64 = &a1[v63];
  v65 = &a2[v63];
  v66 = *(_QWORD *)v65;
  v64[8] = v65[8];
  *(_QWORD *)v64 = v66;
  v67 = a3[10];
  __dsta = a1;
  v68 = (void **)&a1[v67];
  v69 = a2;
  v70 = &a2[v67];
  v71 = *(void **)&a2[v67];
  v72 = *v68;
  *v68 = v71;
  v73 = v71;

  v74 = (int *)type metadata accessor for SegueContext(0);
  v75 = v74[5];
  v76 = (char *)v68 + v75;
  v77 = &v70[v75];
  v78 = v100((char *)v68 + v75, 1, v6);
  v79 = v100(v77, 1, v6);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v76, v77, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v76, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v76, v6);
LABEL_39:
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v99 + 24))(v76, v77, v6);
LABEL_40:
  *((_BYTE *)v68 + v74[6]) = v70[v74[6]];
  v81 = v74[7];
  v82 = (void **)((char *)v68 + v81);
  v83 = &v70[v81];
  v84 = *(uint64_t *)((char *)v68 + v81);
  v85 = *(_QWORD *)&v70[v81];
  if (v84)
  {
    if (v85)
    {
      v86 = *((_QWORD *)v83 + 1);
      *v82 = v85;
      v82[1] = v86;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v85)
  {
    v87 = *((_QWORD *)v83 + 1);
    *v82 = v85;
    v82[1] = v87;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v82 = *(_OWORD *)v83;
LABEL_47:
  v88 = a3[11];
  v89 = *(void **)&__dsta[v88];
  v90 = *(void **)&a2[v88];
  *(_QWORD *)&__dsta[v88] = v90;
  v91 = v90;

  v92 = a3[12];
  v93 = &__dsta[v92];
  v94 = &a2[v92];
  v95 = *(_QWORD *)&v69[v92];
  if (!*(_QWORD *)v93)
  {
    if (v95)
    {
      v97 = *((_QWORD *)v94 + 1);
      *(_QWORD *)v93 = v95;
      *((_QWORD *)v93 + 1) = v97;
      swift_retain();
      return __dsta;
    }
LABEL_53:
    *(_OWORD *)v93 = *(_OWORD *)v94;
    return __dsta;
  }
  if (!v95)
  {
    swift_release();
    goto LABEL_53;
  }
  v96 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = v95;
  *((_QWORD *)v93 + 1) = v96;
  swift_retain();
  swift_release();
  return __dsta;
}

char *sub_1003D488C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *__dst;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v54 = v7;
  if (v55(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v17 = *(int *)(v13 + 20);
    __dst = &v11[v17];
    v18 = &v12[v17];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 10, v25))
  {
    v27 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = type metadata accessor for Playlist.Variant(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v23, v24, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 10, v25);
  }
  v31 = a3[9];
  v32 = a3[10];
  v33 = &a1[v31];
  v34 = &a2[v31];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  v35 = &a1[v32];
  v36 = &a2[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  v37 = (int *)type metadata accessor for SegueContext(0);
  v38 = v37[5];
  v39 = &v35[v38];
  v40 = &v36[v38];
  if (v55(&v36[v38], 1, v6))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v39, v40, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v39, 0, 1, v6);
  }
  v35[v37[6]] = v36[v37[6]];
  v42 = v37[7];
  v43 = &v35[v42];
  v44 = &v36[v42];
  v45 = *(_QWORD *)v44;
  if (*(_QWORD *)v44)
  {
    v46 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = v45;
    *((_QWORD *)v43 + 1) = v46;
  }
  else
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
  }
  v47 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  if (*(_QWORD *)v49)
  {
    v51 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = v50;
    *((_QWORD *)v48 + 1) = v51;
  }
  else
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  return a1;
}

char *sub_1003D4C84(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void **v71;
  char *v72;
  char *v73;
  void *v74;
  void *v75;
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t (*v100)(char *, uint64_t, uint64_t);
  void *__dst;
  char *__dsta;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v99 = v7;
  v100 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  v23 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease(v23);
  v24 = a3[7];
  v25 = (uint64_t)&a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29((uint64_t)v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      v41 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v25, v26, v41);
      v42 = *(int *)(v27 + 20);
      v43 = (void *)(v25 + v42);
      v44 = &v26[v42];
      v45 = type metadata accessor for Artwork.CropStyle(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
      v48 = v47(v43, 1, v45);
      v49 = v47(v44, 1, v45);
      if (v48)
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 40))(v43, v44, v45);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
      }
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v39 = v43;
      v40 = v44;
LABEL_14:
      memcpy(v39, v40, v38);
      goto LABEL_21;
    }
    sub_10005B748(v25, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v39 = (void *)v25;
    v40 = v26;
    goto LABEL_14;
  }
  if (v31)
    goto LABEL_13;
  v32 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v25, v26, v32);
  v33 = *(int *)(v27 + 20);
  __dst = (void *)(v25 + v33);
  v34 = &v26[v33];
  v35 = type metadata accessor for Artwork.CropStyle(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 32))(__dst, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_21:
  v50 = a3[8];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 10, v53);
  v57 = v55(v52, 10, v53);
  if (!v56)
  {
    if (!v57)
    {
      v62 = type metadata accessor for Playlist.Variant(0);
      v63 = *(_QWORD *)(v62 - 8);
      v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
      v65 = v64(v51, 1, v62);
      v66 = v64(v52, 1, v62);
      if (v65)
      {
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v51, v52, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v51, 0, 1, v62);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v51, v52, v62);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v63 + 8))(v51, v62);
      }
      v61 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v51, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v61 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v57)
    goto LABEL_27;
  v58 = type metadata accessor for Playlist.Variant(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v52, 1, v58))
  {
    v60 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v51, v52, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v51, 0, 1, v58);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 10, v53);
LABEL_34:
  v67 = a3[9];
  v68 = a3[10];
  v69 = &a1[v67];
  v70 = &a2[v67];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v69[8] = v70[8];
  __dsta = a1;
  v71 = (void **)&a1[v68];
  v72 = a2;
  v73 = &a2[v68];
  v74 = *(void **)&a2[v68];
  v75 = *v71;
  *v71 = v74;

  v76 = (int *)type metadata accessor for SegueContext(0);
  v77 = v76[5];
  v78 = (char *)v71 + v77;
  v79 = &v73[v77];
  v80 = v100((char *)v71 + v77, 1, v6);
  v81 = v100(v79, 1, v6);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v78, v79, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v78, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v78, v6);
LABEL_39:
    v82 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v99 + 40))(v78, v79, v6);
LABEL_40:
  *((_BYTE *)v71 + v76[6]) = v73[v76[6]];
  v83 = v76[7];
  v84 = (void **)((char *)v71 + v83);
  v85 = &v73[v83];
  v86 = *(uint64_t *)((char *)v71 + v83);
  v87 = *(_QWORD *)&v73[v83];
  if (v86)
  {
    if (v87)
    {
      v88 = *((_QWORD *)v85 + 1);
      *v84 = v87;
      v84[1] = v88;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v87)
  {
    v89 = *((_QWORD *)v85 + 1);
    *v84 = v87;
    v84[1] = v89;
    goto LABEL_47;
  }
  *(_OWORD *)v84 = *(_OWORD *)v85;
LABEL_47:
  v90 = a3[11];
  v91 = *(void **)&__dsta[v90];
  *(_QWORD *)&__dsta[v90] = *(_QWORD *)&a2[v90];

  v92 = a3[12];
  v93 = &__dsta[v92];
  v94 = &a2[v92];
  v95 = *(_QWORD *)&v72[v92];
  if (!*(_QWORD *)v93)
  {
    if (v95)
    {
      v97 = *((_QWORD *)v94 + 1);
      *(_QWORD *)v93 = v95;
      *((_QWORD *)v93 + 1) = v97;
      return __dsta;
    }
LABEL_53:
    *(_OWORD *)v93 = *(_OWORD *)v94;
    return __dsta;
  }
  if (!v95)
  {
    swift_release();
    goto LABEL_53;
  }
  v96 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v93 = v95;
  *((_QWORD *)v93 + 1) = v96;
  swift_release();
  return __dsta;
}

uint64_t sub_1003D5390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D539C);
}

uint64_t sub_1003D539C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[7];
    }
    else
    {
      v15 = type metadata accessor for ArtworkImage.Placeholder(0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[8];
      }
      else
      {
        v13 = type metadata accessor for SegueContext(0);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[10];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1003D54A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D54B0);
}

uint64_t sub_1003D54B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v16 = type metadata accessor for ArtworkImage.Placeholder(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = type metadata accessor for SegueContext(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[10];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003D55A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[9];

  sub_1000E3A44(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_100EB8920;
    v10[2] = &unk_100EB8920;
    sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v10[3] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ArtworkImage.Placeholder(319);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        v10[5] = "\t";
        v8 = type metadata accessor for SegueContext(319);
        if (v9 <= 0x3F)
        {
          v10[6] = *(_QWORD *)(v8 - 8) + 64;
          v10[7] = &unk_100EB8978;
          v10[8] = &unk_100EB8920;
          swift_initStructMetadata(a1, 256, 9, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1003D56B4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9E7C4, 1);
}

uint64_t sub_1003D56C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v59 = a3;
  v60 = a4;
  v58 = a2;
  v65 = a5;
  v66 = _s5VideoO4CellVMa(0);
  __chkstk_darwin(v66);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011B0D88);
  __chkstk_darwin(v63);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)sub_100007E8C(&qword_10119F798);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100007E8C(&qword_10119F780);
  __chkstk_darwin(v64);
  v61 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119F7B8);
  __chkstk_darwin(v14);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_10119F7C0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v16, &qword_10119F7B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_10119F7B8);
    sub_10005B704(v62, (uint64_t)v7, _s5VideoO4CellVMa);
    sub_10005B704((uint64_t)v7, (uint64_t)v9, _s5VideoO4CellVMa);
    swift_storeEnumTagMultiPayload(v9, v63, 1);
    v21 = sub_1000A8E94();
    v22 = sub_100048748(&qword_10119F788, _s5VideoO4CellVMa, (uint64_t)&unk_100ED6F8C);
    _ConditionalContent<>.init(storage:)(v9, v64, v66, v21, v22);
    return sub_10005B748((uint64_t)v7, _s5VideoO4CellVMa);
  }
  else
  {
    v24 = (uint64_t)v16;
    v25 = (uint64_t)v20;
    sub_100065228(v24, (uint64_t)v20, &qword_10119F7C0);
    sub_10004A160((uint64_t)v20, (uint64_t)v12, &qword_10119F7C0);
    v26 = &v12[v10[9]];
    v27 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v58, v27);
    v29 = v59;
    v28 = v60;
    sub_100048AAC(v59, v60);
    v30 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v31 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v32 = EnvironmentObject.init()(v30, v31);
    v34 = v33;
    v35 = type metadata accessor for TabSelectionManager(0);
    v36 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    v37 = EnvironmentObject.init()(v35, v36);
    v38 = (uint64_t *)&v12[v10[10]];
    *v38 = v29;
    v38[1] = v28;
    v39 = (uint64_t *)&v12[v10[11]];
    *v39 = v32;
    v39[1] = v34;
    v40 = (uint64_t *)&v12[v10[12]];
    *v40 = v37;
    v40[1] = v41;
    v42 = &v12[v10[13]];
    v43 = sub_100007E8C(&qword_10119CBF8);
    v44 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v42 = EnvironmentObject.init()(v43, v44);
    *((_QWORD *)v42 + 1) = v45;
    v46 = &v12[v10[14]];
    *(_QWORD *)v46 = swift_getKeyPath(&unk_100EB8A98);
    v46[8] = 0;
    v47 = &v12[v10[15]];
    v48 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v49 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v47 = EnvironmentObject.init()(v48, v49);
    *((_QWORD *)v47 + 1) = v50;
    v51 = &v12[v10[16]];
    *(_QWORD *)v51 = swift_getKeyPath(&unk_100EB8AC0);
    *((_QWORD *)v51 + 1) = 0;
    v51[16] = 0;
    v52 = &v12[v10[17]];
    *(_QWORD *)v52 = swift_getKeyPath(&unk_100EB8AE8);
    *((_QWORD *)v52 + 1) = 0;
    v52[16] = 0;
    v53 = v61;
    sub_10005B704(v62, v61, _s5VideoO4CellVMa);
    v54 = v64;
    sub_100065228((uint64_t)v12, v53 + *(int *)(v64 + 36), &qword_10119F798);
    sub_10004A160(v53, (uint64_t)v9, &qword_10119F780);
    swift_storeEnumTagMultiPayload(v9, v63, 0);
    v55 = sub_1000A8E94();
    v56 = sub_100048748(&qword_10119F788, _s5VideoO4CellVMa, (uint64_t)&unk_100ED6F8C);
    _ConditionalContent<>.init(storage:)(v9, v54, v66, v55, v56);
    sub_10004FF60(v53, &qword_10119F780);
    return sub_10004FF60(v25, &qword_10119F7C0);
  }
}

uint64_t sub_1003D5BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v61 = a3;
  v62 = a4;
  v60 = a2;
  v67 = a5;
  v68 = sub_100007E8C(&qword_1011A05D0);
  __chkstk_darwin(v68);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011B0DB8);
  __chkstk_darwin(v65);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)sub_100007E8C(&qword_1011B0DC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011B0DC8);
  __chkstk_darwin(v66);
  v63 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A05C8);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A0620);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v16, &qword_1011A05C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011A05C8);
    sub_10004A160(v64, (uint64_t)v7, &qword_1011A05D0);
    sub_10004A160((uint64_t)v7, (uint64_t)v9, &qword_1011A05D0);
    swift_storeEnumTagMultiPayload(v9, v65, 1);
    v21 = sub_1003DFF24();
    v22 = sub_100049F28(&qword_1011B0DD8, &qword_1011A05D0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v9, v66, v68, v21, v22);
    v23 = (uint64_t)v7;
    v24 = &qword_1011A05D0;
  }
  else
  {
    v25 = (uint64_t)v16;
    v26 = v20;
    sub_100065228(v25, (uint64_t)v20, &qword_1011A0620);
    sub_10004A160((uint64_t)v20, (uint64_t)v12, &qword_1011A0620);
    v27 = &v12[v10[9]];
    v28 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, v60, v28);
    v30 = v61;
    v29 = v62;
    sub_100048AAC(v61, v62);
    v31 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v32 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v33 = EnvironmentObject.init()(v31, v32);
    v35 = v34;
    v36 = type metadata accessor for TabSelectionManager(0);
    v37 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    v38 = EnvironmentObject.init()(v36, v37);
    v39 = (uint64_t *)&v12[v10[10]];
    *v39 = v30;
    v39[1] = v29;
    v40 = (uint64_t *)&v12[v10[11]];
    *v40 = v33;
    v40[1] = v35;
    v41 = (uint64_t *)&v12[v10[12]];
    *v41 = v38;
    v41[1] = v42;
    v43 = &v12[v10[13]];
    v44 = sub_100007E8C(&qword_10119CBF8);
    v45 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v43 = EnvironmentObject.init()(v44, v45);
    *((_QWORD *)v43 + 1) = v46;
    v47 = &v12[v10[14]];
    *(_QWORD *)v47 = swift_getKeyPath(&unk_100EB8A98);
    v47[8] = 0;
    v48 = &v12[v10[15]];
    v49 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v50 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v48 = EnvironmentObject.init()(v49, v50);
    *((_QWORD *)v48 + 1) = v51;
    v52 = &v12[v10[16]];
    *(_QWORD *)v52 = swift_getKeyPath(&unk_100EB8AC0);
    *((_QWORD *)v52 + 1) = 0;
    v52[16] = 0;
    v53 = &v12[v10[17]];
    *(_QWORD *)v53 = swift_getKeyPath(&unk_100EB8AE8);
    *((_QWORD *)v53 + 1) = 0;
    v53[16] = 0;
    v54 = v63;
    sub_10004A160(v64, v63, &qword_1011A05D0);
    v55 = v66;
    sub_100065228((uint64_t)v12, v54 + *(int *)(v66 + 36), &qword_1011B0DC0);
    sub_10004A160(v54, (uint64_t)v9, &qword_1011B0DC8);
    swift_storeEnumTagMultiPayload(v9, v65, 0);
    v56 = sub_1003DFF24();
    v57 = sub_100049F28(&qword_1011B0DD8, &qword_1011A05D0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v9, v55, v68, v56, v57);
    sub_10004FF60(v54, &qword_1011B0DC8);
    v23 = (uint64_t)v26;
    v24 = &qword_1011A0620;
  }
  return sub_10004FF60(v23, v24);
}

uint64_t sub_1003D60C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v61 = a3;
  v62 = a4;
  v60 = a2;
  v67 = a5;
  v68 = sub_100007E8C(&qword_1011B0BB0);
  __chkstk_darwin(v68);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011B0BD8);
  __chkstk_darwin(v65);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)sub_100007E8C(&qword_1011B0BE0);
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011B0BE8);
  __chkstk_darwin(v66);
  v63 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B0BA8);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011B0BC8);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v16, &qword_1011B0BA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011B0BA8);
    sub_10004A160(v64, (uint64_t)v7, &qword_1011B0BB0);
    sub_10004A160((uint64_t)v7, (uint64_t)v9, &qword_1011B0BB0);
    swift_storeEnumTagMultiPayload(v9, v65, 1);
    v21 = sub_1003DBC9C();
    v22 = sub_100049F28(&qword_1011B0BF8, &qword_1011B0BB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v9, v66, v68, v21, v22);
    v23 = (uint64_t)v7;
    v24 = &qword_1011B0BB0;
  }
  else
  {
    v25 = (uint64_t)v16;
    v26 = v20;
    sub_100065228(v25, (uint64_t)v20, &qword_1011B0BC8);
    sub_10004A160((uint64_t)v20, (uint64_t)v12, &qword_1011B0BC8);
    v27 = &v12[v10[9]];
    v28 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, v60, v28);
    v30 = v61;
    v29 = v62;
    sub_100048AAC(v61, v62);
    v31 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v32 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v33 = EnvironmentObject.init()(v31, v32);
    v35 = v34;
    v36 = type metadata accessor for TabSelectionManager(0);
    v37 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    v38 = EnvironmentObject.init()(v36, v37);
    v39 = (uint64_t *)&v12[v10[10]];
    *v39 = v30;
    v39[1] = v29;
    v40 = (uint64_t *)&v12[v10[11]];
    *v40 = v33;
    v40[1] = v35;
    v41 = (uint64_t *)&v12[v10[12]];
    *v41 = v38;
    v41[1] = v42;
    v43 = &v12[v10[13]];
    v44 = sub_100007E8C(&qword_10119CBF8);
    v45 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v43 = EnvironmentObject.init()(v44, v45);
    *((_QWORD *)v43 + 1) = v46;
    v47 = &v12[v10[14]];
    *(_QWORD *)v47 = swift_getKeyPath(&unk_100EB8A98);
    v47[8] = 0;
    v48 = &v12[v10[15]];
    v49 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v50 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v48 = EnvironmentObject.init()(v49, v50);
    *((_QWORD *)v48 + 1) = v51;
    v52 = &v12[v10[16]];
    *(_QWORD *)v52 = swift_getKeyPath(&unk_100EB8AC0);
    *((_QWORD *)v52 + 1) = 0;
    v52[16] = 0;
    v53 = &v12[v10[17]];
    *(_QWORD *)v53 = swift_getKeyPath(&unk_100EB8AE8);
    *((_QWORD *)v53 + 1) = 0;
    v53[16] = 0;
    v54 = v63;
    sub_10004A160(v64, v63, &qword_1011B0BB0);
    v55 = v66;
    sub_100065228((uint64_t)v12, v54 + *(int *)(v66 + 36), &qword_1011B0BE0);
    sub_10004A160(v54, (uint64_t)v9, &qword_1011B0BE8);
    swift_storeEnumTagMultiPayload(v9, v65, 0);
    v56 = sub_1003DBC9C();
    v57 = sub_100049F28(&qword_1011B0BF8, &qword_1011B0BB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v9, v55, v68, v56, v57);
    sub_10004FF60(v54, &qword_1011B0BE8);
    v23 = (uint64_t)v26;
    v24 = &qword_1011B0BC8;
  }
  return sub_10004FF60(v23, v24);
}

uint64_t sub_1003D65C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a3;
  v61 = a4;
  v59 = a2;
  v66 = a5;
  v67 = sub_100007E8C(&qword_1011A2C88);
  __chkstk_darwin(v67);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011B0C20);
  __chkstk_darwin(v65);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)sub_100007E8C(&qword_1011B0C28);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100007E8C(&qword_1011B0C30);
  __chkstk_darwin(v64);
  v62 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011B0C38);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011B0C40);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v16, &qword_1011B0C38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011B0C38);
    sub_10004A160(v63, (uint64_t)v7, &qword_1011A2C88);
    sub_10004A160((uint64_t)v7, (uint64_t)v9, &qword_1011A2C88);
    swift_storeEnumTagMultiPayload(v9, v65, 1);
    v21 = sub_1003DBD78();
    v22 = sub_1003DBDFC();
    _ConditionalContent<>.init(storage:)(v9, v64, v67, v21, v22);
    v23 = (uint64_t)v7;
    v24 = &qword_1011A2C88;
  }
  else
  {
    v25 = v20;
    sub_100065228((uint64_t)v16, (uint64_t)v20, &qword_1011B0C40);
    sub_10004A160((uint64_t)v20, (uint64_t)v12, &qword_1011B0C40);
    v26 = &v12[v10[9]];
    v27 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v59, v27);
    v29 = v60;
    v28 = v61;
    sub_100048AAC(v60, v61);
    v30 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v31 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v32 = EnvironmentObject.init()(v30, v31);
    v34 = v33;
    v35 = type metadata accessor for TabSelectionManager(0);
    v36 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    v37 = EnvironmentObject.init()(v35, v36);
    v38 = (uint64_t *)&v12[v10[10]];
    *v38 = v29;
    v38[1] = v28;
    v39 = (uint64_t *)&v12[v10[11]];
    *v39 = v32;
    v39[1] = v34;
    v40 = (uint64_t *)&v12[v10[12]];
    *v40 = v37;
    v40[1] = v41;
    v42 = &v12[v10[13]];
    v43 = sub_100007E8C(&qword_10119CBF8);
    v44 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v42 = EnvironmentObject.init()(v43, v44);
    *((_QWORD *)v42 + 1) = v45;
    v46 = &v12[v10[14]];
    *(_QWORD *)v46 = swift_getKeyPath(&unk_100EB8A98);
    v46[8] = 0;
    v47 = &v12[v10[15]];
    v48 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v49 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v47 = EnvironmentObject.init()(v48, v49);
    *((_QWORD *)v47 + 1) = v50;
    v51 = &v12[v10[16]];
    *(_QWORD *)v51 = swift_getKeyPath(&unk_100EB8AC0);
    *((_QWORD *)v51 + 1) = 0;
    v51[16] = 0;
    v52 = &v12[v10[17]];
    *(_QWORD *)v52 = swift_getKeyPath(&unk_100EB8AE8);
    *((_QWORD *)v52 + 1) = 0;
    v52[16] = 0;
    v53 = v62;
    sub_10004A160(v63, v62, &qword_1011A2C88);
    v54 = v64;
    sub_100065228((uint64_t)v12, v53 + *(int *)(v64 + 36), &qword_1011B0C28);
    sub_10004A160(v53, (uint64_t)v9, &qword_1011B0C30);
    swift_storeEnumTagMultiPayload(v9, v65, 0);
    v55 = sub_1003DBD78();
    v56 = sub_1003DBDFC();
    _ConditionalContent<>.init(storage:)(v9, v54, v67, v55, v56);
    sub_10004FF60(v53, &qword_1011B0C30);
    v23 = (uint64_t)v25;
    v24 = &qword_1011B0C40;
  }
  return sub_10004FF60(v23, v24);
}

uint64_t sub_1003D6A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GenericMusicItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v1, (uint64_t)v11, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A20D0);
    return 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_100545C34((uint64_t)v15, (uint64_t)v8);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v2);
    v17 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v8, v5);
    v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v5, v2);
    v18(v8, v2);
    v16 = GenericMusicItem.explicitBadge(_:)(v17 & 1);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v16;
}

uint64_t sub_1003D6C70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  _QWORD *v62;
  int *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t *v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v82 = a7;
  v81 = a6;
  v83 = a4;
  v84 = a5;
  v79 = a3;
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v11);
  v76 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v80 = (char *)&v73 - v14;
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v15);
  v85 = (uint64_t)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v17);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v75 = (uint64_t)&v73 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v73 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v73 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v73 - v29;
  __chkstk_darwin(v31);
  v78 = (uint64_t)&v73 - v32;
  v33 = sub_10004A160(a2, (uint64_t)&v73 - v32, (uint64_t *)&unk_1011A20D0);
  v34 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x368))(v33);
  v36 = v35;
  v86 = a2;
  sub_10004A160(a2, (uint64_t)v30, (uint64_t *)&unk_1011A20D0);
  if (v36)
  {
    v77 = v34;
    v37 = sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    sub_10004A160((uint64_t)v30, (uint64_t)v27, (uint64_t *)&unk_1011A20D0);
    v38 = type metadata accessor for GenericMusicItem(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v27, 1, v38) == 1)
    {
      sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A20D0);
      v37 = sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011A20D0);
      v77 = 0;
      v36 = 0;
    }
    else
    {
      v77 = sub_1003D7234();
      v41 = v40;
      sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A20D0);
      v42 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
      v36 = v41;
      v37 = v42(v27, v38);
    }
  }
  v43 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x380))(v37);
  v45 = v44;
  sub_10004A160(v86, (uint64_t)v24, (uint64_t *)&unk_1011A20D0);
  if (v45)
  {
    sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    v46 = v36;
    v47 = v75;
    sub_10004A160((uint64_t)v24, v75, (uint64_t *)&unk_1011A20D0);
    v48 = type metadata accessor for GenericMusicItem(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) == 1)
    {
      sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60(v47, (uint64_t *)&unk_1011A20D0);
      v43 = 0;
      v45 = 0;
    }
    else
    {
      v43 = sub_1003D7784();
      v45 = v50;
      sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
    v36 = v46;
  }
  v51 = v79;
  sub_10004A160(v79, v85, (uint64_t *)&unk_1011A3E10);
  sub_10004A160(v86, (uint64_t)v19, (uint64_t *)&unk_1011A20D0);
  v52 = type metadata accessor for GenericMusicItem(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v19, 1, v52);
  v55 = (uint64_t)v80;
  if (v54 == 1)
  {
    sub_10004FF60(v51, (uint64_t *)&unk_1011A3E10);
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011A20D0);
    v56 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 1, 10, v56);
  }
  else
  {
    v74 = v43;
    v75 = a8;
    v57 = a1;
    v58 = v36;
    v59 = v76;
    GenericMusicItem.placeholder.getter(v76);
    sub_10004FF60(v51, (uint64_t *)&unk_1011A3E10);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v52);
    v60 = v59;
    v36 = v58;
    a1 = v57;
    v43 = v74;
    a8 = v75;
    sub_10005B6C0(v60, v55, type metadata accessor for ArtworkImage.Placeholder);
  }
  v61 = (int *)type metadata accessor for Playable(0);
  v62 = (_QWORD *)(a8 + v61[10]);
  *v62 = a1;
  v63 = (int *)type metadata accessor for SegueContext(0);
  sub_100065228(v86, (uint64_t)v62 + v63[5], (uint64_t *)&unk_1011A20D0);
  *((_BYTE *)v62 + v63[6]) = 0;
  v64 = (_QWORD *)((char *)v62 + v63[7]);
  v65 = v83;
  v66 = v84;
  *v64 = v83;
  v64[1] = v66;
  sub_100065228(v78, a8, (uint64_t *)&unk_1011A20D0);
  v67 = (uint64_t *)(a8 + v61[5]);
  *v67 = v77;
  v67[1] = v36;
  v68 = (uint64_t *)(a8 + v61[6]);
  *v68 = v43;
  v68[1] = v45;
  sub_100065228(v85, a8 + v61[7], (uint64_t *)&unk_1011A3E10);
  sub_10005B6C0(v55, a8 + v61[8], type metadata accessor for ArtworkImage.Placeholder);
  v69 = a8 + v61[9];
  *(_QWORD *)v69 = v81;
  *(_BYTE *)(v69 + 8) = v82 & 1;
  *(_QWORD *)(a8 + v61[11]) = a1;
  v70 = (uint64_t *)(a8 + v61[12]);
  *v70 = v65;
  v70[1] = v66;
  v71 = a1;
  return sub_100048AAC(v65, v66);
}

uint64_t sub_1003D7234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  int v20;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  __n128 v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = type metadata accessor for Logger(0);
  v60 = *(_QWORD *)(v1 - 8);
  v61 = v1;
  __chkstk_darwin(v1);
  v59 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UploadedVideo(0);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin(v3);
  v54 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for UploadedAudio(0);
  v5 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GenericMusicItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v58 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v53 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v57 = v0;
  v19((char *)&v53 - v17, v0, v12, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v18, v12);
  if (v20 == enum case for GenericMusicItem.album(_:)
    || v20 == enum case for GenericMusicItem.artist(_:)
    || v20 == enum case for GenericMusicItem.curator(_:)
    || v20 == enum case for GenericMusicItem.genre(_:)
    || v20 == enum case for GenericMusicItem.musicVideo(_:)
    || v20 == enum case for GenericMusicItem.playlist(_:)
    || v20 == enum case for GenericMusicItem.radioShow(_:)
    || v20 == enum case for GenericMusicItem.recordLabel(_:))
  {
    goto LABEL_26;
  }
  if (v20 != enum case for GenericMusicItem.song(_:))
  {
    if (v20 != enum case for GenericMusicItem.station(_:))
    {
      if (v20 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v13 + 96))(v18, v12);
        v30 = v62;
        v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v62);
        v29 = UploadedAudio.title.getter(v31);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v30);
        return v29;
      }
      if (v20 == enum case for GenericMusicItem.uploadedVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v13 + 96))(v18, v12);
        v32 = v54;
        v33 = v55;
        v34 = v56;
        v35.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v55 + 32))(v54, v18, v56);
        v29 = UploadedVideo.title.getter(v35);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
        return v29;
      }
      v37 = Logger.musicKit.unsafeMutableAddressor();
      v39 = v59;
      v38 = v60;
      v40 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v37, v61);
      v41 = v58;
      v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v58, v57, v12);
      v43 = Logger.logObject.getter(v42);
      v45 = static os_log_type_t.fault.getter(v44);
      if (os_log_type_enabled(v43, v45))
      {
        v46 = swift_slowAlloc(22, -1);
        v62 = swift_slowAlloc(64, -1);
        v64 = v62;
        *(_DWORD *)v46 = 136446466;
        v63 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
        *(_WORD *)(v46 + 12) = 2082;
        v47 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
        v48 = dispatch thunk of CustomStringConvertible.description.getter(v12, v47);
        v63 = sub_100322200(v48, v49, &v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
        v50 = swift_bridgeObjectRelease();
        v51 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        v51(v41, v12, v50);
        _os_log_impl((void *)&_mh_execute_header, v43, v45, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v46, 0x16u);
        v52 = v62;
        swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
      }
      else
      {
        v51 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        ((void (*)(char *, uint64_t))v51)(v41, v12);

        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      }
      ((void (*)(char *, uint64_t))v51)(v18, v12);
      return 0;
    }
LABEL_26:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v18, v12);
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v18, v8);
  v29 = Song.title.getter(v28);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v29;
}

uint64_t sub_1003D7784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  int v20;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  __n128 v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = type metadata accessor for Logger(0);
  v60 = *(_QWORD *)(v1 - 8);
  v61 = v1;
  __chkstk_darwin(v1);
  v59 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UploadedVideo(0);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin(v3);
  v54 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for UploadedAudio(0);
  v5 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GenericMusicItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v58 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v53 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v57 = v0;
  v19((char *)&v53 - v17, v0, v12, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v18, v12);
  if (v20 == enum case for GenericMusicItem.album(_:)
    || v20 == enum case for GenericMusicItem.artist(_:)
    || v20 == enum case for GenericMusicItem.curator(_:)
    || v20 == enum case for GenericMusicItem.genre(_:)
    || v20 == enum case for GenericMusicItem.musicVideo(_:)
    || v20 == enum case for GenericMusicItem.playlist(_:)
    || v20 == enum case for GenericMusicItem.radioShow(_:)
    || v20 == enum case for GenericMusicItem.recordLabel(_:))
  {
    goto LABEL_26;
  }
  if (v20 != enum case for GenericMusicItem.song(_:))
  {
    if (v20 != enum case for GenericMusicItem.station(_:))
    {
      if (v20 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v13 + 96))(v18, v12);
        v30 = v62;
        v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v62);
        v29 = UploadedAudio.artistName.getter(v31);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v30);
        return v29;
      }
      if (v20 == enum case for GenericMusicItem.uploadedVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v13 + 96))(v18, v12);
        v32 = v54;
        v33 = v55;
        v34 = v56;
        v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 32))(v54, v18, v56);
        v29 = UploadedVideo.artistName.getter(v35);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
        return v29;
      }
      v37 = Logger.musicKit.unsafeMutableAddressor();
      v39 = v59;
      v38 = v60;
      v40 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v37, v61);
      v41 = v58;
      v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v58, v57, v12);
      v43 = Logger.logObject.getter(v42);
      v45 = static os_log_type_t.fault.getter(v44);
      if (os_log_type_enabled(v43, v45))
      {
        v46 = swift_slowAlloc(22, -1);
        v62 = swift_slowAlloc(64, -1);
        v64 = v62;
        *(_DWORD *)v46 = 136446466;
        v63 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
        *(_WORD *)(v46 + 12) = 2082;
        v47 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
        v48 = dispatch thunk of CustomStringConvertible.description.getter(v12, v47);
        v63 = sub_100322200(v48, v49, &v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
        v50 = swift_bridgeObjectRelease();
        v51 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        v51(v41, v12, v50);
        _os_log_impl((void *)&_mh_execute_header, v43, v45, "Unhandled case for %{public}s: %{public}s", (uint8_t *)v46, 0x16u);
        v52 = v62;
        swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
      }
      else
      {
        v51 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
        ((void (*)(char *, uint64_t))v51)(v41, v12);

        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      }
      ((void (*)(char *, uint64_t))v51)(v18, v12);
      return 0;
    }
LABEL_26:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v18, v12);
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v18, v8);
  v29 = Song.artistName.getter(v28);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v29;
}

uint64_t sub_1003D7CD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  unint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  ValueMetadata *v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  uint64_t OpaqueTypeConformance2;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  double v107;
  char v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  __int128 *v118;
  uint64_t v119;
  uint64_t v120;
  unsigned __int8 v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _OWORD *v149;
  __int128 v150;
  uint64_t v151;
  _QWORD *v152;
  unint64_t v153;
  unint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  uint64_t result;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  unint64_t *v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  ValueMetadata *v182;
  unint64_t v183;
  uint64_t v184;
  ValueMetadata *v185;
  id v186;
  void *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  int *v227;
  _BYTE v228[32];
  uint64_t v229;
  _QWORD v230[5];
  _QWORD v231[5];
  _QWORD v232[3];
  uint64_t v233;
  _UNKNOWN **v234;
  _QWORD *v235;
  ValueMetadata *v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  void *v252;
  __int128 v253;
  uint64_t v254;

  v2 = v1;
  v219 = a1;
  v3 = type metadata accessor for Material(0);
  v213 = *(_QWORD **)(v3 - 8);
  v214 = v3;
  __chkstk_darwin(v3);
  v212 = (char *)&v184 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for AccessibilityChildBehavior(0);
  v196 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v195 = (char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100007E8C(&qword_1011B0B20);
  __chkstk_darwin(v198);
  v194 = (uint64_t *)((char *)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011B0B28);
  v200 = *(_QWORD *)(v7 - 8);
  v201 = v7;
  __chkstk_darwin(v7);
  v197 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B0B30);
  __chkstk_darwin(v9);
  v11 = (char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100007E8C(&qword_1011B0B38);
  __chkstk_darwin(v202);
  v13 = (char *)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_100007E8C(&qword_1011B0B40);
  v205 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v203 = (char *)&v184 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_100007E8C(&qword_1011B0B48);
  __chkstk_darwin(v206);
  v204 = (char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011B0B50);
  v209 = *(_QWORD *)(v16 - 8);
  v210 = v16;
  __chkstk_darwin(v16);
  v208 = (char *)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_100007E8C(&qword_1011B0B58);
  __chkstk_darwin(v215);
  v211 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011B0B60);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v184 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)type metadata accessor for PlayableView(0);
  __chkstk_darwin(v23);
  v225 = (uint64_t)&v184 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v25);
  v27 = (char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v28);
  v30 = (char *)&v184 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v2, (uint64_t)v30, (uint64_t *)&unk_1011A20D0);
  v31 = type metadata accessor for GenericMusicItem(0);
  v190 = *(_QWORD *)(v31 - 8);
  v191 = v31;
  v32 = (*(uint64_t (**)(char *, uint64_t))(v190 + 48))(v30, 1);
  v217 = v20;
  v218 = v19;
  v216 = v22;
  v226 = v2;
  v227 = v23;
  if (v32 != 1)
  {
    v193 = v30;
    v188 = v11;
    v187 = (void *)Optional<A>.playbackIntent.getter();
    v44 = v2 + v23[7];
    v45 = *(id *)v44;
    v46 = *(_BYTE *)(v44 + 8);
    sub_1000A4100(*(id *)v44, v46);
    v186 = sub_100824044(v45, v46);
    sub_1000A4224(v45, v46);
    v47 = type metadata accessor for PlaylistContext(0);
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
    v192 = v27;
    v48(v27, 1, 1, v47);
    v49 = (uint64_t *)(v2 + v23[8]);
    v50 = *v49;
    if (!*v49)
    {
      v168 = v49[1];
      v169 = (uint64_t *)&unk_1011B4E40;
      v170 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      v171 = (unint64_t *)&unk_10119CC10;
      v172 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_24:
      v179 = sub_100049F28(v171, v169, (uint64_t)v172);
      result = EnvironmentObject.error()(0, v168, v170, v179);
      __break(1u);
      return result;
    }
    v189 = v13;
    *((_QWORD *)&v247 + 1) = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    *(_QWORD *)&v248 = &protocol witness table for <A> PresentedViewState<A>;
    *(_QWORD *)&v246 = v50;
    v51 = (uint64_t *)(v2 + v23[9]);
    v52 = *v51;
    if (*v51)
    {
      v233 = type metadata accessor for NoticePresenter(0);
      v234 = &protocol witness table for NoticePresenter;
      v232[0] = v52;
      v252 = 0;
      v250 = 0u;
      v251 = 0u;
      v249 = 0u;
      v253 = xmmword_100EA93A0;
      v53 = v2 + v23[10];
      v54 = *(_QWORD *)v53;
      v55 = *(_QWORD *)(v53 + 8);
      v56 = *(unsigned __int8 *)(v53 + 16);
      swift_retain();
      swift_retain();
      v57 = sub_100007E8C(&qword_1011A03A8);
      v58 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v59 = v227;
      v60 = StateObject.wrappedValue.getter(v54, v55, v56, v57, v58);
      v231[3] = v57;
      v231[4] = &protocol witness table for <A> PresentedViewState<A>;
      v231[0] = v60;
      v61 = (uint64_t *)(v2 + v59[11]);
      v62 = *v61;
      if (*v61)
      {
        v63 = type metadata accessor for NavigationPusher();
        v230[3] = v63;
        v230[4] = &off_1010D58B0;
        v230[0] = v62;
        v229 = 0;
        memset(v228, 0, sizeof(v228));
        v64 = (_QWORD *)(v2 + v59[12]);
        if (*v64)
        {
          v65 = (_QWORD *)(v2 + v59[13]);
          if (*v65)
          {
            __chkstk_darwin(v63);
            v66 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100EB89E0);
            __chkstk_darwin(KeyPath);
            v182 = &type metadata for TabIdentifier;
            v183 = v66;
            v68 = swift_getKeyPath(&unk_100EB8A18);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v236, v69, KeyPath, v68);
            swift_release();
            swift_release();
            swift_release();
            LOBYTE(KeyPath) = (_BYTE)v236;
            v70 = v227;
            v71 = v2 + v227[14];
            v72 = *(_QWORD *)v71;
            v73 = *(_QWORD *)(v71 + 8);
            LOBYTE(v68) = *(_BYTE *)(v71 + 16);
            sub_1000A410C(*(_QWORD *)v71, v73, v68);
            sub_100824224(v72, v73, v68);
            v75 = v74;
            sub_1000A4230(v72, v73, v68);
            sub_10066D160(KeyPath);
            v224 = v76;
            v78 = v77;
            swift_release();
            swift_bridgeObjectRelease(v75);
            v79 = v2 + v70[15];
            v80 = *(_QWORD *)v79;
            v81 = *(_QWORD *)(v79 + 8);
            LOBYTE(KeyPath) = *(_BYTE *)(v79 + 16);
            sub_1000A411C(*(_QWORD *)v79, v81, KeyPath);
            sub_100824400(v80, v81, KeyPath, (uint64_t *)&v236);
            sub_1000A4240(v80, v81, KeyPath);
            v82 = v236;
            v83 = v237;
            v84 = v225;
            sub_10005B704(v2, v225, type metadata accessor for PlayableView);
            if (v83 >> 60 != 15)
            {
              v86 = (uint64_t)v192;
              goto LABEL_12;
            }
            v85 = (_QWORD *)(v84 + v227[12]);
            v86 = (uint64_t)v192;
            if (*v85)
            {
              swift_retain();
              v82 = (ValueMetadata *)sub_10066D7A8();
              v83 = v87;
              swift_release();
LABEL_12:
              v185 = v82;
              sub_10005B748(v84, type metadata accessor for PlayableView);
              v88 = type metadata accessor for MusicLibrary(0);
              v89 = static MusicLibrary.shared.getter(v88);
              v182 = v82;
              v90 = v78;
              v181 = v78;
              v92 = v186;
              v91 = v187;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v187, v186, v89, v86, (uint64_t)&v246, (unint64_t)v232, (unint64_t)&v249, (unint64_t)v231, (uint64_t *)&v236, (uint64_t)v230, (unint64_t)v228, (uint64_t)v224, v181, (uint64_t)v182, v83);
              v34 = (uint64_t)v236;
              v35 = v237;
              v36 = v238;
              v37 = v239;
              v222 = v240;
              v223 = v241;
              v224 = v242;
              v225 = v243;
              v220 = v245;
              v221 = v244;
              swift_release();
              sub_1000822B4((uint64_t)v185, v83);

              swift_bridgeObjectRelease(v90);
              sub_10004FF60((uint64_t)v228, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v249, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60((uint64_t)v192, (uint64_t *)&unk_1011A20C0);
              sub_10004FF60((uint64_t)v230, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v231);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v232);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v246);
              v33 = (*(uint64_t (**)(char *, uint64_t))(v190 + 8))(v193, v191);
              v43 = v220;
              v42 = v221;
              v40 = v224;
              v41 = v225;
              v38 = v222;
              v39 = v223;
              v11 = v188;
              v13 = v189;
              goto LABEL_13;
            }
            goto LABEL_22;
          }
          v173 = v65[1];
          v174 = type metadata accessor for TabSelectionManager(0);
          v175 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
          swift_retain();
LABEL_21:
          swift_retain();
          EnvironmentObject.error()(0, v173, v174, v175);
          __break(1u);
LABEL_22:
          v168 = v85[1];
          goto LABEL_23;
        }
      }
      else
      {
        v176 = v61[1];
        v177 = type metadata accessor for NavigationPusher();
        v178 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
        EnvironmentObject.error()(0, v176, v177, v178);
        __break(1u);
      }
      v168 = v64[1];
      swift_retain();
LABEL_23:
      v169 = (uint64_t *)&unk_10119CBE0;
      v170 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
      v171 = &qword_1011C5B90;
      v172 = &unk_100EC0A50;
      goto LABEL_24;
    }
    v173 = v51[1];
    v174 = type metadata accessor for NoticePresenter(0);
    v175 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    goto LABEL_21;
  }
  v33 = sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A20D0);
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 0;
  v42 = 0;
  v43 = 0;
LABEL_13:
  v190 = v35;
  v191 = v37;
  v192 = (char *)v36;
  v193 = (char *)v34;
  v220 = v43;
  v221 = v42;
  v222 = v38;
  v223 = v39;
  v224 = v40;
  v225 = v41;
  *(_QWORD *)&v249 = v34;
  *((_QWORD *)&v249 + 1) = v35;
  *(_QWORD *)&v250 = v36;
  *((_QWORD *)&v250 + 1) = v37;
  *(_QWORD *)&v251 = v38;
  *((_QWORD *)&v251 + 1) = v39;
  v252 = v40;
  *(_QWORD *)&v253 = v41;
  *((_QWORD *)&v253 + 1) = v42;
  v254 = v43;
  v93 = static VerticalAlignment.center.getter(v33);
  v94 = (uint64_t)v194;
  *v194 = v93;
  *(_QWORD *)(v94 + 8) = 0;
  *(_BYTE *)(v94 + 16) = 1;
  v95 = sub_100007E8C(&qword_1011B0B68);
  v96 = v226;
  v97 = sub_1003D8C84(v226, (uint64_t)&v249, v94 + *(int *)(v95 + 44));
  v98 = v195;
  static AccessibilityChildBehavior.combine.getter(v97);
  v99 = sub_100049F28(&qword_1011B0B70, &qword_1011B0B20, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v101 = v197;
  v100 = v198;
  View.accessibilityElement(children:)(v98, v198, v99);
  (*(void (**)(char *, uint64_t))(v196 + 8))(v98, v199);
  sub_10004FF60(v94, &qword_1011B0B20);
  v102 = sub_1003DA268(v96);
  *(_QWORD *)&v246 = v100;
  *((_QWORD *)&v246 + 1) = v99;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v246, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v104 = v201;
  View.accessibilityInputLabels(_:)(v102, v201, OpaqueTypeConformance2);
  v105 = swift_bridgeObjectRelease(v102);
  v106 = (*(uint64_t (**)(char *, uint64_t, __n128))(v200 + 8))(v101, v104, v105);
  if (qword_10119C8D8 != -1)
    v106 = swift_once(&qword_10119C8D8, sub_10085FA00);
  v107 = *(double *)&qword_10124DA50;
  v108 = static Edge.Set.all.getter(v106);
  v109 = EdgeInsets.init(_all:)(v107);
  v111 = v110;
  v113 = v112;
  v115 = v114;
  sub_10004A160((uint64_t)v11, (uint64_t)v13, &qword_1011B0B30);
  v116 = v202;
  v117 = &v13[*(int *)(v202 + 36)];
  *v117 = v108;
  *((double *)v117 + 1) = v109;
  *((_QWORD *)v117 + 2) = v111;
  *((_QWORD *)v117 + 3) = v113;
  *((_QWORD *)v117 + 4) = v115;
  v117[40] = 0;
  sub_10004FF60((uint64_t)v11, &qword_1011B0B30);
  v118 = Corner.featured.unsafeMutableAddressor();
  v119 = *(_QWORD *)v118;
  v120 = *((_QWORD *)v118 + 1);
  v121 = *((_BYTE *)v118 + 16);
  v122 = sub_1003DB654();
  v123 = v203;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v119, v120, v121, 0, 0, 1, 1, v116, 0.0, v122);
  v124 = sub_10004FF60((uint64_t)v13, &qword_1011B0B38);
  v125 = v212;
  v126 = static Material.ultraThin.getter(v124);
  LOBYTE(v119) = static Edge.Set.all.getter(v126);
  v127 = v206;
  v128 = v123;
  v129 = (uint64_t)v204;
  v130 = &v204[*(int *)(v206 + 36)];
  v132 = v213;
  v131 = v214;
  ((void (*)(char *, char *, uint64_t))v213[2])(v130, v125, v214);
  v130[*(int *)(sub_100007E8C(&qword_1011B0B88) + 36)] = v119;
  v133 = v205;
  v134 = v207;
  (*(void (**)(uint64_t, char *, uint64_t))(v205 + 16))(v129, v128, v207);
  ((void (*)(char *, uint64_t))v132[1])(v125, v131);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v128, v134);
  v135 = *(_QWORD *)v118;
  v136 = *((_QWORD *)v118 + 1);
  LOBYTE(v118) = *((_BYTE *)v118 + 16);
  v137 = sub_1003DB78C();
  v138 = v208;
  View.corner(_:)(v135, v136, (char)v118, v127, v137);
  sub_10004FF60(v129, &qword_1011B0B48);
  v139 = v226;
  v140 = sub_100007E8C(qword_1011C9550);
  v141 = ScaledMetric.wrappedValue.getter(&v246, v140);
  v142 = v246;
  v143 = static Alignment.center.getter(v141);
  _FrameLayout.init(width:height:alignment:)(&v246, 0, 1, v142, 0, v143, v144);
  v146 = v209;
  v145 = v210;
  v147 = (uint64_t)v211;
  (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v211, v138, v210);
  v148 = v215;
  v149 = (_OWORD *)(v147 + *(int *)(v215 + 36));
  v150 = v247;
  *v149 = v246;
  v149[1] = v150;
  v149[2] = v248;
  v151 = (*(uint64_t (**)(char *, uint64_t))(v146 + 8))(v138, v145);
  __chkstk_darwin(v151);
  v152 = (_QWORD *)sub_100007E8C(&qword_1011AC3B0);
  v213 = v152;
  v153 = sub_1003DB838();
  v214 = v153;
  v154 = sub_1000E3EE4();
  v155 = (_QWORD *)sub_100314AC0();
  v180 = v152;
  v156 = (uint64_t)v216;
  View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v249, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100314AB8, (uint64_t)&v180, (uint64_t)UIScreen.Dimensions.size.getter, 0, (uint64_t)v216, v148, (uint64_t)&type metadata for ActionType, v180, v153, v154, v155);
  sub_10004FF60(v147, &qword_1011B0B58);
  v157 = v139 + v227[10];
  v158 = *(_QWORD *)v157;
  v159 = *(_QWORD *)(v157 + 8);
  v160 = *(unsigned __int8 *)(v157 + 16);
  v161 = sub_100007E8C(&qword_1011A03A8);
  v162 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v163 = StateObject.wrappedValue.getter(v158, v159, v160, v161, v162);
  v232[0] = v148;
  v232[1] = &type metadata for ActionType;
  v232[2] = v213;
  v233 = v214;
  v234 = (_UNKNOWN **)v154;
  v235 = v155;
  v164 = swift_getOpaqueTypeConformance2(v232, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v165 = v218;
  View.shareSheetPresenting(_:)(v163, v218, v164);
  sub_1000E4164((uint64_t)v193, v190, (uint64_t)v192, v191, v222, v223, v224, v225, v221, v220);
  v166 = swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v217 + 8))(v156, v165, v166);
}

uint64_t sub_1003D8C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t OpaqueTypeConformance2;
  uint64_t v67;
  char *v68;
  ValueMetadata *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  ValueMetadata *v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  _OWORD v149[10];

  v137 = a2;
  v5 = type metadata accessor for ControlSize(0);
  v128 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v127 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for ButtonBorderShape(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_100007E8C(&qword_1011A0598);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011A05A0);
  __chkstk_darwin(v116);
  v126 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for BorderlessButtonStyle(0);
  v125 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for ButtonMenuStyle(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v112 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_1011A05A8);
  v111 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v110 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100007E8C(&qword_1011A05B0);
  v118 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v117 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A05B8);
  __chkstk_darwin(v14);
  v140 = (uint64_t)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v103 - v17;
  __chkstk_darwin(v19);
  v139 = (uint64_t)&v103 - v20;
  v21 = type metadata accessor for PlayableView(0);
  v131 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v132 = v22;
  v133 = (uint64_t)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v134 = (uint64_t)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v24);
  v26 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for GenericMusicItem(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v109 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011B0BA8);
  __chkstk_darwin(v30);
  v32 = (uint64_t *)((char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_100007E8C(&qword_1011B0BB0);
  __chkstk_darwin(v33);
  v35 = (char *)&v103 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011B0BB8);
  __chkstk_darwin(v36);
  v138 = (uint64_t)&v103 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v130 = (uint64_t)&v103 - v39;
  __chkstk_darwin(v40);
  v144 = (uint64_t)&v103 - v41;
  *(_QWORD *)v35 = static VerticalAlignment.center.getter(v42);
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = 1;
  v43 = sub_100007E8C(&qword_1011B0BC0);
  sub_1003D99A4(a1, (uint64_t)&v35[*(int *)(v43 + 44)]);
  v44 = *(uint64_t (**)(void))(a1 + *(int *)(type metadata accessor for Playable(0) + 48));
  v129 = v5;
  if (v44)
  {
    v105 = v21;
    v107 = v18;
    v108 = a3;
    v45 = v44();
    *v32 = v45;
    v46 = sub_100007E8C(&qword_1011B0BC8);
    v47 = (uint64_t)v32 + *(int *)(v46 + 36);
    v104 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v104(v47, 1, 1, v27);
    v48 = sub_100007E8C(&qword_10119F7C8);
    swift_storeEnumTagMultiPayload(v47, v48, 0);
    *((_BYTE *)v32 + *(int *)(v46 + 40)) = 2;
    v106 = a1;
    sub_10004A160(a1, (uint64_t)v26, (uint64_t *)&unk_1011A20D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      swift_bridgeObjectRetain();
      sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A20D0);
    }
    else
    {
      v50 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
      v51 = v109;
      v50(v109, v26, v27);
      swift_bridgeObjectRetain();
      sub_10004FF60(v47, &qword_10119F7C8);
      v50((char *)v47, v51, v27);
      v104(v47, 0, 1, v27);
      swift_storeEnumTagMultiPayload(v47, v48, 0);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v32, 0, 1, v46);
    swift_bridgeObjectRelease(v45);
    a3 = v108;
    v18 = v107;
    a1 = v106;
  }
  else
  {
    v49 = sub_100007E8C(&qword_1011B0BC8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v32, 1, 1, v49);
  }
  v52 = v134;
  sub_100824838(v134);
  v53 = v133;
  sub_10005B704(a1, v133, type metadata accessor for PlayableView);
  v54 = *(unsigned __int8 *)(v131 + 80);
  v55 = (v54 + 16) & ~v54;
  v56 = swift_allocObject(&unk_1010C34B0, v55 + v132, v54 | 7);
  sub_10005B6C0(v53, v56 + v55, type metadata accessor for PlayableView);
  v57 = v130;
  sub_1003D60C4((uint64_t)v32, v52, (uint64_t)sub_1003DBC60, v56, v130);
  v58 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v135 + 8))(v52, v136, v58);
  sub_10004FF60((uint64_t)v32, &qword_1011B0BA8);
  sub_10004FF60((uint64_t)v35, &qword_1011B0BB0);
  sub_100065228(v57, v144, &qword_1011B0BB8);
  sub_100065228(v137, (uint64_t)v149, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v149[0] + 1))
  {
    v149[7] = v149[2];
    v149[8] = v149[3];
    v149[9] = v149[4];
    v149[5] = v149[0];
    v149[6] = v149[1];
    v59 = sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v60 = sub_100007E8C(&qword_1011A05F8);
    v61 = sub_1000E41D0();
    v62 = v110;
    v63 = ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100558D1C, 0, (uint64_t)UIScreen.Dimensions.size.getter, 0, v59, v110, v60, v61);
    v64 = v112;
    ButtonMenuStyle.init()(v63);
    v65 = sub_1000E3EE4();
    v145 = &type metadata for ActionType;
    v146 = v60;
    v147 = v65;
    v148 = v61;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v145, &opaque type descriptor for <<opaque return type of ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)>>, 1);
    v67 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    v68 = v117;
    v69 = (ValueMetadata *)v113;
    v70 = v115;
    View.menuStyle<A>(_:)(v64, v113, v115, OpaqueTypeConformance2, v67);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v64, v70);
    v71 = (*(uint64_t (**)(char *, ValueMetadata *))(v111 + 8))(v62, v69);
    v72 = v142;
    BorderlessButtonStyle.init()(v71);
    v145 = v69;
    v146 = v70;
    v147 = OpaqueTypeConformance2;
    v148 = v67;
    v73 = swift_getOpaqueTypeConformance2(&v145, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v74 = sub_100048748(&qword_10119E008, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v75 = v18;
    v76 = a3;
    v77 = v119;
    v78 = View.buttonStyle<A>(_:)(v72, v141, v143, v73, v74);
    v79 = v122;
    static ButtonBorderShape.circle.getter(v78);
    KeyPath = swift_getKeyPath(&unk_100EB8A38);
    v81 = (uint64_t)v126;
    v82 = (uint64_t *)&v126[*(int *)(v116 + 36)];
    v83 = sub_100007E8C(&qword_1011A0610);
    v84 = v123;
    v85 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))((char *)v82 + *(int *)(v83 + 28), v79, v124);
    *v82 = KeyPath;
    v86 = v120;
    v87 = v121;
    (*(void (**)(uint64_t, char *, uint64_t))(v120 + 16))(v81, v77, v121);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v79, v85);
    v88 = v77;
    a3 = v76;
    v18 = v75;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v87);
    v89 = v128;
    v90 = v127;
    v91 = v129;
    (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v127, enum case for ControlSize.regular(_:), v129);
    v92 = swift_getKeyPath(&unk_100EB8A68);
    v93 = sub_100007E8C(&qword_1011A05E8);
    v94 = (uint64_t *)&v18[*(int *)(v93 + 36)];
    v95 = sub_100007E8C(&qword_1011A0618);
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))((char *)v94 + *(int *)(v95 + 28), v90, v91);
    *v94 = v92;
    sub_10004A160(v81, (uint64_t)v18, &qword_1011A05A0);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
    sub_10004FF60(v81, &qword_1011A05A0);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v142, v143);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v68, v141);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v18, 0, 1, v93);
  }
  else
  {
    v96 = sub_100007E8C(&qword_1011A05E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v18, 1, 1, v96);
  }
  v97 = v139;
  sub_100065228((uint64_t)v18, v139, &qword_1011A05B8);
  v98 = v144;
  v99 = v138;
  sub_10004A160(v144, v138, &qword_1011B0BB8);
  v100 = v140;
  sub_10004A160(v97, v140, &qword_1011A05B8);
  sub_10004A160(v99, a3, &qword_1011B0BB8);
  v101 = sub_100007E8C(&qword_1011B0BD0);
  sub_10004A160(v100, a3 + *(int *)(v101 + 48), &qword_1011A05B8);
  sub_10004FF60(v97, &qword_1011A05B8);
  sub_10004FF60(v98, &qword_1011B0BB8);
  sub_10004FF60(v100, &qword_1011A05B8);
  return sub_10004FF60(v99, &qword_1011B0BB8);
}

uint64_t sub_1003D99A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  void (*v67)(__n128);
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _OWORD v104[3];

  v98 = a2;
  v101 = _s27DownloadStatusIndicatorViewVMa(0);
  __chkstk_darwin(v101);
  v99 = (uint64_t)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v93 = (char *)&v80 - v5;
  v96 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v91 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v90 = (uint64_t)&v80 - v8;
  v9 = type metadata accessor for Playable(0);
  __chkstk_darwin(v9);
  v88 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for PlayableView.TextStack(0);
  __chkstk_darwin(v89);
  v92 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v100 = (uint64_t)&v80 - v13;
  v86 = (char *)type metadata accessor for Font.TextStyle(0);
  v14 = *((_QWORD *)v86 - 1);
  __chkstk_darwin(v86);
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PlayableView.ArtworkView(0);
  __chkstk_darwin(v17);
  v97 = (uint64_t)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v102 = (uint64_t)&v80 - v20;
  v21 = sub_100007E8C(&qword_10119EBA0);
  v85 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v84 = (uint64_t)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011B0C08);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v83 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C(&qword_1011B0C10);
  __chkstk_darwin(v26);
  v95 = (uint64_t)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v80 - v30;
  v32 = *(int *)(v9 + 36);
  v87 = a1;
  v33 = a1 + v32;
  if ((*(_BYTE *)(v33 + 8) & 1) != 0)
  {
    v34 = 1;
  }
  else
  {
    *(_QWORD *)&v104[0] = *(_QWORD *)v33;
    *(_QWORD *)&v104[0] = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    *((_QWORD *)&v104[0] + 1) = v35;
    v36 = sub_100055B68();
    v37 = Text.init<A>(_:)(v104, &type metadata for String, v36);
    v81 = v14;
    v38 = v16;
    v40 = v39;
    v82 = v24;
    v42 = v41;
    v80 = v21;
    v44 = v43 & 1;
    v45 = v84;
    Text.with(style:)(8, v37, v39, v43 & 1, v41, v84);
    v46 = v40;
    v16 = v38;
    v14 = v81;
    sub_100055BAC(v37, v46, v44);
    v24 = v82;
    swift_bridgeObjectRelease(v42);
    v48 = static Alignment.center.getter(v47);
    _FrameLayout.init(width:height:alignment:)(v104, 0x4048000000000000, 0, 0, 1, v48, v49);
    v50 = v85;
    v51 = (uint64_t)v83;
    v52 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v83, v45, v80);
    v53 = (_OWORD *)(v51 + *(int *)(v23 + 36));
    v54 = v104[1];
    *v53 = v104[0];
    v53[1] = v54;
    v53[2] = v104[2];
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v45, v52);
    sub_100065228(v51, (uint64_t)v31, &qword_1011B0C08);
    v34 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v24 + 56))(v31, v34, 1, v23, v29);
  v55 = v87;
  sub_10005B704(v87, v102, type metadata accessor for Playable);
  v103 = 0x4048000000000000;
  (*(void (**)(char *, _QWORD, char *))(v14 + 104))(v16, enum case for Font.TextStyle.title2(_:), v86);
  v56 = sub_1000E4360();
  v86 = v31;
  v57 = v56;
  ScaledMetric.init(wrappedValue:relativeTo:)(&v103, v16, &type metadata for CGFloat, v56);
  v58 = v88;
  sub_10005B704(v55, v88, type metadata accessor for Playable);
  v59 = type metadata accessor for PlayableView(0);
  v60 = v90;
  sub_100824838(v90);
  v61 = v94;
  v62 = v91;
  v63 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v91, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v96);
  v64 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v60, v62);
  v65 = *(void (**)(char *, uint64_t))(v61 + 8);
  v65(v62, v63);
  v65((char *)v60, v63);
  v66 = v100;
  sub_10005B6C0(v58, v100, type metadata accessor for Playable);
  *(_BYTE *)(v66 + *(int *)(v89 + 20)) = v64 & 1;
  v67 = *(void (**)(__n128))(**(_QWORD **)(v55 + *(int *)(v59 + 20) + 8) + 112);
  v68 = swift_retain();
  v69 = (uint64_t)v93;
  v67(v68);
  swift_release();
  v103 = 0x4000000000000000;
  ScaledMetric.init(wrappedValue:)(&v103, &type metadata for CGFloat, v57);
  v103 = 0x3FF0000000000000;
  ScaledMetric.init(wrappedValue:)(&v103, &type metadata for CGFloat, v57);
  v70 = (uint64_t)v86;
  v71 = v95;
  sub_10004A160((uint64_t)v86, v95, &qword_1011B0C10);
  v72 = v102;
  v73 = v97;
  sub_10005B704(v102, v97, type metadata accessor for PlayableView.ArtworkView);
  v74 = v92;
  sub_10005B704(v66, v92, type metadata accessor for PlayableView.TextStack);
  v75 = v99;
  sub_10005B704(v69, v99, _s27DownloadStatusIndicatorViewVMa);
  v76 = v98;
  sub_10004A160(v71, v98, &qword_1011B0C10);
  v77 = (int *)sub_100007E8C(&qword_1011B0C18);
  sub_10005B704(v73, v76 + v77[12], type metadata accessor for PlayableView.ArtworkView);
  sub_10005B704(v74, v76 + v77[16], type metadata accessor for PlayableView.TextStack);
  v78 = v76 + v77[20];
  *(_QWORD *)v78 = 0;
  *(_BYTE *)(v78 + 8) = 0;
  sub_10005B704(v75, v76 + v77[24], _s27DownloadStatusIndicatorViewVMa);
  sub_10005B748(v69, _s27DownloadStatusIndicatorViewVMa);
  sub_10005B748(v66, type metadata accessor for PlayableView.TextStack);
  sub_10005B748(v72, type metadata accessor for PlayableView.ArtworkView);
  sub_10004FF60(v70, &qword_1011B0C10);
  sub_10005B748(v75, _s27DownloadStatusIndicatorViewVMa);
  sub_10005B748(v74, type metadata accessor for PlayableView.TextStack);
  sub_10005B748(v73, type metadata accessor for PlayableView.ArtworkView);
  return sub_10004FF60(v71, &qword_1011B0C10);
}

uint64_t sub_1003DA174(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, _QWORD *, _QWORD *);
  _QWORD *v12;
  uint64_t v13;

  v2 = (int *)type metadata accessor for Metrics.Event(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for Playable(0);
  v6 = *(_QWORD **)(a1 + *(int *)(result + 44));
  if (v6)
  {
    v7 = type metadata accessor for Metrics.Event.Action(0);
    swift_storeEnumTagMultiPayload(v4, v7, 13);
    v8 = v2[7];
    v9 = v2[8];
    v10 = v2[6];
    v4[v2[5]] = 3;
    *(_QWORD *)&v4[v10] = 0;
    *(_QWORD *)&v4[v8] = 0;
    *(_QWORD *)&v4[v9] = 0;
    v11 = *(void (**)(char *, _QWORD *, _QWORD *))((swift_isaMask & *v6) + 0x280);
    v12 = v6;
    v11(v4, _swiftEmptyArrayStorage, v6);

    return sub_10005B748((uint64_t)v4, type metadata accessor for Metrics.Event);
  }
  return result;
}

_QWORD *sub_1003DA268(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;

  v118 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v2 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v117 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v116 = (uint64_t)&v112 - v5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v121 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v115 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playable(0);
  v11 = (_QWORD *)(a1 + *(int *)(v10 + 20));
  v12 = v11[1];
  v120 = (_QWORD *)*v11;
  v123 = v8;
  if (v12)
  {
    v113 = a1;
    swift_bridgeObjectRetain_n(v12, 2);
    v13 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
    v15 = v13[2];
    v14 = v13[3];
    v114 = v2;
    if (v15 >= v14 >> 1)
      v13 = sub_100431480((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v13[2] = v15 + 1;
    v16 = &v13[2 * v15];
    v17 = v120;
    v16[4] = v120;
    v16[5] = v12;
    v124 = v17;
    v125 = v12;
    v18 = v12;
    v19 = sub_100055B68();
    v20 = Text.init<A>(_:)(&v124, &type metadata for String, v19);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v27 = sub_100432428(0, 1, 1, _swiftEmptyArrayStorage);
    v29 = v27[2];
    v28 = v27[3];
    if (v29 >= v28 >> 1)
      v27 = sub_100432428((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
    v27[2] = v29 + 1;
    v30 = &v27[4 * v29];
    v30[4] = v20;
    v30[5] = v22;
    *((_BYTE *)v30 + 48) = v24 & 1;
    v30[7] = v26;
    v12 = v18;
    a1 = v113;
    v2 = v114;
    v8 = v123;
  }
  else
  {
    v27 = _swiftEmptyArrayStorage;
    v13 = _swiftEmptyArrayStorage;
  }
  v31 = (uint64_t *)(a1 + *(int *)(v10 + 24));
  v32 = v31[1];
  v113 = v32;
  if (v32)
  {
    v33 = *v31;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
    v119 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v13 = sub_100431480(0, v13[2] + 1, 1, v13);
    v36 = v13[2];
    v35 = v13[3];
    if (v36 >= v35 >> 1)
      v13 = sub_100431480((_QWORD *)(v35 > 1), v36 + 1, 1, v13);
    v13[2] = v36 + 1;
    v37 = &v13[2 * v36];
    v37[4] = v33;
    v37[5] = v32;
    v124 = v13;
    swift_bridgeObjectRetain();
    v38 = sub_100007E8C((uint64_t *)&unk_1011AD420);
    v39 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
    v40 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v38, v39);
    v42 = v41;
    swift_bridgeObjectRelease(v13);
    v124 = (_QWORD *)v40;
    v125 = v42;
    v43 = sub_100055B68();
    v44 = Text.init<A>(_:)(&v124, &type metadata for String, v43);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
      v27 = sub_100432428(0, v27[2] + 1, 1, v27);
    v52 = v27[2];
    v51 = v27[3];
    if (v52 >= v51 >> 1)
      v27 = sub_100432428((_QWORD *)(v51 > 1), v52 + 1, 1, v27);
    v27[2] = v52 + 1;
    v53 = &v27[4 * v52];
    v53[4] = v44;
    v53[5] = v46;
    *((_BYTE *)v53 + 48) = v48 & 1;
    v53[7] = v50;
    v12 = v119;
    v54 = v122;
    v8 = v123;
  }
  else
  {
    v54 = v122;
  }
  v55 = a1;
  v56 = v121;
  sub_10004A160(v55, v121, (uint64_t *)&unk_1011A20D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v56, 1, v54) == 1)
  {
    sub_10004FF60(v56, (uint64_t *)&unk_1011A20D0);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v122 = (uint64_t)v27;
    v57 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v115, v56, v54);
    v58 = v116;
    sub_100545C34(v57, v116);
    v59 = v117;
    v60 = v8;
    v61 = v118;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v117, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v118);
    v62 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v58, v59);
    v63 = *(void (**)(char *, uint64_t))(v2 + 8);
    v63(v59, v61);
    v63((char *)v58, v61);
    v64 = GenericMusicItem.explicitBadge(_:)(v62 & 1);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v57, v54);
    if ((v64 - 2) >= 3u)
    {
      v27 = (_QWORD *)v122;
      if (qword_10119BE50 != -1)
        swift_once(&qword_10119BE50, sub_1002F406C);
      v66 = qword_10124CD50;
      v65 = *(_QWORD *)algn_10124CD58;
      swift_bridgeObjectRetain_n(*(_QWORD *)algn_10124CD58, 2);
      v67 = swift_isUniquelyReferenced_nonNull_native(v13);
      v68 = v113;
      if ((v67 & 1) == 0)
        v13 = sub_100431480(0, v13[2] + 1, 1, v13);
      v70 = v13[2];
      v69 = v13[3];
      if (v70 >= v69 >> 1)
        v13 = sub_100431480((_QWORD *)(v69 > 1), v70 + 1, 1, v13);
      v13[2] = v70 + 1;
      v71 = &v13[2 * v70];
      v71[4] = v66;
      v71[5] = v65;
      if (v68)
      {
        v119 = v12;
        v124 = v13;
        swift_bridgeObjectRetain();
        v72 = sub_100007E8C((uint64_t *)&unk_1011AD420);
        v73 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
        v74 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v72, v73);
        v76 = v75;
        swift_bridgeObjectRelease(v13);
        v124 = (_QWORD *)v74;
        v125 = v76;
        v77 = sub_100055B68();
        v78 = Text.init<A>(_:)(&v124, &type metadata for String, v77);
        v80 = v79;
        v82 = v81;
        v84 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
          v27 = sub_100432428(0, v27[2] + 1, 1, v27);
        v86 = v27[2];
        v85 = v27[3];
        if (v86 >= v85 >> 1)
          v27 = sub_100432428((_QWORD *)(v85 > 1), v86 + 1, 1, v27);
        v27[2] = v86 + 1;
        v87 = &v27[4 * v86];
        v87[4] = v78;
        v87[5] = v80;
        *((_BYTE *)v87 + 48) = v82 & 1;
        v87[7] = v84;
        v12 = v119;
      }
      if (v12)
      {
        swift_bridgeObjectRetain_n(v12, 2);
        v88 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
        v90 = v88[2];
        v89 = v88[3];
        if (v90 >= v89 >> 1)
          v88 = sub_100431480((_QWORD *)(v89 > 1), v90 + 1, 1, v88);
        v88[2] = v90 + 1;
        v91 = &v88[2 * v90];
        v91[4] = v120;
        v91[5] = v12;
      }
      else
      {
        v88 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0)
        v88 = sub_100431480(0, v88[2] + 1, 1, v88);
      v93 = v88[2];
      v92 = v88[3];
      if (v93 >= v92 >> 1)
        v88 = sub_100431480((_QWORD *)(v92 > 1), v93 + 1, 1, v88);
      v88[2] = v93 + 1;
      v94 = &v88[2 * v93];
      v94[4] = v66;
      v94[5] = v65;
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v65);
      swift_bridgeObjectRelease(v12);
      v124 = v88;
      v95 = sub_100007E8C((uint64_t *)&unk_1011AD420);
      v96 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
      v97 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v95, v96);
      v99 = v98;
      swift_bridgeObjectRelease(v88);
      v124 = (_QWORD *)v97;
      v125 = v99;
      v100 = sub_100055B68();
      v101 = Text.init<A>(_:)(&v124, &type metadata for String, v100);
      v103 = v102;
      v105 = v104;
      v107 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
        v27 = sub_100432428(0, v27[2] + 1, 1, v27);
      v109 = v27[2];
      v108 = v27[3];
      if (v109 >= v108 >> 1)
        v27 = sub_100432428((_QWORD *)(v108 > 1), v109 + 1, 1, v27);
      v27[2] = v109 + 1;
      v110 = &v27[4 * v109];
      v110[4] = v101;
      v110[5] = v103;
      *((_BYTE *)v110 + 48) = v105 & 1;
      v110[7] = v107;
    }
    else
    {
      swift_bridgeObjectRelease(v13);
      return (_QWORD *)v122;
    }
  }
  return v27;
}

uint64_t sub_1003DAB28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t OpaqueTypeConformance2;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD v66[7];

  v2 = v1;
  v63 = a1;
  v55 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - v9;
  v58 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v54 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v52 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  __chkstk_darwin(v12);
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v56 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlayableView.ArtworkView(0);
  v15 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(v66, v15);
  v16 = *(double *)v66;
  sub_10004A160(v1, (uint64_t)v10, (uint64_t *)&unk_1011A20D0);
  v17 = type metadata accessor for GenericMusicItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v10, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
    v20 = 1.0;
  }
  else
  {
    GenericMusicItem.aspectRatio.getter();
    v20 = v21;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v17);
  }
  ScaledMetric.wrappedValue.getter(v66, v15);
  v22 = v66[0];
  sub_10004A160(v1, (uint64_t)v7, (uint64_t *)&unk_1011A20D0);
  if (v19(v7, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A20D0);
    v23 = 0x3FF0000000000000;
  }
  else
  {
    GenericMusicItem.aspectRatio.getter();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
    v23 = v25;
  }
  v26 = type metadata accessor for Playable(0);
  v27 = v2 + *(int *)(v26 + 28);
  v28 = v2 + *(int *)(v26 + 32);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(COERCE__INT64(v16 * v20), 0, v22, 0, v23, 0, 2, (uint64_t)v66);
  v29 = v53;
  v30 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v4, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v55);
  v31 = v52;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v27, v28, (uint64_t)v66, (uint64_t)v4, v52);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v30);
  v32 = Corner.medium.unsafeMutableAddressor();
  v33 = *v32;
  v34 = v32[1];
  LOBYTE(v27) = *((_BYTE *)v32 + 16);
  v35 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v36 = sub_1000E4264();
  v64 = v35;
  v65 = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v64, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v38 = v60;
  v39 = v58;
  View.corner(_:)(v33, v34, v27, v58, OpaqueTypeConformance2);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v39);
  v40 = Border.artwork.unsafeMutableAddressor();
  v41 = *v40;
  v42 = *((double *)v40 + 1);
  v43 = *v32;
  v44 = v32[1];
  LOBYTE(v32) = *((_BYTE *)v32 + 16);
  LOBYTE(v31) = *((_BYTE *)v40 + 16);
  swift_retain();
  v64 = v39;
  v65 = OpaqueTypeConformance2;
  v45 = swift_getOpaqueTypeConformance2(&v64, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v46 = v56;
  v47 = (char)v32;
  v48 = v62;
  View.border(_:corner:)(v41, v31, v43, v44, v47, v62, v45, v42);
  v49 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v38, v48, v49);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32))(v63, v46, v59);
}

double sub_1003DAFB8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v114 = a2;
  v3 = sub_100007E8C(&qword_1011B0D98);
  v116 = *(_QWORD *)(v3 - 8);
  v117 = v3;
  __chkstk_darwin(v3);
  v111 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100007E8C(&qword_1011B0DA0);
  __chkstk_darwin(v112);
  v115 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_1011B0DA8);
  __chkstk_darwin(v113);
  v119 = (uint64_t)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v118 = (uint64_t)&v102 - v8;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playable(0);
  v13 = (uint64_t *)(a1 + *(int *)(v12 + 20));
  v14 = v13[1];
  if (!v14)
    goto LABEL_7;
  v15 = *v13;
  v16 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v16 = v15 & 0xFFFFFFFFFFFFLL;
  if (v16)
  {
    v106 = v12;
    v121 = v15;
    v122 = v14;
    v17 = sub_100055B68();
    swift_bridgeObjectRetain();
    v18 = Text.init<A>(_:)(&v121, &type metadata for String, v17);
    v20 = v19;
    v22 = v21;
    v24 = v23 & 1;
    v25 = sub_1003D6A98();
    v26 = TextBadge.view.getter(v25);
    v27 = a1;
    v29 = v28;
    v31 = v30;
    v33 = v32 & 1;
    v34 = static Text.+ infix(_:_:)(v18, v20, v24, v22, v26, v28, v33, v30);
    v108 = v35;
    v109 = v34;
    LODWORD(v107) = v36;
    v110 = v37;
    v38 = v29;
    a1 = v27;
    sub_100055BAC(v26, v38, v33);
    swift_bridgeObjectRelease(v31);
    sub_100055BAC(v18, v20, v24);
    swift_bridgeObjectRelease(v22);
    sub_10004A160(v27, (uint64_t)v11, (uint64_t *)&unk_1011A20D0);
    v39 = type metadata accessor for GenericMusicItem(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v11, 1, v39) == 1)
    {
      sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A20D0);
      v41 = 2;
    }
    else
    {
      v41 = GenericMusicItem.favoriteBadge.getter();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v39);
    }
    v44 = TextBadge.view.getter(v41);
    v46 = v45;
    v48 = v47;
    v50 = v49 & 1;
    v51 = v107 & 1;
    v53 = v108;
    v52 = v109;
    v54 = v110;
    v104 = static Text.+ infix(_:_:)(v109, v108, v107 & 1, v110, v44, v45, v50, v47);
    v103 = v55;
    v105 = v56;
    v58 = v57 & 1;
    sub_100055BAC(v44, v46, v50);
    swift_bridgeObjectRelease(v48);
    sub_100055BAC(v52, v53, v51);
    v59 = swift_bridgeObjectRelease(v54);
    LODWORD(v121) = static HierarchicalShapeStyle.primary.getter(v59);
    v60 = type metadata accessor for PlayableView.TextStack(0);
    v61 = v104;
    v62 = v103;
    v63 = v105;
    v64 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v121, *(_BYTE *)(a1 + *(int *)(v60 + 20)), v104, v103, v58, v105, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v109 = v65;
    v110 = v64;
    v108 = v66;
    v107 = v67 & 1;
    sub_100055BAC(v61, v62, v58);
    swift_bridgeObjectRelease(v63);
    KeyPath = swift_getKeyPath(&unk_100EB8C18);
    v43 = 2;
    v12 = v106;
  }
  else
  {
LABEL_7:
    v109 = 0;
    v110 = 0;
    v107 = 0;
    v108 = 0;
    KeyPath = 0;
    v43 = 0;
  }
  v68 = (uint64_t *)(a1 + *(int *)(v12 + 24));
  v69 = *v68;
  v70 = v68[1];
  v71 = sub_1004872C4((uint64_t)&off_1010ABF60);
  swift_bridgeObjectRetain();
  v72 = Text.init(optional:options:)(v69, v70, v71);
  v74 = v73;
  v75 = a1;
  v77 = v76;
  v79 = v78;
  v121 = v72;
  v122 = v73;
  v123 = v76;
  v124 = v78;
  v120 = static HierarchicalShapeStyle.secondary.getter(v72);
  v80 = *(_BYTE *)(v75 + *(int *)(type metadata accessor for PlayableView.TextStack(0) + 20));
  v81 = sub_100007E8C((uint64_t *)&unk_1011B57F0);
  v82 = sub_1001DAEF8();
  v83 = v111;
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v120, v80, v81, (uint64_t)&type metadata for HierarchicalShapeStyle, v82);
  v84.n128_f64[0] = sub_1000E450C(v72, v74, v77, v79);
  v85 = static Font.callout.getter(v84);
  v86 = swift_getKeyPath(&unk_100EB8BE8);
  v88 = (uint64_t)v115;
  v87 = v116;
  v89 = v117;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v115, v83, v117);
  v90 = (uint64_t *)(v88 + *(int *)(v112 + 36));
  *v90 = v86;
  v90[1] = v85;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v83, v89);
  v91 = swift_getKeyPath(&unk_100EB8C18);
  v92 = v119;
  sub_10004A160(v88, v119, &qword_1011B0DA0);
  v93 = v92 + *(int *)(v113 + 36);
  *(_QWORD *)v93 = v91;
  *(_QWORD *)(v93 + 8) = 1;
  *(_BYTE *)(v93 + 16) = 0;
  sub_10004FF60(v88, &qword_1011B0DA0);
  v94 = v118;
  sub_100065228(v92, v118, &qword_1011B0DA8);
  sub_10004A160(v94, v92, &qword_1011B0DA8);
  v95 = v114;
  v97 = v109;
  v96 = v110;
  *v114 = v110;
  v95[1] = v97;
  v98 = v107;
  v99 = v108;
  v95[2] = v107;
  v95[3] = v99;
  v95[4] = KeyPath;
  v95[5] = v43;
  *((_BYTE *)v95 + 48) = 0;
  v100 = sub_100007E8C(&qword_1011B0DB0);
  sub_10004A160(v92, (uint64_t)v95 + *(int *)(v100 + 48), &qword_1011B0DA8);
  sub_1003DFEAC(v96, v97, v98, v99);
  sub_10004FF60(v94, &qword_1011B0DA8);
  sub_10004FF60(v92, &qword_1011B0DA8);
  return sub_1003DFEE8(v96, v97, v98, v99);
}

double sub_1003DB608@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100007E8C(&qword_1011B0D90);
  return sub_1003DAFB8(v2, (uint64_t *)(a2 + *(int *)(v4 + 44)));
}

unint64_t sub_1003DB654()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011B0B78;
  if (!qword_1011B0B78)
  {
    v1 = sub_100044B54(&qword_1011B0B38);
    sub_1003DB6C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0B78);
  }
  return result;
}

unint64_t sub_1003DB6C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011B0B80;
  if (!qword_1011B0B80)
  {
    v1 = sub_100044B54(&qword_1011B0B30);
    v2[0] = sub_100044B54(&qword_1011B0B20);
    v2[1] = sub_100049F28(&qword_1011B0B70, &qword_1011B0B20, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0B80);
  }
  return result;
}

unint64_t sub_1003DB78C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011B0B90;
  if (!qword_1011B0B90)
  {
    v1 = sub_100044B54(&qword_1011B0B48);
    v2[0] = sub_100044B54(&qword_1011B0B38);
    v2[1] = sub_1003DB654();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    sub_100049F28(&qword_1011B0B98, &qword_1011B0B88, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0B90);
  }
  return result;
}

unint64_t sub_1003DB838()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011B0BA0;
  if (!qword_1011B0BA0)
  {
    v1 = sub_100044B54(&qword_1011B0B58);
    v2[0] = sub_100044B54(&qword_1011B0B48);
    v2[1] = sub_1003DB78C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011B0BA0);
  }
  return result;
}

uint64_t sub_1003DB8D4()
{
  return 16;
}

__n128 sub_1003DB8E0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1003DB8EC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v1 = (int *)type metadata accessor for PlayableView(0);
  v2 = *((_QWORD *)v1 - 1);
  v27 = *(_QWORD *)(v2 + 64);
  v28 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v29 = v0;
  v3 = v0 + v28;
  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v7 = (int *)type metadata accessor for Playable(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v3 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v3 + v7[6] + 8));
  v8 = v3 + v7[7];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = v3 + v7[8];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = (id *)(v3 + v7[10]);

  v19 = type metadata accessor for SegueContext(0);
  v20 = (char *)v18 + *(int *)(v19 + 20);
  if (!v6((uint64_t)v20, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  if (*(id *)((char *)v18 + *(int *)(v19 + 28)))
    swift_release();

  if (*(_QWORD *)(v3 + v7[12]))
    swift_release();
  swift_release();
  v21 = v3 + v1[6];
  v22 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    swift_release();
  }
  sub_1000A4224(*(id *)(v3 + v1[7]), *(_BYTE *)(v3 + v1[7] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v3 + v1[10]), *(_QWORD *)(v3 + v1[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(v3 + v1[14]), *(_QWORD *)(v3 + v1[14] + 8), *(_BYTE *)(v3 + v1[14] + 16));
  sub_1000A4240(*(_QWORD *)(v3 + v1[15]), *(_QWORD *)(v3 + v1[15] + 8), *(_BYTE *)(v3 + v1[15] + 16));
  v24 = v3 + v1[16];
  v25 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  return swift_deallocObject(v29, v28 + v27);
}

uint64_t sub_1003DBC60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlayableView(0) - 8) + 80);
  return sub_1003DA174(v0 + ((v1 + 16) & ~v1));
}

